Search.setIndex({"docnames": ["index", "sage/calculus/calculus", "sage/calculus/desolvers", "sage/calculus/functional", "sage/calculus/functions", "sage/calculus/integration", "sage/calculus/interpolation", "sage/calculus/interpolators", "sage/calculus/ode", "sage/calculus/riemann", "sage/calculus/test_sympy", "sage/calculus/tests", "sage/calculus/transforms/dft", "sage/calculus/transforms/dwt", "sage/calculus/transforms/fft", "sage/calculus/var", "sage/calculus/wester", "sage/symbolic/assumptions", "sage/symbolic/benchmark", "sage/symbolic/callable", "sage/symbolic/complexity_measures", "sage/symbolic/expression", "sage/symbolic/expression_conversions", "sage/symbolic/function", "sage/symbolic/function_factory", "sage/symbolic/integration/external", "sage/symbolic/integration/integral", "sage/symbolic/maxima_wrapper", "sage/symbolic/operators", "sage/symbolic/random_tests", "sage/symbolic/relation", "sage/symbolic/ring", "sage/symbolic/subring", "sage/symbolic/substitution_map", "sage/symbolic/units"], "filenames": ["index.rst", "sage/calculus/calculus.rst", "sage/calculus/desolvers.rst", "sage/calculus/functional.rst", "sage/calculus/functions.rst", "sage/calculus/integration.rst", "sage/calculus/interpolation.rst", "sage/calculus/interpolators.rst", "sage/calculus/ode.rst", "sage/calculus/riemann.rst", "sage/calculus/test_sympy.rst", "sage/calculus/tests.rst", "sage/calculus/transforms/dft.rst", "sage/calculus/transforms/dwt.rst", "sage/calculus/transforms/fft.rst", "sage/calculus/var.rst", "sage/calculus/wester.rst", "sage/symbolic/assumptions.rst", "sage/symbolic/benchmark.rst", "sage/symbolic/callable.rst", "sage/symbolic/complexity_measures.rst", "sage/symbolic/expression.rst", "sage/symbolic/expression_conversions.rst", "sage/symbolic/function.rst", "sage/symbolic/function_factory.rst", "sage/symbolic/integration/external.rst", "sage/symbolic/integration/integral.rst", "sage/symbolic/maxima_wrapper.rst", "sage/symbolic/operators.rst", "sage/symbolic/random_tests.rst", "sage/symbolic/relation.rst", "sage/symbolic/ring.rst", "sage/symbolic/subring.rst", "sage/symbolic/substitution_map.rst", "sage/symbolic/units.rst"], "titles": ["Symbolic Calculus", "Symbolic Computation", "Solving ordinary differential equations", "Functional notation support for common calculus methods", "Calculus functions", "Numerical Integration", "Real Interpolation using GSL", "Complex Interpolation", "Solving ODE numerically by GSL", "Riemann Mapping", "A Sample Session using SymPy", "Calculus Tests and Examples", "Discrete Fourier Transforms", "Discrete Wavelet Transform", "Fast Fourier Transforms Using GSL", "Symbolic variables", "Further examples from Wester\u2019s paper", "Assumptions", "Benchmarks", "Callable Symbolic Expressions", "Complexity Measures", "Symbolic Expressions", "Conversion of symbolic expressions to other types", "Classes for symbolic functions", "Factory for symbolic functions", "TESTS::", "Symbolic Integration", "Access to Maxima methods", "Operators", "Randomized tests of GiNaC / PyNaC", "Symbolic Equations and Inequalities", "The symbolic ring", "Subrings of the Symbolic Ring", "Substitution Maps", "Units of measurement"], "terms": {"i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34], "done": [0, 1, 14, 19, 21], "express": [0, 1, 2, 3, 5, 8, 10, 15, 16, 17, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34], "which": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 16, 17, 19, 21, 22, 23, 26, 28, 29, 30, 31], "consist": [0, 2, 9, 14, 17, 21, 29, 30, 32], "numer": [0, 1, 2, 3, 9, 15, 16, 21, 22, 24, 30], "object": [0, 1, 2, 5, 6, 7, 8, 9, 12, 14, 17, 19, 21, 22, 28, 29, 31, 32, 33, 34], "link": 0, "oper": [0, 1, 3, 17, 21, 22, 29], "while": [0, 9, 21, 29], "polynomi": [0, 1, 3, 11, 16, 21, 22, 26, 30, 34], "manipul": [0, 21], "can": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 17, 21, 22, 23, 26, 29, 30, 31, 32, 34], "more": [0, 1, 2, 3, 5, 9, 11, 12, 17, 20, 21, 26], "effici": [0, 30, 34], "ring": [0, 1, 3, 11, 12, 15, 16, 19, 21, 22, 24, 27], "element": [0, 1, 5, 8, 12, 19, 21, 22, 23, 29, 31], "comput": [0, 2, 3, 4, 6, 8, 9, 11, 12, 14, 15, 16, 17, 21, 22, 23, 24, 26], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34], "test": [0, 1, 2, 5, 8, 9, 10, 12, 16, 17, 18, 21, 23, 30, 31], "further": [0, 1, 11, 21], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34], "wester": 0, "": [0, 1, 2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34], "paper": 0, "about": [0, 1, 9, 17, 21, 22, 29, 31, 34], "variabl": [0, 1, 2, 3, 4, 5, 8, 11, 12, 17, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 34], "main": [0, 1, 21, 29, 33], "assumpt": [0, 1, 3, 16, 21, 26, 31], "equat": [0, 16, 17, 21], "inequ": [0, 2, 16, 17, 21], "integr": [0, 1, 2, 3, 6, 9, 11, 15, 16, 17, 21, 22, 24, 25, 29], "solv": [0, 1, 16, 17, 21, 31], "ordinari": [0, 1, 21], "differenti": [0, 1, 3, 4, 11, 15, 21, 22, 23, 24, 28], "od": [0, 2], "gsl": [0, 1, 5, 12, 13], "real": [0, 1, 5, 7, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 30, 31], "interpol": [0, 8, 9], "transform": [0, 1, 2, 16, 21], "discret": [0, 8, 9], "wavelet": [0, 12], "fourier": [0, 30], "fast": [0, 5, 12, 21, 29], "vector": [0, 2, 8, 16, 21, 29], "riemann": [0, 15, 22], "map": [0, 15, 17, 21, 22, 24], "other": [0, 1, 2, 3, 8, 9, 11, 12, 14, 15, 16, 19, 21, 23, 24, 26, 29, 31, 32, 34], "complex": [0, 1, 9, 11, 15, 16, 17, 21, 22, 24, 30, 31], "measur": [0, 21], "unit": [0, 1, 9, 21, 31], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 28, 29, 32, 33, 34], "subr": [0, 31], "class": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 26, 27, 28, 29, 31, 34], "notat": [0, 17, 21], "common": [0, 2, 12, 21], "method": [0, 1, 2, 5, 8, 9, 12, 13, 15, 17, 21, 22, 23, 24, 29, 31, 33], "factori": [0, 1, 16, 21, 23, 29, 32], "callabl": [0, 1, 3, 5, 15, 21, 22, 31], "convers": [0, 14, 15, 21, 23, 24, 30, 34], "type": [0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 17, 21, 23, 27, 28, 29, 30, 31, 34], "substitut": [0, 1, 2, 15, 17, 21, 31], "benchmark": 0, "random": [0, 1, 3, 5, 12, 14, 18, 21, 30], "ginac": [0, 21, 23], "pynac": [0, 17, 18, 21, 22, 23, 33], "access": [0, 2, 21], "maxima": [0, 1, 2, 3, 5, 11, 16, 17, 18, 21, 22, 25, 26, 30, 31], "extern": [0, 25], "index": [0, 12, 15, 21, 22, 23, 24, 31], "modul": [0, 2, 9, 17, 21, 22, 32, 33], "search": [0, 21, 30], "page": 0, "author": [1, 2, 4, 5, 7, 8, 9, 12, 13, 14, 19, 21, 30, 32, 34], "bobbi": [1, 19, 30], "moretti": [1, 19, 30], "william": [1, 5, 12, 14, 19, 21, 30, 34], "stein": [1, 5, 12, 14, 19, 21, 30, 34], "2006": [1, 2, 8, 12, 13, 14], "2007": [1, 2, 3, 5, 21, 30], "robert": [1, 2, 5, 8, 9, 21, 30], "bradshaw": [1, 2, 5, 9, 30], "10": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 21, 29, 30, 34], "minpoli": [1, 21], "algorithm": [1, 2, 5, 8, 9, 11, 14, 15, 21, 22, 24, 26, 30], "2008": [1, 2, 4, 5], "algebra": [1, 15, 16, 21, 22, 30], "golam": 1, "mortuza": 1, "hossain": 1, "2009": [1, 2, 7, 9, 21], "06": [1, 2, 5, 9], "15": [1, 2, 5, 9, 12, 15, 16, 18, 21, 30], "_limit_latex": 1, "22": [1, 9, 16], "_laplace_latex": 1, "_inverse_laplace_latex": 1, "tom": 1, "coat": 1, "2010": [1, 2, 8, 30], "11": [1, 2, 3, 5, 8, 10, 12, 13, 14, 16, 18, 21, 29, 30, 32], "fix": [1, 5, 8, 12, 14, 21, 22], "github": [1, 3, 5, 6, 10, 11, 19, 21, 22, 29, 30, 31], "issu": [1, 3, 5, 6, 11, 16, 19, 21, 22, 29, 30, 31], "9217": 1, "basic": [1, 9, 11, 15, 17, 21, 22, 24, 30], "calculu": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 21, 30], "packag": [1, 2, 16, 21, 26, 30, 34], "ar": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 34], "sr": [1, 5, 11, 15, 16, 17, 19, 21, 22, 28, 29, 30, 31, 32], "To": [1, 2, 5, 8, 9, 15, 16, 21, 22, 23, 26, 29, 34], "creat": [1, 3, 6, 7, 13, 14, 15, 17, 21, 22, 24, 29, 31, 32, 34], "sage": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34], "us": [1, 2, 3, 4, 5, 8, 9, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34], "var": [1, 2, 3, 4, 5, 10, 11, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34], "function": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 25, 26, 28, 29, 30, 31, 34], "whose": [1, 5, 20, 21, 22, 32], "argument": [1, 2, 4, 5, 8, 11, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32], "text": [1, 21], "note": [1, 3, 5, 8, 9, 15, 16, 18, 21, 22, 23, 24, 26, 30, 31], "intellig": 1, "latex": [1, 15, 21, 22, 23, 24, 30, 31], "name": [1, 3, 8, 9, 12, 13, 15, 16, 17, 21, 22, 23, 24, 26, 27, 30, 31, 34], "x1": [1, 2, 5, 31], "x_": 1, "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34], "theta": [1, 2, 9, 11, 15, 17, 21], "predefin": [1, 15], "x": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34], "global": [1, 15, 17, 21, 22, 29, 31], "indetermin": 1, "thu": [1, 2, 16, 21], "follow": [1, 2, 3, 8, 9, 11, 12, 16, 17, 19, 21, 23, 26, 30, 31, 32], "work": [1, 8, 9, 10, 11, 12, 16, 17, 19, 21, 26, 27, 30, 34], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34], "complic": [1, 9, 21], "built": [1, 15, 21, 22, 29, 30], "up": [1, 8, 12, 21, 23, 30, 31], "arithmet": [1, 3, 15, 19, 21, 22, 24], "valid": [1, 5, 9, 12, 13, 15, 21, 30, 31, 32], "rule": [1, 5, 11, 15, 16, 19, 21, 22, 23, 24], "python": [1, 2, 5, 8, 12, 15, 17, 21, 22, 23, 31, 33], "repres": [1, 2, 7, 8, 9, 12, 14, 17, 20, 21, 22, 26, 28, 29], "assign": [1, 8, 15, 17, 21], "equal": [1, 2, 8, 9, 12, 16, 17, 21, 26, 30, 34], "y": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32], "z": [1, 2, 3, 5, 9, 11, 15, 16, 17, 18, 19, 21, 22, 24, 26, 29, 30, 31, 32], "f": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32], "sin": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31], "55": [1, 30], "g": [1, 2, 3, 4, 8, 9, 11, 12, 15, 16, 18, 19, 21, 22, 23, 24, 26, 30, 32], "avail": [1, 8, 31], "behind": [1, 21, 30], "scene": [1, 21, 30], "through": [1, 3, 6, 8, 21, 23, 30], "co": [1, 2, 3, 4, 5, 6, 8, 10, 11, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 34], "deriv": [1, 2, 3, 4, 6, 7, 8, 9, 11, 15, 16, 21, 22, 23, 24, 28, 30, 31, 34], "usual": [1, 9, 21, 26, 29], "requir": [1, 2, 8, 9, 21, 22, 26, 29, 30], "an": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 34], "explicit": [1, 16, 21, 30], "If": [1, 2, 3, 4, 5, 6, 8, 9, 12, 14, 15, 17, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 34], "none": [1, 2, 3, 5, 8, 13, 14, 15, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34], "given": [1, 3, 4, 6, 7, 9, 15, 17, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 34], "try": [1, 8, 17, 21, 22, 23, 30, 34], "find": [1, 2, 3, 16, 21, 30], "one": [1, 2, 4, 5, 6, 8, 12, 15, 16, 17, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32], "you": [1, 2, 3, 4, 8, 9, 15, 17, 19, 21, 22, 23, 24, 26, 29, 30, 34], "e": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32], "order": [1, 2, 6, 8, 9, 10, 12, 13, 15, 19, 21, 22, 23, 24, 29, 30], "specifi": [1, 2, 5, 8, 9, 12, 13, 15, 17, 21, 22, 23, 24, 26, 28, 29, 31, 32], "calcul": [1, 3, 17, 21, 26], "matrix": [1, 4, 9, 10, 11, 12, 16, 21, 29, 30], "gradient": [1, 21], "jacobian": [1, 2, 4, 8], "etc": [1, 5, 15, 21, 22, 24, 30, 34], "In": [1, 2, 3, 5, 8, 9, 10, 12, 15, 17, 19, 21, 22, 23, 29, 30], "below": [1, 2, 3, 8, 9, 18, 21, 23, 30, 31], "we": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 34], "second": [1, 2, 4, 5, 6, 15, 18, 21, 22, 23, 24, 28, 29, 30, 32, 34], "determin": [1, 2, 4, 9, 16, 21, 23, 30, 32], "saddl": 1, "point": [1, 2, 3, 5, 6, 7, 8, 9, 12, 14, 21, 23, 25, 29], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34], "diff": [1, 2, 3, 4, 10, 11, 15, 16, 18, 21, 22, 24, 28, 30, 31], "list": [1, 2, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 21, 22, 28, 29, 30, 31, 34], "h": [1, 2, 3, 8, 16, 21, 22, 26, 30], "hessian": [1, 4, 21, 30], "eigenvalu": [1, 16], "here": [1, 2, 10, 11, 14, 15, 17, 21, 26, 30, 31], "polar": [1, 14], "coordin": [1, 21], "t": [1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 27, 30, 31, 32, 34], "r": [1, 2, 3, 9, 10, 11, 12, 15, 16, 17, 21, 22, 23, 24, 30, 31, 32], "det": [1, 4], "when": [1, 5, 6, 12, 15, 16, 17, 19, 21, 22, 23, 24, 26, 30, 31, 34], "ambigu": 1, "rais": [1, 2, 15, 17, 21, 26, 29, 34], "except": [1, 2, 16, 21, 22, 26], "traceback": [1, 2, 3, 5, 6, 11, 15, 17, 21, 22, 23, 24, 26, 30, 32, 34], "most": [1, 2, 3, 5, 6, 11, 15, 16, 17, 18, 21, 22, 23, 24, 26, 29, 30, 31, 32, 34], "recent": [1, 3, 5, 6, 11, 15, 17, 21, 22, 23, 24, 26, 30, 32, 34], "call": [1, 2, 3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 21, 22, 23, 24, 26, 29, 30, 31, 32, 34], "last": [1, 2, 3, 4, 5, 6, 11, 12, 15, 17, 21, 22, 23, 24, 26, 30, 32, 34], "valueerror": [1, 3, 5, 6, 11, 15, 17, 21, 22, 26, 29, 30, 34], "No": [1, 7, 9, 11, 21, 25, 34], "simplifi": [1, 3, 9, 11, 16, 17, 21, 22, 26, 30], "sum": [1, 3, 14, 15, 16, 17, 18, 21, 22, 24, 28, 29, 31], "also": [1, 2, 3, 5, 8, 9, 11, 14, 15, 16, 17, 21, 22, 23, 26, 27, 29, 30, 31, 34], "possibl": [1, 2, 5, 8, 17, 21, 22, 23, 26, 29, 30, 31, 32], "command": [1, 2, 3, 17, 21, 23, 26, 30], "background": 1, "k": [1, 2, 3, 4, 11, 12, 13, 15, 16, 17, 21, 22, 30], "m": [1, 2, 3, 7, 8, 9, 11, 16, 21, 22, 30], "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 28, 29, 30, 31], "oo": [1, 3, 10, 11, 16, 17, 21, 25, 26, 29], "90": [1, 21], "pi": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 21, 22, 25, 26, 29, 30, 31, 34], "binomi": [1, 17, 21, 29], "matric": [1, 30], "well": [1, 5, 8, 17, 18, 21, 31, 34], "variou": [1, 9, 16, 21], "wai": [1, 4, 8, 15, 17, 21, 30], "includ": [1, 2, 8, 9, 16, 21], "exponenti": [1, 21, 22], "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 34], "sqrt": [1, 2, 3, 5, 9, 11, 12, 16, 17, 18, 21, 22, 25, 26, 27, 30], "And": [1, 8, 10, 14, 16, 21], "now": [1, 2, 3, 11, 14, 15, 16, 21, 22, 24, 26, 31], "similarli": 1, "dict": [1, 12, 21, 23], "keyword": [1, 8, 15, 21, 22, 23, 24, 30, 31, 32], "anoth": [1, 2, 15, 17, 19, 21, 22, 24, 26, 30, 34], "8": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 16, 21, 22, 24, 25, 26, 28, 29, 30, 34], "It": [1, 5, 8, 9, 17, 21, 23, 24, 29, 30, 34], "longer": [1, 9, 15, 20, 21, 22, 24, 26, 29, 31], "allow": [1, 2, 3, 8, 12, 17, 21, 22, 23, 31], "posit": [1, 2, 3, 9, 15, 16, 17, 21, 26, 28, 31], "typeerror": [1, 15, 21, 22, 23, 24, 30], "syntax": [1, 3, 16, 17, 21, 26], "unnam": 1, "ha": [1, 2, 8, 9, 16, 17, 20, 21, 26, 30, 31, 34], "been": [1, 2, 11, 21], "remov": [1, 9, 31], "instead": [1, 2, 3, 8, 9, 10, 16, 17, 19, 21, 22, 23, 26, 31], "like": [1, 9, 17, 21, 22, 23, 34], "expr": [1, 3, 20, 21, 22, 31, 34], "make": [1, 2, 5, 8, 9, 15, 17, 21, 22, 23, 30, 34], "callablesymbolicexpress": [1, 19], "symbolicexpress": [1, 19], "each": [1, 2, 3, 4, 5, 9, 15, 17, 20, 21, 23, 29, 30], "illustr": [1, 3, 21, 30], "u": [1, 2, 3, 4, 5, 8, 11, 15, 18, 21, 23, 27, 31], "log": [1, 2, 3, 4, 5, 11, 16, 21, 25, 26, 27, 29, 30], "5": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 28, 29, 30, 34], "There": [1, 4, 5, 8, 17, 23, 30], "easier": [1, 34], "reli": 1, "prepars": 1, "Then": [1, 15, 21, 29, 30], "have": [1, 2, 3, 5, 6, 8, 9, 11, 12, 19, 21, 22, 26, 30, 31, 34], "evalu": [1, 3, 6, 8, 9, 15, 16, 17, 19, 21, 22, 23, 24, 26, 30, 34], "7": [1, 2, 3, 5, 6, 7, 8, 11, 12, 13, 14, 16, 18, 21, 22, 26, 28, 30], "some": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 20, 21, 28, 30, 34], "float": [1, 2, 3, 5, 9, 10, 13, 16, 18, 21, 23, 26, 29], "9": [1, 2, 5, 6, 8, 11, 12, 14, 16, 18, 21, 24, 26, 28, 29, 30], "arcsinh": [1, 16, 21, 29], "length": [1, 2, 8, 12, 13, 17, 20, 21, 29, 34], "parabola": 1, "dy": [1, 2, 3], "17": [1, 2, 3, 16, 17, 21], "n": [1, 2, 3, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 29, 30, 31], "200": [1, 5, 9, 10, 18, 21, 29], "6467837624329358733826155674904591885104869874232887508703": 1, "646783762432936": 1, "pickl": [1, 21, 23], "bool": [1, 3, 15, 16, 17, 18, 19, 21, 22, 24, 28, 30, 31], "load": [1, 19, 21, 22], "dump": [1, 19, 21, 22], "true": [1, 2, 3, 9, 10, 12, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34], "coercion": [1, 5, 19, 21, 22], "coerc": [1, 21, 22], "number": [1, 2, 5, 7, 9, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 29, 30, 31], "cc": [1, 12, 21], "00000000000000": [1, 12, 21, 22, 24, 30], "complexfield": [1, 21], "0000000000000000000000000000000000000000000000000000000000": [1, 21], "1752011936438014568823818505956008151557179813340958702296": 1, "cosh": [1, 16, 21, 22, 29, 30], "sinh": [1, 11, 16, 21, 22, 29, 30], "12762596520638": 1, "17520119364380": [1, 21], "1276259652063807852262251614026720125478471180986674836290": 1, "100": [1, 2, 5, 8, 9, 12, 13, 16, 18, 21, 29], "1276259652063807852262251614": 1, "1752011936438014568823818506": 1, "construct": [1, 19, 21, 31, 32], "invers": [1, 9, 12, 14, 21], "where": [1, 2, 4, 5, 6, 8, 9, 12, 13, 14, 17, 19, 21, 22, 26, 29, 30], "denomin": [1, 21, 30], "new": [1, 2, 15, 17, 21, 22, 23, 28, 30, 31], "rang": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 29], "n1": 1, "n2": 1, "n3": 1, "n4": 1, "n5": 1, "n6": 1, "6": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 24, 25, 26, 28, 29, 30], "n7": 1, "n8": 1, "n9": 1, "after": [1, 8, 11, 15, 17, 20, 21, 23, 31], "immedi": [1, 15, 16, 21, 22], "cours": [1, 2, 16], "387420490": 1, "387420489": 1, "ex": [1, 21, 22], "arg": [1, 2, 3, 4, 9, 13, 14, 15, 17, 19, 21, 22, 23, 24, 29, 30, 31], "kwd": [1, 2, 3, 8, 15, 17, 21, 22, 23, 24, 30, 31, 32], "pars": 1, "formul": 1, "system": [1, 2, 8, 15, 16, 17, 21, 22, 24, 30], "replac": [1, 15, 17, 21, 22, 24, 34], "do": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 15, 16, 17, 18, 19, 21, 22, 23, 24, 30], "import": [1, 2, 5, 8, 9, 10, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32], "top": [1, 21, 29], "level": [1, 12, 13, 21, 23], "synonym": 1, "sub": [1, 10, 13, 21, 22, 29, 30, 31, 33], "formal": [1, 15, 16, 22, 24], "taylor": [1, 2, 3, 9, 10, 16, 21], "expans": [1, 9, 15, 16, 21, 22, 24], "d": [1, 2, 5, 11, 16, 17, 21, 22, 28, 30], "24": [1, 3, 10, 14, 16, 18, 21, 25], "laplac": [1, 2, 21], "accept": [1, 15, 17, 21, 22, 24, 31, 32], "non": [1, 2, 5, 8, 21, 30, 31], "doe": [1, 2, 3, 9, 16, 21, 26, 29, 30, 31], "12796": 1, "dummy_diff": 1, "thi": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34], "appear": [1, 17, 19, 21, 22, 30], "string": [1, 2, 8, 15, 17, 20, 21, 22, 23, 27, 30, 31, 34], "implicitli": [1, 2, 21, 30], "cr": [1, 15, 22, 24], "dummy_integr": 1, "wrapper": [1, 2, 12, 14, 21, 23, 27, 33], "b": [1, 2, 3, 5, 6, 9, 11, 12, 13, 14, 15, 16, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32], "dummy_inverse_laplac": 1, "ilt": 1, "dummy_laplac": 1, "dummy_pochhamm": 1, "pochhamm": [1, 21], "gamma": [1, 15, 17, 21, 26], "inverse_laplac": [1, 21], "return": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34], "respect": [1, 4, 17, 21, 22, 23, 26, 28, 30], "paramet": [1, 2, 3, 5, 7, 8, 9, 15, 18, 21, 22, 23, 24, 26, 28, 30], "cannot": [1, 2, 3, 5, 9, 11, 17, 21, 22, 30, 34], "solut": [1, 2, 8, 16, 17, 21, 30], "mai": [1, 2, 3, 6, 8, 9, 17, 21, 23, 26, 29, 30, 34], "view": [1, 21, 31], "definit": [1, 3, 6, 16, 17, 21, 25, 26, 30, 31], "defin": [1, 2, 3, 5, 15, 16, 17, 21, 22, 23, 24, 30, 34], "frac": [1, 2, 21, 29, 30], "int_": 1, "infti": 1, "st": 1, "chosen": [1, 18, 21], "so": [1, 2, 3, 5, 8, 14, 17, 19, 21, 22, 23, 26, 29, 30, 31], "contour": 1, "path": 1, "region": [1, 3, 5, 9], "converg": [1, 21, 26], "input": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 34], "independ": [1, 2, 17, 21], "default": [1, 2, 3, 5, 6, 8, 9, 12, 14, 15, 16, 17, 21, 22, 23, 24, 26, 29, 30, 31, 32, 34], "sympi": [1, 21, 22, 25, 26, 30, 31], "giac": [1, 21, 22, 25, 26, 30], "w": [1, 4, 15, 17, 18, 19, 21, 22, 24, 30], "l": [1, 6, 11, 12, 14, 16, 18], "involv": [1, 2, 15, 21, 22, 24, 29, 30], "time": [1, 2, 3, 8, 9, 11, 13, 14, 18, 21, 26, 29, 30, 34], "shift": 1, "via": [1, 2, 5, 8, 9, 21, 26, 32], "exp": [1, 2, 3, 4, 5, 9, 10, 11, 12, 16, 21, 22, 26, 27, 29, 30], "heavisid": [1, 29], "same": [1, 2, 3, 9, 12, 14, 16, 17, 19, 21, 23, 26, 28, 30], "instanc": [1, 15, 19, 21, 22, 24, 31], "ration": [1, 10, 12, 15, 16, 17, 21, 22, 26, 29, 30], "constant": [1, 2, 4, 5, 9, 12, 17, 21, 22, 26, 29, 30, 31, 32], "delta": [1, 2], "distribut": [1, 11, 12, 16, 21], "dirac_delta": [1, 29], "all": [1, 3, 8, 9, 10, 12, 15, 16, 17, 21, 22, 24, 28, 29, 30, 31, 34], "geq": [1, 30], "dt": [1, 2, 8], "tupl": [1, 2, 5, 7, 8, 9, 15, 18, 19, 21, 22, 26, 29, 30, 31, 32], "cond": 1, "re": [1, 16, 21, 30], "half": [1, 21, 22], "plane": [1, 7, 9, 17, 21, 31], "auxiliari": 1, "condit": [1, 2, 8, 17, 21, 30], "few": [1, 6, 30], "t0": [1, 2, 21, 31], "euler_gamma": [1, 3, 21, 29], "A": [1, 2, 3, 5, 7, 9, 11, 12, 14, 15, 17, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34], "battl": 1, "between": [1, 2, 3, 6, 7, 8, 9, 12, 19, 21, 29, 30, 34], "women": 1, "men": 1, "david": [1, 2, 12, 13, 34], "joyner": [1, 2, 12, 13, 14], "16y": 1, "270": 1, "model": 1, "fight": 1, "two": [1, 2, 3, 4, 5, 6, 8, 12, 14, 15, 17, 21, 22, 23, 29, 30], "side": [1, 2, 3, 17, 21, 31], "initi": [1, 2, 7, 8, 9, 13, 14, 21, 23, 30], "better": [1, 5, 9, 15, 22], "becaus": [1, 8, 18, 21, 22, 23, 29, 30, 31], "higher": [1, 2, 5, 9], "factor": [1, 2, 3, 12, 16, 21, 30], "16": [1, 2, 3, 5, 9, 11, 12, 14, 16, 21, 26, 30], "v": [1, 2, 3, 5, 6, 16, 18, 21, 25, 26, 29, 31, 32, 34], "get": [1, 2, 3, 4, 9, 15, 16, 21, 22, 30, 34], "occasion": 1, "reinforc": 1, "term": [1, 2, 3, 9, 15, 16, 21, 22], "de1": [1, 2], "de2": [1, 2], "next": [1, 2, 16, 26, 31], "form": [1, 2, 3, 7, 8, 9, 11, 13, 16, 17, 21, 26, 34], "augment": 1, "abov": [1, 3, 8, 12, 16, 17, 21, 26, 30], "echelon_form": 1, "xt": 1, "yt": 1, "91": 1, "629": 1, "p1": [1, 2], "plot": [1, 2, 3, 6, 8, 9, 12, 13, 14, 21], "rgbcolor": [1, 9, 21], "p2": [1, 2], "tempfil": [1, 8], "namedtemporaryfil": [1, 8], "suffix": [1, 8], "png": [1, 8], "save": [1, 8], "dirac": 1, "handl": [1, 21, 30], "output": [1, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 34], "relat": [1, 5, 17, 21, 22, 29, 30], "choic": [1, 5, 12, 13, 16, 21, 30], "made": [1, 9, 11, 17, 21, 23, 25, 30], "give": [1, 2, 4, 9, 12, 13, 16, 21, 26, 27, 28, 29, 30, 31, 34], "undefin": 1, "answer": [1, 2, 5, 9, 17, 21, 26, 30, 34], "step": [1, 2, 8, 21], "differ": [1, 5, 8, 9, 12, 15, 16, 21, 22, 23, 29, 30], "interfac": [1, 2, 15, 21, 22, 23, 24, 30], "lim": [1, 3], "dir": [1, 3], "fals": [1, 2, 3, 8, 9, 10, 16, 17, 19, 21, 22, 23, 26, 29, 30, 31, 32, 34], "argv": [1, 3], "limit": [1, 3, 5, 10, 16, 17, 21], "approach": [1, 3, 21], "direct": [1, 3, 7, 9, 21, 23], "valu": [1, 2, 3, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 21, 22, 23, 24, 26, 27, 29, 34], "plu": [1, 2, 3, 5, 21], "right": [1, 2, 12, 15, 21, 22, 23, 24], "minu": [1, 3, 5, 21], "left": [1, 2, 9, 15, 17, 21, 22, 23, 24, 31], "omit": [1, 2, 3, 21, 30], "impli": [1, 3], "seri": [1, 2, 3, 10, 15, 16, 18, 21, 22, 23, 24], "crash": [1, 3], "obscur": [1, 3], "case": [1, 2, 3, 9, 12, 14, 16, 17, 19, 21, 22, 26, 29, 30], "due": [1, 3, 21, 30], "bug": [1, 3, 11, 12, 21, 29, 30], "und": 1, "ind": 1, "indefinit": [1, 26], "bound": [1, 2, 5, 6, 14, 29], "infin": [1, 3, 5, 9, 10, 16, 21, 26, 30], "7776": 1, "3125": 1, "06961575467": 1, "0696157546720": 1, "cdf": [1, 9, 14, 21, 29], "0628722350809046": 1, "7450070621797239": 1, "notic": [1, 11, 21, 26, 30], "ask": [1, 21, 30, 34], "inform": [1, 17, 21, 34], "fail": [1, 3, 5, 16, 17, 21, 26], "sinc": [1, 2, 3, 8, 10, 15, 17, 21, 22, 23, 26, 30, 31], "request": [1, 3, 17, 21, 26], "addit": [1, 3, 5, 6, 8, 9, 17, 21, 23, 26, 34], "constraint": [1, 3, 17, 21, 26], "assum": [1, 3, 9, 11, 12, 16, 17, 21, 23, 26, 30], "befor": [1, 3, 15, 17, 21, 22, 23, 24, 26, 29], "help": [1, 3, 9, 17, 26, 27], "legal": [1, 3, 17, 26], "see": [1, 2, 3, 5, 9, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 29, 30, 31, 32], "detail": [1, 3, 13, 16, 17, 19, 21, 22, 26, 30, 31, 32], "neg": [1, 3, 8, 17, 21, 22, 26, 29], "zero": [1, 3, 5, 12, 16, 17, 21, 29, 30], "With": [1, 21], "look": [1, 9, 11, 21], "lot": [1, 30], "integ": [1, 2, 3, 8, 9, 15, 16, 17, 21, 22, 24, 29, 30, 31], "even": [1, 3, 5, 8, 12, 13, 16, 17, 18, 21, 30], "forget": [1, 3, 11, 16, 17, 21, 26, 30], "sec": [1, 9, 21, 22, 29], "mean": [1, 2, 21, 30], "than": [1, 2, 6, 9, 18, 21, 30], "frica": [1, 2, 22, 25, 26], "standard": [1, 9, 11, 16, 21], "lib": [1, 8, 25], "libgiac": [1, 25, 26], "option": [1, 2, 8, 9, 12, 14, 15, 21, 22, 24, 25, 26, 30, 31], "One": [1, 2, 5, 21, 22], "mathematica": [1, 11, 21, 22, 24, 25, 26], "onlin": [1, 25], "mathematica_fre": [1, 26], "internet": [1, 25, 26], "mapped_opt": 1, "intern": [1, 2, 9, 15, 21, 22, 24, 29, 30, 34], "pass": [1, 2, 5, 8, 9, 14, 15, 17, 21, 22, 23, 24, 30, 33], "turn": [1, 2, 4, 11, 17, 21], "lower": [1, 5, 6, 14, 21, 26], "bar": [1, 12, 15, 21, 22, 24, 28], "maxima_opt": 1, "an_opt": 1, "foo": [1, 8, 15, 19, 21, 22, 23, 24, 28], "bit": [1, 21, 22], "degre": [1, 3, 11, 16, 21, 34], "epsilon": [1, 2, 9], "minim": [1, 21], "self": [1, 3, 8, 12, 14, 15, 19, 21, 22, 23, 24, 26], "both": [1, 9, 15, 16, 17, 21, 22, 23, 26], "first": [1, 2, 5, 6, 8, 10, 15, 16, 19, 21, 22, 24, 28, 29, 30, 31, 32], "approx": 1, "expect": [1, 2, 15, 20, 21, 22, 23, 24, 27], "without": [1, 8, 16, 21, 31, 32], "error": [1, 2, 5, 8, 9, 14, 17, 21, 29, 30], "long": [1, 2, 3, 9, 11, 13, 14, 18, 21, 22, 26, 29], "result": [1, 2, 5, 9, 16, 21, 22, 23, 26, 30, 31], "proven": 1, "1000": [1, 2, 5, 8, 9, 21, 29, 34], "faster": [1, 2, 3, 30], "explicitli": [1, 21, 22], "ignor": [1, 8, 15, 21, 26, 30], "three": [1, 2, 6, 15, 20, 23, 29], "prove": [1, 16, 21], "could": [1, 2, 21, 22, 26], "found": [1, 2, 5, 8, 9, 16, 21, 22, 26], "distinct": [1, 21, 31, 32], "kind": [1, 21, 29, 31, 32], "reason": [1, 16, 21], "candid": 1, "wa": [1, 2, 8, 9, 15, 21], "perhap": [1, 2], "underli": [1, 6, 21, 28, 30], "unabl": [1, 2, 21, 22], "correct": [1, 11, 21, 26], "notimplementederror": [1, 2, 21, 22, 30, 32], "depend": [1, 2, 5, 8, 12, 16, 17, 21, 30], "By": [1, 8, 15, 21, 29, 30], "attempt": [1, 2, 21, 23], "qqbar": [1, 21, 22], "cyclotom": 1, "field": [1, 2, 3, 5, 12, 15, 16, 21, 22, 29, 30, 31], "resolv": 1, "trig": [1, 21], "multipl": [1, 3, 12, 15, 17, 21, 22, 28, 30, 31], "extens": [1, 29], "root": [1, 12, 16, 21, 30], "expon": [1, 15, 21, 22, 24, 30], "compositum": 1, "full": [1, 21], "exactli": [1, 21, 23, 34], "approxim": [1, 2, 5, 7, 21, 22, 29, 30, 31], "pari": 1, "algdep": 1, "mathtt": 1, "precis": [1, 2, 9, 12, 21, 22], "close": [1, 2, 9, 21, 26], "enough": [1, 16], "vanish": [1, 12, 13], "onli": [1, 2, 6, 8, 9, 12, 13, 16, 17, 21, 23, 26, 30, 31, 32], "otherwis": [1, 2, 9, 12, 14, 15, 18, 21], "suitabl": [1, 21], "simpl": [1, 2, 7, 13, 17, 21, 30, 31], "12": [1, 2, 3, 4, 5, 8, 12, 16, 18, 21, 30], "36": [1, 14, 21], "too": [1, 3], "64": [1, 14, 21], "14": [1, 2, 3, 5, 11, 12, 16, 21, 30], "13": [1, 2, 12, 16, 18, 21, 30], "verifi": [1, 11, 16, 17, 19], "abstract": [1, 23, 32], "48": [1, 14, 16, 21], "23": [1, 2, 5, 16, 30], "numberfield": [1, 16], "absolute_minpoli": 1, "eqn": [1, 16, 21, 30], "rh": [1, 2, 21, 30], "qq": [1, 2, 3, 10, 12, 15, 16, 19, 21, 22], "25": [1, 2, 3, 6, 7, 9, 21, 29, 34], "7185272465828846": 1, "721353471724806": 1, "cubic": [1, 6, 7], "recov": 1, "its": [1, 3, 5, 9, 16, 17, 19, 21, 22, 23, 28, 32], "radic": [1, 21], "18": [1, 2, 16, 18, 21, 22], "simplif": [1, 16, 21], "necessari": [1, 8, 17, 21], "40": [1, 14, 16], "352": 1, "960": 1, "576": 1, "expand": [1, 2, 3, 10, 11, 12, 15, 16, 18, 21, 22, 24], "horner": [1, 16, 21], "numerical_approx": [1, 21], "00000000000000000000000000000": 1, "must": [1, 2, 6, 8, 9, 12, 13, 15, 21, 22, 23, 24, 30], "high": [1, 9], "out": [1, 15, 21], "33": [1, 2, 21], "43": [1, 9, 16], "128": [1, 13, 14, 21], "1024": 1, "sometim": [1, 2, 9, 17, 21, 26], "aren": 1, "Of": 1, "failur": 1, "produc": [1, 2, 19, 21, 29], "necessarili": [1, 21], "indic": [1, 15, 21, 22, 24, 28], "transcendent": 1, "mma_free_limit": 1, "goe": [1, 6, 17], "nintegr": [1, 5, 11, 21], "desired_relative_error": 1, "1e": [1, 2, 5, 8, 14, 16, 21], "maximum_num_subinterv": 1, "machin": [1, 21], "endpoint": [1, 21, 26], "upper": [1, 5, 6, 14, 21, 26], "desir": [1, 2, 14, 21], "rel": [1, 2, 5, 21, 29, 30], "subinterv": 1, "estim": [1, 2, 5, 8], "absolut": [1, 2, 5, 9, 14, 21, 26], "integrand": 1, "code": [1, 8, 15, 21, 22, 23], "problem": [1, 2, 9, 11, 16, 18, 21, 30], "were": [1, 9, 21, 25], "encount": [1, 21, 22, 30], "mani": [1, 8, 9, 12, 21, 23, 30, 34], "excess": 1, "roundoff": 1, "extrem": 1, "bad": 1, "behavior": [1, 9, 17, 21], "probabl": [1, 12, 20, 29], "diverg": [1, 11, 17, 21, 26], "slowli": [1, 9], "invalid": [1, 34], "being": [1, 17, 30], "small": [1, 9, 29, 30], "achiev": [1, 21], "alia": [1, 3, 6, 21, 22], "remark": [1, 5], "numerical_integr": [1, 3, 5, 21], "implement": [1, 2, 5, 12, 13, 21, 23, 30, 31, 32], "c": [1, 2, 5, 7, 8, 9, 11, 12, 16, 17, 21, 22, 23, 29, 30, 31, 32], "librari": [1, 5, 8, 15, 21, 22, 23], "potenti": [1, 5, 21], "much": [1, 3, 16, 21, 30], "appli": [1, 9, 21, 23, 26, 29, 30], "arbitrari": [1, 2, 21, 22, 29, 30, 31], "user": [1, 2, 8, 16, 17, 21, 23, 26], "quadpack": 1, "5284822353142306": 1, "163": [1, 16], "231": 1, "528482232253147": 1, "83928460": 1, "07": [1, 5, 13, 21, 30], "exot": 1, "lead": [1, 9, 21], "wrong": [1, 16, 18, 21, 31, 34], "complet": [1, 12, 27, 30], "262537412640768744": 1, "despit": 1, "realli": [1, 16], "veri": [1, 5, 9, 18, 21, 30], "nonzero": [1, 23], "insid": [1, 17], "480": 1, "truth": [1, 17], "4992740280181431112064614366622348652078895136533593355718e": 1, "300": [1, 21], "49927402801814311120646143662663009137292462589621789352095066181709095575681963967103004e": 1, "why": 1, "0000000000001": 1, "32907051820075": 1, "21": [1, 2, 5, 9, 12, 18, 21], "just": [1, 8, 12, 21, 22, 23, 26, 31, 34], "everi": [1, 21, 22, 29], "gp": [1, 21, 22], "eval": [1, 21], "intnum": 1, "42": [1, 21], "565728500561051474934096410": 1, "127": [1, 16, 34], "32": [1, 3, 9, 11, 14, 18, 21, 34], "5657285005610514829176211363206621657": 1, "old_prec": 1, "set_real_precis": 1, "50": [1, 2, 10, 16, 18, 21, 29, 34], "5657285005610514829173563961304957417746108003917": 1, "57": [1, 2, 21], "symbolic_expression_from_maxima_str": 1, "equals_sub": 1, "maxima_lib": 1, "represent": [1, 17, 21], "correspond": [1, 2, 7, 9, 21, 22, 27, 30, 34], "interpret": [1, 2, 4, 22], "sefm": 1, "symbolic_expression_from_str": 1, "sym": 1, "accept_sequ": 1, "parser": 1, "normal": [1, 14, 21, 29], "dictionari": [1, 15, 17, 21, 22, 24, 30], "regard": [1, 21], "kei": [1, 5, 12, 17, 19, 21, 32], "pair": [1, 2, 6, 21], "control": [1, 2, 5, 21], "whether": [1, 2, 8, 17, 21, 29, 31, 32, 34], "possibli": [1, 21, 30], "nest": [1, 21], "set": [1, 2, 5, 6, 7, 8, 9, 12, 14, 16, 17, 18, 19, 21, 22, 23, 28, 29, 30, 31, 32], "sr_parser": 1, "spam": 1, "symbolic_product": 1, "hold": [1, 16, 21, 22, 23, 26, 30], "product": [1, 11, 21, 28, 29], "prod_": [1, 21], "prduct": 1, "don": [1, 4, 16, 21, 23], "20": [1, 2, 3, 8, 9, 12, 13, 16, 21, 22, 29, 30, 34], "288": 1, "180": [1, 16, 34], "25401600": 1, "log_expand": [1, 21], "symbolic_sum": 1, "sum_": [1, 12, 21], "mapl": [1, 11, 21, 26, 30], "zeta": [1, 5, 21, 29], "known": [1, 17, 21, 29, 30], "ident": [1, 9, 17, 19, 21], "truncat": [1, 2, 3, 21], "thereof": [1, 21], "theorem": [1, 21, 26, 30], "hypergeometr": [1, 3, 11, 21, 22, 26], "check": [1, 5, 11, 14, 15, 17, 19, 21, 22, 25, 29], "geometr": [1, 21], "q": [1, 2, 12, 17, 21, 22, 30], "For": [1, 2, 3, 4, 5, 8, 9, 12, 13, 21, 22, 24, 28, 29, 30, 31, 34], "ab": [1, 2, 3, 5, 9, 12, 14, 15, 16, 17, 21, 26, 29, 30, 31], "your": [1, 4, 5, 8, 21], "forgotten": [1, 17], "summat": [1, 21], "perform": [1, 2, 13, 14, 21, 22], "coth": [1, 21, 22, 29], "tanh": [1, 21, 22, 29], "39": [1, 2, 11, 21, 30], "22005": 1, "backend": [1, 16, 21], "want": [1, 3, 4, 5, 8, 9, 20, 21, 29], "unhold": [1, 21], "0000000000000": [1, 12], "current": [1, 9, 11, 16, 17, 19, 21, 30, 34], "understand": [1, 21], "subset": [1, 21], "might": [1, 2, 5, 21, 29, 30], "convert": [1, 2, 9, 10, 16, 20, 21, 22, 23, 26, 27, 30, 34], "file": [2, 8, 12, 14], "contain": [2, 3, 7, 9, 12, 17, 21, 23, 26, 30, 32, 34], "occur": [2, 9, 21, 22, 31], "commonli": 2, "1st": 2, "semest": 2, "solver": [2, 8, 21, 30], "ode_solv": [2, 8], "octav": 2, "_c": 2, "_k1": 2, "_k2": 2, "underscor": 2, "distinguish": 2, "them": [2, 4, 15, 16, 19, 21, 30, 34], "symbol": [2, 3, 5, 10, 11, 12, 16, 17, 18, 20, 25, 27, 28, 29, 33, 34], "usabl": [2, 21], "desolv": 2, "gener": [2, 5, 8, 9, 14, 17, 21, 22, 23], "2nd": [2, 8, 21], "desolve_laplac": 2, "desolve_rk4": 2, "ivp": 2, "desolve_system_rk4": 2, "desolve_odeint": 2, "odeint": 2, "scipi": [2, 16], "desolve_system": 2, "ani": [2, 5, 15, 16, 17, 21, 22, 23, 29, 30, 31], "size": [2, 5, 8, 9, 14, 21, 29], "eulers_method": 2, "de": [2, 21], "present": [2, 21, 23], "tabl": [2, 21, 34], "eulers_method_2x2": 2, "eulers_method_2x2_plot": 2, "sequenc": [2, 8, 12, 17], "obtain": [2, 5, 9, 16, 21, 26, 30], "euler": [2, 21], "tide": 2, "desolve_mintid": 2, "desolve_tides_mpfr": 2, "version": [2, 5, 7, 9, 13, 16, 19, 21, 23, 30, 32], "marshal": 2, "hampton": 2, "creation": [2, 9], "cleanup": 2, "marik": [2, 8, 21, 30], "bugfix": 2, "enhanc": [2, 21], "miguel": 2, "marco": 2, "2014": 2, "dvar": 2, "ic": 2, "ivar": 2, "show_method": 2, "contrib_od": 2, "linear": [2, 16, 21, 30], "bvp": 2, "hereaft": 2, "boundari": [2, 9], "dx": [2, 3], "write": [2, 8, 15, 21, 22, 24], "x_0": 2, "final": [2, 30], "x_1": 2, "symbolicequ": 2, "happen": [2, 21], "clairaut": 2, "describ": [2, 9, 34], "separ": [2, 15, 17, 21], "exact": [2, 9, 12, 17, 21], "homogen": 2, "bernoulli": 2, "carefulli": 2, "properti": [2, 17, 19, 21], "recogn": [2, 21, 34], "lagrang": 2, "riccati": 2, "take": [2, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29], "off": [2, 9, 14, 15, 21, 22, 24], "singular": [2, 5, 21, 25], "spkg": [2, 26], "instal": [2, 26], "ldot": [2, 13], "eq": [2, 22, 30], "hand": [2, 17, 21, 31], "tab": [2, 27], "notebook": [2, 8, 15], "graphic": [2, 8, 9, 14, 21], "primit": [2, 8, 9, 14, 21], "clairault": 2, "freeofx": 2, "implicit": [2, 8, 21, 30], "explan": [2, 24], "split": [2, 21, 30], "bessel": [2, 16], "put": [2, 4, 16, 30], "anywai": 2, "should": [2, 4, 8, 15, 16, 17, 21, 22, 23, 24, 29, 30, 31], "bessel_j": [2, 16, 29], "bessel_i": [2, 29], "difficult": 2, "click": 2, "consid": [2, 3, 8, 16, 20, 21, 31], "moreov": [2, 6, 9, 22], "arctan": [2, 3, 11, 16, 21, 26, 29, 30, 31], "These": [2, 16, 21, 22, 33], "variationofparamet": 2, "constcoeff": 2, "invok": [2, 8], "_c0": 2, "_c1": 2, "_c2": 2, "lambda": [2, 5, 7, 8, 9, 12, 15, 16, 17, 21, 22, 24, 29, 30, 31], "persist": 2, "thei": [2, 5, 9, 11, 12, 16, 21, 22, 29, 30, 34], "previou": [2, 8, 16, 21], "tolrel": 2, "tolab": 2, "mintid": 2, "Its": [2, 21], "start": [2, 4, 8, 21, 23, 30, 31], "toler": [2, 5, 8, 21], "period": [2, 12, 16], "orbit": 2, "kepler": 2, "along": [2, 3, 21], "22474487139159": 2, "sol": [2, 21, 30], "tol": [2, 5, 14, 21], "000000000000000": [2, 12, 21], "800000000000000": 2, "314": 2, "159265358979": 2, "800000000028622": 2, "91973525754241e": 2, "56887091890590e": 2, "22474487136329": 2, "refer": [2, 4, 5, 6, 29], "abad": 2, "barrio": 2, "blesa": 2, "rodriguez": 2, "924": 2, "acm": 2, "transact": 2, "mathemat": [2, 9, 16, 21], "softwar": 2, "28": [2, 28], "tutori": [2, 10, 21, 34], "compute_jac": 2, "rtol": [2, 21], "atol": 2, "tcrit": 2, "h0": 2, "hmax": 2, "hmin": 2, "ixpr": 2, "mxstep": 2, "mxhnil": 2, "mxordn": 2, "mxord": 2, "printmessg": 2, "attent": 2, "boolean": [2, 9, 17, 21, 22, 31, 32, 34], "dure": [2, 15, 21, 22, 24], "stiff": 2, "taken": [2, 4, 8, 11, 12, 15, 21, 28], "document": [2, 5, 6, 9, 11, 14, 21, 24, 26, 30, 31, 34], "local": [2, 17, 21], "accord": [2, 19, 21, 29], "max": [2, 5, 21], "norm": [2, 21], "ewt": 2, "weight": 2, "either": [2, 5, 8, 15, 17, 21, 22, 29, 31, 34], "scalar": [2, 3, 12, 21], "arrai": [2, 5, 7, 9, 13, 14], "critic": 2, "care": [2, 22], "maximum": [2, 5, 21], "minimum": [2, 21], "extra": [2, 29], "print": [2, 3, 9, 10, 12, 15, 16, 21, 22, 23, 24, 26, 29, 30, 31, 34], "switch": [2, 6, 21, 30], "messag": [2, 29], "nonstiff": 2, "adam": 2, "bdf": 2, "lotka": 2, "volterra": 2, "srang": 2, "p": [2, 3, 7, 9, 11, 12, 16, 17, 21, 22, 23, 28, 30], "line": [2, 3, 8, 9, 12, 14, 15, 21, 23], "zip": 2, "show": [2, 3, 6, 7, 8, 9, 12, 13, 14, 16, 17, 21, 26, 30], "lorenz": 2, "sigma": [2, 15, 21], "rho": 2, "beta": [2, 29], "05": [2, 9, 21, 29], "dimension": [2, 3, 5, 8], "01": [2, 5, 8, 29, 30], "y1": [2, 21], "y2": 2, "y3": 2, "f1": [2, 4, 21], "77": [2, 30], "27": [2, 9, 18, 21, 30, 34], "375": [2, 6], "f2": [2, 21], "f3": 2, "ci": 2, "oriol": 2, "castejon": 2, "end_point": 2, "similar": [2, 16, 21, 31], "written": [2, 12, 23], "plot_slope_field": 2, "variant": 2, "declar": [2, 9, 17, 21], "autonom": 2, "x0": [2, 31], "y0": [2, 21], "end": [2, 8], "interv": [2, 5, 8, 21, 22, 26, 30], "min": [2, 30], "slope_field": 2, "graph": 2, "slope": 2, "list_plot": [2, 9], "12419127424558": 2, "461590162288825": 2, "backward": [2, 12, 14, 21], "904257108962112": 2, "909327945361535": 2, "how": [2, 3, 16, 17, 21, 30], "pictur": [2, 8], "advanc": [2, 21], "applic": [2, 9, 12, 22], "thick": [2, 3, 9, 21], "4th": [2, 8], "rung": 2, "kutta": [2, 8], "rk": 2, "dynam": 2, "fast_float": 2, "desolve_rk4_determine_bound": 2, "provid": [2, 4, 9, 17, 21, 22, 23, 30], "would": [2, 8, 9, 16, 17, 18, 20, 22, 34], "solnx": 2, "solni": 2, "parametric_plot": [2, 7], "sergei": 2, "bykov": 2, "miss": [2, 30], "y01": 2, "y02": 2, "y03": 2, "j": [2, 4, 7, 9, 11, 12, 13, 16, 29, 30], "lp": 2, "digit": [2, 16, 21, 30], "saltzman": 2, "7636106821342005250144010543616538641008648540923684535378642921202827747268115852940239346395038284": 2, "19": [2, 9, 16, 18, 21, 30], "5787519424517955388380414460095588661142400534276438649791334295426354746147526415973165506704676171": 2, "z0": 2, "586522107161747275678702092126960705284805489972439358895215783190198756258880854355851082660142374": 2, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 2, "7636106821342005250144010543616538641008648540923684535378642921202827747268115852940239346395038": 2, "5787519424517955388380414460095588661142400534276438649791334295426354746147526415973165506704676": 2, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 2, "5865221071617472756787020921269607052848054899724393588952157831901987562588808543558510826601424": 2, "7636106821342005250144010543616538641008648540923684535378642921202827747268115852940239346315658": 2, "5787519424517955388380414460095588661142400534276438649791334295426354746147526415973165506778440": 2, "26": [2, 16], "9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999636628": 2, "abbr2011": 2, "abbr2012": 2, "column": 2, "increment": [2, 17], "old": 2, "entri": [2, 4, 15, 21, 32], "pedagog": 2, "purpos": [2, 9, 21, 31, 34], "polynomialr": [2, 3, 16, 21], "xy": [2, 6, 21, 22], "gen": [2, 9, 16, 21], "rr": [2, 5, 12, 15, 21, 22, 34], "realfield": [2, 10, 16, 21], "sci_not": 2, "prec": [2, 21], "rnd": 2, "rndu": 2, "38": 2, "83": 2, "pt": [2, 7, 9], "t1": [2, 9, 10, 21, 31], "begin": [2, 11], "align": [2, 13], "t_0": [2, 8], "y_0": [2, 8], "t_1": [2, 8], "third": [2, 21, 31], "txy": 2, "68": [2, 21, 30, 34], "81": 2, "00": [2, 14, 30], "29": [2, 9, 16, 30], "043": 2, "41": [2, 5, 6, 16, 21, 30], "y_1": [2, 8], "y_2": [2, 8], "75": [2, 6, 9], "63": 2, "054": 2, "0078": 2, "031": 2, "020": 2, "079": 2, "071": 2, "ty": 2, "062": 2, "94": 2, "46": 2, "88": 2, "62": 2, "015": 2, "rectangl": 2, "xrang": 2, "yrang": 2, "34": [2, 18, 25], "fricas_desolv": 2, "fricas_desolve_system": 2, "120": [3, 10, 21], "repeat": [3, 21], "polygen": [3, 16], "30": [3, 16, 21, 34], "60": [3, 14, 21], "alwai": [3, 5, 16, 21, 26, 29, 30], "80": [3, 16, 21], "manifold": [3, 21], "chart": 3, "scalar_field": 3, "df": 3, "displai": [3, 21], "exterior": [3, 9], "one_form": 3, "da": 3, "zz": [3, 12, 15, 16, 21, 22, 31], "223": 3, "quickli": [3, 29], "coeffici": [3, 13, 15, 21, 22, 24, 29], "lie": [3, 21], "vastli": 3, "over": [3, 5, 9, 11, 12, 16, 21, 22, 26, 30], "base": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34], "huge": 3, "123": [3, 16, 30], "121": 3, "erf": [3, 11, 21, 26, 29], "gaussian": [3, 8, 21], "hue": [3, 6], "ymin": [3, 9, 13, 14, 21], "ymax": [3, 9, 21], "99993665751633376": 3, "1101527003413533e": 3, "area": [3, 6, 21, 34], "859140914229522": 3, "arc": [3, 21], "curv": [3, 6, 7, 9, 21], "restor": [3, 11, 15, 16, 17, 21], "27958": [3, 11], "abl": [3, 16, 17, 21, 22], "ln": [3, 16, 21, 30], "easi": [3, 21], "ellipt": 3, "yet": [3, 21], "doubl": [3, 7, 8, 21, 30], "mess": 3, "1102230246251565e": 3, "5511151231257827e": 3, "9388939039072284e": 3, "tan": [3, 10, 11, 16, 21, 22, 29], "know": [3, 16, 17, 21], "unevalu": [3, 15, 21, 22, 23, 24], "fact": [3, 21], "yield": 3, "thing": [3, 9, 11, 16, 21], "laurent": [3, 21, 22], "around": [3, 4, 21, 23, 27, 29], "720": [3, 10, 21], "45": [3, 9, 10, 18], "partial": [4, 15, 16, 21, 22, 24, 26, 28, 30], "wronskian": 4, "fn": 4, "th": [4, 6, 12, 16, 21, 31], "nth": 4, "row": 4, "func": [4, 5, 21], "sever": [4, 11, 21, 23], "Or": [4, 16, 21, 26], "wikipedia": [4, 29], "articl": [4, 29], "http": [4, 10, 11, 16, 18, 19, 21, 26, 30, 31], "planetmath": 4, "org": [4, 18, 21], "encyclopedia": 4, "wronskiandetermin": 4, "html": [4, 16, 21], "dan": 4, "drake": 4, "03": [4, 14], "josh": [5, 13], "kantor": [5, 8, 12, 13], "02": 5, "rewrit": [5, 16, 21, 22], "doc": [5, 11, 21], "convent": [5, 16, 21], "08": [5, 21], "jeroen": 5, "demey": 5, "2011": [5, 9, 13, 14], "12047": 5, "reformat": 5, "add": [5, 9, 10, 17, 21, 22, 28, 29, 30], "manual": 5, "pyfunctionwrapp": [5, 8], "compiled_integrand": 5, "monte_carlo_integr": 5, "xl": 5, "xu": 5, "plain": 5, "param": [5, 8, 21], "mont": 5, "carlo": 5, "dim": 5, "hypercub": 5, "sampl": [5, 12, 14, 16], "gnu": 5, "scientif": 5, "chapter": 5, "randomli": [5, 29], "miser": 5, "press": 5, "farrar": 5, "recurs": [5, 21], "stratifi": 5, "vega": 5, "lepag": 5, "compon": [5, 8, 21], "10000": [5, 21, 29], "algo": 5, "def": [5, 8, 11, 15, 18, 19, 21, 22, 23, 24, 29, 31], "x2": [5, 31], "x3": [5, 31], "x4": 5, "vincent": 5, "delecroix": 5, "klein": 5, "qag": 5, "max_point": 5, "87": 5, "eps_ab": 5, "eps_rel": 5, "adapt": [5, 9], "qng": 5, "gauss": 5, "kronrod": 5, "87pt": 5, "satisfi": [5, 17, 21, 29, 30], "int_a": 5, "31": [5, 16, 21, 29], "51": [5, 8, 21], "61": [5, 10], "accur": [5, 9, 12], "smooth": 5, "deal": 5, "discontinu": 5, "3333333333333333": 5, "700743415417188e": 5, "333333333333333": 5, "chang": [5, 6, 8, 9, 13, 21, 30], "architectur": [5, 10, 12], "o": [5, 10, 16, 21], "49999999999998657": 5, "5511151231256336e": 5, "32175055439664557": 5, "5721487367706477e": 5, "24030098317249229": 5, "6678768435816325e": 5, "19253082576711697": 5, "1375215571674764e": 5, "16087527719832367": 5, "7860743683853337e": 5, "13827545676349412": 5, "5351659583939151e": 5, "12129975935702741": 5, "3466978571966261e": 5, "10806674191683065": 5, "1997818507228991e": 5, "09745444625548845": 5, "0819617008493815e": 5, "088750683050217577": 5, "8533051773561173e": 5, "dimens": [5, 9, 16, 21, 30], "pleas": [5, 17, 21], "infinit": [5, 21, 31], "99999999999957279": 5, "8429811298996553e": 5, "prevent": [5, 9, 21, 26], "underflow": 5, "7724538509060035": 5, "4295192165889879e": 5, "8488570602160455": 5, "052643677492633e": 5, "nativ": [5, 16], "50479221787318": 5, "60431942934407": 5, "sens": [5, 8, 21, 30], "within": [5, 9, 21, 29], "lebesgu": 5, "theori": [5, 12], "presenc": [5, 21], "advis": 5, "81759643554688": 5, "inf": 5, "nan": [5, 22], "1817104238446596": 5, "387268288079781e": 5, "spline": [6, 7, 8, 9, 12, 13], "sort": [6, 16, 17, 18, 19, 21, 24, 26, 29, 30], "append": [6, 18, 29], "delet": [6, 15], "recomput": 6, "76136363636": 6, "caus": [6, 9, 21], "507575757575": 6, "del": 6, "04296875": 6, "larger": [6, 9, 21, 29, 30], "len": [6, 12, 14, 18, 21, 29], "insert": [6, 21], "ad": [6, 9, 17, 21, 30], "underneath": 6, "definite_integr": [6, 26], "196516041067": 6, "sign": [6, 16, 17, 21, 26, 29], "16230085261803": 6, "20997986285714": 6, "08747074561380": 6, "61876848274853": 6, "support": [6, 7, 9, 15, 17, 21, 22, 23, 24, 30, 32], "13519": 6, "draw": [6, 21], "875": 6, "125": [6, 14, 21, 30], "copi": 6, "13530": 6, "ethan": [7, 9], "van": [7, 8, 9], "andel": [7, 9], "develop": [7, 9, 23], "nsf": [7, 9], "award": [7, 9], "0702939": [7, 9], "ccspline": 7, "figur": [7, 9], "squar": [7, 9, 21, 34], "complex_cubic_splin": [7, 9], "1j": [7, 9, 21], "9549296": 7, "speed": 7, "parameter": [7, 9], "40578892327": 7, "225417136326": 7, "0j": [7, 21], "52047692949": 7, "89392588310": 7, "locat": 7, "303961332787": 7, "34716728183": 7, "73452": 7, "934561222231": 7, "881366116402": 7, "pspline": 7, "polygon": 7, "polygon_splin": [7, 9], "27323954": 7, "27323954473": 7, "363380227632": 7, "26760455264": 7, "parametr": [7, 21], "fx": [7, 21], "fy": 7, "imag": [7, 16, 21], "riemann_map": [7, 9], "plot_color": [7, 9], "plot_spiderweb": [7, 9], "circl": [7, 9], "0497765406583": 7, "151095006434": 7, "0470303661": 7, "1520363883": 7, "joshua": [8, 12], "2004": 8, "docstr": [8, 13, 21, 34], "error_ab": 8, "error_rel": 8, "a_dydt": 8, "scale_ab": 8, "rkf45": 8, "t_span": 8, "wrap": [8, 12, 13, 17, 21, 33], "routin": [8, 21, 22, 29], "instanti": 8, "dy_i": 8, "f_i": 8, "suppli": [8, 9, 21, 24], "need": [8, 15, 16, 21, 22, 23, 24, 26, 31], "df_1": 8, "dy_1": 8, "dy_n": 8, "df_n": 8, "my_jacobian": 8, "doesn": [8, 16, 21, 22], "varieti": [8, 21], "runga": 8, "felhberg": 8, "rk2": 8, "embed": [8, 21], "rk4": 8, "classic": 8, "rk8pd": 8, "princ": 8, "dormand": 8, "rk2imp": 8, "rk4imp": 8, "bsimp": 8, "burlisch": 8, "stoer": 8, "gear1": 8, "gear": 8, "gear2": 8, "actual": [8, 10, 21, 29, 30], "num_point": 8, "subsequ": [8, 17], "ones": [8, 12, 13], "space": [8, 9, 12, 15, 16, 21, 31], "total": 8, "d_i": 8, "s_i": 8, "y_i": 8, "a_": 8, "dydt": 8, "scaling_ab": 8, "y_n": 8, "t_n": 8, "data": [8, 9, 13, 14, 21, 28, 34], "store": [8, 21], "der": 8, "pol": [8, 30], "oscil": 8, "ux": 8, "As": [8, 9, 17, 21], "ui": 8, "let": [8, 17, 19, 21, 31], "f_1": 8, "j_1": 8, "plot_solut": 8, "filenam": 8, "equival": [8, 16, 17, 21], "g_1": 8, "interpolate_solut": 8, "5379": 8, "attribut": [8, 21], "rewritten": 8, "unfortun": [8, 16], "slow": [8, 21, 29], "compil": 8, "ode_sysem": 8, "overload": 8, "c_f": 8, "c_j": [8, 12], "cython": [8, 23], "cimport": 8, "cdef": [8, 21], "van_der_pol": 8, "ode_system": 8, "int": [8, 9, 10, 21, 30], "gsl_success": 8, "dfdy": 8, "dfdt": 8, "execut": 8, "block": [8, 17], "warn": [8, 19, 21, 31], "automat": [8, 12, 14, 15, 21, 22, 24, 26, 30, 31], "doctest": [8, 19, 21, 22, 26, 31, 32], "vander": 8, "2000": 8, "project": 8, "compos": 8, "color": [8, 9, 14, 15], "red": [8, 9, 15, 21], "axes_label": 8, "upgrad": 9, "hi": 9, "complex_plot": 9, "interior": 9, "ahlfor": 9, "center": [9, 13], "visual": 9, "extract": [9, 15, 22, 24], "conform": 9, "simpli": 9, "connect": 9, "disc": 9, "multipli": [9, 21, 28, 29, 30, 34], "imprecis": 9, "colloc": 9, "unusu": 9, "shape": 9, "inaccur": 9, "ellips": 9, "analytic_boundari": 9, "analytic_interior": 9, "bsv2010": 9, "overview": 9, "discuss": 9, "research": 9, "domain": [9, 15, 16, 17, 21, 22, 30, 31], "outer": 9, "counter": [9, 21], "clockwis": 9, "inner": 9, "fprime": 9, "Will": 9, "origin": [9, 15, 17, 21, 30], "500": [9, 21, 30], "especi": [9, 30], "circumst": 9, "ncorner": 9, "corner": 9, "signific": 9, "proper": 9, "opp": 9, "rare": 9, "spiderweb": 9, "hole": 9, "hf": 9, "hfprime": 9, "withcolor": 9, "rough": 9, "format": [9, 10, 15, 17, 21, 22, 24, 30], "inverse_riemann_map": 9, "000": [9, 30], "0016": 9, "fun": 9, "demonstr": [9, 30], "fp": 9, "ef1": 9, "ef1p": 9, "ef2": 9, "ef2p": 9, "65": [9, 14, 21], "revers": [9, 16, 21], "mf": 9, "mfprime": 9, "400": [9, 18], "plot_point": [9, 21], "szego": 9, "kernel": 9, "kt1986": 9, "compute_on_grid": 9, "plot_rang": 9, "x_point": 9, "grid": 9, "xmin": [9, 13, 14, 21], "xmax": [9, 13, 14, 21], "window": 9, "y_direct": 9, "scale": 9, "accordingli": 9, "z_valu": 9, "usag": [9, 15, 23], "0879": 9, "9709": 9, "get_szego": 9, "absolute_valu": 9, "get_theta_point": 9, "itself": [9, 12, 15, 21, 22, 26, 30], "sz": 9, "extend": [9, 12, 16, 21], "0012158": 9, "specif": [9, 17, 21], "sz0": 9, "sz1": 9, "word": [9, 21], "t2": [9, 10, 21], "outsid": 9, "627660": 9, "tp0": 9, "tp1": 9, "That": [9, 29], "406880": 9, "3614702": 9, "95": 9, "486319": 9, "90019052": 9, "1653244": 9, "180936": 9, "156280": 9, "321819": 9, "plot_boundari": 9, "plotjoin": 9, "drawn": 9, "shown": [9, 21], "green": [9, 21], "blue": 9, "big": [9, 11, 21, 30], "catrom": 9, "larg": [9, 21, 30], "run": [9, 21], "zoom": 9, "spot": 9, "resolut": 9, "math": [9, 13, 14, 21], "2012": [9, 21], "what": [9, 21, 23], "spoke": 9, "linescal": 9, "99": [9, 21], "min_mag": 9, "001": 9, "tradit": 9, "concentr": 9, "radial": 9, "exhibit": [9, 21], "errat": 9, "decreas": [9, 17], "mitig": 9, "necess": 9, "forward": [9, 12, 14, 16], "computation": 9, "intens": 9, "shrink": 9, "awai": [9, 21], "reduc": [9, 21], "overlaid": 9, "magnitud": [9, 21], "cutoff": 9, "design": 9, "fuzz": 9, "edg": [9, 13], "particularli": 9, "those": [9, 17, 21, 23, 29], "clean": [9, 31], "z1": 9, "z1p": 9, "z2": 9, "z2p": 9, "z3": 9, "z3p": 9, "disk": 9, "accuraci": [9, 21], "break": [9, 21], "down": [9, 15, 22, 24, 34], "137514": 9, "876696": 9, "56": [9, 14], "989694": 9, "73324": 9, "06j": 9, "0001": 9, "405757": 9, "10j": 9, "ax": 9, "therefor": [9, 17, 21], "primarili": [9, 22], "fairli": [9, 21], "skew": 9, "circular": [9, 21, 22], "nearli": [9, 21], "cauchy_kernel": 9, "intermedi": [9, 21], "meant": 9, "part": [9, 10, 14, 15, 16, 21, 22, 23, 24, 31, 34], "imaginari": [9, 14, 15, 16, 17, 21, 22, 23, 24, 31], "complex_to_rgb": 9, "numpi": [9, 21, 23, 31], "rgb": [9, 12], "dtype": 9, "complex128": 9, "05558355": 9, "17301243": 9, "1000j": 9, "52779177": 9, "08650622": 9, "complex_to_spiderweb": 9, "dr": 9, "dtheta": 9, "zval": 9, "3j": 9, "float64": 9, "96804683": 9, "48044583": 9, "77351965": 9, "5470393": 9, "get_deriv": 9, "xstep": 9, "ystep": 9, "quick": [9, 18], "dirti": 9, "analyt": [9, 17, 21], "intend": [9, 21, 22, 23], "comparison": [9, 17, 21, 29, 30], "great": 9, "less": [9, 18, 21], "rate": 9, "accumul": 9, "angl": [9, 21, 34], "241": [9, 10], "907": 9, "com": [10, 19, 21, 26, 31], "wiki": [10, 18], "88817841970012523233890533447265625": 10, "500000000000000": [10, 21, 22], "141592653589793": [10, 21, 22], "1415926535897932384626433832795028841971693993751058209749": 10, "85987448204883": 10, "3628800": 10, "40320": 10, "50521": 10, "277": 10, "8064": 10, "210": 10, "252": 10, "sympifi": [10, 22], "pprint": [10, 15, 22], "abc": [10, 19, 31], "_sympy_": [10, 22], "240": 10, "8651": 10, "13440": 10, "pretti": [10, 21], "printer": 10, "unicod": 10, "charact": [10, 12, 20], "disabl": [10, 21], "pprint_use_unicod": 10, "prev_us": 10, "_sage_": [10, 17, 22, 31], "mix": [10, 21, 29], "omega": 10, "core": [10, 22], "50000000000000": [10, 12, 23], "christoffel": 11, "phi": 11, "ginv": 11, "nrow": 11, "rational_simplifi": [11, 21], "statement": [11, 17], "friedland": 11, "joshi": 11, "book": 11, "function_factori": [11, 15, 21, 22, 24], "newsymbolicfunct": [11, 15, 22, 24], "funni": 11, "appar": 11, "regress": [11, 30], "although": [11, 21, 30], "antideriv": [11, 25], "poli": [11, 16, 21], "conveni": 11, "dilog": [11, 29], "sourceforg": [11, 16, 30], "net": [11, 16, 30], "3275": 11, "exp_polar": [11, 29], "ceil": [11, 22, 29], "floor": [11, 21, 29], "999": [11, 21], "87005772672831": 11, "5584": 11, "567": 11, "todo": [11, 18], "abelian": 12, "group": [12, 21, 29], "conjugaci": 12, "permut": 12, "__eq__": 12, "__mul__": 12, "indexedsequ": 12, "plot_histogram": 12, "_repr_": 12, "__str__": 12, "dft": 12, "cyclotomicfield": 12, "finit": [12, 21], "idft": 12, "dct": 12, "dst": 12, "cosin": [12, 21], "sine": [12, 21], "convolut": 12, "convolution_period": 12, "fft": [12, 14], "ifft": 12, "gsl_fft_complex_forward": [12, 14], "gsl_fft_complex_invers": [12, 14], "fastfouriertransform": [12, 14], "dwt": [12, 13], "idwt": 12, "gsl_dwt_forward": 12, "gsl_dwt_backward": 12, "wavelettransform": [12, 13], "haar": [12, 13], "daubechi": [12, 13], "daubechies_cent": [12, 13], "haar_cent": [12, 13], "bspline": [12, 13], "bspline_cent": [12, 13], "filter": 12, "stat": 12, "ft": 12, "index_object": 12, "sageobject": [12, 21, 23, 27], "__iter__": 12, "base_r": [12, 14, 21, 22], "parent": [12, 15, 16, 19, 21, 22, 23, 24, 27, 30, 31], "sai": [12, 21], "think": 12, "zeta_n": 12, "convolv": 12, "shortest": 12, "a_n": 12, "b_n": 12, "a_i": 12, "b_": 12, "collect": [12, 21, 31, 34], "under": [12, 21], "dirichlet": 12, "09": [12, 13], "gf": [12, 16, 21], "chi": [12, 16], "0x7f120eb001f0": 12, "uniti": 12, "symmetricgroup": 12, "conjugacy_classes_repres": 12, "fcn": 12, "abeliangroup": 12, "somewhat": [12, 16, 21], "99999999999997": 12, "73205080756885": 12, "99999999999999": 12, "73205080756888": 12, "0000000000000485744257349999": 12, "00000000000000976996261670137": 12, "0000000000000159872115546022": 12, "00000000000000621724893790087": 12, "0000000000000106581410364015": 12, "isomorph": 12, "c2": [12, 30], "c3": 12, "cyclicpermutationgroup": 12, "cyclic": 12, "kronecker_symbol": 12, "quadrat": [12, 16, 21, 30], "residu": [12, 21], "denot": 12, "read": 12, "leav": [12, 21, 29], "abelian_group_du": 12, "11022302462516e": 12, "wavelet_k": [12, 13], "power": [12, 13, 14, 15, 21, 22, 23, 24, 30, 34], "gsl_wavelet_transform_forward": [12, 13], "moment": [12, 13], "103": [12, 13], "105": [12, 13], "202": [12, 13], "204": [12, 13], "206": [12, 13], "208": [12, 13], "301": [12, 13], "305": [12, 13], "307": [12, 13], "309": [12, 13], "biorthogon": [12, 13], "cdot": [12, 21], "log_2": [12, 13], "slightli": [12, 29], "82842712474999": 12, "radix2": [12, 14], "gsl_fft_complex_radix2_forward": [12, 14], "gsl_wavelet_transform_backward": 12, "arch": 12, "gsl_fft_complex_radix2_invers": [12, 14], "Not": [12, 16, 21, 30, 32], "clr": 12, "ep": 12, "histogram": 12, "coercibl": [12, 21], "gsl_wavelet_transform_invers": 13, "minor": [13, 14], "wavelet_typ": 13, "gsldoublearrai": 13, "s_": [13, 15], "d_": 13, "band": 13, "forward_transform": [13, 14], "compress": 13, "2048": 13, "1800": [13, 21], "backward_transform": [13, 14], "discretewavelettransform": 13, "is2pow": 13, "modif": 14, "hansen": 14, "2013": 14, "tabera": 14, "alonso": 14, "unus": 14, "fastfouriertransform_bas": 14, "fastfouriertransform_complex": 14, "place": [14, 21], "coolei": 14, "tukei": 14, "inverse_transform": 14, "lack": 14, "modulo": [14, 30], "round": [14, 21], "250": 14, "256": [14, 21], "style": 14, "rect": 14, "slice": [14, 21], "height": 14, "fouriertransform_complex": 14, "fouriertransform_r": 14, "clear_var": 15, "letter": 15, "startup": 15, "clear": [15, 17, 21, 30], "nameerror": 15, "narg": [15, 21, 22, 23, 24], "latex_nam": [15, 21, 22, 23, 24, 31], "mode": [15, 17, 22, 24, 31], "eval_func": [15, 22, 24], "evalf_func": [15, 22, 24], "evalf_params_first": [15, 21, 22, 23, 24], "custom": [15, 21, 22, 23, 24], "evalf": [15, 22, 24], "conjugate_func": [15, 21, 22, 24], "conjug": [15, 16, 21, 22, 23, 24, 29, 31], "real_part_func": [15, 22, 24], "imag_part_func": [15, 22, 24], "derivative_func": [15, 22, 24], "deriv_param": [15, 22, 24], "tderivative_func": [15, 22, 24], "power_func": [15, 22, 24], "power_param": [15, 22, 24], "series_func": [15, 22, 24], "print_func": [15, 21, 22, 24], "print_latex_func": [15, 21, 22, 24], "inject": [15, 22, 31], "namespac": [15, 22, 31], "touch": [15, 22], "supersin": [15, 22], "kappa": [15, 22, 24], "psi": [15, 21, 22, 24], "typeset": [15, 21, 22], "mathcal": [15, 22], "mu": [15, 22], "nu": [15, 22], "my_latex_print": [15, 22], "psi_": [15, 22], "join": [15, 17, 21, 22, 24], "ev": [15, 22, 24], "ef": [15, 22, 24], "evalf_f": [15, 22, 24], "diff_param": [15, 22, 24], "pow": [15, 21, 22, 24, 29], "pformat": [15, 22], "my_print": [15, 21, 22, 24], "my": [15, 21, 22, 24], "repr": [15, 21, 22, 24], "chain": [15, 17, 21, 22, 23, 24], "print_arg": [15, 22, 24], "unsupport": [15, 21, 22, 24], "operand": [15, 21, 22, 24, 28], "substitute_funct": [15, 21, 22, 24], "occurr": [15, 21, 22, 24], "singl": [15, 21, 22, 30], "comma": 15, "identifi": [15, 21, 31], "xx": 15, "yy": 15, "sui": 15, "_latex_": 15, "back": [15, 16, 21, 26, 27, 33], "belong": 15, "yaca": 16, "essaysmanu": 16, "come": [16, 21, 26], "1994": 16, "review": 16, "ca": [16, 23], "capabl": [16, 21, 30], "michael": 16, "who": 16, "commerci": 16, "ye": 16, "30414093201713378043612608166064768844377641568960512000000000000": 16, "47": 16, "37": [16, 34], "4861": 16, "2520": 16, "decim": [16, 21, 34], "150": [16, 21], "6253741264076874399999999999925007259719820e17": 16, "0415798869439621": 16, "247397641513306": 16, "fraction": [16, 21, 22, 29], "142857": 16, "continu": [16, 26, 29], "1415926535": [16, 21], "continued_fract": 16, "292": 16, "checker": 16, "choos": [16, 21, 31], "sqrt3": 16, "quadraticfield": [16, 21], "asqr": 16, "deviat": 16, "rdf": [16, 21, 22], "standard_devi": 16, "5811388300841898": 16, "NO": 16, "hypothesi": 16, "But": [16, 21, 26, 30], "canonicalize_rad": [16, 21], "53": [16, 21, 22], "147": 16, "413159102577": 16, "190": 16, "1140": 16, "4845": 16, "15504": 16, "38760": 16, "77520": 16, "125970": 16, "167960": 16, "184756": 16, "380": 16, "3420": 16, "19380": 16, "232560": 16, "542640": 16, "1007760": 16, "1511640": 16, "1847560": 16, "mod": 16, "altern": [16, 21, 26], "reset": 16, "decomposit": [16, 21], "partial_fract": [16, 21], "deduc": [16, 21], "prod": [16, 21], "combin": [16, 17, 19, 21, 30], "trig_simplifi": [16, 21], "good": [16, 30], "match": [16, 21, 31], "notion": 16, "simplify_ful": [16, 21], "997": 16, "99983": 16, "1368683772": 16, "7691": 16, "compar": [16, 19, 29], "though": [16, 21, 34], "real_part": [16, 21, 29], "imag_part": [16, 21, 29], "im": [16, 21], "behaviour": 16, "stick": 16, "10682": 16, "eq1": 16, "eq2": 16, "to_poly_solv": [16, 21, 30], "degener": 16, "3x3": 16, "r1": [16, 18, 30], "invert": [16, 21], "2x2": 16, "multivari": [16, 21, 22, 30], "nicer": 16, "4x4": 16, "vandermond": 16, "eigenspaces_left": 16, "basi": [16, 23, 30], "hopit": 16, "ok": 16, "ish": 16, "_": [16, 18, 21, 22, 26, 29, 30, 31], "piecewis": 16, "els": 16, "NOT": [16, 26], "testyaca": 16, "power_seri": [16, 21], "467775": 16, "37800": 16, "2835": 16, "inversetaylor": 16, "semant": 16, "1667": 16, "72": 16, "3803": 16, "legendr": 16, "directli": [16, 21, 30, 34], "rodrigu": 16, "formula": [16, 21, 30], "35": [16, 21], "a5": 16, "a4": [16, 17], "a3": [16, 17], "a2": [16, 17, 29], "a1": [16, 17, 29], "a0": 16, "univari": [16, 21, 22], "fortran": 16, "cform": 16, "genericdeclar": 17, "verbal": 17, "Such": [17, 21], "rudimentari": 17, "refin": 17, "queri": [17, 21], "practic": [17, 23], "databas": [17, 31], "reusabl": 17, "stackabl": 17, "context": [17, 21, 30], "manag": 17, "temporari": [17, 21, 22, 31], "updat": [17, 21], "is_real": [17, 21, 31], "featur": [17, 31], "str": [17, 21], "noninteg": [17, 31], "odd": 17, "irrat": [17, 21], "increas": 17, "oddfun": 17, "evenfun": 17, "posfun": 17, "commut": [17, 19], "lassoci": 17, "rassoci": 17, "symmetr": 17, "antisymmetr": 17, "integervalu": 17, "is_posit": [17, 21], "affect": 17, "is_integ": [17, 21], "inconsist": [17, 21], "uniquerepresent": 17, "decl": [17, 21], "uniqu": [17, 21, 31, 32], "contradict": [17, 21], "soln": [17, 21, 30], "violat": [17, 21], "gdecl": 17, "oppos": 17, "middl": 17, "everyth": 17, "plan": 17, "someth": [17, 18, 21, 30], "attributeerror": [17, 21], "liter": [17, 34], "translat": [17, 22, 30], "logic": 17, "entir": 17, "typic": [17, 21, 22], "ensur": [17, 19, 21, 26], "certain": [17, 19, 21, 30], "session": 17, "until": 17, "major": 17, "r2": [17, 18], "relationship": [17, 21, 34], "meaningless": [17, 21], "redund": 17, "temporarili": 17, "modifi": [17, 21, 29], "interact": [17, 23], "discov": 17, "explor": [17, 21], "branch": [17, 21], "unless": 17, "useabl": 17, "exit": 17, "stack": 17, "nitpick": 17, "naught": 17, "dgamma": 17, "mention": 17, "introduc": 17, "won": [17, 21, 22, 34], "empti": [17, 21, 30], "preprocess_assumpt": 17, "var1": 17, "var2": 17, "sagemath": [18, 19, 21, 31], "symbench": 18, "feasibl": 18, "forev": 18, "15323490199844318074242473679071410934833494247466385771803570370858961112774390851798166656796902695599442662754502211584226105508648298600018090510170430216881977761279503642801008178271982531042720727178135881702924595044672634313417239327304576652633321095875724771887486594852083526001648217317718794685379391946143663292907934545842931411982264788766619812559999515408813796287448784343854980686798782575952258163992236113752353237705088451481168691158059505161807961082162315225057299394348203539002582692884735745377391416638540520323363224931163680324690025802009761307137504963304640835891588925883135078996398616361571065941964628043214890356454145039464055430143": 18, "160959987592246947739944859375773744043416001841910423046466880402863187009126824419781711398533250016237703449459397319370100476216445123130147322940019839927628599479294678599689928643570237983736966305423831947366332466878486992676823215303312139985015592974537721140932243906832125049776934072927576666849331956351862828567668505777388133331284248870175178634054430823171923639987569211668426477739974572402853248951261366399284257908177157179099041115431335587887276292978004143353025122721401971549897673882099546646236790739903146970578001092018346524464799146331225822142880459202800229013082033028722077703362360159827236163041299500992177627657014103138377287073792": 18, "hermit": [18, 29], "32768": 18, "1720320": 18, "33546240": 18, "307507200": 18, "1383782400": 18, "2905943040": 18, "2421619200": 18, "518918400": 18, "r3": 18, "100000": [18, 34], "r4": 18, "cardin": 18, "r5": 18, "blowup": 18, "r6": 18, "r7": 18, "r10": 18, "r11": 18, "w3": 18, "aco": 18, "arcco": [18, 21, 29], "s1": [18, 21], "s2": [18, 21], "s3": 18, "s4": 18, "callablesymbolicexpressionfunctor": 19, "constructionfunctor": [19, 32], "functor": [19, 32], "callablesymbolicexpressionr": 19, "symbolicr": [19, 21, 31, 32], "merg": [19, 29, 32], "unify_argu": 19, "neq": 19, "item": [19, 24], "vice": 19, "versa": 19, "remain": [19, 29], "togeth": [19, 21], "alphabet": [19, 21, 30], "particular": [19, 21, 22], "matter": 19, "thank": 19, "callablesymbolicexpressionringfactori": 19, "uniquefactori": [19, 32], "create_kei": 19, "create_object": [19, 32], "extra_arg": 19, "callablesymbolicexpressionring_class": 19, "still": [19, 21, 23, 26], "is_callablesymbolicexpress": 19, "deprecationwarn": [19, 21, 31], "deprec": [19, 21, 31], "isinst": [19, 21, 23, 31], "is_cal": [19, 21], "34215": 19, "is_callablesymbolicexpressionr": 19, "32665": [19, 31], "complexity_measur": [20, 21], "string_length": [20, 21], "rational": 20, "screen": [20, 21], "human": 20, "incompat": [21, 30, 34], "nonsens": 21, "strang": 21, "dummi": [21, 30], "natur": 21, "logarithm": 21, "behav": [21, 23], "71828182845905": 21, "7182818284590452353602874713526624977572470936999595749670": 21, "em": 21, "1793740787340171819619895873183164984596816017589156131574": 21, "718281828459045": 21, "__float__": 21, "_mpfr_": 21, "7182818284590452353602874714": 21, "_real_double_": 21, "5e": 21, "indirect": [21, 22, 26, 32], "new_expression_from_": 21, "sure": [21, 22, 23], "least": [21, 30], "_gobj": 21, "uniniti": 21, "segfault": 21, "oh": 21, "wz_certif": 21, "wilf": 21, "zeilberg": 21, "certif": 21, "summand": 21, "sum_k": 21, "textrm": 21, "const": 21, "suffic": 21, "rf": 21, "wz": 21, "binom": 21, "again": [21, 23, 30], "add_to_both_sid": 21, "15927948072741": 21, "arccosh": [21, 29], "hyperbol": [21, 22], "0471975511965976": 21, "acosh": 21, "047197551196598": 21, "arcsin": [21, 22, 29], "52607123962616": 21, "881373587019543": 21, "asinh": 21, "4436354751788": 21, "tangent": 21, "463647609000806": 21, "arctan2": [21, 22, 29], "atan2": [21, 22, 23], "27942259892257": 21, "arctanh": [21, 29], "549306144334055": 21, "atanh": 21, "2e": 21, "5493061443340548": 21, "relev": 21, "among": 21, "canon": 21, "cube": 21, "multi": 21, "heurist": 21, "tend": 21, "account": 21, "radcan": 21, "regular": 21, "quit": 21, "consum": 21, "cost": 21, "simplest": [21, 23], "intuit": 21, "trigger": 21, "becom": 21, "confus": 21, "suppos": [21, 29], "elimin": [21, 30], "howev": [21, 26], "drop": 21, "subtract": [21, 30], "e1": [21, 30], "e2": 21, "report": 21, "3520": 21, "incorrectli": 21, "974852579915647": 21, "spars": 21, "seen": 21, "best": 21, "4y": 21, "collect_common_factor": 21, "alreadi": [21, 23, 34], "often": [21, 22, 29], "brought": 21, "compact": [21, 26], "accomplish": 21, "deep": 21, "toplevel": 21, "process": 21, "content": 21, "primitive_part": 21, "unit_content_primit": 21, "gcd": 21, "target": [21, 34], "foot": [21, 34], "381": [21, 34], "1250": [21, 34], "meter": [21, 34], "mass": [21, 34], "kilogram": [21, 34], "pound": [21, 34], "100000000": [21, 34], "45359237": [21, 34], "anyth": [21, 29], "acceler": [21, 34], "galileo": [21, 34], "762": [21, 34], "forc": [21, 22, 30, 34], "newton": [21, 26, 34], "acr": [21, 34], "inch": [21, 34], "3630": [21, 34], "charg": [21, 34], "coulomb": [21, 34], "amper": [21, 34], "pressur": [21, 34], "pascal": [21, 34], "si_prefix": [21, 34], "kilo": [21, 34], "pounds_per_square_inch": [21, 34], "1290320000000": [21, 34], "8896443230521": [21, 34], "145037737730209": [21, 34], "temperatur": [21, 34], "fahrenheit": [21, 34], "celsiu": [21, 34], "293": [21, 34], "150000000000": [21, 34], "kelvin": [21, 34], "54030230586813971740093660744297660373231042": 21, "540302305868140": 21, "54308063481524": 21, "00000000000000000000000000": 21, "5430806348152437784779056": 21, "rif": [21, 22], "543080634815244": 21, "csgn": 21, "nonconst": 21, "li": 21, "pure": 21, "decl_assum": 21, "decl_forget": 21, "default_vari": [21, 23], "cach": 21, "highest": 21, "demoivr": [21, 22], "trigonometr": [21, 22, 26, 30], "kept": 21, "quotient": 21, "numerator_denomin": 21, "iter": [21, 31, 32], "count": 21, "_deriv": 21, "sourc": 21, "cleanli": 21, "g_3": 21, "far": 21, "proce": 21, "subtre": 21, "emmanuel": 21, "charpenti": 21, "ralf": 21, "stephan": 21, "2017": 21, "divide_both_sid": 21, "checksign": 21, "divid": [21, 30], "compat": 21, "64872127070013": 21, "6487212707001282": 21, "observ": 21, "individu": 21, "416": 21, "169": 21, "expand_log": 21, "govern": 21, "noth": [21, 23], "logexpand": 21, "super": 21, "729": 21, "influenc": 21, "futur": 21, "flag": 21, "expand_r": 21, "expand_sum": 21, "162": 21, "7752256945384": 21, "9424": 21, "expand_trig": 21, "half_angl": 21, "k1": 21, "k2": 21, "trig_expand": 21, "sech": [21, 22, 29], "dontfactor": 21, "irreduc": 21, "cre": 21, "dreadfulli": 21, "factor_list": 21, "_factor_list": 21, "straightforward": 21, "factorial_simplifi": 21, "simplify_factori": 21, "simplify_r": 21, "pattern": [21, 31], "onc": [21, 28, 31], "subexpress": 21, "w0": [21, 31], "wild": [21, 31], "w1": [21, 31], "find_local_maximum": 21, "48e": 21, "maxfun": 21, "imaginary_toler": 21, "attain": 21, "find_local_minimum": 21, "5610963381910451": 21, "8603335890": 21, "561090323458081": 21, "857926501456": 21, "maxim": 21, "aris": 21, "smaller": 21, "minval": 21, "288371395590": 21, "4256184695": 21, "288371361890": 21, "4257507903": 21, "288370845983": 21, "4250840220": 21, "477294259479": 21, "5293344109": 21, "optim": 21, "find_root": [21, 30], "xtol": 21, "881784197001252e": 21, "maxit": 21, "full_output": 21, "function_cal": 21, "588532743981862": 21, "4942": 21, "asymptot": 21, "brent": 21, "618033988749895": [21, 22], "ted": 21, "kosan": 21, "came": 21, "004": 21, "9600": 21, "1200": 21, "2400": 21, "002": 21, "001540327067911417": 21, "720000": 21, "11520000": 21, "0004110514049349": 21, "effort": [21, 30], "free": 21, "46080": 21, "576000": 21, "900": 21, "737280": 21, "450": 21, "000411051404934985": 21, "fr": 21, "free_vari": 21, "unbound": 21, "full_simplifi": 21, "simplify_rectform": 21, "simplify_trig": 21, "362880": 21, "0r": 21, "arm": 21, "49801566811835607": 21, "15494982830181067": 21, "4980156681183560427136911175": 21, "1549498283018106851249551305": 21, "49801566811835604271369111746219809195": 21, "15494982830181068512495513048388660520": 21, "familiar": 21, "convex": 21, "gamma_norm": 21, "addition": 21, "cancel": 21, "22826": 21, "caught": 21, "alg": 21, "trac": 21, "28489": 21, "sqrt2": 21, "gosper_sum": 21, "gosper": 21, "rising_factori": 21, "gosper_term": 21, "summabl": 21, "s_n": 21, "f_k": 21, "g_n": 21, "g_": 21, "f_n": 21, "euclidean": 21, "pseudo": 21, "riemannian": 21, "curvilinear": 21, "neither": 21, "nor": 21, "pitfal": 21, "coeff": 21, "has_wild": 21, "wildcard": [21, 31], "hypergeometric_simplifi": 21, "confluent": 21, "hgfred": 21, "simplify_hypergeometr": 21, "144": [21, 30], "unstabl": [21, 22], "laguerr": [21, 29], "hypergeometric_m": [21, 29], "hypergeometric_u": [21, 29], "rm": 21, "implicit_deriv": 21, "is_algebra": 21, "golden_ratio": [21, 22, 29], "complex_root_of": [21, 22, 29, 30], "is_const": 21, "is_exact": [21, 31], "is_infin": 21, "is_neg": 21, "correctli": 21, "mul": [21, 22, 29], "is_negative_infin": 21, "is_numer": 21, "is_polynomi": 21, "is_positive_infin": 21, "is_rational_express": 21, "effect": 21, "is_rel": 21, "is_squar": 21, "is_symbol": 21, "is_terminating_seri": 21, "termin": 21, "is_trivial_zero": 21, "trivial": [21, 30], "expens": 21, "is_zero": 21, "is_trivially_equ": 21, "subject": 21, "is_unit": [21, 34], "proof": [21, 31], "avoid": 21, "laurent_polynomi": [21, 22], "lcm": 21, "agreement": 21, "leading_coeff": 21, "leading_coeffici": 21, "left_hand_sid": [21, 30], "lh": [21, 30], "693147180559945": 21, "6931471805599453": 21, "log_gamma": [21, 29], "17805383034795": 21, "misc": 21, "verbos": [21, 29], "set_verbos": 21, "log_simplifi": 21, "scan": 21, "safe": 21, "simplify_log": 21, "contract": 21, "ratio": [21, 29], "logcontract": [21, 27], "low_degre": 21, "lowest": 21, "www": 21, "w2": 21, "bewar": 21, "surpris": 21, "mul_vararg": [21, 28], "maxima_method": [21, 27], "multiply_both_sid": 21, "never": 21, "quantiti": [21, 34], "unknown": [21, 34], "negat": 21, "iff": 21, "989992496600": 21, "209335488557": 21, "nop": 21, "number_of_operand": 21, "bi": 21, "overlin": 21, "080083823051": 21, "080083823051904": 21, "number_of_argu": [21, 23, 29], "guarante": [21, 30], "roughli": 21, "958924274663138": 21, "95892427466313846889315440616": 21, "95892427466313846889315440615599397335246154396460": 21, "6449340668482264364724151666460251892189499012068": 21, "98999249660044545727157279473126130239367909661558832881409": 21, "9899924966": 21, "00000000": 21, "2740880444219335226246195788": 21, "op": [21, 22, 28], "topmost": 21, "add_vararg": [21, 22, 28], "lt": [21, 22, 30], "function_gamma": 21, "nf": [21, 24], "partial_fraction_decomposit": 21, "onto": [21, 28], "straight": 21, "oscillatori": 21, "frame": 21, "emb": 21, "2d": 21, "3d": 21, "plot3d": 21, "graphics3d": 21, "famili": 21, "frame_aspect_ratio": 21, "00001": 21, "function_sin": 21, "optimis": 21, "1557273497909217": 21, "15572734979092": 21, "1557273497909217179100931833": 21, "006276680299816": 21, "0062766802998": 21, "70": 21, "7182818284590452354": 21, "006276680299820175": 21, "0000000000000000000": 21, "54": 21, "598150033144236": 21, "085536923187668": 21, "38905609893065": 21, "5981500331442": 21, "0855369231877": [21, 22], "appropri": 21, "associ": [21, 23, 28], "4913": 21, "289": 21, "2602": 21, "pyobject": [21, 22, 30], "3000000000000": 21, "rational_expand": 21, "repeatedli": 21, "noexpand": 21, "subpart": 21, "ratsimp": 21, "fullratsimp": 21, "xthru": 21, "shorter": 21, "nonrat": 21, "rectform": 21, "rectangular": 21, "perpendicular": 21, "unmodifi": 21, "ik": 21, "reduce_trig": 21, "tri": [21, 29], "trig_reduc": 21, "pole": 21, "csc": [21, 22, 29], "runtimeerror": [21, 30], "right_hand_sid": [21, 30], "explicit_solut": [21, 30], "rather": [21, 30], "inde": 21, "greater": 21, "price": 21, "0588115223184": 21, "331099917875": 21, "52241655183732": 21, "36050567903502": 21, "51880872209965": 21, "058811522318449": 21, "05881152231844": 21, "05881152231844944": 21, "331099917875796": 21, "522416551837318": 21, "360505679035020": 21, "518808722099650": 21, "nearest": 21, "43203735824841025516773866131535024": 21, "207855083711803945": 21, "3333333333": 21, "110": 21, "115": 21, "set_series_precis": 21, "5040": 21, "john": 21, "amaz": 21, "239": 21, "atan": [21, 22, 31], "1415926824043994": 21, "nice": [21, 34], "sent": 21, "prefer": [21, 22, 29], "pretty_print": 21, "ascii_art": 21, "send": 21, "held": 21, "discard": 21, "regardless": 21, "simpler": 21, "our": [21, 31], "emploi": 21, "84147098480789650665250232163029899962256306": 21, "0000000000000000000000000": 21, "1752011936438014568823819": 21, "175201193643802": 21, "solution_dict": [21, 30], "lost": [21, 30], "solve_diophantin": [21, 30], "diophantin": [21, 30], "pick": 21, "brahmagupta": 21, "pell": 21, "577": 21, "408": 21, "3363": 21, "2378": 21, "latest": 21, "_do_sqrt": 21, "got": 21, "unexpect": 21, "functionunitstep": 21, "unit_step": [21, 29], "361": 21, "138": 21, "eqn1": 21, "eqn2": 21, "duplic": 21, "throw": 21, "18396": 21, "fine": 21, "whole": 21, "cmd": 21, "cut": 21, "past": 21, "unpredict": 21, "enabl": [21, 23], "substitution_delai": 21, "contrast": [21, 31], "subtract_from_both_sid": 21, "5574077246549022305069748074583601730872508": 21, "761594155955765": 21, "7615941559557649": 21, "15377": 21, "7983360": 21, "6767": 21, "604800": 21, "347": 21, "15120": 21, "test_rel": 21, "ntest": 21, "cast": 21, "assur": 21, "cif": 21, "overlap": 21, "succeed": 21, "notimpl": 21, "9990999791895": 21, "to_gamma": 21, "trailing_coeff": 21, "trail": 21, "smallest": 21, "trailing_coeffici": 21, "exclud": [21, 22], "10169": 21, "sgn": [21, 29], "tripl": 21, "Their": 21, "003300223685324103": 21, "4181554491413217": 21, "expressioniter": 21, "operandswrapp": 21, "indexerror": 21, "__index__": 21, "pynacconst": 21, "serial": 21, "substitutionmap": 21, "apply_to": 21, "make_map": 21, "symbolicseri": 21, "constructor": [21, 22], "call_registered_funct": 21, "allow_numeric_result": 21, "result_par": 21, "regist": [21, 23], "variad": 21, "keep": 21, "find_registered_funct": 21, "s_arctan": 21, "doublefactori": 21, "combinatori": 21, "3715891200": 21, "archenemi": 21, "get_fn_seri": 21, "overal": [21, 29], "registri": 21, "get_sfunction_from_seri": 21, "get_ginac_seri": 21, "mainli": [21, 22, 31, 34], "get_sfunction_from_hash": 21, "myhash": 21, "symbolicfunct": [21, 23], "hash": [21, 23], "sfunction_serial_dict": 21, "hold_class": 21, "stop": 21, "init_function_t": 21, "pointer": 21, "init_pynac_i": 21, "symbolic_i": 21, "_complex_mpfr_field_": 21, "_complex_double_": 21, "1e8": 21, "00000000000000e8": 21, "is_express": 21, "structur": 21, "32638": 21, "is_symbolicequ": 21, "subs_dict": [21, 22], "subsmap": 21, "math_sort": 21, "ascend": 21, "mixed_ord": 21, "12967": 21, "32185": 21, "log2": [21, 29], "mixed_sort": 21, "new_express": 21, "new_expression_from_pyobject": 21, "travers": 21, "_force_pyobject": [21, 22], "tt": 21, "new_expression_symbol": 21, "t0_2": [21, 31], "new_expression_wild": 21, "card": [21, 31], "nonneg": [21, 29, 31], "normalize_index_for_doctest": 21, "normalize_index": 21, "paramset_from_express": 21, "print_ord": 21, "print_sort": 21, "py_atan2_for_doctest": 21, "py_atan2": 21, "py_denom_for_doctest": 21, "py_denom": 21, "py_eval_infinity_for_doctest": 21, "py_eval_infin": 21, "py_eval_neg_infinity_for_doctest": 21, "py_eval_neg_infin": 21, "py_eval_unsigned_infinity_for_doctest": 21, "py_eval_unsigned_infin": 21, "py_exp_for_doctest": 21, "py_exp": 21, "py_factorial_pi": 21, "py_factori": 21, "overrid": [21, 23], "py_float_for_doctest": 21, "py_float": 21, "1415926535897932384626": 21, "0000000000000000000000": 21, "py_imag_for_doctest": 21, "py_imag": 21, "py_is_cinteger_for_doctest": 21, "treat": 21, "py_is_crational_for_doctest": 21, "py_is_integer_for_doctest": 21, "py_latex_fderivative_for_doctest": 21, "id": 21, "py_latex_fderiv": 21, "mathrm": 21, "func_with_arg": 21, "py_latex_function_pystr": 21, "fname_paren": 21, "py_print_function_pystr": 21, "py_latex_variable_for_doctest": 21, "py_lgamma_for_doctest": 21, "py_lgamma": 21, "650923199301856": 21, "87243664726243": 21, "py_li2_for_doctest": 21, "py_psi2": 21, "890838090262283": 21, "py_li_for_doctest": 21, "py_li": 21, "py_log_for_doctest": 21, "py_log": 21, "py_mod_for_doctest": 21, "py_mod": 21, "py_numer_for_doctest": 21, "py_num": 21, "py_print_fderivative_for_doctest": 21, "py_print_fderiv": 21, "py_psi2_for_doctest": 21, "644934066848226": 21, "py_psi_for_doctest": 21, "py_psi": 21, "422784335098467": 21, "py_real_for_doctest": 21, "py_real": 21, "py_stieltjes_for_doctest": 21, "py_stieltj": 21, "577215664901533": 21, "py_tgamma_for_doctest": 21, "py_tgamma": 21, "py_zeta_for_doctest": 21, "py_zeta": 21, "00330022368532410": 21, "418155449141322": 21, "register_or_update_funct": 21, "builtinfunct": [21, 23, 26], "archosaurian": 21, "__init__": [21, 23], "archsaur": 21, "_eval_": [21, 23], "register_symbol": 21, "obj": [21, 22, 27], "five": 21, "maxima_calculu": 21, "restore_op_wrapp": 21, "synopsi": 21, "test_binomi": 21, "tolerant_is_symbol": 21, "util": 21, "nonetyp": 21, "unpack_operand": 21, "walk": 22, "tree": 22, "overridden": 22, "subclass": [22, 23], "expression_convers": 22, "algebraicconvert": 22, "reciprocal_trig_funct": 22, "cot": [22, 29], "414213562373095": 22, "composit": 22, "866025403784439": 22, "4338837391175581": 22, "839286755214161": 22, "3090169943749474": 22, "9510565162951536": 22, "684": 22, "9999999999999999": 22, "use_fake_div": 22, "truediv": [22, 29], "infix": 22, "afterward": 22, "get_fake_div": 22, "fakeexpress": 22, "8056": 22, "expressiontreewalk": 22, "circdict": 22, "csch": [22, 29], "circ": 22, "random_test": [22, 29], "random_expr": [22, 29], "set_random_se": [22, 29], "nvar": [22, 29], "walker": 22, "divis": [22, 29], "mixtur": 22, "node": [22, 29], "act": [22, 28, 34], "suffici": 22, "fastcallableconvert": 22, "etb": 22, "ext": 22, "fast_cal": 22, "expressiontreebuild": 22, "0x": 22, "_fast_callable_": 22, "v_0": 22, "v_1": 22, "ipow": 22, "ff": 22, "fricasconvert": 22, "interfaceinit": 22, "_fricas_": 22, "asin": 22, "25838": 22, "27310": 22, "28641": 22, "28647": 22, "domainof": 22, "positiveinteg": 22, "frequent": 22, "whenev": [22, 30], "holdremov": 22, "_sage_var_x": [22, 30], "_sage_var__symbol0": 22, "_sage_var_i": 22, "ii": 22, "sagevarx": 22, "laurentpolynomialconvert": 22, "polynomialconvert": 22, "85987448204884": 22, "909297426825682": 22, "ringconvert": 22, "4161468365471424": 22, "5000000000000000": 22, "success": 22, "141592653589794": 22, "substitutefunct": 22, "sympyconvert": 22, "ne": 22, "gt": 22, "aa": 22, "algebraicr": 22, "algebraicnumb": 22, "242640687119285": 22, "50000000000000000": 22, "div": 22, "laurentpolynomialr": 22, "87813065119873": 22, "special": [23, 31, 34], "ginacfunct": 23, "elementari": 23, "builtin": 23, "superclass": 23, "cli": 23, "member": 23, "alt_nam": 23, "_evalf_": 23, "preserved_arg": 23, "mechan": 23, "mandatori": 23, "stai": 23, "_eval_numpy_": 23, "receiv": 23, "_conjugate_": 23, "_real_part_": 23, "_imag_part_": 23, "_derivative_": 23, "_tderivative_": 23, "_power_": 23, "expo": 23, "_series_": 23, "print_latex": 23, "test1": 23, "cbf": 23, "my_sin": 23, "succe": 23, "test2": 23, "__call__": 23, "_is_regist": 23, "_register_funct": 23, "pickle_wrapp": [23, 24], "pickle_funct": 23, "byte": 23, "unpickle_wrapp": 23, "unpickl": [23, 24, 31], "unpickle_funct": [23, 24], "_mathematica_init_": 24, "5r": 24, "pickled_func": 24, "__reduce__": 24, "recreat": 24, "2r": 24, "conjugate_f": 24, "fricas_integr": 25, "nopol": 25, "giac_integr": 25, "libgiac_integr": 25, "maxima_integr": 25, "mma_free_integr": 25, "sympy_integr": 25, "definiteintegr": 26, "indefiniteintegr": 26, "indefinite_integr": 26, "leibniz": 26, "wolfram": 26, "polytop": 26, "latte_int": 26, "geometri": 26, "polyhedron": 26, "polyhedron_bas": 26, "rememb": 26, "improp": [26, 34], "fresnel": 26, "licens": 26, "fresnel_sin": [26, 29], "situat": [26, 30], "keepfloat": 26, "05623145800914245": 26, "nevertheless": [26, 30], "alias": 26, "maxima_wrapp": 27, "maximafunctionelementwrapp": 27, "interfacefunctionel": 27, "maximawrapp": 27, "derivativeoper": 28, "fderivativeoper": 28, "twice": 28, "derivativeoperatorwithparamet": 28, "parameter_set": 28, "record": 28, "change_funct": 28, "rest": 28, "60480": 28, "assert_strict_weak_ord": 29, "cmp_func": 29, "strict": 29, "weak": 29, "binari": 29, "irreflex": 29, "asymmetri": 29, "transit": 29, "incompar": 29, "strict_weak_ord": 29, "randint": 29, "cmp_m": 29, "elif": 29, "choose_from_prob_list": 29, "lst": 29, "select": 29, "900000000000000": 29, "true_count": 29, "total_count": 29, "more_sampl": 29, "normalize_prob_list": 29, "pl": 29, "sublist": 29, "b1": 29, "b2": 29, "b3": 29, "250000000000000": 29, "ncoeff": 29, "var_frac": 29, "inv": 29, "ei": 29, "_swap_harmon": 29, "airy_ai": 29, "airy_ai_prim": 29, "airy_bi": 29, "airy_bi_prim": 29, "arccot": 29, "arccoth": 29, "arccsc": 29, "arccsch": 29, "arcsec": 29, "arcsech": 29, "bessel_k": 29, "chebyshev_t": 29, "chebyshev_u": 29, "cos_integr": 29, "cosh_integr": 29, "dickman_rho": 29, "elliptic_": 29, "elliptic_ec": 29, "elliptic_eu": 29, "elliptic_f": 29, "elliptic_kc": 29, "elliptic_pi": 29, "erfc": 29, "erfi": 29, "erfinv": 29, "exp_integral_": 29, "exp_integral_e1": 29, "fresnel_co": 29, "gamma_inc_low": 29, "gegenbau": 29, "gen_laguerr": 29, "gen_legendre_p": 29, "gen_legendre_q": 29, "hahn": 29, "hankel1": 29, "hankel2": 29, "harmonic_numb": 29, "hurwitz_zeta": 29, "inverse_jacobi_cd": 29, "inverse_jacobi_cn": 29, "inverse_jacobi_c": 29, "inverse_jacobi_dc": 29, "inverse_jacobi_dn": 29, "inverse_jacobi_d": 29, "inverse_jacobi_nc": 29, "inverse_jacobi_nd": 29, "inverse_jacobi_n": 29, "inverse_jacobi_sc": 29, "inverse_jacobi_sd": 29, "inverse_jacobi_sn": 29, "jacobi_p": 29, "jacobi_am": 29, "jacobi_cd": 29, "jacobi_cn": 29, "jacobi_c": 29, "jacobi_dc": 29, "jacobi_dn": 29, "jacobi_d": 29, "jacobi_nc": 29, "jacobi_nd": 29, "jacobi_n": 29, "jacobi_sc": 29, "jacobi_sd": 29, "jacobi_sn": 29, "krawtchouk": 29, "kronecker_delta": 29, "lambert_w": [29, 30], "legendre_p": 29, "legendre_q": 29, "log_integr": 29, "log_integral_offset": 29, "meixner": 29, "polylog": 29, "prime_pi": 29, "real_nth_root": 29, "sin_integr": 29, "sinh_integr": 29, "spherical_bessel_j": 29, "spherical_bessel_i": 29, "spherical_hankel1": 29, "spherical_hankel2": 29, "spherical_harmon": 29, "stieltj": 29, "struve_h": 29, "struve_l": 29, "zetaderiv": 29, "nullari": 29, "catalan": 29, "khinchin": 29, "twinprim": 29, "merten": 29, "nullary_frac": 29, "coeff_gener": 29, "rationalfield": 29, "random_el": 29, "full_intern": 29, "full_nullari": 29, "adjust": 29, "erron": 29, "some_funct": 29, "my_intern": 29, "full_binari": 29, "full_unari": 29, "v1": 29, "9713408427702117": 29, "195868299334218": 29, "v3": 29, "v2": 29, "35859061674557324": 29, "9407509502498164": 29, "8419115504372718": 29, "30375717982404615": 29, "2275357305882964": 29, "8258002386106038": 29, "7604559947718565": 29, "5543672548552057": 29, "random_expr_help": 29, "n_node": 29, "next_expr": 29, "all_expr": 29, "our_expr": 29, "random_integer_vector": 29, "integervector": 29, "uniformli": 29, "uniform": 29, "balanc": 29, "89": 29, "test_symbolic_expression_ord": 29, "repetit": 29, "axiom": 29, "std": 29, "9880": 29, "qe": 30, "ge": 30, "136": 30, "280": 30, "6328345202421523": 30, "634954084936208": 30, "_maxima_init_": 30, "_maxima_": 30, "_maple_init_": 30, "7160": 30, "trick": 30, "suggest": 30, "likewis": 30, "866": 30, "341": 30, "3090169943749475": 30, "9510565162951535": 30, "8090169943749475": 30, "5877852522924731": 30, "henc": 30, "sy": 30, "3276": 30, "worthwhil": 30, "suspect": 30, "unsolv": 30, "did": 30, "use_grobn": 30, "c1": 30, "135": 30, "79": 30, "imageset": 30, "_n": 30, "solve_ineq": 30, "ineq": 30, "solve_ineq_r": 30, "solve_ineq_fouri": 30, "case1": 30, "solve_ineq_univar": 30, "case2": 30, "nonlinear": 30, "cv": 30, "viewvc": 30, "share": 30, "contrib": 30, "fourier_elim": 30, "rtest_fourier_elim": 30, "mac": 30, "galleri": 30, "cover": 30, "detect": 30, "descript": 30, "section": 30, "solve_rat_ineq": 30, "solve_mod": 30, "modulu": 30, "anywher": 30, "fermat": 30, "bigger": 30, "prime": 30, "12915279": 30, "8610183": 30, "4538602480526452429": 30, "11445932736758703821": 30, "38554067263241296179": 30, "45461397519473547571": 30, "54538602480526452429": 30, "61445932736758703821": 30, "88554067263241296179": 30, "95461397519473547571": 30, "naiv": 30, "enumer": 30, "chines": 30, "remaind": 30, "ineffici": 30, "abil": 30, "groebner": 30, "techniqu": 30, "toi": 30, "At": 30, "establish": 30, "string_to_list_of_solut": 30, "monic": 30, "test_relation_maxima": 30, "inconclus": 30, "numpytosrmorph": 31, "morphism": 31, "characterist": 31, "cleanup_var": 31, "garbag": 31, "inexact": 31, "9393": 31, "93930000000000": 31, "is_field": 31, "is_finit": 31, "accepting_vari": [31, 32], "rejecting_vari": [31, 32], "no_vari": [31, 32], "coupl": 31, "an_el": 31, "reject": [31, 32], "some_vari": 31, "propag": 31, "temp_var": 31, "clash": 31, "functional_deriv": 31, "exhaust": 31, "comprehens": 31, "theta2": 31, "temporaryvari": 31, "themselv": 31, "underscoresagemorph": 31, "is_symbolicexpressionr": 31, "isidentifi": 31, "ceci_n_est_pas_une_pip": 31, "2good": 31, "good2": 31, "the_symbolicr": 31, "symbolicsubr": 32, "symbolicsubringacceptingvar": 32, "disjoint": 32, "symbolicsubringrejectingvar": 32, "symbolicconstantssubr": 32, "daniel": 32, "krenn": 32, "2015": 32, "genericsymbolicsubr": 32, "has_valid_vari": 32, "genericsymbolicsubringfunctor": 32, "categori": 32, "pushout": 32, "coercion_revers": 32, "rank": 32, "functori": 32, "symbolicsubringacceptingvarsfunctor": 32, "symbolicsubringfactori": 32, "create_key_and_extra_arg": 32, "symbolicsubringrejectingvarsfunctor": 32, "exmap": 33, "encod": 33, "hook": 33, "dyne": 34, "__doc__": 34, "cg": 34, "gram": 34, "centimet": 34, "hour": 34, "5400000000000": 34, "5760623099": 34, "si": 34, "ackerman": 34, "unitexpress": 34, "extratabcomplet": 34, "cheval_vapeur": 34, "horsepow": 34, "watt": 34, "base_unit": 34, "broken": 34, "volum": 34, "radian": 34, "83795706233228": 34, "light_year": 34, "year": 34, "6249954068750": 34, "square_met": 34, "1953125": 34, "158080329": 34, "convert_temperatur": 34, "273": 34, "493": 34, "98": 34, "6000000000000": 34, "evalunitdict": 34, "unitdict": 34, "build": 34, "eas": 34, "flexibl": 34, "str_to_unit": 34, "unit_derivations_expr": 34, "electric_potenti": 34, "keyerror": 34, "unitdoc": 34, "ndefin": 34, "distanc": 34, "light": 34, "travel": 34, "vacuum": 34, "299792458": 34, "amu": 34, "abbrevi": 34, "atom": 34, "napproxim": 34, "660538782": 34, "unit_doc": 34, "earth": 34, "exist": 34, "vars_in_str": 34}, "objects": {"sage.calculus": [[1, 0, 0, "-", "calculus"], [2, 0, 0, "-", "desolvers"], [3, 0, 0, "-", "functional"], [4, 0, 0, "-", "functions"], [5, 0, 0, "-", "integration"], [6, 0, 0, "-", "interpolation"], [7, 0, 0, "-", "interpolators"], [8, 0, 0, "-", "ode"], [9, 0, 0, "-", "riemann"], [10, 0, 0, "-", "test_sympy"], [11, 0, 0, "-", "tests"], [15, 0, 0, "-", "var"], [16, 0, 0, "-", "wester"]], "sage.calculus.calculus": [[1, 1, 1, "", "at"], [1, 1, 1, "", "dummy_diff"], [1, 1, 1, "", "dummy_integrate"], [1, 1, 1, "", "dummy_inverse_laplace"], [1, 1, 1, "", "dummy_laplace"], [1, 1, 1, "", "dummy_pochhammer"], [1, 1, 1, "", "inverse_laplace"], [1, 1, 1, "", "laplace"], [1, 1, 1, "", "lim"], [1, 1, 1, "", "limit"], [1, 1, 1, "", "mapped_opts"], [1, 1, 1, "", "maxima_options"], [1, 1, 1, "", "minpoly"], [1, 1, 1, "", "mma_free_limit"], [1, 1, 1, "", "nintegral"], [1, 1, 1, "", "nintegrate"], [1, 1, 1, "", "symbolic_expression_from_maxima_string"], [1, 1, 1, "", "symbolic_expression_from_string"], [1, 1, 1, "", "symbolic_product"], [1, 1, 1, "", "symbolic_sum"]], "sage.calculus.desolvers": [[2, 1, 1, "", "desolve"], [2, 1, 1, "", "desolve_laplace"], [2, 1, 1, "", "desolve_mintides"], [2, 1, 1, "", "desolve_odeint"], [2, 1, 1, "", "desolve_rk4"], [2, 1, 1, "", "desolve_rk4_determine_bounds"], [2, 1, 1, "", "desolve_system"], [2, 1, 1, "", "desolve_system_rk4"], [2, 1, 1, "", "desolve_tides_mpfr"], [2, 1, 1, "", "eulers_method"], [2, 1, 1, "", "eulers_method_2x2"], [2, 1, 1, "", "eulers_method_2x2_plot"], [2, 1, 1, "", "fricas_desolve"], [2, 1, 1, "", "fricas_desolve_system"]], "sage.calculus.functional": [[3, 1, 1, "", "derivative"], [3, 1, 1, "", "diff"], [3, 1, 1, "", "expand"], [3, 1, 1, "", "integral"], [3, 1, 1, "", "integrate"], [3, 1, 1, "", "lim"], [3, 1, 1, "", "limit"], [3, 1, 1, "", "simplify"], [3, 1, 1, "", "taylor"]], "sage.calculus.functions": [[4, 1, 1, "", "jacobian"], [4, 1, 1, "", "wronskian"]], "sage.calculus.integration": [[5, 2, 1, "", "PyFunctionWrapper"], [5, 2, 1, "", "compiled_integrand"], [5, 1, 1, "", "monte_carlo_integral"], [5, 1, 1, "", "numerical_integral"]], "sage.calculus.interpolation": [[6, 2, 1, "", "Spline"], [6, 4, 1, "", "spline"]], "sage.calculus.interpolation.Spline": [[6, 3, 1, "", "append"], [6, 3, 1, "", "definite_integral"], [6, 3, 1, "", "derivative"], [6, 3, 1, "", "list"]], "sage.calculus.interpolators": [[7, 2, 1, "", "CCSpline"], [7, 2, 1, "", "PSpline"], [7, 1, 1, "", "complex_cubic_spline"], [7, 1, 1, "", "polygon_spline"]], "sage.calculus.interpolators.CCSpline": [[7, 3, 1, "", "derivative"], [7, 3, 1, "", "value"]], "sage.calculus.interpolators.PSpline": [[7, 3, 1, "", "derivative"], [7, 3, 1, "", "value"]], "sage.calculus.ode": [[8, 2, 1, "", "PyFunctionWrapper"], [8, 2, 1, "", "ode_solver"], [8, 2, 1, "", "ode_system"]], "sage.calculus.ode.ode_solver": [[8, 3, 1, "", "interpolate_solution"], [8, 3, 1, "", "ode_solve"], [8, 3, 1, "", "plot_solution"]], "sage.calculus.riemann": [[9, 2, 1, "", "Riemann_Map"], [9, 1, 1, "", "analytic_boundary"], [9, 1, 1, "", "analytic_interior"], [9, 1, 1, "", "cauchy_kernel"], [9, 1, 1, "", "complex_to_rgb"], [9, 1, 1, "", "complex_to_spiderweb"], [9, 1, 1, "", "get_derivatives"]], "sage.calculus.riemann.Riemann_Map": [[9, 3, 1, "", "compute_on_grid"], [9, 3, 1, "", "get_szego"], [9, 3, 1, "", "get_theta_points"], [9, 3, 1, "", "inverse_riemann_map"], [9, 3, 1, "", "plot_boundaries"], [9, 3, 1, "", "plot_colored"], [9, 3, 1, "", "plot_spiderweb"], [9, 3, 1, "", "riemann_map"]], "sage.calculus.transforms": [[12, 0, 0, "-", "dft"], [13, 0, 0, "-", "dwt"], [14, 0, 0, "-", "fft"]], "sage.calculus.transforms.dft": [[12, 2, 1, "", "IndexedSequence"]], "sage.calculus.transforms.dft.IndexedSequence": [[12, 3, 1, "", "base_ring"], [12, 3, 1, "", "convolution"], [12, 3, 1, "", "convolution_periodic"], [12, 3, 1, "", "dct"], [12, 3, 1, "", "dft"], [12, 3, 1, "", "dict"], [12, 3, 1, "", "dst"], [12, 3, 1, "", "dwt"], [12, 3, 1, "", "fft"], [12, 3, 1, "", "idft"], [12, 3, 1, "", "idwt"], [12, 3, 1, "", "ifft"], [12, 3, 1, "", "index_object"], [12, 3, 1, "", "list"], [12, 3, 1, "", "plot"], [12, 3, 1, "", "plot_histogram"]], "sage.calculus.transforms.dwt": [[13, 1, 1, "", "DWT"], [13, 2, 1, "", "DiscreteWaveletTransform"], [13, 1, 1, "", "WaveletTransform"], [13, 1, 1, "", "is2pow"]], "sage.calculus.transforms.dwt.DiscreteWaveletTransform": [[13, 3, 1, "", "backward_transform"], [13, 3, 1, "", "forward_transform"], [13, 3, 1, "", "plot"]], "sage.calculus.transforms.fft": [[14, 1, 1, "", "FFT"], [14, 1, 1, "", "FastFourierTransform"], [14, 2, 1, "", "FastFourierTransform_base"], [14, 2, 1, "", "FastFourierTransform_complex"], [14, 2, 1, "", "FourierTransform_complex"], [14, 2, 1, "", "FourierTransform_real"]], "sage.calculus.transforms.fft.FastFourierTransform_complex": [[14, 3, 1, "", "backward_transform"], [14, 3, 1, "", "forward_transform"], [14, 3, 1, "", "inverse_transform"], [14, 3, 1, "", "plot"]], "sage.calculus.var": [[15, 1, 1, "", "clear_vars"], [15, 1, 1, "", "function"], [15, 1, 1, "", "var"]], "sage.symbolic": [[17, 0, 0, "-", "assumptions"], [18, 0, 0, "-", "benchmark"], [19, 0, 0, "-", "callable"], [20, 0, 0, "-", "complexity_measures"], [21, 0, 0, "-", "expression"], [22, 0, 0, "-", "expression_conversions"], [23, 0, 0, "-", "function"], [24, 0, 0, "-", "function_factory"], [27, 0, 0, "-", "maxima_wrapper"], [28, 0, 0, "-", "operators"], [29, 0, 0, "-", "random_tests"], [30, 0, 0, "-", "relation"], [31, 0, 0, "-", "ring"], [32, 0, 0, "-", "subring"], [33, 0, 0, "-", "substitution_map"], [34, 0, 0, "-", "units"]], "sage.symbolic.assumptions": [[17, 2, 1, "", "GenericDeclaration"], [17, 1, 1, "", "assume"], [17, 2, 1, "", "assuming"], [17, 1, 1, "", "assumptions"], [17, 1, 1, "", "forget"], [17, 1, 1, "", "preprocess_assumptions"]], "sage.symbolic.assumptions.GenericDeclaration": [[17, 3, 1, "", "assume"], [17, 3, 1, "", "contradicts"], [17, 3, 1, "", "forget"], [17, 3, 1, "", "has"]], "sage.symbolic.callable": [[19, 2, 1, "", "CallableSymbolicExpressionFunctor"], [19, 2, 1, "", "CallableSymbolicExpressionRingFactory"], [19, 2, 1, "", "CallableSymbolicExpressionRing_class"], [19, 1, 1, "", "is_CallableSymbolicExpression"], [19, 1, 1, "", "is_CallableSymbolicExpressionRing"]], "sage.symbolic.callable.CallableSymbolicExpressionFunctor": [[19, 3, 1, "", "arguments"], [19, 3, 1, "", "merge"], [19, 3, 1, "", "unify_arguments"]], "sage.symbolic.callable.CallableSymbolicExpressionRingFactory": [[19, 3, 1, "", "create_key"], [19, 3, 1, "", "create_object"]], "sage.symbolic.callable.CallableSymbolicExpressionRing_class": [[19, 3, 1, "", "args"], [19, 3, 1, "", "arguments"], [19, 3, 1, "", "construction"]], "sage.symbolic.complexity_measures": [[20, 1, 1, "", "string_length"]], "sage.symbolic.expression": [[21, 2, 1, "", "E"], [21, 2, 1, "", "Expression"], [21, 2, 1, "", "ExpressionIterator"], [21, 2, 1, "", "OperandsWrapper"], [21, 2, 1, "", "PynacConstant"], [21, 2, 1, "", "SubstitutionMap"], [21, 2, 1, "", "SymbolicSeries"], [21, 1, 1, "", "call_registered_function"], [21, 1, 1, "", "doublefactorial"], [21, 1, 1, "", "find_registered_function"], [21, 1, 1, "", "get_fn_serial"], [21, 1, 1, "", "get_ginac_serial"], [21, 1, 1, "", "get_sfunction_from_hash"], [21, 1, 1, "", "get_sfunction_from_serial"], [21, 2, 1, "", "hold_class"], [21, 1, 1, "", "init_function_table"], [21, 1, 1, "", "init_pynac_I"], [21, 1, 1, "", "is_Expression"], [21, 1, 1, "", "is_SymbolicEquation"], [21, 1, 1, "", "make_map"], [21, 1, 1, "", "math_sorted"], [21, 1, 1, "", "mixed_order"], [21, 1, 1, "", "mixed_sorted"], [21, 1, 1, "", "new_Expression"], [21, 1, 1, "", "new_Expression_from_pyobject"], [21, 1, 1, "", "new_Expression_symbol"], [21, 1, 1, "", "new_Expression_wild"], [21, 1, 1, "", "normalize_index_for_doctests"], [21, 1, 1, "", "paramset_from_Expression"], [21, 1, 1, "", "print_order"], [21, 1, 1, "", "print_sorted"], [21, 1, 1, "", "py_atan2_for_doctests"], [21, 1, 1, "", "py_denom_for_doctests"], [21, 1, 1, "", "py_eval_infinity_for_doctests"], [21, 1, 1, "", "py_eval_neg_infinity_for_doctests"], [21, 1, 1, "", "py_eval_unsigned_infinity_for_doctests"], [21, 1, 1, "", "py_exp_for_doctests"], [21, 1, 1, "", "py_factorial_py"], [21, 1, 1, "", "py_float_for_doctests"], [21, 1, 1, "", "py_imag_for_doctests"], [21, 1, 1, "", "py_is_cinteger_for_doctest"], [21, 1, 1, "", "py_is_crational_for_doctest"], [21, 1, 1, "", "py_is_integer_for_doctests"], [21, 1, 1, "", "py_latex_fderivative_for_doctests"], [21, 1, 1, "", "py_latex_function_pystring"], [21, 1, 1, "", "py_latex_variable_for_doctests"], [21, 1, 1, "", "py_lgamma_for_doctests"], [21, 1, 1, "", "py_li2_for_doctests"], [21, 1, 1, "", "py_li_for_doctests"], [21, 1, 1, "", "py_log_for_doctests"], [21, 1, 1, "", "py_mod_for_doctests"], [21, 1, 1, "", "py_numer_for_doctests"], [21, 1, 1, "", "py_print_fderivative_for_doctests"], [21, 1, 1, "", "py_print_function_pystring"], [21, 1, 1, "", "py_psi2_for_doctests"], [21, 1, 1, "", "py_psi_for_doctests"], [21, 1, 1, "", "py_real_for_doctests"], [21, 1, 1, "", "py_stieltjes_for_doctests"], [21, 1, 1, "", "py_tgamma_for_doctests"], [21, 1, 1, "", "py_zeta_for_doctests"], [21, 1, 1, "", "register_or_update_function"], [21, 1, 1, "", "register_symbol"], [21, 1, 1, "", "restore_op_wrapper"], [21, 1, 1, "", "solve_diophantine"], [21, 1, 1, "", "test_binomial"], [21, 1, 1, "", "tolerant_is_symbol"], [21, 1, 1, "", "unpack_operands"]], "sage.symbolic.expression.Expression": [[21, 3, 1, "", "Order"], [21, 3, 1, "", "WZ_certificate"], [21, 3, 1, "", "abs"], [21, 3, 1, "", "add"], [21, 3, 1, "", "add_to_both_sides"], [21, 3, 1, "", "arccos"], [21, 3, 1, "", "arccosh"], [21, 3, 1, "", "arcsin"], [21, 3, 1, "", "arcsinh"], [21, 3, 1, "", "arctan"], [21, 3, 1, "", "arctan2"], [21, 3, 1, "", "arctanh"], [21, 3, 1, "", "args"], [21, 3, 1, "", "arguments"], [21, 3, 1, "", "assume"], [21, 3, 1, "", "binomial"], [21, 3, 1, "", "canonicalize_radical"], [21, 3, 1, "", "coefficient"], [21, 3, 1, "", "coefficients"], [21, 3, 1, "", "collect"], [21, 3, 1, "", "collect_common_factors"], [21, 3, 1, "", "combine"], [21, 3, 1, "", "conjugate"], [21, 3, 1, "", "content"], [21, 3, 1, "", "contradicts"], [21, 3, 1, "", "convert"], [21, 3, 1, "", "cos"], [21, 3, 1, "", "cosh"], [21, 3, 1, "", "csgn"], [21, 3, 1, "", "decl_assume"], [21, 3, 1, "", "decl_forget"], [21, 3, 1, "", "default_variable"], [21, 3, 1, "", "degree"], [21, 3, 1, "", "demoivre"], [21, 3, 1, "", "denominator"], [21, 3, 1, "", "derivative"], [21, 3, 1, "", "diff"], [21, 3, 1, "", "differentiate"], [21, 3, 1, "", "distribute"], [21, 3, 1, "", "divide_both_sides"], [21, 3, 1, "", "exp"], [21, 3, 1, "", "expand"], [21, 3, 1, "", "expand_log"], [21, 3, 1, "", "expand_rational"], [21, 3, 1, "", "expand_sum"], [21, 3, 1, "", "expand_trig"], [21, 3, 1, "", "exponentialize"], [21, 3, 1, "", "factor"], [21, 3, 1, "", "factor_list"], [21, 3, 1, "", "factorial"], [21, 3, 1, "", "factorial_simplify"], [21, 3, 1, "", "find"], [21, 3, 1, "", "find_local_maximum"], [21, 3, 1, "", "find_local_minimum"], [21, 3, 1, "", "find_root"], [21, 3, 1, "", "forget"], [21, 3, 1, "", "fraction"], [21, 3, 1, "", "free_variables"], [21, 3, 1, "", "full_simplify"], [21, 3, 1, "", "function"], [21, 3, 1, "", "gamma"], [21, 3, 1, "", "gamma_normalize"], [21, 3, 1, "", "gcd"], [21, 3, 1, "", "gosper_sum"], [21, 3, 1, "", "gosper_term"], [21, 3, 1, "", "gradient"], [21, 3, 1, "", "has"], [21, 3, 1, "", "has_wild"], [21, 3, 1, "", "hessian"], [21, 3, 1, "", "horner"], [21, 3, 1, "", "hypergeometric_simplify"], [21, 3, 1, "", "imag"], [21, 3, 1, "", "imag_part"], [21, 3, 1, "", "implicit_derivative"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate"], [21, 3, 1, "", "inverse_laplace"], [21, 3, 1, "", "is_algebraic"], [21, 3, 1, "", "is_callable"], [21, 3, 1, "", "is_constant"], [21, 3, 1, "", "is_exact"], [21, 3, 1, "", "is_infinity"], [21, 3, 1, "", "is_integer"], [21, 3, 1, "", "is_negative"], [21, 3, 1, "", "is_negative_infinity"], [21, 3, 1, "", "is_numeric"], [21, 3, 1, "", "is_polynomial"], [21, 3, 1, "", "is_positive"], [21, 3, 1, "", "is_positive_infinity"], [21, 3, 1, "", "is_rational_expression"], [21, 3, 1, "", "is_real"], [21, 3, 1, "", "is_relational"], [21, 3, 1, "", "is_square"], [21, 3, 1, "", "is_symbol"], [21, 3, 1, "", "is_terminating_series"], [21, 3, 1, "", "is_trivial_zero"], [21, 3, 1, "", "is_trivially_equal"], [21, 3, 1, "", "is_unit"], [21, 3, 1, "", "iterator"], [21, 3, 1, "", "laplace"], [21, 3, 1, "", "laurent_polynomial"], [21, 3, 1, "", "lcm"], [21, 3, 1, "", "leading_coeff"], [21, 3, 1, "", "leading_coefficient"], [21, 3, 1, "", "left"], [21, 3, 1, "", "left_hand_side"], [21, 3, 1, "", "lhs"], [21, 3, 1, "", "limit"], [21, 3, 1, "", "list"], [21, 3, 1, "", "log"], [21, 3, 1, "", "log_expand"], [21, 3, 1, "", "log_gamma"], [21, 3, 1, "", "log_simplify"], [21, 3, 1, "", "low_degree"], [21, 3, 1, "", "match"], [21, 3, 1, "", "maxima_methods"], [21, 3, 1, "", "minpoly"], [21, 3, 1, "", "mul"], [21, 3, 1, "", "multiply_both_sides"], [21, 3, 1, "", "negation"], [21, 3, 1, "", "nintegral"], [21, 3, 1, "", "nintegrate"], [21, 3, 1, "", "nops"], [21, 3, 1, "", "norm"], [21, 3, 1, "", "normalize"], [21, 3, 1, "", "number_of_arguments"], [21, 3, 1, "", "number_of_operands"], [21, 3, 1, "", "numerator"], [21, 3, 1, "", "numerator_denominator"], [21, 3, 1, "", "numerical_approx"], [21, 4, 1, "", "op"], [21, 3, 1, "", "operands"], [21, 3, 1, "", "operator"], [21, 3, 1, "", "partial_fraction"], [21, 3, 1, "", "partial_fraction_decomposition"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "poly"], [21, 3, 1, "", "polynomial"], [21, 3, 1, "", "power"], [21, 3, 1, "", "power_series"], [21, 3, 1, "", "primitive_part"], [21, 3, 1, "", "prod"], [21, 3, 1, "", "pyobject"], [21, 3, 1, "", "rational_expand"], [21, 3, 1, "", "rational_simplify"], [21, 3, 1, "", "real"], [21, 3, 1, "", "real_part"], [21, 3, 1, "", "rectform"], [21, 3, 1, "", "reduce_trig"], [21, 3, 1, "", "residue"], [21, 3, 1, "", "resultant"], [21, 3, 1, "", "rhs"], [21, 3, 1, "", "right"], [21, 3, 1, "", "right_hand_side"], [21, 3, 1, "", "roots"], [21, 3, 1, "", "round"], [21, 3, 1, "", "series"], [21, 3, 1, "", "show"], [21, 3, 1, "", "simplify"], [21, 3, 1, "", "simplify_factorial"], [21, 3, 1, "", "simplify_full"], [21, 3, 1, "", "simplify_hypergeometric"], [21, 3, 1, "", "simplify_log"], [21, 3, 1, "", "simplify_rational"], [21, 3, 1, "", "simplify_real"], [21, 3, 1, "", "simplify_rectform"], [21, 3, 1, "", "simplify_trig"], [21, 3, 1, "", "sin"], [21, 3, 1, "", "sinh"], [21, 3, 1, "", "solve"], [21, 3, 1, "", "solve_diophantine"], [21, 3, 1, "", "sqrt"], [21, 3, 1, "", "step"], [21, 3, 1, "", "subs"], [21, 3, 1, "", "substitute"], [21, 3, 1, "", "substitute_function"], [21, 3, 1, "", "substitution_delayed"], [21, 3, 1, "", "subtract_from_both_sides"], [21, 3, 1, "", "sum"], [21, 3, 1, "", "tan"], [21, 3, 1, "", "tanh"], [21, 3, 1, "", "taylor"], [21, 3, 1, "", "test_relation"], [21, 3, 1, "", "to_gamma"], [21, 3, 1, "", "trailing_coeff"], [21, 3, 1, "", "trailing_coefficient"], [21, 3, 1, "", "trig_expand"], [21, 3, 1, "", "trig_reduce"], [21, 3, 1, "", "trig_simplify"], [21, 3, 1, "", "truncate"], [21, 3, 1, "", "unhold"], [21, 3, 1, "", "unit"], [21, 3, 1, "", "unit_content_primitive"], [21, 3, 1, "", "variables"], [21, 3, 1, "", "zeta"]], "sage.symbolic.expression.PynacConstant": [[21, 3, 1, "", "expression"], [21, 3, 1, "", "name"], [21, 3, 1, "", "serial"]], "sage.symbolic.expression.SubstitutionMap": [[21, 3, 1, "", "apply_to"]], "sage.symbolic.expression.SymbolicSeries": [[21, 3, 1, "", "coefficients"], [21, 3, 1, "", "default_variable"], [21, 3, 1, "", "is_terminating_series"], [21, 3, 1, "", "power_series"], [21, 3, 1, "", "truncate"]], "sage.symbolic.expression.hold_class": [[21, 3, 1, "", "start"], [21, 3, 1, "", "stop"]], "sage.symbolic.expression_conversions": [[22, 2, 1, "", "AlgebraicConverter"], [22, 2, 1, "", "Converter"], [22, 2, 1, "", "DeMoivre"], [22, 2, 1, "", "Exponentialize"], [22, 2, 1, "", "ExpressionTreeWalker"], [22, 2, 1, "", "FakeExpression"], [22, 2, 1, "", "FastCallableConverter"], [22, 2, 1, "", "FriCASConverter"], [22, 2, 1, "", "HoldRemover"], [22, 2, 1, "", "InterfaceInit"], [22, 2, 1, "", "LaurentPolynomialConverter"], [22, 2, 1, "", "PolynomialConverter"], [22, 2, 1, "", "RingConverter"], [22, 2, 1, "", "SubstituteFunction"], [22, 2, 1, "", "SympyConverter"], [22, 1, 1, "", "algebraic"], [22, 1, 1, "", "fast_callable"], [22, 1, 1, "", "laurent_polynomial"], [22, 1, 1, "", "polynomial"]], "sage.symbolic.expression_conversions.AlgebraicConverter": [[22, 3, 1, "", "arithmetic"], [22, 3, 1, "", "composition"], [22, 3, 1, "", "pyobject"]], "sage.symbolic.expression_conversions.Converter": [[22, 3, 1, "", "arithmetic"], [22, 3, 1, "", "composition"], [22, 3, 1, "", "derivative"], [22, 3, 1, "", "get_fake_div"], [22, 3, 1, "", "pyobject"], [22, 3, 1, "", "relation"], [22, 3, 1, "", "symbol"]], "sage.symbolic.expression_conversions.DeMoivre": [[22, 3, 1, "", "composition"]], "sage.symbolic.expression_conversions.Exponentialize": [[22, 4, 1, "", "CircDict"], [22, 4, 1, "", "Circs"], [22, 4, 1, "", "I"], [22, 4, 1, "", "Integer"], [22, 4, 1, "", "SR"], [22, 3, 1, "", "composition"], [22, 4, 1, "", "cos"], [22, 4, 1, "", "cosh"], [22, 4, 1, "", "cot"], [22, 4, 1, "", "coth"], [22, 4, 1, "", "csc"], [22, 4, 1, "", "csch"], [22, 4, 1, "", "e"], [22, 4, 1, "", "exp"], [22, 3, 1, "", "function"], [22, 4, 1, "", "half"], [22, 4, 1, "", "sec"], [22, 4, 1, "", "sech"], [22, 4, 1, "", "sin"], [22, 4, 1, "", "sinh"], [22, 4, 1, "", "tan"], [22, 4, 1, "", "tanh"], [22, 4, 1, "", "two"], [22, 4, 1, "", "x"]], "sage.symbolic.expression_conversions.ExpressionTreeWalker": [[22, 3, 1, "", "arithmetic"], [22, 3, 1, "", "composition"], [22, 3, 1, "", "derivative"], [22, 3, 1, "", "pyobject"], [22, 3, 1, "", "relation"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "tuple"]], "sage.symbolic.expression_conversions.FakeExpression": [[22, 3, 1, "", "operands"], [22, 3, 1, "", "operator"], [22, 3, 1, "", "pyobject"]], "sage.symbolic.expression_conversions.FastCallableConverter": [[22, 3, 1, "", "arithmetic"], [22, 3, 1, "", "composition"], [22, 3, 1, "", "pyobject"], [22, 3, 1, "", "relation"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "tuple"]], "sage.symbolic.expression_conversions.FriCASConverter": [[22, 3, 1, "", "derivative"], [22, 3, 1, "", "pyobject"], [22, 3, 1, "", "symbol"]], "sage.symbolic.expression_conversions.HoldRemover": [[22, 3, 1, "", "composition"]], "sage.symbolic.expression_conversions.InterfaceInit": [[22, 3, 1, "", "arithmetic"], [22, 3, 1, "", "composition"], [22, 3, 1, "", "derivative"], [22, 3, 1, "", "pyobject"], [22, 3, 1, "", "relation"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "tuple"]], "sage.symbolic.expression_conversions.PolynomialConverter": [[22, 3, 1, "", "arithmetic"], [22, 3, 1, "", "composition"], [22, 3, 1, "", "pyobject"], [22, 3, 1, "", "relation"], [22, 3, 1, "", "symbol"]], "sage.symbolic.expression_conversions.RingConverter": [[22, 3, 1, "", "arithmetic"], [22, 3, 1, "", "composition"], [22, 3, 1, "", "pyobject"], [22, 3, 1, "", "symbol"]], "sage.symbolic.expression_conversions.SubstituteFunction": [[22, 3, 1, "", "composition"], [22, 3, 1, "", "derivative"]], "sage.symbolic.expression_conversions.SympyConverter": [[22, 3, 1, "", "arithmetic"], [22, 3, 1, "", "composition"], [22, 3, 1, "", "derivative"], [22, 3, 1, "", "pyobject"], [22, 3, 1, "", "relation"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "tuple"]], "sage.symbolic.function": [[23, 2, 1, "", "BuiltinFunction"], [23, 2, 1, "", "Function"], [23, 2, 1, "", "GinacFunction"], [23, 2, 1, "", "SymbolicFunction"], [23, 1, 1, "", "pickle_wrapper"], [23, 1, 1, "", "unpickle_wrapper"]], "sage.symbolic.function.Function": [[23, 3, 1, "", "default_variable"], [23, 3, 1, "", "name"], [23, 3, 1, "", "number_of_arguments"], [23, 3, 1, "", "variables"]], "sage.symbolic.function_factory": [[24, 1, 1, "", "function"], [24, 1, 1, "", "function_factory"], [24, 1, 1, "", "unpickle_function"]], "sage.symbolic.integration": [[25, 0, 0, "-", "external"], [26, 0, 0, "-", "integral"]], "sage.symbolic.integration.external": [[25, 1, 1, "", "fricas_integrator"], [25, 1, 1, "", "giac_integrator"], [25, 1, 1, "", "libgiac_integrator"], [25, 1, 1, "", "maxima_integrator"], [25, 1, 1, "", "mma_free_integrator"], [25, 1, 1, "", "sympy_integrator"]], "sage.symbolic.integration.integral": [[26, 2, 1, "", "DefiniteIntegral"], [26, 2, 1, "", "IndefiniteIntegral"], [26, 1, 1, "", "integral"], [26, 1, 1, "", "integrate"]], "sage.symbolic.maxima_wrapper": [[27, 2, 1, "", "MaximaFunctionElementWrapper"], [27, 2, 1, "", "MaximaWrapper"]], "sage.symbolic.maxima_wrapper.MaximaWrapper": [[27, 3, 1, "", "sage"]], "sage.symbolic.operators": [[28, 2, 1, "", "DerivativeOperator"], [28, 2, 1, "", "FDerivativeOperator"], [28, 1, 1, "", "add_vararg"], [28, 1, 1, "", "mul_vararg"]], "sage.symbolic.operators.DerivativeOperator": [[28, 2, 1, "", "DerivativeOperatorWithParameters"]], "sage.symbolic.operators.FDerivativeOperator": [[28, 3, 1, "", "change_function"], [28, 3, 1, "", "function"], [28, 3, 1, "", "parameter_set"]], "sage.symbolic.random_tests": [[29, 1, 1, "", "assert_strict_weak_order"], [29, 1, 1, "", "choose_from_prob_list"], [29, 1, 1, "", "normalize_prob_list"], [29, 1, 1, "", "random_expr"], [29, 1, 1, "", "random_expr_helper"], [29, 1, 1, "", "random_integer_vector"], [29, 1, 1, "", "test_symbolic_expression_order"]], "sage.symbolic.relation": [[30, 1, 1, "", "solve"], [30, 1, 1, "", "solve_ineq"], [30, 1, 1, "", "solve_ineq_fourier"], [30, 1, 1, "", "solve_ineq_univar"], [30, 1, 1, "", "solve_mod"], [30, 1, 1, "", "string_to_list_of_solutions"], [30, 1, 1, "", "test_relation_maxima"]], "sage.symbolic.ring": [[31, 2, 1, "", "NumpyToSRMorphism"], [31, 2, 1, "", "SymbolicRing"], [31, 2, 1, "", "TemporaryVariables"], [31, 2, 1, "", "UnderscoreSageMorphism"], [31, 1, 1, "", "is_SymbolicExpressionRing"], [31, 1, 1, "", "isidentifier"], [31, 1, 1, "", "the_SymbolicRing"], [31, 1, 1, "", "var"]], "sage.symbolic.ring.SymbolicRing": [[31, 3, 1, "", "I"], [31, 3, 1, "", "characteristic"], [31, 3, 1, "", "cleanup_var"], [31, 3, 1, "", "is_exact"], [31, 3, 1, "", "is_field"], [31, 3, 1, "", "is_finite"], [31, 3, 1, "", "pi"], [31, 3, 1, "", "subring"], [31, 3, 1, "", "symbol"], [31, 4, 1, "", "symbols"], [31, 3, 1, "", "temp_var"], [31, 3, 1, "", "var"], [31, 3, 1, "", "wild"]], "sage.symbolic.subring": [[32, 2, 1, "", "GenericSymbolicSubring"], [32, 2, 1, "", "GenericSymbolicSubringFunctor"], [32, 2, 1, "", "SymbolicConstantsSubring"], [32, 2, 1, "", "SymbolicSubringAcceptingVars"], [32, 2, 1, "", "SymbolicSubringAcceptingVarsFunctor"], [32, 2, 1, "", "SymbolicSubringFactory"], [32, 2, 1, "", "SymbolicSubringRejectingVars"], [32, 2, 1, "", "SymbolicSubringRejectingVarsFunctor"]], "sage.symbolic.subring.GenericSymbolicSubring": [[32, 3, 1, "", "has_valid_variable"]], "sage.symbolic.subring.GenericSymbolicSubringFunctor": [[32, 4, 1, "", "coercion_reversed"], [32, 3, 1, "", "merge"], [32, 4, 1, "", "rank"]], "sage.symbolic.subring.SymbolicConstantsSubring": [[32, 3, 1, "", "has_valid_variable"]], "sage.symbolic.subring.SymbolicSubringAcceptingVars": [[32, 3, 1, "", "construction"], [32, 3, 1, "", "has_valid_variable"]], "sage.symbolic.subring.SymbolicSubringAcceptingVarsFunctor": [[32, 3, 1, "", "merge"]], "sage.symbolic.subring.SymbolicSubringFactory": [[32, 3, 1, "", "create_key_and_extra_args"], [32, 3, 1, "", "create_object"]], "sage.symbolic.subring.SymbolicSubringRejectingVars": [[32, 3, 1, "", "construction"], [32, 3, 1, "", "has_valid_variable"]], "sage.symbolic.subring.SymbolicSubringRejectingVarsFunctor": [[32, 3, 1, "", "merge"]], "sage.symbolic.units": [[34, 2, 1, "", "UnitExpression"], [34, 2, 1, "", "Units"], [34, 1, 1, "", "base_units"], [34, 1, 1, "", "convert"], [34, 1, 1, "", "convert_temperature"], [34, 1, 1, "", "evalunitdict"], [34, 1, 1, "", "is_unit"], [34, 1, 1, "", "str_to_unit"], [34, 1, 1, "", "unit_derivations_expr"], [34, 1, 1, "", "unitdocs"], [34, 1, 1, "", "vars_in_str"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"symbol": [0, 1, 15, 19, 21, 22, 23, 24, 26, 30, 31, 32], "calculu": [0, 3, 4, 11], "us": [0, 6, 10, 14], "intern": 0, "function": [0, 3, 4, 23, 24], "support": [0, 3], "indic": 0, "tabl": 0, "comput": 1, "solv": [2, 8, 30], "ordinari": 2, "differenti": 2, "equat": [2, 30], "notat": 3, "common": 3, "method": [3, 27, 32], "numer": [5, 8], "integr": [5, 26], "real": 6, "interpol": [6, 7], "gsl": [6, 8, 14], "complex": [7, 20], "od": 8, "riemann": 9, "map": [9, 33], "A": 10, "sampl": 10, "session": 10, "sympi": 10, "test": [11, 25, 29], "exampl": [11, 16, 30], "discret": [12, 13], "fourier": [12, 14], "transform": [12, 13, 14], "todo": 12, "wavelet": 13, "fast": 14, "variabl": 15, "further": 16, "from": 16, "wester": 16, "": 16, "paper": 16, "assumpt": [17, 30], "benchmark": 18, "callabl": 19, "express": [19, 21, 22], "measur": [20, 34], "convers": 22, "other": 22, "type": 22, "class": [23, 32], "factori": 24, "access": 27, "maxima": 27, "oper": [28, 30], "random": 29, "ginac": 29, "pynac": 29, "inequ": 30, "The": [30, 31], "left": 30, "hand": 30, "side": 30, "right": 30, "arithmet": 30, "substitut": [30, 33], "miscellan": 30, "more": 30, "ring": [31, 32], "subr": 32, "unit": 34}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Symbolic Calculus": [[0, "symbolic-calculus"]], "Using calculus": [[0, "using-calculus"]], "Internal functionality supporting calculus": [[0, "internal-functionality-supporting-calculus"]], "Indices and Tables": [[0, "indices-and-tables"]], "Symbolic Computation": [[1, "symbolic-computation"]], "Solving ordinary differential equations": [[2, "solving-ordinary-differential-equations"]], "Functional notation support for common calculus methods": [[3, "functional-notation-support-for-common-calculus-methods"]], "Calculus functions": [[4, "calculus-functions"]], "Numerical Integration": [[5, "numerical-integration"]], "Real Interpolation using GSL": [[6, "real-interpolation-using-gsl"]], "Complex Interpolation": [[7, "complex-interpolation"]], "Solving ODE numerically by GSL": [[8, "solving-ode-numerically-by-gsl"]], "Riemann Mapping": [[9, "riemann-mapping"]], "A Sample Session using SymPy": [[10, "a-sample-session-using-sympy"]], "Calculus Tests and Examples": [[11, "calculus-tests-and-examples"]], "Discrete Fourier Transforms": [[12, "discrete-fourier-transforms"]], "Todo": [[12, "id1"], [12, "id2"]], "Discrete Wavelet Transform": [[13, "discrete-wavelet-transform"]], "Fast Fourier Transforms Using GSL": [[14, "fast-fourier-transforms-using-gsl"]], "Symbolic variables": [[15, "symbolic-variables"]], "Further examples from Wester\u2019s paper": [[16, "further-examples-from-wester-s-paper"]], "Assumptions": [[17, "assumptions"], [30, "assumptions"]], "Benchmarks": [[18, "benchmarks"]], "Callable Symbolic Expressions": [[19, "callable-symbolic-expressions"]], "Complexity Measures": [[20, "complexity-measures"]], "Symbolic Expressions": [[21, "symbolic-expressions"]], "Conversion of symbolic expressions to other types": [[22, "conversion-of-symbolic-expressions-to-other-types"]], "Classes for symbolic functions": [[23, "classes-for-symbolic-functions"]], "Factory for symbolic functions": [[24, "factory-for-symbolic-functions"]], "TESTS::": [[25, "tests"]], "Symbolic Integration": [[26, "symbolic-integration"]], "Access to Maxima methods": [[27, "access-to-maxima-methods"]], "Operators": [[28, "operators"]], "Randomized tests of GiNaC / PyNaC": [[29, "randomized-tests-of-ginac-pynac"]], "Symbolic Equations and Inequalities": [[30, "symbolic-equations-and-inequalities"]], "The operator, left hand side, and right hand side": [[30, "the-operator-left-hand-side-and-right-hand-side"]], "Arithmetic": [[30, "arithmetic"]], "Substitution": [[30, "substitution"]], "Solving": [[30, "solving"]], "Miscellaneous": [[30, "miscellaneous"]], "More Examples": [[30, "more-examples"]], "The symbolic ring": [[31, "the-symbolic-ring"]], "Subrings of the Symbolic Ring": [[32, "subrings-of-the-symbolic-ring"]], "Classes and Methods": [[32, "classes-and-methods"]], "Substitution Maps": [[33, "substitution-maps"]], "Units of measurement": [[34, "units-of-measurement"]]}, "indexentries": {"at() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.at"]], "dummy_diff() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.dummy_diff"]], "dummy_integrate() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.dummy_integrate"]], "dummy_inverse_laplace() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.dummy_inverse_laplace"]], "dummy_laplace() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.dummy_laplace"]], "dummy_pochhammer() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.dummy_pochhammer"]], "inverse_laplace() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.inverse_laplace"]], "laplace() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.laplace"]], "lim() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.lim"]], "limit() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.limit"]], "mapped_opts() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.mapped_opts"]], "maxima_options() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.maxima_options"]], "minpoly() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.minpoly"]], "mma_free_limit() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.mma_free_limit"]], "module": [[1, "module-sage.calculus.calculus"], [2, "module-sage.calculus.desolvers"], [3, "module-sage.calculus.functional"], [4, "module-sage.calculus.functions"], [5, "module-sage.calculus.integration"], [6, "module-sage.calculus.interpolation"], [7, "module-sage.calculus.interpolators"], [8, "module-sage.calculus.ode"], [9, "module-sage.calculus.riemann"], [10, "module-sage.calculus.test_sympy"], [11, "module-sage.calculus.tests"], [12, "module-sage.calculus.transforms.dft"], [13, "module-sage.calculus.transforms.dwt"], [14, "module-sage.calculus.transforms.fft"], [15, "module-sage.calculus.var"], [16, "module-sage.calculus.wester"], [17, "module-sage.symbolic.assumptions"], [18, "module-sage.symbolic.benchmark"], [19, "module-sage.symbolic.callable"], [20, "module-sage.symbolic.complexity_measures"], [21, "module-sage.symbolic.expression"], [22, "module-sage.symbolic.expression_conversions"], [23, "module-sage.symbolic.function"], [24, "module-sage.symbolic.function_factory"], [25, "module-sage.symbolic.integration.external"], [26, "module-sage.symbolic.integration.integral"], [27, "module-sage.symbolic.maxima_wrapper"], [28, "module-sage.symbolic.operators"], [29, "module-sage.symbolic.random_tests"], [30, "module-sage.symbolic.relation"], [31, "module-sage.symbolic.ring"], [32, "module-sage.symbolic.subring"], [33, "module-sage.symbolic.substitution_map"], [34, "module-sage.symbolic.units"]], "nintegral() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.nintegral"]], "nintegrate() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.nintegrate"]], "sage.calculus.calculus": [[1, "module-sage.calculus.calculus"]], "symbolic_expression_from_maxima_string() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.symbolic_expression_from_maxima_string"]], "symbolic_expression_from_string() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.symbolic_expression_from_string"]], "symbolic_product() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.symbolic_product"]], "symbolic_sum() (in module sage.calculus.calculus)": [[1, "sage.calculus.calculus.symbolic_sum"]], "desolve() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve"]], "desolve_laplace() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_laplace"]], "desolve_mintides() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_mintides"]], "desolve_odeint() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_odeint"]], "desolve_rk4() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_rk4"]], "desolve_rk4_determine_bounds() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_rk4_determine_bounds"]], "desolve_system() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_system"]], "desolve_system_rk4() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_system_rk4"]], "desolve_tides_mpfr() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.desolve_tides_mpfr"]], "eulers_method() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.eulers_method"]], "eulers_method_2x2() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.eulers_method_2x2"]], "eulers_method_2x2_plot() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.eulers_method_2x2_plot"]], "fricas_desolve() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.fricas_desolve"]], "fricas_desolve_system() (in module sage.calculus.desolvers)": [[2, "sage.calculus.desolvers.fricas_desolve_system"]], "sage.calculus.desolvers": [[2, "module-sage.calculus.desolvers"]], "derivative() (in module sage.calculus.functional)": [[3, "sage.calculus.functional.derivative"]], "diff() (in module sage.calculus.functional)": [[3, "sage.calculus.functional.diff"]], "expand() (in module sage.calculus.functional)": [[3, "sage.calculus.functional.expand"]], "integral() (in module sage.calculus.functional)": [[3, "sage.calculus.functional.integral"]], "integrate() (in module sage.calculus.functional)": [[3, "sage.calculus.functional.integrate"]], "lim() (in module sage.calculus.functional)": [[3, "sage.calculus.functional.lim"]], "limit() (in module sage.calculus.functional)": [[3, "sage.calculus.functional.limit"]], "sage.calculus.functional": [[3, "module-sage.calculus.functional"]], "simplify() (in module sage.calculus.functional)": [[3, "sage.calculus.functional.simplify"]], "taylor() (in module sage.calculus.functional)": [[3, "sage.calculus.functional.taylor"]], "jacobian() (in module sage.calculus.functions)": [[4, "sage.calculus.functions.jacobian"]], "sage.calculus.functions": [[4, "module-sage.calculus.functions"]], "wronskian() (in module sage.calculus.functions)": [[4, "sage.calculus.functions.wronskian"]], "pyfunctionwrapper (class in sage.calculus.integration)": [[5, "sage.calculus.integration.PyFunctionWrapper"]], "compiled_integrand (class in sage.calculus.integration)": [[5, "sage.calculus.integration.compiled_integrand"]], "monte_carlo_integral() (in module sage.calculus.integration)": [[5, "sage.calculus.integration.monte_carlo_integral"]], "numerical_integral() (in module sage.calculus.integration)": [[5, "sage.calculus.integration.numerical_integral"]], "sage.calculus.integration": [[5, "module-sage.calculus.integration"]], "spline (class in sage.calculus.interpolation)": [[6, "sage.calculus.interpolation.Spline"]], "append() (sage.calculus.interpolation.spline method)": [[6, "sage.calculus.interpolation.Spline.append"]], "definite_integral() (sage.calculus.interpolation.spline method)": [[6, "sage.calculus.interpolation.Spline.definite_integral"]], "derivative() (sage.calculus.interpolation.spline method)": [[6, "sage.calculus.interpolation.Spline.derivative"]], "list() (sage.calculus.interpolation.spline method)": [[6, "sage.calculus.interpolation.Spline.list"]], "sage.calculus.interpolation": [[6, "module-sage.calculus.interpolation"]], "spline (in module sage.calculus.interpolation)": [[6, "sage.calculus.interpolation.spline"]], "ccspline (class in sage.calculus.interpolators)": [[7, "sage.calculus.interpolators.CCSpline"]], "pspline (class in sage.calculus.interpolators)": [[7, "sage.calculus.interpolators.PSpline"]], "complex_cubic_spline() (in module sage.calculus.interpolators)": [[7, "sage.calculus.interpolators.complex_cubic_spline"]], "derivative() (sage.calculus.interpolators.ccspline method)": [[7, "sage.calculus.interpolators.CCSpline.derivative"]], "derivative() (sage.calculus.interpolators.pspline method)": [[7, "sage.calculus.interpolators.PSpline.derivative"]], "polygon_spline() (in module sage.calculus.interpolators)": [[7, "sage.calculus.interpolators.polygon_spline"]], "sage.calculus.interpolators": [[7, "module-sage.calculus.interpolators"]], "value() (sage.calculus.interpolators.ccspline method)": [[7, "sage.calculus.interpolators.CCSpline.value"]], "value() (sage.calculus.interpolators.pspline method)": [[7, "sage.calculus.interpolators.PSpline.value"]], "pyfunctionwrapper (class in sage.calculus.ode)": [[8, "sage.calculus.ode.PyFunctionWrapper"]], "interpolate_solution() (sage.calculus.ode.ode_solver method)": [[8, "sage.calculus.ode.ode_solver.interpolate_solution"]], "ode_solve() (sage.calculus.ode.ode_solver method)": [[8, "sage.calculus.ode.ode_solver.ode_solve"]], "ode_solver (class in sage.calculus.ode)": [[8, "sage.calculus.ode.ode_solver"]], "ode_system (class in sage.calculus.ode)": [[8, "sage.calculus.ode.ode_system"]], "plot_solution() (sage.calculus.ode.ode_solver method)": [[8, "sage.calculus.ode.ode_solver.plot_solution"]], "sage.calculus.ode": [[8, "module-sage.calculus.ode"]], "riemann_map (class in sage.calculus.riemann)": [[9, "sage.calculus.riemann.Riemann_Map"]], "analytic_boundary() (in module sage.calculus.riemann)": [[9, "sage.calculus.riemann.analytic_boundary"]], "analytic_interior() (in module sage.calculus.riemann)": [[9, "sage.calculus.riemann.analytic_interior"]], "cauchy_kernel() (in module sage.calculus.riemann)": [[9, "sage.calculus.riemann.cauchy_kernel"]], "complex_to_rgb() (in module sage.calculus.riemann)": [[9, "sage.calculus.riemann.complex_to_rgb"]], "complex_to_spiderweb() (in module sage.calculus.riemann)": [[9, "sage.calculus.riemann.complex_to_spiderweb"]], "compute_on_grid() (sage.calculus.riemann.riemann_map method)": [[9, "sage.calculus.riemann.Riemann_Map.compute_on_grid"]], "get_derivatives() (in module sage.calculus.riemann)": [[9, "sage.calculus.riemann.get_derivatives"]], "get_szego() (sage.calculus.riemann.riemann_map method)": [[9, "sage.calculus.riemann.Riemann_Map.get_szego"]], "get_theta_points() (sage.calculus.riemann.riemann_map method)": [[9, "sage.calculus.riemann.Riemann_Map.get_theta_points"]], "inverse_riemann_map() (sage.calculus.riemann.riemann_map method)": [[9, "sage.calculus.riemann.Riemann_Map.inverse_riemann_map"]], "plot_boundaries() (sage.calculus.riemann.riemann_map method)": [[9, "sage.calculus.riemann.Riemann_Map.plot_boundaries"]], "plot_colored() (sage.calculus.riemann.riemann_map method)": [[9, "sage.calculus.riemann.Riemann_Map.plot_colored"]], "plot_spiderweb() (sage.calculus.riemann.riemann_map method)": [[9, "sage.calculus.riemann.Riemann_Map.plot_spiderweb"]], "riemann_map() (sage.calculus.riemann.riemann_map method)": [[9, "sage.calculus.riemann.Riemann_Map.riemann_map"]], "sage.calculus.riemann": [[9, "module-sage.calculus.riemann"]], "sage.calculus.test_sympy": [[10, "module-sage.calculus.test_sympy"]], "sage.calculus.tests": [[11, "module-sage.calculus.tests"]], "indexedsequence (class in sage.calculus.transforms.dft)": [[12, "sage.calculus.transforms.dft.IndexedSequence"]], "base_ring() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.base_ring"]], "convolution() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.convolution"]], "convolution_periodic() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.convolution_periodic"]], "dct() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.dct"]], "dft() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.dft"]], "dict() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.dict"]], "dst() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.dst"]], "dwt() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.dwt"]], "fft() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.fft"]], "idft() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.idft"]], "idwt() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.idwt"]], "ifft() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.ifft"]], "index_object() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.index_object"]], "list() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.list"]], "plot() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.plot"]], "plot_histogram() (sage.calculus.transforms.dft.indexedsequence method)": [[12, "sage.calculus.transforms.dft.IndexedSequence.plot_histogram"]], "sage.calculus.transforms.dft": [[12, "module-sage.calculus.transforms.dft"]], "dwt() (in module sage.calculus.transforms.dwt)": [[13, "sage.calculus.transforms.dwt.DWT"]], "discretewavelettransform (class in sage.calculus.transforms.dwt)": [[13, "sage.calculus.transforms.dwt.DiscreteWaveletTransform"]], "wavelettransform() (in module sage.calculus.transforms.dwt)": [[13, "sage.calculus.transforms.dwt.WaveletTransform"]], "backward_transform() (sage.calculus.transforms.dwt.discretewavelettransform method)": [[13, "sage.calculus.transforms.dwt.DiscreteWaveletTransform.backward_transform"]], "forward_transform() (sage.calculus.transforms.dwt.discretewavelettransform method)": [[13, "sage.calculus.transforms.dwt.DiscreteWaveletTransform.forward_transform"]], "is2pow() (in module sage.calculus.transforms.dwt)": [[13, "sage.calculus.transforms.dwt.is2pow"]], "plot() (sage.calculus.transforms.dwt.discretewavelettransform method)": [[13, "sage.calculus.transforms.dwt.DiscreteWaveletTransform.plot"]], "sage.calculus.transforms.dwt": [[13, "module-sage.calculus.transforms.dwt"]], "fft() (in module sage.calculus.transforms.fft)": [[14, "sage.calculus.transforms.fft.FFT"]], "fastfouriertransform() (in module sage.calculus.transforms.fft)": [[14, "sage.calculus.transforms.fft.FastFourierTransform"]], "fastfouriertransform_base (class in sage.calculus.transforms.fft)": [[14, "sage.calculus.transforms.fft.FastFourierTransform_base"]], "fastfouriertransform_complex (class in sage.calculus.transforms.fft)": [[14, "sage.calculus.transforms.fft.FastFourierTransform_complex"]], "fouriertransform_complex (class in sage.calculus.transforms.fft)": [[14, "sage.calculus.transforms.fft.FourierTransform_complex"]], "fouriertransform_real (class in sage.calculus.transforms.fft)": [[14, "sage.calculus.transforms.fft.FourierTransform_real"]], "backward_transform() (sage.calculus.transforms.fft.fastfouriertransform_complex method)": [[14, "sage.calculus.transforms.fft.FastFourierTransform_complex.backward_transform"]], "forward_transform() (sage.calculus.transforms.fft.fastfouriertransform_complex method)": [[14, "sage.calculus.transforms.fft.FastFourierTransform_complex.forward_transform"]], "inverse_transform() (sage.calculus.transforms.fft.fastfouriertransform_complex method)": [[14, "sage.calculus.transforms.fft.FastFourierTransform_complex.inverse_transform"]], "plot() (sage.calculus.transforms.fft.fastfouriertransform_complex method)": [[14, "sage.calculus.transforms.fft.FastFourierTransform_complex.plot"]], "sage.calculus.transforms.fft": [[14, "module-sage.calculus.transforms.fft"]], "clear_vars() (in module sage.calculus.var)": [[15, "sage.calculus.var.clear_vars"]], "function() (in module sage.calculus.var)": [[15, "sage.calculus.var.function"]], "sage.calculus.var": [[15, "module-sage.calculus.var"]], "var() (in module sage.calculus.var)": [[15, "sage.calculus.var.var"]], "sage.calculus.wester": [[16, "module-sage.calculus.wester"]], "genericdeclaration (class in sage.symbolic.assumptions)": [[17, "sage.symbolic.assumptions.GenericDeclaration"]], "assume() (in module sage.symbolic.assumptions)": [[17, "sage.symbolic.assumptions.assume"]], "assume() (sage.symbolic.assumptions.genericdeclaration method)": [[17, "sage.symbolic.assumptions.GenericDeclaration.assume"]], "assuming (class in sage.symbolic.assumptions)": [[17, "sage.symbolic.assumptions.assuming"]], "assumptions() (in module sage.symbolic.assumptions)": [[17, "sage.symbolic.assumptions.assumptions"]], "contradicts() (sage.symbolic.assumptions.genericdeclaration method)": [[17, "sage.symbolic.assumptions.GenericDeclaration.contradicts"]], "forget() (in module sage.symbolic.assumptions)": [[17, "sage.symbolic.assumptions.forget"]], "forget() (sage.symbolic.assumptions.genericdeclaration method)": [[17, "sage.symbolic.assumptions.GenericDeclaration.forget"]], "has() (sage.symbolic.assumptions.genericdeclaration method)": [[17, "sage.symbolic.assumptions.GenericDeclaration.has"]], "preprocess_assumptions() (in module sage.symbolic.assumptions)": [[17, "sage.symbolic.assumptions.preprocess_assumptions"]], "sage.symbolic.assumptions": [[17, "module-sage.symbolic.assumptions"]], "sage.symbolic.benchmark": [[18, "module-sage.symbolic.benchmark"]], "callablesymbolicexpressionfunctor (class in sage.symbolic.callable)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionFunctor"]], "callablesymbolicexpressionringfactory (class in sage.symbolic.callable)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionRingFactory"]], "callablesymbolicexpressionring_class (class in sage.symbolic.callable)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionRing_class"]], "args() (sage.symbolic.callable.callablesymbolicexpressionring_class method)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionRing_class.args"]], "arguments() (sage.symbolic.callable.callablesymbolicexpressionfunctor method)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionFunctor.arguments"]], "arguments() (sage.symbolic.callable.callablesymbolicexpressionring_class method)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionRing_class.arguments"]], "construction() (sage.symbolic.callable.callablesymbolicexpressionring_class method)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionRing_class.construction"]], "create_key() (sage.symbolic.callable.callablesymbolicexpressionringfactory method)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionRingFactory.create_key"]], "create_object() (sage.symbolic.callable.callablesymbolicexpressionringfactory method)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionRingFactory.create_object"]], "is_callablesymbolicexpression() (in module sage.symbolic.callable)": [[19, "sage.symbolic.callable.is_CallableSymbolicExpression"]], "is_callablesymbolicexpressionring() (in module sage.symbolic.callable)": [[19, "sage.symbolic.callable.is_CallableSymbolicExpressionRing"]], "merge() (sage.symbolic.callable.callablesymbolicexpressionfunctor method)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionFunctor.merge"]], "sage.symbolic.callable": [[19, "module-sage.symbolic.callable"]], "unify_arguments() (sage.symbolic.callable.callablesymbolicexpressionfunctor method)": [[19, "sage.symbolic.callable.CallableSymbolicExpressionFunctor.unify_arguments"]], "sage.symbolic.complexity_measures": [[20, "module-sage.symbolic.complexity_measures"]], "string_length() (in module sage.symbolic.complexity_measures)": [[20, "sage.symbolic.complexity_measures.string_length"]], "e (class in sage.symbolic.expression)": [[21, "sage.symbolic.expression.E"]], "expression (class in sage.symbolic.expression)": [[21, "sage.symbolic.expression.Expression"]], "expressioniterator (class in sage.symbolic.expression)": [[21, "sage.symbolic.expression.ExpressionIterator"]], "operandswrapper (class in sage.symbolic.expression)": [[21, "sage.symbolic.expression.OperandsWrapper"]], "order() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.Order"]], "pynacconstant (class in sage.symbolic.expression)": [[21, "sage.symbolic.expression.PynacConstant"]], "substitutionmap (class in sage.symbolic.expression)": [[21, "sage.symbolic.expression.SubstitutionMap"]], "symbolicseries (class in sage.symbolic.expression)": [[21, "sage.symbolic.expression.SymbolicSeries"]], "wz_certificate() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.WZ_certificate"]], "abs() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.abs"]], "add() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.add"]], "add_to_both_sides() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.add_to_both_sides"]], "apply_to() (sage.symbolic.expression.substitutionmap method)": [[21, "sage.symbolic.expression.SubstitutionMap.apply_to"]], "arccos() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.arccos"]], "arccosh() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.arccosh"]], "arcsin() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.arcsin"]], "arcsinh() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.arcsinh"]], "arctan() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.arctan"]], "arctan2() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.arctan2"]], "arctanh() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.arctanh"]], "args() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.args"]], "arguments() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.arguments"]], "assume() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.assume"]], "binomial() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.binomial"]], "call_registered_function() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.call_registered_function"]], "canonicalize_radical() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.canonicalize_radical"]], "coefficient() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.coefficient"]], "coefficients() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.coefficients"]], "coefficients() (sage.symbolic.expression.symbolicseries method)": [[21, "sage.symbolic.expression.SymbolicSeries.coefficients"]], "collect() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.collect"]], "collect_common_factors() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.collect_common_factors"]], "combine() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.combine"]], "conjugate() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.conjugate"]], "content() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.content"]], "contradicts() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.contradicts"]], "convert() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.convert"]], "cos() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.cos"]], "cosh() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.cosh"]], "csgn() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.csgn"]], "decl_assume() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.decl_assume"]], "decl_forget() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.decl_forget"]], "default_variable() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.default_variable"]], "default_variable() (sage.symbolic.expression.symbolicseries method)": [[21, "sage.symbolic.expression.SymbolicSeries.default_variable"]], "degree() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.degree"]], "demoivre() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.demoivre"]], "denominator() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.denominator"]], "derivative() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.derivative"]], "diff() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.diff"]], "differentiate() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.differentiate"]], "distribute() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.distribute"]], "divide_both_sides() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.divide_both_sides"]], "doublefactorial() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.doublefactorial"]], "exp() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.exp"]], "expand() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.expand"]], "expand_log() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.expand_log"]], "expand_rational() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.expand_rational"]], "expand_sum() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.expand_sum"]], "expand_trig() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.expand_trig"]], "exponentialize() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.exponentialize"]], "expression() (sage.symbolic.expression.pynacconstant method)": [[21, "sage.symbolic.expression.PynacConstant.expression"]], "factor() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.factor"]], "factor_list() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.factor_list"]], "factorial() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.factorial"]], "factorial_simplify() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.factorial_simplify"]], "find() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.find"]], "find_local_maximum() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.find_local_maximum"]], "find_local_minimum() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.find_local_minimum"]], "find_registered_function() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.find_registered_function"]], "find_root() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.find_root"]], "forget() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.forget"]], "fraction() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.fraction"]], "free_variables() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.free_variables"]], "full_simplify() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.full_simplify"]], "function() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.function"]], "gamma() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.gamma"]], "gamma_normalize() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.gamma_normalize"]], "gcd() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.gcd"]], "get_fn_serial() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.get_fn_serial"]], "get_ginac_serial() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.get_ginac_serial"]], "get_sfunction_from_hash() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.get_sfunction_from_hash"]], "get_sfunction_from_serial() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.get_sfunction_from_serial"]], "gosper_sum() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.gosper_sum"]], "gosper_term() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.gosper_term"]], "gradient() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.gradient"]], "has() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.has"]], "has_wild() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.has_wild"]], "hessian() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.hessian"]], "hold_class (class in sage.symbolic.expression)": [[21, "sage.symbolic.expression.hold_class"]], "horner() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.horner"]], "hypergeometric_simplify() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.hypergeometric_simplify"]], "imag() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.imag"]], "imag_part() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.imag_part"]], "implicit_derivative() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.implicit_derivative"]], "init_function_table() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.init_function_table"]], "init_pynac_i() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.init_pynac_I"]], "integral() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.integral"]], "integrate() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.integrate"]], "inverse_laplace() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.inverse_laplace"]], "is_expression() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.is_Expression"]], "is_symbolicequation() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.is_SymbolicEquation"]], "is_algebraic() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_algebraic"]], "is_callable() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_callable"]], "is_constant() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_constant"]], "is_exact() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_exact"]], "is_infinity() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_infinity"]], "is_integer() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_integer"]], "is_negative() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_negative"]], "is_negative_infinity() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_negative_infinity"]], "is_numeric() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_numeric"]], "is_polynomial() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_polynomial"]], "is_positive() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_positive"]], "is_positive_infinity() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_positive_infinity"]], "is_rational_expression() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_rational_expression"]], "is_real() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_real"]], "is_relational() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_relational"]], "is_square() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_square"]], "is_symbol() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_symbol"]], "is_terminating_series() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_terminating_series"]], "is_terminating_series() (sage.symbolic.expression.symbolicseries method)": [[21, "sage.symbolic.expression.SymbolicSeries.is_terminating_series"]], "is_trivial_zero() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_trivial_zero"]], "is_trivially_equal() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_trivially_equal"]], "is_unit() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.is_unit"]], "iterator() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.iterator"]], "laplace() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.laplace"]], "laurent_polynomial() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.laurent_polynomial"]], "lcm() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.lcm"]], "leading_coeff() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.leading_coeff"]], "leading_coefficient() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.leading_coefficient"]], "left() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.left"]], "left_hand_side() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.left_hand_side"]], "lhs() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.lhs"]], "limit() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.limit"]], "list() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.list"]], "log() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.log"]], "log_expand() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.log_expand"]], "log_gamma() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.log_gamma"]], "log_simplify() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.log_simplify"]], "low_degree() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.low_degree"]], "make_map() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.make_map"]], "match() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.match"]], "math_sorted() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.math_sorted"]], "maxima_methods() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.maxima_methods"]], "minpoly() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.minpoly"]], "mixed_order() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.mixed_order"]], "mixed_sorted() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.mixed_sorted"]], "mul() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.mul"]], "multiply_both_sides() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.multiply_both_sides"]], "name() (sage.symbolic.expression.pynacconstant method)": [[21, "sage.symbolic.expression.PynacConstant.name"]], "negation() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.negation"]], "new_expression() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.new_Expression"]], "new_expression_from_pyobject() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.new_Expression_from_pyobject"]], "new_expression_symbol() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.new_Expression_symbol"]], "new_expression_wild() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.new_Expression_wild"]], "nintegral() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.nintegral"]], "nintegrate() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.nintegrate"]], "nops() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.nops"]], "norm() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.norm"]], "normalize() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.normalize"]], "normalize_index_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.normalize_index_for_doctests"]], "number_of_arguments() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.number_of_arguments"]], "number_of_operands() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.number_of_operands"]], "numerator() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.numerator"]], "numerator_denominator() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.numerator_denominator"]], "numerical_approx() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.numerical_approx"]], "op (sage.symbolic.expression.expression attribute)": [[21, "sage.symbolic.expression.Expression.op"]], "operands() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.operands"]], "operator() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.operator"]], "paramset_from_expression() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.paramset_from_Expression"]], "partial_fraction() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.partial_fraction"]], "partial_fraction_decomposition() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.partial_fraction_decomposition"]], "plot() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.plot"]], "poly() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.poly"]], "polynomial() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.polynomial"]], "power() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.power"]], "power_series() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.power_series"]], "power_series() (sage.symbolic.expression.symbolicseries method)": [[21, "sage.symbolic.expression.SymbolicSeries.power_series"]], "primitive_part() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.primitive_part"]], "print_order() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.print_order"]], "print_sorted() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.print_sorted"]], "prod() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.prod"]], "py_atan2_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_atan2_for_doctests"]], "py_denom_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_denom_for_doctests"]], "py_eval_infinity_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_eval_infinity_for_doctests"]], "py_eval_neg_infinity_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_eval_neg_infinity_for_doctests"]], "py_eval_unsigned_infinity_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_eval_unsigned_infinity_for_doctests"]], "py_exp_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_exp_for_doctests"]], "py_factorial_py() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_factorial_py"]], "py_float_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_float_for_doctests"]], "py_imag_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_imag_for_doctests"]], "py_is_cinteger_for_doctest() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_is_cinteger_for_doctest"]], "py_is_crational_for_doctest() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_is_crational_for_doctest"]], "py_is_integer_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_is_integer_for_doctests"]], "py_latex_fderivative_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_latex_fderivative_for_doctests"]], "py_latex_function_pystring() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_latex_function_pystring"]], "py_latex_variable_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_latex_variable_for_doctests"]], "py_lgamma_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_lgamma_for_doctests"]], "py_li2_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_li2_for_doctests"]], "py_li_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_li_for_doctests"]], "py_log_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_log_for_doctests"]], "py_mod_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_mod_for_doctests"]], "py_numer_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_numer_for_doctests"]], "py_print_fderivative_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_print_fderivative_for_doctests"]], "py_print_function_pystring() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_print_function_pystring"]], "py_psi2_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_psi2_for_doctests"]], "py_psi_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_psi_for_doctests"]], "py_real_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_real_for_doctests"]], "py_stieltjes_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_stieltjes_for_doctests"]], "py_tgamma_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_tgamma_for_doctests"]], "py_zeta_for_doctests() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.py_zeta_for_doctests"]], "pyobject() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.pyobject"]], "rational_expand() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.rational_expand"]], "rational_simplify() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.rational_simplify"]], "real() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.real"]], "real_part() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.real_part"]], "rectform() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.rectform"]], "reduce_trig() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.reduce_trig"]], "register_or_update_function() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.register_or_update_function"]], "register_symbol() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.register_symbol"]], "residue() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.residue"]], "restore_op_wrapper() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.restore_op_wrapper"]], "resultant() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.resultant"]], "rhs() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.rhs"]], "right() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.right"]], "right_hand_side() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.right_hand_side"]], "roots() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.roots"]], "round() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.round"]], "sage.symbolic.expression": [[21, "module-sage.symbolic.expression"]], "serial() (sage.symbolic.expression.pynacconstant method)": [[21, "sage.symbolic.expression.PynacConstant.serial"]], "series() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.series"]], "show() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.show"]], "simplify() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.simplify"]], "simplify_factorial() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.simplify_factorial"]], "simplify_full() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.simplify_full"]], "simplify_hypergeometric() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.simplify_hypergeometric"]], "simplify_log() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.simplify_log"]], "simplify_rational() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.simplify_rational"]], "simplify_real() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.simplify_real"]], "simplify_rectform() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.simplify_rectform"]], "simplify_trig() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.simplify_trig"]], "sin() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.sin"]], "sinh() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.sinh"]], "solve() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.solve"]], "solve_diophantine() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.solve_diophantine"]], "solve_diophantine() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.solve_diophantine"]], "sqrt() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.sqrt"]], "start() (sage.symbolic.expression.hold_class method)": [[21, "sage.symbolic.expression.hold_class.start"]], "step() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.step"]], "stop() (sage.symbolic.expression.hold_class method)": [[21, "sage.symbolic.expression.hold_class.stop"]], "subs() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.subs"]], "substitute() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.substitute"]], "substitute_function() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.substitute_function"]], "substitution_delayed() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.substitution_delayed"]], "subtract_from_both_sides() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.subtract_from_both_sides"]], "sum() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.sum"]], "tan() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.tan"]], "tanh() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.tanh"]], "taylor() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.taylor"]], "test_binomial() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.test_binomial"]], "test_relation() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.test_relation"]], "to_gamma() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.to_gamma"]], "tolerant_is_symbol() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.tolerant_is_symbol"]], "trailing_coeff() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.trailing_coeff"]], "trailing_coefficient() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.trailing_coefficient"]], "trig_expand() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.trig_expand"]], "trig_reduce() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.trig_reduce"]], "trig_simplify() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.trig_simplify"]], "truncate() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.truncate"]], "truncate() (sage.symbolic.expression.symbolicseries method)": [[21, "sage.symbolic.expression.SymbolicSeries.truncate"]], "unhold() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.unhold"]], "unit() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.unit"]], "unit_content_primitive() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.unit_content_primitive"]], "unpack_operands() (in module sage.symbolic.expression)": [[21, "sage.symbolic.expression.unpack_operands"]], "variables() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.variables"]], "zeta() (sage.symbolic.expression.expression method)": [[21, "sage.symbolic.expression.Expression.zeta"]], "algebraicconverter (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.AlgebraicConverter"]], "circdict (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.CircDict"]], "circs (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.Circs"]], "converter (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.Converter"]], "demoivre (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.DeMoivre"]], "exponentialize (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.Exponentialize"]], "expressiontreewalker (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.ExpressionTreeWalker"]], "fakeexpression (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.FakeExpression"]], "fastcallableconverter (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.FastCallableConverter"]], "fricasconverter (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.FriCASConverter"]], "holdremover (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.HoldRemover"]], "i (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.I"]], "integer (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.Integer"]], "interfaceinit (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.InterfaceInit"]], "laurentpolynomialconverter (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.LaurentPolynomialConverter"]], "polynomialconverter (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.PolynomialConverter"]], "ringconverter (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.RingConverter"]], "sr (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.SR"]], "substitutefunction (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.SubstituteFunction"]], "sympyconverter (class in sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.SympyConverter"]], "algebraic() (in module sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.algebraic"]], "arithmetic() (sage.symbolic.expression_conversions.algebraicconverter method)": [[22, "sage.symbolic.expression_conversions.AlgebraicConverter.arithmetic"]], "arithmetic() (sage.symbolic.expression_conversions.converter method)": [[22, "sage.symbolic.expression_conversions.Converter.arithmetic"]], "arithmetic() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[22, "sage.symbolic.expression_conversions.ExpressionTreeWalker.arithmetic"]], "arithmetic() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[22, "sage.symbolic.expression_conversions.FastCallableConverter.arithmetic"]], "arithmetic() (sage.symbolic.expression_conversions.interfaceinit method)": [[22, "sage.symbolic.expression_conversions.InterfaceInit.arithmetic"]], "arithmetic() (sage.symbolic.expression_conversions.polynomialconverter method)": [[22, "sage.symbolic.expression_conversions.PolynomialConverter.arithmetic"]], "arithmetic() (sage.symbolic.expression_conversions.ringconverter method)": [[22, "sage.symbolic.expression_conversions.RingConverter.arithmetic"]], "arithmetic() (sage.symbolic.expression_conversions.sympyconverter method)": [[22, "sage.symbolic.expression_conversions.SympyConverter.arithmetic"]], "composition() (sage.symbolic.expression_conversions.algebraicconverter method)": [[22, "sage.symbolic.expression_conversions.AlgebraicConverter.composition"]], "composition() (sage.symbolic.expression_conversions.converter method)": [[22, "sage.symbolic.expression_conversions.Converter.composition"]], "composition() (sage.symbolic.expression_conversions.demoivre method)": [[22, "sage.symbolic.expression_conversions.DeMoivre.composition"]], "composition() (sage.symbolic.expression_conversions.exponentialize method)": [[22, "sage.symbolic.expression_conversions.Exponentialize.composition"]], "composition() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[22, "sage.symbolic.expression_conversions.ExpressionTreeWalker.composition"]], "composition() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[22, "sage.symbolic.expression_conversions.FastCallableConverter.composition"]], "composition() (sage.symbolic.expression_conversions.holdremover method)": [[22, "sage.symbolic.expression_conversions.HoldRemover.composition"]], "composition() (sage.symbolic.expression_conversions.interfaceinit method)": [[22, "sage.symbolic.expression_conversions.InterfaceInit.composition"]], "composition() (sage.symbolic.expression_conversions.polynomialconverter method)": [[22, "sage.symbolic.expression_conversions.PolynomialConverter.composition"]], "composition() (sage.symbolic.expression_conversions.ringconverter method)": [[22, "sage.symbolic.expression_conversions.RingConverter.composition"]], "composition() (sage.symbolic.expression_conversions.substitutefunction method)": [[22, "sage.symbolic.expression_conversions.SubstituteFunction.composition"]], "composition() (sage.symbolic.expression_conversions.sympyconverter method)": [[22, "sage.symbolic.expression_conversions.SympyConverter.composition"]], "cos (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.cos"]], "cosh (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.cosh"]], "cot (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.cot"]], "coth (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.coth"]], "csc (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.csc"]], "csch (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.csch"]], "derivative() (sage.symbolic.expression_conversions.converter method)": [[22, "sage.symbolic.expression_conversions.Converter.derivative"]], "derivative() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[22, "sage.symbolic.expression_conversions.ExpressionTreeWalker.derivative"]], "derivative() (sage.symbolic.expression_conversions.fricasconverter method)": [[22, "sage.symbolic.expression_conversions.FriCASConverter.derivative"]], "derivative() (sage.symbolic.expression_conversions.interfaceinit method)": [[22, "sage.symbolic.expression_conversions.InterfaceInit.derivative"]], "derivative() (sage.symbolic.expression_conversions.substitutefunction method)": [[22, "sage.symbolic.expression_conversions.SubstituteFunction.derivative"]], "derivative() (sage.symbolic.expression_conversions.sympyconverter method)": [[22, "sage.symbolic.expression_conversions.SympyConverter.derivative"]], "e (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.e"]], "exp (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.exp"]], "fast_callable() (in module sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.fast_callable"]], "function() (sage.symbolic.expression_conversions.exponentialize method)": [[22, "sage.symbolic.expression_conversions.Exponentialize.function"]], "get_fake_div() (sage.symbolic.expression_conversions.converter method)": [[22, "sage.symbolic.expression_conversions.Converter.get_fake_div"]], "half (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.half"]], "laurent_polynomial() (in module sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.laurent_polynomial"]], "operands() (sage.symbolic.expression_conversions.fakeexpression method)": [[22, "sage.symbolic.expression_conversions.FakeExpression.operands"]], "operator() (sage.symbolic.expression_conversions.fakeexpression method)": [[22, "sage.symbolic.expression_conversions.FakeExpression.operator"]], "polynomial() (in module sage.symbolic.expression_conversions)": [[22, "sage.symbolic.expression_conversions.polynomial"]], "pyobject() (sage.symbolic.expression_conversions.algebraicconverter method)": [[22, "sage.symbolic.expression_conversions.AlgebraicConverter.pyobject"]], "pyobject() (sage.symbolic.expression_conversions.converter method)": [[22, "sage.symbolic.expression_conversions.Converter.pyobject"]], "pyobject() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[22, "sage.symbolic.expression_conversions.ExpressionTreeWalker.pyobject"]], "pyobject() (sage.symbolic.expression_conversions.fakeexpression method)": [[22, "sage.symbolic.expression_conversions.FakeExpression.pyobject"]], "pyobject() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[22, "sage.symbolic.expression_conversions.FastCallableConverter.pyobject"]], "pyobject() (sage.symbolic.expression_conversions.fricasconverter method)": [[22, "sage.symbolic.expression_conversions.FriCASConverter.pyobject"]], "pyobject() (sage.symbolic.expression_conversions.interfaceinit method)": [[22, "sage.symbolic.expression_conversions.InterfaceInit.pyobject"]], "pyobject() (sage.symbolic.expression_conversions.polynomialconverter method)": [[22, "sage.symbolic.expression_conversions.PolynomialConverter.pyobject"]], "pyobject() (sage.symbolic.expression_conversions.ringconverter method)": [[22, "sage.symbolic.expression_conversions.RingConverter.pyobject"]], "pyobject() (sage.symbolic.expression_conversions.sympyconverter method)": [[22, "sage.symbolic.expression_conversions.SympyConverter.pyobject"]], "relation() (sage.symbolic.expression_conversions.converter method)": [[22, "sage.symbolic.expression_conversions.Converter.relation"]], "relation() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[22, "sage.symbolic.expression_conversions.ExpressionTreeWalker.relation"]], "relation() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[22, "sage.symbolic.expression_conversions.FastCallableConverter.relation"]], "relation() (sage.symbolic.expression_conversions.interfaceinit method)": [[22, "sage.symbolic.expression_conversions.InterfaceInit.relation"]], "relation() (sage.symbolic.expression_conversions.polynomialconverter method)": [[22, "sage.symbolic.expression_conversions.PolynomialConverter.relation"]], "relation() (sage.symbolic.expression_conversions.sympyconverter method)": [[22, "sage.symbolic.expression_conversions.SympyConverter.relation"]], "sage.symbolic.expression_conversions": [[22, "module-sage.symbolic.expression_conversions"]], "sec (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.sec"]], "sech (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.sech"]], "sin (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.sin"]], "sinh (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.sinh"]], "symbol() (sage.symbolic.expression_conversions.converter method)": [[22, "sage.symbolic.expression_conversions.Converter.symbol"]], "symbol() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[22, "sage.symbolic.expression_conversions.ExpressionTreeWalker.symbol"]], "symbol() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[22, "sage.symbolic.expression_conversions.FastCallableConverter.symbol"]], "symbol() (sage.symbolic.expression_conversions.fricasconverter method)": [[22, "sage.symbolic.expression_conversions.FriCASConverter.symbol"]], "symbol() (sage.symbolic.expression_conversions.interfaceinit method)": [[22, "sage.symbolic.expression_conversions.InterfaceInit.symbol"]], "symbol() (sage.symbolic.expression_conversions.polynomialconverter method)": [[22, "sage.symbolic.expression_conversions.PolynomialConverter.symbol"]], "symbol() (sage.symbolic.expression_conversions.ringconverter method)": [[22, "sage.symbolic.expression_conversions.RingConverter.symbol"]], "symbol() (sage.symbolic.expression_conversions.sympyconverter method)": [[22, "sage.symbolic.expression_conversions.SympyConverter.symbol"]], "tan (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.tan"]], "tanh (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.tanh"]], "tuple() (sage.symbolic.expression_conversions.expressiontreewalker method)": [[22, "sage.symbolic.expression_conversions.ExpressionTreeWalker.tuple"]], "tuple() (sage.symbolic.expression_conversions.fastcallableconverter method)": [[22, "sage.symbolic.expression_conversions.FastCallableConverter.tuple"]], "tuple() (sage.symbolic.expression_conversions.interfaceinit method)": [[22, "sage.symbolic.expression_conversions.InterfaceInit.tuple"]], "tuple() (sage.symbolic.expression_conversions.sympyconverter method)": [[22, "sage.symbolic.expression_conversions.SympyConverter.tuple"]], "two (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.two"]], "x (sage.symbolic.expression_conversions.exponentialize attribute)": [[22, "sage.symbolic.expression_conversions.Exponentialize.x"]], "builtinfunction (class in sage.symbolic.function)": [[23, "sage.symbolic.function.BuiltinFunction"]], "function (class in sage.symbolic.function)": [[23, "sage.symbolic.function.Function"]], "ginacfunction (class in sage.symbolic.function)": [[23, "sage.symbolic.function.GinacFunction"]], "symbolicfunction (class in sage.symbolic.function)": [[23, "sage.symbolic.function.SymbolicFunction"]], "default_variable() (sage.symbolic.function.function method)": [[23, "sage.symbolic.function.Function.default_variable"]], "name() (sage.symbolic.function.function method)": [[23, "sage.symbolic.function.Function.name"]], "number_of_arguments() (sage.symbolic.function.function method)": [[23, "sage.symbolic.function.Function.number_of_arguments"]], "pickle_wrapper() (in module sage.symbolic.function)": [[23, "sage.symbolic.function.pickle_wrapper"]], "sage.symbolic.function": [[23, "module-sage.symbolic.function"]], "unpickle_wrapper() (in module sage.symbolic.function)": [[23, "sage.symbolic.function.unpickle_wrapper"]], "variables() (sage.symbolic.function.function method)": [[23, "sage.symbolic.function.Function.variables"]], "function() (in module sage.symbolic.function_factory)": [[24, "sage.symbolic.function_factory.function"]], "function_factory() (in module sage.symbolic.function_factory)": [[24, "sage.symbolic.function_factory.function_factory"]], "sage.symbolic.function_factory": [[24, "module-sage.symbolic.function_factory"]], "unpickle_function() (in module sage.symbolic.function_factory)": [[24, "sage.symbolic.function_factory.unpickle_function"]], "fricas_integrator() (in module sage.symbolic.integration.external)": [[25, "sage.symbolic.integration.external.fricas_integrator"]], "giac_integrator() (in module sage.symbolic.integration.external)": [[25, "sage.symbolic.integration.external.giac_integrator"]], "libgiac_integrator() (in module sage.symbolic.integration.external)": [[25, "sage.symbolic.integration.external.libgiac_integrator"]], "maxima_integrator() (in module sage.symbolic.integration.external)": [[25, "sage.symbolic.integration.external.maxima_integrator"]], "mma_free_integrator() (in module sage.symbolic.integration.external)": [[25, "sage.symbolic.integration.external.mma_free_integrator"]], "sage.symbolic.integration.external": [[25, "module-sage.symbolic.integration.external"]], "sympy_integrator() (in module sage.symbolic.integration.external)": [[25, "sage.symbolic.integration.external.sympy_integrator"]], "definiteintegral (class in sage.symbolic.integration.integral)": [[26, "sage.symbolic.integration.integral.DefiniteIntegral"]], "indefiniteintegral (class in sage.symbolic.integration.integral)": [[26, "sage.symbolic.integration.integral.IndefiniteIntegral"]], "integral() (in module sage.symbolic.integration.integral)": [[26, "sage.symbolic.integration.integral.integral"]], "integrate() (in module sage.symbolic.integration.integral)": [[26, "sage.symbolic.integration.integral.integrate"]], "sage.symbolic.integration.integral": [[26, "module-sage.symbolic.integration.integral"]], "maximafunctionelementwrapper (class in sage.symbolic.maxima_wrapper)": [[27, "sage.symbolic.maxima_wrapper.MaximaFunctionElementWrapper"]], "maximawrapper (class in sage.symbolic.maxima_wrapper)": [[27, "sage.symbolic.maxima_wrapper.MaximaWrapper"]], "sage() (sage.symbolic.maxima_wrapper.maximawrapper method)": [[27, "sage.symbolic.maxima_wrapper.MaximaWrapper.sage"]], "sage.symbolic.maxima_wrapper": [[27, "module-sage.symbolic.maxima_wrapper"]], "derivativeoperator (class in sage.symbolic.operators)": [[28, "sage.symbolic.operators.DerivativeOperator"]], "derivativeoperator.derivativeoperatorwithparameters (class in sage.symbolic.operators)": [[28, "sage.symbolic.operators.DerivativeOperator.DerivativeOperatorWithParameters"]], "fderivativeoperator (class in sage.symbolic.operators)": [[28, "sage.symbolic.operators.FDerivativeOperator"]], "add_vararg() (in module sage.symbolic.operators)": [[28, "sage.symbolic.operators.add_vararg"]], "change_function() (sage.symbolic.operators.fderivativeoperator method)": [[28, "sage.symbolic.operators.FDerivativeOperator.change_function"]], "function() (sage.symbolic.operators.fderivativeoperator method)": [[28, "sage.symbolic.operators.FDerivativeOperator.function"]], "mul_vararg() (in module sage.symbolic.operators)": [[28, "sage.symbolic.operators.mul_vararg"]], "parameter_set() (sage.symbolic.operators.fderivativeoperator method)": [[28, "sage.symbolic.operators.FDerivativeOperator.parameter_set"]], "sage.symbolic.operators": [[28, "module-sage.symbolic.operators"]], "assert_strict_weak_order() (in module sage.symbolic.random_tests)": [[29, "sage.symbolic.random_tests.assert_strict_weak_order"]], "choose_from_prob_list() (in module sage.symbolic.random_tests)": [[29, "sage.symbolic.random_tests.choose_from_prob_list"]], "normalize_prob_list() (in module sage.symbolic.random_tests)": [[29, "sage.symbolic.random_tests.normalize_prob_list"]], "random_expr() (in module sage.symbolic.random_tests)": [[29, "sage.symbolic.random_tests.random_expr"]], "random_expr_helper() (in module sage.symbolic.random_tests)": [[29, "sage.symbolic.random_tests.random_expr_helper"]], "random_integer_vector() (in module sage.symbolic.random_tests)": [[29, "sage.symbolic.random_tests.random_integer_vector"]], "sage.symbolic.random_tests": [[29, "module-sage.symbolic.random_tests"]], "test_symbolic_expression_order() (in module sage.symbolic.random_tests)": [[29, "sage.symbolic.random_tests.test_symbolic_expression_order"]], "sage.symbolic.relation": [[30, "module-sage.symbolic.relation"]], "solve() (in module sage.symbolic.relation)": [[30, "sage.symbolic.relation.solve"]], "solve_ineq() (in module sage.symbolic.relation)": [[30, "sage.symbolic.relation.solve_ineq"]], "solve_ineq_fourier() (in module sage.symbolic.relation)": [[30, "sage.symbolic.relation.solve_ineq_fourier"]], "solve_ineq_univar() (in module sage.symbolic.relation)": [[30, "sage.symbolic.relation.solve_ineq_univar"]], "solve_mod() (in module sage.symbolic.relation)": [[30, "sage.symbolic.relation.solve_mod"]], "string_to_list_of_solutions() (in module sage.symbolic.relation)": [[30, "sage.symbolic.relation.string_to_list_of_solutions"]], "test_relation_maxima() (in module sage.symbolic.relation)": [[30, "sage.symbolic.relation.test_relation_maxima"]], "i() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.I"]], "numpytosrmorphism (class in sage.symbolic.ring)": [[31, "sage.symbolic.ring.NumpyToSRMorphism"]], "symbolicring (class in sage.symbolic.ring)": [[31, "sage.symbolic.ring.SymbolicRing"]], "temporaryvariables (class in sage.symbolic.ring)": [[31, "sage.symbolic.ring.TemporaryVariables"]], "underscoresagemorphism (class in sage.symbolic.ring)": [[31, "sage.symbolic.ring.UnderscoreSageMorphism"]], "characteristic() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.characteristic"]], "cleanup_var() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.cleanup_var"]], "is_symbolicexpressionring() (in module sage.symbolic.ring)": [[31, "sage.symbolic.ring.is_SymbolicExpressionRing"]], "is_exact() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.is_exact"]], "is_field() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.is_field"]], "is_finite() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.is_finite"]], "isidentifier() (in module sage.symbolic.ring)": [[31, "sage.symbolic.ring.isidentifier"]], "pi() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.pi"]], "sage.symbolic.ring": [[31, "module-sage.symbolic.ring"]], "subring() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.subring"]], "symbol() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.symbol"]], "symbols (sage.symbolic.ring.symbolicring attribute)": [[31, "sage.symbolic.ring.SymbolicRing.symbols"]], "temp_var() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.temp_var"]], "the_symbolicring() (in module sage.symbolic.ring)": [[31, "sage.symbolic.ring.the_SymbolicRing"]], "var() (in module sage.symbolic.ring)": [[31, "sage.symbolic.ring.var"]], "var() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.var"]], "wild() (sage.symbolic.ring.symbolicring method)": [[31, "sage.symbolic.ring.SymbolicRing.wild"]], "genericsymbolicsubring (class in sage.symbolic.subring)": [[32, "sage.symbolic.subring.GenericSymbolicSubring"]], "genericsymbolicsubringfunctor (class in sage.symbolic.subring)": [[32, "sage.symbolic.subring.GenericSymbolicSubringFunctor"]], "symbolicconstantssubring (class in sage.symbolic.subring)": [[32, "sage.symbolic.subring.SymbolicConstantsSubring"]], "symbolicsubringacceptingvars (class in sage.symbolic.subring)": [[32, "sage.symbolic.subring.SymbolicSubringAcceptingVars"]], "symbolicsubringacceptingvarsfunctor (class in sage.symbolic.subring)": [[32, "sage.symbolic.subring.SymbolicSubringAcceptingVarsFunctor"]], "symbolicsubringfactory (class in sage.symbolic.subring)": [[32, "sage.symbolic.subring.SymbolicSubringFactory"]], "symbolicsubringrejectingvars (class in sage.symbolic.subring)": [[32, "sage.symbolic.subring.SymbolicSubringRejectingVars"]], "symbolicsubringrejectingvarsfunctor (class in sage.symbolic.subring)": [[32, "sage.symbolic.subring.SymbolicSubringRejectingVarsFunctor"]], "coercion_reversed (sage.symbolic.subring.genericsymbolicsubringfunctor attribute)": [[32, "sage.symbolic.subring.GenericSymbolicSubringFunctor.coercion_reversed"]], "construction() (sage.symbolic.subring.symbolicsubringacceptingvars method)": [[32, "sage.symbolic.subring.SymbolicSubringAcceptingVars.construction"]], "construction() (sage.symbolic.subring.symbolicsubringrejectingvars method)": [[32, "sage.symbolic.subring.SymbolicSubringRejectingVars.construction"]], "create_key_and_extra_args() (sage.symbolic.subring.symbolicsubringfactory method)": [[32, "sage.symbolic.subring.SymbolicSubringFactory.create_key_and_extra_args"]], "create_object() (sage.symbolic.subring.symbolicsubringfactory method)": [[32, "sage.symbolic.subring.SymbolicSubringFactory.create_object"]], "has_valid_variable() (sage.symbolic.subring.genericsymbolicsubring method)": [[32, "sage.symbolic.subring.GenericSymbolicSubring.has_valid_variable"]], "has_valid_variable() (sage.symbolic.subring.symbolicconstantssubring method)": [[32, "sage.symbolic.subring.SymbolicConstantsSubring.has_valid_variable"]], "has_valid_variable() (sage.symbolic.subring.symbolicsubringacceptingvars method)": [[32, "sage.symbolic.subring.SymbolicSubringAcceptingVars.has_valid_variable"]], "has_valid_variable() (sage.symbolic.subring.symbolicsubringrejectingvars method)": [[32, "sage.symbolic.subring.SymbolicSubringRejectingVars.has_valid_variable"]], "merge() (sage.symbolic.subring.genericsymbolicsubringfunctor method)": [[32, "sage.symbolic.subring.GenericSymbolicSubringFunctor.merge"]], "merge() (sage.symbolic.subring.symbolicsubringacceptingvarsfunctor method)": [[32, "sage.symbolic.subring.SymbolicSubringAcceptingVarsFunctor.merge"]], "merge() (sage.symbolic.subring.symbolicsubringrejectingvarsfunctor method)": [[32, "sage.symbolic.subring.SymbolicSubringRejectingVarsFunctor.merge"]], "rank (sage.symbolic.subring.genericsymbolicsubringfunctor attribute)": [[32, "sage.symbolic.subring.GenericSymbolicSubringFunctor.rank"]], "sage.symbolic.subring": [[32, "module-sage.symbolic.subring"]], "sage.symbolic.substitution_map": [[33, "module-sage.symbolic.substitution_map"]], "unitexpression (class in sage.symbolic.units)": [[34, "sage.symbolic.units.UnitExpression"]], "units (class in sage.symbolic.units)": [[34, "sage.symbolic.units.Units"]], "base_units() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.base_units"]], "convert() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.convert"]], "convert_temperature() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.convert_temperature"]], "evalunitdict() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.evalunitdict"]], "is_unit() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.is_unit"]], "sage.symbolic.units": [[34, "module-sage.symbolic.units"]], "str_to_unit() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.str_to_unit"]], "unit_derivations_expr() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.unit_derivations_expr"]], "unitdocs() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.unitdocs"]], "vars_in_str() (in module sage.symbolic.units)": [[34, "sage.symbolic.units.vars_in_str"]]}})