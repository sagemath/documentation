Search.setIndex({"docnames": ["index", "sage/combinat/designs/incidence_structures", "sage/graphs/asteroidal_triples", "sage/graphs/base/boost_graph", "sage/graphs/base/c_graph", "sage/graphs/base/dense_graph", "sage/graphs/base/graph_backends", "sage/graphs/base/overview", "sage/graphs/base/sparse_graph", "sage/graphs/base/static_dense_graph", "sage/graphs/base/static_sparse_backend", "sage/graphs/base/static_sparse_graph", "sage/graphs/bipartite_graph", "sage/graphs/centrality", "sage/graphs/cliquer", "sage/graphs/comparability", "sage/graphs/connectivity", "sage/graphs/convexity_properties", "sage/graphs/digraph", "sage/graphs/digraph_generators", "sage/graphs/distances_all_pairs", "sage/graphs/domination", "sage/graphs/edge_connectivity", "sage/graphs/generators/basic", "sage/graphs/generators/chessboard", "sage/graphs/generators/classical_geometries", "sage/graphs/generators/distance_regular", "sage/graphs/generators/families", "sage/graphs/generators/intersection", "sage/graphs/generators/platonic_solids", "sage/graphs/generators/random", "sage/graphs/generators/smallgraphs", "sage/graphs/generators/world_map", "sage/graphs/generic_graph", "sage/graphs/generic_graph_pyx", "sage/graphs/genus", "sage/graphs/graph", "sage/graphs/graph_coloring", "sage/graphs/graph_database", "sage/graphs/graph_decompositions/bandwidth", "sage/graphs/graph_decompositions/clique_separators", "sage/graphs/graph_decompositions/cutwidth", "sage/graphs/graph_decompositions/graph_products", "sage/graphs/graph_decompositions/modular_decomposition", "sage/graphs/graph_decompositions/rankwidth", "sage/graphs/graph_decompositions/tree_decomposition", "sage/graphs/graph_decompositions/vertex_separation", "sage/graphs/graph_editor", "sage/graphs/graph_generators", "sage/graphs/graph_generators_pyx", "sage/graphs/graph_input", "sage/graphs/graph_latex", "sage/graphs/graph_list", "sage/graphs/graph_plot", "sage/graphs/graph_plot_js", "sage/graphs/hyperbolicity", "sage/graphs/hypergraph_generators", "sage/graphs/independent_sets", "sage/graphs/isgci", "sage/graphs/line_graph", "sage/graphs/lovasz_theta", "sage/graphs/matchpoly", "sage/graphs/orientations", "sage/graphs/partial_cube", "sage/graphs/path_enumeration", "sage/graphs/planarity", "sage/graphs/pq_trees", "sage/graphs/schnyder", "sage/graphs/spanning_tree", "sage/graphs/strongly_regular_db", "sage/graphs/traversals", "sage/graphs/trees", "sage/graphs/tutte_polynomial", "sage/graphs/views", "sage/graphs/weakly_chordal"], "filenames": ["index.rst", "sage/combinat/designs/incidence_structures.rst", "sage/graphs/asteroidal_triples.rst", "sage/graphs/base/boost_graph.rst", "sage/graphs/base/c_graph.rst", "sage/graphs/base/dense_graph.rst", "sage/graphs/base/graph_backends.rst", "sage/graphs/base/overview.rst", "sage/graphs/base/sparse_graph.rst", "sage/graphs/base/static_dense_graph.rst", "sage/graphs/base/static_sparse_backend.rst", "sage/graphs/base/static_sparse_graph.rst", "sage/graphs/bipartite_graph.rst", "sage/graphs/centrality.rst", "sage/graphs/cliquer.rst", "sage/graphs/comparability.rst", "sage/graphs/connectivity.rst", "sage/graphs/convexity_properties.rst", "sage/graphs/digraph.rst", "sage/graphs/digraph_generators.rst", "sage/graphs/distances_all_pairs.rst", "sage/graphs/domination.rst", "sage/graphs/edge_connectivity.rst", "sage/graphs/generators/basic.rst", "sage/graphs/generators/chessboard.rst", "sage/graphs/generators/classical_geometries.rst", "sage/graphs/generators/distance_regular.rst", "sage/graphs/generators/families.rst", "sage/graphs/generators/intersection.rst", "sage/graphs/generators/platonic_solids.rst", "sage/graphs/generators/random.rst", "sage/graphs/generators/smallgraphs.rst", "sage/graphs/generators/world_map.rst", "sage/graphs/generic_graph.rst", "sage/graphs/generic_graph_pyx.rst", "sage/graphs/genus.rst", "sage/graphs/graph.rst", "sage/graphs/graph_coloring.rst", "sage/graphs/graph_database.rst", "sage/graphs/graph_decompositions/bandwidth.rst", "sage/graphs/graph_decompositions/clique_separators.rst", "sage/graphs/graph_decompositions/cutwidth.rst", "sage/graphs/graph_decompositions/graph_products.rst", "sage/graphs/graph_decompositions/modular_decomposition.rst", "sage/graphs/graph_decompositions/rankwidth.rst", "sage/graphs/graph_decompositions/tree_decomposition.rst", "sage/graphs/graph_decompositions/vertex_separation.rst", "sage/graphs/graph_editor.rst", "sage/graphs/graph_generators.rst", "sage/graphs/graph_generators_pyx.rst", "sage/graphs/graph_input.rst", "sage/graphs/graph_latex.rst", "sage/graphs/graph_list.rst", "sage/graphs/graph_plot.rst", "sage/graphs/graph_plot_js.rst", "sage/graphs/hyperbolicity.rst", "sage/graphs/hypergraph_generators.rst", "sage/graphs/independent_sets.rst", "sage/graphs/isgci.rst", "sage/graphs/line_graph.rst", "sage/graphs/lovasz_theta.rst", "sage/graphs/matchpoly.rst", "sage/graphs/orientations.rst", "sage/graphs/partial_cube.rst", "sage/graphs/path_enumeration.rst", "sage/graphs/planarity.rst", "sage/graphs/pq_trees.rst", "sage/graphs/schnyder.rst", "sage/graphs/spanning_tree.rst", "sage/graphs/strongly_regular_db.rst", "sage/graphs/traversals.rst", "sage/graphs/trees.rst", "sage/graphs/tutte_polynomial.rst", "sage/graphs/views.rst", "sage/graphs/weakly_chordal.rst"], "titles": ["Graph Theory", "Incidence structures (i.e. hypergraphs, i.e. set systems)", "Asteroidal triples", "Interface to run Boost algorithms", "Fast compiled graphs", "Fast dense graphs", "Backends for Sage (di)graphs", "Overview of (di)graph data structures", "Fast sparse graphs", "Static dense graphs", "Static sparse graph backend", "Static sparse graphs", "Bipartite graphs", "Centrality", "Interface with Cliquer (clique-related problems)", "Comparability and permutation graphs", "Connectivity related functions", "Convexity properties of graphs", "Directed graphs", "Common digraphs", "Distances/shortest paths between all pairs of vertices", "Domination", "Edge connectivity", "Basic graphs", "Chessboard graphs", "Families of graphs derived from classical geometries over finite fields", "Database of distance regular graphs", "Various families of graphs", "Intersection graphs", "1-skeletons of Platonic solids", "Random graphs", "Various small graphs", "Graphs from the World Map", "Generic graphs (common to directed/undirected)", "GenericGraph Cython functions", "Genus", "Undirected graphs", "Graph coloring", "Graph database", "Bandwidth of undirected graphs", "Decomposition by clique minimal separators", "Cutwidth", "Products of graphs", "Modular Decomposition", "Rank Decompositions of graphs", "Tree decompositions", "Vertex separation", "Graph editor widget", "Common graphs", "Common graphs and digraphs generators (Cython)", "Functions for reading/building graphs/digraphs", "LaTeX options for graphs", "Lists of graphs", "Graph plotting", "Graph plotting in Javascript with d3.js", "Hyperbolicity", "Hypergraph generators", "Independent sets", "ISGCI: Information System on Graph Classes and their Inclusions", "Line graphs", "Lov\u00e1sz theta-function of graphs", "Matching polynomial", "Orientations", "Partial cubes", "Path enumeration", "Wrapper for Boyer\u2019s (C) planarity algorithm", "PQ-Trees", "Schnyder\u2019s algorithm for straight-line planar embeddings", "Spanning trees", "Database of strongly regular graphs", "Graph traversals", "Generation of trees", "Tutte polynomial", "View classes", "Weakly chordal graphs"], "terms": {"gener": [0, 1, 3, 4, 5, 6, 7, 8, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 43, 44, 48, 51, 57, 58, 62, 63, 68, 69, 72], "common": [0, 9, 15, 18, 23, 27, 31, 32, 36, 42, 53, 56, 59], "direct": [0, 3, 4, 5, 6, 8, 9, 10, 11, 15, 16, 19, 20, 21, 22, 27, 35, 36, 38, 40, 41, 46, 48, 49, 50, 51, 53, 54, 59, 62, 63, 64, 70, 73], "undirect": [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 27, 43, 46, 48, 49, 59, 60, 62, 64, 68, 70, 73], "bipartit": [0, 1, 11, 15, 16, 23, 26, 27, 30, 31, 33, 36, 37, 39, 44, 48, 58, 63], "view": [0, 23, 25, 27, 29, 30, 35, 36, 48, 51, 72], "class": [0, 1, 4, 5, 7, 8, 11, 12, 16, 17, 18, 19, 21, 22, 25, 27, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 48, 53, 56, 66, 67, 71, 72], "digraph": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 33, 34, 36, 41, 46, 48, 51, 53, 54, 58, 59, 60, 62, 63, 64, 69, 70, 73], "cython": [0, 3, 4, 7, 8, 9, 10, 18, 20, 33, 36, 42, 57, 61], "strongli": [0, 1, 3, 4, 9, 11, 16, 18, 19, 20, 25, 27, 28, 31, 33, 36, 46, 48, 62], "regular": [0, 1, 9, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 33, 35, 36, 38, 48, 56], "distanc": [0, 3, 4, 11, 13, 16, 17, 18, 21, 24, 25, 27, 30, 31, 32, 33, 34, 36, 39, 42, 45, 48, 51, 53, 54, 58, 63, 69], "famili": [0, 19, 26, 28, 30, 36, 45, 48, 59, 66], "deriv": [0, 4, 19, 37], "from": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "classic": [0, 19, 20, 26, 27, 33, 48, 51], "geometri": [0, 18, 27, 33, 48, 69], "over": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 23, 26, 27, 30, 31, 33, 36, 37, 38, 39, 41, 45, 46, 48, 51, 55, 57, 62, 64, 66, 68, 71, 72, 73], "finit": [0, 12, 18, 27, 28, 31, 33, 48, 58, 64], "field": [0, 11, 12, 31, 33, 36, 38, 48], "variou": [0, 6, 33, 43, 51], "basic": [0, 3, 4, 11, 16, 18, 21, 27, 31, 33, 36, 48, 55, 69], "chessboard": [0, 48], "intersect": [0, 1, 4, 15, 18, 25, 26, 30, 31, 33, 36, 39, 48, 56, 58, 59, 66, 69], "1": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73], "skeleton": [0, 31, 36, 48], "platon": [0, 48], "solid": [0, 31, 33, 48, 51, 53], "random": [0, 1, 4, 11, 12, 13, 16, 18, 19, 20, 22, 23, 27, 31, 33, 34, 36, 37, 42, 43, 48, 49, 51, 53, 55, 56, 58, 62, 66, 68], "small": [0, 8, 10, 11, 13, 16, 20, 23, 27, 30, 33, 34, 36, 46, 48, 51, 52, 56], "world": [0, 30, 48], "map": [0, 1, 3, 4, 12, 16, 20, 21, 26, 27, 28, 30, 33, 36, 48, 53, 59, 63, 69], "isgci": [0, 36], "inform": [0, 1, 3, 4, 7, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 31, 33, 36, 37, 41, 42, 43, 44, 46, 48, 51, 53, 54, 55, 56, 57, 59, 60, 63, 66, 69], "system": [0, 19, 27, 48, 51, 69], "inclus": [0, 21, 36], "overview": [0, 4, 5, 6, 8, 9, 10, 11, 18, 36, 48, 51, 63], "di": [0, 3, 4, 9, 11, 12, 13, 16, 18, 19, 20, 27, 33, 36, 46, 48, 50, 53, 59, 73], "data": [0, 1, 3, 6, 9, 10, 12, 16, 18, 19, 20, 32, 33, 36, 38, 45, 48, 50, 52, 66], "structur": [0, 2, 3, 6, 9, 10, 16, 17, 19, 20, 23, 27, 30, 33, 36, 38, 43, 45, 48, 54, 56, 66], "fast": [0, 18, 20, 30, 33, 34, 36, 44, 48, 70], "compil": [0, 5, 8, 33, 36, 51], "spars": [0, 3, 4, 5, 7, 12, 18, 19, 30, 33, 35, 36, 37, 48, 52, 53], "dens": [0, 3, 4, 7, 10, 18, 19, 20, 30, 33, 36, 48], "static": [0, 33, 48, 72], "backend": [0, 4, 5, 8, 18, 33, 36], "sage": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "interfac": [0, 16, 25, 33, 36, 38, 44, 47, 48, 51, 58], "run": [0, 4, 5, 6, 8, 13, 19, 20, 27, 30, 31, 33, 34, 35, 36, 37, 38, 42, 43, 44, 46, 48, 51, 54, 58, 62, 63, 64, 68, 74], "boost": [0, 16, 18, 33, 36, 39], "incid": [0, 4, 6, 10, 12, 15, 18, 19, 30, 31, 33, 36, 37, 42, 48, 50, 56, 59, 63, 67, 73], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "e": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 20, 23, 25, 26, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74], "set": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 73], "color": [0, 1, 12, 15, 27, 30, 33, 36, 42, 47, 48, 51, 53, 54, 64, 67], "cliquer": [0, 12, 36], "cliqu": [0, 3, 16, 18, 19, 20, 25, 27, 30, 31, 33, 36, 37, 45, 48, 55, 57, 58, 59, 68, 69, 70], "relat": [0, 9, 11, 13, 15, 17, 21, 25, 26, 27, 33, 36, 37, 40, 42, 43, 48, 51, 58, 59, 64, 69, 74], "problem": [0, 1, 3, 11, 12, 15, 17, 18, 21, 31, 33, 35, 36, 37, 46, 48, 55, 58, 59, 73], "central": [0, 3, 27, 31, 33, 36, 48], "asteroid": [0, 36], "tripl": [0, 1, 12, 16, 18, 28, 33, 36, 48, 59, 63, 73], "independ": [0, 2, 12, 17, 19, 21, 25, 27, 30, 31, 32, 33, 36, 37, 48, 49, 56, 58, 59, 60, 69, 70], "compar": [0, 12, 16, 18, 20, 23, 27, 28, 29, 31, 33, 36, 44, 48, 53, 58, 64, 70, 73], "permut": [0, 1, 4, 6, 12, 27, 28, 31, 33, 35, 36, 43, 46, 48, 66], "line": [0, 2, 12, 15, 18, 19, 23, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 48, 51, 53, 54, 56, 58, 69], "span": [0, 3, 11, 18, 22, 33, 36, 43, 62, 72], "tree": [0, 3, 4, 8, 9, 11, 12, 16, 18, 19, 20, 22, 23, 27, 30, 31, 33, 36, 40, 43, 44, 48, 51, 53, 55, 58, 61, 62, 67, 70, 72], "pq": [0, 33], "match": [0, 12, 26, 27, 28, 31, 33, 36, 37, 43, 48, 58, 63, 69], "polynomi": [0, 12, 18, 23, 31, 33, 36, 37, 48, 58, 60], "genu": [0, 31, 33, 36, 48], "lov\u00e1sz": [0, 36], "theta": [0, 25, 36, 48], "function": [0, 1, 4, 5, 6, 8, 10, 12, 14, 17, 18, 24, 25, 26, 27, 28, 30, 31, 33, 36, 37, 38, 41, 42, 43, 44, 45, 46, 52, 53, 55, 62, 68, 70, 73, 74], "schnyder": [0, 33, 65], "": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 51, 53, 54, 55, 56, 57, 59, 61, 64, 66, 68, 69, 70, 72, 74], "straight": [0, 36], "planar": [0, 23, 27, 29, 30, 31, 33, 36, 37, 38, 48, 53, 58], "embed": [0, 23, 27, 29, 30, 31, 33, 35, 36, 48, 63, 65], "wrapper": [0, 3, 6, 7, 20, 34, 38], "boyer": [0, 33], "c": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 27, 31, 33, 34, 36, 37, 38, 40, 41, 42, 44, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 72, 73], "travers": [0, 4, 17, 33, 36, 40, 48, 63], "plot": [0, 4, 12, 15, 18, 19, 23, 27, 29, 30, 31, 33, 34, 36, 37, 38, 48, 52, 67], "javascript": [0, 33], "d3": [0, 20, 33, 36, 55], "j": [0, 1, 4, 11, 14, 15, 18, 19, 20, 23, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 48, 59, 66, 68, 69, 70], "decomposit": [0, 16, 18, 36, 37, 41, 46, 59], "vertex": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 51, 53, 54, 57, 59, 61, 63, 64, 67, 68, 69, 70, 72, 73], "separ": [0, 16, 23, 27, 30, 31, 34, 36, 41, 45, 48, 53, 55, 64, 70], "rank": [0, 1, 18, 26, 33, 36, 48, 53], "bandwidth": [0, 3], "cutwidth": 0, "product": [0, 18, 24, 27, 33, 36, 48, 64], "modular": [0, 36, 58], "minim": [0, 1, 3, 12, 17, 18, 21, 27, 30, 33, 35, 36, 37, 41, 44, 45, 46, 48, 51, 67, 68, 70], "convex": [0, 18, 27, 33, 36, 48], "properti": [0, 2, 12, 15, 16, 19, 27, 31, 33, 36, 37, 43, 45, 48, 51, 55, 56, 58, 60, 62, 66, 72], "weakli": [0, 16, 33, 36], "chordal": [0, 30, 31, 33, 36, 45, 48, 55, 58, 70], "shortest": [0, 3, 4, 13, 17, 27, 31, 33, 36, 39, 42, 48, 63, 64], "path": [0, 2, 3, 4, 11, 12, 13, 15, 16, 17, 18, 19, 21, 23, 27, 30, 31, 33, 34, 36, 37, 39, 41, 42, 43, 45, 46, 48, 58, 59, 62, 63, 70, 72], "between": [0, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 30, 31, 32, 33, 36, 40, 42, 43, 44, 45, 48, 50, 51, 52, 53, 55, 62, 63, 64, 67, 69, 70, 73], "all": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74], "pair": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 55, 59, 62, 63, 64, 67, 68, 73], "vertic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73], "latex": [0, 33, 36, 53], "option": [0, 1, 3, 4, 5, 8, 9, 11, 12, 18, 19, 23, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 46, 47, 48, 50, 52, 53, 54, 56, 58, 60, 61, 69, 72], "editor": 0, "widget": 0, "list": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 33, 34, 36, 37, 38, 40, 42, 43, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73], "read": [0, 3, 11, 18, 19, 27, 30, 31, 33, 36, 41, 46, 48, 51, 68, 73], "build": [0, 1, 4, 6, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 36, 41, 42, 46, 48, 56, 59, 69], "hyperbol": [0, 25, 31, 36, 48], "tutt": [0, 23, 31, 36, 48], "partial": [0, 13, 18, 33, 36, 62, 66], "cube": [0, 20, 26, 27, 29, 31, 33, 36, 48], "enumer": [0, 7, 11, 17, 18, 21, 27, 33, 34, 35, 36, 40, 42, 43, 48, 51, 56, 57, 62], "genericgraph": [0, 3, 16, 18, 19, 27, 33, 36, 39, 42, 48, 51, 64, 68], "orient": [0, 4, 9, 10, 15, 16, 18, 19, 27, 33, 36, 48, 50, 53, 67], "connect": [0, 1, 2, 3, 4, 9, 11, 12, 13, 15, 17, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 48, 53, 54, 55, 56, 59, 62, 67, 68, 70, 72], "edg": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74], "domin": [0, 3, 16, 18, 33, 36, 55, 58], "index": [0, 1, 3, 11, 12, 18, 20, 23, 27, 30, 31, 33, 36, 37, 38, 40, 42, 43, 44, 48, 51, 53, 54], "modul": [0, 1, 2, 3, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74], "search": [0, 4, 11, 13, 14, 16, 17, 18, 20, 33, 34, 35, 36, 38, 41, 45, 46, 48, 55, 58, 59, 63, 64, 70, 73, 74], "page": [0, 2, 7, 25, 27, 28, 31, 33, 36, 48, 54, 68], "an": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "specifi": [1, 3, 8, 9, 11, 12, 15, 16, 18, 19, 20, 21, 23, 25, 27, 30, 33, 36, 37, 38, 41, 43, 45, 46, 48, 51, 52, 53, 55, 69, 70, 72, 73], "point": [1, 16, 18, 25, 26, 27, 28, 30, 31, 32, 33, 36, 39, 48, 51, 55, 56, 59, 64, 66, 69], "block": [1, 3, 16, 27, 28, 30, 31, 33, 36, 48, 56, 58, 69], "matrix": [1, 2, 3, 9, 11, 12, 18, 19, 20, 23, 27, 31, 33, 36, 37, 39, 44, 48, 50, 66, 69], "2": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74], "incidencestructur": [1, 30, 48], "instanc": [1, 3, 5, 8, 10, 11, 12, 15, 17, 18, 25, 27, 30, 33, 34, 36, 38, 40, 41, 42, 44, 46, 48, 55, 56, 58, 66, 70], "have": [1, 3, 4, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 58, 59, 64, 66, 68, 69, 70, 73, 74], "follow": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 15, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 41, 42, 45, 46, 48, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 68, 69, 70, 74], "automorphism_group": [1, 19, 23, 27, 31, 33, 48, 69], "return": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "subgroup": [1, 19, 25, 31, 33, 48, 69], "automorph": [1, 26, 27, 30, 31, 33, 36, 48, 69], "group": [1, 19, 23, 26, 27, 30, 31, 33, 35, 36, 48, 51, 53, 54, 69], "graph": [1, 2, 3, 13, 14, 16, 19, 20, 21, 22, 29, 34, 35, 40, 41, 43, 45, 46, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74], "respect": [1, 7, 12, 18, 19, 20, 21, 23, 25, 27, 31, 33, 35, 36, 38, 40, 45, 48, 53, 60, 69], "p": [1, 4, 11, 12, 15, 16, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 36, 37, 41, 44, 46, 48, 49, 52, 53, 56, 58, 61, 64, 66, 69, 72, 74], "b": [1, 3, 4, 6, 8, 9, 10, 11, 12, 16, 18, 19, 20, 24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 40, 42, 44, 48, 53, 54, 55, 57, 58, 59, 61, 64, 68, 69, 70, 72, 73], "partit": [1, 12, 15, 18, 20, 23, 25, 26, 27, 31, 33, 36, 37, 40, 43, 48, 53, 54, 55, 68, 69], "It": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 69, 70, 72, 73, 74], "isomorph": [1, 12, 16, 18, 19, 23, 24, 25, 27, 28, 31, 33, 34, 36, 38, 42, 43, 48, 56, 59, 69, 71, 74], "design": [1, 3, 5, 8, 25, 27, 28, 30, 31, 33, 36, 48, 51, 53, 55, 69], "although": [1, 8, 18, 20, 36, 37, 64, 69], "degre": [1, 3, 4, 6, 8, 9, 10, 11, 13, 16, 18, 19, 20, 21, 24, 27, 30, 31, 33, 34, 35, 36, 37, 38, 40, 44, 48, 56, 59, 61, 70, 72], "differ": [1, 3, 4, 8, 9, 11, 12, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 31, 33, 36, 37, 41, 42, 45, 47, 48, 51, 53, 55, 57, 63, 66, 69, 70], "block_siz": 1, "size": [1, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 31, 33, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 68, 69, 70, 73], "canonical_label": [1, 12, 27, 33, 48], "canon": [1, 12, 27, 33, 36, 48], "label": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 20, 23, 27, 28, 30, 31, 33, 34, 37, 40, 42, 43, 46, 48, 49, 50, 51, 53, 54, 59, 63, 64, 67, 68, 70, 73], "comput": [1, 2, 3, 7, 11, 12, 13, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 72], "weak": [1, 16, 17, 33], "k": [1, 3, 4, 9, 10, 12, 13, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 45, 46, 48, 50, 52, 56, 61, 63, 64, 66, 68, 69, 70, 72], "complement": [1, 5, 9, 12, 15, 16, 17, 19, 20, 23, 27, 31, 33, 36, 43, 44, 48, 57, 60, 61, 69, 74], "copi": [1, 4, 9, 10, 11, 16, 18, 19, 20, 21, 23, 27, 31, 33, 34, 36, 40, 45, 47, 48, 51, 53, 66, 68, 70, 74], "given": [1, 3, 4, 8, 11, 12, 15, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 46, 48, 51, 52, 53, 57, 58, 59, 61, 63, 64, 66, 67, 68, 69, 70, 72, 74], "dual": [1, 25, 26, 29, 31, 33, 36, 37, 48, 69], "edge_color": [1, 33, 36, 37, 51, 53], "proper": [1, 4, 12, 17, 31, 33, 36, 37, 48, 51, 58], "ground_set": [1, 25, 48], "ground": [1, 9, 56, 66], "incidence_graph": 1, "incidence_matrix": [1, 18, 33, 36, 50], "A": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73], "v": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 53, 55, 59, 63, 64, 66, 68, 69, 70, 73], "time": [1, 2, 3, 4, 12, 13, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74], "defin": [1, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 51, 53, 54, 55, 56, 57, 58, 61, 63, 66, 69, 70, 72], "b_j": [1, 30, 48], "0": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73], "otherwis": [1, 2, 3, 4, 6, 12, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 33, 35, 36, 37, 40, 41, 43, 45, 46, 48, 51, 55, 59, 64, 65, 68, 69, 70], "induced_substructur": 1, "substructur": 1, "induc": [1, 4, 9, 14, 15, 16, 25, 27, 30, 31, 33, 34, 36, 41, 43, 45, 46, 48, 58, 59, 69, 70, 72, 74], "intersection_graph": [1, 69], "is_berge_cycl": 1, "check": [1, 3, 4, 5, 6, 8, 9, 12, 15, 16, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 40, 41, 43, 45, 46, 48, 51, 52, 53, 58, 59, 63, 64, 65, 67, 68, 69, 70, 73, 74], "whether": [1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74], "self": [1, 4, 5, 6, 8, 12, 15, 16, 18, 19, 27, 33, 35, 36, 37, 43, 46, 48, 64, 66, 67, 68, 69, 70], "berg": [1, 51, 58], "cyclic": [1, 27, 30, 31, 33, 36, 48, 67], "uniform": [1, 30, 33, 36, 48, 51, 56, 68], "is_connect": [1, 4, 9, 16, 19, 24, 33, 35, 36, 40, 45, 48, 56, 72], "test": [1, 2, 3, 7, 10, 11, 15, 16, 17, 18, 19, 20, 25, 26, 27, 30, 31, 33, 34, 36, 37, 39, 41, 42, 43, 46, 47, 48, 51, 55, 57, 58, 59, 63, 69, 74], "is_generalized_quadrangl": 1, "quadrangl": [1, 25, 26, 48], "is_isomorph": [1, 12, 15, 16, 18, 19, 20, 24, 25, 27, 28, 31, 33, 36, 42, 43, 48, 50, 58, 59, 71, 74], "two": [1, 2, 3, 4, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 51, 53, 54, 55, 56, 58, 59, 63, 64, 66, 67, 69, 70, 73, 74], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74], "is_regular": [1, 20, 23, 25, 27, 30, 31, 33, 36, 48], "r": [1, 11, 12, 14, 16, 23, 24, 25, 26, 27, 28, 31, 33, 34, 36, 38, 43, 48, 53, 59, 69, 72, 74], "is_resolv": 1, "resolv": 1, "is_simpl": [1, 31, 48], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74], "simpl": [1, 8, 9, 11, 12, 16, 17, 18, 20, 22, 27, 31, 33, 35, 36, 37, 42, 45, 48, 51, 57, 58, 62, 64, 68, 73], "repeat": [1, 4, 20, 21, 27, 33, 36, 37, 40, 43, 46, 48], "is_spread": 1, "input": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74], "spread": [1, 26], "is_t_design": 1, "t": [1, 4, 5, 8, 12, 13, 16, 18, 19, 23, 25, 26, 27, 30, 31, 33, 35, 36, 38, 40, 43, 45, 46, 48, 52, 53, 58, 61, 63, 64, 66, 68, 69, 70, 71, 72], "l": [1, 3, 4, 5, 6, 8, 9, 10, 12, 16, 18, 19, 23, 27, 30, 31, 33, 34, 36, 37, 38, 41, 46, 48, 51, 52, 53, 55, 59, 61, 64, 66, 68, 69, 70, 73, 74], "is_uniform": 1, "isomorphic_substructures_iter": 1, "iter": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 24, 27, 28, 30, 33, 34, 36, 38, 48, 52, 53, 55, 57, 59, 62, 63, 64, 66, 68, 70, 71, 73], "h2": [1, 33, 36, 59], "contain": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 66, 68, 69, 70, 73, 74], "num_block": [1, 56], "number": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 46, 48, 49, 50, 51, 53, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74], "num_point": 1, "pack": [1, 22, 33, 56], "maximum": [1, 3, 9, 11, 12, 14, 18, 20, 27, 30, 33, 34, 35, 36, 37, 41, 43, 44, 45, 46, 48, 50, 52, 55, 56, 57, 60, 64, 68, 69, 70], "relabel": [1, 3, 4, 6, 10, 18, 21, 24, 27, 28, 31, 33, 36, 39, 42, 43, 48], "trace": [1, 25, 33, 36, 48], "refer": [1, 5, 8, 14, 15, 16, 18, 19, 25, 26, 27, 30, 33, 35, 36, 37, 38, 42, 48, 49, 51, 60, 61, 69], "wikipedia": [1, 3, 9, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 33, 36, 37, 43, 45, 48, 57, 59, 60, 63, 64, 68, 70], "articl": [1, 3, 9, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 33, 36, 37, 43, 45, 48, 57, 59, 60, 63, 64, 68, 70], "block_design": 1, "incidence_structur": [1, 30, 48], "assmu": 1, "kei": [1, 5, 8, 15, 18, 27, 33, 34, 36, 37, 38, 43, 46, 48, 51, 53, 54, 58, 64, 67, 73], "code": [1, 3, 7, 11, 12, 17, 20, 23, 24, 25, 26, 28, 31, 33, 36, 38, 42, 44, 48, 51, 53, 54, 55, 59, 61, 63, 69, 70, 72], "cup": [1, 2, 12, 16, 20, 36, 46, 70], "1992": 1, "author": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 24, 26, 27, 31, 33, 34, 36, 37, 38, 42, 44, 47, 48, 49, 51, 52, 54, 55, 59, 60, 61, 64, 66, 67, 71, 72, 74], "peter": 1, "dobcsanyi": 1, "david": [1, 12, 19, 20, 24, 27, 31, 36, 41, 44, 46, 48, 49, 55, 59, 63, 74], "joyner": [1, 36], "2007": [1, 34, 36, 38, 48, 52], "2008": [1, 12, 36, 37, 38, 67], "significantli": [1, 8, 36, 55], "modifi": [1, 3, 13, 18, 21, 33, 36, 48, 50, 51], "form": [1, 2, 3, 4, 5, 9, 12, 15, 16, 18, 25, 26, 27, 31, 33, 36, 43, 45, 48, 63, 66], "part": [1, 12, 15, 16, 19, 23, 25, 27, 30, 31, 33, 36, 37, 42, 43, 48, 51, 64, 69], "py": [1, 38, 48], "version": [1, 3, 4, 12, 14, 16, 18, 20, 21, 26, 27, 28, 31, 33, 34, 35, 36, 37, 38, 41, 46, 48, 52, 54, 55, 58, 60, 62, 64, 67, 68, 71], "6": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 61, 62, 64, 66, 68, 69, 70, 72, 74], "written": [1, 11, 14, 31, 33, 36, 37, 42, 48, 52, 57, 59, 61, 63], "designtheori": 1, "org": [1, 12, 19, 23, 33, 36, 48, 51, 54, 58], "vincent": 1, "delecroix": 1, "2014": [1, 20, 36, 54, 55], "major": 1, "rewrit": [1, 33], "combinat": [1, 18, 19, 25, 27, 28, 30, 36, 48], "none": [1, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 72, 73], "name": [1, 3, 4, 6, 11, 12, 18, 19, 20, 23, 24, 25, 27, 28, 30, 31, 33, 34, 36, 38, 48, 51, 54, 58, 61, 66, 69, 70], "true": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "base": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 51, 53, 56, 57, 58, 61, 66, 67, 71, 72, 73], "object": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 22, 27, 28, 30, 33, 34, 35, 36, 37, 38, 41, 43, 45, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 66, 67, 71, 72, 73], "can": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 73], "collect": [1, 11, 16, 18, 27, 30, 33, 36, 43, 48, 59, 66, 68], "explicit": [1, 18, 36], "altern": [1, 17, 23, 26, 27, 31, 33, 36, 39, 48, 58, 63, 66], "thei": [1, 3, 4, 7, 11, 15, 16, 17, 18, 20, 25, 27, 28, 29, 30, 31, 32, 33, 36, 40, 42, 43, 44, 46, 48, 50, 54, 63, 66, 68, 69, 73], "binari": [1, 8, 9, 12, 15, 19, 21, 26, 27, 30, 31, 33, 34, 36, 46, 48, 63, 66], "underli": [1, 12, 16, 19, 25, 27, 30, 33, 36, 38, 48, 51, 55], "If": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 57, 58, 59, 61, 63, 64, 65, 66, 68, 69, 70, 73, 74], "integ": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 48, 54, 55, 56, 64, 68, 69, 73], "consid": [1, 3, 4, 9, 10, 16, 18, 20, 21, 25, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 50, 55, 57, 64, 66, 68, 69, 70, 73], "The": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74], "syntax": [1, 18, 33, 48], "where": [1, 3, 4, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 52, 55, 59, 61, 62, 63, 64, 68, 69, 70, 72, 74], "omit": [1, 33, 48, 51], "automat": [1, 3, 12, 18, 33, 36, 48, 51, 54, 64, 68, 69, 72], "union": [1, 4, 17, 20, 25, 27, 31, 33, 36, 37, 45, 48, 59, 69], "h": [1, 4, 9, 10, 12, 15, 16, 17, 18, 24, 25, 26, 27, 28, 30, 31, 33, 34, 36, 40, 42, 46, 47, 48, 50, 51, 53, 55, 56, 58, 59, 61, 63, 68, 69, 70, 72, 73, 74], "d": [1, 3, 4, 5, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 38, 40, 42, 43, 44, 46, 48, 49, 50, 53, 54, 55, 58, 62, 63, 64, 68, 69, 70, 72, 73], "sort": [1, 3, 4, 5, 8, 9, 10, 11, 12, 16, 18, 19, 20, 21, 24, 27, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 46, 48, 49, 50, 53, 55, 58, 59, 64, 67, 68, 70, 72, 73], "ani": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 55, 59, 63, 66, 67, 68, 69, 70, 72, 73], "each": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73], "column": [1, 12, 23, 27, 33, 36, 37, 38, 48, 66, 69], "repres": [1, 4, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 30, 31, 33, 34, 36, 38, 39, 41, 42, 43, 46, 48, 51, 53, 54, 58, 59, 63, 64, 66, 67, 69], "string": [1, 3, 6, 12, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 38, 41, 46, 48, 50, 51, 52, 53, 56, 58, 61, 63, 64, 70], "fano": [1, 56], "plane": [1, 25, 28, 30, 31, 33, 48, 56, 69], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74], "caution": 1, "fals": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "must": [1, 3, 4, 6, 8, 11, 12, 14, 15, 17, 18, 19, 24, 25, 26, 27, 28, 30, 31, 33, 36, 37, 39, 42, 43, 46, 48, 51, 52, 64, 69], "place": [1, 4, 8, 23, 27, 31, 33, 34, 36, 37, 38, 41, 48, 51, 53, 66, 69, 70], "whole": [1, 3, 4, 9, 11, 17, 18, 20, 33, 36, 37, 44, 61, 66, 68], "your": [1, 16, 17, 25, 33, 36, 38, 47, 48, 51, 54], "becom": [1, 4, 8, 18, 25, 30, 31, 33, 36, 48, 69, 73], "intern": [1, 4, 10, 16, 33, 36, 40, 43, 44, 50, 51], "exampl": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "construct": [1, 15, 16, 18, 19, 20, 23, 25, 26, 27, 28, 29, 31, 33, 36, 37, 38, 48, 51, 69, 73, 74], "give": [1, 4, 16, 18, 25, 27, 31, 33, 36, 37, 42, 46, 48, 51, 55, 69, 73], "7": [1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 66, 68, 69, 70, 72], "3": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73], "4": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73], "5": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 72, 73, 74], "onli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 46, 48, 49, 51, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 73], "provid": [1, 3, 4, 11, 12, 18, 21, 24, 25, 27, 30, 31, 33, 36, 37, 38, 39, 45, 46, 47, 48, 51, 53, 54, 69, 72, 74], "suffici": [1, 27, 36, 37, 39, 48, 58, 63], "In": [1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 41, 42, 44, 45, 46, 48, 51, 53, 54, 59, 62, 63, 64, 66, 69, 70], "case": [1, 3, 4, 5, 6, 8, 12, 14, 15, 16, 17, 18, 19, 20, 23, 26, 27, 28, 29, 30, 33, 35, 36, 37, 39, 41, 43, 46, 48, 51, 55, 59, 64, 66, 68, 69, 70, 73, 74], "Or": [1, 16, 18, 27, 33, 36, 48, 58, 64], "its": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 54, 55, 56, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74], "adjac": [1, 3, 6, 9, 10, 12, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 42, 44, 48, 50, 59, 69, 74], "row": [1, 3, 9, 12, 23, 27, 31, 33, 36, 37, 48, 66, 69], "m": [1, 2, 3, 11, 12, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 39, 43, 44, 46, 48, 50, 51, 55, 56, 62, 64, 68, 69, 70, 72, 74], "hashabl": [1, 4, 7, 27, 28, 33, 36, 45, 48, 59], "order": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 45, 46, 48, 51, 53, 55, 57, 58, 59, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 74], "doe": [1, 3, 4, 7, 9, 10, 13, 16, 17, 18, 19, 20, 21, 28, 30, 33, 34, 36, 43, 46, 47, 48, 51, 53, 58, 59, 68, 69, 74], "matter": [1, 33], "see": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70], "github": [1, 9, 10, 14, 16, 18, 21, 23, 27, 33, 36, 37, 47, 48, 51, 54, 59], "issu": [1, 9, 10, 14, 16, 18, 21, 23, 27, 31, 33, 36, 37, 48, 51, 59], "11333": 1, "blockdesign": 1, "you": [1, 4, 5, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 26, 27, 30, 31, 33, 35, 36, 37, 38, 44, 48, 51, 52, 53, 54, 55, 58, 59, 60, 61, 68, 69, 73], "care": [1, 11, 33, 36, 51], "speed": [1, 8, 11, 22, 27, 28, 33, 34, 36, 48, 69], "_block": 1, "desarguesianprojectiveplanedesign": 1, "balanc": [1, 27, 30, 48], "incomplet": [1, 17], "g": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74], "pgl": [1, 69], "cardin": [1, 12, 16, 17, 18, 19, 21, 23, 27, 30, 31, 33, 34, 36, 37, 45, 48, 56, 57, 66, 69, 70], "168": [1, 31, 36, 48, 72], "non": [1, 3, 4, 5, 8, 9, 11, 12, 17, 18, 19, 20, 21, 23, 25, 27, 30, 31, 33, 34, 36, 37, 38, 39, 46, 48, 50, 52, 56, 58, 62, 64, 69], "rang": [1, 4, 5, 6, 8, 10, 11, 12, 16, 18, 19, 20, 21, 23, 24, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 45, 48, 51, 52, 53, 55, 61, 64, 66, 68, 70, 72], "abc": [1, 33, 51], "ab": [1, 11, 13, 18, 19, 33, 36], "ac": [1, 12, 34], "bc": [1, 52], "bd": 1, "8": [1, 3, 4, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 53, 55, 57, 58, 61, 64, 66, 67, 68, 69, 72], "n": [1, 2, 3, 4, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 49, 52, 55, 56, 58, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73], "equal": [1, 3, 10, 11, 12, 15, 16, 17, 18, 19, 20, 24, 25, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 44, 45, 46, 48, 51, 55, 56, 59, 61, 63, 69, 70, 73], "fano1": 1, "balanced_incomplete_block_design": 1, "fano2": 1, "projective_plan": 1, "solver": [1, 12, 15, 16, 17, 18, 21, 33, 36, 37, 41, 46], "verbos": [1, 12, 13, 15, 16, 17, 18, 21, 27, 33, 36, 37, 41, 43, 44, 46, 48, 55, 59], "integrality_toler": [1, 12, 16, 18, 21, 33, 36, 37, 41, 46], "mathcal": [1, 31, 36, 37, 48], "assign": [1, 16, 18, 19, 23, 30, 33, 36, 37, 48, 62, 64, 70], "monochromat": 1, "optim": [1, 8, 12, 16, 17, 21, 33, 35, 36, 37, 41, 44, 45, 46, 55, 61, 74], "minimum": [1, 3, 9, 12, 14, 16, 17, 18, 21, 27, 30, 33, 35, 36, 37, 39, 41, 45, 46, 48, 51, 53, 56, 57, 64, 68, 69], "possibl": [1, 3, 4, 8, 9, 12, 13, 15, 17, 18, 19, 27, 28, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 51, 55, 57, 58, 59, 62, 64, 66, 69, 73], "default": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 67, 68, 69, 70, 73, 74], "mix": [1, 12, 15, 16, 18, 21, 33, 36, 37, 41, 46, 52], "linear": [1, 12, 15, 16, 17, 18, 19, 20, 21, 25, 26, 33, 36, 37, 41, 45, 46, 48, 51, 58, 69], "program": [1, 12, 15, 16, 17, 18, 19, 21, 27, 33, 36, 37, 41, 44, 46, 48, 51, 53, 56], "milp": [1, 12, 15, 16, 18, 21, 33, 36, 37], "one": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 73], "For": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 51, 53, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 69, 70, 74], "more": [1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 69, 70, 73], "solv": [1, 3, 12, 15, 16, 17, 18, 21, 27, 33, 36, 37, 41, 42, 46, 48, 55], "mixedintegerlinearprogram": [1, 12, 15, 16, 18, 21, 33, 36, 37, 41, 46], "neg": [1, 3, 4, 5, 8, 11, 12, 15, 18, 19, 20, 21, 27, 33, 36, 48, 64], "level": [1, 4, 5, 7, 8, 12, 15, 16, 18, 21, 27, 33, 36, 37, 41, 42, 43, 46, 48, 53, 55], "want": [1, 4, 5, 8, 9, 16, 17, 20, 27, 33, 34, 36, 37, 48, 54, 57, 61, 66, 69, 74], "sinc": [1, 5, 8, 18, 20, 26, 27, 30, 31, 33, 36, 37, 38, 40, 46, 48, 54, 55, 61, 64, 68, 73], "np": [1, 3, 17, 33, 36, 37, 45, 58], "complet": [1, 2, 9, 12, 14, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 40, 41, 45, 48, 56, 58, 59, 61, 69, 70], "mai": [1, 4, 8, 9, 16, 17, 18, 19, 20, 23, 24, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 49, 51, 53, 58, 64, 66, 69, 70, 73], "take": [1, 3, 4, 8, 10, 11, 18, 20, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 38, 41, 46, 48, 52, 53, 54, 55, 57, 58, 64, 66, 68, 73], "some": [1, 2, 3, 4, 11, 12, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 30, 31, 33, 36, 37, 39, 41, 42, 44, 46, 48, 51, 53, 54, 55, 56, 58, 59, 62, 63, 66, 68, 69, 70, 74], "depend": [1, 3, 4, 6, 12, 18, 20, 27, 30, 33, 36, 37, 48, 51, 53, 58, 61, 64, 70], "valu": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 49, 51, 53, 54, 55, 56, 58, 60, 61, 64, 68, 69, 70, 73, 74], "mean": [1, 4, 6, 12, 15, 16, 18, 20, 21, 27, 30, 31, 33, 36, 37, 39, 41, 42, 46, 48, 51, 58, 68, 69], "messag": [1, 4, 48], "print": [1, 4, 11, 13, 16, 18, 19, 20, 23, 24, 27, 28, 30, 31, 33, 36, 37, 38, 40, 43, 46, 48, 51, 53, 55, 56, 58, 64, 66, 68, 73], "paramet": [1, 4, 6, 9, 11, 12, 14, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 36, 37, 38, 40, 41, 43, 45, 46, 48, 50, 51, 52, 53, 55, 64, 69, 70, 73], "inexact": [1, 12, 16, 18, 21, 33, 36, 37, 41, 46], "ring": [1, 12, 16, 18, 21, 27, 30, 33, 36, 37, 41, 46, 48], "get_valu": [1, 12, 16, 18, 21, 33, 36, 37, 41, 46], "ha": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 55, 58, 62, 63, 64, 66, 68, 69, 70], "chromat": [1, 23, 24, 27, 30, 31, 36, 37, 48, 60, 72], "len": [1, 4, 9, 10, 12, 16, 17, 18, 19, 20, 21, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 44, 48, 52, 56, 57, 58, 61, 62, 63, 64, 66, 68, 69, 70, 72], "steiner_triple_system": 1, "One": [1, 18, 25, 27, 31, 33, 36, 40, 46, 48, 57, 64, 66, 69, 72], "admiss": [1, 33, 36, 37, 39, 66], "architectur": 1, "correspond": [1, 3, 11, 12, 16, 17, 18, 20, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 41, 42, 43, 44, 46, 48, 50, 51, 53, 56, 58, 59, 62, 63, 69, 70], "petersengraph": [1, 2, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 33, 34, 35, 36, 37, 39, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 70, 72, 74], "definit": [1, 9, 10, 12, 15, 17, 18, 20, 23, 28, 30, 31, 33, 36, 37, 38, 42, 43, 44, 48, 54, 55], "made": [1, 3, 11, 21, 25, 27, 31, 33, 36, 41, 42, 46, 48, 50, 58, 61, 69], "avail": [1, 3, 4, 7, 10, 11, 12, 15, 16, 18, 19, 27, 28, 31, 32, 33, 36, 38, 44, 45, 48, 50, 51, 52, 53, 58, 63], "accord": [1, 4, 15, 18, 20, 24, 25, 31, 33, 36, 37, 39, 42, 43, 48, 51, 53, 54, 63, 66, 69, 70, 73, 74], "boolean": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74], "whose": [1, 4, 6, 8, 11, 15, 16, 17, 18, 20, 26, 27, 30, 31, 33, 36, 37, 41, 43, 44, 45, 46, 48, 51, 54, 59, 63, 66, 69], "do": [1, 4, 5, 8, 15, 16, 17, 18, 19, 20, 27, 30, 31, 33, 35, 36, 37, 45, 46, 48, 51, 53, 56, 58, 66, 69], "appear": [1, 3, 4, 11, 12, 18, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 42, 45, 48, 51, 57, 58, 59, 66, 69, 70], "balancedincompleteblockdesign": 1, "also": [1, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 51, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73], "bibd": [1, 27, 48], "13": [1, 3, 4, 16, 18, 19, 21, 23, 25, 27, 30, 33, 34, 35, 36, 38, 39, 42, 43, 48, 51, 52, 53, 61, 66, 69], "return_paramet": 1, "9": [1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 59, 61, 64, 66, 68, 69, 72], "_name": 1, "subset": [1, 9, 12, 17, 18, 21, 25, 26, 27, 31, 33, 34, 36, 40, 43, 44, 45, 46, 48, 51, 57, 59, 69, 70], "interpret": [1, 4, 6, 31, 33, 48, 51], "argument": [1, 3, 6, 11, 12, 18, 19, 23, 27, 28, 29, 33, 36, 37, 38, 45, 48, 52, 53, 56, 59, 65, 72, 73], "when": [1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 55, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74], "output": [1, 3, 4, 6, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 24, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 51, 52, 55, 56, 58, 62, 63, 64, 66, 67, 68, 69, 70], "tupl": [1, 5, 8, 12, 16, 19, 26, 27, 28, 30, 31, 33, 36, 38, 40, 43, 48, 51, 55, 56, 64, 65, 69, 70], "same": [1, 2, 3, 4, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 30, 31, 33, 36, 37, 42, 43, 46, 48, 51, 53, 54, 58, 61, 63, 64, 68, 69, 70, 73], "store": [1, 2, 3, 8, 9, 11, 13, 14, 20, 30, 33, 36, 37, 41, 43, 46, 48, 53, 58, 67, 74], "slightli": [1, 13, 27, 33, 36, 48, 51, 57], "dictionari": [1, 3, 4, 6, 11, 12, 13, 18, 19, 20, 21, 23, 27, 30, 31, 32, 33, 36, 37, 38, 42, 43, 48, 50, 51, 53, 54, 55, 58, 63, 72, 73], "either": [1, 4, 5, 6, 12, 15, 18, 19, 21, 24, 25, 27, 30, 31, 33, 36, 38, 39, 40, 43, 46, 48, 51, 59, 65, 69, 70, 73], "steiner": [1, 33, 69], "s13": 1, "algorithm": [1, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 40, 43, 44, 45, 48, 52, 53, 55, 57, 58, 59, 61, 62, 64, 66, 68, 70, 71, 72, 73, 74], "implement": [1, 2, 3, 4, 6, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74], "gap": [1, 11, 25, 26, 31, 33, 36, 48, 55], "requir": [1, 4, 5, 8, 11, 15, 20, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 41, 43, 45, 46, 48, 51, 56, 60, 68, 69], "packag": [1, 12, 26, 33, 36, 38, 45, 47, 48, 51, 54, 60, 69], "includ": [1, 4, 12, 16, 18, 19, 25, 26, 27, 30, 33, 35, 36, 38, 43, 48, 51, 58, 68], "gap_packag": [1, 25, 26, 31, 33, 48, 69], "spkg": [1, 31, 33, 48, 54], "project": [1, 12, 25, 27, 31, 48, 51, 69], "pp": [1, 18, 21, 25, 26, 27, 36, 48], "21": [1, 16, 18, 25, 26, 30, 31, 32, 33, 34, 36, 37, 38, 42, 48, 54, 55, 61, 63, 69, 72], "soicher": 1, "leonard": [1, 26, 48], "manual": [1, 27, 48], "http": [1, 12, 19, 23, 26, 27, 31, 33, 35, 36, 37, 38, 47, 48, 51, 54, 56, 63, 69], "www": [1, 12, 27, 31, 33, 35, 36, 37, 48, 51, 63, 69], "pkg": [1, 51], "htm": 1, "chap003": 1, "empti": [1, 2, 3, 4, 9, 11, 12, 14, 16, 18, 20, 23, 25, 27, 30, 31, 33, 36, 37, 40, 44, 45, 48, 50, 56, 64, 66, 68, 70, 73], "receiv": [1, 30, 33, 36, 70], "sum": [1, 3, 9, 11, 13, 16, 18, 20, 21, 27, 31, 33, 36, 37, 48, 55, 61, 68, 72, 73], "whenev": [1, 4, 12, 15, 18, 25, 30, 33, 36, 42, 48, 50, 55, 59, 69], "element": [1, 4, 10, 11, 12, 15, 17, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 36, 37, 38, 39, 42, 43, 44, 48, 51, 54, 55, 56, 57, 59, 66, 69], "first": [1, 3, 4, 5, 8, 11, 12, 13, 17, 18, 19, 20, 23, 24, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 46, 48, 51, 53, 56, 58, 62, 63, 64, 65, 68, 69, 70, 72, 73, 74], "similarli": [1, 33, 35, 36, 48, 51, 55], "keep": [1, 4, 11, 17, 18, 31, 33, 36, 46, 48, 57, 66, 70], "origin": [1, 12, 16, 18, 27, 31, 33, 36, 43, 44, 48, 59, 61, 63], "note": [1, 3, 4, 5, 6, 8, 12, 16, 18, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 39, 48, 50, 51, 52, 53, 55, 57, 58, 68, 69, 70], "incorrect": [1, 12, 33, 36, 69], "rare": [1, 33], "occas": 1, "14": [1, 4, 10, 11, 14, 16, 18, 20, 23, 25, 26, 27, 28, 31, 33, 34, 36, 42, 43, 48, 53, 66, 68, 69], "block_matrix": 1, "transpos": [1, 33], "x": [1, 3, 4, 5, 8, 11, 12, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 31, 33, 34, 36, 42, 43, 45, 48, 51, 52, 53, 57, 61, 64, 66, 67, 69, 70, 72, 73], "subseteq": [1, 9, 17, 18, 33, 36, 37, 41, 44, 45, 46, 59], "h_x": 1, "goe": [1, 19, 20, 33, 36, 40, 70], "befor": [1, 4, 10, 17, 18, 19, 33, 34, 36, 43, 48, 51, 62, 69, 70], "new": [1, 4, 5, 6, 8, 11, 12, 16, 18, 19, 20, 25, 26, 27, 30, 31, 33, 36, 38, 42, 48, 51, 55, 57, 62, 63, 66, 68, 70], "involv": [1, 8, 17, 18, 20, 33, 36, 51, 62, 69], "probabl": [1, 5, 8, 16, 19, 30, 33, 34, 36, 43, 48, 49, 51, 56, 59, 61, 68], "should": [1, 3, 4, 8, 10, 11, 12, 13, 15, 17, 18, 19, 20, 23, 27, 28, 29, 33, 36, 37, 38, 47, 48, 51, 53, 56, 59, 63, 66, 68, 69, 73], "call": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 48, 50, 51, 53, 55, 56, 57, 58, 59, 66, 68, 69, 73], "perform": [1, 4, 8, 13, 15, 17, 18, 20, 27, 30, 33, 36, 37, 39, 48, 55, 58, 59, 63, 68, 69, 70], "critic": [1, 36], "remov": [1, 4, 5, 7, 9, 10, 11, 12, 16, 18, 19, 25, 26, 27, 30, 33, 36, 40, 44, 48, 51, 67, 68, 69, 70, 72, 74], "f": [1, 6, 9, 12, 16, 17, 18, 19, 25, 26, 27, 30, 31, 33, 35, 36, 38, 40, 48, 52, 53, 59, 61, 68, 69, 70], "them": [1, 2, 4, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 30, 31, 33, 34, 36, 37, 39, 42, 48, 51, 57, 66, 69, 70], "belong": [1, 2, 10, 15, 17, 18, 20, 21, 26, 33, 36, 39, 43, 51, 59, 63, 66], "conveni": [1, 33, 51], "effect": [1, 20, 29, 36, 48, 51], "behav": [1, 33, 36, 48, 51, 55], "positiveinteg": 1, "trivial": [1, 16, 17, 18, 20, 27, 33, 36, 48, 62, 64, 69], "19": [1, 4, 18, 23, 25, 30, 31, 33, 34, 36, 37, 38, 42, 44, 48, 53, 69], "is_strongly_regular": [1, 9, 20, 25, 27, 28, 31, 36, 48, 69], "57": [1, 31, 48, 69], "24": [1, 4, 10, 12, 19, 25, 26, 27, 31, 33, 36, 37, 38, 42, 43, 48, 53, 68, 69], "11": [1, 4, 12, 14, 16, 18, 19, 20, 21, 23, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 42, 43, 45, 46, 48, 51, 53, 54, 55, 61, 63, 66, 68, 69, 73], "cycl": [1, 3, 4, 9, 12, 15, 16, 18, 23, 24, 26, 27, 30, 31, 33, 34, 36, 37, 41, 42, 43, 45, 46, 48, 51, 55, 62, 63, 70, 72, 74], "after": [1, 11, 13, 18, 21, 23, 26, 27, 30, 31, 33, 36, 37, 39, 43, 48, 51, 52, 63, 70], "claud": 1, "length": [1, 3, 4, 8, 11, 12, 15, 18, 19, 20, 21, 23, 25, 27, 28, 30, 31, 33, 34, 36, 38, 43, 45, 46, 48, 51, 52, 55, 59, 63, 64, 69, 74], "ell": 1, "distinct": [1, 16, 18, 19, 27, 28, 30, 31, 33, 41, 43, 48, 69, 72], "f_1": [1, 27, 48], "ldot": [1, 3, 13, 18, 20, 24, 27, 28, 30, 33, 36, 37, 40, 45, 48, 70], "f_": [1, 25, 27, 38, 48], "v_1": [1, 13, 23, 27, 33, 36, 39, 41, 46, 48, 72], "v_": [1, 33, 36, 39, 72], "le": [1, 41, 46], "f_i": [1, 36], "v_i": [1, 13, 27, 33, 36, 39, 41, 42, 46, 48], "acycl": [1, 4, 16, 18, 19, 33, 34, 37, 53, 58, 62], "fag1983": 1, "iff": [1, 18, 27, 33, 36, 48], "bh2012": [1, 25, 27, 48, 69], "section": [1, 15, 23, 26, 27, 30, 31, 33, 36, 37, 39, 48, 67, 70], "most": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 48, 50, 51, 52, 56, 57, 58, 59, 60, 63, 64, 66, 68, 69, 73], "everi": [1, 2, 3, 4, 9, 11, 13, 16, 18, 19, 21, 23, 25, 27, 28, 30, 31, 33, 34, 36, 37, 43, 45, 48, 51, 55, 59, 62, 63, 64, 66, 68, 69, 70], "uniqu": [1, 2, 3, 4, 16, 18, 26, 28, 31, 33, 36, 37, 38, 42, 45, 48, 59, 69], "both": [1, 4, 8, 10, 12, 15, 16, 17, 19, 20, 21, 24, 31, 33, 36, 37, 38, 42, 43, 45, 46, 48, 50, 53, 59, 63, 70, 73], "furthermor": [1, 16, 27, 33, 36, 40, 48, 51, 58, 63, 70], "posit": [1, 2, 3, 4, 8, 11, 13, 15, 18, 19, 23, 24, 27, 28, 30, 31, 33, 36, 37, 39, 41, 43, 48, 51, 53, 54, 55, 65, 70], "generalized_quadrangl": [1, 25, 48], "pt2009": [1, 25, 48], "allow": [1, 3, 4, 5, 6, 8, 9, 10, 12, 18, 19, 20, 24, 28, 33, 36, 38, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 64, 66, 72], "To": [1, 4, 11, 13, 15, 17, 18, 19, 26, 27, 31, 33, 36, 38, 45, 46, 48, 51, 56, 58, 62, 63, 68, 69], "describ": [1, 7, 9, 11, 12, 16, 18, 21, 23, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 41, 43, 44, 46, 48, 51, 62, 63, 66, 69, 70, 71, 72], "below": [1, 3, 4, 12, 16, 18, 20, 23, 27, 28, 29, 31, 33, 36, 40, 42, 46, 48, 51, 53, 58, 73], "explan": [1, 5, 8, 15, 18, 27, 33, 36, 41, 46, 48, 51, 69], "instead": [1, 4, 8, 9, 10, 11, 12, 18, 19, 20, 21, 26, 28, 30, 33, 34, 36, 42, 46, 48, 50, 51, 54, 55, 57, 58, 59, 68, 69, 70], "answer": [1, 9, 11, 15, 17, 18, 20, 33, 36, 42, 58, 59], "abov": [1, 9, 11, 13, 18, 20, 23, 25, 26, 27, 28, 30, 33, 36, 37, 46, 48, 51, 53, 59, 66, 68], "exist": [1, 3, 11, 12, 15, 16, 18, 20, 25, 26, 27, 28, 30, 31, 33, 36, 37, 41, 42, 43, 45, 46, 47, 48, 51, 53, 55, 58, 59, 62, 66, 68, 69, 70, 74], "cremonarichmondconfigur": 1, "actual": [1, 4, 5, 8, 11, 16, 17, 18, 20, 23, 28, 31, 33, 36, 37, 41, 42, 43, 46, 48, 51, 54, 56, 57, 59, 61, 66, 69], "other": [1, 3, 4, 5, 7, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 54, 58, 59, 63, 64, 66], "certif": [1, 2, 4, 9, 12, 16, 18, 19, 33, 36, 37, 42, 45, 46, 55, 59, 63, 74], "said": [1, 9, 17, 30, 33, 36, 44, 48, 55, 57, 58, 59, 63, 69], "exactli": [1, 3, 11, 16, 18, 19, 24, 27, 28, 31, 33, 36, 37, 42, 43, 44, 48, 59, 69, 70], "bewar": [1, 12, 15, 18, 33, 36, 58], "satisfi": [1, 2, 17, 19, 25, 26, 28, 31, 33, 36, 38, 45, 46, 48, 55, 57, 63, 66, 69], "condit": [1, 17, 19, 46, 55, 69], "glpk": [1, 36, 37], "lp": [1, 12, 15, 17, 18, 33, 36, 37], "been": [1, 4, 11, 15, 17, 18, 19, 20, 22, 27, 31, 32, 33, 35, 36, 37, 39, 40, 41, 44, 45, 46, 48, 51, 55, 63, 69, 70], "report": [1, 4, 9, 14, 18, 21, 27, 31, 33, 36, 37, 44, 48, 64, 69, 73], "veri": [1, 3, 7, 8, 10, 11, 15, 17, 18, 20, 23, 26, 27, 29, 33, 34, 35, 36, 37, 39, 41, 45, 46, 48, 55, 57, 59, 64, 69], "slow": [1, 7, 12, 17, 27, 33, 35, 36, 37, 42, 48, 70], "hit": [1, 17, 18, 19, 36, 48], "wall": [1, 23, 48], "instal": [1, 12, 18, 31, 33, 36, 45, 47, 48, 51, 54, 60], "power": [1, 19, 24, 25, 26, 27, 30, 36, 48, 69], "cplex": [1, 36], "gurobi": 1, "along": [1, 4, 12, 18, 24, 31, 33, 36, 39, 48, 51, 59, 64], "quiet": [1, 12, 15, 16, 18, 21, 33, 36, 37, 41, 46], "correct": [1, 15, 16, 17, 20, 22, 25, 26, 28, 33, 36, 38, 48, 59, 63, 69], "As": [1, 5, 6, 8, 9, 10, 11, 12, 15, 17, 18, 20, 21, 23, 28, 30, 33, 36, 37, 39, 40, 42, 48, 51, 59, 69], "expect": [1, 3, 8, 10, 11, 15, 20, 26, 27, 28, 30, 31, 33, 35, 36, 37, 46, 48, 63, 69], "useless": [1, 17, 36, 41, 46, 48, 69], "we": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 55, 58, 59, 63, 64, 66, 68, 69, 70, 72, 73, 74], "cautiou": [1, 48, 69], "gui": [1, 48, 69], "disabl": [1, 12, 33, 36, 48, 68, 69], "td": [1, 28, 48], "transversal_design": 1, "ag": [1, 31, 34, 48], "affinegeometrydesign": 1, "gf": [1, 12, 19, 25, 26, 27, 31, 33, 36, 44, 48, 69], "Their": [1, 31, 48], "cl": [1, 36, 38], "i2": [1, 33], "traceback": [1, 3, 4, 5, 6, 8, 9, 10, 12, 16, 18, 19, 20, 22, 26, 27, 31, 33, 36, 37, 38, 44, 45, 48, 51, 57, 58, 66, 68, 69, 73], "recent": [1, 3, 4, 5, 6, 8, 9, 10, 12, 16, 18, 19, 20, 22, 26, 27, 31, 33, 36, 37, 38, 44, 45, 48, 51, 57, 58, 66, 68, 69, 73], "last": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 18, 19, 20, 22, 23, 26, 27, 31, 33, 34, 36, 37, 38, 44, 45, 48, 51, 57, 58, 66, 68, 69, 70, 73], "typeerror": [1, 4, 5, 8, 12, 18, 33, 36], "within": [1, 11, 30, 33, 39, 48, 51], "doesn": [1, 16, 18, 26, 27, 33, 36, 38, 48], "lambda": [1, 3, 4, 5, 8, 9, 11, 18, 19, 20, 25, 27, 28, 31, 33, 36, 48, 51, 53, 59, 64, 67, 68, 69, 73], "sometim": [1, 20, 23, 33, 34, 36, 37, 46, 48, 55], "short": [1, 2, 18, 20, 28, 33, 36, 48, 51, 53], "cover": [1, 12, 26, 31, 33, 36, 37, 48, 58], "guess": [1, 18, 36, 42, 69], "cannot": [1, 3, 4, 6, 11, 12, 15, 16, 19, 20, 27, 33, 34, 36, 37, 38, 39, 41, 44, 46, 48, 55, 58, 62, 63, 69], "boolean_answ": 1, "fano_block": 1, "quadrupl": [1, 9, 36], "s3_9": 1, "steiner_quadruple_system": 1, "s4_8": 1, "s4_14": 1, "witt": [1, 26, 48], "need": [1, 3, 5, 8, 10, 11, 13, 15, 16, 18, 20, 25, 26, 27, 28, 33, 34, 36, 37, 43, 44, 46, 48, 50, 51, 53, 63, 64, 70, 73], "databas": [1, 19, 27, 48, 53, 58], "wittdesign": [1, 69], "w12": 1, "12": [1, 4, 9, 10, 12, 13, 16, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 42, 43, 47, 48, 51, 53, 54, 61, 63, 66, 68, 69, 72], "further": [1, 3, 25, 34, 36, 37, 48, 55, 68, 69], "h_1": [1, 33, 34, 69], "h_2": [1, 34, 69], "inject": [1, 27, 33, 48], "mapsto": [1, 33, 36, 39], "s_2": [1, 28, 36, 46, 48, 55], "s_1": [1, 27, 28, 36, 39, 48, 55, 66], "s2": [1, 16, 36, 48], "text": [1, 4, 8, 11, 13, 15, 17, 18, 20, 27, 30, 31, 33, 36, 37, 38, 41, 46, 48, 51, 55, 59, 70], "particular": [1, 3, 6, 17, 18, 19, 20, 25, 26, 27, 31, 33, 36, 37, 45, 46, 48, 59, 70], "itself": [1, 12, 16, 17, 18, 19, 21, 30, 33, 36, 38, 45, 46, 48, 50, 51, 59, 66, 73], "subhypergraph_search": 1, "how": [1, 5, 8, 11, 13, 15, 18, 19, 23, 27, 31, 32, 33, 36, 39, 48, 51, 53, 54, 59, 69, 70, 73, 74], "mani": [1, 5, 8, 11, 17, 18, 20, 23, 24, 27, 28, 30, 31, 32, 33, 36, 38, 46, 48, 51, 52, 63, 64, 66], "c_5": [1, 33, 36, 37], "petersen": [1, 4, 9, 13, 15, 16, 17, 18, 20, 21, 25, 27, 31, 33, 34, 36, 37, 42, 46, 48, 51, 53, 55, 59, 63, 69, 72, 74], "cyclegraph": [1, 3, 9, 12, 13, 15, 16, 18, 19, 21, 23, 24, 27, 30, 31, 33, 36, 37, 41, 42, 45, 46, 48, 52, 55, 60, 62, 63, 70, 73, 74], "ip": 1, "ic": [1, 36, 63], "_": [1, 4, 5, 8, 12, 15, 16, 18, 21, 24, 25, 26, 27, 28, 30, 33, 34, 36, 40, 45, 46, 48, 50, 51, 52, 55, 59, 64, 68, 70], "120": [1, 19, 25, 26, 31, 33, 36, 48, 54, 69, 72], "10": [1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73], "unlabel": [1, 4, 8, 16, 18, 27, 33, 38, 48], "let": [1, 13, 20, 23, 25, 26, 27, 31, 33, 34, 36, 37, 39, 40, 43, 46, 48, 55, 58, 70], "u": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 33, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 50, 52, 53, 55, 59, 63, 64, 68, 69, 70, 73], "subgraph": [1, 4, 9, 14, 16, 18, 19, 25, 27, 30, 31, 33, 34, 36, 38, 43, 48, 51, 58, 59, 63, 65, 69, 70, 72, 74], "assert": [1, 27, 30, 33, 36, 48], "has_edg": [1, 5, 6, 8, 10, 11, 15, 16, 18, 32, 33, 37, 44, 48, 58, 73], "y": [1, 4, 18, 20, 23, 25, 27, 30, 31, 33, 36, 48, 51, 53, 67, 72], "begin": [1, 5, 8, 11, 18, 19, 20, 27, 31, 33, 36, 41, 46, 48, 51, 56, 70], "make": [1, 4, 5, 8, 12, 14, 17, 18, 19, 20, 23, 25, 27, 30, 31, 33, 35, 36, 38, 44, 45, 48, 51, 53, 69, 72], "univers": [1, 33, 36, 38, 69], "add_edg": [1, 3, 4, 5, 6, 8, 10, 11, 12, 16, 18, 20, 21, 23, 24, 33, 35, 36, 40, 45, 46, 48, 50, 51, 53, 54, 55, 68, 70, 72, 73], "loop": [1, 4, 5, 6, 7, 9, 10, 11, 12, 16, 18, 19, 20, 23, 27, 33, 34, 35, 36, 37, 40, 48, 49, 50, 51, 52, 53, 55, 64, 68, 72], "420": [1, 36, 61], "60": [1, 12, 16, 25, 26, 27, 31, 33, 36, 48, 64, 69], "5616": 1, "disjoint": [1, 4, 16, 20, 21, 22, 27, 31, 33, 36, 48, 63, 66, 68, 69], "maxim": [1, 4, 14, 15, 16, 33, 35, 36, 37, 43, 57, 59, 67, 70], "here": [1, 3, 4, 6, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 48, 50, 51, 53, 55, 59, 63, 69, 72], "packing_in_a_hypergraph": 1, "perm": [1, 4, 6, 10, 15, 33, 36, 43], "inplac": [1, 18, 27, 33, 36, 48, 50], "second": [1, 11, 12, 19, 20, 23, 24, 27, 28, 31, 33, 36, 38, 43, 48, 51, 56, 63, 65, 66, 72], "touch": [1, 36, 51], "chr": [1, 33], "97": [1, 27, 33, 48], "25": [1, 10, 19, 20, 21, 23, 26, 27, 28, 31, 33, 36, 48, 52, 64, 68, 69], "o": [1, 2, 3, 7, 16, 17, 18, 19, 20, 23, 25, 26, 27, 30, 31, 33, 34, 36, 37, 38, 40, 48, 55, 62, 63, 64, 66, 68, 69, 70, 74], "q": [1, 4, 16, 18, 19, 23, 25, 26, 27, 30, 33, 34, 36, 38, 41, 48, 52, 66, 69], "w": [1, 2, 3, 4, 12, 17, 19, 20, 25, 27, 30, 31, 32, 33, 34, 36, 38, 41, 43, 45, 46, 48, 52, 55, 63, 68, 69, 70], "15": [1, 4, 9, 11, 16, 18, 19, 25, 26, 27, 28, 30, 31, 33, 34, 36, 42, 46, 48, 52, 53, 61, 66, 69, 71, 72], "20": [1, 3, 4, 12, 15, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 42, 45, 46, 48, 51, 52, 53, 55, 61, 63, 64, 68, 69, 70], "18": [1, 9, 10, 18, 25, 26, 31, 33, 34, 36, 38, 42, 43, 48, 53, 55, 68, 69], "16": [1, 4, 5, 8, 9, 10, 12, 16, 18, 19, 20, 25, 26, 27, 31, 33, 34, 36, 42, 43, 48, 53, 63, 68, 69, 71], "23": [1, 4, 5, 8, 16, 18, 19, 23, 27, 31, 33, 36, 38, 42, 48, 69], "min_siz": [1, 14, 36], "multiset": 1, "cap": [1, 20, 28, 33, 36, 41, 45, 46, 48, 69, 70], "By": [1, 3, 9, 12, 14, 16, 18, 20, 23, 25, 27, 30, 31, 33, 36, 37, 40, 44, 48, 51, 64, 68, 70], "discard": [1, 16, 18, 21, 31, 33, 34, 48], "multipl": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 20, 22, 27, 30, 31, 33, 36, 40, 46, 48, 50, 53, 55, 59, 62, 64, 68, 69, 72, 73], "baer": 1, "subplan": 1, "p4": [1, 33], "break": [1, 31, 33, 36, 38, 39, 48], "is_asteroidal_triple_fre": [2, 36, 58], "free": [2, 9, 11, 23, 27, 31, 33, 36, 37, 48, 58, 59], "three": [2, 16, 18, 27, 30, 31, 33, 36, 37, 43, 46, 48, 58, 67, 69], "avoid": [2, 4, 11, 14, 17, 18, 20, 24, 33, 36, 37, 48, 54, 62, 70, 73], "neighborhood": [2, 4, 20, 30, 31, 33, 36, 37, 41, 43, 46, 48, 70, 73], "third": [2, 12, 23, 27, 31, 33, 36, 48, 53, 67, 73], "AT": [2, 36], "lb1962": 2, "graph_class": [2, 30, 36, 48, 58], "at_fre": [2, 58], "descript": [2, 18, 19, 26, 27, 28, 31, 33, 36, 38, 43, 48, 51, 68], "get": [2, 4, 5, 6, 8, 17, 18, 19, 22, 25, 27, 28, 30, 31, 33, 36, 37, 39, 40, 46, 48, 52, 57, 70, 73], "known": [2, 9, 26, 27, 31, 33, 34, 35, 36, 48, 55, 69, 74], "visit": [2, 4, 11, 13, 17, 18, 33, 43, 51, 64], "straightforward": 2, "recal": [2, 73], "koh2004": 2, "due": [2, 4, 13, 25, 26, 27, 29, 31, 33, 34, 36, 48, 53, 69], "complex": [2, 3, 16, 17, 18, 20, 30, 33, 36, 37, 40, 48, 55, 58, 64, 68, 70], "space": [2, 11, 12, 17, 18, 20, 25, 26, 27, 31, 33, 36, 41, 46, 48, 52, 55], "identifi": [2, 17, 20, 26, 27, 28, 31, 33, 36, 38, 43, 48], "strictli": [2, 3, 19, 28, 30, 33, 36, 41, 46, 48, 63, 70], "compon": [2, 3, 4, 9, 11, 12, 15, 16, 17, 18, 20, 23, 30, 33, 34, 36, 37, 40, 42, 43, 44, 45, 46, 48, 53, 55, 70, 72, 73], "setminu": [2, 16, 21, 33, 36, 40, 41, 46, 55, 70], "bf": [2, 4, 11, 13, 18, 20, 33, 36, 55, 63, 70], "now": [2, 4, 12, 21, 28, 31, 33, 34, 36, 48, 53, 55, 59, 61, 69, 70], "assum": [2, 4, 5, 6, 11, 12, 16, 17, 18, 25, 33, 36, 37, 41, 45, 46, 48, 53, 55, 59, 63, 66, 68, 69], "inde": [2, 4, 8, 15, 17, 18, 20, 25, 31, 33, 36, 37, 39, 41, 42, 44, 45, 46, 48, 58, 59, 63], "so": [2, 3, 4, 6, 8, 11, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 41, 43, 45, 46, 48, 51, 52, 55, 58, 61, 66, 69, 70, 73], "asteroidal_tripl": [2, 36], "join": [2, 18, 23, 27, 33, 36, 48, 51, 52], "document": [2, 3, 4, 5, 8, 11, 12, 15, 18, 19, 20, 25, 27, 30, 33, 36, 39, 41, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 66, 69, 72], "detail": [2, 3, 5, 8, 12, 19, 20, 23, 25, 26, 27, 30, 31, 33, 34, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 64, 66, 69, 70], "method": [2, 3, 4, 7, 9, 11, 12, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 51, 53, 54, 59, 64, 72, 73], "addit": [2, 7, 9, 10, 16, 23, 33, 36, 44, 48, 51, 55, 61], "found": [2, 4, 8, 9, 11, 15, 18, 21, 26, 31, 33, 34, 35, 36, 37, 41, 42, 45, 46, 48, 51, 53, 54, 55, 59, 69], "well": [2, 4, 5, 10, 11, 16, 17, 23, 26, 27, 30, 31, 33, 36, 45, 48, 51, 53, 55, 59, 66], "completegraph": [2, 3, 9, 11, 12, 14, 15, 16, 18, 20, 23, 24, 27, 29, 33, 35, 36, 37, 40, 41, 45, 46, 48, 51, 52, 59, 61, 62, 63, 68, 70], "lg": [2, 36, 59], "line_graph": [2, 23, 27, 33, 36, 48, 58, 59], "llg": [2, 36], "import": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "variabl": [3, 4, 5, 8, 10, 11, 12, 13, 15, 18, 20, 21, 23, 27, 33, 36, 37, 41, 46, 48, 51, 54, 58, 61], "convert": [3, 14, 16, 20, 33, 34, 36, 38, 43, 48, 50, 51, 52, 60, 61, 68], "python": [3, 5, 6, 8, 9, 10, 18, 19, 30, 33, 34, 36, 42, 48, 49, 52, 54, 55, 61, 70], "consequ": [3, 6, 20, 33, 42, 55, 63], "cdef": [3, 4, 5, 8, 11], "abl": [3, 24, 34, 41, 46, 48, 58], "creat": [3, 4, 5, 6, 8, 11, 12, 15, 18, 20, 23, 27, 28, 29, 30, 31, 33, 36, 37, 38, 43, 48, 51, 52, 53, 54, 57, 72], "delet": [3, 4, 6, 12, 16, 18, 19, 30, 31, 33, 36, 48, 61, 72], "featur": [3, 33, 50, 51, 69], "librari": [3, 16, 18, 25, 33, 36, 48, 51, 58, 63], "work": [3, 4, 5, 8, 9, 11, 13, 15, 16, 18, 20, 21, 23, 30, 31, 33, 34, 35, 36, 37, 41, 46, 48, 51, 53, 59, 62, 64, 68, 70], "our": [3, 26, 27, 31, 33, 34, 36, 48, 66, 70], "fuse": 3, "type": [3, 4, 7, 8, 11, 12, 16, 18, 19, 25, 27, 33, 34, 36, 38, 43, 48, 58, 66, 70, 73], "howev": [3, 4, 11, 12, 15, 16, 18, 20, 27, 31, 33, 36, 46, 48, 51, 57, 73], "support": [3, 4, 5, 7, 8, 10, 18, 20, 22, 33, 47, 48, 51, 64], "still": [3, 12, 28, 31, 33, 37, 48, 51, 58, 68], "experiment": 3, "miss": [3, 4, 17, 19, 25, 31, 33, 36, 37, 48, 69], "nest": [3, 36, 43], "apart": [3, 17, 20, 27, 36, 48, 55], "pointer": [3, 20, 61], "becaus": [3, 4, 5, 6, 8, 13, 18, 20, 23, 27, 30, 33, 34, 36, 38, 39, 41, 42, 46, 48, 50, 51, 69], "might": [3, 4, 11, 12, 13, 22, 27, 28, 33, 36, 41, 48, 61], "oper": [3, 5, 8, 11, 15, 17, 18, 20, 27, 31, 33, 36, 38, 39, 45, 48, 73], "clustering_coeff": [3, 33], "cluster": [3, 30, 33, 48, 51], "coeffici": [3, 25, 33, 36, 37, 48], "edge_connect": [3, 16, 22, 33, 36, 38], "dominator_tre": [3, 16, 18, 33], "bandwidth_heurist": [3, 39], "heurist": [3, 21, 33, 36, 39, 72], "approxim": [3, 13, 30, 31, 33, 36, 39, 48, 55], "min_spanning_tre": [3, 20, 33, 36, 53, 68], "weight": [3, 4, 12, 13, 16, 18, 19, 22, 25, 33, 36, 48, 50, 58, 64, 68, 69, 70], "shortest_path": [3, 4, 15, 18, 27, 33, 36, 48, 58], "dijkstra": [3, 4, 13, 18, 33, 36, 51, 64], "bellman": [3, 33], "ford": [3, 33], "singl": [3, 4, 9, 16, 18, 23, 27, 30, 33, 36, 38, 48, 51, 52, 63, 70, 72], "sourc": [3, 16, 18, 20, 23, 31, 33, 43, 44, 48, 50, 54, 63, 64, 69], "johnson_shortest_path": 3, "johnson": [3, 18, 26, 27, 33, 36, 48, 69], "floyd_warshall_shortest_path": 3, "floyd": [3, 18, 20, 33, 36], "warshal": [3, 18, 20, 33, 36], "johnson_closeness_centr": 3, "close": [3, 13, 21, 27, 28, 31, 33, 36, 48, 53, 59, 73], "blocks_and_cut_vertic": [3, 16, 30, 33, 36, 48, 58], "tarjan": [3, 11, 16, 18, 33, 36, 68], "cut": [3, 13, 16, 30, 33, 36, 41, 45, 46, 48, 55], "min_cycle_basi": 3, "basi": [3, 33, 36, 51], "boost_graph": [3, 16, 18, 33, 36], "cuthill_mcke": 3, "bw": [3, 36, 38, 39, 68], "smallest": [3, 11, 16, 17, 18, 19, 27, 31, 33, 36, 37, 39, 45, 46, 48, 53], "zero": [3, 4, 8, 12, 19, 20, 26, 31, 33, 36, 38, 39, 48, 51, 69], "entri": [3, 11, 19, 25, 26, 27, 31, 33, 36, 37, 38, 39, 48, 58, 65, 69], "diagon": [3, 23, 24, 26, 27, 31, 33, 36, 39, 48, 69], "unfortun": [3, 31, 48], "hard": [3, 4, 11, 17, 18, 23, 30, 33, 36, 37, 48], "exponenti": [3, 18, 33, 35, 36, 37], "sagemath": 3, "routin": [3, 11, 18, 27, 33, 48, 51], "find": [3, 4, 12, 16, 18, 20, 21, 22, 25, 27, 31, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 46, 48, 58, 59, 63, 64, 67, 68, 69, 72, 74], "good": [3, 15, 20, 23, 24, 27, 33, 34, 36, 37, 38, 45, 48, 51, 55, 57, 59], "cuthil": 3, "mckee": 3, "king": [3, 24, 48], "md_": 3, "max": [3, 11, 19, 20, 23, 26, 33, 35, 36, 37, 38, 41, 46, 48, 53, 55, 56], "log": [3, 7, 33, 64, 68], "d_": [3, 17, 36], "among": [3, 12, 16, 18, 20, 30, 33, 36, 41, 45, 46, 48, 51, 55, 68, 69, 70], "specif": [3, 4, 12, 18, 33, 36, 39, 46, 51, 58, 62, 64, 69, 73], "necessarili": [3, 11, 15, 18, 30, 33, 36, 40, 42, 48, 63, 74], "pathgraph": [3, 13, 16, 20, 21, 23, 27, 28, 33, 34, 36, 37, 40, 41, 42, 45, 46, 48, 52, 53, 58, 70, 72], "gridgraph": [3, 16, 23, 24, 33, 36, 48, 55, 58], "dimension": [3, 18, 19, 23, 24, 25, 27, 29, 31, 33, 36, 48], "vector": [3, 11, 19, 20, 25, 26, 33, 34, 36, 44, 48, 63], "biconnect": [3, 9, 16, 24, 30, 31, 33, 36, 37, 40, 48, 55, 58], "generic_graph": [3, 9, 18, 19, 20, 27, 33, 36, 39, 42, 48, 51, 64, 68], "krackhardtkitegraph": [3, 16, 18, 31, 33, 36, 48, 52], "analyz": [3, 33], "average_clustering_coeffici": 3, "clust_of_v": 3, "averag": [3, 30, 31, 33, 36, 48, 64], "associ": [3, 4, 11, 13, 15, 16, 17, 18, 20, 27, 28, 30, 31, 33, 36, 37, 38, 42, 44, 45, 48, 51, 53, 58, 59, 63, 67, 69], "Of": [3, 4, 15, 17, 33, 37, 42], "triangl": [3, 4, 9, 11, 15, 16, 18, 23, 27, 30, 31, 33, 36, 42, 43, 48, 59], "icosahedralgraph": [3, 27, 29, 33, 43, 48], "With": [3, 18, 19, 23, 27, 33, 34, 36, 48, 51, 53, 58, 63, 66, 73], "abcdefghiklm": 3, "abd": 3, "diamet": [3, 10, 18, 19, 20, 23, 25, 26, 27, 30, 31, 32, 36, 38, 40, 45, 48], "weight_funct": [3, 4, 18, 33, 36, 64, 68], "check_weight": [3, 18, 33, 36, 64, 68], "infin": [3, 4, 18, 20, 33, 36, 45], "quickli": [3, 20, 33, 37, 39, 51], "lower": [3, 9, 16, 18, 20, 23, 27, 33, 35, 36, 37, 41, 45, 46, 48, 55, 64], "bound": [3, 8, 9, 11, 13, 14, 18, 20, 27, 30, 33, 34, 35, 36, 37, 41, 45, 48, 51, 55, 57, 64, 69], "2dsweep": [3, 18, 20], "scheme": [3, 20, 27, 36, 48, 70], "propos": [3, 16, 20, 22, 27, 30, 33, 36, 40, 45, 46, 48, 55, 68, 70], "broder2000": [3, 20], "difub": [3, 18, 20], "cglm2012": [3, 20], "start": [3, 4, 11, 18, 19, 20, 26, 27, 30, 33, 36, 41, 46, 48, 62, 63, 64, 68, 70], "arbitrari": [3, 7, 8, 11, 12, 18, 20, 25, 33, 36, 48, 62, 70], "chosen": [3, 9, 19, 20, 25, 26, 30, 31, 33, 36, 43, 48, 53, 55, 70], "rais": [3, 4, 6, 9, 10, 12, 18, 20, 22, 26, 27, 33, 36, 37, 40, 48, 51, 57, 61, 66, 68, 70], "error": [3, 4, 8, 12, 18, 19, 20, 22, 27, 31, 33, 36, 48, 51, 55, 56, 57, 68], "initi": [3, 4, 5, 8, 11, 12, 14, 19, 20, 21, 22, 26, 27, 30, 33, 34, 36, 37, 38, 41, 46, 47, 48, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 66, 67, 70, 71, 74], "diameter_dhv": [3, 36], "dragan2018": [3, 20, 36], "butterflygraph": [3, 4, 16, 18, 19, 21, 23, 27, 33, 36, 48, 51], "root": [3, 4, 8, 11, 18, 27, 30, 33, 40, 43, 48, 53, 67], "return_dict": [3, 33], "revers": [3, 4, 11, 15, 17, 18, 27, 33, 34, 36, 39, 48, 63, 66, 70], "node": [3, 4, 8, 11, 13, 16, 18, 19, 20, 23, 27, 29, 30, 31, 33, 36, 38, 40, 43, 44, 45, 48, 49, 51, 53, 54, 56, 58, 64, 67], "go": [3, 15, 18, 20, 25, 27, 30, 33, 34, 41, 42, 46, 48, 53, 69, 72], "through": [3, 7, 12, 15, 16, 17, 18, 19, 20, 28, 30, 31, 33, 35, 36, 37, 43, 48, 50, 51, 54, 56, 57, 58, 64, 69, 73, 74], "immedi": [3, 4, 11, 16, 18, 33, 41, 44, 55], "children": [3, 33, 43, 53, 66, 67], "those": [3, 10, 12, 16, 17, 18, 20, 21, 23, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 48, 53, 57, 59, 63, 66, 69], "dominator_": [3, 33], "graph_theori": [3, 12, 16, 18, 19, 33, 36, 57], "parent": [3, 12, 18, 19, 23, 31, 33, 36, 43, 48, 53, 67], "complic": [3, 15, 33, 51], "even": [3, 9, 11, 13, 16, 18, 20, 24, 25, 27, 28, 30, 33, 36, 37, 40, 48, 59, 63, 69], "reachabl": [3, 4, 11, 18, 33], "grid": [3, 16, 17, 20, 23, 24, 33, 36, 37, 41, 42, 45, 46, 48, 55, 58, 67, 68], "star": [3, 16, 21, 23, 27, 31, 33, 36, 48, 59], "everyon": [3, 33], "to_dictionari": [3, 33, 50], "c_1": [3, 16, 18, 33, 36, 66], "c_2": [3, 16, 18, 33], "circuit": [3, 4, 13, 15, 16, 18, 19, 20, 33, 46, 50, 73], "eccentricity_dhv": [3, 36], "vertex_list": [3, 11, 20, 33], "eccentr": [3, 18, 20, 31, 36, 48], "arrai": [3, 4, 5, 8, 11, 20, 23, 26, 27, 28, 29, 30, 31, 33, 41, 46, 48, 52, 61, 69], "th": [3, 11, 12, 18, 20, 23, 25, 27, 33, 36, 42, 48, 54, 63, 70, 73], "ecc": [3, 20], "observ": [3, 20, 31, 33, 36, 42, 45, 48, 61, 70], "leq": [3, 11, 13, 15, 18, 19, 20, 23, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 45, 46, 48, 55, 56, 60, 69, 70], "improv": [3, 17, 20, 30, 33, 35, 36, 38, 40, 41, 46, 48, 55, 57, 58, 62, 64, 68], "upper": [3, 8, 11, 20, 23, 27, 33, 36, 37, 46, 48, 55], "until": [3, 4, 5, 8, 15, 21, 30, 33, 37, 43, 48, 58, 63, 66], "done": [3, 9, 12, 15, 16, 18, 19, 23, 25, 31, 33, 34, 36, 38, 41, 42, 45, 46, 48, 51, 54, 55, 57, 58, 68, 73, 74], "bullgraph": [3, 15, 23, 36, 48], "ec": 3, "predecessor": [3, 6, 18, 20, 33], "prefer": [3, 18, 33, 36, 58, 64], "much": [3, 4, 7, 10, 11, 13, 15, 16, 20, 23, 27, 31, 33, 36, 37, 45, 46, 48, 52, 55, 57, 64], "faster": [3, 7, 12, 15, 18, 25, 27, 30, 33, 35, 36, 37, 38, 42, 45, 46, 48, 55, 57, 70, 73], "nm": [3, 20, 24, 33, 36, 48, 55, 70], "factor": [3, 18, 27, 31, 33, 36, 42, 48, 55, 72], "ad": [3, 4, 5, 6, 8, 12, 15, 17, 18, 19, 23, 27, 29, 30, 33, 36, 37, 38, 43, 45, 48, 51, 52, 69, 70, 72], "denot": [3, 12, 20, 21, 27, 28, 30, 33, 35, 36, 37, 42, 44, 46, 48, 60, 61, 70], "indic": [3, 4, 8, 11, 16, 18, 19, 23, 24, 26, 27, 30, 33, 36, 37, 42, 43, 45, 48, 50, 53, 56, 66], "doubli": [3, 26, 33, 48, 67], "save": [3, 11, 12, 20, 28, 30, 33, 36, 41, 42, 46, 48, 51, 52, 53, 54, 58], "memori": [3, 4, 7, 10, 11, 18, 20, 27, 36, 37, 41, 46, 48, 73, 74], "mn": [3, 27, 36, 48, 62], "375": [3, 31, 48], "inf": 3, "4444444444444444": 3, "3333333333333333": [3, 13, 33], "kind": [3, 11, 16, 17, 24, 33, 34, 36, 44, 48, 52], "effici": [3, 8, 10, 11, 13, 16, 17, 18, 20, 23, 25, 33, 36, 48, 51, 61, 63, 64, 74], "like": [3, 5, 8, 10, 23, 24, 25, 27, 30, 33, 36, 43, 45, 48, 51, 52, 54, 66, 70, 73], "g_sage": [3, 33], "by_weight": [3, 4, 18, 33, 36, 64, 68], "unweight": [3, 13, 18, 19, 20, 33, 36, 64, 68], "Not": [3, 4, 26, 33, 36, 73], "multigraph": [3, 16, 27, 33, 35, 36, 47, 48, 50, 54], "250": [3, 33, 52], "17": [3, 18, 23, 26, 27, 31, 32, 33, 34, 36, 42, 43, 48, 52, 53, 56, 69], "minimum_cycle_basi": [3, 33], "cycle_basi": [3, 33], "kruskal": [3, 33, 68], "transform": [3, 27, 30, 33, 34, 36, 37, 48, 68], "henc": [3, 4, 9, 11, 15, 16, 17, 18, 20, 27, 30, 32, 33, 34, 36, 37, 41, 44, 46, 48, 58, 59, 62, 70, 73], "float": [3, 11, 12, 16, 18, 19, 21, 30, 33, 36, 37, 41, 46, 48, 51, 53, 54, 68, 70], "prim": [3, 33], "radius_dhv": [3, 20, 36], "radiu": [3, 11, 18, 20, 21, 23, 24, 27, 30, 31, 33, 36, 38, 48, 53], "dijkstra_boost": [3, 18, 33, 36], "while": [3, 4, 7, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 25, 27, 31, 33, 36, 37, 38, 40, 42, 44, 45, 48, 51, 53, 56, 57, 59, 72, 73], "reason": [3, 4, 16, 20, 33, 36, 37, 41, 46, 51, 68, 69], "suggest": [3, 25, 33, 48], "necessari": [3, 15, 16, 18, 20, 27, 33, 36, 37, 41, 46, 48, 58], "alwai": [3, 4, 5, 12, 15, 16, 17, 18, 19, 23, 25, 27, 33, 36, 37, 39, 48, 59, 64], "better": [3, 27, 31, 33, 36, 39, 48, 55, 59], "ford_boost": [3, 33], "shortest_paths_from_vertic": 3, "precis": [3, 11, 15, 16, 17, 18, 21, 27, 31, 33, 36, 41, 46, 48, 53, 64, 73], "wiener_index": [3, 20, 33], "wiener": [3, 20, 31, 33, 48], "frac": [3, 8, 11, 13, 20, 26, 27, 30, 33, 36, 37, 48, 55], "sum_": [3, 12, 13, 17, 18, 20, 21, 27, 33, 36, 37, 41, 46, 48, 61], "krg1996": [3, 20, 33], "41": [3, 12, 23, 33, 48, 52], "valueerror": [3, 4, 8, 9, 10, 12, 16, 18, 19, 20, 27, 31, 33, 36, 37, 40, 45, 48, 51, 57, 58, 66, 69, 70], "intend": [4, 5, 8, 26, 38], "own": [4, 25, 33, 36, 38, 45, 48, 72], "extend": [4, 7, 10, 22, 23, 26, 33, 36, 39, 46, 48, 51, 58, 59, 62, 66], "overridden": [4, 33, 73], "suit": [4, 33, 51], "under": [4, 25, 27, 33, 48, 54, 63], "consider": [4, 30, 33, 48, 59], "cgraph": [4, 5, 8, 10], "maintain": [4, 20, 33, 34, 55, 58, 70], "int": [4, 5, 8, 11, 18, 19, 20, 26, 27, 30, 33, 34, 36, 38, 48, 49, 54], "num_vert": [4, 5, 6, 8, 10, 18, 19, 27, 30, 31, 33, 36, 48, 49, 71], "num_arc": [4, 5, 8], "in_degre": [4, 5, 6, 8, 10, 18, 33, 70], "out_degre": [4, 5, 6, 8, 10, 11, 18, 33, 36], "bitset_t": [4, 5, 8, 11], "active_vertic": [4, 5, 8], "bitset": [4, 7, 9, 17, 36, 39, 45], "ones": [4, 15, 20, 25, 27, 31, 36, 42, 48, 56, 66], "explanatori": 4, "bit": [4, 13, 17, 20, 27, 36, 46, 48, 59, 63], "full": [4, 12, 33, 36, 38, 48, 66, 69], "about": [4, 10, 15, 18, 19, 23, 26, 27, 31, 33, 35, 38, 43, 47, 48, 51, 58, 59, 61], "activ": [4, 5, 8], "realloc": [4, 5, 8], "c_graph": [4, 7, 35], "add_arc": [4, 5, 8], "add": [4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 23, 25, 27, 29, 30, 33, 34, 36, 37, 38, 43, 47, 48, 51, 53, 54, 55, 57, 67, 68, 70], "arc": [4, 5, 6, 8, 9, 11, 16, 18, 19, 25, 33, 36, 41, 46, 48, 50, 58, 59, 63, 64, 70], "On": [4, 12, 28, 33, 36, 41, 44, 46, 48, 54, 69], "produc": [4, 19, 20, 23, 25, 26, 27, 31, 33, 36, 48, 51, 62, 69, 70], "lookuperror": [4, 5, 8], "onc": [4, 11, 18, 27, 28, 31, 33, 36, 41, 42, 43, 46, 48, 51, 55, 63, 64], "add_arc_unsaf": 4, "dense_graph": [4, 5, 7, 18, 36], "densegraph": [4, 5, 7, 35], "has_arc": [4, 5, 8, 10], "sparse_graph": [4, 6, 7, 8, 10, 18, 36], "sparsegraph": [4, 7, 8], "add_vertex": [4, 5, 6, 8, 10, 12, 16, 20, 23, 33, 36, 40, 45, 48, 62], "nonneg": [4, 8, 18, 27, 33, 36, 48, 56], "That": [4, 9, 18, 21, 26, 30, 31, 33, 36, 37, 39, 42, 45, 48, 55, 70], "wa": [4, 19, 27, 28, 31, 33, 36, 45, 48, 55, 70], "current": [4, 6, 8, 12, 14, 16, 17, 18, 19, 20, 22, 30, 31, 33, 36, 37, 41, 43, 44, 46, 48, 50, 51, 53, 55, 58, 66, 69, 70, 74], "alloc": [4, 5, 8, 11, 20], "alreadi": [4, 5, 8, 11, 12, 15, 17, 18, 20, 33, 36, 37, 38, 39, 41, 46, 48, 58, 70], "out": [4, 5, 6, 8, 10, 11, 13, 18, 19, 20, 27, 30, 33, 34, 36, 41, 42, 43, 46, 48, 51, 53, 59, 68, 69], "guarante": [4, 33, 38, 43, 73], "add_vertex_unsaf": 4, "potenti": [4, 12, 33, 41, 46], "unsaf": [4, 5, 8, 38], "add_vertic": [4, 6, 10, 12, 20, 33], "bunch": 4, "extra_vertic": [4, 5, 8], "repeatedli": [4, 48], "vert": [4, 5, 6, 8, 10, 33], "special": [4, 27, 33, 36, 38, 48, 53, 58, 59, 70, 72], "unus": [4, 27, 36, 48], "nvert": [4, 5, 8], "all_arc": [4, 8], "add_arc_label": [4, 8], "arc_label": [4, 8], "retriev": [4, 33, 35, 47, 51, 58], "indistinguish": 4, "check_vertex": 4, "has_vertex": [4, 6, 10, 33], "hand": [4, 15, 33, 36, 41, 46, 51], "signifi": 4, "determin": [4, 8, 12, 15, 17, 18, 20, 23, 25, 27, 28, 30, 33, 36, 37, 41, 46, 48, 51, 53, 55, 64, 65, 67, 69, 70], "expected_degre": [4, 8], "current_alloc": [4, 5, 8], "usual": [4, 8, 11, 12, 15, 18, 20, 23, 27, 31, 33, 36, 37, 45, 48, 69], "enough": [4, 24, 33, 36, 48, 61], "hold": [4, 19, 33, 36, 46, 48, 51, 69], "could": [4, 8, 11, 12, 20, 28, 31, 33, 36, 37, 38, 41, 42, 46, 48, 51, 58, 59, 61, 69], "less": [4, 16, 19, 23, 26, 27, 30, 31, 33, 34, 36, 37, 38, 41, 46, 48, 52, 55, 63, 70, 73], "than": [4, 5, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 23, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 44, 46, 48, 51, 52, 55, 57, 63, 64, 70], "40": [4, 5, 8, 16, 25, 27, 30, 31, 32, 33, 36, 44, 48, 64, 69], "runtimeerror": [4, 5, 8, 18, 33, 36, 37, 44, 48, 61, 69, 73], "request": [4, 5, 8, 33, 68, 69], "past": [4, 5, 8], "twice": [4, 5, 8, 18, 20, 26, 27, 30, 33, 36, 48, 55], "50": [4, 5, 8, 16, 18, 20, 22, 23, 27, 29, 30, 31, 33, 34, 36, 40, 48, 51, 53, 54, 56, 68, 69], "30": [4, 5, 8, 15, 18, 25, 26, 30, 31, 33, 36, 43, 44, 45, 48, 54, 56, 57, 60, 64, 69, 72], "del_vertex": [4, 5, 6, 8, 10], "del_all_arc": [4, 5, 8], "tail": [4, 12, 18, 31, 48, 64], "head": [4, 12, 18, 33, 64, 70], "del_arc_unsaf": 4, "del_arc_label": 4, "fail": [4, 5, 8, 20, 33, 36, 37, 59], "silent": [4, 8, 33, 51], "del_vertex_unsaf": 4, "format": [4, 11, 12, 18, 25, 27, 33, 34, 38, 40, 48, 51, 53, 54, 61, 67, 68, 70], "child": [4, 27, 43, 48, 66, 67], "suitabl": [4, 36], "has_arc_unsaf": 4, "has_arc_label": 4, "upon": [4, 19, 23, 27, 31, 33, 36, 40, 48, 58, 72], "in_neighbor": [4, 5, 8, 10], "neighbor": [4, 6, 7, 9, 10, 11, 13, 15, 18, 20, 21, 23, 25, 27, 28, 30, 31, 32, 33, 36, 37, 41, 42, 43, 46, 48, 63, 67, 68, 69, 70], "notimplementederror": [4, 5, 6, 22, 26, 33, 38], "expens": [4, 17, 48], "out_neighbors_unsaf": 4, "out_neighbor": [4, 5, 8, 10], "total": [4, 5, 6, 8, 18, 19, 20, 21, 25, 27, 30, 33, 34, 36, 39, 41, 46, 48, 69, 73], "without": [4, 5, 6, 8, 12, 16, 18, 20, 22, 23, 25, 27, 33, 34, 36, 40, 48, 51, 57, 59, 64, 69], "cgraphbackend": [4, 5, 8, 10], "genericgraphbackend": [4, 6], "sparsegraphbackend": [4, 6, 7, 8, 10], "densegraphbackend": [4, 5, 7], "fulli": [4, 11, 18], "mainli": [4, 5, 8, 24, 27, 37, 48, 54], "just": [4, 15, 16, 17, 20, 27, 31, 33, 36, 37, 41, 43, 46, 48, 51, 52, 61, 64, 73, 74], "cgb": 4, "_cg": [4, 7], "appropri": [4, 11, 12, 18, 23, 25, 33, 36, 37, 48, 51], "wai": [4, 6, 10, 11, 15, 17, 18, 19, 23, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 48, 51, 57, 58, 63, 66, 68, 69, 70], "via": [4, 16, 19, 25, 28, 33, 35, 36, 37, 48, 51, 63, 68], "handl": [4, 9, 14, 16, 18, 33, 36, 38, 44, 51], "vertex_label": [4, 18, 23, 27, 29, 30, 31, 33, 36, 48, 51, 53, 54, 68], "vertex_int": 4, "opposit": [4, 11, 28, 33, 48, 63, 66], "translat": [4, 10, 20, 33], "tri": [4, 18, 30, 34, 36, 37, 41, 43, 46, 48, 58, 74], "built": [4, 15, 18, 19, 24, 25, 26, 27, 28, 30, 31, 32, 33, 48, 51, 56, 58, 69], "increas": [4, 16, 18, 21, 24, 33, 46, 48, 64], "ignor": [4, 5, 9, 12, 16, 18, 20, 25, 33, 36, 40, 45, 48, 50, 51, 52, 53, 54, 55, 59, 64, 73], "iterator_edg": [4, 5, 6, 8, 10], "remove_loop": [4, 5, 31, 33, 48], "unhash": [4, 12, 18, 33, 36], "least": [4, 6, 10, 11, 12, 16, 18, 19, 24, 26, 27, 30, 31, 33, 36, 37, 40, 41, 43, 45, 46, 48, 62, 67, 68, 70, 74], "present": [4, 6, 11, 15, 17, 27, 33, 36, 42, 48, 51, 58, 64, 69], "iterator_vert": [4, 6, 10], "bidirectional_dijkstra": 4, "distance_flag": 4, "bidirect": [4, 18], "end": [4, 11, 13, 18, 19, 23, 30, 31, 33, 34, 36, 41, 46, 48, 50, 51, 61, 64, 66, 70, 73], "els": [4, 18, 19, 28, 30, 31, 33, 36, 37, 43, 48, 51, 56, 68], "set_edge_label": [4, 5, 6, 8, 10, 16, 33, 36, 53, 68], "shortest_path_length": [4, 18, 32, 33, 36, 48], "bidirectional_dijkstra_speci": 4, "exclude_vertic": 4, "exclude_edg": 4, "include_vertic": 4, "reduced_weight": 4, "extens": [4, 6, 18, 33, 36, 52, 70], "enabl": [4, 15, 18, 30, 33, 36, 48, 73], "exclud": [4, 32, 33, 48], "calcul": [4, 21, 23, 30, 33, 37, 44, 48], "reduc": [4, 12, 16, 24, 26, 30, 33, 36, 45, 48, 55, 68], "_backend": [4, 6, 7, 35], "breadth_first_search": [4, 33], "ignore_direct": [4, 33, 73], "report_dist": [4, 33], "breadth": [4, 13, 17, 18, 20, 33, 36, 63, 70], "relev": [4, 17, 33, 48], "vice": 4, "versa": 4, "leaf": [4, 16, 30, 33, 43, 48], "simultan": [4, 30, 33, 39, 69], "templat": 4, "dot": [4, 15, 18, 27, 33, 34, 36, 37, 48, 51, 53, 72], "leftarrow": 4, "queue": 4, "infti": 4, "dequeu": 4, "adj": 4, "oadj": 4, "enqueu": 4, "append": [4, 18, 23, 27, 29, 30, 33, 36, 48, 52, 53, 70, 71], "vw": [4, 33, 63], "depth_first_search": [4, 33], "depth": [4, 11, 18, 27, 33, 36, 41, 43, 46, 48, 63, 67, 70, 74], "european": [4, 32, 48], "countri": [4, 32, 48], "europemap": [4, 32, 48], "continent": [4, 32, 36, 48], "portug": 4, "spain": 4, "greec": 4, "_cg_rev": 4, "attribut": [4, 6, 7, 18, 33, 36, 37, 45, 63, 65, 67], "cg": [4, 34, 38, 52], "cg_rev": 4, "account": [4, 10, 12, 18, 20, 30, 33, 34, 36, 48, 54, 68], "count": [4, 10, 18, 21, 27, 30, 31, 33, 34, 35, 36, 41, 48, 57, 68, 71], "del_edg": [4, 5, 6, 10], "iterator_out_edg": [4, 5, 6, 8, 10], "del_vertic": [4, 6], "stack": [4, 16, 33], "pop": 4, "push": [4, 23, 34, 48], "german": 4, "citi": [4, 32, 48], "mannheim": 4, "frankfurt": 4, "karlsruh": 4, "wurzburg": 4, "kassel": 4, "munchen": 4, "nurnberg": 4, "augsburg": 4, "erfurt": 4, "stuttgart": 4, "cubegraph": [4, 12, 20, 21, 23, 27, 33, 36, 48, 53, 63], "is_directed_acycl": [4, 10, 16, 18, 19, 33, 58], "possibli": [4, 11, 16, 18, 19, 21, 27, 33, 36, 48, 63], "pick": [4, 18, 25, 27, 30, 33, 48], "think": [4, 11, 12, 18, 36, 41, 46, 50], "put": [4, 12, 33, 36, 38, 52], "neighbour": [4, 11, 41, 43, 46, 48, 63], "procedur": [4, 31, 33, 34, 37, 48, 63], "top": [4, 5, 8, 23, 27, 31, 33, 36, 48, 51, 53], "cours": [4, 15, 17, 33, 36, 37, 42, 48, 51], "outneighbor": [4, 11, 19, 20], "previou": [4, 15, 27, 31, 34, 35, 36, 39, 41, 42, 46, 48, 63, 64, 68, 70], "lead": [4, 17, 18, 19, 25, 27, 31, 33, 41, 46, 48, 56, 63], "track": [4, 17], "There": [4, 11, 16, 17, 18, 19, 27, 30, 31, 33, 36, 39, 48, 51, 52, 59, 66, 69], "why": [4, 27, 36, 37, 48], "again": [4, 12, 20, 21, 27, 33, 36, 39, 42, 48, 63], "remain": [4, 11, 12, 18, 23, 36, 37, 48, 51, 55, 63], "left": [4, 8, 12, 18, 23, 27, 28, 30, 31, 33, 36, 37, 42, 43, 48, 51, 53, 66, 70], "except": [4, 7, 9, 10, 12, 18, 19, 20, 26, 27, 28, 30, 33, 35, 36, 37, 38, 48, 51, 53, 59, 66, 70], "At": [4, 18, 27, 30, 31, 33, 42, 48, 51, 55, 64], "layout": [4, 18, 19, 23, 27, 29, 30, 31, 33, 34, 36, 41, 46, 48, 51, 52, 53, 54], "circular": [4, 18, 23, 27, 31, 33, 36, 48, 52, 53, 65], "show": [4, 12, 14, 15, 18, 19, 23, 27, 28, 29, 30, 31, 33, 34, 36, 38, 47, 48, 51, 52, 53, 54, 59, 68], "chang": [4, 6, 10, 12, 18, 20, 27, 31, 33, 36, 37, 39, 41, 42, 46, 47, 48, 53, 68, 73], "obtain": [4, 11, 12, 13, 15, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 33, 36, 37, 39, 43, 44, 46, 48, 51, 53, 55, 58, 62, 69], "proof": [4, 15, 18, 31, 33, 39, 48, 66], "uv": [4, 10, 15, 18, 19, 20, 33, 36, 41, 42, 46], "though": [4, 7, 11, 15, 18, 20, 27, 31, 33, 36, 41, 46, 48, 51, 59, 66], "def": [4, 18, 27, 33, 36, 48, 68, 71], "random_acycl": [4, 18], "randomgnp": [4, 16, 18, 20, 27, 30, 33, 36, 40, 43, 44, 45, 47, 48, 49, 52, 61, 70, 72], "100": [4, 16, 18, 19, 20, 22, 27, 28, 30, 31, 33, 34, 36, 48, 53, 55, 62, 64, 68, 69, 70], "long": [4, 9, 12, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 33, 35, 36, 37, 41, 46, 48, 51, 53, 55, 57, 58, 61, 64, 69], "is_strongly_connect": [4, 11, 16, 18, 22, 33], "obvious": [4, 12, 16, 18, 31, 33, 36, 37, 48, 53, 57, 59, 69, 70], "But": [4, 5, 8, 9, 15, 16, 18, 23, 28, 31, 33, 36, 48, 59, 69], "transit": [4, 15, 16, 18, 19, 26, 27, 30, 31, 33, 34, 35, 36, 48, 63, 69], "is_subgraph": [4, 30, 33, 48], "ignore_label": 4, "subclass": [4, 33, 58], "multiple_edg": [4, 5, 6, 8, 10, 33], "foo": [4, 33, 36, 68], "sequenc": [4, 6, 10, 12, 18, 27, 28, 30, 31, 33, 36, 38, 41, 46, 48, 58, 63, 66, 72], "try": [4, 12, 17, 18, 27, 30, 33, 34, 36, 37, 38, 39, 42, 48, 55, 61], "iterator_in_edg": [4, 6, 10], "incom": [4, 6, 10, 18], "iterator_in_nbr": [4, 6, 10], "iterator_nbr": [4, 6, 10], "iterator_out_nbr": [4, 6, 10], "to_direct": [4, 16, 18, 20, 33, 36], "outbound": [4, 6, 10], "outgo": [4, 18, 33], "iterator_unsorted_edg": [4, 10], "treat": [4, 5, 8, 33, 36, 38], "result": [4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 33, 34, 36, 37, 38, 40, 42, 46, 48, 51, 55, 58, 59, 61, 66, 67, 69, 70], "permiss": 4, "num_edg": [4, 6, 10, 18, 19, 27, 33, 38, 48, 71], "anyth": [4, 10, 11, 19, 28, 33, 36, 48, 56], "dict": [4, 18, 24, 33, 36, 38, 48, 50, 51, 53, 54, 58, 72], "compat": [4, 10, 33, 34], "shortest_path_all_vertic": 4, "cutoff": [4, 30, 33, 35, 48], "longer": [4, 10, 13, 23, 33, 38, 48], "taken": [4, 11, 12, 16, 18, 25, 26, 30, 33, 36, 48, 51, 59, 67, 68, 69], "disconnect": [4, 16, 17, 20, 30, 33, 34, 35, 36, 43, 45, 48, 62, 68], "shortest_path_speci": 4, "strongly_connected_component_containing_vertex": [4, 11, 16, 18], "butterfli": [4, 19, 23, 27, 48], "subgraph_given_vertic": 4, "mutabl": [4, 12, 18, 33], "directe": 4, "search_iter": 4, "commonli": [4, 36], "fifo": 4, "protocol": 4, "df": [4, 11, 18, 22, 33, 63, 70], "lifo": 4, "seen": [4, 17, 18, 33, 35, 36, 41, 46, 48, 63], "test_out": 4, "test_in": 4, "room": [5, 8], "twenti": [5, 8], "ten": [5, 8], "right": [5, 8, 12, 18, 19, 23, 27, 28, 30, 31, 33, 36, 37, 43, 48, 51, 53, 54, 59, 61, 66, 69], "awai": [5, 8, 23, 48], "natur": [5, 8, 12, 19, 33, 36, 37, 42, 43, 44, 48, 51, 63], "write": [5, 8, 12, 17, 20, 33, 36, 48, 52, 58, 63, 69], "curiou": [5, 8], "develop": [5, 8, 14, 31, 38, 48], "encourag": [5, 8], "pure": [5, 8, 17], "inherit": [5, 8, 38, 48], "binary_matrix_t": 5, "extra": [5, 8, 16, 27, 30, 33, 36, 48, 69], "next": [5, 8, 9, 12, 15, 18, 19, 21, 23, 27, 30, 31, 33, 36, 38, 41, 46, 48, 56, 64, 68, 70], "freeli": [5, 8], "pickl": [5, 6, 8], "replac": [5, 9, 18, 20, 27, 30, 31, 33, 36, 38, 41, 42, 45, 46, 47, 48, 50, 61, 72], "total_vert": 5, "would": [5, 8, 11, 20, 23, 26, 33, 36, 37, 42, 45, 48, 51, 57, 58, 59, 66], "destroi": [5, 8, 33], "interest": [5, 8, 18, 20, 35, 36, 42, 55, 69], "someth": [5, 6, 8, 20, 31, 36, 37, 40, 48, 61, 70], "wrap": [5, 8, 18, 20, 33, 36, 38, 44, 54], "flexibl": [5, 8, 51, 53], "themselv": [5, 8, 33, 36, 53], "deal": [5, 7, 8, 17, 20, 33, 59, 74], "isinst": [5, 8, 33], "29": [5, 8, 33, 36, 48, 51, 72], "dg": [5, 18, 19, 33, 38, 64], "get_edge_label": [5, 6, 8, 10], "consist": [5, 12, 18, 19, 26, 27, 30, 31, 33, 36, 37, 38, 43, 48, 51, 53, 56, 67, 70], "redefin": [6, 25, 48], "graph_backend": 6, "sageobject": [6, 34, 51, 53, 58], "placehold": 6, "doctest": [6, 14, 36, 51, 53, 69], "rather": [6, 26, 33, 48], "silli": [6, 16, 33], "yield": [6, 9, 14, 15, 18, 19, 27, 28, 33, 36, 44, 48, 63, 69, 72, 74], "successor": [6, 18, 19], "unpickle_graph_backend": 6, "kwd": [6, 12, 33, 36, 38, 51, 52, 53, 72], "mechan": [6, 33], "arg": [6, 12, 33, 43, 72], "appar": [6, 33], "kwarg": [6, 43], "keyword": [6, 12, 18, 33, 36, 37, 38, 73], "know": [6, 10, 16, 18, 19, 26, 27, 30, 31, 33, 36, 37, 38, 41, 42, 44, 46, 48, 55, 58, 59, 69], "futur": [6, 29, 32, 37, 48, 73], "swear": 6, "forward": [6, 10, 19, 33, 56], "constructor": [6, 12, 18, 19, 23, 27, 30, 31, 33, 38, 48, 50, 53, 56], "directli": [7, 11, 25, 27, 33, 36, 38, 48, 58, 68, 69], "four": [7, 16, 17, 26, 27, 29, 31, 36, 48, 51, 55, 59, 69], "nativ": [7, 11, 33, 36], "easi": [7, 11, 20, 33, 36, 41, 44, 46, 59, 63], "purpos": [7, 8, 11, 16, 17, 31, 34, 48, 51, 66], "high": [7, 17, 20, 27, 30, 33, 38, 41, 48, 63], "cost": [7, 17, 20, 33, 39, 41, 46, 68], "practic": [7, 8, 20, 36, 45, 55], "static_sparse_graph": [7, 10, 11, 18, 33], "intens": [7, 33], "lighter": 7, "static_dense_graph": [7, 9, 10, 33, 36], "mostli": [7, 18], "deleg": [7, 51], "storag": [7, 17, 18, 46], "simpler": 7, "elementari": [7, 27, 48], "Its": [7, 23, 25, 28, 31, 44, 48, 58, 64, 69], "staticsparsebackend": [7, 10, 33], "staticsparsecgraph": [7, 10], "fool": 8, "sure": [8, 12, 25, 33, 36, 48, 51, 59, 69], "hash_length": 8, "hash_mask": 8, "sparsegraphbtnod": 8, "hash": [8, 12, 18, 33, 36], "tabl": [8, 20, 25, 36, 38, 48, 69], "instanti": [8, 66], "thought": 8, "fix": [8, 10, 12, 13, 18, 19, 25, 27, 31, 33, 34, 36, 45, 48, 51, 55, 62, 63, 70], "address": [8, 11], "sai": [8, 15, 17, 21, 30, 36, 39, 48, 55, 58, 66, 69], "v1": [8, 33, 51], "v2": [8, 33, 51], "thu": [8, 9, 11, 15, 16, 18, 23, 25, 26, 27, 28, 30, 33, 36, 44, 46, 48, 55, 57, 66, 69, 70, 73], "step": [8, 15, 18, 24, 27, 30, 31, 33, 34, 36, 46, 48, 55, 63, 68, 70], "access": [8, 16, 19, 31, 33, 38, 48, 58], "individu": [8, 23, 33, 36, 48, 51, 52], "struct": 8, "sparsegraphllnod": 8, "link": [8, 15, 18, 19, 21, 28, 30, 31, 33, 36, 37, 42, 48, 67, 70], "todo": [8, 43], "help": [8, 18, 19, 27, 33, 46, 48, 69], "overlap": [8, 16, 23, 26, 33, 48, 51], "unless": [8, 11, 12, 18, 19, 20, 23, 28, 30, 33, 35, 36, 46, 48, 50, 53, 70], "larger": [8, 11, 12, 16, 20, 23, 24, 27, 33, 34, 36, 41, 46, 48, 53, 55, 67], "ryan": [8, 12, 71], "dingman": [8, 71], "red": [8, 30, 33, 36, 48, 51, 64, 67], "black": [8, 36, 51, 53, 67], "is_direct": [8, 18, 33, 36], "sg": 8, "gather": [9, 17, 37, 42, 50, 58, 59, 66], "everyth": [9, 23, 31, 33, 36, 37, 42, 48, 54, 59, 74], "No": [9, 10, 12, 33], "being": [9, 17, 18, 27, 28, 30, 31, 33, 34, 35, 36, 37, 43, 48, 57, 58, 59, 60, 61, 69, 70], "technic": [9, 20, 42, 51, 58], "mind": [9, 11, 15, 36, 59], "data_structur": [9, 10, 18, 33, 36], "binary_matrix": 9, "pxd": 9, "almost": [9, 33, 48], "differenti": [9, 36], "dense_graph_init": 9, "fill": [9, 23, 27, 31, 39, 48, 50, 51], "is_triangle_fre": [9, 27, 31, 36, 48], "triangles_count": [9, 11, 33], "connected_subgraph_iter": [9, 33], "connected_full_subgraph": 9, "edges_onli": [9, 33], "min_edg": 9, "max_edg": 9, "v_h": [9, 42], "e_h": 9, "huge": [9, 17, 30, 41, 46, 48, 55, 58], "noth": [9, 12, 13, 15, 17, 33, 36], "connected_compon": [9, 11, 16, 18, 33, 36, 45, 70], "roughli": [9, 17, 20, 36], "explor": [9, 11, 18, 33, 36, 41, 45, 46, 55, 57, 66, 69, 70], "limit": [9, 30, 36, 46, 48], "therefor": [9, 22, 31, 33, 36, 42, 48, 58, 62], "recommend": 9, "hous": [9, 23, 33, 36, 48, 59], "housegraph": [9, 23, 27, 33, 36, 48, 52, 59, 73], "frozenset": [9, 37, 43, 45], "ask": [9, 18, 21, 30, 33, 36, 37, 48, 51, 55, 73], "01": [9, 12, 16, 18, 19, 27, 33, 36, 46, 48, 54, 59, 62, 63, 66, 73], "02": [9, 16, 18, 31, 33, 34, 36, 37, 38, 48, 51, 52, 63, 67], "vertices_onli": [9, 33], "terat": [9, 33], "anoth": [9, 12, 17, 20, 23, 25, 27, 31, 33, 34, 36, 48, 52, 55, 58, 69], "induced_subgraph": [9, 33, 38], "equival": [9, 12, 15, 16, 18, 20, 27, 28, 29, 30, 31, 33, 35, 36, 37, 39, 42, 43, 45, 48, 66, 69], "sub": [9, 33, 58, 70], "mu": [9, 12, 25, 26, 27, 28, 31, 36, 48, 61, 69], "convent": [9, 16, 23, 27, 31, 33, 36, 48], "And": [9, 18, 23, 27, 33, 36, 42, 48, 57, 58, 59, 70], "clebsch": [9, 27, 31, 36, 48], "too": [9, 10, 15, 17, 18, 25, 26, 28, 30, 31, 33, 36, 37, 41, 42, 46, 48, 53, 57, 58, 59, 69], "clebschgraph": [9, 27, 31, 36, 48], "chvatal": [9, 31, 36, 48], "chvatalgraph": [9, 14, 31, 33, 36, 39, 48, 53], "14297": [9, 36], "emptygraph": [9, 20, 23, 33, 36, 48], "multiedg": [9, 11, 12, 16, 18, 33, 36, 50, 53, 64, 68, 72], "perhap": [9, 33, 36], "updat": [9, 11, 17, 31, 33, 36, 38, 41, 46, 48, 53, 58, 63, 66, 69, 70, 73], "meantim": [9, 33, 36], "pleas": [9, 10, 15, 31, 33, 36, 37, 42, 44, 48], "disallow": [9, 33, 36], "allow_loop": [9, 12, 33, 36, 40, 53, 68], "allow_multiple_edg": [9, 12, 16, 33, 36, 40, 54, 68], "k4": [9, 16, 33, 36, 46, 68], "is_cliqu": [9, 19, 30, 33, 48, 70], "binomi": [9, 11, 19, 33, 36], "immut": [10, 12, 18, 33, 36, 38], "compact": [10, 11, 33], "manag": [10, 51, 69, 72], "dealloc": 10, "short_digraph": [10, 11], "id": [10, 23, 26, 48, 54, 58], "static_sparse_backend": [10, 18, 36], "debruijn": [10, 15, 18, 19, 20, 33, 46, 54, 63, 70, 73], "static_spars": [10, 18, 33, 36], "gi": 10, "000": [10, 19, 21, 26, 27, 33, 36, 48, 70], "edges_incid": [10, 33, 37], "111": [10, 19, 26, 27, 33, 48, 70], "110": [10, 19, 27, 33, 48, 69, 70], "112": [10, 25, 26, 27, 31, 48, 69], "113": 10, "28": [10, 16, 20, 25, 26, 27, 31, 33, 36, 37, 48, 61, 68, 69], "22": [10, 25, 26, 27, 31, 33, 34, 36, 38, 42, 48, 53, 63, 68, 69], "oddgraph": [10, 20, 27, 35, 36, 48], "distance_graph": [10, 20, 36], "hi": [10, 20, 36, 69, 72], "15810": 10, "allows_loop": [10, 33], "17225": 10, "delete_vertex": [10, 12, 24, 31, 33, 36, 48], "delete_vertic": [10, 12, 30, 33, 36, 40, 48], "neighbors_in": [10, 18, 33], "neighbors_out": [10, 18, 33], "nor": [11, 16, 18, 31, 33, 36, 48, 58], "easili": [11, 15, 18, 20, 33, 36, 42, 57, 59, 61], "amount": [11, 20, 30, 48, 59], "main": [11, 16, 33, 36, 41, 48, 59], "flow": [11, 18, 33, 36], "stuff": [11, 18, 33, 36, 58], "wast": [11, 17, 36, 41, 45, 46, 59], "life": 11, "style": [11, 35, 36, 51], "simplic": 11, "nathann": [11, 14, 15, 17, 20, 33, 34, 36, 37, 42, 44, 46, 48, 54, 58, 59, 66, 74], "cohen": [11, 14, 15, 17, 20, 33, 34, 36, 37, 42, 44, 46, 48, 54, 58, 59, 66, 74], "2011": [11, 14, 20, 27, 33, 36, 46, 48, 61], "pretti": [11, 15, 35, 36, 37, 53, 69], "five": [11, 27, 31, 34, 38, 48], "uint32_t": 11, "edge_label": [11, 12, 16, 18, 33, 36, 50, 51, 53, 54, 68], "null": [11, 20, 36, 40, 68], "init_short_digraph": 11, "explicitli": [11, 12, 27, 33, 36, 48, 52, 53, 69], "toward": [11, 15, 18, 20, 41, 46], "cell": [11, 24, 31, 33, 48, 51, 53], "outsid": [11, 17, 18, 25, 31, 36, 48], "thing": [11, 30, 36, 42, 48, 51, 57, 58], "list_edg": 11, "advantag": [11, 23, 48, 58], "great": 11, "contigu": [11, 36, 40, 66], "incredibli": 11, "cheaper": [11, 36], "Then": [11, 13, 20, 27, 30, 31, 33, 36, 37, 42, 43, 48, 55, 62, 64, 70], "bitset_list": 11, "doubl": [11, 12, 13, 20, 26, 27, 31, 33, 34, 36, 48], "reconstruct": 11, "trick": 11, "2m": [11, 36], "uselessli": 11, "costli": 11, "AND": [11, 38], "sever": [11, 17, 19, 20, 23, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 46, 48, 51, 55, 56, 58, 62, 69], "n_edg": 11, "init_empty_copi": 11, "dst": 11, "src": [11, 48], "init_revers": 11, "free_short_digraph": 11, "resourc": [11, 27, 48], "can_be_reached_from": 11, "reach": [11, 33, 34, 36, 41, 43, 46, 64, 66, 70], "g_revers": 11, "scc": [11, 16, 18], "tarjan_strongly_connected_components_c": 11, "strongly_connected_components_digraph_c": 11, "nscc": 11, "c1": [11, 16, 33, 36], "c2": [11, 16, 33, 36, 48], "distances_all_pair": [11, 18, 20, 33, 36, 42], "strongly_connected_compon": [11, 16, 18, 19, 36], "These": [11, 15, 17, 18, 19, 20, 25, 26, 27, 31, 33, 36, 37, 41, 46, 48, 51, 53, 66], "spectral_radiu": [11, 33], "prec": [11, 33], "1e": [11, 13, 33, 36], "interv": [11, 23, 28, 30, 33, 36, 39, 48, 58, 66], "enclos": [11, 18, 33, 36], "spectral": [11, 33], "rel": [11, 18, 25, 33, 35, 36, 48, 51], "inequ": [11, 33], "valid": [11, 12, 15, 18, 20, 33, 36, 37, 38, 40, 45, 46, 70], "matric": [11, 12, 19, 20, 26, 27, 33, 36, 48, 69], "squar": [11, 18, 23, 24, 25, 27, 31, 33, 34, 36, 37, 42, 48, 69], "perron": [11, 33], "frobeniu": [11, 33], "eigenvalu": [11, 31, 33, 48, 69], "min_i": [11, 33], "ax": [11, 33, 53], "_i": [11, 33], "x_i": [11, 33, 36, 42, 45], "max_i": [11, 33], "converg": [11, 33], "govern": [11, 33], "largest": [11, 13, 14, 16, 18, 20, 27, 30, 33, 36, 45, 48, 55, 70], "modulu": [11, 33], "smart": [11, 17, 33], "parallel": [11, 15, 16, 18, 23, 27, 31, 33, 36, 43, 48, 68], "arithmet": [11, 31, 33, 48, 69], "phi": [11, 27, 33, 36, 48], "rr": [11, 18, 33], "sqrt": [11, 30, 33, 48], "tol": [11, 13, 33, 36], "618033988749895": [11, 33], "e_min": [11, 33], "e_max": [11, 33], "618033988749894": [11, 33], "618033988749896": [11, 33], "adjacency_matrix": [11, 18, 19, 23, 27, 33, 36, 39, 48, 50], "charpoli": [11, 23, 27, 31, 33, 48], "aa": [11, 19, 33, 34], "48119430408": [11, 33], "4811943041": [11, 33], "200": [11, 26, 30, 33, 48, 53, 54, 69], "00001": [11, 33], "201": [11, 19, 33], "199": [11, 33, 69], "100000": [11, 33, 34], "shuffl": [11, 33], "9997956006500042": [11, 33], "9998043797692782": [11, 33], "414213562373094": [11, 33], "414213562373095": [11, 33], "6180339887253428": [11, 33], "6180339887592732": [11, 33], "5537739740270458": [11, 33], "553773974033029": [11, 33], "completebipartitegraph": [11, 12, 16, 23, 31, 33, 36, 48, 52], "7320508075688772": [11, 33], "7320508075688774": [11, 33], "strongly_connected_components_digraph": [11, 16, 18], "g_scc": 11, "tarjan_strongly_connected_compon": [11, 18], "idea": [11, 17, 18, 31, 34, 37, 38, 44, 48], "subsequ": [11, 18, 30, 43, 48, 51, 58], "dfse": [11, 18], "conduct": [11, 18], "yet": [11, 15, 18, 22, 26, 33, 36, 39, 48, 54, 70], "declin": [11, 18], "revisit": [11, 18], "forest": [11, 16, 18, 30, 33, 36, 37, 43, 48, 53, 68], "subtre": [11, 18, 30, 43, 45, 48, 66], "recov": [11, 18, 28, 30, 33, 36, 48], "dure": [11, 12, 18, 33, 34, 36, 37, 40, 41, 43, 46, 55, 69, 70, 73], "lowlink": [11, 18], "soon": [11, 13, 18, 24, 36, 41, 46, 48, 55], "pass": [11, 12, 18, 19, 26, 27, 33, 36, 37, 46, 48, 53, 69], "descend": [11, 18, 25, 36, 43, 48, 67, 69], "27s_strongly_connected_components_algorithm": [11, 18], "robert": [12, 18, 19, 27, 34, 36, 48, 52, 61], "miller": [12, 18, 19, 27, 34, 36, 48, 52, 61], "hinton": 12, "2010": [12, 27, 36, 48, 51], "03": [12, 16, 18, 21, 27, 33, 34, 36, 37, 48], "04": [12, 15, 16, 21, 33, 36, 46, 47, 48, 51, 54, 71], "overrid": [12, 23, 27, 31, 33, 48, 51], "enjeck": 12, "cleopatra": 12, "2022": [12, 47], "creation": [12, 27, 28, 30, 34, 48], "graph6": [12, 18, 19, 33, 34, 36, 38, 48, 50, 52], "bipartite_graph": 12, "bipartitegraph": [12, 33, 48], "hash_label": [12, 18, 33, 36], "redund": [12, 21, 24, 36, 48], "portion": [12, 18, 33, 51], "file": [12, 23, 33, 35, 36, 37, 48, 51, 52, 54, 58], "alist": 12, "infer": [12, 33], "phy": [12, 27, 48], "cam": 12, "uk": 12, "mackai": 12, "html": [12, 26, 27, 31, 33, 48, 54, 69], "graph6_str": [12, 18, 27, 31, 34, 36, 38, 48, 68], "networkx": [12, 18, 23, 27, 29, 30, 33, 36, 48, 50, 57], "invalid": [12, 33], "offend": 12, "simpli": [12, 17, 18, 33, 36, 64, 73], "won": 12, "lump": 12, "categori": [12, 59, 66], "b2": [12, 16, 33], "b3": 12, "matrixspac": 12, "tempfil": [12, 33], "namedtemporaryfil": [12, 33], "mode": [12, 33, 38, 52, 53], "flush": 12, "bo": [12, 36, 68], "t_": [12, 38], "octahedralgraph": [12, 29, 36, 43, 48, 72], "make_clique_bipartit": 12, "networkx_graph": [12, 33], "attempt": [12, 15, 30, 31, 41, 42, 46, 48, 58, 66, 69], "understand": [12, 15, 27, 31, 48], "accept": [12, 16, 18, 25, 33, 38, 43, 48, 53, 59], "endpoint": [12, 28, 33, 36, 48, 54, 59], "flip": 12, "whichev": 12, "bg": [12, 36, 38, 68], "preserv": [12, 16, 18, 31, 33, 48], "fine": [12, 36], "modifyiong": 12, "isol": [12, 16, 19, 24, 33, 36, 48, 69, 70], "mutual": 12, "exclus": [12, 58], "larg": [12, 17, 18, 20, 24, 25, 26, 27, 30, 33, 36, 41, 46, 48, 55, 58, 69], "numer": [12, 31, 33, 36, 38, 44, 48, 53, 54], "permit": [12, 33, 36, 48], "overwrit": [12, 18], "ensur": [12, 15, 19, 23, 33, 36, 39, 41, 42, 48, 51, 55, 58, 63, 66, 68], "forbidden": [12, 27, 33, 36, 48, 58, 59, 74], "return_graph": [12, 33], "cong": [12, 33], "graph_canon": [12, 33], "unit": [12, 18, 25, 30, 31, 32, 33, 36, 48, 51], "bliss": [12, 27, 33, 48], "tc": [12, 33, 45], "tkk": [12, 33], "fi": [12, 33], "softwar": [12, 31, 33, 48, 51], "cert": [12, 15, 18], "minu": [12, 19, 24, 27, 33, 36, 45, 48, 56, 61], "look": [12, 15, 20, 21, 23, 26, 27, 33, 34, 36, 42, 48, 51, 59], "complement_bipartit": 12, "is_bipartit": [12, 15, 27, 30, 31, 33, 36, 48, 58], "in_ord": [12, 33], "bg2": 12, "plu": [12, 16, 31, 33, 36, 37, 40, 48, 59], "randombipartit": [12, 30, 33, 36, 48], "load_afil": 12, "fname": 12, "load": [12, 51, 58], "value_onli": [12, 16, 17, 18, 21, 33, 36, 37], "use_edge_label": [12, 16, 33, 36], "w_e": [12, 33, 36], "hopcroft": [12, 16, 36], "karp": 12, "edmond": [12, 33, 36], "select": [12, 13, 16, 18, 19, 20, 29, 30, 31, 33, 36, 38, 48, 63, 64, 66, 68, 69, 70, 72], "eppstein": [12, 36, 63], "formul": [12, 15, 17, 18, 25, 33, 36, 37, 48], "matching_": [12, 36], "matching_polynomi": [12, 36, 61], "godsil": [12, 36, 61], "god1993": [12, 36, 61], "geq": [12, 17, 18, 19, 20, 21, 23, 24, 27, 30, 33, 35, 36, 37, 39, 40, 44, 46, 48, 55, 59, 61, 69, 70], "2k": [12, 22, 36, 61, 69], "rook": [12, 24, 48], "42": [12, 25, 27, 31, 33, 48, 69], "44": [12, 32, 48, 69], "polygen": [12, 33], "qq": [12, 18, 33, 36, 48], "bool": [12, 15, 18], "factori": [12, 27, 48], "laguerr": 12, "symbol": [12, 27, 33, 36, 48], "orthogonal_poli": 12, "chebyshev_u": 12, "characterist": [12, 16, 23, 31, 33, 35, 36, 48], "randomtre": [12, 16, 30, 33, 36, 45, 48, 54, 62], "characteristic_polynomi": [12, 23, 31, 33, 36, 48, 61], "perfect_match": [12, 27, 36, 48], "perfect": [12, 27, 30, 31, 33, 36, 38, 48, 58, 70], "choos": [12, 13, 15, 18, 27, 29, 30, 33, 36, 48, 68, 70], "recurs": [12, 16, 18, 20, 27, 33, 36, 43, 45, 48, 57, 61, 66, 69, 72, 74], "illustr": [12, 21, 27, 31, 33, 36, 48, 51, 53, 73], "graphic": [12, 23, 27, 29, 30, 33, 36, 38, 48, 51, 52, 53, 67], "primit": [12, 27, 30, 33, 36, 48, 53, 67], "project_left": 12, "onto": [12, 27, 48], "project_right": 12, "reduced_adjacency_matrix": 12, "base_r": [12, 33, 36], "zz": [12, 23, 33, 36, 48, 72], "n2": [12, 19, 23, 27, 30, 31, 32, 33, 48], "rdf": [12, 33, 36], "real": [12, 16, 18, 28, 30, 33, 36, 37, 38, 48], "multi": [12, 16, 18, 20, 27, 33, 36, 48, 52, 53, 68, 72], "save_afil": 12, "to_undirect": [12, 14, 18, 19, 33, 36, 60, 64], "constraint": [12, 17, 18, 21, 27, 33, 36, 37, 38, 39, 41, 46, 48, 56, 57, 62, 66], "vertex_cov": [12, 33, 36], "konig": 12, "reduction_rul": [12, 36], "express": [12, 21, 27, 33, 36, 38, 48, 58], "mbox": [12, 15, 18, 21, 33, 36, 37], "b_v": [12, 17, 21, 33, 36], "Such": [12, 15, 16, 17, 18, 21, 31, 33, 36, 37, 46, 48, 68, 69], "foral": [12, 15, 17, 18, 20, 21, 33, 36, 37, 41, 46, 66], "b_u": [12, 21, 33, 36], "b_x": [12, 21, 33, 36], "k\u0151nig": 12, "27s_theorem_": 12, "mcqd": [12, 36], "sicmm": [12, 36], "konc": [12, 36], "maxcliqu": [12, 36], "reduct": [12, 33, 34, 36, 46], "rule": [12, 18, 27, 36, 39, 42, 48], "kernel": [12, 19, 36], "appli": [12, 20, 27, 28, 30, 33, 36, 38, 39, 46, 48, 51, 59, 63, 64, 66, 69, 73], "pre": [12, 18, 31, 33, 36, 38, 48, 51], "process": [12, 20, 27, 33, 36, 43, 48, 51, 62, 70, 72], "acflss04": [12, 36], "vc1": 12, "vc2": 12, "meant": [13, 26, 31, 33, 37, 48, 64], "network": [13, 19, 30, 31, 33, 36, 48], "centrality_between": [13, 33, 36], "centrality_closeness_top_k": [13, 33], "centrality_closeness_random_k": 13, "estim": [13, 33], "exact": [13, 14, 18, 20, 31, 33, 36, 37, 46, 48, 51, 55, 70], "normal": [13, 27, 31, 33, 43, 48, 51], "neq": [13, 17, 19, 25, 27, 28, 31, 33, 42, 48, 69, 70], "st": [13, 33], "betweenness_centr": 13, "ration": [13, 30, 33, 36, 37, 48, 70], "renorm": 13, "divid": [13, 18, 20, 30, 31, 33, 36, 48, 55, 64], "binom": [13, 33, 34, 36], "c_": [13, 26, 34, 38, 48, 52], "formula": [13, 33, 44], "remark": [13, 20, 31, 33, 35, 42, 48], "brandes01": 13, "v_k": [13, 33], "dist": [13, 20, 33, 36, 53, 55], "sv_i": 13, "sv": 13, "randomli": [13, 19, 30, 33, 48], "knowledg": [13, 31, 48], "edi2014": 13, "bfse": 13, "centrality_clos": [13, 33, 36], "convers": [13, 33, 34, 37], "bcm15": 13, "bigger": [13, 19, 25, 36, 48], "ratio": [13, 30, 36, 48, 55], "1000": [13, 27, 30, 33, 34, 37, 48, 53, 61], "closv": 13, "smaller": [13, 18, 27, 33, 36, 41, 42, 44, 46, 48, 64], "final": [13, 18, 26, 27, 30, 31, 33, 34, 48, 51, 53], "711111111111": 13, "36": [13, 20, 25, 26, 27, 28, 31, 33, 36, 48, 61, 69, 72], "422222222222": 13, "19753086419753085": 13, "19444444444444442": 13, "19047619047619047": 13, "18518518518518517": 13, "branch": [14, 18, 33, 36, 53], "patric": 14, "ostergard": 14, "sampo": 14, "niskanen": 14, "2009": [14, 19, 27, 31, 32, 33, 36, 37, 47, 48, 51, 71], "08": [14, 32, 36, 48], "jeroen": 14, "demey": 14, "05": [14, 33, 36, 38, 48, 51, 54], "06": [14, 33, 34, 36, 41, 48, 60, 72], "interrupt": 14, "11252": 14, "nico": [14, 48], "van": [14, 26, 48], "cleemput": [14, 48], "2013": [14, 36, 48, 54, 59, 72], "27": [14, 21, 25, 26, 27, 31, 33, 48, 69], "14525": 14, "no2003": [14, 36], "all_cliqu": [14, 36], "max_siz": [14, 36], "unbound": [14, 30, 36, 48, 58], "delete_edg": [14, 16, 33, 36], "re": [14, 18, 25, 27, 36, 48], "entrant": [14, 36], "all_max_cliqu": 14, "cliques_maximum": [14, 36], "indirect": [14, 36, 53, 69], "figsiz": [14, 27, 31, 33, 36, 48, 53], "dj": [14, 36], "clique_numb": [14, 30, 36, 38, 48], "max_cliqu": 14, "comparability_graph": 15, "permutation_graph": 15, "moment": [15, 33, 42, 58], "st1994": 15, "sha1997": 15, "is_comparability_milp": 15, "greedy_is_compar": 15, "greedi": [15, 21, 33, 36, 46], "greedy_is_comparability_with_certif": 15, "is_compar": [15, 36], "is_permut": [15, 36], "is_transit": [15, 18, 19], "2012": [15, 19, 24, 36, 42, 46, 48, 49, 55], "poset": [15, 17, 18, 33, 34], "co": [15, 33, 34, 36, 43, 53], "incompar": 15, "pi": [15, 18, 23, 25, 31, 33, 48, 53, 64], "pi_1": 15, "pi_2": 15, "pi_n": 15, "sim": [15, 25, 31, 36, 39, 48, 69], "pi_j": 15, "pi_i": 15, "segment": [15, 28, 36, 48], "notion": [15, 21, 27, 28, 33, 36, 48, 55, 70], "vv": [15, 59], "leav": [15, 16, 18, 25, 30, 31, 33, 36, 40, 43, 44, 48, 51, 66, 70], "enter": [15, 18, 36, 38, 64], "vu": [15, 18, 19, 46], "impli": [15, 16, 17, 18, 30, 31, 33, 36, 42, 48, 52, 66], "g_": [15, 38], "contrari": 15, "theorem": [15, 27, 30, 31, 33, 36, 37, 39, 48, 61, 69], "statement": 15, "b_1": [15, 28, 48], "b_k": 15, "b_i": [15, 20, 26, 27, 28, 30, 36, 48], "b_": [15, 18, 27, 33, 36, 48], "contradictori": 15, "cdot": [15, 18, 20, 27, 33, 36, 39, 40, 41, 42, 43, 46, 48], "o_": [15, 25, 48], "slower": [15, 18, 31, 33, 36, 37, 48, 55, 70], "ye": [15, 33, 36], "odd": [15, 25, 26, 27, 33, 36, 37, 48, 59], "around": [15, 20, 23, 31, 33, 34, 48, 51, 53], "outward": [15, 23, 33, 48], "imposs": [15, 33, 36, 37, 66], "permutationgraph": [15, 28, 36, 48], "what": [15, 16, 17, 18, 20, 27, 31, 33, 36, 37, 38, 42, 44, 48, 51, 54, 58, 59, 63], "tell": [15, 42], "reaaaaaaaaaaaalllli": 15, "bad": [15, 33, 37], "no_certif": 15, "equivalence_class": 15, "consult": [15, 51], "an_equivalence_class": 15, "odd_cycl": 15, "bull": [15, 23, 36, 48, 58], "sequenti": [15, 18, 33, 36, 37], "forc": [15, 18, 33, 34, 36, 41, 54], "unabl": [15, 36, 48], "quick": [15, 27, 34, 36, 48], "rest": [15, 23, 27, 36, 48], "subcal": [15, 36], "cheap": [15, 36, 41, 46], "invest": [15, 36], "model": [15, 19, 23, 30, 34, 36, 48, 66], "visual": [15, 23, 27, 28, 31, 33, 48, 54, 68], "realiz": [15, 31, 36, 48, 67, 69], "p1": [15, 33, 36, 42], "nn": [15, 36, 69], "p2": [15, 33, 36, 42], "invers": [15, 28, 30, 33, 34, 36, 48], "represent": [15, 18, 19, 27, 28, 30, 31, 33, 34, 36, 37, 48, 51, 53], "braid": [15, 28, 36, 48], "randomdirectedgnp": [15, 16, 18, 19, 33, 46], "transitive_closur": [15, 18, 33, 34], "alias": [16, 33], "connected_components_numb": [16, 33], "connected_components_subgraph": [16, 33, 36, 55], "connected_component_containing_vertex": [16, 32, 33, 48], "connected_components_s": [16, 33], "blocks_and_cuts_tre": [16, 30, 33, 36, 48, 58], "is_cut_edg": [16, 33], "bridg": [16, 33, 36], "is_cut_vertex": [16, 33], "vertex_connect": [16, 27, 31, 33, 36, 38, 48], "strongly_connected_components_subgraph": [16, 18], "strong_articulation_point": [16, 18], "strong": [16, 18, 33, 36, 43, 62], "articul": [16, 18, 27, 48], "cleav": [16, 36], "is_triconnect": [16, 36], "triconnect": [16, 36], "spqr_tree": [16, 36], "spqr": [16, 36], "spqr_tree_to_graph": [16, 36], "triconnectivityspqr": [16, 36], "decompos": [16, 33, 36, 45], "hopcroft1973": [16, 36], "later": [16, 33, 36, 46], "gutweng": [16, 36], "mutzel": [16, 36], "gut2001": [16, 36], "organ": [16, 23, 27, 33, 48], "stand": [16, 33, 36], "seri": [16, 25, 36, 43, 48, 69], "polygon": [16, 26, 27, 48], "dipol": [16, 27, 36, 48], "bond": [16, 31, 48], "rigid": [16, 36], "is_biconnect": [16, 33, 36, 58], "tric": 16, "get_spqr_tre": 16, "print_triconnected_compon": 16, "newvedge0": 16, "newvedge1": 16, "newvedge2": 16, "newvedge3": 16, "newvedge4": 16, "newvedge5": 16, "newvedge9": 16, "newvedge10": 16, "newvedge7": 16, "newvedge8": 16, "newvedge11": 16, "26": [16, 23, 25, 27, 31, 33, 36, 48, 69], "37": [16, 25, 33, 48, 68, 69], "45": [16, 25, 26, 27, 31, 33, 36, 48, 52, 61, 64, 69], "56": [16, 19, 25, 27, 31, 36, 48, 69, 72], "67": [16, 31, 36, 48], "edge_iter": [16, 18, 27, 31, 33, 36, 37, 46, 48, 68], "add_cliqu": [16, 18, 33, 36], "add_path": [16, 33, 36, 45], "c4": [16, 36, 48], "get_triconnected_compon": 16, "tarjan_boost": [16, 33], "tarjan_sag": [16, 33], "insid": [16, 27, 31, 33, 36, 48, 51, 58, 59, 66], "tarjan72": [16, 33], "emul": [16, 33], "merge_vertic": [16, 33, 36], "25994": [16, 33], "harpri": [16, 33], "gallai": [16, 33, 58], "is_tre": [16, 19, 27, 30, 33, 36, 40, 48, 58, 68, 71], "99": [16, 33, 36, 53, 69], "cut_vertic": [16, 36], "virtual_edg": [16, 36], "001": [16, 19, 27, 33, 36, 37, 41, 46, 48, 70], "virtual": [16, 36, 45], "side": [16, 23, 29, 30, 33, 36, 45, 48, 54, 66], "cocycl": [16, 36], "per": [16, 18, 19, 20, 27, 30, 33, 36, 38, 48, 51, 52, 70, 71], "s1": [16, 36, 48], "f1": [16, 27, 36, 48], "f2": [16, 27, 36, 48], "graphs_list": [16, 19, 33, 36, 48, 52], "show_graph": [16, 19, 33, 36, 48, 52], "connectivity_": [16, 33], "best": [16, 17, 18, 30, 33, 35, 36, 41, 46, 48, 51, 55, 70], "unreli": [16, 33], "18753": [16, 33], "applic": [16, 33, 37, 73], "pappusgraph": [16, 21, 31, 33, 36, 48], "seta": [16, 33], "setb": [16, 33], "stargraph": [16, 21, 23, 27, 33, 36, 40, 48, 52], "min": [16, 19, 20, 26, 28, 33, 36, 38, 44, 48, 56, 68], "dedic": [16, 33], "reliabl": [16, 33], "sens": [16, 30, 33, 36, 48], "lollipopgraph": [16, 27, 33, 48, 52], "pend": [16, 33], "broken": [16, 36], "piec": [16, 24, 36, 38, 48], "2d": [16, 17, 23, 26, 27, 31, 33, 36, 42, 45, 48, 63], "grid2dgraph": [16, 17, 18, 20, 21, 23, 33, 36, 37, 40, 41, 42, 45, 46, 48, 55, 58, 68], "randombarabasialbert": [16, 20, 22, 30, 33, 36, 48, 55, 68], "hopcroft_tarjan": [16, 36], "arrang": [16, 27, 31, 33, 36, 48], "split": [16, 19, 31, 33, 34, 36, 43, 44, 48, 58, 59], "llcg": [16, 36], "gbomw": [16, 36], "t2": [16, 25, 33, 36, 43, 45, 48, 69], "counter": [16, 27, 30, 36, 48], "item": [16, 32, 33, 36, 48, 72], "75": [16, 19, 25, 31, 33, 36, 48, 61, 72], "paper": [16, 27, 31, 33, 37, 48, 69, 72], "ils2012": [16, 18], "share": [16, 18, 27, 31, 33, 36, 37, 43, 48, 51, 59, 64, 69], "symmetr": [16, 18, 23, 26, 27, 29, 31, 33, 36, 48, 62, 69], "keep_label": [16, 18, 33, 68], "u_1": [16, 18, 42], "u_2": [16, 18, 42], "c_i": [16, 18, 20, 26, 33, 36, 46, 70], "c_j": [16, 18], "u_i": [16, 18, 42], "u_j": [16, 18], "target": [16, 18, 33, 54, 64], "duplic": [16, 18, 27, 46, 48], "scc_digraph": [16, 18], "v_scc": [16, 18], "transitivetourna": [16, 18, 19, 33], "kept": [16, 18, 33, 64], "connected_graph": [16, 33], "situat": [16, 18, 33, 36, 42, 59, 66], "val": [16, 33], "cut_vertex": [16, 33], "convexityproperti": [17, 36], "hull": [17, 18, 33, 36], "hull_numb": 17, "geodetic_closur": [17, 36], "geodet": [17, 36], "closur": [17, 30, 33, 36, 48], "convexity_properti": [17, 36], "locat": [17, 27, 36, 38, 48, 51], "backslash": [17, 39, 41, 44, 46, 69], "cach": [17, 33, 36, 51, 58, 61, 72], "recomput": [17, 36], "anymor": [17, 28, 33, 48], "rememb": [17, 20, 35, 41, 46, 48, 58], "encod": [17, 18, 20, 24, 27, 33, 34, 36, 46, 48, 66, 68, 69], "whatev": [17, 52], "gain": 17, "lexicograph": [17, 33, 36, 44, 70], "exploit": [17, 55], "far": [17, 20, 23, 30, 33, 34, 36, 46, 48, 51, 55], "z": [17, 18, 25, 27, 31, 33, 34, 36, 38, 41, 46, 48], "recommand": 17, "lost": [17, 33, 36], "cp": [17, 36], "hn": 17, "displai": [17, 19, 23, 27, 29, 33, 36, 37, 38, 41, 44, 46, 47, 48, 51, 52, 53, 54, 55, 59, 74], "hlt1993": [17, 36], "seem": [17, 18, 30, 36, 48], "nice": [17, 20, 23, 31, 33, 36, 38, 45, 48, 51, 53, 58], "comment": [17, 48, 69], "fall": 17, "clear": [17, 23, 33, 34, 36, 48, 51], "s_g": 17, "subsetneq": 17, "infeas": [17, 48, 69], "solut": [17, 21, 27, 33, 36, 37, 41, 46, 48, 55], "greedili": [17, 46], "enrich": 17, "stronger": 17, "generating_set": 17, "lie": [17, 25, 30, 36, 48], "emptyset": [17, 28, 31, 33, 36, 41, 46, 48, 70], "term": [17, 20, 25, 36, 48, 58], "terminologi": [17, 36, 63], "domain": [17, 23, 36, 48], "ly": [17, 36], "diamondgraph": [17, 18, 20, 23, 36, 48, 52], "subdivide_edg": [17, 33, 36, 40], "layout_acyclic_dummi": 18, "dummi": 18, "upward": [18, 33], "layout_acycl": [18, 33], "reverse_edg": 18, "out_degree_sequ": 18, "outdegre": [18, 36], "out_degree_iter": 18, "degree_iter": [18, 33], "in_degree_sequ": 18, "indegre": [18, 33], "in_degree_iter": 18, "neighbor_out_iter": [18, 33], "neighbor_in_iter": [18, 33], "outgoing_edg": [18, 33], "depart": 18, "outgoing_edge_iter": 18, "incoming_edg": [18, 33], "arriv": 18, "incoming_edge_iter": 18, "sink": [18, 19, 33], "dig6_str": [18, 36, 50], "dig6": [18, 33, 34, 50], "ascii": [18, 36], "center": [18, 21, 23, 27, 31, 33, 36, 43, 48, 51, 53, 54], "peripheri": [18, 36], "all_paths_iter": [18, 64], "all_simple_path": [18, 64], "all_cycles_iter": 18, "all_simple_cycl": 18, "theori": [18, 26, 27, 33, 36, 48], "path_semigroup": 18, "semigroup": 18, "immediate_domin": 18, "is_aperiod": 18, "aperiod": 18, "is_tourna": [18, 19], "tournament": [18, 19, 33], "period": 18, "level_set": 18, "topological_sort_gener": 18, "topolog": [18, 20, 33, 36], "topological_sort": [18, 19], "feedback_edge_set": 18, "feedback": [18, 33], "miscellan": [18, 33, 36, 48], "flow_polytop": 18, "polytop": [18, 27, 31, 33, 36, 48], "degree_polynomi": 18, "out_branch": 18, "in_branch": 18, "po": [18, 19, 23, 31, 33, 34, 36, 38, 48, 53, 54, 68], "convert_empty_dict_labels_to_non": [18, 36, 50], "directed_graph": 18, "digraph_gener": [18, 19], "tab": [18, 19, 36, 48], "tune": [18, 36], "flag": [18, 33, 36, 64, 69], "edgeless": [18, 36], "list_of_vertic": [18, 36], "list_of_edg": [18, 36, 67, 68, 70], "bypass": [18, 36, 53, 64], "auto": [18, 36, 48], "detect": [18, 36, 58], "vertices_and_edg": [18, 36], "dict_of_list": [18, 36], "dict_of_dict": [18, 36], "a1": [18, 19, 33, 36], "a2": [18, 33, 36], "a_matrix": 18, "weighted_adjacency_matrix": [18, 33, 36], "a_nonsquare_matrix": 18, "is_squar": [18, 36], "foc": 18, "oc": 18, "another_digraph": 18, "pygraphviz": [18, 36], "igraph": [18, 27, 33, 36, 48], "spring": [18, 19, 23, 27, 29, 30, 31, 33, 34, 48, 52, 53, 54], "91679746": 18, "88169588": 18, "47294849": 18, "125": [18, 25, 26, 33, 48], "12867615": 18, "12743933": 18, "50118505": 18, "consum": [18, 20, 31, 33, 36, 48, 73], "nx": [18, 29, 36, 48], "alia": [18, 33, 36], "shortcut": [18, 30, 33, 36, 48, 56], "nonsquar": 18, "recogn": [18, 33, 36, 51, 53, 63, 70], "iraadciioweokcpwao": 18, "iraadciioeokcpwao": 18, "corrupt": [18, 36], "iraadci": 18, "oweokcpwao": 18, "charact": [18, 33, 36, 51], "abcdefghijklmnopqrstuvwxyz": [18, 36], "multidigraph": [18, 50], "igraph_graph": [18, 33, 36], "python_igraph": [18, 33, 36], "vertex_attr": [18, 33, 36], "edge_attr": [18, 33, 36], "starting_vertic": [18, 64], "max_length": [18, 64], "occur": [18, 33, 43], "alexandr": [18, 36, 64], "blondin": [18, 64], "mass": [18, 64], "restrict": [18, 24, 33, 36, 38, 41, 46, 48, 57, 66, 72], "parametr": [18, 64], "ending_vertic": [18, 64], "use_multiedg": [18, 33, 64], "report_edg": [18, 33, 64], "exit": [18, 64, 72], "arbitrarili": [18, 27, 33, 48, 51, 64], "to_simpl": [18, 33, 36, 64], "combin": [18, 27, 33, 36, 48, 55, 64], "distinguish": [18, 27, 36, 48], "achiev": [18, 27, 33, 34, 35, 36, 41, 44, 46, 48, 58], "operatornam": [18, 36], "cartesian": [18, 24, 27, 33, 36, 48], "pentagonposet": 18, "hasse_diagram": [18, 34], "booleanlattic": [18, 34], "infinit": [18, 19, 20, 33, 36, 45, 48], "success": [18, 19, 27, 33, 36, 37, 38, 48, 51, 56], "dijkstra_networkx": [18, 33, 36], "standard": [18, 19, 20, 27, 33, 36, 48, 51, 54, 56], "johnson_boost": [18, 33, 36], "generalizeddebruijn": [18, 19], "262143": [18, 36], "similar": [18, 23, 33, 36, 41, 48, 51, 68], "cw": [18, 38, 41], "dist_dict": [18, 36], "with_label": [18, 36], "shortest_path_all_pair": [18, 20, 33, 36], "from_dictionari": [18, 36], "constraint_gener": [18, 33], "feedback_arc_set": 18, "d_u": [18, 33], "d_v": [18, 33], "had": [18, 33], "intact": [18, 33], "dcycl": [18, 33], "conserv": 18, "clearli": [18, 23, 33, 37, 48], "equinumer": 18, "choic": [18, 19, 27, 30, 33, 36, 39, 48, 51], "desir": [18, 27, 29, 30, 33, 48, 58], "coordin": [18, 23, 25, 28, 30, 32, 33, 36, 42, 48, 51, 67, 69], "face": [18, 29, 30, 31, 33, 35, 36, 48], "volum": [18, 20, 48], "chan": 18, "robbin": 18, "yuen": 18, "pitman": 18, "stanlei": 18, "ps2002": 18, "notic": [18, 23, 28, 33, 36, 41, 46, 48], "polyhedron": [18, 29, 31, 33, 36, 48], "commut": [18, 31, 42, 48, 69], "fl": 18, "28837": 18, "spanning_tre": [18, 33, 36, 68], "spanning_trees_count": [18, 33, 36, 68, 72], "clean": [18, 36, 38, 51, 55], "merg": [18, 27, 31, 33, 36, 45, 48, 51], "turn": [18, 20, 27, 30, 33, 36, 38, 43, 48, 55, 59, 63, 68], "2000": [18, 33], "zip": [18, 27, 31, 33, 36, 40, 48, 53, 58], "aperiodic_graph": 18, "dag": [18, 19], "randomtourna": [18, 19], "tournament_": [18, 19], "rankdir": [18, 33], "up": [18, 19, 20, 22, 25, 27, 28, 33, 34, 36, 38, 48, 51, 53, 56, 61, 66, 70, 71], "height": [18, 27, 33, 34, 47, 48, 53], "graphviz": [18, 33, 36, 51, 53], "dot2tex": [18, 33, 36, 51], "layout_graphviz": [18, 33, 51], "placement": [18, 51], "layout_rank": [18, 33], "down": [18, 27, 30, 33, 36, 48, 51, 53, 70], "don": [18, 27, 33, 35, 48, 52], "hass": 18, "diagram": 18, "hassediagram": 18, "besid": [18, 33, 37, 41, 46, 55], "constant": [18, 20, 27, 36, 41, 45, 46, 48, 55, 71, 73], "quit": [18, 30, 31, 33, 36, 48], "quiver": 18, "e_1": [18, 33, 36, 59], "e_2": [18, 36, 59], "e_3": [18, 36, 59], "gcd": 18, "barbellgraph": [18, 27, 36, 48, 52], "decid": [18, 27, 45, 48, 59], "doubt": [18, 33], "overwritten": [18, 33, 51], "behaviour": [18, 33, 36, 45, 48], "subject": [18, 33, 39, 41, 51, 62], "decis": 18, "allows_multiple_edg": [18, 33], "user": [18, 20, 27, 33, 36, 38, 48, 50, 51, 58, 72], "cat": 18, "mous": 18, "lose": 18, "come": [18, 27, 30, 33, 36, 44, 48, 69], "mike": [18, 72], "hansen": [18, 36, 72], "pruess": 18, "gara": 18, "ruskei": 18, "frank": [18, 31, 48], "siam": 18, "vol": [18, 36], "1994": 18, "373": [18, 26, 48], "386": [18, 26, 33], "never": [18, 19, 20, 25, 33, 36, 41, 46, 48, 74], "happen": [18, 20, 33, 36, 51, 52, 59], "circul": [19, 27, 33, 48, 69], "interestingli": [19, 48], "de": [19, 20, 33, 46, 58], "bruijn": [19, 20, 33, 46], "imaseitoh": 19, "imas": 19, "itoh": 19, "kautz": 19, "nauty_directg": [19, 36, 62], "nauti": [19, 27, 48, 56], "directg": 19, "palei": [19, 27, 33, 36, 48, 69], "randomdirectedacyclicgraph": [19, 46], "randomdirectedgnc": 19, "grow": [19, 30, 33, 48], "gnc": 19, "randomdirectedgnm": [19, 33], "randomdirectedgn": 19, "gn": 19, "randomdirectedgnr": [19, 33], "redirect": 19, "gnr": 19, "randomsemicomplet": 19, "semi": [19, 33, 36], "tournaments_nauti": 19, "2006": [19, 36, 48], "emili": [19, 36, 38, 48, 52, 67], "kirkman": [19, 36, 38, 48, 52, 67], "michael": [19, 27, 36, 44, 48], "yurko": [19, 27, 48], "coudert": [19, 20, 24, 27, 36, 41, 46, 48, 49, 55, 59, 74], "digraphgener": 19, "orderli": [19, 48], "docstr": [19, 36, 38, 48], "educ": [19, 48], "hope": [19, 29, 34, 39, 41, 46, 48], "augment": [19, 33, 48], "mck1998": 19, "exhaust": [19, 27, 34, 36, 46, 48, 51, 55, 66], "fly": [19, 25, 36, 48, 74], "oei": [19, 27, 33, 48], "a000273": 19, "218": 19, "ident": [19, 23, 27, 31, 33, 36, 43, 48, 51, 69], "dimens": [19, 23, 24, 25, 26, 27, 29, 33, 36, 48, 51, 53, 63, 69], "00": [19, 26, 27, 33, 34, 48, 51, 63, 66, 73], "get_po": [19, 27, 30, 31, 33, 36, 48, 53, 68], "etc": [19, 25, 33, 34, 36, 47, 55, 62], "word": [19, 21, 25, 27, 30, 33, 36, 46, 48, 59, 69], "letter": [19, 27, 36, 48], "w_1w_2": 19, "w_2": [19, 69], "w_1": [19, 27, 48, 69], "leftmost": 19, "de_bruijn_graph": 19, "alphabet": 19, "db": [19, 20, 33, 38, 58], "ba": [19, 30, 48, 52], "bb": [19, 27, 48], "rpk1980": 19, "rpk1983": 19, "equiv": [19, 24, 48], "mod": [19, 27, 48], "is_circul": [19, 27, 33, 48], "gb": [19, 28, 35, 36, 48], "010": [19, 27, 33, 48, 70], "011": [19, 21, 27, 33, 36, 48, 70], "101": [19, 21, 27, 33, 36, 48, 70], "ii1983": 19, "kau1968": 19, "greater": [19, 26, 27, 33, 41, 43, 46, 48], "ii": [19, 27, 48], "202": [19, 33], "210": [19, 36, 61, 69], "212": 19, "121": [19, 33], "102": [19, 25, 31, 48], "012": 19, "021": 19, "020": 19, "consecut": [19, 30, 31, 33, 36, 41, 42, 46, 48, 66, 70], "rightmost": 19, "kautz_graph": 19, "1b": 19, "b1": [19, 31, 48], "1a": 19, "prime": [19, 25, 26, 27, 36, 42, 43, 48, 69], "congruent": [19, 27, 48], "paley_graph": 19, "paleygraph": [19, 27, 33, 48], "complementari": [19, 27, 33, 48], "weight_max": 19, "previous": [19, 27, 33, 48, 53, 54, 63], "randomdag": 19, "500000000000000": 19, "randomweighteddag": 19, "0x7f1038784ee0": 19, "seed": [19, 30, 33, 34, 36, 48, 49, 55], "preferenti": [19, 30, 48], "attach": [19, 21, 27, 30, 33, 48, 69], "proport": 19, "kr2001b": 19, "kr2005": 19, "insert": [19, 20, 30, 33, 36, 40, 43, 48, 49, 54, 56], "er1959": [19, 30, 48, 49], "gil1959": [19, 30, 48, 49], "uniformli": [19, 30, 36, 48, 51, 56, 68], "coin": 19, "sc": [19, 36, 40], "stronglyregular": 19, "skew": [19, 26, 27, 48, 69], "hadamard": [19, 27, 48, 69], "were": [19, 31, 33, 36, 42, 48, 57, 63], "duv1988": 19, "hadamard_matrix": [19, 27, 36, 48], "skew_hadamard_matrix": 19, "aj": 19, "ja": 19, "kj": 19, "ones_matrix": 19, "debug": [19, 27, 48, 56], "suppress": [19, 27, 48], "str": [19, 27, 33, 36, 43, 46, 48, 53, 61, 67], "command": [19, 27, 33, 36, 38, 48, 51, 53, 54, 58], "setwis": 19, "nontrivi": [19, 30, 31, 36, 48], "exchang": [19, 69], "fraction": [19, 30, 33, 36, 37, 48], "gen": [19, 27, 33, 36, 48], "nauty_geng": [19, 48], "_bit_vector": 19, "001001000": 19, "324": [19, 31, 48, 69], "strong_orient": [19, 36, 62, 73], "strong_orientations_iter": [19, 36, 62], "random_orient": [19, 33, 36, 62], "min_out_degre": 19, "max_out_degre": 19, "strongly_connect": 19, "constrain": [19, 36], "genbg": [19, 48], "captur": [19, 27, 48, 56], "anu": [19, 56], "edu": [19, 36, 37, 38, 56, 63], "au": [19, 56], "bdm": [19, 56], "456": 19, "35": [19, 25, 26, 33, 36, 38, 48, 69, 72], "353": 19, "6008": 19, "few": [20, 27, 31, 35, 36, 37, 39, 48], "temporari": 20, "typic": [20, 23, 36, 38, 48, 53], "sadli": 20, "1500": 20, "200mb": 20, "4mb": 20, "all_pairs_shortest_path_bf": 20, "floyd_warshal": 20, "queri": [20, 36, 38, 51, 58], "jump": 20, "furthest": [20, 31, 48], "gg": [20, 34, 36, 37, 38, 42], "unsign": 20, "sizeof": 20, "quadrat": [20, 25, 48, 63, 69], "65536": [20, 33], "32": [20, 25, 26, 31, 33, 34, 36, 41, 44, 46, 48, 69, 72], "2byte": 20, "33": [20, 33, 36, 68], "byte": 20, "gigabyt": 20, "64": [20, 25, 26, 27, 31, 33, 39, 41, 46, 48, 56, 69], "16gb": 20, "32gb": 20, "65535": 20, "int32_max": 20, "low": [20, 27, 30, 33, 38, 46, 48], "he": 20, "feed": [20, 36, 50, 54, 59], "inlin": [20, 51], "bodi": 20, "2sweep": [20, 36], "sweep": [20, 36], "ifub": [20, 36], "antipodal_graph": [20, 36], "antipod": [20, 26, 36], "diamter": 20, "drawback": 20, "practiv": 20, "c_eccentricity_dhv": 20, "mlh2008": 20, "dhv": [20, 36], "cghlm2013": 20, "serv": [20, 51], "fring": 20, "cgilm2010": 20, "2i": [20, 27, 48], "refin": [20, 33, 43, 70], "4sweep": 20, "decreasingli": 20, "stop": [20, 33, 35, 36, 41, 46, 55], "worst": [20, 36, 37, 55], "comparison": [20, 33, 36, 46, 55, 58, 73], "d1": [20, 30, 33, 36, 48, 55], "d2": [20, 33, 36, 43, 48, 55], "random_vertex": [20, 31, 33, 36, 48, 70], "d4": [20, 33, 36, 55], "wrong": [20, 31, 33, 36, 40, 48, 58, 69, 70], "lb2": 20, "lbm": 20, "distances_and_predecessors_all_pair": 20, "distances_distribut": [20, 33], "distribut": [20, 30, 33, 36, 48, 51, 53, 55, 68], "wine": [20, 33], "ith": [20, 33], "tk2013": 20, "warshall_algorithm": 20, "inneighbor": 20, "worth": 20, "34": [20, 27, 33, 36, 48, 52, 53, 69], "cubic": [20, 27, 29, 30, 31, 36, 48], "half": [20, 25, 31, 33, 36, 48, 55], "diamond": [20, 23, 27, 48, 51, 58, 59], "is_distance_regular": [20, 25, 26, 27, 31, 36, 48], "d_g": [20, 36, 39, 42], "b_0": [20, 27, 36, 48], "n_g": [20, 36], "regular_graph": [20, 36], "szeged_index": [20, 33], "szege": [20, 33], "n_u": [20, 33, 63], "n_v": [20, 33], "gyll1993": [20, 33], "cite": 20, "dominating_set": [21, 33], "minimal_dominating_set": [21, 36], "is_domin": [21, 33, 36], "is_redund": [21, 36], "private_neighbor": [21, 36], "privat": [21, 36], "greedy_dominating_set": [21, 33], "middl": [21, 27, 30, 48, 51], "independent_set": [21, 27, 33, 36, 48, 57, 58], "stabl": [21, 33, 36, 69], "modif": [21, 33, 36, 57], "introduc": [21, 27, 33, 36, 48, 55, 70], "17905": [21, 33], "return_set": [21, 33], "closest": [21, 31, 33, 48], "dominat": [21, 33], "degree_min": [21, 33], "degree_max": [21, 33], "decreas": [21, 24, 33, 48, 55, 70], "dom": [21, 33, 36, 55], "focu": [21, 33, 36, 57], "influenc": [21, 33, 48, 51], "suppos": [21, 33, 36, 39, 43, 51], "assumpt": [21, 36, 69], "to_domin": [21, 36], "work_on_copi": [21, 36], "bdhpr2019": [21, 36], "jean": [21, 36, 47], "florent": [21, 36, 47], "raymond": [21, 36, 47], "2019": [21, 36], "ll": [21, 31, 36, 48], "steal": [21, 36], "extract": [22, 31, 48, 58], "gabow1995": 22, "bhkp2008": 22, "gabowedgeconnect": 22, "gabow": 22, "act": [22, 33, 34, 35, 36, 63, 69], "randomregular": [22, 30, 36, 48], "use_rec": 22, "gklp2021": 22, "ec1": 22, "dfs_preprocess": 22, "ec2": 22, "ec3": 22, "edge_disjoint_spanning_tre": [22, 33, 68], "graph_gener": [23, 24, 25, 27, 28, 29, 30, 31, 32, 36, 48, 69], "shape": [23, 27, 33, 48, 51, 53], "horn": [23, 48], "bull_graph": [23, 48], "drawn": [23, 27, 29, 30, 31, 33, 47, 48, 51], "bottom": [23, 27, 31, 33, 36, 48, 51, 53, 54], "girth": [23, 27, 30, 31, 33, 36, 38, 48], "chromatic_numb": [23, 27, 30, 31, 36, 37, 48], "det": [23, 33, 48], "xi": [23, 33, 48], "chrompoli": [23, 48], "chromatic_polynomi": [23, 36, 37, 48, 72], "identity_matrix": [23, 48], "nrow": [23, 48, 52], "c_3": [23, 27, 33, 36, 48], "bowti": [23, 27, 48], "friendship": [23, 27, 36, 48], "f_2": [23, 27, 48], "butterfly_graph": [23, 48], "graphgener": [23, 27, 48, 69], "friendshipgraph": [23, 27, 36, 48], "is_planar": [23, 27, 30, 31, 33, 36, 48, 58, 65], "eulerian": [23, 27, 31, 33, 38, 48], "is_eulerian": [23, 27, 31, 33, 48], "circularladdergraph": [23, 27, 33, 48], "ladder": [23, 27, 48], "bent": [23, 48], "meet": [23, 25, 27, 31, 48, 51, 63], "inner": [23, 27, 30, 31, 33, 48, 51, 55], "outer": [23, 27, 30, 31, 36, 48, 67], "circl": [23, 27, 31, 33, 48, 51, 53, 54], "move": [23, 24, 27, 48, 51], "clockwis": [23, 30, 33, 48], "counterclockwis": [23, 27, 31, 48], "rotat": [23, 29, 30, 33, 48, 51], "angl": [23, 27, 33, 48, 51], "visibl": [23, 24, 48], "vertex_s": [23, 27, 29, 30, 31, 33, 36, 48, 51, 52, 53, 54], "graphics_arrai": [23, 27, 29, 30, 33, 48], "clawgraph": [23, 33, 36, 48, 57, 58, 59, 70], "claw": [23, 27, 30, 33, 36, 48, 57, 58, 59, 69], "n1": [23, 27, 30, 31, 33, 48], "inspect": [23, 31, 33, 36, 48], "set_posit": [23, 30, 48], "v_2": [23, 33, 36, 41, 46, 48, 72], "shorter": [23, 33, 48], "fewer": [23, 37, 38, 48], "stretch": [23, 27, 48], "flatten": [23, 36, 48, 66], "tend": [23, 48], "spring_m": [23, 48], "deciph": [23, 48], "advanc": [23, 27, 33, 38, 48], "feel": [23, 35, 48, 59], "race": [23, 48], "shown": [23, 31, 48, 51, 53], "complete_bipartite_graph": [23, 36, 48], "389": [23, 33, 34, 48], "157": [23, 48], "spring_big": [23, 48], "posdict_big": [23, 48], "posdict_m": [23, 48], "spr": [23, 27, 48], "12155": [23, 48], "manner": [23, 27, 48], "big": [23, 26, 48, 51], "offer": [23, 48, 69], "caus": [23, 27, 36, 38, 48], "pointi": [23, 48], "ball": [23, 27, 31, 48], "complete_graph": [23, 48], "vari": [23, 36, 48], "cputim": [23, 48], "spring389": [23, 48], "59203700000000126": [23, 48], "posdict389": [23, 48], "6680419999999998": [23, 48], "spring23": [23, 27, 48], "posdict23": [23, 27, 48], "completemultipartitegraph": [23, 27, 36, 48], "multipartit": [23, 27, 36, 48, 69], "gon": [23, 30, 48], "slope": [23, 48, 51], "walk": [23, 33, 36, 48, 68], "pictur": [23, 31, 38, 48, 54], "wikimedia": [23, 48], "wiki": [23, 48, 54], "turan_13": [23, 48], "svg": [23, 48, 54], "tripartit": [23, 36, 48], "opportun": [23, 48], "predefin": [23, 27, 33, 48], "cycle_graph": [23, 27, 48], "dartgraph": [23, 48, 52], "dart": [23, 35, 48], "sharp": [23, 48], "fourth": [23, 26, 27, 31, 48], "empty1": [23, 48], "empty2": [23, 48], "forkgraph": [23, 48, 52], "fork": [23, 48], "chair": [23, 48], "gemgraph": [23, 48, 52], "gem": [23, 48], "fan": [23, 33, 36, 48], "resembl": [23, 48], "corner": [23, 27, 33, 48], "horizont": [23, 27, 28, 34, 37, 48, 51], "dim_list": [23, 24, 48], "roof": [23, 48], "fifth": [23, 31, 48], "housexgraph": [23, 36, 48, 52], "laddergraph": [23, 33, 48, 52], "draw": [23, 27, 28, 30, 31, 33, 36, 48, 51, 52, 53, 54], "55": [23, 27, 36, 48, 61, 69], "star_graph": [23, 48], "toroidal6regulargrid2dgraph": [23, 48], "toroid": [23, 31, 48], "toroidalgrid2dgraph": [23, 48], "is_vertex_transit": [23, 25, 27, 31, 33, 48], "300": [23, 25, 30, 47, 48], "is_hamiltonian": [23, 24, 27, 31, 33, 36, 48], "tgrid": [23, 48], "bishopgraph": [24, 48], "kinggraph": [24, 48], "knightgraph": [24, 48], "queengraph": [24, 48], "rookgraph": [24, 48], "bishop": [24, 48], "prescrib": [24, 48], "legal": [24, 27, 48], "n_1": [24, 48], "n_2": [24, 48], "n_d": [24, 48], "n_i": [24, 33, 48, 70], "knight": [24, 48], "chessboardgraphgener": [24, 48], "rook_radiu": [24, 48], "bishop_radiu": [24, 48], "knight_x": [24, 48], "knight_i": [24, 48], "interconnect": [24, 33, 48], "movement": [24, 48], "queen": [24, 48], "chess": [24, 48], "cartesian_product": [24, 33, 36, 42, 48, 63], "hamiltonian": [24, 27, 31, 33, 34, 36, 48], "higher": [24, 30, 33, 37, 48], "bmod": [24, 48], "k_n": [24, 27, 36, 48, 61], "k_m": [24, 48], "polar": [25, 26, 28, 31, 36, 48, 51, 69], "affin": [25, 27, 28, 31, 48, 69], "hermitean": [25, 31, 48], "nonisotrop": [25, 48], "classical_geometri": [25, 48], "affineorthogonalpolargraph": [25, 28, 48], "sign": [25, 36, 48, 51], "vo": [25, 28, 31, 48, 69], "f_q": [25, 48, 69], "ellipt": [25, 48], "parabol": [25, 48], "andri": [25, 27, 28, 31, 48, 69], "brouwer": [25, 27, 28, 31, 48, 69], "websit": [25, 28, 31, 48, 54, 58], "epsilon": [25, 48], "orthogon": [25, 27, 28, 31, 48, 69], "haemer": [25, 31, 48, 69], "brouwerhaemersgraph": [25, 31, 48], "ahrensszekeresgeneralizedquadranglegraph": [25, 48, 69], "collinear": [25, 48], "AS": [25, 48, 69], "sigma": [25, 27, 28, 31, 33, 36, 48, 69, 70], "mid": [25, 41, 48], "gq": [25, 26, 34, 48, 52, 69], "175": [25, 48, 69], "cossidentepenttilagraph": [25, 48, 69], "cossident": [25, 48], "penttila": [25, 48], "o_6": [25, 48], "cp2005": [25, 48], "approach": [25, 48], "came": [25, 48], "invari": [25, 36, 48], "omega_3": [25, 48], "xy": [25, 48], "orbit": [25, 27, 31, 33, 35, 48, 69], "isotrop": [25, 48, 69], "pg": [25, 28, 33, 48, 69], "conic": [25, 48], "suffic": [25, 48], "eb": [25, 48], "discrimin": [25, 33, 48], "tb": [25, 48], "vanish": [25, 48], "adjust": [25, 30, 36, 48, 50, 51], "multipli": [25, 27, 33, 48, 51], "nu": [25, 31, 48, 69], "norm": [25, 48], "latter": [25, 27, 31, 33, 48, 69], "gewirtz": [25, 31, 48], "grape": [25, 31, 48], "378": [25, 27, 36, 48, 61, 69], "52": [25, 30, 31, 33, 48, 56, 69], "haemersgraph": [25, 48, 69], "hyperov": [25, 48], "hyperoval_match": [25, 48], "check_hyperov": [25, 48], "t_2": [25, 48], "sect": [25, 48, 69], "bl1984": [25, 27, 48, 69], "t2stargeneralizedquadranglegraph": [25, 48, 69], "geometr": [25, 33, 48, 67], "theoret": [25, 33, 36, 48, 59], "i_k": [25, 48], "i_j": [25, 28, 48], "i_": [25, 48], "i_1": [25, 48], "_1": [25, 46, 48, 69], "i_2": [25, 48], "_2": [25, 48, 69], "96": [25, 31, 33, 48, 69], "suppli": [25, 27, 48], "nonisotropicorthogonalpolargraph": [25, 48, 69], "perp": [25, 48, 69], "NO": [25, 48, 51, 69], "vectorspac": [25, 33, 48], "endow": [25, 48], "nondegener": [25, 48], "pm": [25, 48], "cf": [25, 33, 36, 38, 44, 48, 69], "nongener": [25, 48], "hyperplan": [25, 27, 48, 69], "degener": [25, 48], "notat": [25, 27, 28, 48, 66], "63": [25, 31, 34, 41, 48, 69], "wilbrink": [25, 48], "325": [25, 48], "65": [25, 31, 32, 33, 36, 48, 64, 69, 72], "136": [25, 34, 48], "51": [25, 27, 33, 48, 69], "2080": [25, 48], "1071": [25, 48], "558": [25, 48], "544": [25, 48], "nonisotropicunitarypolargraph": [25, 48, 69], "tangent": [25, 36, 48], "c14": [25, 48, 69], "hub1975": [25, 31, 48, 69], "176": [25, 48, 69], "135": [25, 31, 48, 69], "108": [25, 48], "nowhere0wordstwoweightcodegraph": [25, 48, 69], "nowher": [25, 33, 48, 69], "langl": [25, 48], "o_1": [25, 48], "rangl": [25, 48], "o_j": [25, 48], "bro2016": [25, 48], "hhl2009": [25, 48], "1st": [25, 42, 48, 69], "is_nowhere0_twoweight": [25, 48, 69], "196": [25, 27, 48, 69], "1800": [25, 31, 48], "728": [25, 48, 68], "268": [25, 26, 48], "312": [25, 48], "orthogonaldualpolargraph": [25, 48], "39": [25, 26, 27, 31, 48, 52, 69], "1120": [25, 48], "bcn1989": [25, 26, 31, 36, 48], "274": [25, 48], "279": [25, 26, 48], "vdkt2016": [25, 26, 36, 48], "orthogonalpolargraph": [25, 48, 69], "130": [25, 48], "48": [25, 26, 27, 31, 32, 33, 48, 69], "70": [25, 26, 31, 33, 36, 48, 69, 72], "119": [25, 33, 48], "54": [25, 31, 32, 33, 46, 48, 69], "symplecticdualpolargraph": [25, 48], "symplect": [25, 48], "dsp": [25, 48], "coh1981": [25, 48], "symplecticpolargraph": [25, 48], "sp": [25, 48], "carri": [25, 48], "singular": [25, 48], "subspac": [25, 26, 48], "spectrum": [25, 28, 31, 33, 38, 48], "1365": [25, 48], "340": [25, 48], "83": [25, 33, 48], "85": [25, 33, 48, 69], "0th": [25, 48], "taylortwographdescendantsrg": [25, 48], "clique_partit": [25, 48], "taylor": [25, 48, 69], "u_3": [25, 42, 48], "admit": [25, 33, 36, 37, 48], "taylortwographsrg": [25, 48, 69], "seidel": [25, 27, 36, 48, 50, 69], "switch": [25, 27, 36, 37, 38, 48, 51, 63, 69], "v_0": [25, 48, 63], "7e": [25, 48, 69], "pairwis": [25, 31, 33, 36, 48], "srg": [25, 27, 31, 48, 69], "twograph": [25, 27, 36, 48], "taylor_twograph": [25, 48], "unitarydualpolargraph": [25, 48, 69], "unitari": [25, 31, 48, 69], "du": [25, 48, 69], "297": [25, 48, 69], "891": [25, 48], "unitarypolargraph": [25, 48, 69], "especi": [25, 27, 34, 36, 42, 48, 51], "165": [25, 33, 48], "693": [25, 48], "survei": [26, 36], "cocliques_hoffmannsingleton": [26, 48], "distance_regular_graph": [26, 48], "ivo": 26, "maffei": 26, "2020": 26, "07": [26, 36, 38, 48], "distance_regular": [26, 48], "alternatingformsgraph": [26, 48], "grap": [26, 48], "lfloor": [26, 27, 30, 36, 48, 68], "rfloor": [26, 27, 30, 36, 48, 68], "lceil": [26, 27, 36, 37, 45, 48], "rceil": [26, 27, 36, 37, 45, 48], "155": [26, 48], "282": [26, 48], "284": [26, 48], "discuss": [26, 48], "bilinearformsgraph": [26, 48], "bilinear": [26, 48], "49": [26, 27, 33, 36, 48, 69], "19683": [26, 48], "105": [26, 27, 31, 36, 48, 61, 69, 72], "84": [26, 27, 31, 36, 48, 69, 72], "280": [26, 31, 48, 69], "conwaysmith_for_3s7": [26, 48], "conwai": [26, 48], "smith": [26, 31, 48], "sym": [26, 48], "399": [26, 48], "doublegrassmanngraph": [26, 48], "grassmann": [26, 48], "j_q": [26, 48], "descirb": [26, 48], "272": [26, 27, 48], "273": [26, 27, 48], "doubleoddgraph": [26, 48], "2n": [26, 27, 33, 37, 48, 68, 69], "259": [26, 27, 48], "261": [26, 48], "doublytruncatedwittgraph": [26, 48], "truncat": [26, 31, 48], "codeword": [26, 48, 69], "368": [26, 48], "fostergraph3s6": [26, 48], "foster": [26, 31, 48], "397": [26, 48], "generaliseddodecagongraph": [26, 48], "generalis": [26, 33, 48], "dodecagon": [26, 48], "internet": [26, 31, 48, 54, 58, 69], "23436": [26, 48], "indirectli": [26, 48, 68], "atlasrep": [26, 48], "205": [26, 48], "generalisedhexagongraph": [26, 48], "hexagon": [26, 31, 48], "gh": [26, 48], "generalisedoctagongraph": [26, 48], "octagon": [26, 48], "grassmanngraph": [26, 48], "input_": [26, 48], "mathbb": [26, 36, 48], "genfrac": [26, 48], "0pt": [26, 48], "_q": [26, 48], "halfcub": [26, 48], "halv": [26, 48], "264": [26, 27, 48, 69], "265": [26, 48], "halved_cube_graph": [26, 48], "equivalent_construct": [26, 48], "hermitianformsgraph": [26, 48], "hermitian": [26, 48], "bacuas": [26, 48], "285": [26, 48], "ivanovivanovfaradjevgraph": [26, 48], "ivanovivanovfaradjev": [26, 48], "m_": [26, 27, 31, 36, 48], "369": [26, 48], "j2graph": [26, 48], "j_2": [26, 31, 48, 69], "408": [26, 48], "largewittgraph": [26, 48], "366": [26, 48], "mathworld": [26, 27, 31, 33, 48], "wolfram": [26, 27, 31, 33, 48], "com": [26, 27, 33, 35, 47, 48, 54], "leonardgraph": [26, 48], "371": [26, 48], "truncatedwittgraph": [26, 48], "367": [26, 48], "ustimenkograph": [26, 48], "ustimenko": [26, 48], "qbinom": [26, 48], "cocliqu": [26, 48, 69], "hoffmann": [26, 48], "singleton": [26, 31, 33, 36, 44, 48], "392": [26, 48], "distance_3_doubly_truncated_golay_code_graph": [26, 48], "golai": [26, 48], "coset": [26, 48, 69], "constitut": [26, 37, 48], "moreov": [26, 48], "364": [26, 27, 48], "arr": [26, 48], "unknown": [26, 33, 34, 48, 58, 69], "graph_3o73": [26, 48], "117": [26, 48, 69], "80": [26, 31, 33, 48, 69], "400": [26, 27, 33, 36, 48], "graph_from_gq_spread": 26, "385": 26, "graph_with_classical_paramet": 26, "alpha_in": 26, "beta_in": 26, "gamma": [26, 30, 31, 33, 37, 43, 48], "enum": [26, 43], "classicalparametersgraph": 26, "sporad": [26, 31, 48], "preced": [26, 33, 38, 53], "is_classical_parameters_graph": 26, "ham": [26, 27, 31, 36, 48, 63, 69], "511": 26, "1022": 26, "chapter": [26, 33], "alpha": [26, 33, 36, 60, 70], "beta": 26, "calssicalparametersgraph": 26, "itersect": 26, "_sporadic_graph_databas": 26, "hamminggraph": [26, 27, 36, 48], "is_from_gq_spread": 26, "is_near_polygon": 26, "param": [26, 33, 38], "nearpolygongraph": 26, "near_polygon_graph": 26, "1716": 26, "198": [26, 33, 48], "206": [26, 69], "is_pseudo_partition_graph": 26, "c_d": 26, "pseudo": [26, 27, 48, 69], "pseudo_partition_graph": 26, "fold": [26, 27, 36, 48], "462": [26, 69], "197": 26, "38": [26, 31, 48, 69], "locally_gq42_distance_transitive_graph": [26, 48], "ampli": [26, 48], "local": [26, 30, 31, 48, 58, 69], "dima": [26, 48, 60], "pasechnik": [26, 27, 48, 60, 69], "924": 26, "shortened_000_111_extended_binary_golay_code_graph": [26, 48], "subcod": [26, 48], "365": [26, 48], "shortened_00_11_binary_golay_code_graph": [26, 48], "newli": [26, 30, 48], "vanlintschrijvergraph": [26, 48], "lint": [26, 48], "schrijver": [26, 48], "aztecdiamondgraph": [27, 48], "aztec": [27, 48], "aztec_diamond": [27, 48], "144": [27, 31, 48, 68, 69], "balancedtre": [27, 33, 48, 58], "perfectli": [27, 48], "networkxerror": [27, 48], "randint": [27, 30, 33, 36, 48, 55, 68, 70], "barbel": [27, 48], "bar": [27, 33, 48, 66], "bell": [27, 48], "k_n1": [27, 48], "p_n2": [27, 48], "s_k": [27, 48, 66], "subgraph_search": [27, 30, 31, 33, 48], "s_p": [27, 48], "bubblesortgraph": [27, 35, 48], "bubbl": [27, 48], "swap": [27, 30, 48], "transposit": [27, 48], "symmetricgroup": [27, 33, 36, 48], "permutahedron": [27, 48], "61": [27, 48], "k_1": [27, 48, 69], "09": [27, 36, 38, 48, 67], "caifurerimmermangraph": [27, 48], "twist": [27, 48], "cai": [27, 48], "furer": [27, 48], "immerman": [27, 48], "cfi1992": [27, 48], "substitut": [27, 36, 48], "gadget": [27, 48], "individualis": [27, 48], "mention": [27, 48], "extrem": [27, 35, 41, 48], "doabl": [27, 46, 48], "caifurerimmerman": [27, 48], "wl": [27, 48], "cfi": [27, 48], "circulantgraph": [27, 33, 36, 48], "cubeconnectedcycl": [27, 48], "hypercub": [27, 36, 48, 63], "oplu": [27, 48], "bitwis": [27, 48], "xor": [27, 41, 48], "gonal": [27, 30, 48], "pascal": [27, 44, 48], "0100110": [27, 48], "1011010": [27, 48], "dipolegraph": [27, 48], "dorogovtsevgoltsevmendesgraph": [27, 48], "dorogovtsev": [27, 48], "goltsev": [27, 48], "mend": [27, 48], "6561": [27, 48], "pseudofract": [27, 48], "scale": [27, 34, 48, 51, 55], "web": [27, 31, 33, 48], "rev": [27, 48], "066122": [27, 48], "2002": [27, 48], "doublegeneralizedpetersengraph": [27, 48], "4n": [27, 48], "zf2012": [27, 48], "variant": [27, 33, 48, 68], "rim": [27, 48], "cocentr": [27, 48], "tird": [27, 48], "3n": [27, 48], "g2": [27, 28, 31, 33, 36, 37, 42, 43, 48, 52], "egawagraph": [27, 48], "egawa": [27, 48], "peculiar": [27, 48], "devis": [27, 48], "yoshimi": [27, 48], "ega1981": [27, 48], "shrikhand": [27, 31, 48], "recogniz": [27, 33, 48, 53], "weisfeil": [27, 48], "lehamn": [27, 48], "correctli": [27, 33, 48, 53, 63], "fibonaccitre": [27, 48], "fibonacci": [27, 48], "l1": [27, 31, 48], "l2": [27, 31, 48], "fibonacci_sequ": [27, 48], "harald": [27, 48], "schilli": [27, 48], "yann": [27, 48], "laigl": [27, 48], "chapui": [27, 48], "foldedcubegraph": [27, 48], "togeth": [27, 28, 31, 33, 43, 48, 51], "oppos": [27, 42, 48], "folded_cube_graph": [27, 48], "fc": [27, 48], "f_n": [27, 48], "dutch": [27, 48], "windmil": [27, 36, 48], "friendship_graph": [27, 48], "furergadget": [27, 48], "prefix": [27, 36, 46, 48, 64], "compos": [27, 48], "layer": [27, 31, 48], "a_0": [27, 36, 40, 48], "a_": [27, 36, 38, 40, 48], "a_i": [27, 28, 30, 31, 48], "fuzzyballgraph": [27, 48], "fuzzi": [27, 48], "m_1": [27, 36, 37, 43, 48, 55], "m_2": [27, 36, 43, 48, 55], "m_k": [27, 36, 37, 48], "m_i": [27, 36, 37, 48], "cospectr": [27, 48], "laplacian": [27, 33, 48], "g_list": [27, 48], "laplacian_matrix": [27, 33, 48], "math": [27, 33, 36, 48, 53, 61], "4079": [27, 48], "150": [27, 31, 48], "68689": [27, 48], "1350": [27, 48], "610783": [27, 48], "10800": [27, 48], "120877": [27, 48], "3240": [27, 48], "1351": [27, 48], "931": [27, 48], "450": [27, 48], "generalizedpetersengraph": [27, 34, 48], "desargu": [27, 31, 48], "m\u00f6biu": [27, 31, 34, 48], "kantor": [27, 31, 33, 34, 36, 48], "ander": [27, 33, 36, 48], "jonsson": [27, 33, 36, 48], "generalizedsierpinskigraph": [27, 48], "sierpinski": [27, 48], "gkp2011": [27, 48], "km1997": [27, 48], "euclidian": [27, 48], "sierpinskigasketgraph": [27, 48], "hanoitowergraph": [27, 33, 48], "hanoi": [27, 48], "tower": [27, 48], "goethalsseidelgraph": [27, 48, 69], "goethal": [27, 48, 69], "gs1970": [27, 48, 69], "reli": [27, 33, 48, 69], "strongly_regular_db": [27, 48, 69], "strongly_regular_graph": [27, 48, 69], "is_goethals_seidel": [27, 48, 69], "accur": [27, 33, 48], "hamming_graph": [27, 48], "peg": [27, 48], "disk": [27, 30, 48], "state": [27, 28, 31, 32, 33, 36, 48], "puzzl": [27, 48], "meaning": [27, 48], "off": [27, 31, 33, 36, 38, 48, 51, 53, 68], "certain": [27, 30, 33, 35, 36, 37, 48, 51, 56], "radii": [27, 48], "goal": [27, 48], "resid": [27, 48], "medium": [27, 48], "digit": [27, 31, 38, 48], "ad2010": [27, 48], "greatest": [27, 48], "ast": [27, 48], "139": [27, 48], "likewis": [27, 48], "incur": [27, 48], "signific": [27, 46, 48], "penalti": [27, 48], "decod": [27, 34, 48], "padsto": [27, 48], "31": [27, 34, 36, 48, 69], "4096": [27, 48], "fact": [27, 33, 36, 42, 48, 51], "obviou": [27, 31, 37, 48], "renumb": [27, 48], "rob": [27, 31, 36, 48, 51], "beezer": [27, 31, 36, 48, 51], "assist": [27, 48], "su": [27, 48], "dore": [27, 48], "hararygraph": [27, 48], "harari": [27, 31, 48], "delta": [27, 36, 37, 46, 48, 55], "kn": [27, 48, 64], "book": [27, 36, 42, 48, 68], "west": [27, 48, 51], "introduct": [27, 33, 48, 51], "2nd": [27, 42, 48, 69], "edit": [27, 36, 47, 48, 51], "prentic": [27, 48], "hall": [27, 31, 39, 48], "2001": [27, 48], "151": [27, 48], "h_": [27, 48], "hyperstargraph": [27, 34, 48], "hyper": [27, 48], "011100": [27, 48], "101100": [27, 48], "110100": [27, 48], "111000": [27, 48], "lkol2002": [27, 48], "bcms1988": [27, 48], "johnsongraph": [27, 36, 48, 69], "johnson_graph": [27, 48], "kneser": [27, 36, 48], "knesergraph": [27, 36, 48], "kg": [27, 48], "vertex_iter": [27, 33, 36, 48], "lcfgraph": [27, 31, 36, 48], "shift_list": [27, 48], "lcf": [27, 48], "lederberg": [27, 48], "coxet": [27, 31, 48], "frucht": [27, 31, 48], "concis": [27, 48], "s_0": [27, 36, 39, 40, 46, 48], "s_i": [27, 33, 39, 48, 66], "jth": [27, 48], "shift": [27, 30, 33, 38, 48, 67], "tetrahedralgraph": [27, 29, 33, 36, 43, 48], "dodecahedralgraph": [27, 29, 33, 34, 36, 48, 52, 53, 54, 65], "heawoodgraph": [27, 31, 33, 48, 51, 53], "nonplanar": [27, 31, 33, 36, 48], "trival": [27, 48], "1976": [27, 33, 48], "grunbaum": [27, 31, 48], "york": [27, 48], "wilei": [27, 48], "362": [27, 48], "1967": [27, 48], "dendral": [27, 48], "molecul": [27, 48], "topologi": [27, 36, 48], "interim": [27, 48], "nation": [27, 48], "aeronaut": [27, 48], "administr": [27, 48], "grant": [27, 48], "nsg": [27, 48], "81": [27, 31, 33, 36, 48, 69], "decemb": [27, 48], "1965": [27, 48], "profil": [27, 48], "nlm": [27, 48], "nih": [27, 48], "gov": [27, 33, 48], "bbabiu": [27, 48], "pdf": [27, 31, 36, 48, 69], "lollipop": [27, 48], "candi": [27, 48], "stick": [27, 48], "mathonpseudocyclicmerginggraph": [27, 48], "mathon": [27, 31, 48, 69], "is_muzychuk_s6": [27, 48, 69], "mathonpseudocyclicstronglyregulargraph": [27, 48], "4t": [27, 48, 69], "mat1978": [27, 48], "2t": [27, 48, 69], "parametris": [27, 48], "latin": [27, 48, 69], "st1981": [27, 48], "9z": [27, 48], "3z": [27, 48], "is_mathon_pc_srg": [27, 48, 69], "pc": [27, 33, 48, 69], "normal_subgroup": [27, 31, 48], "subg": [27, 48], "libgap": [27, 48], "permutationmat": [27, 48], "ff": [27, 33, 48], "cycle_tupl": [27, 48], "g3x3": [27, 48], "441": [27, 36, 48], "220": [27, 48, 69], "109": [27, 33, 48], "g9": [27, 48], "muzychuks6graph": [27, 48, 69], "s6": [27, 48, 52, 69], "muz2007": [27, 48], "mandatori": [27, 48], "phi_i": [27, 31, 48], "ij": [27, 31, 33, 48], "biject": [27, 48], "sigma_": [27, 48], "phi_j": [27, 48], "progress": [27, 36, 44, 48, 63], "116": [27, 48, 69], "mycielskigraph": [27, 46, 48], "mycielski": [27, 48], "m_0": [27, 48], "k_2": [27, 36, 48], "v_n": [27, 33, 36, 39, 41, 46, 48, 72], "w_n": [27, 48], "w_i": [27, 33, 48], "v_j": [27, 36, 39, 48], "m_4": [27, 43, 48], "grotzsch": [27, 31, 48], "grotzschgraph": [27, 31, 48], "weisstein": [27, 48], "eric": [27, 48], "mycielskistep": [27, 48], "expos": [27, 48], "nkstargraph": [27, 48], "extern": [27, 33, 48, 51], "wei": [27, 48], "kuo": [27, 48], "chiang": [27, 48], "chen": [27, 48], "rong": [27, 48], "jay": [27, 48], "1995": [27, 48], "nstargraph": [27, 48], "aker": [27, 48], "horel": [27, 48], "krishnamurthi": [27, 48], "attract": [27, 31, 48], "proc": [27, 48], "internat": [27, 48], "conf": [27, 48], "1987": [27, 48], "393": [27, 48], "og": [27, 34, 48], "is_self_complementari": [27, 33, 48], "pasechnikgraph": [27, 48], "orthogonalarrayblockgraph": [27, 28, 48, 69], "l_": [27, 31, 48], "pas1992": [27, 48, 69], "is_orthogonal_array_block_graph": [27, 48, 69], "225": [27, 48, 69], "98": [27, 33, 48, 69], "43": [27, 30, 33, 36, 48, 69], "361": [27, 48], "162": [27, 31, 48], "73": [27, 36, 48], "72": [27, 31, 33, 48, 69], "1225": [27, 48], "578": [27, 48], "ringedtre": [27, 48], "cfhm2013": [27, 48], "0000": [27, 33, 48], "0001": [27, 33, 48], "0010": [27, 33, 48], "0011": [27, 33, 48], "0100": [27, 33, 48], "0101": [27, 33, 48], "0110": [27, 48], "0111": [27, 33, 48], "1001": [27, 33, 48], "1010": [27, 48], "1011": [27, 33, 48], "1100": [27, 48], "1101": [27, 33, 48], "1110": [27, 48], "1111": [27, 33, 48], "rosewindowgraph": [27, 48], "rose": [27, 48], "window": [27, 48], "tetraval": [27, 48], "wilson2008": [27, 48], "spoke": [27, 48], "gasket": [27, 48], "valenc": [27, 48], "s_n": [27, 28, 48, 66], "famou": [27, 31, 33, 48], "fractal": [27, 48], "triangular": [27, 29, 48], "s_": [27, 36, 39, 40, 46, 48, 52, 59, 66], "s4": [27, 48], "degree_histogram": [27, 30, 33, 36, 48], "llwc2011": [27, 48], "squaredskewhadamardmatrixgraph": [27, 48, 69], "oa": [27, 28, 34, 48, 52, 69], "180": [27, 31, 36, 48, 69, 72], "89": [27, 33, 36, 48], "90": [27, 31, 33, 36, 48, 61, 69], "612": [27, 48], "305": [27, 48], "306": [27, 48], "switchedsquaredskewhadamardmatrixgraph": [27, 48], "coincid": [27, 33, 36, 48], "is_switch_skewhad": [27, 48, 69], "226": [27, 48, 69], "twograph_descend": [27, 36, 48], "tabacjngraph": [27, 48], "taba\u010djn": [27, 48], "pentaval": [27, 48], "bicircul": [27, 48], "ahkos2014": [27, 48], "tadpolegraph": [27, 48], "tadpol": [27, 48], "turangraph": [27, 48], "turan": [27, 48], "pmod": [27, 48], "turan_graph": [27, 48], "2r": [27, 36, 48], "34249": [27, 48], "wheelgraph": [27, 29, 33, 36, 48, 52, 53], "wheel": [27, 29, 33, 48, 59], "intuit": [27, 33, 38, 48], "wheel_graph": [27, 48], "windmillgraph": [27, 36, 40, 48], "wd": [27, 48], "k_k": [27, 36, 48], "nk": [27, 48], "windmill_graph": [27, 48], "chang_graph": [27, 36, 48], "k_8": [27, 35, 48], "win": [27, 31, 48, 69], "tue": [27, 31, 48, 69], "nl": [27, 31, 48, 69], "aeb": [27, 31, 48, 69], "k8": [27, 48], "t8": [27, 36, 48], "four_srg": [27, 48], "itertool": [27, 33, 48], "g1": [27, 28, 31, 33, 36, 37, 42, 43, 48, 52], "c3c5": [27, 48], "disjoint_union": [27, 33, 36, 48], "c8": [27, 48], "seidel_switch": [27, 36, 48, 69], "line_graph_forbidden_subgraph": [27, 33, 36, 48, 58, 59], "nauty_gentreeg": [27, 48], "gentreeg": [27, 48], "sparse6": [27, 31, 36, 48, 50, 52], "unpredict": [27, 48], "128": [27, 48], "auxiliari": [27, 30, 36, 48, 74], "confus": [27, 33, 36, 48], "entir": [27, 33, 36, 37, 48, 51], "stopiter": [27, 38, 48], "agre": [27, 33, 48], "a000055": [27, 48], "47": [27, 33, 48], "106": [27, 48], "235": [27, 48], "551": [27, 48], "1301": [27, 48], "3159": [27, 48], "examin": [27, 48], "reaction": [27, 48], "failur": [27, 30, 38, 48], "petersen_famili": [27, 48], "minor": [27, 31, 36, 37, 48, 55, 58], "linklessli": [27, 48], "embedd": [27, 48], "hardcod": [27, 48], "prettier": [27, 48], "citat": [27, 48], "tree_iter": [27, 48], "degree_sequ": [27, 30, 31, 33, 36, 38, 48], "sloan": [27, 48], "intersectiongraph": [28, 30, 48], "intervalgraph": [28, 33, 48, 58], "points_ord": [28, 48], "get_vertex": [28, 30, 33, 36, 48], "get_vertic": [28, 30, 33, 43, 48], "neigh": [28, 48], "is_interv": [28, 33, 48, 58, 66], "verifi": [28, 33, 37, 43, 48], "clique_maximum": [28, 36, 48], "rev_interv": [28, 48], "transvers": [28, 48], "wors": [28, 35, 48, 55], "orthogonal_arrai": [28, 48], "oaa": [28, 48], "oab": [28, 48], "ga": [28, 36, 48], "oa0": [28, 48], "oa1": [28, 48], "g0": [28, 33, 48], "nevertheless": [28, 48], "isospectr": [28, 48], "second_permut": [28, 48], "first_permut": [28, 48], "euclidean": [28, 30, 48], "mark": [28, 32, 38, 48], "cross": [28, 33, 48, 51, 69], "a_1": [28, 31, 48], "a_2": [28, 48], "a_n": [28, 48], "b_2": [28, 48], "b_n": [28, 48], "recognit": [28, 30, 33, 36, 48, 66], "random_el": [28, 30, 33, 36, 48, 66], "phrag": [28, 48], "tolerancegraph": [28, 30, 48], "tolrep": [28, 48], "toler": [28, 30, 48], "l_0": [28, 30, 48], "r_0": [28, 30, 48], "t_0": [28, 30, 48], "l_1": [28, 30, 48, 70], "r_1": [28, 30, 48], "t_1": [28, 30, 48], "l_k": [28, 30, 48], "r_k": [28, 30, 48], "t_k": [28, 30, 33, 48], "i_i": [28, 30, 48], "l_i": [28, 30, 48], "r_i": [28, 30, 48], "t_i": [28, 30, 33, 48], "ge": [28, 48], "t_j": [28, 48], "is_weakly_chord": [28, 36, 48, 74], "tolrep2": [28, 48], "platonic_solid": [29, 48], "dodecahedr": [29, 34, 48], "icosahedr": [29, 43, 48], "hexahedralgraph": [29, 43, 48], "hexahedr": [29, 48], "hexahedron": [29, 48], "icosahedron": [29, 48], "octahedr": [29, 36, 43, 48], "octahedron": [29, 43, 48, 59], "tetrahedr": [29, 43, 48], "tetrahedron": [29, 31, 48], "pyramid": [29, 48], "tetra_po": [29, 48], "tetra_spr": [29, 48], "tetrahedral_graph": [29, 48], "barabasi": [30, 48], "albert": [30, 48], "grown": [30, 48], "randombicubicplanar": [30, 48], "sch1999": [30, 48], "sampl": [30, 33, 48, 55, 56], "blossom": [30, 48], "contour": [30, 48], "blossoming_contour": [30, 48], "dic": [30, 48], "blue": [30, 33, 48, 67], "vertex_color": [30, 33, 36, 37, 48, 51, 53, 54], "randomblockgraph": [30, 33, 36, 48, 58], "kmax": [30, 36, 48], "block_graph": [30, 36, 48], "is_block_graph": [30, 36, 48, 58], "hypergraph": [30, 48], "randomboundedtolerancegraph": [30, 48], "width": [30, 36, 38, 41, 44, 45, 46, 47, 48, 51], "randomchordalgraph": [30, 36, 45, 48, 70], "hole": [30, 33, 36, 48, 74], "elimin": [30, 33, 36, 37, 48, 70], "chordal_graph": [30, 48], "shet2018": [30, 48], "k_i": [30, 33, 48], "poisson": [30, 48], "prune": [30, 46, 48], "growing_subtre": [30, 48], "log_2": [30, 48], "connecting_nod": [30, 48], "pruned_tre": [30, 48], "barrier": [30, 48], "is_chord": [30, 31, 33, 36, 48, 58, 70], "randomgnm": [30, 36, 48, 55], "dense_gnm_random_graph": [30, 48], "gnm_random_graph": [30, 48], "gnm": [30, 48], "bb2005a": [30, 48], "graph_generators_pyx": [30, 48, 49], "pyx": [30, 48], "fast_gnp_random_graph": [30, 48], "gnp_random_graph": [30, 48], "set_random_se": [30, 33, 34, 36, 43, 48], "71": [30, 48], "gnp": [30, 48], "randomholmekim": [30, 48], "holm": [30, 48], "kim": [30, 48], "law": [30, 48], "often": [30, 33, 48, 51], "essenti": [30, 36, 37, 48], "growth": [30, 48], "chanc": [30, 48], "attain": [30, 48], "hk2002a": [30, 48], "randomintervalgraph": [30, 33, 36, 48, 58], "bf2001": [30, 48], "randomlobst": [30, 33, 36, 48, 52], "lobster": [30, 33, 36, 48], "caterpillar": [30, 48], "backbon": [30, 48], "arm": [30, 48], "randomnewmanwattsstrogatz": [30, 48], "newman": [30, 48], "watt": [30, 48], "strogatz": [30, 48], "nearest": [30, 48], "contrast": [30, 48], "watts_strogatz_graph": [30, 48], "c7": [30, 33, 48], "nws2002": [30, 48], "kv2003": [30, 48], "sw1999": [30, 48], "randomregularbipartit": [30, 48], "inspir": [30, 48], "mw1990": [30, 48], "randomshel": [30, 48], "shell": [30, 38, 48], "inter": [30, 48], "intra": [30, 48], "randomtolerancegraph": [30, 48], "caylei": [30, 33, 48, 69], "prufer": [30, 48], "randomtreepowerlaw": [30, 48], "trial": [30, 43, 48], "expon": [30, 48], "randomtriangul": [30, 48], "triangul": [30, 36, 48, 67, 70], "combinatori": [30, 33, 35, 48, 51, 65, 67], "unroot": [30, 48], "ps2006": [30, 48], "in1": [30, 48], "in2": [30, 48], "in3": [30, 48], "lf": [30, 48], "record": [30, 45, 48, 65], "randomtwospher": [30, 48], "randomunitdiskgraph": [30, 48], "unit_disk_graph": [30, 48], "area": [30, 48, 51, 52], "misc": [30, 38, 48, 51, 69], "randstat": [30, 48], "current_randst": [30, 48], "gpo": [30, 48], "hpo": [30, 48], "xb": 30, "bicub": [30, 31, 48], "binarytre": [30, 58], "an_el": 30, "smallgraph": [31, 48, 58], "balaban10cag": [31, 48], "balaban": [31, 48], "cage": [31, 48], "balaban_10": [31, 48], "deeper": [31, 48], "l3": [31, 36, 48, 55], "l4": [31, 48], "balaban11cag": [31, 48], "balaban_11": [31, 48], "annual": [31, 48], "contest": [31, 48], "emmn1998": [31, 48], "emphas": [31, 48], "g3": [31, 36, 48], "bidiakiscub": [31, 48], "bidiaki": [31, 48], "bidiakis_cub": [31, 48], "char_poli": [31, 48], "biggssmithgraph": [31, 48], "bigg": [31, 48], "smith_graph": [31, 48], "153": [31, 48], "2448": [31, 48], "blanusafirstsnarkgraph": [31, 48], "blanusa": [31, 48], "snark": [31, 33, 36, 48], "blanusa_snark": [31, 48], "blanusasecondsnarkgraph": [31, 48], "brinkmanngraph": [31, 48], "brinkmann": [31, 48], "brinkmann_graph": [31, 48], "d_7": [31, 48], "dihedralgroup": [31, 48], "buckybal": [31, 33, 48], "bucki": [31, 48], "carbon": [31, 48], "atom": [31, 36, 40, 45, 48], "buckminsterfulleren": [31, 48], "sphere": [31, 33, 36, 48, 51], "pentagon": [31, 48], "soccer": [31, 48], "vertex_graph": [31, 48], "camerongraph": [31, 48], "cameron": [31, 48], "231": [31, 48, 69], "3465": [31, 48], "cell120": [31, 48], "600": [31, 48], "1200": [31, 48], "cell600": [31, 48], "720": [31, 48], "conjectur": [31, 37, 48], "chv": [31, 48], "c3": [31, 48], "a1tal_graph": [31, 48], "clebsch_graph": [31, 48], "1920": [31, 48], "coxetergraph": [31, 48], "coxeter_graph": [31, 48], "336": [31, 48], "dejtergraph": [31, 48], "dejter": [31, 48], "dejter_graph": [31, 48], "desarguesgraph": [31, 48], "har1994": [31, 48], "doublestarsnark": [31, 48], "star_snark": [31, 48], "durergraph": [31, 48, 57], "d\u00fcrer": [31, 48], "bcrer_graph": [31, 48], "albrecht": [31, 48], "durer": [31, 48], "d_6": [31, 48], "dyckgraph": [31, 48], "dyck": [31, 48], "dyck_graph": [31, 48], "walther": [31, 48], "von": [31, 48], "1881": [31, 48], "192": [31, 48], "integr": [31, 33, 46, 48], "irrat": [31, 48], "toru": [31, 48], "shrikhandegraph": [31, 48], "ellinghamhorton54graph": [31, 48], "ellingham": [31, 48], "horton": [31, 48], "horton_graph": [31, 48], "ellinghamhorton78graph": [31, 48], "78": [31, 33, 36, 48, 61, 69], "e2": [31, 48, 73], "93horton_graph": [31, 48], "erreragraph": [31, 48], "errera": [31, 48], "errera_graph": [31, 48], "alfr": [31, 48], "dihedr": [31, 48], "f26agraph": [31, 48], "f26a": [31, 48], "f26a_graph": [31, 48], "flowersnark": [31, 33, 35, 36, 48, 74], "flower": [31, 33, 36, 48], "flower_snark": [31, 48], "shcghc": [31, 48], "ggg": [31, 48], "gp": [31, 32, 33, 48, 53], "ca": [31, 36, 38, 46, 48], "_g": [31, 34, 46, 48], "cc": [31, 34, 36, 45, 48, 52, 55, 70], "folkmangraph": [31, 48], "folkman": [31, 48], "folkman_graph": [31, 48], "fostergraph": [31, 48], "foster_graph": [31, 48], "4320": [31, 48], "franklingraph": [31, 48], "franklin": [31, 48], "franklin_graph": [31, 48], "philip": [31, 48], "is_perfect": [31, 36, 48, 58], "fruchtgraph": [31, 33, 36, 48], "frucht_graph": [31, 48], "seven": [31, 36, 48], "khckm": [31, 48], "_egk": [31, 48], "goldnerhararygraph": [31, 48], "goldner": [31, 48], "93harary_graph": [31, 48], "golombgraph": [31, 48], "golomb": [31, 48], "golomb_graph": [31, 48], "dist2": [31, 48], "gossetgraph": [31, 48], "gosset": [31, 48], "gosset_3_21": [31, 48], "gosset_graph": [31, 48], "756": [31, 48], "graygraph": [31, 36, 48], "grai": [31, 36, 48], "gray_graph": [31, 48], "gritsenkograph": [31, 48], "gritsenko": [31, 48], "took": [31, 48], "gri2021": [31, 48], "gr\u00f6tzsch": [31, 48], "gr": [31, 34, 48], "b6tzsch_graph": [31, 48], "herbert": [31, 48], "d_5": [31, 48], "halljankograph": [31, 33, 48], "from_str": [31, 48], "janko": [31, 48], "janko_graph": [31, 48], "atla": [31, 48], "j2": [31, 48], "realli": [31, 33, 36, 45, 48], "nv": [31, 48], "harborthgraph": [31, 48], "harborth": [31, 48], "104": [31, 48], "matchstick": [31, 48], "harborth_graph": [31, 48], "harriesgraph": [31, 48], "harri": [31, 48], "harries_graph": [31, 48], "funni": [31, 48], "properli": [31, 33, 36, 48, 62], "subdivid": [31, 33, 48, 70], "harrieswonggraph": [31, 48], "wong": [31, 48], "wong_graph": [31, 48], "contribut": [31, 48], "heawood": [31, 33, 48], "mobiuskantorgraph": [31, 48], "heawood_graph": [31, 48], "continu": [31, 33, 34, 41, 46, 48, 66], "mheghc": [31, 48], "ai": [31, 48], "_pc": [31, 48], "_g_": [31, 48], "herschelgraph": [31, 36, 48], "herschel": [31, 48], "herschel_graph": [31, 48], "alexand": [31, 48], "stewart": [31, 48], "higmansimsgraph": [31, 48], "higman": [31, 48, 69], "hoffman": [31, 33, 48], "hoffmansingletongraph": [31, 33, 48, 53, 69], "352": [31, 48], "octob": [31, 48], "hs1968": [31, 48], "haf2004": [31, 48], "sims_graph": [31, 48], "xyz": [31, 48], "pentagram": [31, 48], "88704000": [31, 48], "hoffmangraph": [31, 36, 48], "hoffman_graph": [31, 48], "moor": [31, 48], "open": [31, 33, 47, 48, 52, 54, 73], "gr2001": [31, 48], "singleton_graph": [31, 48], "novel": [31, 48], "tom": [31, 33, 36, 37, 48, 61], "boothbi": [31, 33, 36, 37, 48, 61], "ey": [31, 48], "844": [31, 48], "535": [31, 48], "904": [31, 48], "425": [31, 48], "holtgraph": [31, 36, 48], "holt": [31, 36, 48], "doyl": [31, 48], "holt_graph": [31, 48], "hortongraph": [31, 48], "veeeeri": [31, 48], "ioninkharaghani765graph": [31, 48], "765": [31, 48], "claim": [31, 48], "ik2003": [31, 48], "did": [31, 48, 63], "instruct": [31, 33, 48, 51], "yuri": [31, 48], "ionin": [31, 48], "hadi": [31, 48], "kharaghani": [31, 48], "phi_1": [31, 36, 48], "phi_2": [31, 36, 48], "phi_3": [31, 48], "phi_4": [31, 48], "p_1": [31, 33, 39, 48, 69, 70], "p_9": [31, 48], "p_2": [31, 33, 48, 69, 70], "p_3": [31, 33, 34, 48, 69], "p_4": [31, 33, 36, 37, 48, 58, 74], "p_5": [31, 33, 34, 36, 37, 48, 74], "p_6": [31, 33, 48], "p_7": [31, 48], "p_8": [31, 48], "p_i": [31, 39, 48, 69, 70], "p_": [31, 36, 39, 48, 52], "p_j": [31, 39, 48, 70], "mf": [31, 48], "quintupl": [31, 48], "x_1": [31, 42, 45, 48], "x_2": [31, 45, 48], "x_3": [31, 48], "x_4": [31, 48], "x_5": [31, 48], "ccccc": [31, 48], "omega": [31, 36, 48], "w_": [31, 48], "a_16": [31, 48], "a_j": [31, 48], "bgw": [31, 48], "encount": [31, 48], "becam": [31, 48], "2016": [31, 48, 55], "uleth": [31, 48], "research": [31, 48], "ioninkharaghani": [31, 48], "jankokharaghanigraph": [31, 48], "936": [31, 48], "1029": [31, 48], "588": [31, 48], "jk2002": [31, 48], "gm1987": [31, 48], "jankokharaghanitonchevgraph": [31, 48], "jkt2001": [31, 48], "b163": [31, 48], "163": [31, 48], "kittellgraph": [31, 48], "kittel": [31, 48], "klein3regulargraph": [31, 48], "klein": [31, 48], "surfac": [31, 33, 48], "klein7regulargraph": [31, 48], "klein_graph": [31, 48], "valent": [31, 48], "krackhardt": [31, 48], "kite": [31, 48], "studi": [31, 36, 48], "social": [31, 48], "kre2002": [31, 48], "krackhardt_kite_graph": [31, 48], "conjunct": [31, 48], "highest": [31, 48], "eighth": [31, 48], "sixth": [31, 48], "seventh": [31, 48], "execut": [31, 33, 34, 36, 38, 40, 48, 53, 55], "livingstonegraph": [31, 48], "livingston": [31, 48], "266": [31, 48], "j1": [31, 48], "livingstone_graph": [31, 48], "1463": [31, 48], "ljubljanagraph": [31, 36, 48], "ljubljana": [31, 36, 48], "ljubljana_graph": [31, 48], "localmclaughlingraph": [31, 48], "mclaughlin": [31, 48], "mclaughlingraph": [31, 48, 69], "stabil": [31, 48], "m22graph": [31, 48], "m22": [31, 48], "77": [31, 34, 36, 48, 69], "616": [31, 48], "markstroemgraph": [31, 48], "markstr\u00f6m": [31, 48], "markstroem": [31, 48], "mathonstronglyregulargraph": [31, 48], "784": [31, 48, 69], "243": [31, 48, 69], "82": [31, 48], "mcgeegraph": [31, 33, 48], "mcgee": [31, 33, 48], "mcgee_graph": [31, 48], "275": [31, 48], "meredithgraph": [31, 48], "meredith": [31, 48], "meredith_graph": [31, 48], "140": [31, 48, 69], "moebiuskantorgraph": [31, 33, 34, 36, 48], "mk": [31, 48], "moebiu": [31, 33, 36, 48], "ohcgk": [31, 48], "acac": [31, 48], "q_a": [31, 48], "moserspindl": [31, 48], "moser": [31, 48], "spindl": [31, 48], "moser_spindl": [31, 48], "d_4": [31, 48], "ui": [31, 48], "vi": [31, 48, 69], "naurugraph": [31, 48], "nauru": [31, 48], "nauru_graph": [31, 48], "pappu": [31, 33, 36, 48], "perkelgraph": [31, 48], "perkel": [31, 48], "171": [31, 36, 48, 72], "perkel_graph": [31, 48], "counterexampl": [31, 48], "versu": [31, 48], "plan": [31, 48], "petersen_spr": [31, 48, 53], "petersen_databas": [31, 48, 53], "poussingraph": [31, 48], "poussin": [31, 48], "robertsongraph": [31, 48], "robertson": [31, 48], "robertson_graph": [31, 48], "schlaefligraph": [31, 48], "schl\u00e4fli": [31, 48], "schl\u00e4fli_graph": [31, 48], "beauti": [31, 48], "shrikhande_graph": [31, 48], "1959": [31, 48], "simsgewirtzgraph": [31, 48], "sylvest": [31, 48], "gewirtz_graph": [31, 48], "sousseliergraph": [31, 48], "sousseli": [31, 48], "hypohamiltonian": [31, 33, 34, 48], "sousselier_graph": [31, 48], "french": [31, 48], "suzukigraph": [31, 48], "suzuki": [31, 48, 69], "1782": [31, 48], "416": [31, 48, 69], "impati": [31, 48], "sylvestergraph": [31, 48], "szekeressnarkgraph": [31, 48], "szeker": [31, 48], "szekeres_snark": [31, 48], "thomsengraph": [31, 48], "thomsen": [31, 48], "util": [31, 48, 51], "efz_": [31, 48], "tietzegraph": [31, 36, 48, 68], "tietz": [31, 48], "27s_graph": [31, 48], "truncatedicosidodecahedralgraph": [31, 48], "icosidodecahedron": [31, 48], "archimedean": [31, 48], "decagon": [31, 48], "truncated_icosidodecahedron": [31, 48], "inconsist": [31, 48], "gmp": [31, 48], "truncatedtetrahedralgraph": [31, 48], "truncated_tetrahedron": [31, 36, 48], "simplex": [31, 48], "tutte12cag": [31, 48], "tutte_12": [31, 48], "126": [31, 36, 48, 55, 69], "189": [31, 48], "tuttecoxetergraph": [31, 48], "tuttegraph": [31, 48], "tutte_graph": [31, 48], "46": [31, 33, 48], "69": [31, 33, 36, 48, 55], "u42graph216": [31, 48], "216": [31, 48], "crs2016": [31, 48], "u_4": [31, 42, 48], "action": [31, 48, 63, 69], "question": [31, 38, 42, 48], "u42graph540": [31, 48], "540": [31, 48], "187": [31, 48, 68], "58": [31, 33, 48, 69], "68": [31, 33, 36, 48, 69], "sp_4": [31, 48], "nonsingular": [31, 48], "stabilis": [31, 48], "fk1991": [31, 48, 69], "wagnergraph": [31, 48], "wagner": [31, 48], "wagner_graph": [31, 48], "watkinssnarkgraph": [31, 48], "watkin": [31, 48], "watkins_snark": [31, 48], "wellsgraph": [31, 48], "armanio": [31, 48], "intermedi": [31, 36, 48], "believ": [31, 48], "recip": [31, 48], "unlik": [31, 36, 48], "sensibl": [31, 48], "wienerarayagraph": [31, 48], "araya": [31, 48], "araya_graph": [31, 48], "world_map": [32, 48], "africamap": [32, 36, 48], "year": [32, 48], "2018": [32, 36, 48, 59], "african": [32, 36, 48], "border": [32, 48, 51], "capit": [32, 48], "africa": [32, 36, 48], "land": [32, 48], "reserv": [32, 48], "libya": [32, 48], "algeria": [32, 48], "chad": [32, 48], "egypt": [32, 48], "niger": [32, 48], "sudan": [32, 48], "tunisia": [32, 48], "cont_africa": [32, 48], "madagaskar": [32, 48], "europ": [32, 48], "ireland": [32, 48], "kingdom": [32, 48], "cont_europ": [32, 48], "iceland": [32, 48], "usamap": [32, 48], "usa": [32, 48], "colorado": [32, 48], "arizona": [32, 48], "michigan": [32, 48], "minnesota": [32, 48], "alaska": [32, 48], "hawaii": [32, 48], "pennsylvania": [32, 48], "usacont": [32, 48], "worldmap": [32, 48], "boundari": [32, 33, 36, 48, 67], "cia": [32, 48], "factbook": [32, 48], "member": [32, 36, 48], "gps_coordin": [32, 48], "franc": [32, 48], "itali": [32, 48], "bolivia": [32, 48], "export_to_fil": 33, "export": 33, "distance_matrix": 33, "kirchhoff_matrix": 33, "kirchhoff": [33, 36], "has_loop": [33, 48], "loop_edg": 33, "number_of_loop": 33, "loop_vertic": 33, "has_multiple_edg": [33, 48], "is_immut": 33, "antisymmetr": 33, "densiti": [33, 36], "random_vertex_iter": 33, "random_edg": 33, "random_edge_iter": 33, "vertex_boundari": 33, "vertices1": 33, "vertices2": [33, 73], "set_vertic": [33, 36, 53], "set_vertex": [33, 36], "neighbor_iter": 33, "contract_edg": 33, "contract": [33, 36, 63, 72], "delete_multiedg": 33, "edgesview": [33, 36, 73], "edge_boundari": 33, "remove_multiple_edg": 33, "retain": [33, 36], "average_degre": [33, 36, 38], "frequenc": 33, "random_subgraph": 33, "add_cycl": [33, 34, 36, 40], "degree_to_cel": 33, "tensor_product": [33, 36], "tensor": [33, 36], "categor": 33, "lexicographic_product": [33, 70], "strong_product": 33, "disjunctive_product": 33, "disjunct": 33, "eulerian_orient": 33, "eulerian_circuit": 33, "all_path": [33, 64], "shortest_simple_path": [33, 64], "algebra": [33, 69], "eigenvector": 33, "eigenspac": [33, 69], "metric": [33, 36], "cluster_triangl": 33, "nbunch": 33, "clustering_averag": 33, "cluster_transit": 33, "katz_centr": 33, "katz": 33, "katz_matrix": 33, "pagerank": 33, "coarsest_equitable_refin": 33, "coarsest": 33, "finer": 33, "equit": 33, "is_caylei": 33, "tour": 33, "is_circular_planar": [33, 58], "outerplanar": [33, 58], "is_gallai_tre": [33, 58], "is_cycl": [33, 72], "is_independent_set": 33, "is_transitively_reduc": 33, "is_equit": 33, "lex_bf": [33, 36, 70], "lexbf": [33, 36, 70], "lex_up": [33, 70], "lexup": [33, 70], "lex_df": [33, 70], "lexdf": [33, 70], "lex_down": [33, 70], "lexdown": [33, 70], "distance_all_pair": 33, "odd_girth": 33, "average_dist": 33, "edge_cut": [33, 36], "vertex_cut": [33, 36, 45], "nowhere_zero_flow": 33, "edge_disjoint_path": 33, "vertex_disjoint_path": 33, "transitive_reduct": 33, "set_embed": [33, 35, 48, 65, 67], "_embed": [33, 65], "get_embed": [33, 35, 48, 65], "planar_du": [33, 36], "set_po": [33, 36, 53, 65, 68], "layout_planar": 33, "is_drawn_free_of_edge_cross": 33, "latex_opt": [33, 51], "graphlatex": 33, "set_latex_opt": [33, 51], "render": [33, 36, 51], "layout_spr": 33, "layout_extend_randomli": 33, "layout_circular": 33, "layout_tre": [33, 53], "layout_forest": 33, "_circle_embed": 33, "_line_embed": 33, "graphplot": [33, 53], "plot3d": [33, 48], "show3d": [33, 36], "tachyon": [33, 36], "graphviz_str": [33, 51], "languag": 33, "graphviz_to_file_nam": 33, "steiner_tre": 33, "arboresc": [33, 68], "feedback_vertex_set": 33, "multiway_cut": 33, "multiwai": 33, "max_cut": 33, "longest_path": 33, "longest": [33, 34], "traveling_salesman_problem": 33, "travel": 33, "salesman": 33, "tsp": 33, "hamiltonian_cycl": 33, "hamiltonian_path": 33, "multicommodity_flow": 33, "multicommod": 33, "disjoint_routed_path": 33, "rout": [33, 38], "subgraph_search_count": [33, 36], "occurr": [33, 34, 66], "subgraph_search_iter": 33, "crossing_numb": 33, "edge_polytop": 33, "symmetric_edge_polytop": 33, "genericgraph_pyx": [33, 34], "__eq__": 33, "weighted": 33, "arrow": [33, 53], "9999": 33, "pai": [33, 59], "attent": [33, 59], "warn": [33, 51, 73], "nonintuit": 33, "demonstr": [33, 34, 51], "matrix_real_double_dens": 33, "numpi": 33, "matrix_numpy_integer_dens": 33, "eg1": [33, 64], "eg2": [33, 64], "ug": [33, 48, 64], "statu": 33, "behavior": [33, 48, 73], "am": [33, 36, 48, 59], "return_group": 33, "graphs_queri": 33, "graphqueri": [33, 36, 38, 52], "display_col": [33, 36, 38, 52], "num_vertic": [33, 36, 38, 44, 52], "get_graphs_list": [33, 36, 38, 52], "character_t": 33, "712483534798848": 33, "384": 33, "a5": 33, "alternatinggroup": 33, "z2": 33, "cyclicpermutationgroup": 33, "direct_product": 33, "explain": [33, 36, 42, 66, 69], "orb": 33, "formal": [33, 36], "across": [33, 73], "backward": 33, "16470": 33, "dp": 33, "g_bliss": 33, "is_cartesian_product": [33, 36, 42], "graph_product": [33, 36, 42], "categorical_product": 33, "kroneck": 33, "kronecker_product": 33, "900": 33, "measur": [33, 39, 45, 51], "centrality_degre": [33, 36], "06969696969696969": 33, "0606060606060606": 33, "833333333333333": 33, "333333333333333": 33, "16666666666666666": 33, "olj2014": 33, "actor": 33, "bor1995": 33, "61111111111111": 33, "075": [33, 53], "var": [33, 36], "160": 33, "390": 33, "2880": 33, "13305": 33, "39882": 33, "77640": 33, "94800": 33, "66000": 33, "20000": 33, "vertex0": 33, "triad": 33, "hss": 33, "sparse_copi": 33, "dense_copi": 33, "coarser": 33, "prt": 33, "ss": 33, "brendan": [33, 48, 56], "mckai": [33, 48, 56], "master": 33, "thesi": 33, "melbourn": 33, "_immut": 33, "dodecahedron": [33, 48], "deep": 33, "affect": [33, 36, 53], "h1": [33, 36], "brute": [33, 34], "2z": 33, "edge_spac": 33, "finitefield": 33, "edge_vector": 33, "vec": 33, "vertices_to_edg": 33, "cycle_to_vector": 33, "basis_as_vector": 33, "hei": 33, "wuuhuu": 33, "k12": 33, "66": [33, 36, 53, 61], "132": [33, 69], "send": [33, 48], "emptyseterror": [33, 48, 68, 69], "custom": [33, 36, 51, 68], "spent": [33, 41, 46], "sortabl": 33, "subfunct": 33, "graham": 33, "pollak": 33, "cut_": 33, "fulkerson": 33, "goldberg": 33, "presenc": 33, "slight": 33, "nois": [33, 53], "set1": 33, "set2": 33, "menger": 33, "\u00e0lgorithm": 33, "eventu": [33, 51], "roskind": [33, 68], "rt1985": [33, 68], "entitl": [33, 36], "thoma": 33, "kaiser": 33, "kai2012": 33, "matroid": [33, 36], "sch2003": [33, 36], "regardless": 33, "32169": 33, "d6": [33, 34, 48], "e_": [33, 38], "_hkih": 33, "eo": 33, "bsg": 33, "fshgc": 33, "hthugm": 33, "ipug": 33, "joeycdozdkqgo": 33, "ada": 33, "aag": 33, "gaqw": 33, "aiaswhycd": 33, "qqb": 33, "dd": 33, "hjti": 33, "ohlj_": 33, "c_oeikoec": 33, "_bc": 33, "ybfosqitea": 33, "ivcu_": 33, "sort_vertic": [33, 73], "somewhat": 33, "safe": 33, "edgelabel": 33, "ep": [33, 36], "e_i": 33, "e_j": 33, "e_n": 33, "is_combinatorially_isomorph": 33, "cross_polytop": 33, "subdirect": 33, "subdirect_sum": 33, "poli": 33, "coupl": [33, 53], "22349": 33, "fashion": [33, 73], "ord": [33, 36, 68, 70], "numberfield": 33, "a3": 33, "conclud": 33, "insight": 33, "4142135623": 33, "drop": 33, "5000000000": 33, "8660254037": 33, "return_vertic": 33, "hierholz": 33, "resum": 33, "secondli": 33, "filenam": [33, 36, 52], "adjlist": 33, "edgelist": 33, "gexf": 33, "gml": 33, "graphml": 33, "multiline_adjlist": 33, "pajek": 33, "yaml": 33, "lanl": 33, "readwrit": 33, "write_adjlist": 33, "io": 33, "latest": [33, 39, 58], "nx_pydot": 33, "write_dot": 33, "write_edgelist": 33, "write_gexf": 33, "write_gml": 33, "write_graphml": 33, "write_multiline_adjlist": 33, "write_pajek": 33, "nx_yaml": 33, "write_yaml": 33, "sobj": 33, "write_": 33, "tmp_filenam": [33, 36, 52], "ext": [33, 36], "g_networkx": 33, "read_pajek": 33, "read_edgelist": 33, "v3": [33, 51], "rot_si": 33, "nice_copi": 33, "nb_u": 33, "nb_v": 33, "brief": 33, "fv": 33, "is_forest": [33, 36, 37], "vertex_bound": 33, "valuat": 33, "max_flow": 33, "b_e": [33, 36], "capac": [33, 36], "flow_graph": 33, "on_embed": 33, "euler": [33, 35], "vertex1": 33, "neighbor1": 33, "neighbor2": 33, "neighbor3": 33, "vertex2": 33, "prioriti": 33, "k23": 33, "k33": [33, 36], "ultim": [33, 51], "greatli": 33, "accordingli": [33, 36, 37, 51, 74], "dim": [33, 34, 53], "save_po": [33, 53], "475": 33, "154": 33, "951": [33, 53], "309": [33, 53], "graphics_array_default": 33, "graph_bord": [33, 36, 53], "color_by_label": [33, 51, 53, 67], "edge_styl": [33, 53], "dash": [33, 53], "cumul": [33, 53], "set_edg": [33, 53], "talk": [33, 53], "edge_opt": [33, 51, 53], "subgraph_clust": [33, 51], "dotspec": 33, "orchid": 33, "hsv": 33, "hexadecim": [33, 54], "da3305": 33, "rgb": [33, 37, 51], "rainbow": [33, 53], "incompat": [33, 48], "thereof": 33, "engin": [33, 51], "rectangl": [33, 51], "sole": 33, "syntact": 33, "adher": 33, "node_0": [33, 51], "node_1": [33, 51], "node_2": 33, "node_3": 33, "post": 33, "plaintext": 33, "texlbl": 33, "texttt": [33, 51], "node_10": 33, "node_11": 33, "node_6": 33, "node_7": 33, "node_5": 33, "node_8": 33, "node_4": 33, "node_9": 33, "ff0000": [33, 36, 37, 53], "00ffff": [33, 37], "hierarch": 33, "bt": [33, 35], "rl": 33, "lr": 33, "label_styl": 33, "edge_str": 33, "dir": 33, "back": [33, 36, 37, 42, 48], "laid": [33, 34], "coucou": 33, "verbose_constraint": [33, 36, 37], "resp": [33, 36, 69], "find_hamiltonian": [33, 34], "generic_graph_pyx": [33, 34], "backtrack": [33, 34, 36, 37, 63, 68], "endlessli": [33, 34, 36, 37], "NOT": [33, 35, 58, 59], "hamilton": 33, "destin": [33, 50, 54, 59, 64], "meth": 33, "doc": [33, 36, 74], "__init__": 33, "summari": 33, "is_weight": 33, "maxflow_valu": 33, "p5": 33, "oddcycl": 33, "allow_disconnect": 33, "disconnected": 33, "cayley_graph": 33, "eras": 33, "simplici": [33, 36, 70], "fg1965": 33, "h_k": [33, 34], "peo": [33, 70], "lex": [33, 36, 70], "rt1975": 33, "circulant_graph": 33, "lists_of_paramet": 33, "kuratowski": [33, 65], "subdivis": [33, 36, 65, 70], "k_5": [33, 36, 65], "k_": [33, 36, 48, 59, 61, 65, 69], "n3": 33, "reflect": 33, "myrvold": 33, "disc": 33, "accomplish": [33, 51], "bm2004": 33, "g439": 33, "directed_cliqu": 33, "_both_": 33, "directed_cycl": 33, "bm2008": 33, "_po": 33, "quotient_matrix": 33, "choosabl": 33, "ert1979": 33, "petergraph": 33, "interval_graph": 33, "perm_gp": 33, "permgroup_nam": 33, "spring_layout_fast": [33, 34], "position_d": 33, "position_": 33, "john": [33, 69], "is_apex": [33, 36, 58], "is_polyhedr": [33, 36, 58], "set_emb": 33, "k43": 33, "complementary_graph": 33, "a000171": 33, "a003086": 33, "up_to_isomorph": 33, "4x4": 33, "p11": 33, "p15": 33, "distant": 33, "penal": 33, "attenu": 33, "reciproc": 33, "absolut": 33, "symmetri": [33, 36, 39, 62], "000000000000000": 33, "7319819819820": 33, "6846846846847": 33, "173": 33, "212076941807": 33, "9819819819820": 33, "778914049184": 33, "nonedgesonli": [33, 36], "169": 33, "2256": 33, "545": 33, "4512": 33, "188": 33, "605": 33, "485": 33, "7081": 33, "297792": 33, "4355": 33, "37224": 33, "229": 33, "9024": 33, "595": 33, "4073": 33, "172": 33, "4653": 33, "376": 33, "337": [33, 68], "signless": [33, 36, 61], "divis": 33, "jason": [33, 36, 38, 48], "grout": [33, 36, 38, 48], "graph_latex": [33, 36, 51, 53], "opt": [33, 51], "set_opt": [33, 51], "tkz_style": [33, 51], "acyclic_dummi": 33, "fetch": [33, 38, 54], "86": 33, "87": [33, 69], "93": 33, "74": 33, "92": 33, "safeti": 33, "graph_plot": [33, 53], "layout_opt": 33, "by_compon": [33, 34, 53], "forest_root": [33, 53], "evenli": [33, 53], "tradit": [33, 53], "prog": [33, 51, 53], "circo": [33, 51, 53], "fdp": [33, 51, 53], "neato": [33, 51, 53], "twopi": [33, 51, 53], "tree_orient": [33, 53], "tree_root": [33, 43, 53], "blah": 33, "layout_blah": 33, "layout_default": 33, "systemat": 33, "62": [33, 48], "referenc": 33, "box": [33, 51], "delimit": 33, "0446": 33, "332": 33, "1114": 33, "514": 33, "xmin": 33, "xmax": 33, "ymin": 33, "ymax": 33, "_layout_bounding_box": 33, "determinist": 33, "cool": 33, "showcas": 33, "tip": 33, "download": [33, 51, 58], "external_fac": 33, "saniti": [33, 68], "em": [33, 51], "121320343559642": 33, "1213203435596424": 33, "698670612749268": 33, "668": 33, "667": 33, "677": 33, "starting_vertex": [33, 53], "166": 33, "initial_vertex": [33, 36, 70], "discoveri": [33, 36, 40, 70], "saw": [33, 36, 70], "ck2008": [33, 70], "slice": [33, 43, 70, 73], "hmpv2000": [33, 70], "rearrang": [33, 70], "lexicographic_breadth": [33, 70], "first_search": [33, 70], "sun": [33, 36, 70], "prepend": [33, 70], "mil2017": [33, 70], "3501": 33, "termin": [33, 59], "is_line_graph": [33, 36, 58, 59], "maximum_cut": 33, "bseta": 33, "bsetb": 33, "bipartite_set": [33, 36], "uv_": 33, "prim_boost": 33, "prim_fring": 33, "prim_edg": 33, "filter_krusk": [33, 68], "oss2009": [33, 68], "kruskal_boost": 33, "boruvka": [33, 68], "invok": [33, 51], "willing": 33, "commodity_flow_problem": 33, "commod": 33, "\u00ecnteger": 33, "kth": 33, "se": 33, "viggo": 33, "wwwcompendium": 33, "node92": 33, "mutualis": 33, "weight_fn": 33, "edgedataview": 33, "outmultiedgedataview": [33, 50], "_d": 33, "nzf": 33, "bridgeless": 33, "sey1981": 33, "zero_flow": 33, "revert": 33, "feasibl": [33, 36, 41, 45, 69], "num_fac": 33, "euler_characterist": 33, "har1962": 33, "big1993": 33, "person": 33, "dangl": 33, "scipi": 33, "earlier": [33, 36], "walker": 33, "damp": 33, "click": 33, "prevent": [33, 36, 46], "imaginari": 33, "surfer": 33, "who": [33, 37], "nonzero": [33, 36, 69], "outedg": 33, "16112205885619563": 33, "1619531043247219": 33, "2374999999999999": 33, "17775588228760858": 33, "100546895675278": 33, "16459583718588994": 33, "13977928595154515": 33, "16539840184339605": 33, "3063198690713853": 33, "1700057609707141": 33, "05390084497706962": 33, "16112198303979128": 33, "16195368558382262": 33, "16112198303979125": 33, "23749999999999993": 33, "17775603392041744": 33, "10054631441617742": 33, "primal": 33, "24635": 33, "edge_labels_background": [33, 53], "background": [33, 53], "white": [33, 51, 53], "transpar": [33, 53], "vertex_shap": [33, 51, 53], "matplotlib": [33, 36, 51, 53], "api": 33, "markers_api": 33, "invis": 33, "legibl": 33, "slide": 33, "downward": 33, "decor": 33, "imag": [33, 36, 51, 52], "graphplot_opt": 33, "sin": [33, 53], "ff9900": [33, 53], "ffff00": [33, 53], "00ff00": [33, 36, 53], "0000ff": [33, 36, 53], "pos_dict": [33, 53], "pl": [33, 53], "95": [33, 48, 69], "platform": 33, "9593": 33, "855": 33, "0990": 33, "184": [33, 68], "644": 33, "507": 33, "597": 33, "236": 33, "687": 33, "473": 33, "902": [33, 34], "773": 33, "spam": [33, 53], "jcc": [33, 53], "_color_by_label": [33, 53], "supersingularmodul": 33, "hecke_matrix": 33, "bgcolor": 33, "edge_s": 33, "edge_size2": 33, "0325": 33, "pos3d": 33, "threej": 33, "sleev": 33, "interact": [33, 38], "3d": [33, 36, 48, 51], "viewer": 33, "webgl": 33, "jmol": [33, 36], "java": 33, "rai": 33, "tracer": 33, "png": 33, "xre": 33, "resolut": 33, "yre": 33, "500": [33, 54], "graphics3d": [33, 48], "fairli": 33, "p3d": 33, "rgbtupl": 33, "amort": [33, 36, 62], "return_map": 33, "check_input": 33, "complete_partial_funct": 33, "caveat": 33, "risk": 33, "keyerror": 33, "reproduc": 33, "map1": 33, "map2": 33, "sd": 33, "discret": 33, "aut": [33, 38, 48, 69], "posn": 33, "ffffff": 33, "test2": 33, "test3": 33, "welsh": [33, 51], "get_opt": [33, 51], "abcdefghi": 33, "vertex_dict": 33, "bfs_bid": 33, "dijkstra_bid_networkx": 33, "dijkstra_bid": 33, "warshall_boost": 33, "warshall_scipi": 33, "pred": 33, "d5": [33, 36, 48, 55], "d7": 33, "d8": 33, "unreach": [33, 48], "3000": 33, "unexpect": 33, "unsupport": 33, "operand": 33, "report_weight": [33, 64], "repetit": [33, 36, 40, 64], "yen": [33, 64], "yen1970": [33, 64], "feng": [33, 64], "feng2014": [33, 64], "browser": [33, 54], "gen_html_cod": [33, 54], "root_vertex": 33, "matrixtreetheorem": 33, "lih": 33, "hsing": 33, "hsu": 33, "cheng": 33, "kuan": 33, "lin": 33, "9032119259": 33, "8060634335": 33, "7092753594": 33, "steiner_tree_problem": 33, "first5": 33, "1701": 33, "my_label": [33, 51], "label1": 33, "label2": 33, "lazi": [33, 41, 46], "fake_label": 33, "paths2": 33, "vertex_properti": 33, "edge_properti": 33, "subgraphsearch": [33, 34], "i1": 33, "k_3": [33, 36, 59], "nonempti": [33, 59, 69], "k3": [33, 36, 68], "p3": 33, "240": [33, 36, 72], "t_5": 33, "t5": [33, 36], "t_3": 33, "t3": [33, 36], "subdigraph": 33, "k22": 33, "sep": [33, 51], "cuboctahedron": 33, "ambient_dim": 33, "glue": 33, "randrang": 33, "ph": 33, "understood": 33, "prop": 33, "wise": [33, 44], "timeit": 33, "micro": 33, "concern": 33, "625": 33, "wish": [33, 59], "dsc": 33, "polynomial_rational_flint": 33, "default_weight": 33, "820": 33, "graph_isom_equivalent_non_edge_labeled_graph": 33, "standard_label": 33, "return_relabel": 33, "return_edge_label": 33, "ignore_edge_label": 33, "helper": [33, 34, 36, 38, 48, 62], "computation": [33, 37], "aspect": [33, 36, 51], "enforc": 33, "former": [33, 69], "123": 33, "tachyon_vertex_plot": 33, "bradshaw": 34, "h_3": [34, 69], "techniqu": [34, 64], "binary_string_from_dig6": 34, "oacc": 34, "ooahca___": 34, "caogo": 34, "_o": 34, "a_c": 34, "g_ia": 34, "_qo": 34, "eg": [34, 38, 73], "ao": 34, "_dw": 34, "__o": 34, "aaoaacd": 34, "ac_g": 34, "0000000000000000000000000000001000000000010000000001000010000000000000000000110000000000000000010100000010000000000001000000000010000000000": 34, "10000000000000000000000000000000010000000001011011000000100000000001001110000000000000000000000000001000010010000001100000001000000001000000000100000000": 34, "q_": 34, "chd": 34, "gc": [34, 58], "cog": 34, "0000000000000000000001000000000000010000100000100000001000000000000000100000000100000": 34, "010000000000000100010000001000000000000000000000000000001010000000001011000000000000010010000000000000010000000000100000000001000001000000000000000001000000000000000000000000000000000000": 34, "binary_string_from_graph6": 34, "mck2015": 34, "g6": [34, 52], "binary_string_to_graph6": 34, "110111010110110010111000001100000001000000001": 34, "vuqwk": 34, "max_it": 34, "reset_bound": 34, "30000": 34, "backtrack_bound": 34, "find_path": 34, "restart": 34, "control": [34, 46, 51], "elaps": 34, "fh": 34, "00110": 34, "10100": 34, "01100": 34, "11000": 34, "01010": 34, "10010": 34, "00011": 34, "10001": 34, "00101": 34, "01001": 34, "int_to_binary_str": 34, "110000101": 34, "11111010111": 34, "layout_split": 34, "layout_funct": 34, "tight": 34, "clump": 34, "axi": [34, 51], "fit": [34, 37], "squish": 34, "length_and_string_from_graph6": 34, "aaoaa": 34, "cd": 34, "_c": 34, "small_integer_to_graph6": 34, "vpo": 34, "rescal": 34, "primarili": 34, "run_spr": 34, "raw": 34, "naiv": [34, 35, 55, 57], "cythonif": 34, "alon": [34, 39, 51], "transitive_reduction_acycl": 34, "moder": 35, "thousand": 35, "asymptot": 35, "involut": [35, 69], "ve": 35, "2g": 35, "throughout": [35, 51], "simple_connected_genus_backtrack": 35, "snappi": 35, "runtim": [35, 63, 68], "prod_": [35, 36], "deg": 35, "handili": 35, "k_6": 35, "millisecond": 35, "modern": 35, "hardwar": [35, 44], "k_7": 35, "dai": [35, 36], "bother": 35, "priori": [35, 69], "segfault": 35, "OR": 35, "hang": 35, "ON": 35, "record_embed": 35, "difficult": [35, 37], "millennia": 35, "finish": [35, 36], "min_genus_backtrack": 35, "simple_connected_graph_genu": 35, "WITH": 35, "springerlink": 35, "content": [35, 51, 54, 58], "0776127h0r7548v7": 35, "has_homomorphism_to": 36, "homomorph": 36, "independent_set_of_repres": 36, "pathwidth": [36, 45, 46], "rank_decomposit": [36, 44], "topological_minor": 36, "treelength": [36, 45], "treewidth": [36, 45, 46, 58], "tutte_polynomi": [36, 72], "bipartite_color": 36, "bipartite_doubl": 36, "sparse6_str": [36, 59], "write_to_ep": 36, "atoms_and_clique_separ": [36, 40, 45], "clique_complex": 36, "clique_polynomi": 36, "cliques_containing_vertex": 36, "cliques_get_clique_bipartit": 36, "cliques_get_max_clique_graph": 36, "cliques_maxim": 36, "cliques_number_of": 36, "cliques_vertex_clique_numb": 36, "fractional_clique_numb": 36, "chromatic_index": [36, 37], "chromatic_quasisymmetric_funct": 36, "quasisymmetr": 36, "chromatic_symmetric_funct": 36, "fractional_chromatic_index": [36, 37], "fractional_chromatic_numb": [36, 37], "bounded_outdegree_orient": 36, "degree_constrained_subgraph": 36, "ear_decomposit": 36, "ear": [36, 72], "gomory_hu_tre": 36, "gomori": 36, "hu": 36, "minimum_outdegree_orient": 36, "random_spanning_tre": [36, 68], "expans": 36, "cheeger_const": 36, "cheeger": 36, "edge_isoperimetric_numb": 36, "isoperimetr": 36, "vertex_isoperimetric_numb": 36, "apex_vertic": [36, 58], "apex": [36, 58], "is_antipod": 36, "is_arc_transit": 36, "is_cactu": 36, "cactu": 36, "is_circumscrib": 36, "circumscrib": 36, "is_cograph": 36, "cograph": [36, 58], "is_edge_transit": 36, "is_even_hole_fre": 36, "is_half_transit": 36, "is_inscrib": 36, "inscrib": 36, "is_long_antihole_fre": [36, 74], "is_long_hole_fre": [36, 74], "is_odd_hole_fre": 36, "is_overful": 36, "overful": 36, "is_partial_cub": [36, 63], "is_path": 36, "is_prim": 36, "is_semi_symmetr": 36, "is_split": [36, 58], "leftov": 36, "arbor": [36, 37], "common_neighbors_matrix": 36, "core": 36, "effective_resist": 36, "resist": 36, "effective_resistance_matrix": 36, "folded_graph": 36, "has_perfect_match": 36, "ihara_zeta_function_invers": 36, "ihara": 36, "zeta": 36, "is_factor_crit": 36, "kirchhoff_symanzik_polynomi": 36, "symanzik": 36, "least_effective_resist": 36, "lovasz_theta": [36, 60], "magnitude_funct": 36, "magnitud": 36, "maximum_average_degre": 36, "mad": 36, "modular_decomposit": [36, 43, 58], "most_common_neighbor": 36, "seidel_adjacency_matrix": [36, 50], "two_factor_petersen": 36, "lex_m": [36, 70], "lexm": [36, 70], "maximum_cardinality_search": [36, 70], "maximum_cardinality_search_m": [36, 40, 70], "mc": [36, 70], "william": [36, 48], "stein": [36, 48], "refactor": 36, "bug": [36, 44, 61], "tutori": [36, 38], "kirkmann": 36, "interior": [36, 51, 72], "bobbi": 36, "moretti": 36, "enhanc": 36, "awesom": 36, "stephen": 36, "hartk": 36, "mip": 36, "nicola": [36, 51], "thieri": 36, "birk": [36, 48, 74], "eisermann": [36, 48, 74], "antihol": [36, 74], "zuge": 36, "amritanshu": 36, "prasad": 36, "julian": 36, "r\u00fcth": 36, "upgrad": 36, "amanda": 36, "franci": 36, "caitlin": 36, "lienkaemp": 36, "kate": 36, "collin": 36, "rajat": 36, "mittal": 36, "wide": [36, 51], "akgsao": 36, "ci": 36, "escap": 36, "ih": 36, "gua": 36, "plai": 36, "peopl": 36, "graph_db_info": [36, 38], "gqg": [36, 38], "okg": [36, 38], "fa_pw": [36, 38], "feohw": [36, 38], "fgc": [36, 38], "fiaho": [36, 38], "rm": 36, "tex": [36, 51], "check_tkz_graph": [36, 51], "tikzpictur": [36, 51], "g_immut": 36, "graph_": 36, "mathemat": [36, 51, 60], "a_symmetric_matrix": 36, "a_nonsymmetric_matrix": 36, "obgkqegw": [36, 50, 52, 53], "a_seidel_matrix": 36, "another_graph": 36, "igmoqocuoqeb": 36, "edoaeq": 36, "pccssge": 36, "from_sparse6": [36, 50, 52], "got": 36, "9714": 36, "ma": 36, "mi": 36, "regular_symmetric_hadamard_matrix_with_constant_diagon": [36, 69], "rshcd": [36, 69], "peac": 36, "love": 36, "f_sym": 36, "f_nonsym": 36, "g_sym": 36, "g_nonsym": 36, "g_imm": 36, "h_imm": 36, "252": 36, "256": [36, 69], "apex_graph": 36, "k5": 36, "666": [36, 47], "rooted_tre": [36, 40], "bps2010": [36, 40, 70], "ty1984": [36, 40, 70], "labelledrootedtre": [36, 40], "s_c": [36, 40], "s_h": [36, 40], "ascii_art": [36, 40], "____": [36, 40], "__": [36, 40], "________": [36, 40], "_______": [36, 40], "______": [36, 40], "___": [36, 40], "_________": [36, 40], "_____": [36, 40], "untouch": 36, "bipartite_double_cov": 36, "wolframalpha": 36, "integer_ceil": 36, "republ": 36, "cameroon": 36, "quantiti": 36, "frontend": 36, "graph_color": [36, 37], "p_n": [36, 39], "dlx": [36, 37], "danc": [36, 37], "ineffici": 36, "speedwis": 36, "return_tree_basi": 36, "gordon": 36, "royl": 36, "isometr": [36, 63], "214": 36, "572": 36, "423": 36, "133": 36, "455": 36, "1353": 36, "2861": 36, "4275": 36, "4305": 36, "2606": 36, "704": 36, "x_g": 36, "sw2012": 36, "bc2018": 36, "sigma_1": 36, "sigma_n": 36, "asc": 36, "sigma_i": 36, "xg": 36, "to_symmetric_funct": 36, "is_symmetr": 36, "symmetricfunct": 36, "sta1995": 36, "powersum": 36, "schur": 36, "x_": [36, 37], "xg1": 36, "xg2": 36, "xg3": 36, "facet": 36, "bron": 36, "kerbosch": 36, "bk1973": 36, "insilab": 36, "clique_graph": 36, "independentset": [36, 57], "2x": 36, "speedup": 36, "surpris": [36, 57], "hex_color": [36, 37], "fooba": 36, "are_equal_color": 36, "terribl": 36, "seidman": 36, "1983": 36, "bolloba": 36, "1984": 36, "destruct": 36, "simplifi": [36, 63, 66], "aid": 36, "analysi": 36, "batagelj": 36, "et": [36, 58], "al": [36, 58], "filter": [36, 48, 68], "psw1996": 36, "degeneraci": 36, "bz2003": 36, "degeneracy_": 36, "random_matrix": 36, "nonzero_posit": 36, "rightarrow": 36, "all_on": 36, "eight": [36, 48], "7533": 36, "sch2013": 36, "chain": [36, 43], "exce": 36, "electr": 36, "ohm": 36, "resistor": 36, "resistance_dist": 36, "2000000000000000": 36, "59": 36, "g_d": 36, "gd": [36, 38, 52], "garbag": 36, "438": 36, "sam2012": 36, "ppl": [36, 37], "relax": [36, 37, 46], "chi_f": [36, 37], "alpha_1": [36, 37], "alpha_k": [36, 37], "alpha_i": [36, 37], "fractional_color": [36, 37], "r_": [36, 37], "Be": [36, 37, 55], "awar": [36, 37, 55], "23658": [36, 37], "23798": [36, 37], "check_compon": [36, 37], "check_bipartit": [36, 37], "optimum": [36, 37], "dualiti": [36, 37, 61], "cfkpr2010": [36, 37], "optimis": [36, 37], "hungri": [36, 37], "c_7": 36, "hu_tre": 36, "connected": 36, "ivuqwk": 36, "graph_homomorph": 36, "sent": 36, "lp_match": 36, "bccm": [36, 55], "approximation_factor": [36, 55], "additive_gap": [36, 55], "gromov": [36, 55], "gro1987": [36, 55], "s_3": [36, 55], "hyp": [36, 55], "ccl": [36, 55], "ccl2015": [36, 55], "fa": [36, 55], "sot2011": [36, 55], "overal": [36, 51, 55], "bccm2015": [36, 55], "delta_ub": [36, 55], "u3": [36, 55], "proposit": 36, "ss2008": 36, "ter2011": 36, "hst2001": 36, "independent_set_": [36, 57], "mcad": 36, "prove": [36, 46, 48, 55, 59, 62, 66, 69], "isr": 36, "cup_": 36, "abz2007": 36, "integer_floor": 36, "color_class": [36, 37], "classs": 36, "transitive_graph": 36, "biconnected_graph": 36, "cactus_graph": 36, "c6": 36, "naphthalen": [36, 48], "graph_decomposit": [36, 39, 40, 41, 42, 43, 44, 45, 46], "forget": [36, 42], "rivin": 36, "hrs1993": 36, "facial": [36, 48], "tt": 36, "stellat": 36, "character": 36, "bre2008": 36, "bisimplici": 36, "achrs2008": 36, "critical_graph": 36, "lr2004": 36, "seven_acre_wood": 36, "sec": 36, "uninscrib": 36, "isom": [36, 48, 59], "is_lin": [36, 59], "dahi": [36, 59], "overlin": [36, 44, 60, 61, 74], "u_1u_2u_3u_4u_5": [36, 74], "u_1u_2u_3u_4": [36, 74], "u_2u_3u_4u_5": [36, 74], "np2007": [36, 74], "cclsv2005": 36, "check_overfull_kn_even": 36, "check_overfull_kn_odd": 36, "pad": [36, 63], "uci": [36, 63], "epp2008": [36, 63], "partial_cub": [36, 63], "prism": [36, 63], "chi": [36, 37, 60], "subseteq_i": 36, "crst2006": 36, "steinitz": 36, "satz": 36, "st1922": 36, "polyhedra": 36, "polyhedral_graph": 36, "hm1979": [36, 43], "symmetric_graph": 36, "bls1999": 36, "203": 36, "d_1": 36, "d_n": 36, "d_i": 36, "nd_i": 36, "characteris": 36, "2k_2": 36, "forbidden_subgraph": [36, 58, 74], "isit": 36, "t_e": 36, "psi_g": 36, "substack": 36, "mar2009a": 36, "rectangular": 36, "t0": 36, "t1": [36, 43], "t4": 36, "u0": 36, "u1": 36, "u2": 36, "u4": 36, "coffe": 36, "bean": 36, "parachut": 36, "bro2011": 36, "compuet": 36, "lex_m_slow": [36, 70], "lex_m_fast": [36, 70], "rtl76": [36, 70], "is_valid_lex_m_ord": [36, 70], "lov\u00e1sz_numb": [36, 60], "csdp": [36, 60], "236068": [36, 60], "z_": 36, "expand": [36, 51], "exp": 36, "lein": 36, "leinster": 36, "857": 36, "905": 36, "crazi": [36, 59, 61], "million": [36, 61], "subtract": [36, 51, 61], "145": [36, 61], "prod": [36, 61], "matchpoli": [36, 61], "1260": [36, 61], "945": [36, 61], "630": [36, 61, 69], "3150": [36, 61], "4725": [36, 61], "990": [36, 61], "6930": [36, 61], "17325": [36, 61], "10395": [36, 61], "1485": [36, 61], "13860": [36, 61], "51975": [36, 61], "62370": [36, 61], "2145": [36, 61], "25740": [36, 61], "135135": [36, 61], "270270": [36, 61], "densest": 36, "max_": [36, 41, 45, 46, 55], "mad_g": 36, "mad_h": 36, "he2006": [36, 70], "increment": [36, 70], "unnumb": [36, 70], "bbhp2004": [36, 70], "occupi": [36, 70], "amoz2006": 36, "minor_": 36, "highli": 36, "k_4": [36, 48, 58, 59], "max_level": 36, "k5_minor": 36, "k33_minor": 36, "increasingli": [36, 39], "submodul": [36, 43], "crash": [36, 44], "leftrightarrow": 36, "v_m": 36, "loss": 36, "anticompon": 36, "anticonnect": 36, "composit": 36, "michel": [36, 55], "habib": [36, 43], "christoph": 36, "paul": 36, "hp2010": 36, "pendant": 36, "__seri": 36, "___parallel": 36, "maurer": [36, 43], "buggi": 36, "tchp2008": 36, "25872": 36, "bab": [36, 46], "max_prefix_length": [36, 46], "max_prefix_numb": [36, 46], "1000000": [36, 46, 55], "vertex_separ": [36, 41, 45, 46], "pw": [36, 46], "decomp": [36, 46], "mpc": 36, "output_as_graph": [36, 68], "aldou": [36, 68], "broder": [36, 68], "bro1989": [36, 68], "ald1990": [36, 68], "met": [36, 68], "proportionali": [36, 68], "rg": [36, 68], "rankwidth": [36, 44], "decomposition_tre": [36, 44], "ternari": [36, 44], "2a": 36, "ordinari": 36, "minpoli": 36, "dsd": 36, "elsewher": [36, 51], "rt1975a": [36, 68], "da": 36, "en": 36, "adapt": [36, 62], "publish": [36, 62], "cgmrv16": [36, 62], "preprocess": [36, 62, 68], "launch": [36, 62], "neither": [36, 43, 62], "dg2006": [36, 45], "bag": [36, 45, 46], "dist_g": [36, 45], "tl": [36, 45], "tree_decomposit": [36, 45], "deduc": [36, 39, 44, 45, 58], "path_decomposit": [36, 45, 46], "kmin": [36, 45], "tdlib": [36, 45], "edge_selector": [36, 72], "recurr": [36, 72], "114": [36, 72], "170": [36, 69, 72], "evalu": [36, 41, 46, 69, 72], "polynomialr": [36, 72], "c_r": 36, "ditto": 36, "magnifi": 36, "usepackag": [36, 51], "preambl": [36, 51], "includegraph": 36, "pdflatex": [36, 51], "xelatex": 36, "ps2pdf": 36, "all_graph_color": 37, "first_color": 37, "number_of_n_color": 37, "numbers_of_color": 37, "grundy_color": 37, "grundi": 37, "b_color": 37, "round_robin": 37, "round": 37, "robin": 37, "linear_arbor": 37, "acyclic_edge_color": 37, "carlo": 37, "hamalainen": 37, "tester": 37, "random_all_graph_color": 37, "_a": 37, "count_onli": 37, "vertex_color_dict": 37, "cast": 37, "knuth": 37, "hitotumatu": 37, "noshita": 37, "hex": [37, 51], "scan": 37, "staff": 37, "stanford": 37, "uno": 37, "gz": 37, "chi_b": 37, "meanwhil": 37, "nb_color": 37, "vize": 37, "mg1992": 37, "sake": 37, "ideal": 37, "easiest": [37, 51], "tediou": 37, "job": [37, 59], "7f00ff": 37, "7fff00": 37, "heavili": 37, "plus_on": 37, "la": [37, 69], "aki1980": 37, "graphdatabas": 38, "genericgraphqueri": 38, "sqlite": 38, "sqldatabas": 38, "sql_db": 38, "get_skeleton": 38, "genericsqldatabas": 38, "brigham": 38, "young": 38, "onlin": 38, "artsci": 38, "drake": 38, "graph_databas": 38, "query_str": 38, "param_tupl": 38, "sqlqueri": 38, "sql": 38, "info": 38, "advic": 38, "safer": 38, "exemplifi": 38, "graph_id": 38, "graph_data": 38, "primari": [38, 51], "familiar": [38, 53], "aut_grp": 38, "aut_grp_siz": 38, "primary_kei": 38, "edge_transit": 38, "num_fixed_point": 38, "num_orbit": 38, "vertex_transit": 38, "degrees_sd": 38, "max_degre": 38, "min_degre": 38, "complement_graph6": 38, "lovasz_numb": 38, "num_cycl": 38, "num_hamiltonian_cycl": 38, "independence_numb": 38, "min_vertex_cover_s": 38, "num_compon": 38, "num_cut_vertic": 38, "num_spanning_tre": 38, "eigenvalues_sd": 38, "energi": 38, "max_eigenvalu": 38, "min_eigenvalu": 38, "interactive_queri": 38, "python3": 38, "manipul": [38, 51], "annoi": 38, "jupyt": [38, 47], "notebook": [38, 47, 51, 52], "query_dict": 38, "press": 38, "num": 38, "cb": 38, "cj": 38, "ck": 38, "cn": [38, 48], "dbw": 38, "dbg": 38, "dbk": 38, "dik": 38, "dk": 38, "dlo": 38, "d_k": 38, "dw": 38, "fg": 38, "ko": [38, 52], "kw": 38, "lo": 38, "lw": [38, 51], "ng": 38, "hw": 38, "ow": 38, "qw": 38, "yo": 38, "egcw": 38, "e_cg": 38, "e_cw": 38, "e_ko": 38, "gw": [38, 52], "hg": 38, "jg": 38, "wo": 38, "ww": 38, "xo": [38, 52], "xw": 38, "zg": 38, "cjg": 38, "cpw": 38, "cz": 38, "c_w": 38, "caw": 38, "ch_": 38, "cqo": 38, "lcg": 38, "fk": 38, "graph_db": 38, "table_nam": 38, "tblname": 38, "col1": 38, "col2": 38, "col": 38, "regexp": [38, 66], "one_of": 38, "all_of": 38, "number_of": [38, 57], "query_iter": 38, "max_field_s": 38, "with_pictur": 38, "prompt": 38, "grp": 38, "reformat": 38, "211": 38, "222": 38, "2211": 38, "2222": 38, "21111": 38, "22211": 38, "22222": 38, "221111": 38, "222211": 38, "222222": 38, "2111111": 38, "2221111": 38, "2222211": 38, "2222222": 38, "data_to_degseq": 38, "3221": 38, "degseq_to_data": 38, "graph6_to_plot": 38, "preset": [38, 53], "tablenam": 38, "subgraphs_to_queri": 38, "get_query_str": 38, "spanner": 39, "tightli": 39, "byproduct": 39, "clique_separ": 40, "make_labelled_rooted_tre": 40, "make_tre": 40, "cutwidth_dyn": 41, "dynam": 41, "cutwidth_milp": 41, "width_of_cut_decomposit": 41, "task": [41, 46, 51], "lazili": [41, 46], "discov": [41, 46], "lot": [41, 46, 51], "min_": [41, 46], "vertex_separation_exp": [41, 46], "4gb": [41, 46], "x_v": [41, 46], "y_": 41, "x_u": 41, "alignat": [41, 46], "intertext": 41, "quad": 41, "2015": [41, 46, 55, 60], "cut_off": [41, 46], "lower_bound": [41, 46], "cwe": 41, "cw_l": 41, "watch": 42, "elect": 42, "francoi": 42, "holland": 42, "tv": 42, "hh": 42, "g_1": 42, "g_k": 42, "handbook": 42, "hik2011": 42, "li": [42, 59], "contradict": [42, 63], "u_1u_2": 42, "u_2u_3": 42, "criterion": 42, "corollari": [42, 69], "ux": 42, "xv": 42, "x_k": [42, 45], "u_g": 42, "u_h": 42, "v_g": 42, "d_h": 42, "rewritten": 42, "node_typ": 43, "no_split": 43, "left_split": 43, "right_split": 43, "both_split": 43, "phase": 43, "propag": 43, "ancestor": 43, "nodetyp": 43, "node_split": 43, "nodesplit": 43, "index_in_root": 43, "promot": 43, "comp_num": 43, "is_separ": 43, "has_left_split": 43, "set_node_split": 43, "has_right_split": 43, "vertexposit": 43, "left_of_sourc": 43, "right_of_sourc": 43, "children_node_typ": 43, "print_md_tre": 43, "create_normal_nod": 43, "create_parallel_nod": 43, "create_prime_nod": 43, "create_series_nod": 43, "either_connected_or_not_connect": 43, "vertices_in_modul": 43, "equivalent_tre": 43, "root1": 43, "root2": 43, "nested_tuple_to_tre": 43, "form_modul": 43, "other_index": 43, "module_form": 43, "gamma_class": 43, "fragil": 43, "get_module_typ": 43, "component_root": 43, "series_nod": 43, "parallel_nod": 43, "habib_maurer_algorithm": 43, "g_class": 43, "bm1983": 43, "marc": 43, "tedder": 43, "test_modular_decomposit": 43, "md_tree_to_graph": 43, "md": 43, "tup1": 43, "tree1": 43, "tree_to_nested_tupl": 43, "permute_decomposit": 43, "random_md_tre": 43, "max_depth": 43, "max_fan_out": 43, "leaf_prob": 43, "recreate_decomposit": 43, "recreat": 43, "relabel_tre": 43, "tuple_tre": 43, "test_gamma_modul": 43, "prob": 43, "test_maximal_modul": 43, "m_3": 43, "m_n": 43, "test_modul": 43, "philipp": 44, "klau": 44, "kraus": 44, "rw_g": 44, "rw": 44, "sang": 44, "il": 44, "oum": 44, "oum2009": 44, "sopra": 44, "una": 44, "numerica": 44, "ernesto": 44, "buckl": 44, "lybanon": 44, "bl1977": 44, "mask": 44, "adam": 44, "aw2006": 44, "upstream": 44, "experi": 44, "mkgraph": 44, "x_t": 45, "x_j": 45, "tw": 45, "diminish": 45, "lokshtanov2009": 45, "is_valid_tree_decomposit": 45, "reduced_tree_decomposit": 45, "width_of_tree_decomposit": 45, "treelengthconnect": 45, "get_length": 45, "get_tree_decomposit": 45, "is_less_than_k": 45, "x1": 45, "x2": 45, "x3": 45, "issuperset": 45, "set_object_enumer": 45, "treelength_lowerbound": 45, "kinnerslei": 46, "kin1992": 46, "bodlaend": 46, "bod1998": 46, "vertex_separation_milp": 46, "vertex_separation_bab": 46, "is_valid_ord": 46, "width_of_path_decomposit": 46, "linear_ordering_to_path_decomposit": 46, "decad": 46, "_n": 46, "sp2010": 46, "aim": 46, "s_t": 46, "y_v": 46, "u_v": 46, "x_w": 46, "principl": 46, "cmn2014": 46, "cal": 46, "_p": 46, "ub": 46, "upper_bound": 46, "scip": 46, "pyscipopt": 46, "seq": [46, 66], "vb": 46, "seqb": 46, "vd": 46, "seqd": 46, "impact": 46, "vse": 46, "pw_l": 46, "vs_l": 46, "phitigra": 47, "jupyterlab": 47, "radoslav": 47, "kirov": 47, "old": [47, 58], "graph_editor": 47, "display_opt": 47, "jfraymond": 47, "canva": 47, "get_graph": 47, "default_radiu": 47, "default_vertex_color": 47, "orang": 47, "default_edge_color": 47, "show_vertex_label": 47, "ascend": 48, "nauty_genbg": 48, "planar_graph": 48, "cospectral_graph": 48, "plantri_gen": 48, "quadrangul": 48, "fulleren": 48, "fusen": 48, "quadric": 48, "varieti": 48, "degreesequ": 48, "degreesequenceconfigurationmodel": 48, "degreesequencetre": 48, "degreesequencebipartit": 48, "degreesequenceexpect": 48, "hyperstar": 48, "bubblesort": 48, "edward": 48, "scheinerman": 48, "ed": 48, "minh": 48, "nguyen": 48, "keshav": 48, "kini": 48, "benzenoid": 48, "marco": 48, "cognetta": 48, "possess": 48, "a033995": 48, "88": [48, 51], "303": 48, "a000088": 48, "156": 48, "a000666": 48, "a002851": 48, "surviv": 48, "8458": 48, "journal": 48, "februari": 48, "1998": 48, "deg_sequ": 48, "havel": 48, "hakimi": 48, "resort": 48, "cl1996": 48, "gale": 48, "ryser": 48, "pseudograph": 48, "new2003": 48, "cl2002": 48, "home": 48, "git": 48, "matrix_funct": 48, "0x7f1037e35a20": 48, "spectra": [48, 69], "sublist": 48, "glist": [48, 52], "dr": 48, "ds_": 48, "six": 48, "ep__": 48, "er": 48, "exgg": 48, "exog": 48, "gipc": 48, "giqcc": 48, "edq_": 48, "ercg": 48, "exoo": 48, "ezcg": 48, "dinversea": 48, "change_r": 48, "rescale_row": 48, "nonzero_positions_in_row": 48, "dlg": 48, "cpython": 48, "310": 48, "x86_64": 48, "linux": 48, "gnu": 48, "ipr": 48, "buckygen": 48, "bgm2012": 48, "254": 48, "1812": 48, "textrm": 48, "buckminst": 48, "hexagon_count": 48, "benzen": 48, "bch2002": 48, "polycycl": 48, "hydrocarbon": 48, "lattic": 48, "6505": 48, "geng": 48, "mine": 48, "neighbourhood": 48, "maxima": 48, "stderr": 48, "biparrtit": 48, "a005142": 48, "usag": 48, "vq": 48, "lzf": 48, "absenc": 48, "1044": 48, "a001349": 48, "853": 48, "d0d3": 48, "minimum_degre": 48, "minimum_connect": 48, "exact_connect": 48, "minimum_edg": 48, "maximum_edg": 48, "maximum_face_s": 48, "only_bipartit": 48, "plantri": 48, "bm2007": 48, "abstract": 48, "compulsori": 48, "nd": 48, "suffix": [48, 64], "stage": 48, "m3": 48, "bp": [48, 51], "pb": 48, "m4": 48, "m5": 48, "f3": 48, "appolonian": 48, "absent": 48, "guid": 48, "a113201": 48, "cmd": 48, "qm2c2": 48, "803": 48, "no_nonfacial_quadrangl": 48, "partli": [48, 69], "unspecifi": [48, 69], "href": [48, 69], "srgtabref": [48, 69], "gavrilyukmakhnev05": [48, 69], "gavrilyuk": [48, 69], "makhnev": [48, 69], "1394": [48, 69], "figur": [48, 69], "2058": [48, 69], "242": [48, 69], "91": [48, 69], "only_eulerian": 48, "a081621": 48, "627": 48, "canaug_traverse_edg": 48, "aut_gen": 48, "dig": 48, "canaug_traverse_vert": 48, "max_vert": 48, "retreat": 48, "check_aut": 48, "cut_vert": 48, "morphism": 48, "canaug_travers": 48, "check_aut_edg": 48, "cut_edg": 48, "from_adjacency_matrix": 50, "from_dict_of_dict": 50, "from_dict_of_list": 50, "from_dig6": 50, "from_graph6": [50, 52], "from_incidence_matrix": 50, "from_networkx_graph": 50, "from_oriented_incidence_matrix": 50, "from_seidel_adjacency_matrix": 50, "graph_input": 50, "g6_string": 50, "ihea": 50, "guao": [50, 52], "gnx": 50, "multiedgedataview": 50, "emploi": 51, "fidel": 51, "barerra": 51, "cruz": 51, "tkz": 51, "thi\u00e9ri": 51, "typeset": 51, "checkbox": 51, "alain": 51, "matth": 51, "ctan": 51, "carefulli": 51, "broad": 51, "perimet": 51, "shade": 51, "configur": 51, "thick": [51, 53, 54], "curv": [51, 54], "arrowhead": 51, "compass": 51, "dvipng": 51, "sty": 51, "beyond": 51, "scope": 51, "sourceforg": 51, "net": 51, "imagemagick": 51, "session": 51, "setup": 51, "graphic_s": 51, "edge_thick": [51, 53, 54], "green": [51, 53, 64, 67], "vertex_label_color": 51, "incorpor": 51, "standalon": 51, "definecolor": 51, "cv0": 51, "502": 51, "cfv0": 51, "clv0": 51, "cv1": 51, "cfv1": 51, "clv1": 51, "cv2": 51, "cfv2": 51, "clv2": 51, "cv3": 51, "cfv3": 51, "clv3": 51, "cv4": 51, "cfv4": 51, "clv4": 51, "cv5": 51, "cfv5": 51, "clv5": 51, "cv6": 51, "cfv6": 51, "clv6": 51, "cv7": 51, "cfv7": 51, "clv7": 51, "cv8": 51, "cfv8": 51, "clv8": 51, "cv9": 51, "cfv9": 51, "clv9": 51, "cv10": 51, "cfv10": 51, "clv10": 51, "cv11": 51, "cfv11": 51, "clv11": 51, "cv12": 51, "cfv12": 51, "clv12": 51, "cv13": 51, "cfv13": 51, "clv13": 51, "cv0v1": 51, "cv0v5": 51, "cv0v13": 51, "cv1v2": 51, "cv1v10": 51, "cv2v3": 51, "cv2v7": 51, "cv3v4": 51, "cv3v12": 51, "cv4v5": 51, "cv4v9": 51, "cv5v6": 51, "cv6v7": 51, "cv6v11": 51, "cv7v8": 51, "cv8v9": 51, "cv8v13": 51, "cv9v10": 51, "cv10v11": 51, "cv11v12": 51, "cv12v13": 51, "2cm": 51, "labelout": 51, "hbox": 51, "5cm": 51, "0cm": 51, "v0": 51, "3874cm": 51, "7524cm": 51, "4952cm": 51, "0587cm": 51, "0563cm": 51, "9437cm": 51, "v4": 51, "9413cm": 51, "v5": 51, "2476cm": 51, "v6": 51, "v7": 51, "6126cm": 51, "v8": 51, "5048cm": 51, "v9": 51, "v10": 51, "v11": 51, "v12": 51, "v13": 51, "04cm": 51, "tkz_graph": 51, "graphinit": 51, "vstyle": 51, "art": 51, "bevel": 51, "u_v_label": 51, "dump": 51, "dot2tex_pictur": 51, "node_": 51, "13624": 51, "3333": 51, "strokecol": 51, "pgfsetstrokecolor": 51, "my": 51, "char": 51, "25120": 51, "tkz_pictur": 51, "option_nam": 51, "__graphlatex_opt": 51, "bad_nam": 51, "_latex_": 51, "unmodifi": 51, "1cm": 51, "22070": 51, "g_with_label": 51, "fillcol": 51, "pgfsetfillcolor": 51, "filldraw": 51, "option_valu": 51, "effort": 51, "cm": 51, "mm": 51, "pt": 51, "ex": 51, "dimensionless": 51, "accustom": 51, "shrink": 51, "font": 51, "margin": 51, "plain": 51, "trim": 51, "outlin": [51, 69], "2d87a7": 51, "rgbcmykw": 51, "addition": 51, "grayscal": 51, "supersed": 51, "vertex_fill_color": 51, "vertex_labels_math": 51, "dollar": 51, "textual": 51, "_repr": 51, "robust": 51, "vertex_label_plac": 51, "exterior": 51, "spirit": 51, "edge_fil": 51, "highlight": 51, "edge_fill_color": 51, "edge_labels_math": 51, "edge_label_color": 51, "edge_label_slop": 51, "edge_label_plac": 51, "midpoint": 51, "loop_plac": 51, "north": 51, "south": 51, "east": 51, "ea": 51, "global": 51, "unrecogn": 51, "nonsens": 51, "pgf": 51, "unpack": 51, "usr": 51, "texmf": 51, "older": 51, "texhash": 51, "_option": 51, "cv0v2": 51, "environ": 51, "check_fil": 51, "have_tkz_graph": 51, "tikz": 51, "has_fil": 51, "setup_latex_preambl": 51, "add_package_to_preamble_if_avail": 51, "to_graphics_arrai": 52, "graph_list": 52, "stream": 52, "ugagg": 52, "gglkcmo": 52, "xsggwow": 52, "hqkhqojykc_uhwgx": 52, "tqika": 52, "saoecea": 52, "cbac_acd": 52, "abdhaeh_": 52, "bf_": 52, "chik_": 52, "bcehkl_bikm_bfghi": 52, "b_ooscge_": 52, "owondbo": 52, "gojbdo": 52, "_ssjdapcoig": 52, "og_ukebg": 52, "_skf": 52, "ccba": 52, "oymfp": 52, "qaa": 52, "xemhdb": 52, "hmcbcbq": 52, "echecakkqkfpowo": 52, "pidq": 52, "kihecqpokvkew_wmnkqpwwcrkoowskigcqhwt": 52, "___wmjfcahwzeba": 52, "mpppkqynooookhhdbp": 52, "__gwmkecahkgtlerqa": 52, "kvler": 52, "xc": 52, "nggwsojidbhh": 52, "af": 52, "from_whatev": 52, "readabl": 52, "fobj": 52, "nicer": 52, "to_graph6": 52, "output_list": 52, "quietli": 52, "shchgd": 52, "c_ggg": 52, "gk_": 52, "nihea": 52, "999": 52, "garrai": 52, "ncol": 52, "to_sparse6": 52, "abcad": 52, "fg_hijhkfldmkncojp_bq": 52, "prefil": 53, "unavail": 53, "linestyl": 53, "dashdot": 53, "loop_siz": 53, "max_dist": 53, "frame": 53, "default_plot_opt": 53, "default_show_opt": 53, "overrul": 53, "reset": 53, "perman": 53, "startup": 53, "script": 53, "implicitli": 53, "587": 53, "809": 53, "vertex_opt": 53, "menu": 54, "strength": 54, "barycent": 54, "charg": 54, "link_dist": 54, "link_strength": 54, "graviti": 54, "d3j": 54, "protect": 54, "privaci": 54, "lack": 54, "offlin": 54, "tooltip": 54, "bl": 54, "ock": 54, "bentwonk": 54, "2514276": 54, "zoom": 54, "scroll": 54, "mbostock": 54, "3681006": 54, "brice": 54, "onfroi": 54, "juli": 54, "thierri": 54, "monteil": 54, "june": 54, "graph_plot_j": 54, "vertex_partit": 54, "edge_partit": 54, "force_spring_layout": 54, "repuls": 54, "fiv2012": 55, "harder": 55, "2dist": 55, "proven": 55, "hyperbolicity_distribut": 55, "borassi": 55, "karan": 55, "desai": 55, "typo": 55, "sampling_s": 55, "hdict": 55, "completeuniform": 56, "uniformrandomuniform": 56, "hyperedg": 56, "hypergraph_gener": 56, "hypergraphgener": 56, "binomialrandomuniform": 56, "19600": 56, "number_of_set": 56, "number_of_vertic": 56, "multiple_set": 56, "vertex_min_degre": 56, "vertex_max_degre": 56, "set_max_s": 56, "set_min_s": 56, "max_intersect": 56, "genbgl": 56, "inclusionwis": [57, 59], "im": 57, "is4": 57, "graphclass": 58, "ridder": 58, "truth": 58, "gc_32": 58, "colour": 58, "show_al": 58, "gc_309": 58, "gc_541": 58, "gc_215": 58, "gc_5": 58, "gc_3": 58, "brittl": 58, "gc_6": 58, "gc_7": 58, "get_class": 58, "benefit": 58, "clawfre": 58, "gc_441": 58, "polyhedr": 58, "unitdisk": 58, "unitinterv": 58, "gc_249": 58, "cliquewidth": 58, "inclusion_digraph": 58, "gc_990": 58, "gc_991": 58, "gc_992": 58, "gc_993": 58, "gc_994": 58, "gc_995": 58, "gc_996": 58, "gc_997": 58, "gc_998": 58, "gc_999": 58, "gc1": 58, "gc2": 58, "superclass": 58, "bip_id": 58, "_gc_id": 58, "perfect_id": 58, "gc_56": 58, "gc_76": 58, "gc_69": 58, "unimodular": 58, "gc_274": 58, "demand": 58, "xml": 58, "_class": 58, "_inclus": 58, "_inclusion_digraph": 58, "strict": 58, "accessor": 58, "gc_id": 58, "recognition_funct": 58, "cachedrepresent": 58, "gc_62": 58, "uniquerepresent": 58, "gc_151": 58, "update_db": 58, "gc_1": 58, "super": 58, "gc_2": 58, "2c_4": 58, "2k_3": 58, "fish": 58, "pars": 58, "credenti": 58, "directori": 58, "sage_db": 58, "folder": 58, "root_graph": 59, "listen": 59, "nina": 59, "simon": 59, "knew": 59, "song": 59, "prendr": 59, "ta": 59, "douleur": 59, "26444": 59, "whi1932": 59, "har1969": 59, "stare": 59, "intent": 59, "s_v": 59, "beinek": 59, "bei1970": 59, "lov1979": 60, "complete_poli": 61, "flint": 61, "fmpz_poly_t": 61, "sped": 61, "1309458150": 61, "406824": 61, "kolja": 62, "knauer": 62, "petru": 62, "valicov": 62, "2017": 62, "mit": 63, "licens": 63, "token": 63, "2d_g": 63, "undecid": 63, "virtu": 63, "bring": 63, "closer": 63, "breadth_first_level_search": 63, "depth_first_travers": 63, "edgetyp": 63, "wv": 63, "yen_k_shortest_simple_path": 64, "feng_k_shortest_simple_path": 64, "path_enumer": 64, "firstli": 64, "deviat": 64, "candid": 64, "classif": 64, "classifi": 64, "yellow": 64, "subpath": 64, "27s_algorithm": [64, 68], "deprec": [65, 73], "pattern": 66, "c_k": 66, "c_x": 66, "_x": 66, "hajiaghayi": 66, "haj2000": 66, "pq_tree": 66, "5040": 66, "set_contigu": 66, "1440": 66, "align": 66, "unalign": 66, "number_of_children": 66, "lock": 66, "reorder_set": 66, "reorder": 66, "s_j": 66, "s_l": 66, "ofset": 66, "walter": 67, "sch1990": 67, "jonathan": 67, "bober": 67, "treenod": 67, "_realiz": 67, "_compute_coordin": 67, "tn": 67, "tn2": 67, "tn3": 67, "append_child": 67, "compute_number_of_descend": 67, "number_of_descend": 67, "compute_depth_of_self_and_children": 67, "minimal_schnyder_wood": 67, "root_edg": 67, "wood": 67, "bre2000": 67, "newg": 67, "newg2": 67, "jnc2010": 68, "toggl": 68, "prior": 68, "727": 68, "sah2000": 68, "threshold": 68, "10000": 68, "quicksort": 68, "filter_kruskal_iter": 68, "kruskal_iter": 68, "sanit": 68, "599": 68, "601": 68, "gt2001": 68, "sfo": 68, "2704": 68, "1846": 68, "dfw": 68, "1464": 68, "lax": 68, "867": 68, "jfk": 68, "mia": 68, "1258": 68, "pvd": 68, "849": 68, "740": 68, "bwi": 68, "621": 68, "802": 68, "1391": 68, "1121": 68, "1235": 68, "2342": 68, "1090": 68, "946": 68, "568": 68, "569": 68, "clrs2001": 68, "kruskal_iterator_from_edg": 68, "union_find": 68, "disjointset_of_hash": 68, "union_set": 68, "disjointset": 68, "cp2016": 69, "srg_100_44_18_20": 69, "delta_1": 69, "jk2003": 69, "srg_100_45_20_20": 69, "gamma_3": 69, "srg_105_32_4_12": 69, "coo2006": 69, "srg_120_63_30_36": 69, "srg_120_77_52_44": 69, "srg_126_25_8_4": 69, "srg_126_50_13_24": 69, "srg_175_72_20_36": 69, "10b": 69, "vii": 69, "srg_1288_792_476_504": 69, "1288": 69, "792": 69, "476": 69, "504": 69, "binarygolaycod": 69, "be1992": 69, "strongly_regular_from_two_weight_cod": 69, "srg_144_39_6_12": 69, "2808": 69, "pgl_3": 69, "iv": 69, "mcl": 69, "srg_176_105_68_54": 69, "srg_176_49_12_14": 69, "bro1982": 69, "srg_176_90_38_54": 69, "srg_196_91_42_42": 69, "is2006": 69, "srg_210_99_48_45": 69, "kprwz2010": 69, "s_7": 69, "megr": 69, "srg_220_84_38_28": 69, "bibd_45_9_8": 69, "designhandbook": 69, "srg_243_110_37_60": 69, "ternarygolaycod": 69, "gs1975": 69, "srg_253_140_87_65": 69, "253": 69, "srg_276_140_58_84": 69, "276": 69, "ht1996": 69, "srg_280_117_44_52": 69, "rosa": 69, "mr1985": 69, "_3": 69, "_j": 69, "srg_280_135_70_60": 69, "srg_416_100_36_20": 69, "g_2": 69, "srg_560_208_72_80": 69, "560": 69, "208": 69, "sz": 69, "srg_630_85_20_10": 69, "srg_from_rshcd": 69, "377": 69, "182": 69, "152": 69, "2592": 69, "apparently_feasible_paramet": 69, "skip": 69, "small_feas": 69, "eigenmatrix": 69, "unequ": 69, "3rd": 69, "vp": 69, "bi1984": 69, "confer": 69, "is_gqqmqp": 69, "is_no_f2": 69, "is_no_f3": 69, "is_noodd": 69, "is_noperp_f5": 69, "is_nu": 69, "is_rshcd": 69, "is_affine_polar": 69, "is_complete_multipartit": 69, "cyfunct": 69, "completemultipartitesrg": 69, "is_cossidente_penttila": 69, "cossidentepenttila": 69, "is_haem": 69, "is_johnson": 69, "pseudocycl": 69, "83205": 69, "muzychuk": 69, "l_m": 69, "graph_4": 69, "skewhad": 69, "2_4": 69, "is_orthogonal_polar": 69, "srghub": 69, "is_palei": 69, "is_polhil": 69, "pol2009": 69, "1024": 69, "polhil": 69, "76": 69, "330": 69, "is_stein": 69, "is_switch_oa_srg": 69, "_4": 69, "is_taylor_twograph_srg": 69, "is_twograph_descendant_of_srg": 69, "k0": 69, "k_0": 69, "2wf02": 69, "is_unitary_dual_polar": 69, "u_5": 69, "is_unitary_polar": 69, "latin_squares_graph_paramet": 69, "l_g": 69, "strongly_regular_from_two_intersection_set": 69, "cd2013": 69, "homogen": 69, "ls1981": 69, "del1972": 69, "100022021001111": 69, "010011211122000": 69, "001021112100011": 69, "000110120222220": 69, "linearcod": 69, "strongly_regular_graph_lazi": 69, "promis": 69, "induct": 70, "p_k": 70, "q_1": 70, "q_2": 70, "q_l": 70, "l_2": 70, "q_i": 70, "q_j": 70, "wrom1986": 71, "treeiter": 71, "check_tre": 71, "7741": 71, "hpr2010": 72, "jernej": 72, "azarija": 72, "tweak": 72, "sum_h": 72, "end_point": 72, "v_3": 72, "lift": 72, "find_ear": 72, "unlabeled_edg": 72, "removed_from": 72, "context": 72, "edgeselect": 72, "maximizedegre": 72, "minimizedegre": 72, "minimizesingledegre": 72, "vertexord": 72, "inverse_ord": 72, "contracted_edg": 72, "went": 72, "edge_multipl": 72, "removed_edg": 72, "restor": 72, "removed_loop": 72, "removed_multiedg": 72, "underlying_graph": 72, "membership": 73, "littl": 73, "fastest": 73, "ee": 73, "eh": 73, "e1": 73, "anticycl": 74, "weakly_chord": 74}, "objects": {"sage.combinat.designs": [[1, 0, 0, "-", "incidence_structures"]], "sage.combinat.designs.incidence_structures": [[1, 1, 1, "", "IncidenceStructure"]], "sage.combinat.designs.incidence_structures.IncidenceStructure": [[1, 2, 1, "", "automorphism_group"], [1, 2, 1, "", "block_sizes"], [1, 2, 1, "", "blocks"], [1, 2, 1, "", "canonical_label"], [1, 2, 1, "", "coloring"], [1, 2, 1, "", "complement"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "degree"], [1, 2, 1, "", "degrees"], [1, 2, 1, "", "dual"], [1, 2, 1, "", "edge_coloring"], [1, 2, 1, "", "ground_set"], [1, 2, 1, "", "incidence_graph"], [1, 2, 1, "", "incidence_matrix"], [1, 2, 1, "", "induced_substructure"], [1, 2, 1, "", "intersection_graph"], [1, 2, 1, "", "is_berge_cyclic"], [1, 2, 1, "", "is_connected"], [1, 2, 1, "", "is_generalized_quadrangle"], [1, 2, 1, "", "is_isomorphic"], [1, 2, 1, "", "is_regular"], [1, 2, 1, "", "is_resolvable"], [1, 2, 1, "", "is_simple"], [1, 2, 1, "", "is_spread"], [1, 2, 1, "", "is_t_design"], [1, 2, 1, "", "is_uniform"], [1, 2, 1, "", "isomorphic_substructures_iterator"], [1, 2, 1, "", "num_blocks"], [1, 2, 1, "", "num_points"], [1, 2, 1, "", "packing"], [1, 2, 1, "", "rank"], [1, 2, 1, "", "relabel"], [1, 2, 1, "", "trace"]], "sage.graphs": [[2, 0, 0, "-", "asteroidal_triples"], [12, 0, 0, "-", "bipartite_graph"], [13, 0, 0, "-", "centrality"], [14, 0, 0, "-", "cliquer"], [15, 0, 0, "-", "comparability"], [16, 0, 0, "-", "connectivity"], [17, 0, 0, "-", "convexity_properties"], [18, 0, 0, "-", "digraph"], [19, 0, 0, "-", "digraph_generators"], [20, 0, 0, "-", "distances_all_pairs"], [21, 0, 0, "-", "domination"], [22, 0, 0, "-", "edge_connectivity"], [33, 0, 0, "-", "generic_graph"], [34, 0, 0, "-", "generic_graph_pyx"], [35, 0, 0, "-", "genus"], [36, 0, 0, "-", "graph"], [37, 0, 0, "-", "graph_coloring"], [38, 0, 0, "-", "graph_database"], [47, 0, 0, "-", "graph_editor"], [48, 0, 0, "-", "graph_generators"], [49, 0, 0, "-", "graph_generators_pyx"], [50, 0, 0, "-", "graph_input"], [51, 0, 0, "-", "graph_latex"], [52, 0, 0, "-", "graph_list"], [53, 0, 0, "-", "graph_plot"], [54, 0, 0, "-", "graph_plot_js"], [55, 0, 0, "-", "hyperbolicity"], [56, 0, 0, "-", "hypergraph_generators"], [57, 0, 0, "-", "independent_sets"], [58, 0, 0, "-", "isgci"], [59, 0, 0, "-", "line_graph"], [60, 0, 0, "-", "lovasz_theta"], [61, 0, 0, "-", "matchpoly"], [62, 0, 0, "-", "orientations"], [63, 0, 0, "-", "partial_cube"], [64, 0, 0, "-", "path_enumeration"], [65, 0, 0, "-", "planarity"], [66, 0, 0, "-", "pq_trees"], [67, 0, 0, "-", "schnyder"], [68, 0, 0, "-", "spanning_tree"], [69, 0, 0, "-", "strongly_regular_db"], [70, 0, 0, "-", "traversals"], [71, 0, 0, "-", "trees"], [72, 0, 0, "-", "tutte_polynomial"], [73, 0, 0, "-", "views"], [74, 0, 0, "-", "weakly_chordal"]], "sage.graphs.asteroidal_triples": [[2, 3, 1, "", "is_asteroidal_triple_free"]], "sage.graphs.base": [[3, 0, 0, "-", "boost_graph"], [4, 0, 0, "-", "c_graph"], [5, 0, 0, "-", "dense_graph"], [6, 0, 0, "-", "graph_backends"], [7, 0, 0, "-", "overview"], [8, 0, 0, "-", "sparse_graph"], [9, 0, 0, "-", "static_dense_graph"], [10, 0, 0, "-", "static_sparse_backend"], [11, 0, 0, "-", "static_sparse_graph"]], "sage.graphs.base.boost_graph": [[3, 3, 1, "", "bandwidth_heuristics"], [3, 3, 1, "", "blocks_and_cut_vertices"], [3, 3, 1, "", "clustering_coeff"], [3, 3, 1, "", "diameter"], [3, 3, 1, "", "diameter_DHV"], [3, 3, 1, "", "dominator_tree"], [3, 3, 1, "", "eccentricity_DHV"], [3, 3, 1, "", "edge_connectivity"], [3, 3, 1, "", "floyd_warshall_shortest_paths"], [3, 3, 1, "", "johnson_closeness_centrality"], [3, 3, 1, "", "johnson_shortest_paths"], [3, 3, 1, "", "min_cycle_basis"], [3, 3, 1, "", "min_spanning_tree"], [3, 3, 1, "", "radius_DHV"], [3, 3, 1, "", "shortest_paths"], [3, 3, 1, "", "shortest_paths_from_vertices"], [3, 3, 1, "", "wiener_index"]], "sage.graphs.base.c_graph": [[4, 1, 1, "", "CGraph"], [4, 1, 1, "", "CGraphBackend"], [4, 1, 1, "", "Search_iterator"]], "sage.graphs.base.c_graph.CGraph": [[4, 2, 1, "", "add_arc"], [4, 2, 1, "", "add_vertex"], [4, 2, 1, "", "add_vertices"], [4, 2, 1, "", "all_arcs"], [4, 2, 1, "", "arc_label"], [4, 2, 1, "", "check_vertex"], [4, 2, 1, "", "current_allocation"], [4, 2, 1, "", "del_all_arcs"], [4, 2, 1, "", "del_arc_label"], [4, 2, 1, "", "del_vertex"], [4, 2, 1, "", "has_arc"], [4, 2, 1, "", "has_arc_label"], [4, 2, 1, "", "has_vertex"], [4, 2, 1, "", "in_neighbors"], [4, 2, 1, "", "out_neighbors"], [4, 2, 1, "", "realloc"], [4, 2, 1, "", "verts"]], "sage.graphs.base.c_graph.CGraphBackend": [[4, 2, 1, "", "add_edge"], [4, 2, 1, "", "add_edges"], [4, 2, 1, "", "add_vertex"], [4, 2, 1, "", "add_vertices"], [4, 2, 1, "", "bidirectional_dijkstra"], [4, 2, 1, "", "bidirectional_dijkstra_special"], [4, 2, 1, "", "breadth_first_search"], [4, 2, 1, "", "c_graph"], [4, 2, 1, "", "degree"], [4, 2, 1, "", "del_edge"], [4, 2, 1, "", "del_edges"], [4, 2, 1, "", "del_vertex"], [4, 2, 1, "", "del_vertices"], [4, 2, 1, "", "depth_first_search"], [4, 2, 1, "", "has_vertex"], [4, 2, 1, "", "in_degree"], [4, 2, 1, "", "is_connected"], [4, 2, 1, "", "is_directed_acyclic"], [4, 2, 1, "", "is_strongly_connected"], [4, 2, 1, "", "is_subgraph"], [4, 2, 1, "", "iterator_edges"], [4, 2, 1, "", "iterator_in_edges"], [4, 2, 1, "", "iterator_in_nbrs"], [4, 2, 1, "", "iterator_nbrs"], [4, 2, 1, "", "iterator_out_edges"], [4, 2, 1, "", "iterator_out_nbrs"], [4, 2, 1, "", "iterator_unsorted_edges"], [4, 2, 1, "", "iterator_verts"], [4, 2, 1, "", "loops"], [4, 2, 1, "", "num_edges"], [4, 2, 1, "", "num_verts"], [4, 2, 1, "", "out_degree"], [4, 2, 1, "", "relabel"], [4, 2, 1, "", "shortest_path"], [4, 2, 1, "", "shortest_path_all_vertices"], [4, 2, 1, "", "shortest_path_special"], [4, 2, 1, "", "strongly_connected_component_containing_vertex"], [4, 2, 1, "", "subgraph_given_vertices"]], "sage.graphs.base.dense_graph": [[5, 1, 1, "", "DenseGraph"], [5, 1, 1, "", "DenseGraphBackend"]], "sage.graphs.base.dense_graph.DenseGraph": [[5, 2, 1, "", "complement"], [5, 2, 1, "", "realloc"]], "sage.graphs.base.dense_graph.DenseGraphBackend": [[5, 2, 1, "", "add_edges"], [5, 2, 1, "", "get_edge_label"], [5, 2, 1, "", "has_edge"], [5, 2, 1, "", "multiple_edges"], [5, 2, 1, "", "set_edge_label"]], "sage.graphs.base.graph_backends": [[6, 1, 1, "", "GenericGraphBackend"], [6, 3, 1, "", "unpickle_graph_backend"]], "sage.graphs.base.graph_backends.GenericGraphBackend": [[6, 2, 1, "", "add_edge"], [6, 2, 1, "", "add_edges"], [6, 2, 1, "", "add_vertex"], [6, 2, 1, "", "add_vertices"], [6, 2, 1, "", "degree"], [6, 2, 1, "", "del_edge"], [6, 2, 1, "", "del_vertex"], [6, 2, 1, "", "del_vertices"], [6, 2, 1, "", "get_edge_label"], [6, 2, 1, "", "has_edge"], [6, 2, 1, "", "has_vertex"], [6, 2, 1, "", "in_degree"], [6, 2, 1, "", "iterator_edges"], [6, 2, 1, "", "iterator_in_edges"], [6, 2, 1, "", "iterator_in_nbrs"], [6, 2, 1, "", "iterator_nbrs"], [6, 2, 1, "", "iterator_out_edges"], [6, 2, 1, "", "iterator_out_nbrs"], [6, 2, 1, "", "iterator_verts"], [6, 2, 1, "", "loops"], [6, 2, 1, "", "multiple_edges"], [6, 2, 1, "", "name"], [6, 2, 1, "", "num_edges"], [6, 2, 1, "", "num_verts"], [6, 2, 1, "", "out_degree"], [6, 2, 1, "", "relabel"], [6, 2, 1, "", "set_edge_label"]], "sage.graphs.base.sparse_graph": [[8, 1, 1, "", "SparseGraph"], [8, 1, 1, "", "SparseGraphBackend"]], "sage.graphs.base.sparse_graph.SparseGraph": [[8, 2, 1, "", "add_arc_label"], [8, 2, 1, "", "in_degree"], [8, 2, 1, "", "is_directed"], [8, 2, 1, "", "out_degree"], [8, 2, 1, "", "realloc"]], "sage.graphs.base.sparse_graph.SparseGraphBackend": [[8, 2, 1, "", "get_edge_label"], [8, 2, 1, "", "has_edge"], [8, 2, 1, "", "multiple_edges"], [8, 2, 1, "", "set_edge_label"]], "sage.graphs.base.static_dense_graph": [[9, 3, 1, "", "connected_full_subgraphs"], [9, 3, 1, "", "connected_subgraph_iterator"], [9, 3, 1, "", "is_strongly_regular"], [9, 3, 1, "", "is_triangle_free"], [9, 3, 1, "", "triangles_count"]], "sage.graphs.base.static_sparse_backend": [[10, 1, 1, "", "StaticSparseBackend"], [10, 1, 1, "", "StaticSparseCGraph"]], "sage.graphs.base.static_sparse_backend.StaticSparseBackend": [[10, 2, 1, "", "add_edge"], [10, 2, 1, "", "add_edges"], [10, 2, 1, "", "add_vertex"], [10, 2, 1, "", "add_vertices"], [10, 2, 1, "", "allows_loops"], [10, 2, 1, "", "degree"], [10, 2, 1, "", "del_edge"], [10, 2, 1, "", "del_vertex"], [10, 2, 1, "", "get_edge_label"], [10, 2, 1, "", "has_edge"], [10, 2, 1, "", "has_vertex"], [10, 2, 1, "", "in_degree"], [10, 2, 1, "", "iterator_edges"], [10, 2, 1, "", "iterator_in_edges"], [10, 2, 1, "", "iterator_in_nbrs"], [10, 2, 1, "", "iterator_nbrs"], [10, 2, 1, "", "iterator_out_edges"], [10, 2, 1, "", "iterator_out_nbrs"], [10, 2, 1, "", "iterator_unsorted_edges"], [10, 2, 1, "", "iterator_verts"], [10, 2, 1, "", "multiple_edges"], [10, 2, 1, "", "num_edges"], [10, 2, 1, "", "num_verts"], [10, 2, 1, "", "out_degree"], [10, 2, 1, "", "relabel"], [10, 2, 1, "", "set_edge_label"]], "sage.graphs.base.static_sparse_backend.StaticSparseCGraph": [[10, 2, 1, "", "add_vertex"], [10, 2, 1, "", "del_vertex"], [10, 2, 1, "", "has_arc"], [10, 2, 1, "", "has_vertex"], [10, 2, 1, "", "in_degree"], [10, 2, 1, "", "in_neighbors"], [10, 2, 1, "", "out_degree"], [10, 2, 1, "", "out_neighbors"], [10, 2, 1, "", "verts"]], "sage.graphs.base.static_sparse_graph": [[11, 3, 1, "", "spectral_radius"], [11, 3, 1, "", "strongly_connected_components_digraph"], [11, 3, 1, "", "tarjan_strongly_connected_components"], [11, 3, 1, "", "triangles_count"]], "sage.graphs.bipartite_graph": [[12, 1, 1, "", "BipartiteGraph"]], "sage.graphs.bipartite_graph.BipartiteGraph": [[12, 2, 1, "", "add_edge"], [12, 2, 1, "", "add_edges"], [12, 2, 1, "", "add_vertex"], [12, 2, 1, "", "add_vertices"], [12, 2, 1, "", "allow_loops"], [12, 2, 1, "", "bipartition"], [12, 2, 1, "", "canonical_label"], [12, 2, 1, "", "complement"], [12, 2, 1, "", "complement_bipartite"], [12, 2, 1, "", "delete_vertex"], [12, 2, 1, "", "delete_vertices"], [12, 2, 1, "", "is_bipartite"], [12, 2, 1, "", "load_afile"], [12, 2, 1, "", "matching"], [12, 2, 1, "", "matching_polynomial"], [12, 2, 1, "", "perfect_matchings"], [12, 2, 1, "", "plot"], [12, 2, 1, "", "project_left"], [12, 2, 1, "", "project_right"], [12, 2, 1, "", "reduced_adjacency_matrix"], [12, 2, 1, "", "save_afile"], [12, 2, 1, "", "to_undirected"], [12, 2, 1, "", "vertex_cover"]], "sage.graphs.centrality": [[13, 3, 1, "", "centrality_betweenness"], [13, 3, 1, "", "centrality_closeness_random_k"], [13, 3, 1, "", "centrality_closeness_top_k"]], "sage.graphs.cliquer": [[14, 3, 1, "", "all_cliques"], [14, 3, 1, "", "all_max_clique"], [14, 3, 1, "", "clique_number"], [14, 3, 1, "", "max_clique"]], "sage.graphs.comparability": [[15, 3, 1, "", "greedy_is_comparability"], [15, 3, 1, "", "greedy_is_comparability_with_certificate"], [15, 3, 1, "", "is_comparability"], [15, 3, 1, "", "is_comparability_MILP"], [15, 3, 1, "", "is_permutation"], [15, 3, 1, "", "is_transitive"]], "sage.graphs.connectivity": [[16, 1, 1, "", "TriconnectivitySPQR"], [16, 3, 1, "", "blocks_and_cut_vertices"], [16, 3, 1, "", "blocks_and_cuts_tree"], [16, 3, 1, "", "bridges"], [16, 3, 1, "", "cleave"], [16, 3, 1, "", "connected_component_containing_vertex"], [16, 3, 1, "", "connected_components"], [16, 3, 1, "", "connected_components_number"], [16, 3, 1, "", "connected_components_sizes"], [16, 3, 1, "", "connected_components_subgraphs"], [16, 3, 1, "", "edge_connectivity"], [16, 3, 1, "", "is_connected"], [16, 3, 1, "", "is_cut_edge"], [16, 3, 1, "", "is_cut_vertex"], [16, 3, 1, "", "is_strongly_connected"], [16, 3, 1, "", "is_triconnected"], [16, 3, 1, "", "spqr_tree"], [16, 3, 1, "", "spqr_tree_to_graph"], [16, 3, 1, "", "strong_articulation_points"], [16, 3, 1, "", "strongly_connected_component_containing_vertex"], [16, 3, 1, "", "strongly_connected_components_digraph"], [16, 3, 1, "", "strongly_connected_components_subgraphs"], [16, 3, 1, "", "vertex_connectivity"]], "sage.graphs.connectivity.TriconnectivitySPQR": [[16, 2, 1, "", "get_spqr_tree"], [16, 2, 1, "", "get_triconnected_components"], [16, 2, 1, "", "print_triconnected_components"]], "sage.graphs.convexity_properties": [[17, 1, 1, "", "ConvexityProperties"], [17, 3, 1, "", "geodetic_closure"]], "sage.graphs.convexity_properties.ConvexityProperties": [[17, 2, 1, "", "hull"], [17, 2, 1, "", "hull_number"]], "sage.graphs.digraph": [[18, 1, 1, "", "DiGraph"]], "sage.graphs.digraph.DiGraph": [[18, 2, 1, "", "all_cycles_iterator"], [18, 2, 1, "", "all_paths_iterator"], [18, 2, 1, "", "all_simple_cycles"], [18, 2, 1, "", "all_simple_paths"], [18, 2, 1, "", "center"], [18, 2, 1, "", "degree_polynomial"], [18, 2, 1, "", "diameter"], [18, 2, 1, "", "dig6_string"], [18, 2, 1, "", "eccentricity"], [18, 2, 1, "", "feedback_edge_set"], [18, 2, 1, "", "flow_polytope"], [18, 2, 1, "", "in_branchings"], [18, 2, 1, "", "in_degree"], [18, 2, 1, "", "in_degree_iterator"], [18, 2, 1, "", "in_degree_sequence"], [18, 2, 1, "", "incoming_edge_iterator"], [18, 2, 1, "", "incoming_edges"], [18, 2, 1, "", "is_aperiodic"], [18, 2, 1, "", "is_directed"], [18, 2, 1, "", "is_directed_acyclic"], [18, 2, 1, "", "is_strongly_connected"], [18, 2, 1, "", "is_tournament"], [18, 2, 1, "", "is_transitive"], [18, 2, 1, "", "layout_acyclic"], [18, 2, 1, "", "layout_acyclic_dummy"], [18, 2, 1, "", "level_sets"], [18, 2, 1, "", "neighbor_in_iterator"], [18, 2, 1, "", "neighbor_out_iterator"], [18, 2, 1, "", "neighbors_in"], [18, 2, 1, "", "neighbors_out"], [18, 2, 1, "", "out_branchings"], [18, 2, 1, "", "out_degree"], [18, 2, 1, "", "out_degree_iterator"], [18, 2, 1, "", "out_degree_sequence"], [18, 2, 1, "", "outgoing_edge_iterator"], [18, 2, 1, "", "outgoing_edges"], [18, 2, 1, "", "path_semigroup"], [18, 2, 1, "", "period"], [18, 2, 1, "", "periphery"], [18, 2, 1, "", "radius"], [18, 2, 1, "", "reverse"], [18, 2, 1, "", "reverse_edge"], [18, 2, 1, "", "reverse_edges"], [18, 2, 1, "", "sinks"], [18, 2, 1, "", "sources"], [18, 2, 1, "", "strong_articulation_points"], [18, 2, 1, "", "strongly_connected_component_containing_vertex"], [18, 2, 1, "", "strongly_connected_components"], [18, 2, 1, "", "strongly_connected_components_digraph"], [18, 2, 1, "", "strongly_connected_components_subgraphs"], [18, 2, 1, "", "to_directed"], [18, 2, 1, "", "to_undirected"], [18, 2, 1, "", "topological_sort"], [18, 2, 1, "", "topological_sort_generator"]], "sage.graphs.digraph_generators": [[19, 1, 1, "", "DiGraphGenerators"]], "sage.graphs.digraph_generators.DiGraphGenerators": [[19, 2, 1, "", "ButterflyGraph"], [19, 2, 1, "", "Circuit"], [19, 2, 1, "", "Circulant"], [19, 2, 1, "", "Complete"], [19, 2, 1, "", "DeBruijn"], [19, 2, 1, "", "GeneralizedDeBruijn"], [19, 2, 1, "", "ImaseItoh"], [19, 2, 1, "", "Kautz"], [19, 2, 1, "", "Paley"], [19, 2, 1, "", "Path"], [19, 2, 1, "", "RandomDirectedAcyclicGraph"], [19, 2, 1, "", "RandomDirectedGN"], [19, 2, 1, "", "RandomDirectedGNC"], [19, 2, 1, "", "RandomDirectedGNM"], [19, 2, 1, "", "RandomDirectedGNP"], [19, 2, 1, "", "RandomDirectedGNR"], [19, 2, 1, "", "RandomSemiComplete"], [19, 2, 1, "", "RandomTournament"], [19, 2, 1, "", "StronglyRegular"], [19, 2, 1, "", "TransitiveTournament"], [19, 2, 1, "", "nauty_directg"], [19, 2, 1, "", "tournaments_nauty"]], "sage.graphs.distances_all_pairs": [[20, 3, 1, "", "antipodal_graph"], [20, 3, 1, "", "diameter"], [20, 3, 1, "", "distances_all_pairs"], [20, 3, 1, "", "distances_and_predecessors_all_pairs"], [20, 3, 1, "", "distances_distribution"], [20, 3, 1, "", "eccentricity"], [20, 3, 1, "", "floyd_warshall"], [20, 3, 1, "", "is_distance_regular"], [20, 3, 1, "", "radius_DHV"], [20, 3, 1, "", "shortest_path_all_pairs"], [20, 3, 1, "", "szeged_index"], [20, 3, 1, "", "wiener_index"]], "sage.graphs.domination": [[21, 3, 1, "", "dominating_set"], [21, 3, 1, "", "dominating_sets"], [21, 3, 1, "", "greedy_dominating_set"], [21, 3, 1, "", "is_dominating"], [21, 3, 1, "", "is_redundant"], [21, 3, 1, "", "minimal_dominating_sets"], [21, 3, 1, "", "private_neighbors"]], "sage.graphs.edge_connectivity": [[22, 1, 1, "", "GabowEdgeConnectivity"]], "sage.graphs.edge_connectivity.GabowEdgeConnectivity": [[22, 4, 1, "", "G"], [22, 2, 1, "", "edge_connectivity"], [22, 2, 1, "", "edge_disjoint_spanning_trees"]], "sage.graphs.generators": [[23, 0, 0, "-", "basic"], [24, 0, 0, "-", "chessboard"], [25, 0, 0, "-", "classical_geometries"], [26, 0, 0, "-", "distance_regular"], [27, 0, 0, "-", "families"], [28, 0, 0, "-", "intersection"], [29, 0, 0, "-", "platonic_solids"], [30, 0, 0, "-", "random"], [31, 0, 0, "-", "smallgraphs"], [32, 0, 0, "-", "world_map"]], "sage.graphs.generators.basic": [[23, 3, 1, "", "BullGraph"], [23, 3, 1, "", "ButterflyGraph"], [23, 3, 1, "", "CircularLadderGraph"], [23, 3, 1, "", "ClawGraph"], [23, 3, 1, "", "CompleteBipartiteGraph"], [23, 3, 1, "", "CompleteGraph"], [23, 3, 1, "", "CompleteMultipartiteGraph"], [23, 3, 1, "", "CycleGraph"], [23, 3, 1, "", "DartGraph"], [23, 3, 1, "", "DiamondGraph"], [23, 3, 1, "", "EmptyGraph"], [23, 3, 1, "", "ForkGraph"], [23, 3, 1, "", "GemGraph"], [23, 3, 1, "", "Grid2dGraph"], [23, 3, 1, "", "GridGraph"], [23, 3, 1, "", "HouseGraph"], [23, 3, 1, "", "HouseXGraph"], [23, 3, 1, "", "LadderGraph"], [23, 3, 1, "", "PathGraph"], [23, 3, 1, "", "StarGraph"], [23, 3, 1, "", "Toroidal6RegularGrid2dGraph"], [23, 3, 1, "", "ToroidalGrid2dGraph"]], "sage.graphs.generators.chessboard": [[24, 3, 1, "", "BishopGraph"], [24, 3, 1, "", "ChessboardGraphGenerator"], [24, 3, 1, "", "KingGraph"], [24, 3, 1, "", "KnightGraph"], [24, 3, 1, "", "QueenGraph"], [24, 3, 1, "", "RookGraph"]], "sage.graphs.generators.classical_geometries": [[25, 3, 1, "", "AffineOrthogonalPolarGraph"], [25, 3, 1, "", "AhrensSzekeresGeneralizedQuadrangleGraph"], [25, 3, 1, "", "CossidentePenttilaGraph"], [25, 3, 1, "", "HaemersGraph"], [25, 3, 1, "", "NonisotropicOrthogonalPolarGraph"], [25, 3, 1, "", "NonisotropicUnitaryPolarGraph"], [25, 3, 1, "", "Nowhere0WordsTwoWeightCodeGraph"], [25, 3, 1, "", "OrthogonalDualPolarGraph"], [25, 3, 1, "", "OrthogonalPolarGraph"], [25, 3, 1, "", "SymplecticDualPolarGraph"], [25, 3, 1, "", "SymplecticPolarGraph"], [25, 3, 1, "", "T2starGeneralizedQuadrangleGraph"], [25, 3, 1, "", "TaylorTwographDescendantSRG"], [25, 3, 1, "", "TaylorTwographSRG"], [25, 3, 1, "", "UnitaryDualPolarGraph"], [25, 3, 1, "", "UnitaryPolarGraph"]], "sage.graphs.generators.distance_regular": [[26, 3, 1, "", "AlternatingFormsGraph"], [26, 3, 1, "", "BilinearFormsGraph"], [26, 3, 1, "", "ConwaySmith_for_3S7"], [26, 3, 1, "", "DoubleGrassmannGraph"], [26, 3, 1, "", "DoubleOddGraph"], [26, 3, 1, "", "DoublyTruncatedWittGraph"], [26, 3, 1, "", "FosterGraph3S6"], [26, 3, 1, "", "GeneralisedDodecagonGraph"], [26, 3, 1, "", "GeneralisedHexagonGraph"], [26, 3, 1, "", "GeneralisedOctagonGraph"], [26, 3, 1, "", "GrassmannGraph"], [26, 3, 1, "", "HalfCube"], [26, 3, 1, "", "HermitianFormsGraph"], [26, 3, 1, "", "IvanovIvanovFaradjevGraph"], [26, 3, 1, "", "J2Graph"], [26, 3, 1, "", "LargeWittGraph"], [26, 3, 1, "", "LeonardGraph"], [26, 3, 1, "", "TruncatedWittGraph"], [26, 3, 1, "", "UstimenkoGraph"], [26, 3, 1, "", "cocliques_HoffmannSingleton"], [26, 3, 1, "", "distance_3_doubly_truncated_Golay_code_graph"], [26, 3, 1, "", "distance_regular_graph"], [26, 3, 1, "", "graph_3O73"], [26, 3, 1, "", "graph_from_GQ_spread"], [26, 3, 1, "", "graph_with_classical_parameters"], [26, 3, 1, "", "is_classical_parameters_graph"], [26, 3, 1, "", "is_from_GQ_spread"], [26, 3, 1, "", "is_near_polygon"], [26, 3, 1, "", "is_pseudo_partition_graph"], [26, 3, 1, "", "locally_GQ42_distance_transitive_graph"], [26, 3, 1, "", "near_polygon_graph"], [26, 3, 1, "", "pseudo_partition_graph"], [26, 3, 1, "", "shortened_000_111_extended_binary_Golay_code_graph"], [26, 3, 1, "", "shortened_00_11_binary_Golay_code_graph"], [26, 3, 1, "", "vanLintSchrijverGraph"]], "sage.graphs.generators.families": [[27, 3, 1, "", "AztecDiamondGraph"], [27, 3, 1, "", "BalancedTree"], [27, 3, 1, "", "BarbellGraph"], [27, 3, 1, "", "BubbleSortGraph"], [27, 3, 1, "", "CaiFurerImmermanGraph"], [27, 3, 1, "", "CirculantGraph"], [27, 3, 1, "", "CubeConnectedCycle"], [27, 3, 1, "", "CubeGraph"], [27, 3, 1, "", "DipoleGraph"], [27, 3, 1, "", "DorogovtsevGoltsevMendesGraph"], [27, 3, 1, "", "DoubleGeneralizedPetersenGraph"], [27, 3, 1, "", "EgawaGraph"], [27, 3, 1, "", "FibonacciTree"], [27, 3, 1, "", "FoldedCubeGraph"], [27, 3, 1, "", "FriendshipGraph"], [27, 3, 1, "", "FurerGadget"], [27, 3, 1, "", "FuzzyBallGraph"], [27, 3, 1, "", "GeneralizedPetersenGraph"], [27, 3, 1, "", "GeneralizedSierpinskiGraph"], [27, 3, 1, "", "GoethalsSeidelGraph"], [27, 3, 1, "", "HammingGraph"], [27, 3, 1, "", "HanoiTowerGraph"], [27, 3, 1, "", "HararyGraph"], [27, 3, 1, "", "HyperStarGraph"], [27, 3, 1, "", "IGraph"], [27, 3, 1, "", "JohnsonGraph"], [27, 3, 1, "", "KneserGraph"], [27, 3, 1, "", "LCFGraph"], [27, 3, 1, "", "LollipopGraph"], [27, 3, 1, "", "MathonPseudocyclicMergingGraph"], [27, 3, 1, "", "MathonPseudocyclicStronglyRegularGraph"], [27, 3, 1, "", "MuzychukS6Graph"], [27, 3, 1, "", "MycielskiGraph"], [27, 3, 1, "", "MycielskiStep"], [27, 3, 1, "", "NKStarGraph"], [27, 3, 1, "", "NStarGraph"], [27, 3, 1, "", "OddGraph"], [27, 3, 1, "", "PaleyGraph"], [27, 3, 1, "", "PasechnikGraph"], [27, 3, 1, "", "RingedTree"], [27, 3, 1, "", "RoseWindowGraph"], [27, 3, 1, "", "SierpinskiGasketGraph"], [27, 3, 1, "", "SquaredSkewHadamardMatrixGraph"], [27, 3, 1, "", "SwitchedSquaredSkewHadamardMatrixGraph"], [27, 3, 1, "", "TabacjnGraph"], [27, 3, 1, "", "TadpoleGraph"], [27, 3, 1, "", "TuranGraph"], [27, 3, 1, "", "WheelGraph"], [27, 3, 1, "", "WindmillGraph"], [27, 3, 1, "", "chang_graphs"], [27, 3, 1, "", "line_graph_forbidden_subgraphs"], [27, 3, 1, "", "nauty_gentreeg"], [27, 3, 1, "", "petersen_family"], [27, 3, 1, "", "trees"]], "sage.graphs.generators.intersection": [[28, 3, 1, "", "IntersectionGraph"], [28, 3, 1, "", "IntervalGraph"], [28, 3, 1, "", "OrthogonalArrayBlockGraph"], [28, 3, 1, "", "PermutationGraph"], [28, 3, 1, "", "ToleranceGraph"]], "sage.graphs.generators.platonic_solids": [[29, 3, 1, "", "DodecahedralGraph"], [29, 3, 1, "", "HexahedralGraph"], [29, 3, 1, "", "IcosahedralGraph"], [29, 3, 1, "", "OctahedralGraph"], [29, 3, 1, "", "TetrahedralGraph"]], "sage.graphs.generators.random": [[30, 3, 1, "", "RandomBarabasiAlbert"], [30, 3, 1, "", "RandomBicubicPlanar"], [30, 3, 1, "", "RandomBipartite"], [30, 3, 1, "", "RandomBlockGraph"], [30, 3, 1, "", "RandomBoundedToleranceGraph"], [30, 3, 1, "", "RandomChordalGraph"], [30, 3, 1, "", "RandomGNM"], [30, 3, 1, "", "RandomGNP"], [30, 3, 1, "", "RandomHolmeKim"], [30, 3, 1, "", "RandomIntervalGraph"], [30, 3, 1, "", "RandomLobster"], [30, 3, 1, "", "RandomNewmanWattsStrogatz"], [30, 3, 1, "", "RandomRegular"], [30, 3, 1, "", "RandomRegularBipartite"], [30, 3, 1, "", "RandomShell"], [30, 3, 1, "", "RandomToleranceGraph"], [30, 3, 1, "", "RandomTree"], [30, 3, 1, "", "RandomTreePowerlaw"], [30, 3, 1, "", "RandomTriangulation"], [30, 3, 1, "", "RandomUnitDiskGraph"], [30, 3, 1, "", "blossoming_contour"], [30, 3, 1, "", "connecting_nodes"], [30, 3, 1, "", "growing_subtrees"], [30, 3, 1, "", "pruned_tree"]], "sage.graphs.generators.smallgraphs": [[31, 3, 1, "", "Balaban10Cage"], [31, 3, 1, "", "Balaban11Cage"], [31, 3, 1, "", "BidiakisCube"], [31, 3, 1, "", "BiggsSmithGraph"], [31, 3, 1, "", "BlanusaFirstSnarkGraph"], [31, 3, 1, "", "BlanusaSecondSnarkGraph"], [31, 3, 1, "", "BrinkmannGraph"], [31, 3, 1, "", "BrouwerHaemersGraph"], [31, 3, 1, "", "BuckyBall"], [31, 3, 1, "", "CameronGraph"], [31, 3, 1, "", "Cell120"], [31, 3, 1, "", "Cell600"], [31, 3, 1, "", "ChvatalGraph"], [31, 3, 1, "", "ClebschGraph"], [31, 3, 1, "", "CoxeterGraph"], [31, 3, 1, "", "DejterGraph"], [31, 3, 1, "", "DesarguesGraph"], [31, 3, 1, "", "DoubleStarSnark"], [31, 3, 1, "", "DurerGraph"], [31, 3, 1, "", "DyckGraph"], [31, 3, 1, "", "EllinghamHorton54Graph"], [31, 3, 1, "", "EllinghamHorton78Graph"], [31, 3, 1, "", "ErreraGraph"], [31, 3, 1, "", "F26AGraph"], [31, 3, 1, "", "FlowerSnark"], [31, 3, 1, "", "FolkmanGraph"], [31, 3, 1, "", "FosterGraph"], [31, 3, 1, "", "FranklinGraph"], [31, 3, 1, "", "FruchtGraph"], [31, 3, 1, "", "GoldnerHararyGraph"], [31, 3, 1, "", "GolombGraph"], [31, 3, 1, "", "GossetGraph"], [31, 3, 1, "", "GrayGraph"], [31, 3, 1, "", "GritsenkoGraph"], [31, 3, 1, "", "GrotzschGraph"], [31, 3, 1, "", "HallJankoGraph"], [31, 3, 1, "", "HarborthGraph"], [31, 3, 1, "", "HarriesGraph"], [31, 3, 1, "", "HarriesWongGraph"], [31, 3, 1, "", "HeawoodGraph"], [31, 3, 1, "", "HerschelGraph"], [31, 3, 1, "", "HigmanSimsGraph"], [31, 3, 1, "", "HoffmanGraph"], [31, 3, 1, "", "HoffmanSingletonGraph"], [31, 3, 1, "", "HoltGraph"], [31, 3, 1, "", "HortonGraph"], [31, 3, 1, "", "IoninKharaghani765Graph"], [31, 3, 1, "", "JankoKharaghaniGraph"], [31, 3, 1, "", "JankoKharaghaniTonchevGraph"], [31, 3, 1, "", "KittellGraph"], [31, 3, 1, "", "Klein3RegularGraph"], [31, 3, 1, "", "Klein7RegularGraph"], [31, 3, 1, "", "KrackhardtKiteGraph"], [31, 3, 1, "", "LivingstoneGraph"], [31, 3, 1, "", "LjubljanaGraph"], [31, 3, 1, "", "LocalMcLaughlinGraph"], [31, 3, 1, "", "M22Graph"], [31, 3, 1, "", "MarkstroemGraph"], [31, 3, 1, "", "MathonStronglyRegularGraph"], [31, 3, 1, "", "McGeeGraph"], [31, 3, 1, "", "McLaughlinGraph"], [31, 3, 1, "", "MeredithGraph"], [31, 3, 1, "", "MoebiusKantorGraph"], [31, 3, 1, "", "MoserSpindle"], [31, 3, 1, "", "NauruGraph"], [31, 3, 1, "", "PappusGraph"], [31, 3, 1, "", "PerkelGraph"], [31, 3, 1, "", "PetersenGraph"], [31, 3, 1, "", "PoussinGraph"], [31, 3, 1, "", "RobertsonGraph"], [31, 3, 1, "", "SchlaefliGraph"], [31, 3, 1, "", "ShrikhandeGraph"], [31, 3, 1, "", "SimsGewirtzGraph"], [31, 3, 1, "", "SousselierGraph"], [31, 3, 1, "", "SuzukiGraph"], [31, 3, 1, "", "SylvesterGraph"], [31, 3, 1, "", "SzekeresSnarkGraph"], [31, 3, 1, "", "ThomsenGraph"], [31, 3, 1, "", "TietzeGraph"], [31, 3, 1, "", "TruncatedIcosidodecahedralGraph"], [31, 3, 1, "", "TruncatedTetrahedralGraph"], [31, 3, 1, "", "Tutte12Cage"], [31, 3, 1, "", "TutteCoxeterGraph"], [31, 3, 1, "", "TutteGraph"], [31, 3, 1, "", "U42Graph216"], [31, 3, 1, "", "U42Graph540"], [31, 3, 1, "", "WagnerGraph"], [31, 3, 1, "", "WatkinsSnarkGraph"], [31, 3, 1, "", "WellsGraph"], [31, 3, 1, "", "WienerArayaGraph"]], "sage.graphs.generators.world_map": [[32, 3, 1, "", "AfricaMap"], [32, 3, 1, "", "EuropeMap"], [32, 3, 1, "", "USAMap"], [32, 3, 1, "", "WorldMap"]], "sage.graphs.generic_graph": [[33, 1, 1, "", "GenericGraph"], [33, 3, 1, "", "graph_isom_equivalent_non_edge_labeled_graph"], [33, 3, 1, "", "tachyon_vertex_plot"]], "sage.graphs.generic_graph.GenericGraph": [[33, 2, 1, "", "__eq__"], [33, 2, 1, "", "add_clique"], [33, 2, 1, "", "add_cycle"], [33, 2, 1, "", "add_edge"], [33, 2, 1, "", "add_edges"], [33, 2, 1, "", "add_path"], [33, 2, 1, "", "add_vertex"], [33, 2, 1, "", "add_vertices"], [33, 2, 1, "", "adjacency_matrix"], [33, 2, 1, "", "all_paths"], [33, 2, 1, "", "allow_loops"], [33, 2, 1, "", "allow_multiple_edges"], [33, 2, 1, "", "allows_loops"], [33, 2, 1, "", "allows_multiple_edges"], [33, 2, 1, "", "am"], [33, 2, 1, "", "antisymmetric"], [33, 2, 1, "", "automorphism_group"], [33, 2, 1, "", "average_degree"], [33, 2, 1, "", "average_distance"], [33, 2, 1, "", "blocks_and_cut_vertices"], [33, 2, 1, "", "blocks_and_cuts_tree"], [33, 2, 1, "", "breadth_first_search"], [33, 2, 1, "", "canonical_label"], [33, 2, 1, "", "cartesian_product"], [33, 2, 1, "", "categorical_product"], [33, 2, 1, "", "centrality_betweenness"], [33, 2, 1, "", "centrality_closeness"], [33, 2, 1, "", "characteristic_polynomial"], [33, 2, 1, "", "charpoly"], [33, 2, 1, "", "clear"], [33, 2, 1, "", "cluster_transitivity"], [33, 2, 1, "", "cluster_triangles"], [33, 2, 1, "", "clustering_average"], [33, 2, 1, "", "clustering_coeff"], [33, 2, 1, "", "coarsest_equitable_refinement"], [33, 2, 1, "", "complement"], [33, 2, 1, "", "connected_component_containing_vertex"], [33, 2, 1, "", "connected_components"], [33, 2, 1, "", "connected_components_number"], [33, 2, 1, "", "connected_components_sizes"], [33, 2, 1, "", "connected_components_subgraphs"], [33, 2, 1, "", "connected_subgraph_iterator"], [33, 2, 1, "", "contract_edge"], [33, 2, 1, "", "contract_edges"], [33, 2, 1, "", "copy"], [33, 2, 1, "", "crossing_number"], [33, 2, 1, "", "cycle_basis"], [33, 2, 1, "", "degree"], [33, 2, 1, "", "degree_histogram"], [33, 2, 1, "", "degree_iterator"], [33, 2, 1, "", "degree_sequence"], [33, 2, 1, "", "degree_to_cell"], [33, 2, 1, "", "delete_edge"], [33, 2, 1, "", "delete_edges"], [33, 2, 1, "", "delete_multiedge"], [33, 2, 1, "", "delete_vertex"], [33, 2, 1, "", "delete_vertices"], [33, 2, 1, "", "density"], [33, 2, 1, "", "depth_first_search"], [33, 2, 1, "", "disjoint_routed_paths"], [33, 2, 1, "", "disjoint_union"], [33, 2, 1, "", "disjunctive_product"], [33, 2, 1, "", "distance"], [33, 2, 1, "", "distance_all_pairs"], [33, 2, 1, "", "distance_matrix"], [33, 2, 1, "", "distances_distribution"], [33, 2, 1, "", "dominating_set"], [33, 2, 1, "", "dominating_sets"], [33, 2, 1, "", "dominator_tree"], [33, 2, 1, "", "edge_boundary"], [33, 2, 1, "", "edge_connectivity"], [33, 2, 1, "", "edge_cut"], [33, 2, 1, "", "edge_disjoint_paths"], [33, 2, 1, "", "edge_disjoint_spanning_trees"], [33, 2, 1, "", "edge_iterator"], [33, 2, 1, "", "edge_label"], [33, 2, 1, "", "edge_labels"], [33, 2, 1, "", "edge_polytope"], [33, 2, 1, "", "edges"], [33, 2, 1, "", "edges_incident"], [33, 2, 1, "", "eigenspaces"], [33, 2, 1, "", "eigenvectors"], [33, 2, 1, "", "eulerian_circuit"], [33, 2, 1, "", "eulerian_orientation"], [33, 2, 1, "", "export_to_file"], [33, 2, 1, "", "faces"], [33, 2, 1, "", "feedback_vertex_set"], [33, 2, 1, "", "flow"], [33, 2, 1, "", "genus"], [33, 2, 1, "", "get_embedding"], [33, 2, 1, "", "get_pos"], [33, 2, 1, "", "get_vertex"], [33, 2, 1, "", "get_vertices"], [33, 2, 1, "", "girth"], [33, 4, 1, "", "graphics_array_defaults"], [33, 2, 1, "", "graphplot"], [33, 2, 1, "", "graphviz_string"], [33, 2, 1, "", "graphviz_to_file_named"], [33, 2, 1, "", "greedy_dominating_set"], [33, 2, 1, "", "hamiltonian_cycle"], [33, 2, 1, "", "hamiltonian_path"], [33, 2, 1, "", "has_edge"], [33, 2, 1, "", "has_loops"], [33, 2, 1, "", "has_multiple_edges"], [33, 2, 1, "", "has_vertex"], [33, 2, 1, "", "igraph_graph"], [33, 2, 1, "", "incidence_matrix"], [33, 2, 1, "", "is_bipartite"], [33, 2, 1, "", "is_cayley"], [33, 2, 1, "", "is_chordal"], [33, 2, 1, "", "is_circulant"], [33, 2, 1, "", "is_circular_planar"], [33, 2, 1, "", "is_clique"], [33, 2, 1, "", "is_connected"], [33, 2, 1, "", "is_cut_edge"], [33, 2, 1, "", "is_cut_vertex"], [33, 2, 1, "", "is_cycle"], [33, 2, 1, "", "is_drawn_free_of_edge_crossings"], [33, 2, 1, "", "is_equitable"], [33, 2, 1, "", "is_eulerian"], [33, 2, 1, "", "is_gallai_tree"], [33, 2, 1, "", "is_hamiltonian"], [33, 2, 1, "", "is_immutable"], [33, 2, 1, "", "is_independent_set"], [33, 2, 1, "", "is_interval"], [33, 2, 1, "", "is_isomorphic"], [33, 2, 1, "", "is_planar"], [33, 2, 1, "", "is_regular"], [33, 2, 1, "", "is_self_complementary"], [33, 2, 1, "", "is_subgraph"], [33, 2, 1, "", "is_transitively_reduced"], [33, 2, 1, "", "is_vertex_transitive"], [33, 2, 1, "", "katz_centrality"], [33, 2, 1, "", "katz_matrix"], [33, 2, 1, "", "kirchhoff_matrix"], [33, 2, 1, "", "kronecker_product"], [33, 2, 1, "", "laplacian_matrix"], [33, 2, 1, "", "latex_options"], [33, 2, 1, "", "layout"], [33, 2, 1, "", "layout_circular"], [33, 2, 1, "", "layout_default"], [33, 2, 1, "", "layout_extend_randomly"], [33, 2, 1, "", "layout_forest"], [33, 2, 1, "", "layout_graphviz"], [33, 2, 1, "", "layout_planar"], [33, 2, 1, "", "layout_ranked"], [33, 2, 1, "", "layout_spring"], [33, 2, 1, "", "layout_tree"], [33, 2, 1, "", "lex_BFS"], [33, 2, 1, "", "lex_DFS"], [33, 2, 1, "", "lex_DOWN"], [33, 2, 1, "", "lex_UP"], [33, 2, 1, "", "lexicographic_product"], [33, 2, 1, "", "line_graph"], [33, 2, 1, "", "longest_path"], [33, 2, 1, "", "loop_edges"], [33, 2, 1, "", "loop_vertices"], [33, 2, 1, "", "loops"], [33, 2, 1, "", "max_cut"], [33, 2, 1, "", "merge_vertices"], [33, 2, 1, "", "min_spanning_tree"], [33, 2, 1, "", "minimum_cycle_basis"], [33, 2, 1, "", "multicommodity_flow"], [33, 2, 1, "", "multiple_edges"], [33, 2, 1, "", "multiway_cut"], [33, 2, 1, "", "name"], [33, 2, 1, "", "neighbor_iterator"], [33, 2, 1, "", "neighbors"], [33, 2, 1, "", "networkx_graph"], [33, 2, 1, "", "nowhere_zero_flow"], [33, 2, 1, "", "num_edges"], [33, 2, 1, "", "num_faces"], [33, 2, 1, "", "num_verts"], [33, 2, 1, "", "number_of_loops"], [33, 2, 1, "", "odd_girth"], [33, 2, 1, "", "order"], [33, 2, 1, "", "pagerank"], [33, 2, 1, "", "planar_dual"], [33, 2, 1, "", "plot"], [33, 2, 1, "", "plot3d"], [33, 2, 1, "", "random_edge"], [33, 2, 1, "", "random_edge_iterator"], [33, 2, 1, "", "random_subgraph"], [33, 2, 1, "", "random_vertex"], [33, 2, 1, "", "random_vertex_iterator"], [33, 2, 1, "", "relabel"], [33, 2, 1, "", "remove_loops"], [33, 2, 1, "", "remove_multiple_edges"], [33, 2, 1, "", "set_edge_label"], [33, 2, 1, "", "set_embedding"], [33, 2, 1, "", "set_latex_options"], [33, 2, 1, "", "set_pos"], [33, 2, 1, "", "set_vertex"], [33, 2, 1, "", "set_vertices"], [33, 2, 1, "", "shortest_path"], [33, 2, 1, "", "shortest_path_all_pairs"], [33, 2, 1, "", "shortest_path_length"], [33, 2, 1, "", "shortest_path_lengths"], [33, 2, 1, "", "shortest_paths"], [33, 2, 1, "", "shortest_simple_paths"], [33, 2, 1, "", "show"], [33, 2, 1, "", "show3d"], [33, 2, 1, "", "size"], [33, 2, 1, "", "spanning_trees_count"], [33, 2, 1, "", "spectral_radius"], [33, 2, 1, "", "spectrum"], [33, 2, 1, "", "steiner_tree"], [33, 2, 1, "", "strong_product"], [33, 2, 1, "", "subdivide_edge"], [33, 2, 1, "", "subdivide_edges"], [33, 2, 1, "", "subgraph"], [33, 2, 1, "", "subgraph_search"], [33, 2, 1, "", "subgraph_search_count"], [33, 2, 1, "", "subgraph_search_iterator"], [33, 2, 1, "", "symmetric_edge_polytope"], [33, 2, 1, "", "szeged_index"], [33, 2, 1, "", "tensor_product"], [33, 2, 1, "", "to_dictionary"], [33, 2, 1, "", "to_simple"], [33, 2, 1, "", "transitive_closure"], [33, 2, 1, "", "transitive_reduction"], [33, 2, 1, "", "traveling_salesman_problem"], [33, 2, 1, "", "triangles_count"], [33, 2, 1, "", "union"], [33, 2, 1, "", "vertex_boundary"], [33, 2, 1, "", "vertex_connectivity"], [33, 2, 1, "", "vertex_cut"], [33, 2, 1, "", "vertex_disjoint_paths"], [33, 2, 1, "", "vertex_iterator"], [33, 2, 1, "", "vertices"], [33, 2, 1, "", "weighted"], [33, 2, 1, "", "weighted_adjacency_matrix"], [33, 2, 1, "", "wiener_index"]], "sage.graphs.generic_graph_pyx": [[34, 1, 1, "", "GenericGraph_pyx"], [34, 1, 1, "", "SubgraphSearch"], [34, 3, 1, "", "binary_string_from_dig6"], [34, 3, 1, "", "binary_string_from_graph6"], [34, 3, 1, "", "binary_string_to_graph6"], [34, 3, 1, "", "find_hamiltonian"], [34, 3, 1, "", "int_to_binary_string"], [34, 3, 1, "", "layout_split"], [34, 3, 1, "", "length_and_string_from_graph6"], [34, 3, 1, "", "small_integer_to_graph6"], [34, 3, 1, "", "spring_layout_fast"], [34, 3, 1, "", "transitive_reduction_acyclic"]], "sage.graphs.generic_graph_pyx.SubgraphSearch": [[34, 2, 1, "", "cardinality"]], "sage.graphs.genus": [[35, 1, 1, "", "simple_connected_genus_backtracker"], [35, 3, 1, "", "simple_connected_graph_genus"]], "sage.graphs.genus.simple_connected_genus_backtracker": [[35, 2, 1, "", "genus"], [35, 2, 1, "", "get_embedding"]], "sage.graphs.graph": [[36, 1, 1, "", "Graph"]], "sage.graphs.graph.Graph": [[36, 2, 1, "", "all_cliques"], [36, 2, 1, "", "antipodal_graph"], [36, 2, 1, "", "apex_vertices"], [36, 2, 1, "", "arboricity"], [36, 2, 1, "", "atoms_and_clique_separators"], [36, 2, 1, "", "bipartite_color"], [36, 2, 1, "", "bipartite_double"], [36, 2, 1, "", "bipartite_sets"], [36, 2, 1, "", "bounded_outdegree_orientation"], [36, 2, 1, "", "bridges"], [36, 2, 1, "", "center"], [36, 2, 1, "", "centrality_degree"], [36, 2, 1, "", "cheeger_constant"], [36, 2, 1, "", "chromatic_index"], [36, 2, 1, "", "chromatic_number"], [36, 2, 1, "", "chromatic_polynomial"], [36, 2, 1, "", "chromatic_quasisymmetric_function"], [36, 2, 1, "", "chromatic_symmetric_function"], [36, 2, 1, "", "cleave"], [36, 2, 1, "", "clique_complex"], [36, 2, 1, "", "clique_maximum"], [36, 2, 1, "", "clique_number"], [36, 2, 1, "", "clique_polynomial"], [36, 2, 1, "", "cliques_containing_vertex"], [36, 2, 1, "", "cliques_get_clique_bipartite"], [36, 2, 1, "", "cliques_get_max_clique_graph"], [36, 2, 1, "", "cliques_maximal"], [36, 2, 1, "", "cliques_maximum"], [36, 2, 1, "", "cliques_number_of"], [36, 2, 1, "", "cliques_vertex_clique_number"], [36, 2, 1, "", "coloring"], [36, 2, 1, "", "common_neighbors_matrix"], [36, 2, 1, "", "convexity_properties"], [36, 2, 1, "", "cores"], [36, 2, 1, "", "degree_constrained_subgraph"], [36, 2, 1, "", "diameter"], [36, 2, 1, "", "distance_graph"], [36, 2, 1, "", "ear_decomposition"], [36, 2, 1, "", "eccentricity"], [36, 2, 1, "", "edge_isoperimetric_number"], [36, 2, 1, "", "effective_resistance"], [36, 2, 1, "", "effective_resistance_matrix"], [36, 2, 1, "", "folded_graph"], [36, 2, 1, "", "fractional_chromatic_index"], [36, 2, 1, "", "fractional_chromatic_number"], [36, 2, 1, "", "fractional_clique_number"], [36, 2, 1, "", "geodetic_closure"], [36, 2, 1, "", "gomory_hu_tree"], [36, 2, 1, "", "graph6_string"], [36, 2, 1, "", "has_homomorphism_to"], [36, 2, 1, "", "has_perfect_matching"], [36, 2, 1, "", "hyperbolicity"], [36, 2, 1, "", "ihara_zeta_function_inverse"], [36, 2, 1, "", "independent_set"], [36, 2, 1, "", "independent_set_of_representatives"], [36, 2, 1, "", "is_antipodal"], [36, 2, 1, "", "is_apex"], [36, 2, 1, "", "is_arc_transitive"], [36, 2, 1, "", "is_asteroidal_triple_free"], [36, 2, 1, "", "is_biconnected"], [36, 2, 1, "", "is_block_graph"], [36, 2, 1, "", "is_cactus"], [36, 2, 1, "", "is_cartesian_product"], [36, 2, 1, "", "is_circumscribable"], [36, 2, 1, "", "is_cograph"], [36, 2, 1, "", "is_comparability"], [36, 2, 1, "", "is_directed"], [36, 2, 1, "", "is_distance_regular"], [36, 2, 1, "", "is_dominating"], [36, 2, 1, "", "is_edge_transitive"], [36, 2, 1, "", "is_even_hole_free"], [36, 2, 1, "", "is_factor_critical"], [36, 2, 1, "", "is_forest"], [36, 2, 1, "", "is_half_transitive"], [36, 2, 1, "", "is_inscribable"], [36, 2, 1, "", "is_line_graph"], [36, 2, 1, "", "is_long_antihole_free"], [36, 2, 1, "", "is_long_hole_free"], [36, 2, 1, "", "is_odd_hole_free"], [36, 2, 1, "", "is_overfull"], [36, 2, 1, "", "is_partial_cube"], [36, 2, 1, "", "is_path"], [36, 2, 1, "", "is_perfect"], [36, 2, 1, "", "is_permutation"], [36, 2, 1, "", "is_polyhedral"], [36, 2, 1, "", "is_prime"], [36, 2, 1, "", "is_redundant"], [36, 2, 1, "", "is_semi_symmetric"], [36, 2, 1, "", "is_split"], [36, 2, 1, "", "is_strongly_regular"], [36, 2, 1, "", "is_tree"], [36, 2, 1, "", "is_triangle_free"], [36, 2, 1, "", "is_triconnected"], [36, 2, 1, "", "is_weakly_chordal"], [36, 2, 1, "", "join"], [36, 2, 1, "", "kirchhoff_symanzik_polynomial"], [36, 2, 1, "", "least_effective_resistance"], [36, 2, 1, "", "lex_M"], [36, 2, 1, "", "lovasz_theta"], [36, 2, 1, "", "magnitude_function"], [36, 2, 1, "", "matching"], [36, 2, 1, "", "matching_polynomial"], [36, 2, 1, "", "maximum_average_degree"], [36, 2, 1, "", "maximum_cardinality_search"], [36, 2, 1, "", "maximum_cardinality_search_M"], [36, 2, 1, "", "minimal_dominating_sets"], [36, 2, 1, "", "minimum_outdegree_orientation"], [36, 2, 1, "", "minor"], [36, 2, 1, "", "modular_decomposition"], [36, 2, 1, "", "most_common_neighbors"], [36, 2, 1, "", "orientations"], [36, 2, 1, "", "pathwidth"], [36, 2, 1, "", "perfect_matchings"], [36, 2, 1, "", "periphery"], [36, 2, 1, "", "private_neighbors"], [36, 2, 1, "", "radius"], [36, 2, 1, "", "random_orientation"], [36, 2, 1, "", "random_spanning_tree"], [36, 2, 1, "", "rank_decomposition"], [36, 2, 1, "", "seidel_adjacency_matrix"], [36, 2, 1, "", "seidel_switching"], [36, 2, 1, "", "spanning_trees"], [36, 2, 1, "", "sparse6_string"], [36, 2, 1, "", "spqr_tree"], [36, 2, 1, "", "strong_orientation"], [36, 2, 1, "", "strong_orientations_iterator"], [36, 2, 1, "", "to_directed"], [36, 2, 1, "", "to_undirected"], [36, 2, 1, "", "topological_minor"], [36, 2, 1, "", "treelength"], [36, 2, 1, "", "treewidth"], [36, 2, 1, "", "tutte_polynomial"], [36, 2, 1, "", "two_factor_petersen"], [36, 2, 1, "", "twograph"], [36, 2, 1, "", "vertex_cover"], [36, 2, 1, "", "vertex_isoperimetric_number"], [36, 2, 1, "", "write_to_eps"]], "sage.graphs.graph_coloring": [[37, 1, 1, "", "Test"], [37, 3, 1, "", "acyclic_edge_coloring"], [37, 3, 1, "", "all_graph_colorings"], [37, 3, 1, "", "b_coloring"], [37, 3, 1, "", "chromatic_number"], [37, 3, 1, "", "edge_coloring"], [37, 3, 1, "", "first_coloring"], [37, 3, 1, "", "fractional_chromatic_index"], [37, 3, 1, "", "fractional_chromatic_number"], [37, 3, 1, "", "grundy_coloring"], [37, 3, 1, "", "linear_arboricity"], [37, 3, 1, "", "number_of_n_colorings"], [37, 3, 1, "", "numbers_of_colorings"], [37, 3, 1, "", "round_robin"], [37, 3, 1, "", "vertex_coloring"]], "sage.graphs.graph_coloring.Test": [[37, 2, 1, "", "random"], [37, 2, 1, "", "random_all_graph_colorings"]], "sage.graphs.graph_database": [[38, 1, 1, "", "GenericGraphQuery"], [38, 1, 1, "", "GraphDatabase"], [38, 1, 1, "", "GraphQuery"], [38, 3, 1, "", "data_to_degseq"], [38, 3, 1, "", "degseq_to_data"], [38, 3, 1, "", "graph6_to_plot"], [38, 3, 1, "", "graph_db_info"], [38, 3, 1, "", "subgraphs_to_query"]], "sage.graphs.graph_database.GraphDatabase": [[38, 2, 1, "", "interactive_query"], [38, 2, 1, "", "query"]], "sage.graphs.graph_database.GraphQuery": [[38, 2, 1, "", "get_graphs_list"], [38, 2, 1, "", "number_of"], [38, 2, 1, "", "query_iterator"], [38, 2, 1, "", "show"]], "sage.graphs.graph_decompositions": [[39, 0, 0, "-", "bandwidth"], [40, 0, 0, "-", "clique_separators"], [41, 0, 0, "-", "cutwidth"], [42, 0, 0, "-", "graph_products"], [43, 0, 0, "-", "modular_decomposition"], [44, 0, 0, "-", "rankwidth"], [45, 0, 0, "-", "tree_decomposition"], [46, 0, 0, "-", "vertex_separation"]], "sage.graphs.graph_decompositions.bandwidth": [[39, 3, 1, "", "bandwidth"]], "sage.graphs.graph_decompositions.clique_separators": [[40, 3, 1, "", "atoms_and_clique_separators"], [40, 3, 1, "", "make_labelled_rooted_tree"], [40, 3, 1, "", "make_tree"]], "sage.graphs.graph_decompositions.cutwidth": [[41, 3, 1, "", "cutwidth"], [41, 3, 1, "", "cutwidth_MILP"], [41, 3, 1, "", "cutwidth_dyn"], [41, 3, 1, "", "width_of_cut_decomposition"]], "sage.graphs.graph_decompositions.graph_products": [[42, 3, 1, "", "is_cartesian_product"]], "sage.graphs.graph_decompositions.modular_decomposition": [[43, 1, 1, "", "Node"], [43, 1, 1, "", "NodeSplit"], [43, 1, 1, "", "NodeType"], [43, 1, 1, "", "VertexPosition"], [43, 3, 1, "", "children_node_type"], [43, 3, 1, "", "create_normal_node"], [43, 3, 1, "", "create_parallel_node"], [43, 3, 1, "", "create_prime_node"], [43, 3, 1, "", "create_series_node"], [43, 3, 1, "", "either_connected_or_not_connected"], [43, 3, 1, "", "equivalent_trees"], [43, 3, 1, "", "form_module"], [43, 3, 1, "", "gamma_classes"], [43, 3, 1, "", "get_module_type"], [43, 3, 1, "", "get_vertices"], [43, 3, 1, "", "habib_maurer_algorithm"], [43, 3, 1, "", "md_tree_to_graph"], [43, 3, 1, "", "modular_decomposition"], [43, 3, 1, "", "nested_tuple_to_tree"], [43, 3, 1, "", "permute_decomposition"], [43, 3, 1, "", "print_md_tree"], [43, 3, 1, "", "random_md_tree"], [43, 3, 1, "", "recreate_decomposition"], [43, 3, 1, "", "relabel_tree"], [43, 3, 1, "", "test_gamma_modules"], [43, 3, 1, "", "test_maximal_modules"], [43, 3, 1, "", "test_modular_decomposition"], [43, 3, 1, "", "test_module"], [43, 3, 1, "", "tree_to_nested_tuple"]], "sage.graphs.graph_decompositions.modular_decomposition.Node": [[43, 2, 1, "", "has_left_split"], [43, 2, 1, "", "has_right_split"], [43, 2, 1, "", "set_node_split"]], "sage.graphs.graph_decompositions.modular_decomposition.NodeSplit": [[43, 4, 1, "", "BOTH_SPLIT"], [43, 4, 1, "", "LEFT_SPLIT"], [43, 4, 1, "", "NO_SPLIT"], [43, 4, 1, "", "RIGHT_SPLIT"]], "sage.graphs.graph_decompositions.modular_decomposition.NodeType": [[43, 4, 1, "", "FOREST"], [43, 4, 1, "", "NORMAL"], [43, 4, 1, "", "PARALLEL"], [43, 4, 1, "", "PRIME"], [43, 4, 1, "", "SERIES"]], "sage.graphs.graph_decompositions.modular_decomposition.VertexPosition": [[43, 4, 1, "", "LEFT_OF_SOURCE"], [43, 4, 1, "", "RIGHT_OF_SOURCE"], [43, 4, 1, "", "SOURCE"]], "sage.graphs.graph_decompositions.rankwidth": [[44, 3, 1, "", "mkgraph"], [44, 3, 1, "", "rank_decomposition"]], "sage.graphs.graph_decompositions.tree_decomposition": [[45, 1, 1, "", "TreelengthConnected"], [45, 3, 1, "", "is_valid_tree_decomposition"], [45, 3, 1, "", "reduced_tree_decomposition"], [45, 3, 1, "", "treelength"], [45, 3, 1, "", "treelength_lowerbound"], [45, 3, 1, "", "treewidth"], [45, 3, 1, "", "width_of_tree_decomposition"]], "sage.graphs.graph_decompositions.tree_decomposition.TreelengthConnected": [[45, 2, 1, "", "get_length"], [45, 2, 1, "", "get_tree_decomposition"], [45, 2, 1, "", "is_less_than_k"]], "sage.graphs.graph_decompositions.vertex_separation": [[46, 3, 1, "", "is_valid_ordering"], [46, 3, 1, "", "linear_ordering_to_path_decomposition"], [46, 3, 1, "", "lower_bound"], [46, 3, 1, "", "path_decomposition"], [46, 3, 1, "", "pathwidth"], [46, 3, 1, "", "vertex_separation"], [46, 3, 1, "", "vertex_separation_BAB"], [46, 3, 1, "", "vertex_separation_MILP"], [46, 3, 1, "", "vertex_separation_exp"], [46, 3, 1, "", "width_of_path_decomposition"]], "sage.graphs.graph_editor": [[47, 3, 1, "", "graph_editor"]], "sage.graphs.graph_generators": [[48, 1, 1, "", "GraphGenerators"], [48, 3, 1, "", "canaug_traverse_edge"], [48, 3, 1, "", "canaug_traverse_vert"], [48, 3, 1, "", "check_aut"], [48, 3, 1, "", "check_aut_edge"]], "sage.graphs.graph_generators.GraphGenerators": [[48, 2, 1, "", "AffineOrthogonalPolarGraph"], [48, 2, 1, "", "AfricaMap"], [48, 2, 1, "", "AhrensSzekeresGeneralizedQuadrangleGraph"], [48, 2, 1, "", "AlternatingFormsGraph"], [48, 2, 1, "", "AztecDiamondGraph"], [48, 2, 1, "", "Balaban10Cage"], [48, 2, 1, "", "Balaban11Cage"], [48, 2, 1, "", "BalancedTree"], [48, 2, 1, "", "BarbellGraph"], [48, 2, 1, "", "BidiakisCube"], [48, 2, 1, "", "BiggsSmithGraph"], [48, 2, 1, "", "BilinearFormsGraph"], [48, 2, 1, "", "BishopGraph"], [48, 2, 1, "", "BlanusaFirstSnarkGraph"], [48, 2, 1, "", "BlanusaSecondSnarkGraph"], [48, 2, 1, "", "BrinkmannGraph"], [48, 2, 1, "", "BrouwerHaemersGraph"], [48, 2, 1, "", "BubbleSortGraph"], [48, 2, 1, "", "BuckyBall"], [48, 2, 1, "", "BullGraph"], [48, 2, 1, "", "ButterflyGraph"], [48, 2, 1, "", "CaiFurerImmermanGraph"], [48, 2, 1, "", "CameronGraph"], [48, 2, 1, "", "Cell120"], [48, 2, 1, "", "Cell600"], [48, 2, 1, "", "ChessboardGraphGenerator"], [48, 2, 1, "", "ChvatalGraph"], [48, 2, 1, "", "CirculantGraph"], [48, 2, 1, "", "CircularLadderGraph"], [48, 2, 1, "", "ClawGraph"], [48, 2, 1, "", "ClebschGraph"], [48, 2, 1, "", "CompleteBipartiteGraph"], [48, 2, 1, "", "CompleteGraph"], [48, 2, 1, "", "CompleteMultipartiteGraph"], [48, 2, 1, "", "ConwaySmith_for_3S7"], [48, 2, 1, "", "CossidentePenttilaGraph"], [48, 2, 1, "", "CoxeterGraph"], [48, 2, 1, "", "CubeConnectedCycle"], [48, 2, 1, "", "CubeGraph"], [48, 2, 1, "", "CycleGraph"], [48, 2, 1, "", "DartGraph"], [48, 2, 1, "", "DegreeSequence"], [48, 2, 1, "", "DegreeSequenceBipartite"], [48, 2, 1, "", "DegreeSequenceConfigurationModel"], [48, 2, 1, "", "DegreeSequenceExpected"], [48, 2, 1, "", "DegreeSequenceTree"], [48, 2, 1, "", "DejterGraph"], [48, 2, 1, "", "DesarguesGraph"], [48, 2, 1, "", "DiamondGraph"], [48, 2, 1, "", "DipoleGraph"], [48, 2, 1, "", "DodecahedralGraph"], [48, 2, 1, "", "DorogovtsevGoltsevMendesGraph"], [48, 2, 1, "", "DoubleGeneralizedPetersenGraph"], [48, 2, 1, "", "DoubleGrassmannGraph"], [48, 2, 1, "", "DoubleOddGraph"], [48, 2, 1, "", "DoubleStarSnark"], [48, 2, 1, "", "DoublyTruncatedWittGraph"], [48, 2, 1, "", "DurerGraph"], [48, 2, 1, "", "DyckGraph"], [48, 2, 1, "", "EgawaGraph"], [48, 2, 1, "", "EllinghamHorton54Graph"], [48, 2, 1, "", "EllinghamHorton78Graph"], [48, 2, 1, "", "EmptyGraph"], [48, 2, 1, "", "ErreraGraph"], [48, 2, 1, "", "EuropeMap"], [48, 2, 1, "", "F26AGraph"], [48, 2, 1, "", "FibonacciTree"], [48, 2, 1, "", "FlowerSnark"], [48, 2, 1, "", "FoldedCubeGraph"], [48, 2, 1, "", "FolkmanGraph"], [48, 2, 1, "", "ForkGraph"], [48, 2, 1, "", "FosterGraph"], [48, 2, 1, "", "FosterGraph3S6"], [48, 2, 1, "", "FranklinGraph"], [48, 2, 1, "", "FriendshipGraph"], [48, 2, 1, "", "FruchtGraph"], [48, 2, 1, "", "FurerGadget"], [48, 2, 1, "", "FuzzyBallGraph"], [48, 2, 1, "", "GemGraph"], [48, 2, 1, "", "GeneralisedDodecagonGraph"], [48, 2, 1, "", "GeneralisedHexagonGraph"], [48, 2, 1, "", "GeneralisedOctagonGraph"], [48, 2, 1, "", "GeneralizedPetersenGraph"], [48, 2, 1, "", "GeneralizedSierpinskiGraph"], [48, 2, 1, "", "GoethalsSeidelGraph"], [48, 2, 1, "", "GoldnerHararyGraph"], [48, 2, 1, "", "GolombGraph"], [48, 2, 1, "", "GossetGraph"], [48, 2, 1, "", "GrassmannGraph"], [48, 2, 1, "", "GrayGraph"], [48, 2, 1, "", "Grid2dGraph"], [48, 2, 1, "", "GridGraph"], [48, 2, 1, "", "GritsenkoGraph"], [48, 2, 1, "", "GrotzschGraph"], [48, 2, 1, "", "HaemersGraph"], [48, 2, 1, "", "HalfCube"], [48, 2, 1, "", "HallJankoGraph"], [48, 2, 1, "", "HammingGraph"], [48, 2, 1, "", "HanoiTowerGraph"], [48, 2, 1, "", "HararyGraph"], [48, 2, 1, "", "HarborthGraph"], [48, 2, 1, "", "HarriesGraph"], [48, 2, 1, "", "HarriesWongGraph"], [48, 2, 1, "", "HeawoodGraph"], [48, 2, 1, "", "HermitianFormsGraph"], [48, 2, 1, "", "HerschelGraph"], [48, 2, 1, "", "HexahedralGraph"], [48, 2, 1, "", "HigmanSimsGraph"], [48, 2, 1, "", "HoffmanGraph"], [48, 2, 1, "", "HoffmanSingletonGraph"], [48, 2, 1, "", "HoltGraph"], [48, 2, 1, "", "HortonGraph"], [48, 2, 1, "", "HouseGraph"], [48, 2, 1, "", "HouseXGraph"], [48, 2, 1, "", "HyperStarGraph"], [48, 2, 1, "", "IGraph"], [48, 2, 1, "", "IcosahedralGraph"], [48, 2, 1, "", "IntersectionGraph"], [48, 2, 1, "", "IntervalGraph"], [48, 2, 1, "", "IoninKharaghani765Graph"], [48, 2, 1, "", "IvanovIvanovFaradjevGraph"], [48, 2, 1, "", "J2Graph"], [48, 2, 1, "", "JankoKharaghaniGraph"], [48, 2, 1, "", "JankoKharaghaniTonchevGraph"], [48, 2, 1, "", "JohnsonGraph"], [48, 2, 1, "", "KingGraph"], [48, 2, 1, "", "KittellGraph"], [48, 2, 1, "", "Klein3RegularGraph"], [48, 2, 1, "", "Klein7RegularGraph"], [48, 2, 1, "", "KneserGraph"], [48, 2, 1, "", "KnightGraph"], [48, 2, 1, "", "KrackhardtKiteGraph"], [48, 2, 1, "", "LCFGraph"], [48, 2, 1, "", "LadderGraph"], [48, 2, 1, "", "LargeWittGraph"], [48, 2, 1, "", "LeonardGraph"], [48, 2, 1, "", "LivingstoneGraph"], [48, 2, 1, "", "LjubljanaGraph"], [48, 2, 1, "", "LocalMcLaughlinGraph"], [48, 2, 1, "", "LollipopGraph"], [48, 2, 1, "", "M22Graph"], [48, 2, 1, "", "MarkstroemGraph"], [48, 2, 1, "", "MathonPseudocyclicMergingGraph"], [48, 2, 1, "", "MathonPseudocyclicStronglyRegularGraph"], [48, 2, 1, "", "MathonStronglyRegularGraph"], [48, 2, 1, "", "McGeeGraph"], [48, 2, 1, "", "McLaughlinGraph"], [48, 2, 1, "", "MeredithGraph"], [48, 2, 1, "", "MoebiusKantorGraph"], [48, 2, 1, "", "MoserSpindle"], [48, 2, 1, "", "MuzychukS6Graph"], [48, 2, 1, "", "MycielskiGraph"], [48, 2, 1, "", "MycielskiStep"], [48, 2, 1, "", "NKStarGraph"], [48, 2, 1, "", "NStarGraph"], [48, 2, 1, "", "NauruGraph"], [48, 2, 1, "", "NonisotropicOrthogonalPolarGraph"], [48, 2, 1, "", "NonisotropicUnitaryPolarGraph"], [48, 2, 1, "", "Nowhere0WordsTwoWeightCodeGraph"], [48, 2, 1, "", "OctahedralGraph"], [48, 2, 1, "", "OddGraph"], [48, 2, 1, "", "OrthogonalArrayBlockGraph"], [48, 2, 1, "", "OrthogonalDualPolarGraph"], [48, 2, 1, "", "OrthogonalPolarGraph"], [48, 2, 1, "", "PaleyGraph"], [48, 2, 1, "", "PappusGraph"], [48, 2, 1, "", "PasechnikGraph"], [48, 2, 1, "", "PathGraph"], [48, 2, 1, "", "PerkelGraph"], [48, 2, 1, "", "PermutationGraph"], [48, 2, 1, "", "PetersenGraph"], [48, 2, 1, "", "PoussinGraph"], [48, 2, 1, "", "QueenGraph"], [48, 2, 1, "", "RandomBarabasiAlbert"], [48, 2, 1, "", "RandomBicubicPlanar"], [48, 2, 1, "", "RandomBipartite"], [48, 2, 1, "", "RandomBlockGraph"], [48, 2, 1, "", "RandomBoundedToleranceGraph"], [48, 2, 1, "", "RandomChordalGraph"], [48, 2, 1, "", "RandomGNM"], [48, 2, 1, "", "RandomGNP"], [48, 2, 1, "", "RandomHolmeKim"], [48, 2, 1, "", "RandomIntervalGraph"], [48, 2, 1, "", "RandomLobster"], [48, 2, 1, "", "RandomNewmanWattsStrogatz"], [48, 2, 1, "", "RandomRegular"], [48, 2, 1, "", "RandomRegularBipartite"], [48, 2, 1, "", "RandomShell"], [48, 2, 1, "", "RandomToleranceGraph"], [48, 2, 1, "", "RandomTree"], [48, 2, 1, "", "RandomTreePowerlaw"], [48, 2, 1, "", "RandomTriangulation"], [48, 2, 1, "", "RandomUnitDiskGraph"], [48, 2, 1, "", "RingedTree"], [48, 2, 1, "", "RobertsonGraph"], [48, 2, 1, "", "RookGraph"], [48, 2, 1, "", "RoseWindowGraph"], [48, 2, 1, "", "SchlaefliGraph"], [48, 2, 1, "", "ShrikhandeGraph"], [48, 2, 1, "", "SierpinskiGasketGraph"], [48, 2, 1, "", "SimsGewirtzGraph"], [48, 2, 1, "", "SousselierGraph"], [48, 2, 1, "", "SquaredSkewHadamardMatrixGraph"], [48, 2, 1, "", "StarGraph"], [48, 2, 1, "", "SuzukiGraph"], [48, 2, 1, "", "SwitchedSquaredSkewHadamardMatrixGraph"], [48, 2, 1, "", "SylvesterGraph"], [48, 2, 1, "", "SymplecticDualPolarGraph"], [48, 2, 1, "", "SymplecticPolarGraph"], [48, 2, 1, "", "SzekeresSnarkGraph"], [48, 2, 1, "", "T2starGeneralizedQuadrangleGraph"], [48, 2, 1, "", "TabacjnGraph"], [48, 2, 1, "", "TadpoleGraph"], [48, 2, 1, "", "TaylorTwographDescendantSRG"], [48, 2, 1, "", "TaylorTwographSRG"], [48, 2, 1, "", "TetrahedralGraph"], [48, 2, 1, "", "ThomsenGraph"], [48, 2, 1, "", "TietzeGraph"], [48, 2, 1, "", "ToleranceGraph"], [48, 2, 1, "", "Toroidal6RegularGrid2dGraph"], [48, 2, 1, "", "ToroidalGrid2dGraph"], [48, 2, 1, "", "TruncatedIcosidodecahedralGraph"], [48, 2, 1, "", "TruncatedTetrahedralGraph"], [48, 2, 1, "", "TruncatedWittGraph"], [48, 2, 1, "", "TuranGraph"], [48, 2, 1, "", "Tutte12Cage"], [48, 2, 1, "", "TutteCoxeterGraph"], [48, 2, 1, "", "TutteGraph"], [48, 2, 1, "", "U42Graph216"], [48, 2, 1, "", "U42Graph540"], [48, 2, 1, "", "USAMap"], [48, 2, 1, "", "UnitaryDualPolarGraph"], [48, 2, 1, "", "UnitaryPolarGraph"], [48, 2, 1, "", "UstimenkoGraph"], [48, 2, 1, "", "WagnerGraph"], [48, 2, 1, "", "WatkinsSnarkGraph"], [48, 2, 1, "", "WellsGraph"], [48, 2, 1, "", "WheelGraph"], [48, 2, 1, "", "WienerArayaGraph"], [48, 2, 1, "", "WindmillGraph"], [48, 2, 1, "", "WorldMap"], [48, 4, 1, "", "basic"], [48, 2, 1, "", "chang_graphs"], [48, 4, 1, "", "chessboard"], [48, 4, 1, "", "classical_geometries"], [48, 2, 1, "", "cocliques_HoffmannSingleton"], [48, 2, 1, "", "cospectral_graphs"], [48, 4, 1, "", "degree_sequence"], [48, 2, 1, "", "distance_3_doubly_truncated_Golay_code_graph"], [48, 4, 1, "", "distance_regular"], [48, 2, 1, "", "distance_regular_graph"], [48, 4, 1, "", "families"], [48, 2, 1, "", "fullerenes"], [48, 2, 1, "", "fusenes"], [48, 2, 1, "", "graph_3O73"], [48, 4, 1, "", "intersection"], [48, 2, 1, "", "line_graph_forbidden_subgraphs"], [48, 2, 1, "", "locally_GQ42_distance_transitive_graph"], [48, 2, 1, "", "nauty_genbg"], [48, 2, 1, "", "nauty_geng"], [48, 2, 1, "", "nauty_gentreeg"], [48, 2, 1, "", "petersen_family"], [48, 2, 1, "", "planar_graphs"], [48, 2, 1, "", "plantri_gen"], [48, 4, 1, "", "platonic_solids"], [48, 2, 1, "", "quadrangulations"], [48, 4, 1, "", "random"], [48, 2, 1, "", "shortened_000_111_extended_binary_Golay_code_graph"], [48, 2, 1, "", "shortened_00_11_binary_Golay_code_graph"], [48, 4, 1, "", "smallgraphs"], [48, 4, 1, "", "strongly_regular_db"], [48, 2, 1, "", "strongly_regular_graph"], [48, 2, 1, "", "trees"], [48, 2, 1, "", "triangulations"], [48, 2, 1, "", "vanLintSchrijverGraph"], [48, 4, 1, "", "world_map"]], "sage.graphs.graph_generators_pyx": [[49, 3, 1, "", "RandomGNP"]], "sage.graphs.graph_input": [[50, 3, 1, "", "from_adjacency_matrix"], [50, 3, 1, "", "from_dict_of_dicts"], [50, 3, 1, "", "from_dict_of_lists"], [50, 3, 1, "", "from_dig6"], [50, 3, 1, "", "from_graph6"], [50, 3, 1, "", "from_incidence_matrix"], [50, 3, 1, "", "from_networkx_graph"], [50, 3, 1, "", "from_oriented_incidence_matrix"], [50, 3, 1, "", "from_seidel_adjacency_matrix"], [50, 3, 1, "", "from_sparse6"]], "sage.graphs.graph_latex": [[51, 1, 1, "", "GraphLatex"], [51, 3, 1, "", "check_tkz_graph"], [51, 3, 1, "", "have_tkz_graph"], [51, 3, 1, "", "setup_latex_preamble"]], "sage.graphs.graph_latex.GraphLatex": [[51, 2, 1, "", "dot2tex_picture"], [51, 2, 1, "", "get_option"], [51, 2, 1, "", "latex"], [51, 2, 1, "", "set_option"], [51, 2, 1, "", "set_options"], [51, 2, 1, "", "tkz_picture"]], "sage.graphs.graph_list": [[52, 3, 1, "", "from_graph6"], [52, 3, 1, "", "from_sparse6"], [52, 3, 1, "", "from_whatever"], [52, 3, 1, "", "show_graphs"], [52, 3, 1, "", "to_graph6"], [52, 3, 1, "", "to_graphics_array"], [52, 3, 1, "", "to_sparse6"]], "sage.graphs.graph_plot": [[53, 1, 1, "", "GraphPlot"]], "sage.graphs.graph_plot.GraphPlot": [[53, 2, 1, "", "layout_tree"], [53, 2, 1, "", "plot"], [53, 2, 1, "", "set_edges"], [53, 2, 1, "", "set_pos"], [53, 2, 1, "", "set_vertices"], [53, 2, 1, "", "show"]], "sage.graphs.graph_plot_js": [[54, 3, 1, "", "gen_html_code"]], "sage.graphs.hyperbolicity": [[55, 3, 1, "", "hyperbolicity"], [55, 3, 1, "", "hyperbolicity_distribution"]], "sage.graphs.hypergraph_generators": [[56, 1, 1, "", "HypergraphGenerators"]], "sage.graphs.hypergraph_generators.HypergraphGenerators": [[56, 2, 1, "", "BinomialRandomUniform"], [56, 2, 1, "", "CompleteUniform"], [56, 2, 1, "", "UniformRandomUniform"], [56, 2, 1, "", "nauty"]], "sage.graphs.independent_sets": [[57, 1, 1, "", "IndependentSets"]], "sage.graphs.independent_sets.IndependentSets": [[57, 2, 1, "", "cardinality"]], "sage.graphs.isgci": [[58, 1, 1, "", "GraphClass"], [58, 1, 1, "", "GraphClasses"]], "sage.graphs.isgci.GraphClass": [[58, 2, 1, "", "description"], [58, 2, 1, "", "forbidden_subgraphs"]], "sage.graphs.isgci.GraphClasses": [[58, 2, 1, "", "classes"], [58, 2, 1, "", "get_class"], [58, 2, 1, "", "inclusion_digraph"], [58, 2, 1, "", "inclusions"], [58, 2, 1, "", "show_all"], [58, 2, 1, "", "smallgraphs"], [58, 2, 1, "", "update_db"]], "sage.graphs.line_graph": [[59, 3, 1, "", "is_line_graph"], [59, 3, 1, "", "line_graph"], [59, 3, 1, "", "root_graph"]], "sage.graphs.lovasz_theta": [[60, 3, 1, "", "lovasz_theta"]], "sage.graphs.matchpoly": [[61, 3, 1, "", "complete_poly"], [61, 3, 1, "", "matching_polynomial"]], "sage.graphs.orientations": [[62, 3, 1, "", "random_orientation"], [62, 3, 1, "", "strong_orientations_iterator"]], "sage.graphs.partial_cube": [[63, 3, 1, "", "breadth_first_level_search"], [63, 3, 1, "", "depth_first_traversal"], [63, 3, 1, "", "is_partial_cube"]], "sage.graphs.path_enumeration": [[64, 3, 1, "", "all_paths"], [64, 3, 1, "", "all_paths_iterator"], [64, 3, 1, "", "all_simple_paths"], [64, 3, 1, "", "feng_k_shortest_simple_paths"], [64, 3, 1, "", "shortest_simple_paths"], [64, 3, 1, "", "yen_k_shortest_simple_paths"]], "sage.graphs.planarity": [[65, 3, 1, "", "is_planar"]], "sage.graphs.pq_trees": [[66, 1, 1, "", "P"], [66, 1, 1, "", "PQ"], [66, 1, 1, "", "Q"], [66, 3, 1, "", "reorder_sets"]], "sage.graphs.pq_trees.P": [[66, 2, 1, "", "cardinality"], [66, 2, 1, "", "orderings"], [66, 2, 1, "", "set_contiguous"]], "sage.graphs.pq_trees.PQ": [[66, 2, 1, "", "flatten"], [66, 2, 1, "", "number_of_children"], [66, 2, 1, "", "ordering"], [66, 2, 1, "", "reverse"], [66, 2, 1, "", "simplify"]], "sage.graphs.pq_trees.Q": [[66, 2, 1, "", "cardinality"], [66, 2, 1, "", "orderings"], [66, 2, 1, "", "set_contiguous"]], "sage.graphs.schnyder": [[67, 1, 1, "", "TreeNode"], [67, 3, 1, "", "minimal_schnyder_wood"]], "sage.graphs.schnyder.TreeNode": [[67, 2, 1, "", "append_child"], [67, 2, 1, "", "compute_depth_of_self_and_children"], [67, 2, 1, "", "compute_number_of_descendants"]], "sage.graphs.spanning_tree": [[68, 3, 1, "", "boruvka"], [68, 3, 1, "", "edge_disjoint_spanning_trees"], [68, 3, 1, "", "filter_kruskal"], [68, 3, 1, "", "filter_kruskal_iterator"], [68, 3, 1, "", "kruskal"], [68, 3, 1, "", "kruskal_iterator"], [68, 3, 1, "", "kruskal_iterator_from_edges"], [68, 3, 1, "", "random_spanning_tree"], [68, 3, 1, "", "spanning_trees"]], "sage.graphs.strongly_regular_db": [[69, 3, 1, "", "SRG_100_44_18_20"], [69, 3, 1, "", "SRG_100_45_20_20"], [69, 3, 1, "", "SRG_105_32_4_12"], [69, 3, 1, "", "SRG_120_63_30_36"], [69, 3, 1, "", "SRG_120_77_52_44"], [69, 3, 1, "", "SRG_126_25_8_4"], [69, 3, 1, "", "SRG_126_50_13_24"], [69, 3, 1, "", "SRG_1288_792_476_504"], [69, 3, 1, "", "SRG_144_39_6_12"], [69, 3, 1, "", "SRG_175_72_20_36"], [69, 3, 1, "", "SRG_176_105_68_54"], [69, 3, 1, "", "SRG_176_49_12_14"], [69, 3, 1, "", "SRG_176_90_38_54"], [69, 3, 1, "", "SRG_196_91_42_42"], [69, 3, 1, "", "SRG_210_99_48_45"], [69, 3, 1, "", "SRG_220_84_38_28"], [69, 3, 1, "", "SRG_243_110_37_60"], [69, 3, 1, "", "SRG_253_140_87_65"], [69, 3, 1, "", "SRG_276_140_58_84"], [69, 3, 1, "", "SRG_280_117_44_52"], [69, 3, 1, "", "SRG_280_135_70_60"], [69, 3, 1, "", "SRG_416_100_36_20"], [69, 3, 1, "", "SRG_560_208_72_80"], [69, 3, 1, "", "SRG_630_85_20_10"], [69, 3, 1, "", "SRG_from_RSHCD"], [69, 3, 1, "", "apparently_feasible_parameters"], [69, 3, 1, "", "eigenmatrix"], [69, 3, 1, "", "is_GQqmqp"], [69, 3, 1, "", "is_NO_F2"], [69, 3, 1, "", "is_NO_F3"], [69, 3, 1, "", "is_NOodd"], [69, 3, 1, "", "is_NOperp_F5"], [69, 3, 1, "", "is_NU"], [69, 3, 1, "", "is_RSHCD"], [69, 3, 1, "", "is_affine_polar"], [69, 3, 1, "", "is_complete_multipartite"], [69, 3, 1, "", "is_cossidente_penttila"], [69, 3, 1, "", "is_goethals_seidel"], [69, 3, 1, "", "is_haemers"], [69, 3, 1, "", "is_johnson"], [69, 3, 1, "", "is_mathon_PC_srg"], [69, 3, 1, "", "is_muzychuk_S6"], [69, 3, 1, "", "is_nowhere0_twoweight"], [69, 3, 1, "", "is_orthogonal_array_block_graph"], [69, 3, 1, "", "is_orthogonal_polar"], [69, 3, 1, "", "is_paley"], [69, 3, 1, "", "is_polhill"], [69, 3, 1, "", "is_steiner"], [69, 3, 1, "", "is_switch_OA_srg"], [69, 3, 1, "", "is_switch_skewhad"], [69, 3, 1, "", "is_taylor_twograph_srg"], [69, 3, 1, "", "is_twograph_descendant_of_srg"], [69, 3, 1, "", "is_unitary_dual_polar"], [69, 3, 1, "", "is_unitary_polar"], [69, 3, 1, "", "latin_squares_graph_parameters"], [69, 3, 1, "", "strongly_regular_from_two_intersection_set"], [69, 3, 1, "", "strongly_regular_from_two_weight_code"], [69, 3, 1, "", "strongly_regular_graph"], [69, 3, 1, "", "strongly_regular_graph_lazy"]], "sage.graphs.traversals": [[70, 3, 1, "", "is_valid_lex_M_order"], [70, 3, 1, "", "lex_BFS"], [70, 3, 1, "", "lex_DFS"], [70, 3, 1, "", "lex_DOWN"], [70, 3, 1, "", "lex_M"], [70, 3, 1, "", "lex_M_fast"], [70, 3, 1, "", "lex_M_slow"], [70, 3, 1, "", "lex_UP"], [70, 3, 1, "", "maximum_cardinality_search"], [70, 3, 1, "", "maximum_cardinality_search_M"]], "sage.graphs.trees": [[71, 1, 1, "", "TreeIterator"]], "sage.graphs.tutte_polynomial": [[72, 1, 1, "", "Ear"], [72, 1, 1, "", "EdgeSelection"], [72, 1, 1, "", "MaximizeDegree"], [72, 1, 1, "", "MinimizeDegree"], [72, 1, 1, "", "MinimizeSingleDegree"], [72, 1, 1, "", "VertexOrder"], [72, 3, 1, "", "contracted_edge"], [72, 3, 1, "", "edge_multiplicities"], [72, 3, 1, "", "removed_edge"], [72, 3, 1, "", "removed_loops"], [72, 3, 1, "", "removed_multiedge"], [72, 3, 1, "", "tutte_polynomial"], [72, 3, 1, "", "underlying_graph"]], "sage.graphs.tutte_polynomial.Ear": [[72, 2, 1, "", "find_ear"], [72, 2, 1, "", "removed_from"], [72, 5, 1, "", "s"], [72, 2, 1, "", "unlabeled_edges"], [72, 5, 1, "", "vertices"]], "sage.graphs.views": [[73, 1, 1, "", "EdgesView"]], "sage.graphs.weakly_chordal": [[74, 3, 1, "", "is_long_antihole_free"], [74, 3, 1, "", "is_long_hole_free"], [74, 3, 1, "", "is_weakly_chordal"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"graph": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 69, 70, 74], "theori": 0, "object": 0, "method": [0, 1, 6, 10, 14, 15, 16, 17, 18, 19, 21, 33, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 55, 56, 57, 58, 61, 62, 66, 68, 70, 74], "constructor": 0, "databas": [0, 26, 36, 38, 69], "low": 0, "level": 0, "implement": [0, 15], "hypergraph": [0, 1, 56], "librari": 0, "algorithm": [0, 2, 3, 15, 39, 41, 42, 46, 63, 65, 67], "indic": 0, "tabl": 0, "incid": 1, "structur": [1, 4, 5, 7, 8, 11], "i": [1, 11], "e": 1, "set": [1, 57], "system": [1, 58], "asteroid": 2, "tripl": 2, "definit": [2, 39, 59, 63, 72], "function": [2, 3, 9, 11, 13, 16, 19, 20, 34, 39, 48, 50, 51, 54, 56, 59, 60, 63, 64, 66, 69, 72], "interfac": [3, 14], "run": 3, "boost": 3, "fast": [4, 5, 8], "compil": 4, "data": [4, 5, 7, 8, 11], "dens": [5, 9], "usag": [5, 8], "introduct": [5, 8], "underli": [5, 8], "backend": [6, 7, 10], "sage": [6, 58], "di": [6, 7], "class": [6, 10, 15, 51, 57, 58, 73], "overview": 7, "The": [7, 20, 39, 42], "cgraph": 7, "cgraphbackend": 7, "spars": [8, 10, 11], "static": [9, 10, 11], "index": 9, "two": 10, "what": 11, "point": 11, "technic": 11, "detail": [11, 15], "cython": [11, 34, 49], "thi": [11, 39], "modul": [11, 20, 39], "us": [11, 58], "python": 11, "bipartit": 12, "central": 13, "cliquer": 14, "cliqu": [14, 40], "relat": [14, 16], "problem": [14, 39, 42], "todo": [14, 22, 27, 31, 33, 36, 38, 48, 54, 55, 58, 61, 68, 69, 73], "compar": 15, "permut": 15, "recognit": [15, 42, 58, 63], "certif": 15, "connect": [16, 22], "convex": 17, "properti": 17, "direct": [18, 33], "common": [19, 33, 48, 49], "digraph": [19, 49, 50], "distanc": [20, 26], "shortest": 20, "path": [20, 64], "between": 20, "all": 20, "pair": 20, "vertic": 20, "": [20, 58, 65, 67], "main": 20, "domin": 21, "edg": 22, "basic": 23, "chessboard": 24, "famili": [25, 27], "deriv": 25, "from": [25, 32], "classic": 25, "geometri": 25, "over": 25, "finit": 25, "field": 25, "regular": [26, 69], "variou": [27, 31], "intersect": 28, "1": 29, "skeleton": 29, "platon": 29, "solid": 29, "random": 30, "small": 31, "world": 32, "map": 32, "gener": [33, 36, 49, 56, 71], "undirect": [33, 36, 39], "genericgraph": 34, "genu": 35, "format": 36, "support": 36, "label": 36, "visual": 36, "mutabl": 36, "color": 37, "bandwidth": 39, "satisfi": 39, "partial": [39, 63], "assign": 39, "solv": 39, "match": [39, 61], "contain": 39, "follow": 39, "decomposit": [40, 43, 44, 45], "minim": 40, "separ": [40, 46], "cutwidth": 41, "exponenti": [41, 46], "milp": [41, 46], "formul": [41, 46], "author": [41, 46, 58, 62], "product": 42, "cartesian": 42, "To": 42, "do": 42, "modular": 43, "rank": 44, "tree": [45, 66, 68, 71], "vertex": 46, "branch": 46, "bound": 46, "editor": 47, "widget": 47, "read": 50, "build": 50, "latex": 51, "option": 51, "version": 51, "graphlatex": 51, "list": 52, "plot": [53, 54], "javascript": 54, "d3": 54, "j": 54, "hyperbol": 55, "independ": 57, "isgci": 58, "inform": 58, "inclus": 58, "how": 58, "descript": 58, "predefin": 58, "view": [58, 73], "develop": 58, "line": [59, 67], "root": 59, "lov\u00e1sz": 60, "theta": 60, "polynomi": [61, 72], "orient": 62, "cube": 63, "observ": 63, "enumer": 64, "wrapper": 65, "boyer": 65, "c": 65, "planar": [65, 67], "pq": 66, "schnyder": 67, "straight": 67, "embed": 67, "span": 68, "strongli": 69, "travers": 70, "tutt": 72, "weakli": 74, "chordal": 74}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Graph Theory": [[0, "graph-theory"]], "Graph objects and methods": [[0, "graph-objects-and-methods"]], "Constructors and databases": [[0, "constructors-and-databases"]], "Low-level implementation": [[0, "low-level-implementation"]], "Hypergraphs": [[0, "hypergraphs"]], "Libraries of algorithms": [[0, "libraries-of-algorithms"]], "Indices and Tables": [[0, "indices-and-tables"]], "Incidence structures (i.e. hypergraphs, i.e. set systems)": [[1, "incidence-structures-i-e-hypergraphs-i-e-set-systems"]], "Methods": [[1, "methods"], [14, "methods"], [15, "methods"], [16, "methods"], [17, "methods"], [18, "methods"], [21, "methods"], [33, "methods"], [36, "methods"], [37, "methods"], [40, "methods"], [41, "methods"], [42, "methods"], [44, "methods"], [45, "methods"], [46, "methods"], [55, "methods"], [58, "methods"], [61, "methods"], [62, "methods"], [68, "methods"], [70, "methods"], [74, "methods"]], "Asteroidal triples": [[2, "asteroidal-triples"]], "Definition": [[2, "definition"], [39, "definition"], [59, "definition"], [72, "definition"]], "Algorithm": [[2, "algorithm"], [63, "algorithm"]], "Functions": [[2, "functions"], [3, "functions"], [9, "functions"], [13, "functions"], [20, "functions"], [39, "functions"], [50, "functions"], [54, "functions"], [59, "functions"], [60, "functions"], [63, "functions"], [64, "functions"], [69, "functions"], [72, "functions"]], "Interface to run Boost algorithms": [[3, "interface-to-run-boost-algorithms"]], "Fast compiled graphs": [[4, "fast-compiled-graphs"]], "Data structure": [[4, "data-structure"], [11, "data-structure"]], "Fast dense graphs": [[5, "fast-dense-graphs"]], "Usage Introduction": [[5, "usage-introduction"], [8, "usage-introduction"]], "Underlying Data Structure": [[5, "underlying-data-structure"], [8, "underlying-data-structure"]], "Backends for Sage (di)graphs": [[6, "backends-for-sage-di-graphs"]], "Classes and methods": [[6, "classes-and-methods"], [10, "classes-and-methods"], [57, "classes-and-methods"]], "Overview of (di)graph data structures": [[7, "overview-of-di-graph-data-structures"]], "Data structures": [[7, "data-structures"]], "The backends": [[7, "the-backends"]], "CGraph and CGraphBackend": [[7, "cgraph-and-cgraphbackend"]], "Fast sparse graphs": [[8, "fast-sparse-graphs"]], "Static dense graphs": [[9, "static-dense-graphs"]], "Index": [[9, "index"]], "Static sparse graph backend": [[10, "static-sparse-graph-backend"]], "Two classes": [[10, "two-classes"]], "Static sparse graphs": [[11, "static-sparse-graphs"]], "What is the point ?": [[11, "what-is-the-point"]], "Technical details": [[11, "technical-details"]], "Cython functions": [[11, "cython-functions"]], "What is this module used for ?": [[11, "what-is-this-module-used-for"]], "Python functions": [[11, "python-functions"]], "Bipartite graphs": [[12, "bipartite-graphs"]], "Centrality": [[13, "centrality"]], "Interface with Cliquer (clique-related problems)": [[14, "interface-with-cliquer-clique-related-problems"]], "Todo": [[14, "id4"], [22, "id3"], [27, "id20"], [31, "id10"], [31, "id17"], [33, "id23"], [33, "id24"], [33, "id25"], [33, "id37"], [33, "id38"], [36, "id3"], [36, "id47"], [36, "id49"], [38, "id1"], [48, "id49"], [48, "id67"], [48, "id96"], [54, "id1"], [55, "id7"], [58, "id1"], [61, "id2"], [68, "id2"], [69, "id30"], [73, "id1"]], "Comparability and permutation graphs": [[15, "comparability-and-permutation-graphs"]], "Graph classes": [[15, "graph-classes"]], "Recognition algorithm for comparability graphs": [[15, "recognition-algorithm-for-comparability-graphs"]], "Certificates": [[15, "certificates"]], "Implementation details": [[15, "implementation-details"]], "Connectivity related functions": [[16, "connectivity-related-functions"]], "Convexity properties of graphs": [[17, "convexity-properties-of-graphs"]], "Directed graphs": [[18, "directed-graphs"]], "Common digraphs": [[19, "common-digraphs"]], "Functions and methods": [[19, "functions-and-methods"], [48, "functions-and-methods"], [56, "functions-and-methods"]], "Distances/shortest paths between all pairs of vertices": [[20, "distances-shortest-paths-between-all-pairs-of-vertices"]], "The module\u2019s main function": [[20, "the-module-s-main-function"]], "Domination": [[21, "domination"]], "Edge connectivity": [[22, "edge-connectivity"]], "Basic graphs": [[23, "basic-graphs"]], "Chessboard graphs": [[24, "chessboard-graphs"]], "Families of graphs derived from classical geometries over finite fields": [[25, "families-of-graphs-derived-from-classical-geometries-over-finite-fields"]], "Database of distance regular graphs": [[26, "database-of-distance-regular-graphs"]], "Various families of graphs": [[27, "various-families-of-graphs"]], "Intersection graphs": [[28, "intersection-graphs"]], "1-skeletons of Platonic solids": [[29, "skeletons-of-platonic-solids"]], "Random graphs": [[30, "random-graphs"]], "Various small graphs": [[31, "various-small-graphs"]], "Graphs from the World Map": [[32, "graphs-from-the-world-map"]], "Generic graphs (common to directed/undirected)": [[33, "generic-graphs-common-to-directed-undirected"]], "GenericGraph Cython functions": [[34, "genericgraph-cython-functions"]], "Genus": [[35, "genus"]], "Undirected graphs": [[36, "undirected-graphs"]], "Graph Format": [[36, "graph-format"]], "Supported formats": [[36, "supported-formats"]], "Generators": [[36, "generators"]], "Labels": [[36, "labels"]], "Database": [[36, "database"]], "Visualization": [[36, "visualization"]], "Mutability": [[36, "mutability"]], "Graph coloring": [[37, "graph-coloring"]], "Graph database": [[38, "graph-database"]], "Bandwidth of undirected graphs": [[39, "bandwidth-of-undirected-graphs"]], "Satisfiability of a partial assignment": [[39, "satisfiability-of-a-partial-assignment"]], "Solving the matching problem": [[39, "solving-the-matching-problem"]], "The algorithm": [[39, "the-algorithm"], [42, "the-algorithm"]], "This module contains the following methods": [[39, "this-module-contains-the-following-methods"]], "Decomposition by clique minimal separators": [[40, "decomposition-by-clique-minimal-separators"]], "Cutwidth": [[41, "cutwidth"]], "Exponential algorithm for cutwidth": [[41, "exponential-algorithm-for-cutwidth"]], "MILP formulation for the cutwidth": [[41, "milp-formulation-for-the-cutwidth"]], "Authors": [[41, "authors"], [46, "authors"], [62, "authors"]], "Products of graphs": [[42, "products-of-graphs"]], "Cartesian product of graphs \u2013 the recognition problem": [[42, "cartesian-product-of-graphs-the-recognition-problem"]], "To Do": [[42, "to-do"]], "Modular Decomposition": [[43, "modular-decomposition"]], "Rank Decompositions of graphs": [[44, "rank-decompositions-of-graphs"]], "Tree decompositions": [[45, "tree-decompositions"]], "Vertex separation": [[46, "vertex-separation"]], "Exponential algorithm for vertex separation": [[46, "exponential-algorithm-for-vertex-separation"]], "MILP formulation for the vertex separation": [[46, "milp-formulation-for-the-vertex-separation"]], "Branch and Bound algorithm for the vertex separation": [[46, "branch-and-bound-algorithm-for-the-vertex-separation"]], "Graph editor widget": [[47, "graph-editor-widget"]], "Common graphs": [[48, "common-graphs"]], "Common graphs and digraphs generators (Cython)": [[49, "common-graphs-and-digraphs-generators-cython"]], "Functions for reading/building graphs/digraphs": [[50, "functions-for-reading-building-graphs-digraphs"]], "LaTeX options for graphs": [[51, "latex-options-for-graphs"]], "LaTeX Versions of Graphs": [[51, "latex-versions-of-graphs"]], "GraphLatex class and functions": [[51, "graphlatex-class-and-functions"]], "Lists of graphs": [[52, "lists-of-graphs"]], "Graph plotting in Javascript with d3.js": [[54, "graph-plotting-in-javascript-with-d3-js"]], "Hyperbolicity": [[55, "hyperbolicity"]], "Hypergraph generators": [[56, "hypergraph-generators"]], "Independent sets": [[57, "independent-sets"]], "ISGCI: Information System on Graph Classes and their Inclusions": [[58, "isgci-information-system-on-graph-classes-and-their-inclusions"]], "How to use it?": [[58, "how-to-use-it"]], "Inclusions": [[58, "inclusions"]], "Descriptions": [[58, "descriptions"]], "Recognition of graphs": [[58, "recognition-of-graphs"]], "Predefined classes": [[58, "predefined-classes"]], "Sage\u2019s view of ISGCI": [[58, "sage-s-view-of-isgci"]], "Information for developers": [[58, "information-for-developers"]], "AUTHORS:": [[58, "authors"]], "Line graphs": [[59, "line-graphs"]], "Root graph": [[59, "root-graph"]], "Lov\u00e1sz theta-function of graphs": [[60, "lovasz-theta-function-of-graphs"]], "Matching polynomial": [[61, "matching-polynomial"]], "Orientations": [[62, "orientations"]], "Partial cubes": [[63, "partial-cubes"]], "Recognition algorithm": [[63, "recognition-algorithm"]], "Definitions": [[63, "definitions"]], "Observations": [[63, "observations"]], "Path enumeration": [[64, "path-enumeration"]], "Wrapper for Boyer\u2019s (C) planarity algorithm": [[65, "wrapper-for-boyer-s-c-planarity-algorithm"]], "PQ-Trees": [[66, "pq-trees"]], "Methods and functions": [[66, "methods-and-functions"]], "Schnyder\u2019s algorithm for straight-line planar embeddings": [[67, "schnyder-s-algorithm-for-straight-line-planar-embeddings"]], "Spanning trees": [[68, "spanning-trees"]], "Database of strongly regular graphs": [[69, "database-of-strongly-regular-graphs"]], "Graph traversals": [[70, "graph-traversals"]], "Generation of trees": [[71, "generation-of-trees"]], "Tutte polynomial": [[72, "tutte-polynomial"]], "View classes": [[73, "view-classes"]], "Classes": [[73, "classes"]], "Weakly chordal graphs": [[74, "weakly-chordal-graphs"]], "Graph plotting": [[53, "graph-plotting"]]}, "indexentries": {"incidencestructure (class in sage.combinat.designs.incidence_structures)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure"]], "automorphism_group() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.automorphism_group"]], "block_sizes() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.block_sizes"]], "blocks() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.blocks"]], "canonical_label() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.canonical_label"]], "coloring() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.coloring"]], "complement() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.complement"]], "copy() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.copy"]], "degree() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.degree"]], "degrees() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.degrees"]], "dual() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.dual"]], "edge_coloring() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.edge_coloring"]], "ground_set() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.ground_set"]], "incidence_graph() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.incidence_graph"]], "incidence_matrix() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.incidence_matrix"]], "induced_substructure() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.induced_substructure"]], "intersection_graph() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.intersection_graph"]], "is_berge_cyclic() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_berge_cyclic"]], "is_connected() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_connected"]], "is_generalized_quadrangle() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_generalized_quadrangle"]], "is_isomorphic() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_isomorphic"]], "is_regular() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_regular"]], "is_resolvable() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_resolvable"]], "is_simple() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_simple"]], "is_spread() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_spread"]], "is_t_design() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_t_design"]], "is_uniform() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_uniform"]], "isomorphic_substructures_iterator() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.isomorphic_substructures_iterator"]], "module": [[1, "module-sage.combinat.designs.incidence_structures"], [2, "module-sage.graphs.asteroidal_triples"], [3, "module-sage.graphs.base.boost_graph"], [4, "module-sage.graphs.base.c_graph"], [5, "module-sage.graphs.base.dense_graph"], [6, "module-sage.graphs.base.graph_backends"], [7, "module-sage.graphs.base.overview"], [8, "module-sage.graphs.base.sparse_graph"], [9, "module-sage.graphs.base.static_dense_graph"], [10, "module-sage.graphs.base.static_sparse_backend"], [11, "module-sage.graphs.base.static_sparse_graph"], [12, "module-sage.graphs.bipartite_graph"], [13, "module-sage.graphs.centrality"], [14, "module-sage.graphs.cliquer"], [15, "module-sage.graphs.comparability"], [16, "module-sage.graphs.connectivity"], [17, "module-sage.graphs.convexity_properties"], [18, "module-sage.graphs.digraph"], [19, "module-sage.graphs.digraph_generators"], [20, "module-sage.graphs.distances_all_pairs"], [21, "module-sage.graphs.domination"], [22, "module-sage.graphs.edge_connectivity"], [23, "module-sage.graphs.generators.basic"], [24, "module-sage.graphs.generators.chessboard"], [25, "module-sage.graphs.generators.classical_geometries"], [26, "module-sage.graphs.generators.distance_regular"], [27, "module-sage.graphs.generators.families"], [28, "module-sage.graphs.generators.intersection"], [29, "module-sage.graphs.generators.platonic_solids"], [30, "module-sage.graphs.generators.random"], [31, "module-sage.graphs.generators.smallgraphs"], [32, "module-sage.graphs.generators.world_map"], [33, "module-sage.graphs.generic_graph"], [34, "module-sage.graphs.generic_graph_pyx"], [35, "module-sage.graphs.genus"], [36, "module-sage.graphs.graph"], [37, "module-sage.graphs.graph_coloring"], [38, "module-sage.graphs.graph_database"], [39, "module-sage.graphs.graph_decompositions.bandwidth"], [40, "module-sage.graphs.graph_decompositions.clique_separators"], [41, "module-sage.graphs.graph_decompositions.cutwidth"], [42, "module-sage.graphs.graph_decompositions.graph_products"], [43, "module-sage.graphs.graph_decompositions.modular_decomposition"], [44, "module-sage.graphs.graph_decompositions.rankwidth"], [45, "module-sage.graphs.graph_decompositions.tree_decomposition"], [46, "module-sage.graphs.graph_decompositions.vertex_separation"], [47, "module-sage.graphs.graph_editor"], [48, "module-sage.graphs.graph_generators"], [49, "module-sage.graphs.graph_generators_pyx"], [50, "module-sage.graphs.graph_input"], [51, "module-sage.graphs.graph_latex"], [52, "module-sage.graphs.graph_list"], [53, "module-sage.graphs.graph_plot"], [54, "module-sage.graphs.graph_plot_js"], [55, "module-sage.graphs.hyperbolicity"], [56, "module-sage.graphs.hypergraph_generators"], [57, "module-sage.graphs.independent_sets"], [58, "module-sage.graphs.isgci"], [59, "module-sage.graphs.line_graph"], [60, "module-sage.graphs.lovasz_theta"], [61, "module-sage.graphs.matchpoly"], [62, "module-sage.graphs.orientations"], [63, "module-sage.graphs.partial_cube"], [64, "module-sage.graphs.path_enumeration"], [65, "module-sage.graphs.planarity"], [66, "module-sage.graphs.pq_trees"], [67, "module-sage.graphs.schnyder"], [68, "module-sage.graphs.spanning_tree"], [69, "module-sage.graphs.strongly_regular_db"], [70, "module-sage.graphs.traversals"], [71, "module-sage.graphs.trees"], [72, "module-sage.graphs.tutte_polynomial"], [73, "module-sage.graphs.views"], [74, "module-sage.graphs.weakly_chordal"]], "num_blocks() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.num_blocks"]], "num_points() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.num_points"]], "packing() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.packing"]], "rank() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.rank"]], "relabel() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.relabel"]], "sage.combinat.designs.incidence_structures": [[1, "module-sage.combinat.designs.incidence_structures"]], "trace() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[1, "sage.combinat.designs.incidence_structures.IncidenceStructure.trace"]], "is_asteroidal_triple_free() (in module sage.graphs.asteroidal_triples)": [[2, "sage.graphs.asteroidal_triples.is_asteroidal_triple_free"]], "sage.graphs.asteroidal_triples": [[2, "module-sage.graphs.asteroidal_triples"]], "bandwidth_heuristics() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.bandwidth_heuristics"]], "blocks_and_cut_vertices() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.blocks_and_cut_vertices"]], "clustering_coeff() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.clustering_coeff"]], "diameter() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.diameter"]], "diameter_dhv() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.diameter_DHV"]], "dominator_tree() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.dominator_tree"]], "eccentricity_dhv() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.eccentricity_DHV"]], "edge_connectivity() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.edge_connectivity"]], "floyd_warshall_shortest_paths() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.floyd_warshall_shortest_paths"]], "johnson_closeness_centrality() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.johnson_closeness_centrality"]], "johnson_shortest_paths() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.johnson_shortest_paths"]], "min_cycle_basis() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.min_cycle_basis"]], "min_spanning_tree() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.min_spanning_tree"]], "radius_dhv() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.radius_DHV"]], "sage.graphs.base.boost_graph": [[3, "module-sage.graphs.base.boost_graph"]], "shortest_paths() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.shortest_paths"]], "shortest_paths_from_vertices() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.shortest_paths_from_vertices"]], "wiener_index() (in module sage.graphs.base.boost_graph)": [[3, "sage.graphs.base.boost_graph.wiener_index"]], "cgraph (class in sage.graphs.base.c_graph)": [[4, "sage.graphs.base.c_graph.CGraph"]], "cgraphbackend (class in sage.graphs.base.c_graph)": [[4, "sage.graphs.base.c_graph.CGraphBackend"]], "search_iterator (class in sage.graphs.base.c_graph)": [[4, "sage.graphs.base.c_graph.Search_iterator"]], "add_arc() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.add_arc"]], "add_edge() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.add_edge"]], "add_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.add_edges"]], "add_vertex() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.add_vertex"]], "add_vertex() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.add_vertex"]], "add_vertices() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.add_vertices"]], "add_vertices() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.add_vertices"]], "all_arcs() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.all_arcs"]], "arc_label() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.arc_label"]], "bidirectional_dijkstra() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.bidirectional_dijkstra"]], "bidirectional_dijkstra_special() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.bidirectional_dijkstra_special"]], "breadth_first_search() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.breadth_first_search"]], "c_graph() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.c_graph"]], "check_vertex() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.check_vertex"]], "current_allocation() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.current_allocation"]], "degree() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.degree"]], "del_all_arcs() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.del_all_arcs"]], "del_arc_label() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.del_arc_label"]], "del_edge() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.del_edge"]], "del_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.del_edges"]], "del_vertex() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.del_vertex"]], "del_vertex() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.del_vertex"]], "del_vertices() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.del_vertices"]], "depth_first_search() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.depth_first_search"]], "has_arc() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.has_arc"]], "has_arc_label() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.has_arc_label"]], "has_vertex() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.has_vertex"]], "has_vertex() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.has_vertex"]], "in_degree() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.in_degree"]], "in_neighbors() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.in_neighbors"]], "is_connected() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.is_connected"]], "is_directed_acyclic() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.is_directed_acyclic"]], "is_strongly_connected() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.is_strongly_connected"]], "is_subgraph() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.is_subgraph"]], "iterator_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_edges"]], "iterator_in_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_in_edges"]], "iterator_in_nbrs() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_in_nbrs"]], "iterator_nbrs() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_nbrs"]], "iterator_out_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_out_edges"]], "iterator_out_nbrs() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_out_nbrs"]], "iterator_unsorted_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_unsorted_edges"]], "iterator_verts() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.iterator_verts"]], "loops() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.loops"]], "num_edges() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.num_edges"]], "num_verts() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.num_verts"]], "out_degree() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.out_degree"]], "out_neighbors() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.out_neighbors"]], "realloc() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.realloc"]], "relabel() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.relabel"]], "sage.graphs.base.c_graph": [[4, "module-sage.graphs.base.c_graph"]], "shortest_path() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.shortest_path"]], "shortest_path_all_vertices() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.shortest_path_all_vertices"]], "shortest_path_special() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.shortest_path_special"]], "strongly_connected_component_containing_vertex() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.strongly_connected_component_containing_vertex"]], "subgraph_given_vertices() (sage.graphs.base.c_graph.cgraphbackend method)": [[4, "sage.graphs.base.c_graph.CGraphBackend.subgraph_given_vertices"]], "verts() (sage.graphs.base.c_graph.cgraph method)": [[4, "sage.graphs.base.c_graph.CGraph.verts"]], "densegraph (class in sage.graphs.base.dense_graph)": [[5, "sage.graphs.base.dense_graph.DenseGraph"]], "densegraphbackend (class in sage.graphs.base.dense_graph)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend"]], "add_edges() (sage.graphs.base.dense_graph.densegraphbackend method)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend.add_edges"]], "complement() (sage.graphs.base.dense_graph.densegraph method)": [[5, "sage.graphs.base.dense_graph.DenseGraph.complement"]], "get_edge_label() (sage.graphs.base.dense_graph.densegraphbackend method)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend.get_edge_label"]], "has_edge() (sage.graphs.base.dense_graph.densegraphbackend method)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend.has_edge"]], "multiple_edges() (sage.graphs.base.dense_graph.densegraphbackend method)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend.multiple_edges"]], "realloc() (sage.graphs.base.dense_graph.densegraph method)": [[5, "sage.graphs.base.dense_graph.DenseGraph.realloc"]], "sage.graphs.base.dense_graph": [[5, "module-sage.graphs.base.dense_graph"]], "set_edge_label() (sage.graphs.base.dense_graph.densegraphbackend method)": [[5, "sage.graphs.base.dense_graph.DenseGraphBackend.set_edge_label"]], "genericgraphbackend (class in sage.graphs.base.graph_backends)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend"]], "add_edge() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.add_edge"]], "add_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.add_edges"]], "add_vertex() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.add_vertex"]], "add_vertices() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.add_vertices"]], "degree() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.degree"]], "del_edge() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.del_edge"]], "del_vertex() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.del_vertex"]], "del_vertices() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.del_vertices"]], "get_edge_label() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.get_edge_label"]], "has_edge() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.has_edge"]], "has_vertex() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.has_vertex"]], "in_degree() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.in_degree"]], "iterator_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_edges"]], "iterator_in_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_in_edges"]], "iterator_in_nbrs() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_in_nbrs"]], "iterator_nbrs() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_nbrs"]], "iterator_out_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_out_edges"]], "iterator_out_nbrs() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_out_nbrs"]], "iterator_verts() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.iterator_verts"]], "loops() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.loops"]], "multiple_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.multiple_edges"]], "name() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.name"]], "num_edges() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.num_edges"]], "num_verts() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.num_verts"]], "out_degree() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.out_degree"]], "relabel() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.relabel"]], "sage.graphs.base.graph_backends": [[6, "module-sage.graphs.base.graph_backends"]], "set_edge_label() (sage.graphs.base.graph_backends.genericgraphbackend method)": [[6, "sage.graphs.base.graph_backends.GenericGraphBackend.set_edge_label"]], "unpickle_graph_backend() (in module sage.graphs.base.graph_backends)": [[6, "sage.graphs.base.graph_backends.unpickle_graph_backend"]], "sage.graphs.base.overview": [[7, "module-sage.graphs.base.overview"]], "sparsegraph (class in sage.graphs.base.sparse_graph)": [[8, "sage.graphs.base.sparse_graph.SparseGraph"]], "sparsegraphbackend (class in sage.graphs.base.sparse_graph)": [[8, "sage.graphs.base.sparse_graph.SparseGraphBackend"]], "add_arc_label() (sage.graphs.base.sparse_graph.sparsegraph method)": [[8, "sage.graphs.base.sparse_graph.SparseGraph.add_arc_label"]], "get_edge_label() (sage.graphs.base.sparse_graph.sparsegraphbackend method)": [[8, "sage.graphs.base.sparse_graph.SparseGraphBackend.get_edge_label"]], "has_edge() (sage.graphs.base.sparse_graph.sparsegraphbackend method)": [[8, "sage.graphs.base.sparse_graph.SparseGraphBackend.has_edge"]], "in_degree() (sage.graphs.base.sparse_graph.sparsegraph method)": [[8, "sage.graphs.base.sparse_graph.SparseGraph.in_degree"]], "is_directed() (sage.graphs.base.sparse_graph.sparsegraph method)": [[8, "sage.graphs.base.sparse_graph.SparseGraph.is_directed"]], "multiple_edges() (sage.graphs.base.sparse_graph.sparsegraphbackend method)": [[8, "sage.graphs.base.sparse_graph.SparseGraphBackend.multiple_edges"]], "out_degree() (sage.graphs.base.sparse_graph.sparsegraph method)": [[8, "sage.graphs.base.sparse_graph.SparseGraph.out_degree"]], "realloc() (sage.graphs.base.sparse_graph.sparsegraph method)": [[8, "sage.graphs.base.sparse_graph.SparseGraph.realloc"]], "sage.graphs.base.sparse_graph": [[8, "module-sage.graphs.base.sparse_graph"]], "set_edge_label() (sage.graphs.base.sparse_graph.sparsegraphbackend method)": [[8, "sage.graphs.base.sparse_graph.SparseGraphBackend.set_edge_label"]], "connected_full_subgraphs() (in module sage.graphs.base.static_dense_graph)": [[9, "sage.graphs.base.static_dense_graph.connected_full_subgraphs"]], "connected_subgraph_iterator() (in module sage.graphs.base.static_dense_graph)": [[9, "sage.graphs.base.static_dense_graph.connected_subgraph_iterator"]], "is_strongly_regular() (in module sage.graphs.base.static_dense_graph)": [[9, "sage.graphs.base.static_dense_graph.is_strongly_regular"]], "is_triangle_free() (in module sage.graphs.base.static_dense_graph)": [[9, "sage.graphs.base.static_dense_graph.is_triangle_free"]], "sage.graphs.base.static_dense_graph": [[9, "module-sage.graphs.base.static_dense_graph"]], "triangles_count() (in module sage.graphs.base.static_dense_graph)": [[9, "sage.graphs.base.static_dense_graph.triangles_count"]], "staticsparsebackend (class in sage.graphs.base.static_sparse_backend)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend"]], "staticsparsecgraph (class in sage.graphs.base.static_sparse_backend)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph"]], "add_edge() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.add_edge"]], "add_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.add_edges"]], "add_vertex() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.add_vertex"]], "add_vertex() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.add_vertex"]], "add_vertices() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.add_vertices"]], "allows_loops() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.allows_loops"]], "degree() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.degree"]], "del_edge() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.del_edge"]], "del_vertex() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.del_vertex"]], "del_vertex() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.del_vertex"]], "get_edge_label() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.get_edge_label"]], "has_arc() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.has_arc"]], "has_edge() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.has_edge"]], "has_vertex() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.has_vertex"]], "has_vertex() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.has_vertex"]], "in_degree() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.in_degree"]], "in_degree() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.in_degree"]], "in_neighbors() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.in_neighbors"]], "iterator_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_edges"]], "iterator_in_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_in_edges"]], "iterator_in_nbrs() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_in_nbrs"]], "iterator_nbrs() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_nbrs"]], "iterator_out_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_out_edges"]], "iterator_out_nbrs() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_out_nbrs"]], "iterator_unsorted_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_unsorted_edges"]], "iterator_verts() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.iterator_verts"]], "multiple_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.multiple_edges"]], "num_edges() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.num_edges"]], "num_verts() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.num_verts"]], "out_degree() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.out_degree"]], "out_degree() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.out_degree"]], "out_neighbors() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.out_neighbors"]], "relabel() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.relabel"]], "sage.graphs.base.static_sparse_backend": [[10, "module-sage.graphs.base.static_sparse_backend"]], "set_edge_label() (sage.graphs.base.static_sparse_backend.staticsparsebackend method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseBackend.set_edge_label"]], "verts() (sage.graphs.base.static_sparse_backend.staticsparsecgraph method)": [[10, "sage.graphs.base.static_sparse_backend.StaticSparseCGraph.verts"]], "sage.graphs.base.static_sparse_graph": [[11, "module-sage.graphs.base.static_sparse_graph"]], "spectral_radius() (in module sage.graphs.base.static_sparse_graph)": [[11, "sage.graphs.base.static_sparse_graph.spectral_radius"]], "strongly_connected_components_digraph() (in module sage.graphs.base.static_sparse_graph)": [[11, "sage.graphs.base.static_sparse_graph.strongly_connected_components_digraph"]], "tarjan_strongly_connected_components() (in module sage.graphs.base.static_sparse_graph)": [[11, "sage.graphs.base.static_sparse_graph.tarjan_strongly_connected_components"]], "triangles_count() (in module sage.graphs.base.static_sparse_graph)": [[11, "sage.graphs.base.static_sparse_graph.triangles_count"]], "bipartitegraph (class in sage.graphs.bipartite_graph)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph"]], "add_edge() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.add_edge"]], "add_edges() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.add_edges"]], "add_vertex() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.add_vertex"]], "add_vertices() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.add_vertices"]], "allow_loops() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.allow_loops"]], "bipartition() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.bipartition"]], "canonical_label() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.canonical_label"]], "complement() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.complement"]], "complement_bipartite() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.complement_bipartite"]], "delete_vertex() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.delete_vertex"]], "delete_vertices() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.delete_vertices"]], "is_bipartite() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.is_bipartite"]], "load_afile() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.load_afile"]], "matching() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.matching"]], "matching_polynomial() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.matching_polynomial"]], "perfect_matchings() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.perfect_matchings"]], "plot() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.plot"]], "project_left() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.project_left"]], "project_right() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.project_right"]], "reduced_adjacency_matrix() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.reduced_adjacency_matrix"]], "sage.graphs.bipartite_graph": [[12, "module-sage.graphs.bipartite_graph"]], "save_afile() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.save_afile"]], "to_undirected() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.to_undirected"]], "vertex_cover() (sage.graphs.bipartite_graph.bipartitegraph method)": [[12, "sage.graphs.bipartite_graph.BipartiteGraph.vertex_cover"]], "centrality_betweenness() (in module sage.graphs.centrality)": [[13, "sage.graphs.centrality.centrality_betweenness"]], "centrality_closeness_random_k() (in module sage.graphs.centrality)": [[13, "sage.graphs.centrality.centrality_closeness_random_k"]], "centrality_closeness_top_k() (in module sage.graphs.centrality)": [[13, "sage.graphs.centrality.centrality_closeness_top_k"]], "sage.graphs.centrality": [[13, "module-sage.graphs.centrality"]], "all_cliques() (in module sage.graphs.cliquer)": [[14, "sage.graphs.cliquer.all_cliques"]], "all_max_clique() (in module sage.graphs.cliquer)": [[14, "sage.graphs.cliquer.all_max_clique"]], "clique_number() (in module sage.graphs.cliquer)": [[14, "sage.graphs.cliquer.clique_number"]], "max_clique() (in module sage.graphs.cliquer)": [[14, "sage.graphs.cliquer.max_clique"]], "sage.graphs.cliquer": [[14, "module-sage.graphs.cliquer"]], "greedy_is_comparability() (in module sage.graphs.comparability)": [[15, "sage.graphs.comparability.greedy_is_comparability"]], "greedy_is_comparability_with_certificate() (in module sage.graphs.comparability)": [[15, "sage.graphs.comparability.greedy_is_comparability_with_certificate"]], "is_comparability() (in module sage.graphs.comparability)": [[15, "sage.graphs.comparability.is_comparability"]], "is_comparability_milp() (in module sage.graphs.comparability)": [[15, "sage.graphs.comparability.is_comparability_MILP"]], "is_permutation() (in module sage.graphs.comparability)": [[15, "sage.graphs.comparability.is_permutation"]], "is_transitive() (in module sage.graphs.comparability)": [[15, "sage.graphs.comparability.is_transitive"]], "sage.graphs.comparability": [[15, "module-sage.graphs.comparability"]], "triconnectivityspqr (class in sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.TriconnectivitySPQR"]], "blocks_and_cut_vertices() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.blocks_and_cut_vertices"]], "blocks_and_cuts_tree() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.blocks_and_cuts_tree"]], "bridges() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.bridges"]], "cleave() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.cleave"]], "connected_component_containing_vertex() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.connected_component_containing_vertex"]], "connected_components() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.connected_components"]], "connected_components_number() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.connected_components_number"]], "connected_components_sizes() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.connected_components_sizes"]], "connected_components_subgraphs() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.connected_components_subgraphs"]], "edge_connectivity() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.edge_connectivity"]], "get_spqr_tree() (sage.graphs.connectivity.triconnectivityspqr method)": [[16, "sage.graphs.connectivity.TriconnectivitySPQR.get_spqr_tree"]], "get_triconnected_components() (sage.graphs.connectivity.triconnectivityspqr method)": [[16, "sage.graphs.connectivity.TriconnectivitySPQR.get_triconnected_components"]], "is_connected() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.is_connected"]], "is_cut_edge() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.is_cut_edge"]], "is_cut_vertex() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.is_cut_vertex"]], "is_strongly_connected() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.is_strongly_connected"]], "is_triconnected() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.is_triconnected"]], "print_triconnected_components() (sage.graphs.connectivity.triconnectivityspqr method)": [[16, "sage.graphs.connectivity.TriconnectivitySPQR.print_triconnected_components"]], "sage.graphs.connectivity": [[16, "module-sage.graphs.connectivity"]], "spqr_tree() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.spqr_tree"]], "spqr_tree_to_graph() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.spqr_tree_to_graph"]], "strong_articulation_points() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.strong_articulation_points"]], "strongly_connected_component_containing_vertex() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.strongly_connected_component_containing_vertex"]], "strongly_connected_components_digraph() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.strongly_connected_components_digraph"]], "strongly_connected_components_subgraphs() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.strongly_connected_components_subgraphs"]], "vertex_connectivity() (in module sage.graphs.connectivity)": [[16, "sage.graphs.connectivity.vertex_connectivity"]], "convexityproperties (class in sage.graphs.convexity_properties)": [[17, "sage.graphs.convexity_properties.ConvexityProperties"]], "geodetic_closure() (in module sage.graphs.convexity_properties)": [[17, "sage.graphs.convexity_properties.geodetic_closure"]], "hull() (sage.graphs.convexity_properties.convexityproperties method)": [[17, "sage.graphs.convexity_properties.ConvexityProperties.hull"]], "hull_number() (sage.graphs.convexity_properties.convexityproperties method)": [[17, "sage.graphs.convexity_properties.ConvexityProperties.hull_number"]], "sage.graphs.convexity_properties": [[17, "module-sage.graphs.convexity_properties"]], "digraph (class in sage.graphs.digraph)": [[18, "sage.graphs.digraph.DiGraph"]], "all_cycles_iterator() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.all_cycles_iterator"]], "all_paths_iterator() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.all_paths_iterator"]], "all_simple_cycles() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.all_simple_cycles"]], "all_simple_paths() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.all_simple_paths"]], "center() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.center"]], "degree_polynomial() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.degree_polynomial"]], "diameter() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.diameter"]], "dig6_string() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.dig6_string"]], "eccentricity() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.eccentricity"]], "feedback_edge_set() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.feedback_edge_set"]], "flow_polytope() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.flow_polytope"]], "in_branchings() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.in_branchings"]], "in_degree() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.in_degree"]], "in_degree_iterator() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.in_degree_iterator"]], "in_degree_sequence() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.in_degree_sequence"]], "incoming_edge_iterator() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.incoming_edge_iterator"]], "incoming_edges() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.incoming_edges"]], "is_aperiodic() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.is_aperiodic"]], "is_directed() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.is_directed"]], "is_directed_acyclic() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.is_directed_acyclic"]], "is_strongly_connected() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.is_strongly_connected"]], "is_tournament() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.is_tournament"]], "is_transitive() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.is_transitive"]], "layout_acyclic() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.layout_acyclic"]], "layout_acyclic_dummy() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.layout_acyclic_dummy"]], "level_sets() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.level_sets"]], "neighbor_in_iterator() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.neighbor_in_iterator"]], "neighbor_out_iterator() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.neighbor_out_iterator"]], "neighbors_in() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.neighbors_in"]], "neighbors_out() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.neighbors_out"]], "out_branchings() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.out_branchings"]], "out_degree() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.out_degree"]], "out_degree_iterator() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.out_degree_iterator"]], "out_degree_sequence() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.out_degree_sequence"]], "outgoing_edge_iterator() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.outgoing_edge_iterator"]], "outgoing_edges() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.outgoing_edges"]], "path_semigroup() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.path_semigroup"]], "period() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.period"]], "periphery() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.periphery"]], "radius() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.radius"]], "reverse() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.reverse"]], "reverse_edge() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.reverse_edge"]], "reverse_edges() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.reverse_edges"]], "sage.graphs.digraph": [[18, "module-sage.graphs.digraph"]], "sinks() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.sinks"]], "sources() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.sources"]], "strong_articulation_points() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.strong_articulation_points"]], "strongly_connected_component_containing_vertex() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.strongly_connected_component_containing_vertex"]], "strongly_connected_components() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.strongly_connected_components"]], "strongly_connected_components_digraph() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.strongly_connected_components_digraph"]], "strongly_connected_components_subgraphs() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.strongly_connected_components_subgraphs"]], "to_directed() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.to_directed"]], "to_undirected() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.to_undirected"]], "topological_sort() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.topological_sort"]], "topological_sort_generator() (sage.graphs.digraph.digraph method)": [[18, "sage.graphs.digraph.DiGraph.topological_sort_generator"]], "butterflygraph() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.ButterflyGraph"]], "circuit() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.Circuit"]], "circulant() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.Circulant"]], "complete() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.Complete"]], "debruijn() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.DeBruijn"]], "digraphgenerators (class in sage.graphs.digraph_generators)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators"]], "generalizeddebruijn() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.GeneralizedDeBruijn"]], "imaseitoh() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.ImaseItoh"]], "kautz() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.Kautz"]], "paley() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.Paley"]], "path() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.Path"]], "randomdirectedacyclicgraph() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedAcyclicGraph"]], "randomdirectedgn() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedGN"]], "randomdirectedgnc() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedGNC"]], "randomdirectedgnm() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedGNM"]], "randomdirectedgnp() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedGNP"]], "randomdirectedgnr() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.RandomDirectedGNR"]], "randomsemicomplete() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.RandomSemiComplete"]], "randomtournament() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.RandomTournament"]], "stronglyregular() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.StronglyRegular"]], "transitivetournament() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.TransitiveTournament"]], "nauty_directg() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.nauty_directg"]], "sage.graphs.digraph_generators": [[19, "module-sage.graphs.digraph_generators"]], "tournaments_nauty() (sage.graphs.digraph_generators.digraphgenerators method)": [[19, "sage.graphs.digraph_generators.DiGraphGenerators.tournaments_nauty"]], "antipodal_graph() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.antipodal_graph"]], "diameter() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.diameter"]], "distances_all_pairs() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.distances_all_pairs"]], "distances_and_predecessors_all_pairs() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.distances_and_predecessors_all_pairs"]], "distances_distribution() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.distances_distribution"]], "eccentricity() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.eccentricity"]], "floyd_warshall() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.floyd_warshall"]], "is_distance_regular() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.is_distance_regular"]], "radius_dhv() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.radius_DHV"]], "sage.graphs.distances_all_pairs": [[20, "module-sage.graphs.distances_all_pairs"]], "shortest_path_all_pairs() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.shortest_path_all_pairs"]], "szeged_index() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.szeged_index"]], "wiener_index() (in module sage.graphs.distances_all_pairs)": [[20, "sage.graphs.distances_all_pairs.wiener_index"]], "dominating_set() (in module sage.graphs.domination)": [[21, "sage.graphs.domination.dominating_set"]], "dominating_sets() (in module sage.graphs.domination)": [[21, "sage.graphs.domination.dominating_sets"]], "greedy_dominating_set() (in module sage.graphs.domination)": [[21, "sage.graphs.domination.greedy_dominating_set"]], "is_dominating() (in module sage.graphs.domination)": [[21, "sage.graphs.domination.is_dominating"]], "is_redundant() (in module sage.graphs.domination)": [[21, "sage.graphs.domination.is_redundant"]], "minimal_dominating_sets() (in module sage.graphs.domination)": [[21, "sage.graphs.domination.minimal_dominating_sets"]], "private_neighbors() (in module sage.graphs.domination)": [[21, "sage.graphs.domination.private_neighbors"]], "sage.graphs.domination": [[21, "module-sage.graphs.domination"]], "g (sage.graphs.edge_connectivity.gabowedgeconnectivity attribute)": [[22, "sage.graphs.edge_connectivity.GabowEdgeConnectivity.G"]], "gabowedgeconnectivity (class in sage.graphs.edge_connectivity)": [[22, "sage.graphs.edge_connectivity.GabowEdgeConnectivity"]], "edge_connectivity() (sage.graphs.edge_connectivity.gabowedgeconnectivity method)": [[22, "sage.graphs.edge_connectivity.GabowEdgeConnectivity.edge_connectivity"]], "edge_disjoint_spanning_trees() (sage.graphs.edge_connectivity.gabowedgeconnectivity method)": [[22, "sage.graphs.edge_connectivity.GabowEdgeConnectivity.edge_disjoint_spanning_trees"]], "sage.graphs.edge_connectivity": [[22, "module-sage.graphs.edge_connectivity"]], "bullgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.BullGraph"]], "butterflygraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.ButterflyGraph"]], "circularladdergraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.CircularLadderGraph"]], "clawgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.ClawGraph"]], "completebipartitegraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.CompleteBipartiteGraph"]], "completegraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.CompleteGraph"]], "completemultipartitegraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.CompleteMultipartiteGraph"]], "cyclegraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.CycleGraph"]], "dartgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.DartGraph"]], "diamondgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.DiamondGraph"]], "emptygraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.EmptyGraph"]], "forkgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.ForkGraph"]], "gemgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.GemGraph"]], "grid2dgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.Grid2dGraph"]], "gridgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.GridGraph"]], "housegraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.HouseGraph"]], "housexgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.HouseXGraph"]], "laddergraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.LadderGraph"]], "pathgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.PathGraph"]], "stargraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.StarGraph"]], "toroidal6regulargrid2dgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.Toroidal6RegularGrid2dGraph"]], "toroidalgrid2dgraph() (in module sage.graphs.generators.basic)": [[23, "sage.graphs.generators.basic.ToroidalGrid2dGraph"]], "sage.graphs.generators.basic": [[23, "module-sage.graphs.generators.basic"]], "bishopgraph() (in module sage.graphs.generators.chessboard)": [[24, "sage.graphs.generators.chessboard.BishopGraph"]], "chessboardgraphgenerator() (in module sage.graphs.generators.chessboard)": [[24, "sage.graphs.generators.chessboard.ChessboardGraphGenerator"]], "kinggraph() (in module sage.graphs.generators.chessboard)": [[24, "sage.graphs.generators.chessboard.KingGraph"]], "knightgraph() (in module sage.graphs.generators.chessboard)": [[24, "sage.graphs.generators.chessboard.KnightGraph"]], "queengraph() (in module sage.graphs.generators.chessboard)": [[24, "sage.graphs.generators.chessboard.QueenGraph"]], "rookgraph() (in module sage.graphs.generators.chessboard)": [[24, "sage.graphs.generators.chessboard.RookGraph"]], "sage.graphs.generators.chessboard": [[24, "module-sage.graphs.generators.chessboard"]], "affineorthogonalpolargraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.AffineOrthogonalPolarGraph"]], "ahrensszekeresgeneralizedquadranglegraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.AhrensSzekeresGeneralizedQuadrangleGraph"]], "cossidentepenttilagraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.CossidentePenttilaGraph"]], "haemersgraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.HaemersGraph"]], "nonisotropicorthogonalpolargraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.NonisotropicOrthogonalPolarGraph"]], "nonisotropicunitarypolargraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.NonisotropicUnitaryPolarGraph"]], "nowhere0wordstwoweightcodegraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.Nowhere0WordsTwoWeightCodeGraph"]], "orthogonaldualpolargraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.OrthogonalDualPolarGraph"]], "orthogonalpolargraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.OrthogonalPolarGraph"]], "symplecticdualpolargraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.SymplecticDualPolarGraph"]], "symplecticpolargraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.SymplecticPolarGraph"]], "t2stargeneralizedquadranglegraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.T2starGeneralizedQuadrangleGraph"]], "taylortwographdescendantsrg() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.TaylorTwographDescendantSRG"]], "taylortwographsrg() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.TaylorTwographSRG"]], "unitarydualpolargraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.UnitaryDualPolarGraph"]], "unitarypolargraph() (in module sage.graphs.generators.classical_geometries)": [[25, "sage.graphs.generators.classical_geometries.UnitaryPolarGraph"]], "sage.graphs.generators.classical_geometries": [[25, "module-sage.graphs.generators.classical_geometries"]], "alternatingformsgraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.AlternatingFormsGraph"]], "bilinearformsgraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.BilinearFormsGraph"]], "conwaysmith_for_3s7() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.ConwaySmith_for_3S7"]], "doublegrassmanngraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.DoubleGrassmannGraph"]], "doubleoddgraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.DoubleOddGraph"]], "doublytruncatedwittgraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.DoublyTruncatedWittGraph"]], "fostergraph3s6() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.FosterGraph3S6"]], "generaliseddodecagongraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.GeneralisedDodecagonGraph"]], "generalisedhexagongraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.GeneralisedHexagonGraph"]], "generalisedoctagongraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.GeneralisedOctagonGraph"]], "grassmanngraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.GrassmannGraph"]], "halfcube() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.HalfCube"]], "hermitianformsgraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.HermitianFormsGraph"]], "ivanovivanovfaradjevgraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.IvanovIvanovFaradjevGraph"]], "j2graph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.J2Graph"]], "largewittgraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.LargeWittGraph"]], "leonardgraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.LeonardGraph"]], "truncatedwittgraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.TruncatedWittGraph"]], "ustimenkograph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.UstimenkoGraph"]], "cocliques_hoffmannsingleton() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.cocliques_HoffmannSingleton"]], "distance_3_doubly_truncated_golay_code_graph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.distance_3_doubly_truncated_Golay_code_graph"]], "distance_regular_graph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.distance_regular_graph"]], "graph_3o73() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.graph_3O73"]], "graph_from_gq_spread() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.graph_from_GQ_spread"]], "graph_with_classical_parameters() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.graph_with_classical_parameters"]], "is_classical_parameters_graph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.is_classical_parameters_graph"]], "is_from_gq_spread() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.is_from_GQ_spread"]], "is_near_polygon() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.is_near_polygon"]], "is_pseudo_partition_graph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.is_pseudo_partition_graph"]], "locally_gq42_distance_transitive_graph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.locally_GQ42_distance_transitive_graph"]], "near_polygon_graph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.near_polygon_graph"]], "pseudo_partition_graph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.pseudo_partition_graph"]], "sage.graphs.generators.distance_regular": [[26, "module-sage.graphs.generators.distance_regular"]], "shortened_000_111_extended_binary_golay_code_graph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.shortened_000_111_extended_binary_Golay_code_graph"]], "shortened_00_11_binary_golay_code_graph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.shortened_00_11_binary_Golay_code_graph"]], "vanlintschrijvergraph() (in module sage.graphs.generators.distance_regular)": [[26, "sage.graphs.generators.distance_regular.vanLintSchrijverGraph"]], "aztecdiamondgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.AztecDiamondGraph"]], "balancedtree() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.BalancedTree"]], "barbellgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.BarbellGraph"]], "bubblesortgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.BubbleSortGraph"]], "caifurerimmermangraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.CaiFurerImmermanGraph"]], "circulantgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.CirculantGraph"]], "cubeconnectedcycle() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.CubeConnectedCycle"]], "cubegraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.CubeGraph"]], "dipolegraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.DipoleGraph"]], "dorogovtsevgoltsevmendesgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.DorogovtsevGoltsevMendesGraph"]], "doublegeneralizedpetersengraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.DoubleGeneralizedPetersenGraph"]], "egawagraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.EgawaGraph"]], "fibonaccitree() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.FibonacciTree"]], "foldedcubegraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.FoldedCubeGraph"]], "friendshipgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.FriendshipGraph"]], "furergadget() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.FurerGadget"]], "fuzzyballgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.FuzzyBallGraph"]], "generalizedpetersengraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.GeneralizedPetersenGraph"]], "generalizedsierpinskigraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.GeneralizedSierpinskiGraph"]], "goethalsseidelgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.GoethalsSeidelGraph"]], "hamminggraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.HammingGraph"]], "hanoitowergraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.HanoiTowerGraph"]], "hararygraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.HararyGraph"]], "hyperstargraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.HyperStarGraph"]], "igraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.IGraph"]], "johnsongraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.JohnsonGraph"]], "knesergraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.KneserGraph"]], "lcfgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.LCFGraph"]], "lollipopgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.LollipopGraph"]], "mathonpseudocyclicmerginggraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.MathonPseudocyclicMergingGraph"]], "mathonpseudocyclicstronglyregulargraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.MathonPseudocyclicStronglyRegularGraph"]], "muzychuks6graph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.MuzychukS6Graph"]], "mycielskigraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.MycielskiGraph"]], "mycielskistep() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.MycielskiStep"]], "nkstargraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.NKStarGraph"]], "nstargraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.NStarGraph"]], "oddgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.OddGraph"]], "paleygraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.PaleyGraph"]], "pasechnikgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.PasechnikGraph"]], "ringedtree() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.RingedTree"]], "rosewindowgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.RoseWindowGraph"]], "sierpinskigasketgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.SierpinskiGasketGraph"]], "squaredskewhadamardmatrixgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.SquaredSkewHadamardMatrixGraph"]], "switchedsquaredskewhadamardmatrixgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.SwitchedSquaredSkewHadamardMatrixGraph"]], "tabacjngraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.TabacjnGraph"]], "tadpolegraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.TadpoleGraph"]], "turangraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.TuranGraph"]], "wheelgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.WheelGraph"]], "windmillgraph() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.WindmillGraph"]], "chang_graphs() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.chang_graphs"]], "line_graph_forbidden_subgraphs() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.line_graph_forbidden_subgraphs"]], "nauty_gentreeg() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.nauty_gentreeg"]], "petersen_family() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.petersen_family"]], "sage.graphs.generators.families": [[27, "module-sage.graphs.generators.families"]], "trees() (in module sage.graphs.generators.families)": [[27, "sage.graphs.generators.families.trees"]], "intersectiongraph() (in module sage.graphs.generators.intersection)": [[28, "sage.graphs.generators.intersection.IntersectionGraph"]], "intervalgraph() (in module sage.graphs.generators.intersection)": [[28, "sage.graphs.generators.intersection.IntervalGraph"]], "orthogonalarrayblockgraph() (in module sage.graphs.generators.intersection)": [[28, "sage.graphs.generators.intersection.OrthogonalArrayBlockGraph"]], "permutationgraph() (in module sage.graphs.generators.intersection)": [[28, "sage.graphs.generators.intersection.PermutationGraph"]], "tolerancegraph() (in module sage.graphs.generators.intersection)": [[28, "sage.graphs.generators.intersection.ToleranceGraph"]], "sage.graphs.generators.intersection": [[28, "module-sage.graphs.generators.intersection"]], "dodecahedralgraph() (in module sage.graphs.generators.platonic_solids)": [[29, "sage.graphs.generators.platonic_solids.DodecahedralGraph"]], "hexahedralgraph() (in module sage.graphs.generators.platonic_solids)": [[29, "sage.graphs.generators.platonic_solids.HexahedralGraph"]], "icosahedralgraph() (in module sage.graphs.generators.platonic_solids)": [[29, "sage.graphs.generators.platonic_solids.IcosahedralGraph"]], "octahedralgraph() (in module sage.graphs.generators.platonic_solids)": [[29, "sage.graphs.generators.platonic_solids.OctahedralGraph"]], "tetrahedralgraph() (in module sage.graphs.generators.platonic_solids)": [[29, "sage.graphs.generators.platonic_solids.TetrahedralGraph"]], "sage.graphs.generators.platonic_solids": [[29, "module-sage.graphs.generators.platonic_solids"]], "randombarabasialbert() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomBarabasiAlbert"]], "randombicubicplanar() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomBicubicPlanar"]], "randombipartite() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomBipartite"]], "randomblockgraph() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomBlockGraph"]], "randomboundedtolerancegraph() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomBoundedToleranceGraph"]], "randomchordalgraph() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomChordalGraph"]], "randomgnm() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomGNM"]], "randomgnp() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomGNP"]], "randomholmekim() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomHolmeKim"]], "randomintervalgraph() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomIntervalGraph"]], "randomlobster() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomLobster"]], "randomnewmanwattsstrogatz() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomNewmanWattsStrogatz"]], "randomregular() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomRegular"]], "randomregularbipartite() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomRegularBipartite"]], "randomshell() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomShell"]], "randomtolerancegraph() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomToleranceGraph"]], "randomtree() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomTree"]], "randomtreepowerlaw() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomTreePowerlaw"]], "randomtriangulation() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomTriangulation"]], "randomunitdiskgraph() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.RandomUnitDiskGraph"]], "blossoming_contour() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.blossoming_contour"]], "connecting_nodes() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.connecting_nodes"]], "growing_subtrees() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.growing_subtrees"]], "pruned_tree() (in module sage.graphs.generators.random)": [[30, "sage.graphs.generators.random.pruned_tree"]], "sage.graphs.generators.random": [[30, "module-sage.graphs.generators.random"]], "balaban10cage() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.Balaban10Cage"]], "balaban11cage() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.Balaban11Cage"]], "bidiakiscube() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.BidiakisCube"]], "biggssmithgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.BiggsSmithGraph"]], "blanusafirstsnarkgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.BlanusaFirstSnarkGraph"]], "blanusasecondsnarkgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.BlanusaSecondSnarkGraph"]], "brinkmanngraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.BrinkmannGraph"]], "brouwerhaemersgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.BrouwerHaemersGraph"]], "buckyball() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.BuckyBall"]], "camerongraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.CameronGraph"]], "cell120() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.Cell120"]], "cell600() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.Cell600"]], "chvatalgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.ChvatalGraph"]], "clebschgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.ClebschGraph"]], "coxetergraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.CoxeterGraph"]], "dejtergraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.DejterGraph"]], "desarguesgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.DesarguesGraph"]], "doublestarsnark() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.DoubleStarSnark"]], "durergraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.DurerGraph"]], "dyckgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.DyckGraph"]], "ellinghamhorton54graph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.EllinghamHorton54Graph"]], "ellinghamhorton78graph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.EllinghamHorton78Graph"]], "erreragraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.ErreraGraph"]], "f26agraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.F26AGraph"]], "flowersnark() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.FlowerSnark"]], "folkmangraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.FolkmanGraph"]], "fostergraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.FosterGraph"]], "franklingraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.FranklinGraph"]], "fruchtgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.FruchtGraph"]], "goldnerhararygraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.GoldnerHararyGraph"]], "golombgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.GolombGraph"]], "gossetgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.GossetGraph"]], "graygraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.GrayGraph"]], "gritsenkograph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.GritsenkoGraph"]], "grotzschgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.GrotzschGraph"]], "halljankograph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HallJankoGraph"]], "harborthgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HarborthGraph"]], "harriesgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HarriesGraph"]], "harrieswonggraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HarriesWongGraph"]], "heawoodgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HeawoodGraph"]], "herschelgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HerschelGraph"]], "higmansimsgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HigmanSimsGraph"]], "hoffmangraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HoffmanGraph"]], "hoffmansingletongraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HoffmanSingletonGraph"]], "holtgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HoltGraph"]], "hortongraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.HortonGraph"]], "ioninkharaghani765graph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.IoninKharaghani765Graph"]], "jankokharaghanigraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.JankoKharaghaniGraph"]], "jankokharaghanitonchevgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.JankoKharaghaniTonchevGraph"]], "kittellgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.KittellGraph"]], "klein3regulargraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.Klein3RegularGraph"]], "klein7regulargraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.Klein7RegularGraph"]], "krackhardtkitegraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.KrackhardtKiteGraph"]], "livingstonegraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.LivingstoneGraph"]], "ljubljanagraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.LjubljanaGraph"]], "localmclaughlingraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.LocalMcLaughlinGraph"]], "m22graph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.M22Graph"]], "markstroemgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.MarkstroemGraph"]], "mathonstronglyregulargraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.MathonStronglyRegularGraph"]], "mcgeegraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.McGeeGraph"]], "mclaughlingraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.McLaughlinGraph"]], "meredithgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.MeredithGraph"]], "moebiuskantorgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.MoebiusKantorGraph"]], "moserspindle() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.MoserSpindle"]], "naurugraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.NauruGraph"]], "pappusgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.PappusGraph"]], "perkelgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.PerkelGraph"]], "petersengraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.PetersenGraph"]], "poussingraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.PoussinGraph"]], "robertsongraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.RobertsonGraph"]], "schlaefligraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.SchlaefliGraph"]], "shrikhandegraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.ShrikhandeGraph"]], "simsgewirtzgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.SimsGewirtzGraph"]], "sousseliergraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.SousselierGraph"]], "suzukigraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.SuzukiGraph"]], "sylvestergraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.SylvesterGraph"]], "szekeressnarkgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.SzekeresSnarkGraph"]], "thomsengraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.ThomsenGraph"]], "tietzegraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.TietzeGraph"]], "truncatedicosidodecahedralgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.TruncatedIcosidodecahedralGraph"]], "truncatedtetrahedralgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.TruncatedTetrahedralGraph"]], "tutte12cage() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.Tutte12Cage"]], "tuttecoxetergraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.TutteCoxeterGraph"]], "tuttegraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.TutteGraph"]], "u42graph216() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.U42Graph216"]], "u42graph540() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.U42Graph540"]], "wagnergraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.WagnerGraph"]], "watkinssnarkgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.WatkinsSnarkGraph"]], "wellsgraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.WellsGraph"]], "wienerarayagraph() (in module sage.graphs.generators.smallgraphs)": [[31, "sage.graphs.generators.smallgraphs.WienerArayaGraph"]], "sage.graphs.generators.smallgraphs": [[31, "module-sage.graphs.generators.smallgraphs"]], "africamap() (in module sage.graphs.generators.world_map)": [[32, "sage.graphs.generators.world_map.AfricaMap"]], "europemap() (in module sage.graphs.generators.world_map)": [[32, "sage.graphs.generators.world_map.EuropeMap"]], "usamap() (in module sage.graphs.generators.world_map)": [[32, "sage.graphs.generators.world_map.USAMap"]], "worldmap() (in module sage.graphs.generators.world_map)": [[32, "sage.graphs.generators.world_map.WorldMap"]], "sage.graphs.generators.world_map": [[32, "module-sage.graphs.generators.world_map"]], "genericgraph (class in sage.graphs.generic_graph)": [[33, "sage.graphs.generic_graph.GenericGraph"]], "__eq__() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.__eq__"]], "add_clique() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.add_clique"]], "add_cycle() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.add_cycle"]], "add_edge() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.add_edge"]], "add_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.add_edges"]], "add_path() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.add_path"]], "add_vertex() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.add_vertex"]], "add_vertices() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.add_vertices"]], "adjacency_matrix() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.adjacency_matrix"]], "all_paths() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.all_paths"]], "allow_loops() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.allow_loops"]], "allow_multiple_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.allow_multiple_edges"]], "allows_loops() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.allows_loops"]], "allows_multiple_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.allows_multiple_edges"]], "am() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.am"]], "antisymmetric() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.antisymmetric"]], "automorphism_group() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.automorphism_group"]], "average_degree() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.average_degree"]], "average_distance() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.average_distance"]], "blocks_and_cut_vertices() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.blocks_and_cut_vertices"]], "blocks_and_cuts_tree() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.blocks_and_cuts_tree"]], "breadth_first_search() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.breadth_first_search"]], "canonical_label() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.canonical_label"]], "cartesian_product() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.cartesian_product"]], "categorical_product() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.categorical_product"]], "centrality_betweenness() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.centrality_betweenness"]], "centrality_closeness() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.centrality_closeness"]], "characteristic_polynomial() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.characteristic_polynomial"]], "charpoly() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.charpoly"]], "clear() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.clear"]], "cluster_transitivity() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.cluster_transitivity"]], "cluster_triangles() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.cluster_triangles"]], "clustering_average() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.clustering_average"]], "clustering_coeff() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.clustering_coeff"]], "coarsest_equitable_refinement() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.coarsest_equitable_refinement"]], "complement() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.complement"]], "connected_component_containing_vertex() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.connected_component_containing_vertex"]], "connected_components() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.connected_components"]], "connected_components_number() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.connected_components_number"]], "connected_components_sizes() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.connected_components_sizes"]], "connected_components_subgraphs() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.connected_components_subgraphs"]], "connected_subgraph_iterator() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.connected_subgraph_iterator"]], "contract_edge() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.contract_edge"]], "contract_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.contract_edges"]], "copy() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.copy"]], "crossing_number() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.crossing_number"]], "cycle_basis() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.cycle_basis"]], "degree() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.degree"]], "degree_histogram() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.degree_histogram"]], "degree_iterator() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.degree_iterator"]], "degree_sequence() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.degree_sequence"]], "degree_to_cell() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.degree_to_cell"]], "delete_edge() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.delete_edge"]], "delete_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.delete_edges"]], "delete_multiedge() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.delete_multiedge"]], "delete_vertex() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.delete_vertex"]], "delete_vertices() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.delete_vertices"]], "density() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.density"]], "depth_first_search() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.depth_first_search"]], "disjoint_routed_paths() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.disjoint_routed_paths"]], "disjoint_union() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.disjoint_union"]], "disjunctive_product() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.disjunctive_product"]], "distance() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.distance"]], "distance_all_pairs() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.distance_all_pairs"]], "distance_matrix() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.distance_matrix"]], "distances_distribution() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.distances_distribution"]], "dominating_set() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.dominating_set"]], "dominating_sets() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.dominating_sets"]], "dominator_tree() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.dominator_tree"]], "edge_boundary() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edge_boundary"]], "edge_connectivity() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edge_connectivity"]], "edge_cut() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edge_cut"]], "edge_disjoint_paths() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edge_disjoint_paths"]], "edge_disjoint_spanning_trees() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edge_disjoint_spanning_trees"]], "edge_iterator() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edge_iterator"]], "edge_label() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edge_label"]], "edge_labels() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edge_labels"]], "edge_polytope() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edge_polytope"]], "edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edges"]], "edges_incident() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.edges_incident"]], "eigenspaces() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.eigenspaces"]], "eigenvectors() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.eigenvectors"]], "eulerian_circuit() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.eulerian_circuit"]], "eulerian_orientation() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.eulerian_orientation"]], "export_to_file() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.export_to_file"]], "faces() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.faces"]], "feedback_vertex_set() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.feedback_vertex_set"]], "flow() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.flow"]], "genus() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.genus"]], "get_embedding() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.get_embedding"]], "get_pos() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.get_pos"]], "get_vertex() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.get_vertex"]], "get_vertices() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.get_vertices"]], "girth() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.girth"]], "graph_isom_equivalent_non_edge_labeled_graph() (in module sage.graphs.generic_graph)": [[33, "sage.graphs.generic_graph.graph_isom_equivalent_non_edge_labeled_graph"]], "graphics_array_defaults (sage.graphs.generic_graph.genericgraph attribute)": [[33, "sage.graphs.generic_graph.GenericGraph.graphics_array_defaults"]], "graphplot() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.graphplot"]], "graphviz_string() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.graphviz_string"]], "graphviz_to_file_named() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.graphviz_to_file_named"]], "greedy_dominating_set() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.greedy_dominating_set"]], "hamiltonian_cycle() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.hamiltonian_cycle"]], "hamiltonian_path() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.hamiltonian_path"]], "has_edge() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.has_edge"]], "has_loops() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.has_loops"]], "has_multiple_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.has_multiple_edges"]], "has_vertex() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.has_vertex"]], "igraph_graph() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.igraph_graph"]], "incidence_matrix() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.incidence_matrix"]], "is_bipartite() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_bipartite"]], "is_cayley() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_cayley"]], "is_chordal() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_chordal"]], "is_circulant() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_circulant"]], "is_circular_planar() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_circular_planar"]], "is_clique() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_clique"]], "is_connected() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_connected"]], "is_cut_edge() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_cut_edge"]], "is_cut_vertex() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_cut_vertex"]], "is_cycle() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_cycle"]], "is_drawn_free_of_edge_crossings() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_drawn_free_of_edge_crossings"]], "is_equitable() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_equitable"]], "is_eulerian() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_eulerian"]], "is_gallai_tree() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_gallai_tree"]], "is_hamiltonian() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_hamiltonian"]], "is_immutable() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_immutable"]], "is_independent_set() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_independent_set"]], "is_interval() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_interval"]], "is_isomorphic() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_isomorphic"]], "is_planar() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_planar"]], "is_regular() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_regular"]], "is_self_complementary() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_self_complementary"]], "is_subgraph() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_subgraph"]], "is_transitively_reduced() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_transitively_reduced"]], "is_vertex_transitive() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.is_vertex_transitive"]], "katz_centrality() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.katz_centrality"]], "katz_matrix() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.katz_matrix"]], "kirchhoff_matrix() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.kirchhoff_matrix"]], "kronecker_product() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.kronecker_product"]], "laplacian_matrix() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.laplacian_matrix"]], "latex_options() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.latex_options"]], "layout() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.layout"]], "layout_circular() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.layout_circular"]], "layout_default() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.layout_default"]], "layout_extend_randomly() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.layout_extend_randomly"]], "layout_forest() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.layout_forest"]], "layout_graphviz() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.layout_graphviz"]], "layout_planar() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.layout_planar"]], "layout_ranked() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.layout_ranked"]], "layout_spring() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.layout_spring"]], "layout_tree() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.layout_tree"]], "lex_bfs() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.lex_BFS"]], "lex_dfs() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.lex_DFS"]], "lex_down() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.lex_DOWN"]], "lex_up() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.lex_UP"]], "lexicographic_product() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.lexicographic_product"]], "line_graph() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.line_graph"]], "longest_path() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.longest_path"]], "loop_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.loop_edges"]], "loop_vertices() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.loop_vertices"]], "loops() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.loops"]], "max_cut() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.max_cut"]], "merge_vertices() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.merge_vertices"]], "min_spanning_tree() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.min_spanning_tree"]], "minimum_cycle_basis() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.minimum_cycle_basis"]], "multicommodity_flow() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.multicommodity_flow"]], "multiple_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.multiple_edges"]], "multiway_cut() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.multiway_cut"]], "name() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.name"]], "neighbor_iterator() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.neighbor_iterator"]], "neighbors() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.neighbors"]], "networkx_graph() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.networkx_graph"]], "nowhere_zero_flow() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.nowhere_zero_flow"]], "num_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.num_edges"]], "num_faces() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.num_faces"]], "num_verts() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.num_verts"]], "number_of_loops() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.number_of_loops"]], "odd_girth() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.odd_girth"]], "order() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.order"]], "pagerank() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.pagerank"]], "planar_dual() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.planar_dual"]], "plot() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.plot"]], "plot3d() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.plot3d"]], "random_edge() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.random_edge"]], "random_edge_iterator() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.random_edge_iterator"]], "random_subgraph() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.random_subgraph"]], "random_vertex() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.random_vertex"]], "random_vertex_iterator() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.random_vertex_iterator"]], "relabel() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.relabel"]], "remove_loops() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.remove_loops"]], "remove_multiple_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.remove_multiple_edges"]], "sage.graphs.generic_graph": [[33, "module-sage.graphs.generic_graph"]], "set_edge_label() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.set_edge_label"]], "set_embedding() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.set_embedding"]], "set_latex_options() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.set_latex_options"]], "set_pos() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.set_pos"]], "set_vertex() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.set_vertex"]], "set_vertices() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.set_vertices"]], "shortest_path() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.shortest_path"]], "shortest_path_all_pairs() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.shortest_path_all_pairs"]], "shortest_path_length() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.shortest_path_length"]], "shortest_path_lengths() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.shortest_path_lengths"]], "shortest_paths() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.shortest_paths"]], "shortest_simple_paths() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.shortest_simple_paths"]], "show() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.show"]], "show3d() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.show3d"]], "size() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.size"]], "spanning_trees_count() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.spanning_trees_count"]], "spectral_radius() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.spectral_radius"]], "spectrum() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.spectrum"]], "steiner_tree() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.steiner_tree"]], "strong_product() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.strong_product"]], "subdivide_edge() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.subdivide_edge"]], "subdivide_edges() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.subdivide_edges"]], "subgraph() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.subgraph"]], "subgraph_search() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.subgraph_search"]], "subgraph_search_count() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.subgraph_search_count"]], "subgraph_search_iterator() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.subgraph_search_iterator"]], "symmetric_edge_polytope() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.symmetric_edge_polytope"]], "szeged_index() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.szeged_index"]], "tachyon_vertex_plot() (in module sage.graphs.generic_graph)": [[33, "sage.graphs.generic_graph.tachyon_vertex_plot"]], "tensor_product() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.tensor_product"]], "to_dictionary() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.to_dictionary"]], "to_simple() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.to_simple"]], "transitive_closure() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.transitive_closure"]], "transitive_reduction() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.transitive_reduction"]], "traveling_salesman_problem() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.traveling_salesman_problem"]], "triangles_count() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.triangles_count"]], "union() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.union"]], "vertex_boundary() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.vertex_boundary"]], "vertex_connectivity() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.vertex_connectivity"]], "vertex_cut() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.vertex_cut"]], "vertex_disjoint_paths() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.vertex_disjoint_paths"]], "vertex_iterator() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.vertex_iterator"]], "vertices() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.vertices"]], "weighted() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.weighted"]], "weighted_adjacency_matrix() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.weighted_adjacency_matrix"]], "wiener_index() (sage.graphs.generic_graph.genericgraph method)": [[33, "sage.graphs.generic_graph.GenericGraph.wiener_index"]], "genericgraph_pyx (class in sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.GenericGraph_pyx"]], "subgraphsearch (class in sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.SubgraphSearch"]], "binary_string_from_dig6() (in module sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.binary_string_from_dig6"]], "binary_string_from_graph6() (in module sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.binary_string_from_graph6"]], "binary_string_to_graph6() (in module sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.binary_string_to_graph6"]], "cardinality() (sage.graphs.generic_graph_pyx.subgraphsearch method)": [[34, "sage.graphs.generic_graph_pyx.SubgraphSearch.cardinality"]], "find_hamiltonian() (in module sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.find_hamiltonian"]], "int_to_binary_string() (in module sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.int_to_binary_string"]], "layout_split() (in module sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.layout_split"]], "length_and_string_from_graph6() (in module sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.length_and_string_from_graph6"]], "sage.graphs.generic_graph_pyx": [[34, "module-sage.graphs.generic_graph_pyx"]], "small_integer_to_graph6() (in module sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.small_integer_to_graph6"]], "spring_layout_fast() (in module sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.spring_layout_fast"]], "transitive_reduction_acyclic() (in module sage.graphs.generic_graph_pyx)": [[34, "sage.graphs.generic_graph_pyx.transitive_reduction_acyclic"]], "genus() (sage.graphs.genus.simple_connected_genus_backtracker method)": [[35, "sage.graphs.genus.simple_connected_genus_backtracker.genus"]], "get_embedding() (sage.graphs.genus.simple_connected_genus_backtracker method)": [[35, "sage.graphs.genus.simple_connected_genus_backtracker.get_embedding"]], "sage.graphs.genus": [[35, "module-sage.graphs.genus"]], "simple_connected_genus_backtracker (class in sage.graphs.genus)": [[35, "sage.graphs.genus.simple_connected_genus_backtracker"]], "simple_connected_graph_genus() (in module sage.graphs.genus)": [[35, "sage.graphs.genus.simple_connected_graph_genus"]], "graph (class in sage.graphs.graph)": [[36, "sage.graphs.graph.Graph"]], "all_cliques() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.all_cliques"]], "antipodal_graph() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.antipodal_graph"]], "apex_vertices() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.apex_vertices"]], "arboricity() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.arboricity"]], "atoms_and_clique_separators() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.atoms_and_clique_separators"]], "bipartite_color() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.bipartite_color"]], "bipartite_double() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.bipartite_double"]], "bipartite_sets() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.bipartite_sets"]], "bounded_outdegree_orientation() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.bounded_outdegree_orientation"]], "bridges() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.bridges"]], "center() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.center"]], "centrality_degree() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.centrality_degree"]], "cheeger_constant() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.cheeger_constant"]], "chromatic_index() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.chromatic_index"]], "chromatic_number() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.chromatic_number"]], "chromatic_polynomial() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.chromatic_polynomial"]], "chromatic_quasisymmetric_function() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.chromatic_quasisymmetric_function"]], "chromatic_symmetric_function() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.chromatic_symmetric_function"]], "cleave() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.cleave"]], "clique_complex() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.clique_complex"]], "clique_maximum() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.clique_maximum"]], "clique_number() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.clique_number"]], "clique_polynomial() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.clique_polynomial"]], "cliques_containing_vertex() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.cliques_containing_vertex"]], "cliques_get_clique_bipartite() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.cliques_get_clique_bipartite"]], "cliques_get_max_clique_graph() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.cliques_get_max_clique_graph"]], "cliques_maximal() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.cliques_maximal"]], "cliques_maximum() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.cliques_maximum"]], "cliques_number_of() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.cliques_number_of"]], "cliques_vertex_clique_number() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.cliques_vertex_clique_number"]], "coloring() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.coloring"]], "common_neighbors_matrix() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.common_neighbors_matrix"]], "convexity_properties() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.convexity_properties"]], "cores() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.cores"]], "degree_constrained_subgraph() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.degree_constrained_subgraph"]], "diameter() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.diameter"]], "distance_graph() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.distance_graph"]], "ear_decomposition() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.ear_decomposition"]], "eccentricity() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.eccentricity"]], "edge_isoperimetric_number() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.edge_isoperimetric_number"]], "effective_resistance() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.effective_resistance"]], "effective_resistance_matrix() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.effective_resistance_matrix"]], "folded_graph() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.folded_graph"]], "fractional_chromatic_index() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.fractional_chromatic_index"]], "fractional_chromatic_number() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.fractional_chromatic_number"]], "fractional_clique_number() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.fractional_clique_number"]], "geodetic_closure() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.geodetic_closure"]], "gomory_hu_tree() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.gomory_hu_tree"]], "graph6_string() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.graph6_string"]], "has_homomorphism_to() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.has_homomorphism_to"]], "has_perfect_matching() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.has_perfect_matching"]], "hyperbolicity() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.hyperbolicity"]], "ihara_zeta_function_inverse() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.ihara_zeta_function_inverse"]], "independent_set() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.independent_set"]], "independent_set_of_representatives() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.independent_set_of_representatives"]], "is_antipodal() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_antipodal"]], "is_apex() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_apex"]], "is_arc_transitive() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_arc_transitive"]], "is_asteroidal_triple_free() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_asteroidal_triple_free"]], "is_biconnected() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_biconnected"]], "is_block_graph() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_block_graph"]], "is_cactus() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_cactus"]], "is_cartesian_product() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_cartesian_product"]], "is_circumscribable() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_circumscribable"]], "is_cograph() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_cograph"]], "is_comparability() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_comparability"]], "is_directed() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_directed"]], "is_distance_regular() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_distance_regular"]], "is_dominating() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_dominating"]], "is_edge_transitive() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_edge_transitive"]], "is_even_hole_free() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_even_hole_free"]], "is_factor_critical() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_factor_critical"]], "is_forest() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_forest"]], "is_half_transitive() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_half_transitive"]], "is_inscribable() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_inscribable"]], "is_line_graph() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_line_graph"]], "is_long_antihole_free() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_long_antihole_free"]], "is_long_hole_free() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_long_hole_free"]], "is_odd_hole_free() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_odd_hole_free"]], "is_overfull() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_overfull"]], "is_partial_cube() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_partial_cube"]], "is_path() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_path"]], "is_perfect() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_perfect"]], "is_permutation() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_permutation"]], "is_polyhedral() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_polyhedral"]], "is_prime() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_prime"]], "is_redundant() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_redundant"]], "is_semi_symmetric() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_semi_symmetric"]], "is_split() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_split"]], "is_strongly_regular() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_strongly_regular"]], "is_tree() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_tree"]], "is_triangle_free() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_triangle_free"]], "is_triconnected() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_triconnected"]], "is_weakly_chordal() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.is_weakly_chordal"]], "join() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.join"]], "kirchhoff_symanzik_polynomial() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.kirchhoff_symanzik_polynomial"]], "least_effective_resistance() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.least_effective_resistance"]], "lex_m() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.lex_M"]], "lovasz_theta() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.lovasz_theta"]], "magnitude_function() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.magnitude_function"]], "matching() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.matching"]], "matching_polynomial() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.matching_polynomial"]], "maximum_average_degree() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.maximum_average_degree"]], "maximum_cardinality_search() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.maximum_cardinality_search"]], "maximum_cardinality_search_m() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.maximum_cardinality_search_M"]], "minimal_dominating_sets() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.minimal_dominating_sets"]], "minimum_outdegree_orientation() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.minimum_outdegree_orientation"]], "minor() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.minor"]], "modular_decomposition() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.modular_decomposition"]], "most_common_neighbors() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.most_common_neighbors"]], "orientations() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.orientations"]], "pathwidth() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.pathwidth"]], "perfect_matchings() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.perfect_matchings"]], "periphery() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.periphery"]], "private_neighbors() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.private_neighbors"]], "radius() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.radius"]], "random_orientation() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.random_orientation"]], "random_spanning_tree() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.random_spanning_tree"]], "rank_decomposition() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.rank_decomposition"]], "sage.graphs.graph": [[36, "module-sage.graphs.graph"]], "seidel_adjacency_matrix() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.seidel_adjacency_matrix"]], "seidel_switching() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.seidel_switching"]], "spanning_trees() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.spanning_trees"]], "sparse6_string() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.sparse6_string"]], "spqr_tree() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.spqr_tree"]], "strong_orientation() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.strong_orientation"]], "strong_orientations_iterator() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.strong_orientations_iterator"]], "to_directed() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.to_directed"]], "to_undirected() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.to_undirected"]], "topological_minor() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.topological_minor"]], "treelength() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.treelength"]], "treewidth() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.treewidth"]], "tutte_polynomial() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.tutte_polynomial"]], "two_factor_petersen() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.two_factor_petersen"]], "twograph() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.twograph"]], "vertex_cover() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.vertex_cover"]], "vertex_isoperimetric_number() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.vertex_isoperimetric_number"]], "write_to_eps() (sage.graphs.graph.graph method)": [[36, "sage.graphs.graph.Graph.write_to_eps"]], "test (class in sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.Test"]], "acyclic_edge_coloring() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.acyclic_edge_coloring"]], "all_graph_colorings() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.all_graph_colorings"]], "b_coloring() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.b_coloring"]], "chromatic_number() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.chromatic_number"]], "edge_coloring() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.edge_coloring"]], "first_coloring() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.first_coloring"]], "fractional_chromatic_index() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.fractional_chromatic_index"]], "fractional_chromatic_number() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.fractional_chromatic_number"]], "grundy_coloring() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.grundy_coloring"]], "linear_arboricity() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.linear_arboricity"]], "number_of_n_colorings() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.number_of_n_colorings"]], "numbers_of_colorings() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.numbers_of_colorings"]], "random() (sage.graphs.graph_coloring.test method)": [[37, "sage.graphs.graph_coloring.Test.random"]], "random_all_graph_colorings() (sage.graphs.graph_coloring.test method)": [[37, "sage.graphs.graph_coloring.Test.random_all_graph_colorings"]], "round_robin() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.round_robin"]], "sage.graphs.graph_coloring": [[37, "module-sage.graphs.graph_coloring"]], "vertex_coloring() (in module sage.graphs.graph_coloring)": [[37, "sage.graphs.graph_coloring.vertex_coloring"]], "genericgraphquery (class in sage.graphs.graph_database)": [[38, "sage.graphs.graph_database.GenericGraphQuery"]], "graphdatabase (class in sage.graphs.graph_database)": [[38, "sage.graphs.graph_database.GraphDatabase"]], "graphquery (class in sage.graphs.graph_database)": [[38, "sage.graphs.graph_database.GraphQuery"]], "data_to_degseq() (in module sage.graphs.graph_database)": [[38, "sage.graphs.graph_database.data_to_degseq"]], "degseq_to_data() (in module sage.graphs.graph_database)": [[38, "sage.graphs.graph_database.degseq_to_data"]], "get_graphs_list() (sage.graphs.graph_database.graphquery method)": [[38, "sage.graphs.graph_database.GraphQuery.get_graphs_list"]], "graph6_to_plot() (in module sage.graphs.graph_database)": [[38, "sage.graphs.graph_database.graph6_to_plot"]], "graph_db_info() (in module sage.graphs.graph_database)": [[38, "sage.graphs.graph_database.graph_db_info"]], "interactive_query() (sage.graphs.graph_database.graphdatabase method)": [[38, "sage.graphs.graph_database.GraphDatabase.interactive_query"]], "number_of() (sage.graphs.graph_database.graphquery method)": [[38, "sage.graphs.graph_database.GraphQuery.number_of"]], "query() (sage.graphs.graph_database.graphdatabase method)": [[38, "sage.graphs.graph_database.GraphDatabase.query"]], "query_iterator() (sage.graphs.graph_database.graphquery method)": [[38, "sage.graphs.graph_database.GraphQuery.query_iterator"]], "sage.graphs.graph_database": [[38, "module-sage.graphs.graph_database"]], "show() (sage.graphs.graph_database.graphquery method)": [[38, "sage.graphs.graph_database.GraphQuery.show"]], "subgraphs_to_query() (in module sage.graphs.graph_database)": [[38, "sage.graphs.graph_database.subgraphs_to_query"]], "bandwidth() (in module sage.graphs.graph_decompositions.bandwidth)": [[39, "sage.graphs.graph_decompositions.bandwidth.bandwidth"]], "sage.graphs.graph_decompositions.bandwidth": [[39, "module-sage.graphs.graph_decompositions.bandwidth"]], "atoms_and_clique_separators() (in module sage.graphs.graph_decompositions.clique_separators)": [[40, "sage.graphs.graph_decompositions.clique_separators.atoms_and_clique_separators"]], "make_labelled_rooted_tree() (in module sage.graphs.graph_decompositions.clique_separators)": [[40, "sage.graphs.graph_decompositions.clique_separators.make_labelled_rooted_tree"]], "make_tree() (in module sage.graphs.graph_decompositions.clique_separators)": [[40, "sage.graphs.graph_decompositions.clique_separators.make_tree"]], "sage.graphs.graph_decompositions.clique_separators": [[40, "module-sage.graphs.graph_decompositions.clique_separators"]], "cutwidth() (in module sage.graphs.graph_decompositions.cutwidth)": [[41, "sage.graphs.graph_decompositions.cutwidth.cutwidth"]], "cutwidth_milp() (in module sage.graphs.graph_decompositions.cutwidth)": [[41, "sage.graphs.graph_decompositions.cutwidth.cutwidth_MILP"]], "cutwidth_dyn() (in module sage.graphs.graph_decompositions.cutwidth)": [[41, "sage.graphs.graph_decompositions.cutwidth.cutwidth_dyn"]], "sage.graphs.graph_decompositions.cutwidth": [[41, "module-sage.graphs.graph_decompositions.cutwidth"]], "width_of_cut_decomposition() (in module sage.graphs.graph_decompositions.cutwidth)": [[41, "sage.graphs.graph_decompositions.cutwidth.width_of_cut_decomposition"]], "is_cartesian_product() (in module sage.graphs.graph_decompositions.graph_products)": [[42, "sage.graphs.graph_decompositions.graph_products.is_cartesian_product"]], "sage.graphs.graph_decompositions.graph_products": [[42, "module-sage.graphs.graph_decompositions.graph_products"]], "both_split (sage.graphs.graph_decompositions.modular_decomposition.nodesplit attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeSplit.BOTH_SPLIT"]], "forest (sage.graphs.graph_decompositions.modular_decomposition.nodetype attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeType.FOREST"]], "left_of_source (sage.graphs.graph_decompositions.modular_decomposition.vertexposition attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.VertexPosition.LEFT_OF_SOURCE"]], "left_split (sage.graphs.graph_decompositions.modular_decomposition.nodesplit attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeSplit.LEFT_SPLIT"]], "normal (sage.graphs.graph_decompositions.modular_decomposition.nodetype attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeType.NORMAL"]], "no_split (sage.graphs.graph_decompositions.modular_decomposition.nodesplit attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeSplit.NO_SPLIT"]], "node (class in sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.Node"]], "nodesplit (class in sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeSplit"]], "nodetype (class in sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeType"]], "parallel (sage.graphs.graph_decompositions.modular_decomposition.nodetype attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeType.PARALLEL"]], "prime (sage.graphs.graph_decompositions.modular_decomposition.nodetype attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeType.PRIME"]], "right_of_source (sage.graphs.graph_decompositions.modular_decomposition.vertexposition attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.VertexPosition.RIGHT_OF_SOURCE"]], "right_split (sage.graphs.graph_decompositions.modular_decomposition.nodesplit attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeSplit.RIGHT_SPLIT"]], "series (sage.graphs.graph_decompositions.modular_decomposition.nodetype attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.NodeType.SERIES"]], "source (sage.graphs.graph_decompositions.modular_decomposition.vertexposition attribute)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.VertexPosition.SOURCE"]], "vertexposition (class in sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.VertexPosition"]], "children_node_type() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.children_node_type"]], "create_normal_node() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.create_normal_node"]], "create_parallel_node() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.create_parallel_node"]], "create_prime_node() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.create_prime_node"]], "create_series_node() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.create_series_node"]], "either_connected_or_not_connected() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.either_connected_or_not_connected"]], "equivalent_trees() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.equivalent_trees"]], "form_module() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.form_module"]], "gamma_classes() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.gamma_classes"]], "get_module_type() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.get_module_type"]], "get_vertices() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.get_vertices"]], "habib_maurer_algorithm() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.habib_maurer_algorithm"]], "has_left_split() (sage.graphs.graph_decompositions.modular_decomposition.node method)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.Node.has_left_split"]], "has_right_split() (sage.graphs.graph_decompositions.modular_decomposition.node method)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.Node.has_right_split"]], "md_tree_to_graph() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.md_tree_to_graph"]], "modular_decomposition() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.modular_decomposition"]], "nested_tuple_to_tree() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.nested_tuple_to_tree"]], "permute_decomposition() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.permute_decomposition"]], "print_md_tree() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.print_md_tree"]], "random_md_tree() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.random_md_tree"]], "recreate_decomposition() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.recreate_decomposition"]], "relabel_tree() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.relabel_tree"]], "sage.graphs.graph_decompositions.modular_decomposition": [[43, "module-sage.graphs.graph_decompositions.modular_decomposition"]], "set_node_split() (sage.graphs.graph_decompositions.modular_decomposition.node method)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.Node.set_node_split"]], "test_gamma_modules() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.test_gamma_modules"]], "test_maximal_modules() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.test_maximal_modules"]], "test_modular_decomposition() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.test_modular_decomposition"]], "test_module() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.test_module"]], "tree_to_nested_tuple() (in module sage.graphs.graph_decompositions.modular_decomposition)": [[43, "sage.graphs.graph_decompositions.modular_decomposition.tree_to_nested_tuple"]], "mkgraph() (in module sage.graphs.graph_decompositions.rankwidth)": [[44, "sage.graphs.graph_decompositions.rankwidth.mkgraph"]], "rank_decomposition() (in module sage.graphs.graph_decompositions.rankwidth)": [[44, "sage.graphs.graph_decompositions.rankwidth.rank_decomposition"]], "sage.graphs.graph_decompositions.rankwidth": [[44, "module-sage.graphs.graph_decompositions.rankwidth"]], "treelengthconnected (class in sage.graphs.graph_decompositions.tree_decomposition)": [[45, "sage.graphs.graph_decompositions.tree_decomposition.TreelengthConnected"]], "get_length() (sage.graphs.graph_decompositions.tree_decomposition.treelengthconnected method)": [[45, "sage.graphs.graph_decompositions.tree_decomposition.TreelengthConnected.get_length"]], "get_tree_decomposition() (sage.graphs.graph_decompositions.tree_decomposition.treelengthconnected method)": [[45, "sage.graphs.graph_decompositions.tree_decomposition.TreelengthConnected.get_tree_decomposition"]], "is_less_than_k() (sage.graphs.graph_decompositions.tree_decomposition.treelengthconnected method)": [[45, "sage.graphs.graph_decompositions.tree_decomposition.TreelengthConnected.is_less_than_k"]], "is_valid_tree_decomposition() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[45, "sage.graphs.graph_decompositions.tree_decomposition.is_valid_tree_decomposition"]], "reduced_tree_decomposition() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[45, "sage.graphs.graph_decompositions.tree_decomposition.reduced_tree_decomposition"]], "sage.graphs.graph_decompositions.tree_decomposition": [[45, "module-sage.graphs.graph_decompositions.tree_decomposition"]], "treelength() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[45, "sage.graphs.graph_decompositions.tree_decomposition.treelength"]], "treelength_lowerbound() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[45, "sage.graphs.graph_decompositions.tree_decomposition.treelength_lowerbound"]], "treewidth() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[45, "sage.graphs.graph_decompositions.tree_decomposition.treewidth"]], "width_of_tree_decomposition() (in module sage.graphs.graph_decompositions.tree_decomposition)": [[45, "sage.graphs.graph_decompositions.tree_decomposition.width_of_tree_decomposition"]], "is_valid_ordering() (in module sage.graphs.graph_decompositions.vertex_separation)": [[46, "sage.graphs.graph_decompositions.vertex_separation.is_valid_ordering"]], "linear_ordering_to_path_decomposition() (in module sage.graphs.graph_decompositions.vertex_separation)": [[46, "sage.graphs.graph_decompositions.vertex_separation.linear_ordering_to_path_decomposition"]], "lower_bound() (in module sage.graphs.graph_decompositions.vertex_separation)": [[46, "sage.graphs.graph_decompositions.vertex_separation.lower_bound"]], "path_decomposition() (in module sage.graphs.graph_decompositions.vertex_separation)": [[46, "sage.graphs.graph_decompositions.vertex_separation.path_decomposition"]], "pathwidth() (in module sage.graphs.graph_decompositions.vertex_separation)": [[46, "sage.graphs.graph_decompositions.vertex_separation.pathwidth"]], "sage.graphs.graph_decompositions.vertex_separation": [[46, "module-sage.graphs.graph_decompositions.vertex_separation"]], "vertex_separation() (in module sage.graphs.graph_decompositions.vertex_separation)": [[46, "sage.graphs.graph_decompositions.vertex_separation.vertex_separation"]], "vertex_separation_bab() (in module sage.graphs.graph_decompositions.vertex_separation)": [[46, "sage.graphs.graph_decompositions.vertex_separation.vertex_separation_BAB"]], "vertex_separation_milp() (in module sage.graphs.graph_decompositions.vertex_separation)": [[46, "sage.graphs.graph_decompositions.vertex_separation.vertex_separation_MILP"]], "vertex_separation_exp() (in module sage.graphs.graph_decompositions.vertex_separation)": [[46, "sage.graphs.graph_decompositions.vertex_separation.vertex_separation_exp"]], "width_of_path_decomposition() (in module sage.graphs.graph_decompositions.vertex_separation)": [[46, "sage.graphs.graph_decompositions.vertex_separation.width_of_path_decomposition"]], "graph_editor() (in module sage.graphs.graph_editor)": [[47, "sage.graphs.graph_editor.graph_editor"]], "sage.graphs.graph_editor": [[47, "module-sage.graphs.graph_editor"]], "affineorthogonalpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.AffineOrthogonalPolarGraph"]], "africamap() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.AfricaMap"]], "ahrensszekeresgeneralizedquadranglegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.AhrensSzekeresGeneralizedQuadrangleGraph"]], "alternatingformsgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.AlternatingFormsGraph"]], "aztecdiamondgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.AztecDiamondGraph"]], "balaban10cage() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.Balaban10Cage"]], "balaban11cage() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.Balaban11Cage"]], "balancedtree() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BalancedTree"]], "barbellgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BarbellGraph"]], "bidiakiscube() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BidiakisCube"]], "biggssmithgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BiggsSmithGraph"]], "bilinearformsgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BilinearFormsGraph"]], "bishopgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BishopGraph"]], "blanusafirstsnarkgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BlanusaFirstSnarkGraph"]], "blanusasecondsnarkgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BlanusaSecondSnarkGraph"]], "brinkmanngraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BrinkmannGraph"]], "brouwerhaemersgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BrouwerHaemersGraph"]], "bubblesortgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BubbleSortGraph"]], "buckyball() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BuckyBall"]], "bullgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.BullGraph"]], "butterflygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ButterflyGraph"]], "caifurerimmermangraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CaiFurerImmermanGraph"]], "camerongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CameronGraph"]], "cell120() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.Cell120"]], "cell600() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.Cell600"]], "chessboardgraphgenerator() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ChessboardGraphGenerator"]], "chvatalgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ChvatalGraph"]], "circulantgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CirculantGraph"]], "circularladdergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CircularLadderGraph"]], "clawgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ClawGraph"]], "clebschgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ClebschGraph"]], "completebipartitegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CompleteBipartiteGraph"]], "completegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CompleteGraph"]], "completemultipartitegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CompleteMultipartiteGraph"]], "conwaysmith_for_3s7() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ConwaySmith_for_3S7"]], "cossidentepenttilagraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CossidentePenttilaGraph"]], "coxetergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CoxeterGraph"]], "cubeconnectedcycle() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CubeConnectedCycle"]], "cubegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CubeGraph"]], "cyclegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.CycleGraph"]], "dartgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DartGraph"]], "degreesequence() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DegreeSequence"]], "degreesequencebipartite() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DegreeSequenceBipartite"]], "degreesequenceconfigurationmodel() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DegreeSequenceConfigurationModel"]], "degreesequenceexpected() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DegreeSequenceExpected"]], "degreesequencetree() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DegreeSequenceTree"]], "dejtergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DejterGraph"]], "desarguesgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DesarguesGraph"]], "diamondgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DiamondGraph"]], "dipolegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DipoleGraph"]], "dodecahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DodecahedralGraph"]], "dorogovtsevgoltsevmendesgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DorogovtsevGoltsevMendesGraph"]], "doublegeneralizedpetersengraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DoubleGeneralizedPetersenGraph"]], "doublegrassmanngraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DoubleGrassmannGraph"]], "doubleoddgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DoubleOddGraph"]], "doublestarsnark() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DoubleStarSnark"]], "doublytruncatedwittgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DoublyTruncatedWittGraph"]], "durergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DurerGraph"]], "dyckgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.DyckGraph"]], "egawagraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.EgawaGraph"]], "ellinghamhorton54graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.EllinghamHorton54Graph"]], "ellinghamhorton78graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.EllinghamHorton78Graph"]], "emptygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.EmptyGraph"]], "erreragraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ErreraGraph"]], "europemap() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.EuropeMap"]], "f26agraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.F26AGraph"]], "fibonaccitree() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FibonacciTree"]], "flowersnark() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FlowerSnark"]], "foldedcubegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FoldedCubeGraph"]], "folkmangraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FolkmanGraph"]], "forkgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ForkGraph"]], "fostergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FosterGraph"]], "fostergraph3s6() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FosterGraph3S6"]], "franklingraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FranklinGraph"]], "friendshipgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FriendshipGraph"]], "fruchtgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FruchtGraph"]], "furergadget() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FurerGadget"]], "fuzzyballgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.FuzzyBallGraph"]], "gemgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GemGraph"]], "generaliseddodecagongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GeneralisedDodecagonGraph"]], "generalisedhexagongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GeneralisedHexagonGraph"]], "generalisedoctagongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GeneralisedOctagonGraph"]], "generalizedpetersengraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GeneralizedPetersenGraph"]], "generalizedsierpinskigraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GeneralizedSierpinskiGraph"]], "goethalsseidelgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GoethalsSeidelGraph"]], "goldnerhararygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GoldnerHararyGraph"]], "golombgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GolombGraph"]], "gossetgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GossetGraph"]], "graphgenerators (class in sage.graphs.graph_generators)": [[48, "sage.graphs.graph_generators.GraphGenerators"]], "grassmanngraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GrassmannGraph"]], "graygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GrayGraph"]], "grid2dgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.Grid2dGraph"]], "gridgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GridGraph"]], "gritsenkograph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GritsenkoGraph"]], "grotzschgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.GrotzschGraph"]], "haemersgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HaemersGraph"]], "halfcube() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HalfCube"]], "halljankograph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HallJankoGraph"]], "hamminggraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HammingGraph"]], "hanoitowergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HanoiTowerGraph"]], "hararygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HararyGraph"]], "harborthgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HarborthGraph"]], "harriesgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HarriesGraph"]], "harrieswonggraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HarriesWongGraph"]], "heawoodgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HeawoodGraph"]], "hermitianformsgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HermitianFormsGraph"]], "herschelgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HerschelGraph"]], "hexahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HexahedralGraph"]], "higmansimsgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HigmanSimsGraph"]], "hoffmangraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HoffmanGraph"]], "hoffmansingletongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HoffmanSingletonGraph"]], "holtgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HoltGraph"]], "hortongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HortonGraph"]], "housegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HouseGraph"]], "housexgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HouseXGraph"]], "hyperstargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.HyperStarGraph"]], "igraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.IGraph"]], "icosahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.IcosahedralGraph"]], "intersectiongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.IntersectionGraph"]], "intervalgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.IntervalGraph"]], "ioninkharaghani765graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.IoninKharaghani765Graph"]], "ivanovivanovfaradjevgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.IvanovIvanovFaradjevGraph"]], "j2graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.J2Graph"]], "jankokharaghanigraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.JankoKharaghaniGraph"]], "jankokharaghanitonchevgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.JankoKharaghaniTonchevGraph"]], "johnsongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.JohnsonGraph"]], "kinggraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.KingGraph"]], "kittellgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.KittellGraph"]], "klein3regulargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.Klein3RegularGraph"]], "klein7regulargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.Klein7RegularGraph"]], "knesergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.KneserGraph"]], "knightgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.KnightGraph"]], "krackhardtkitegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.KrackhardtKiteGraph"]], "lcfgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.LCFGraph"]], "laddergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.LadderGraph"]], "largewittgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.LargeWittGraph"]], "leonardgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.LeonardGraph"]], "livingstonegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.LivingstoneGraph"]], "ljubljanagraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.LjubljanaGraph"]], "localmclaughlingraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.LocalMcLaughlinGraph"]], "lollipopgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.LollipopGraph"]], "m22graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.M22Graph"]], "markstroemgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.MarkstroemGraph"]], "mathonpseudocyclicmerginggraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.MathonPseudocyclicMergingGraph"]], "mathonpseudocyclicstronglyregulargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.MathonPseudocyclicStronglyRegularGraph"]], "mathonstronglyregulargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.MathonStronglyRegularGraph"]], "mcgeegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.McGeeGraph"]], "mclaughlingraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.McLaughlinGraph"]], "meredithgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.MeredithGraph"]], "moebiuskantorgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.MoebiusKantorGraph"]], "moserspindle() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.MoserSpindle"]], "muzychuks6graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.MuzychukS6Graph"]], "mycielskigraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.MycielskiGraph"]], "mycielskistep() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.MycielskiStep"]], "nkstargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.NKStarGraph"]], "nstargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.NStarGraph"]], "naurugraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.NauruGraph"]], "nonisotropicorthogonalpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.NonisotropicOrthogonalPolarGraph"]], "nonisotropicunitarypolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.NonisotropicUnitaryPolarGraph"]], "nowhere0wordstwoweightcodegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.Nowhere0WordsTwoWeightCodeGraph"]], "octahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.OctahedralGraph"]], "oddgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.OddGraph"]], "orthogonalarrayblockgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.OrthogonalArrayBlockGraph"]], "orthogonaldualpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.OrthogonalDualPolarGraph"]], "orthogonalpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.OrthogonalPolarGraph"]], "paleygraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.PaleyGraph"]], "pappusgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.PappusGraph"]], "pasechnikgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.PasechnikGraph"]], "pathgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.PathGraph"]], "perkelgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.PerkelGraph"]], "permutationgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.PermutationGraph"]], "petersengraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.PetersenGraph"]], "poussingraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.PoussinGraph"]], "queengraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.QueenGraph"]], "randombarabasialbert() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomBarabasiAlbert"]], "randombicubicplanar() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomBicubicPlanar"]], "randombipartite() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomBipartite"]], "randomblockgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomBlockGraph"]], "randomboundedtolerancegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomBoundedToleranceGraph"]], "randomchordalgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomChordalGraph"]], "randomgnm() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomGNM"]], "randomgnp() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomGNP"]], "randomholmekim() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomHolmeKim"]], "randomintervalgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomIntervalGraph"]], "randomlobster() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomLobster"]], "randomnewmanwattsstrogatz() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomNewmanWattsStrogatz"]], "randomregular() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomRegular"]], "randomregularbipartite() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomRegularBipartite"]], "randomshell() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomShell"]], "randomtolerancegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomToleranceGraph"]], "randomtree() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomTree"]], "randomtreepowerlaw() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomTreePowerlaw"]], "randomtriangulation() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomTriangulation"]], "randomunitdiskgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RandomUnitDiskGraph"]], "ringedtree() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RingedTree"]], "robertsongraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RobertsonGraph"]], "rookgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RookGraph"]], "rosewindowgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.RoseWindowGraph"]], "schlaefligraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SchlaefliGraph"]], "shrikhandegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ShrikhandeGraph"]], "sierpinskigasketgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SierpinskiGasketGraph"]], "simsgewirtzgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SimsGewirtzGraph"]], "sousseliergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SousselierGraph"]], "squaredskewhadamardmatrixgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SquaredSkewHadamardMatrixGraph"]], "stargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.StarGraph"]], "suzukigraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SuzukiGraph"]], "switchedsquaredskewhadamardmatrixgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SwitchedSquaredSkewHadamardMatrixGraph"]], "sylvestergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SylvesterGraph"]], "symplecticdualpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SymplecticDualPolarGraph"]], "symplecticpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SymplecticPolarGraph"]], "szekeressnarkgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.SzekeresSnarkGraph"]], "t2stargeneralizedquadranglegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.T2starGeneralizedQuadrangleGraph"]], "tabacjngraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TabacjnGraph"]], "tadpolegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TadpoleGraph"]], "taylortwographdescendantsrg() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TaylorTwographDescendantSRG"]], "taylortwographsrg() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TaylorTwographSRG"]], "tetrahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TetrahedralGraph"]], "thomsengraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ThomsenGraph"]], "tietzegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TietzeGraph"]], "tolerancegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ToleranceGraph"]], "toroidal6regulargrid2dgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.Toroidal6RegularGrid2dGraph"]], "toroidalgrid2dgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.ToroidalGrid2dGraph"]], "truncatedicosidodecahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TruncatedIcosidodecahedralGraph"]], "truncatedtetrahedralgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TruncatedTetrahedralGraph"]], "truncatedwittgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TruncatedWittGraph"]], "turangraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TuranGraph"]], "tutte12cage() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.Tutte12Cage"]], "tuttecoxetergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TutteCoxeterGraph"]], "tuttegraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.TutteGraph"]], "u42graph216() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.U42Graph216"]], "u42graph540() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.U42Graph540"]], "usamap() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.USAMap"]], "unitarydualpolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.UnitaryDualPolarGraph"]], "unitarypolargraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.UnitaryPolarGraph"]], "ustimenkograph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.UstimenkoGraph"]], "wagnergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.WagnerGraph"]], "watkinssnarkgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.WatkinsSnarkGraph"]], "wellsgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.WellsGraph"]], "wheelgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.WheelGraph"]], "wienerarayagraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.WienerArayaGraph"]], "windmillgraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.WindmillGraph"]], "worldmap() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.WorldMap"]], "basic (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.basic"]], "canaug_traverse_edge() (in module sage.graphs.graph_generators)": [[48, "sage.graphs.graph_generators.canaug_traverse_edge"]], "canaug_traverse_vert() (in module sage.graphs.graph_generators)": [[48, "sage.graphs.graph_generators.canaug_traverse_vert"]], "chang_graphs() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.chang_graphs"]], "check_aut() (in module sage.graphs.graph_generators)": [[48, "sage.graphs.graph_generators.check_aut"]], "check_aut_edge() (in module sage.graphs.graph_generators)": [[48, "sage.graphs.graph_generators.check_aut_edge"]], "chessboard (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.chessboard"]], "classical_geometries (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.classical_geometries"]], "cocliques_hoffmannsingleton() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.cocliques_HoffmannSingleton"]], "cospectral_graphs() (sage.graphs.graph_generators.graphgenerators method)": [[48, "sage.graphs.graph_generators.GraphGenerators.cospectral_graphs"]], "degree_sequence (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.degree_sequence"]], "distance_3_doubly_truncated_golay_code_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.distance_3_doubly_truncated_Golay_code_graph"]], "distance_regular (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.distance_regular"]], "distance_regular_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.distance_regular_graph"]], "families (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.families"]], "fullerenes() (sage.graphs.graph_generators.graphgenerators method)": [[48, "sage.graphs.graph_generators.GraphGenerators.fullerenes"]], "fusenes() (sage.graphs.graph_generators.graphgenerators method)": [[48, "sage.graphs.graph_generators.GraphGenerators.fusenes"]], "graph_3o73() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.graph_3O73"]], "intersection (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.intersection"]], "line_graph_forbidden_subgraphs() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.line_graph_forbidden_subgraphs"]], "locally_gq42_distance_transitive_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.locally_GQ42_distance_transitive_graph"]], "nauty_genbg() (sage.graphs.graph_generators.graphgenerators method)": [[48, "sage.graphs.graph_generators.GraphGenerators.nauty_genbg"]], "nauty_geng() (sage.graphs.graph_generators.graphgenerators method)": [[48, "sage.graphs.graph_generators.GraphGenerators.nauty_geng"]], "nauty_gentreeg() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.nauty_gentreeg"]], "petersen_family() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.petersen_family"]], "planar_graphs() (sage.graphs.graph_generators.graphgenerators method)": [[48, "sage.graphs.graph_generators.GraphGenerators.planar_graphs"]], "plantri_gen() (sage.graphs.graph_generators.graphgenerators method)": [[48, "sage.graphs.graph_generators.GraphGenerators.plantri_gen"]], "platonic_solids (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.platonic_solids"]], "quadrangulations() (sage.graphs.graph_generators.graphgenerators method)": [[48, "sage.graphs.graph_generators.GraphGenerators.quadrangulations"]], "random (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.random"]], "sage.graphs.graph_generators": [[48, "module-sage.graphs.graph_generators"]], "shortened_000_111_extended_binary_golay_code_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.shortened_000_111_extended_binary_Golay_code_graph"]], "shortened_00_11_binary_golay_code_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.shortened_00_11_binary_Golay_code_graph"]], "smallgraphs (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.smallgraphs"]], "strongly_regular_db (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.strongly_regular_db"]], "strongly_regular_graph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.strongly_regular_graph"]], "trees() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.trees"]], "triangulations() (sage.graphs.graph_generators.graphgenerators method)": [[48, "sage.graphs.graph_generators.GraphGenerators.triangulations"]], "vanlintschrijvergraph() (sage.graphs.graph_generators.graphgenerators static method)": [[48, "sage.graphs.graph_generators.GraphGenerators.vanLintSchrijverGraph"]], "world_map (sage.graphs.graph_generators.graphgenerators attribute)": [[48, "sage.graphs.graph_generators.GraphGenerators.world_map"]], "randomgnp() (in module sage.graphs.graph_generators_pyx)": [[49, "sage.graphs.graph_generators_pyx.RandomGNP"]], "sage.graphs.graph_generators_pyx": [[49, "module-sage.graphs.graph_generators_pyx"]], "from_adjacency_matrix() (in module sage.graphs.graph_input)": [[50, "sage.graphs.graph_input.from_adjacency_matrix"]], "from_dict_of_dicts() (in module sage.graphs.graph_input)": [[50, "sage.graphs.graph_input.from_dict_of_dicts"]], "from_dict_of_lists() (in module sage.graphs.graph_input)": [[50, "sage.graphs.graph_input.from_dict_of_lists"]], "from_dig6() (in module sage.graphs.graph_input)": [[50, "sage.graphs.graph_input.from_dig6"]], "from_graph6() (in module sage.graphs.graph_input)": [[50, "sage.graphs.graph_input.from_graph6"]], "from_incidence_matrix() (in module sage.graphs.graph_input)": [[50, "sage.graphs.graph_input.from_incidence_matrix"]], "from_networkx_graph() (in module sage.graphs.graph_input)": [[50, "sage.graphs.graph_input.from_networkx_graph"]], "from_oriented_incidence_matrix() (in module sage.graphs.graph_input)": [[50, "sage.graphs.graph_input.from_oriented_incidence_matrix"]], "from_seidel_adjacency_matrix() (in module sage.graphs.graph_input)": [[50, "sage.graphs.graph_input.from_seidel_adjacency_matrix"]], "from_sparse6() (in module sage.graphs.graph_input)": [[50, "sage.graphs.graph_input.from_sparse6"]], "sage.graphs.graph_input": [[50, "module-sage.graphs.graph_input"]], "graphlatex (class in sage.graphs.graph_latex)": [[51, "sage.graphs.graph_latex.GraphLatex"]], "check_tkz_graph() (in module sage.graphs.graph_latex)": [[51, "sage.graphs.graph_latex.check_tkz_graph"]], "dot2tex_picture() (sage.graphs.graph_latex.graphlatex method)": [[51, "sage.graphs.graph_latex.GraphLatex.dot2tex_picture"]], "get_option() (sage.graphs.graph_latex.graphlatex method)": [[51, "sage.graphs.graph_latex.GraphLatex.get_option"]], "have_tkz_graph() (in module sage.graphs.graph_latex)": [[51, "sage.graphs.graph_latex.have_tkz_graph"]], "latex() (sage.graphs.graph_latex.graphlatex method)": [[51, "sage.graphs.graph_latex.GraphLatex.latex"]], "sage.graphs.graph_latex": [[51, "module-sage.graphs.graph_latex"]], "set_option() (sage.graphs.graph_latex.graphlatex method)": [[51, "sage.graphs.graph_latex.GraphLatex.set_option"]], "set_options() (sage.graphs.graph_latex.graphlatex method)": [[51, "sage.graphs.graph_latex.GraphLatex.set_options"]], "setup_latex_preamble() (in module sage.graphs.graph_latex)": [[51, "sage.graphs.graph_latex.setup_latex_preamble"]], "tkz_picture() (sage.graphs.graph_latex.graphlatex method)": [[51, "sage.graphs.graph_latex.GraphLatex.tkz_picture"]], "from_graph6() (in module sage.graphs.graph_list)": [[52, "sage.graphs.graph_list.from_graph6"]], "from_sparse6() (in module sage.graphs.graph_list)": [[52, "sage.graphs.graph_list.from_sparse6"]], "from_whatever() (in module sage.graphs.graph_list)": [[52, "sage.graphs.graph_list.from_whatever"]], "sage.graphs.graph_list": [[52, "module-sage.graphs.graph_list"]], "show_graphs() (in module sage.graphs.graph_list)": [[52, "sage.graphs.graph_list.show_graphs"]], "to_graph6() (in module sage.graphs.graph_list)": [[52, "sage.graphs.graph_list.to_graph6"]], "to_graphics_array() (in module sage.graphs.graph_list)": [[52, "sage.graphs.graph_list.to_graphics_array"]], "to_sparse6() (in module sage.graphs.graph_list)": [[52, "sage.graphs.graph_list.to_sparse6"]], "graphplot (class in sage.graphs.graph_plot)": [[53, "sage.graphs.graph_plot.GraphPlot"]], "layout_tree() (sage.graphs.graph_plot.graphplot method)": [[53, "sage.graphs.graph_plot.GraphPlot.layout_tree"]], "plot() (sage.graphs.graph_plot.graphplot method)": [[53, "sage.graphs.graph_plot.GraphPlot.plot"]], "sage.graphs.graph_plot": [[53, "module-sage.graphs.graph_plot"]], "set_edges() (sage.graphs.graph_plot.graphplot method)": [[53, "sage.graphs.graph_plot.GraphPlot.set_edges"]], "set_pos() (sage.graphs.graph_plot.graphplot method)": [[53, "sage.graphs.graph_plot.GraphPlot.set_pos"]], "set_vertices() (sage.graphs.graph_plot.graphplot method)": [[53, "sage.graphs.graph_plot.GraphPlot.set_vertices"]], "show() (sage.graphs.graph_plot.graphplot method)": [[53, "sage.graphs.graph_plot.GraphPlot.show"]], "gen_html_code() (in module sage.graphs.graph_plot_js)": [[54, "sage.graphs.graph_plot_js.gen_html_code"]], "sage.graphs.graph_plot_js": [[54, "module-sage.graphs.graph_plot_js"]], "hyperbolicity() (in module sage.graphs.hyperbolicity)": [[55, "sage.graphs.hyperbolicity.hyperbolicity"]], "hyperbolicity_distribution() (in module sage.graphs.hyperbolicity)": [[55, "sage.graphs.hyperbolicity.hyperbolicity_distribution"]], "sage.graphs.hyperbolicity": [[55, "module-sage.graphs.hyperbolicity"]], "binomialrandomuniform() (sage.graphs.hypergraph_generators.hypergraphgenerators method)": [[56, "sage.graphs.hypergraph_generators.HypergraphGenerators.BinomialRandomUniform"]], "completeuniform() (sage.graphs.hypergraph_generators.hypergraphgenerators method)": [[56, "sage.graphs.hypergraph_generators.HypergraphGenerators.CompleteUniform"]], "hypergraphgenerators (class in sage.graphs.hypergraph_generators)": [[56, "sage.graphs.hypergraph_generators.HypergraphGenerators"]], "uniformrandomuniform() (sage.graphs.hypergraph_generators.hypergraphgenerators method)": [[56, "sage.graphs.hypergraph_generators.HypergraphGenerators.UniformRandomUniform"]], "nauty() (sage.graphs.hypergraph_generators.hypergraphgenerators method)": [[56, "sage.graphs.hypergraph_generators.HypergraphGenerators.nauty"]], "sage.graphs.hypergraph_generators": [[56, "module-sage.graphs.hypergraph_generators"]], "independentsets (class in sage.graphs.independent_sets)": [[57, "sage.graphs.independent_sets.IndependentSets"]], "cardinality() (sage.graphs.independent_sets.independentsets method)": [[57, "sage.graphs.independent_sets.IndependentSets.cardinality"]], "sage.graphs.independent_sets": [[57, "module-sage.graphs.independent_sets"]], "graphclass (class in sage.graphs.isgci)": [[58, "sage.graphs.isgci.GraphClass"]], "graphclasses (class in sage.graphs.isgci)": [[58, "sage.graphs.isgci.GraphClasses"]], "classes() (sage.graphs.isgci.graphclasses method)": [[58, "sage.graphs.isgci.GraphClasses.classes"]], "description() (sage.graphs.isgci.graphclass method)": [[58, "sage.graphs.isgci.GraphClass.description"]], "forbidden_subgraphs() (sage.graphs.isgci.graphclass method)": [[58, "sage.graphs.isgci.GraphClass.forbidden_subgraphs"]], "get_class() (sage.graphs.isgci.graphclasses method)": [[58, "sage.graphs.isgci.GraphClasses.get_class"]], "inclusion_digraph() (sage.graphs.isgci.graphclasses method)": [[58, "sage.graphs.isgci.GraphClasses.inclusion_digraph"]], "inclusions() (sage.graphs.isgci.graphclasses method)": [[58, "sage.graphs.isgci.GraphClasses.inclusions"]], "sage.graphs.isgci": [[58, "module-sage.graphs.isgci"]], "show_all() (sage.graphs.isgci.graphclasses method)": [[58, "sage.graphs.isgci.GraphClasses.show_all"]], "smallgraphs() (sage.graphs.isgci.graphclasses method)": [[58, "sage.graphs.isgci.GraphClasses.smallgraphs"]], "update_db() (sage.graphs.isgci.graphclasses method)": [[58, "sage.graphs.isgci.GraphClasses.update_db"]], "is_line_graph() (in module sage.graphs.line_graph)": [[59, "sage.graphs.line_graph.is_line_graph"]], "line_graph() (in module sage.graphs.line_graph)": [[59, "sage.graphs.line_graph.line_graph"]], "root_graph() (in module sage.graphs.line_graph)": [[59, "sage.graphs.line_graph.root_graph"]], "sage.graphs.line_graph": [[59, "module-sage.graphs.line_graph"]], "lovasz_theta() (in module sage.graphs.lovasz_theta)": [[60, "sage.graphs.lovasz_theta.lovasz_theta"]], "sage.graphs.lovasz_theta": [[60, "module-sage.graphs.lovasz_theta"]], "complete_poly() (in module sage.graphs.matchpoly)": [[61, "sage.graphs.matchpoly.complete_poly"]], "matching_polynomial() (in module sage.graphs.matchpoly)": [[61, "sage.graphs.matchpoly.matching_polynomial"]], "sage.graphs.matchpoly": [[61, "module-sage.graphs.matchpoly"]], "random_orientation() (in module sage.graphs.orientations)": [[62, "sage.graphs.orientations.random_orientation"]], "sage.graphs.orientations": [[62, "module-sage.graphs.orientations"]], "strong_orientations_iterator() (in module sage.graphs.orientations)": [[62, "sage.graphs.orientations.strong_orientations_iterator"]], "breadth_first_level_search() (in module sage.graphs.partial_cube)": [[63, "sage.graphs.partial_cube.breadth_first_level_search"]], "depth_first_traversal() (in module sage.graphs.partial_cube)": [[63, "sage.graphs.partial_cube.depth_first_traversal"]], "is_partial_cube() (in module sage.graphs.partial_cube)": [[63, "sage.graphs.partial_cube.is_partial_cube"]], "sage.graphs.partial_cube": [[63, "module-sage.graphs.partial_cube"]], "all_paths() (in module sage.graphs.path_enumeration)": [[64, "sage.graphs.path_enumeration.all_paths"]], "all_paths_iterator() (in module sage.graphs.path_enumeration)": [[64, "sage.graphs.path_enumeration.all_paths_iterator"]], "all_simple_paths() (in module sage.graphs.path_enumeration)": [[64, "sage.graphs.path_enumeration.all_simple_paths"]], "feng_k_shortest_simple_paths() (in module sage.graphs.path_enumeration)": [[64, "sage.graphs.path_enumeration.feng_k_shortest_simple_paths"]], "sage.graphs.path_enumeration": [[64, "module-sage.graphs.path_enumeration"]], "shortest_simple_paths() (in module sage.graphs.path_enumeration)": [[64, "sage.graphs.path_enumeration.shortest_simple_paths"]], "yen_k_shortest_simple_paths() (in module sage.graphs.path_enumeration)": [[64, "sage.graphs.path_enumeration.yen_k_shortest_simple_paths"]], "is_planar() (in module sage.graphs.planarity)": [[65, "sage.graphs.planarity.is_planar"]], "sage.graphs.planarity": [[65, "module-sage.graphs.planarity"]], "p (class in sage.graphs.pq_trees)": [[66, "sage.graphs.pq_trees.P"]], "pq (class in sage.graphs.pq_trees)": [[66, "sage.graphs.pq_trees.PQ"]], "q (class in sage.graphs.pq_trees)": [[66, "sage.graphs.pq_trees.Q"]], "cardinality() (sage.graphs.pq_trees.p method)": [[66, "sage.graphs.pq_trees.P.cardinality"]], "cardinality() (sage.graphs.pq_trees.q method)": [[66, "sage.graphs.pq_trees.Q.cardinality"]], "flatten() (sage.graphs.pq_trees.pq method)": [[66, "sage.graphs.pq_trees.PQ.flatten"]], "number_of_children() (sage.graphs.pq_trees.pq method)": [[66, "sage.graphs.pq_trees.PQ.number_of_children"]], "ordering() (sage.graphs.pq_trees.pq method)": [[66, "sage.graphs.pq_trees.PQ.ordering"]], "orderings() (sage.graphs.pq_trees.p method)": [[66, "sage.graphs.pq_trees.P.orderings"]], "orderings() (sage.graphs.pq_trees.q method)": [[66, "sage.graphs.pq_trees.Q.orderings"]], "reorder_sets() (in module sage.graphs.pq_trees)": [[66, "sage.graphs.pq_trees.reorder_sets"]], "reverse() (sage.graphs.pq_trees.pq method)": [[66, "sage.graphs.pq_trees.PQ.reverse"]], "sage.graphs.pq_trees": [[66, "module-sage.graphs.pq_trees"]], "set_contiguous() (sage.graphs.pq_trees.p method)": [[66, "sage.graphs.pq_trees.P.set_contiguous"]], "set_contiguous() (sage.graphs.pq_trees.q method)": [[66, "sage.graphs.pq_trees.Q.set_contiguous"]], "simplify() (sage.graphs.pq_trees.pq method)": [[66, "sage.graphs.pq_trees.PQ.simplify"]], "treenode (class in sage.graphs.schnyder)": [[67, "sage.graphs.schnyder.TreeNode"]], "append_child() (sage.graphs.schnyder.treenode method)": [[67, "sage.graphs.schnyder.TreeNode.append_child"]], "compute_depth_of_self_and_children() (sage.graphs.schnyder.treenode method)": [[67, "sage.graphs.schnyder.TreeNode.compute_depth_of_self_and_children"]], "compute_number_of_descendants() (sage.graphs.schnyder.treenode method)": [[67, "sage.graphs.schnyder.TreeNode.compute_number_of_descendants"]], "minimal_schnyder_wood() (in module sage.graphs.schnyder)": [[67, "sage.graphs.schnyder.minimal_schnyder_wood"]], "sage.graphs.schnyder": [[67, "module-sage.graphs.schnyder"]], "boruvka() (in module sage.graphs.spanning_tree)": [[68, "sage.graphs.spanning_tree.boruvka"]], "edge_disjoint_spanning_trees() (in module sage.graphs.spanning_tree)": [[68, "sage.graphs.spanning_tree.edge_disjoint_spanning_trees"]], "filter_kruskal() (in module sage.graphs.spanning_tree)": [[68, "sage.graphs.spanning_tree.filter_kruskal"]], "filter_kruskal_iterator() (in module sage.graphs.spanning_tree)": [[68, "sage.graphs.spanning_tree.filter_kruskal_iterator"]], "kruskal() (in module sage.graphs.spanning_tree)": [[68, "sage.graphs.spanning_tree.kruskal"]], "kruskal_iterator() (in module sage.graphs.spanning_tree)": [[68, "sage.graphs.spanning_tree.kruskal_iterator"]], "kruskal_iterator_from_edges() (in module sage.graphs.spanning_tree)": [[68, "sage.graphs.spanning_tree.kruskal_iterator_from_edges"]], "random_spanning_tree() (in module sage.graphs.spanning_tree)": [[68, "sage.graphs.spanning_tree.random_spanning_tree"]], "sage.graphs.spanning_tree": [[68, "module-sage.graphs.spanning_tree"]], "spanning_trees() (in module sage.graphs.spanning_tree)": [[68, "sage.graphs.spanning_tree.spanning_trees"]], "srg_100_44_18_20() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_100_44_18_20"]], "srg_100_45_20_20() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_100_45_20_20"]], "srg_105_32_4_12() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_105_32_4_12"]], "srg_120_63_30_36() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_120_63_30_36"]], "srg_120_77_52_44() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_120_77_52_44"]], "srg_126_25_8_4() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_126_25_8_4"]], "srg_126_50_13_24() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_126_50_13_24"]], "srg_1288_792_476_504() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_1288_792_476_504"]], "srg_144_39_6_12() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_144_39_6_12"]], "srg_175_72_20_36() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_175_72_20_36"]], "srg_176_105_68_54() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_176_105_68_54"]], "srg_176_49_12_14() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_176_49_12_14"]], "srg_176_90_38_54() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_176_90_38_54"]], "srg_196_91_42_42() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_196_91_42_42"]], "srg_210_99_48_45() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_210_99_48_45"]], "srg_220_84_38_28() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_220_84_38_28"]], "srg_243_110_37_60() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_243_110_37_60"]], "srg_253_140_87_65() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_253_140_87_65"]], "srg_276_140_58_84() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_276_140_58_84"]], "srg_280_117_44_52() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_280_117_44_52"]], "srg_280_135_70_60() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_280_135_70_60"]], "srg_416_100_36_20() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_416_100_36_20"]], "srg_560_208_72_80() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_560_208_72_80"]], "srg_630_85_20_10() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_630_85_20_10"]], "srg_from_rshcd() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.SRG_from_RSHCD"]], "apparently_feasible_parameters() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.apparently_feasible_parameters"]], "eigenmatrix() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.eigenmatrix"]], "is_gqqmqp() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_GQqmqp"]], "is_no_f2() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_NO_F2"]], "is_no_f3() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_NO_F3"]], "is_noodd() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_NOodd"]], "is_noperp_f5() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_NOperp_F5"]], "is_nu() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_NU"]], "is_rshcd() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_RSHCD"]], "is_affine_polar() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_affine_polar"]], "is_complete_multipartite() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_complete_multipartite"]], "is_cossidente_penttila() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_cossidente_penttila"]], "is_goethals_seidel() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_goethals_seidel"]], "is_haemers() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_haemers"]], "is_johnson() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_johnson"]], "is_mathon_pc_srg() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_mathon_PC_srg"]], "is_muzychuk_s6() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_muzychuk_S6"]], "is_nowhere0_twoweight() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_nowhere0_twoweight"]], "is_orthogonal_array_block_graph() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_orthogonal_array_block_graph"]], "is_orthogonal_polar() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_orthogonal_polar"]], "is_paley() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_paley"]], "is_polhill() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_polhill"]], "is_steiner() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_steiner"]], "is_switch_oa_srg() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_switch_OA_srg"]], "is_switch_skewhad() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_switch_skewhad"]], "is_taylor_twograph_srg() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_taylor_twograph_srg"]], "is_twograph_descendant_of_srg() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_twograph_descendant_of_srg"]], "is_unitary_dual_polar() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_unitary_dual_polar"]], "is_unitary_polar() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.is_unitary_polar"]], "latin_squares_graph_parameters() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.latin_squares_graph_parameters"]], "sage.graphs.strongly_regular_db": [[69, "module-sage.graphs.strongly_regular_db"]], "strongly_regular_from_two_intersection_set() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.strongly_regular_from_two_intersection_set"]], "strongly_regular_from_two_weight_code() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.strongly_regular_from_two_weight_code"]], "strongly_regular_graph() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.strongly_regular_graph"]], "strongly_regular_graph_lazy() (in module sage.graphs.strongly_regular_db)": [[69, "sage.graphs.strongly_regular_db.strongly_regular_graph_lazy"]], "is_valid_lex_m_order() (in module sage.graphs.traversals)": [[70, "sage.graphs.traversals.is_valid_lex_M_order"]], "lex_bfs() (in module sage.graphs.traversals)": [[70, "sage.graphs.traversals.lex_BFS"]], "lex_dfs() (in module sage.graphs.traversals)": [[70, "sage.graphs.traversals.lex_DFS"]], "lex_down() (in module sage.graphs.traversals)": [[70, "sage.graphs.traversals.lex_DOWN"]], "lex_m() (in module sage.graphs.traversals)": [[70, "sage.graphs.traversals.lex_M"]], "lex_m_fast() (in module sage.graphs.traversals)": [[70, "sage.graphs.traversals.lex_M_fast"]], "lex_m_slow() (in module sage.graphs.traversals)": [[70, "sage.graphs.traversals.lex_M_slow"]], "lex_up() (in module sage.graphs.traversals)": [[70, "sage.graphs.traversals.lex_UP"]], "maximum_cardinality_search() (in module sage.graphs.traversals)": [[70, "sage.graphs.traversals.maximum_cardinality_search"]], "maximum_cardinality_search_m() (in module sage.graphs.traversals)": [[70, "sage.graphs.traversals.maximum_cardinality_search_M"]], "sage.graphs.traversals": [[70, "module-sage.graphs.traversals"]], "treeiterator (class in sage.graphs.trees)": [[71, "sage.graphs.trees.TreeIterator"]], "sage.graphs.trees": [[71, "module-sage.graphs.trees"]], "ear (class in sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.Ear"]], "edgeselection (class in sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.EdgeSelection"]], "maximizedegree (class in sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.MaximizeDegree"]], "minimizedegree (class in sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.MinimizeDegree"]], "minimizesingledegree (class in sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.MinimizeSingleDegree"]], "vertexorder (class in sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.VertexOrder"]], "contracted_edge() (in module sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.contracted_edge"]], "edge_multiplicities() (in module sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.edge_multiplicities"]], "find_ear() (sage.graphs.tutte_polynomial.ear static method)": [[72, "sage.graphs.tutte_polynomial.Ear.find_ear"]], "removed_edge() (in module sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.removed_edge"]], "removed_from() (sage.graphs.tutte_polynomial.ear method)": [[72, "sage.graphs.tutte_polynomial.Ear.removed_from"]], "removed_loops() (in module sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.removed_loops"]], "removed_multiedge() (in module sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.removed_multiedge"]], "s (sage.graphs.tutte_polynomial.ear property)": [[72, "sage.graphs.tutte_polynomial.Ear.s"]], "sage.graphs.tutte_polynomial": [[72, "module-sage.graphs.tutte_polynomial"]], "tutte_polynomial() (in module sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.tutte_polynomial"]], "underlying_graph() (in module sage.graphs.tutte_polynomial)": [[72, "sage.graphs.tutte_polynomial.underlying_graph"]], "unlabeled_edges() (sage.graphs.tutte_polynomial.ear method)": [[72, "sage.graphs.tutte_polynomial.Ear.unlabeled_edges"]], "vertices (sage.graphs.tutte_polynomial.ear property)": [[72, "sage.graphs.tutte_polynomial.Ear.vertices"]], "edgesview (class in sage.graphs.views)": [[73, "sage.graphs.views.EdgesView"]], "sage.graphs.views": [[73, "module-sage.graphs.views"]], "is_long_antihole_free() (in module sage.graphs.weakly_chordal)": [[74, "sage.graphs.weakly_chordal.is_long_antihole_free"]], "is_long_hole_free() (in module sage.graphs.weakly_chordal)": [[74, "sage.graphs.weakly_chordal.is_long_hole_free"]], "is_weakly_chordal() (in module sage.graphs.weakly_chordal)": [[74, "sage.graphs.weakly_chordal.is_weakly_chordal"]], "sage.graphs.weakly_chordal": [[74, "module-sage.graphs.weakly_chordal"]]}})