Search.setIndex({"docnames": ["index", "module_list", "sage/combinat/abstract_tree", "sage/combinat/affine_permutation", "sage/combinat/algebraic_combinatorics", "sage/combinat/all", "sage/combinat/alternating_sign_matrix", "sage/combinat/backtrack", "sage/combinat/baxter_permutations", "sage/combinat/binary_recurrence_sequences", "sage/combinat/binary_tree", "sage/combinat/blob_algebra", "sage/combinat/cartesian_product", "sage/combinat/catalog_partitions", "sage/combinat/chas/all", "sage/combinat/chas/fsym", "sage/combinat/chas/wqsym", "sage/combinat/cluster_algebra_quiver/all", "sage/combinat/cluster_algebra_quiver/cluster_seed", "sage/combinat/cluster_algebra_quiver/mutation_class", "sage/combinat/cluster_algebra_quiver/mutation_type", "sage/combinat/cluster_algebra_quiver/quiver", "sage/combinat/cluster_algebra_quiver/quiver_mutation_type", "sage/combinat/cluster_complex", "sage/combinat/colored_permutations", "sage/combinat/combinat", "sage/combinat/combinat_cython", "sage/combinat/combination", "sage/combinat/combinatorial_map", "sage/combinat/composition", "sage/combinat/composition_signed", "sage/combinat/composition_tableau", "sage/combinat/constellation", "sage/combinat/core", "sage/combinat/counting", "sage/combinat/crystals/affine", "sage/combinat/crystals/affine_factorization", "sage/combinat/crystals/affinization", "sage/combinat/crystals/alcove_path", "sage/combinat/crystals/all", "sage/combinat/crystals/bkk_crystals", "sage/combinat/crystals/catalog", "sage/combinat/crystals/catalog_elementary_crystals", "sage/combinat/crystals/catalog_infinity_crystals", "sage/combinat/crystals/catalog_kirillov_reshetikhin", "sage/combinat/crystals/crystals", "sage/combinat/crystals/direct_sum", "sage/combinat/crystals/elementary_crystals", "sage/combinat/crystals/fast_crystals", "sage/combinat/crystals/fully_commutative_stable_grothendieck", "sage/combinat/crystals/generalized_young_walls", "sage/combinat/crystals/highest_weight_crystals", "sage/combinat/crystals/induced_structure", "sage/combinat/crystals/infinity_crystals", "sage/combinat/crystals/kac_modules", "sage/combinat/crystals/kirillov_reshetikhin", "sage/combinat/crystals/kyoto_path_model", "sage/combinat/crystals/letters", "sage/combinat/crystals/littelmann_path", "sage/combinat/crystals/monomial_crystals", "sage/combinat/crystals/multisegments", "sage/combinat/crystals/mv_polytopes", "sage/combinat/crystals/pbw_crystal", "sage/combinat/crystals/pbw_datum", "sage/combinat/crystals/polyhedral_realization", "sage/combinat/crystals/spins", "sage/combinat/crystals/star_crystal", "sage/combinat/crystals/tensor_product", "sage/combinat/crystals/tensor_product_element", "sage/combinat/cyclic_sieving_phenomenon", "sage/combinat/debruijn_sequence", "sage/combinat/degree_sequences", "sage/combinat/derangements", "sage/combinat/descent_algebra", "sage/combinat/designs/all", "sage/combinat/designs/bibd", "sage/combinat/designs/block_design", "sage/combinat/designs/covering_design", "sage/combinat/designs/database", "sage/combinat/designs/design_catalog", "sage/combinat/designs/designs_pyx", "sage/combinat/designs/difference_family", "sage/combinat/designs/difference_matrices", "sage/combinat/designs/evenly_distributed_sets", "sage/combinat/designs/ext_rep", "sage/combinat/designs/gen_quadrangles_with_spread", "sage/combinat/designs/group_divisible_designs", "sage/combinat/designs/incidence_structures", "sage/combinat/designs/latin_squares", "sage/combinat/designs/orthogonal_arrays", "sage/combinat/designs/orthogonal_arrays_build_recursive", "sage/combinat/designs/orthogonal_arrays_find_recursive", "sage/combinat/designs/resolvable_bibd", "sage/combinat/designs/steiner_quadruple_systems", "sage/combinat/designs/subhypergraph_search", "sage/combinat/designs/twographs", "sage/combinat/diagram", "sage/combinat/diagram_algebras", "sage/combinat/dlx", "sage/combinat/dyck_word", "sage/combinat/e_one_star", "sage/combinat/enumerated_sets", "sage/combinat/enumeration_mod_permgroup", "sage/combinat/expnums", "sage/combinat/family", "sage/combinat/fast_vector_partitions", "sage/combinat/finite_state_machine", "sage/combinat/finite_state_machine_generators", "sage/combinat/fqsym", "sage/combinat/free_dendriform_algebra", "sage/combinat/free_module", "sage/combinat/free_prelie_algebra", "sage/combinat/fully_commutative_elements", "sage/combinat/fully_packed_loop", "sage/combinat/gelfand_tsetlin_patterns", "sage/combinat/graph_path", "sage/combinat/gray_codes", "sage/combinat/grossman_larson_algebras", "sage/combinat/growth", "sage/combinat/hall_polynomial", "sage/combinat/hillman_grassl", "sage/combinat/integer_lists/base", "sage/combinat/integer_lists/invlex", "sage/combinat/integer_lists/lists", "sage/combinat/integer_matrices", "sage/combinat/integer_vector", "sage/combinat/integer_vector_weighted", "sage/combinat/integer_vectors_mod_permgroup", "sage/combinat/interval_posets", "sage/combinat/k_regular_sequence", "sage/combinat/k_tableau", "sage/combinat/kazhdan_lusztig", "sage/combinat/knutson_tao_puzzles", "sage/combinat/matrices/all", "sage/combinat/matrices/dancing_links", "sage/combinat/matrices/dlxcpp", "sage/combinat/matrices/hadamard_matrix", "sage/combinat/matrices/latin", "sage/combinat/misc", "sage/combinat/multiset_partition_into_sets_ordered", "sage/combinat/ncsf_qsym/all", "sage/combinat/ncsf_qsym/combinatorics", "sage/combinat/ncsf_qsym/generic_basis_code", "sage/combinat/ncsf_qsym/ncsf", "sage/combinat/ncsf_qsym/qsym", "sage/combinat/ncsf_qsym/tutorial", "sage/combinat/ncsym/all", "sage/combinat/ncsym/bases", "sage/combinat/ncsym/dual", "sage/combinat/ncsym/ncsym", "sage/combinat/necklace", "sage/combinat/non_decreasing_parking_function", "sage/combinat/nu_dyck_word", "sage/combinat/nu_tamari_lattice", "sage/combinat/ordered_tree", "sage/combinat/output", "sage/combinat/parallelogram_polyomino", "sage/combinat/parking_functions", "sage/combinat/partition", "sage/combinat/partition_algebra", "sage/combinat/partition_kleshchev", "sage/combinat/partition_shifting_algebras", "sage/combinat/partition_tuple", "sage/combinat/partitions", "sage/combinat/path_tableaux/catalog", "sage/combinat/path_tableaux/dyck_path", "sage/combinat/path_tableaux/frieze", "sage/combinat/path_tableaux/path_tableau", "sage/combinat/path_tableaux/semistandard", "sage/combinat/perfect_matching", "sage/combinat/permutation", "sage/combinat/permutation_cython", "sage/combinat/plane_partition", "sage/combinat/posets/all", "sage/combinat/posets/cartesian_product", "sage/combinat/posets/d_complete", "sage/combinat/posets/elements", "sage/combinat/posets/forest", "sage/combinat/posets/hasse_diagram", "sage/combinat/posets/incidence_algebras", "sage/combinat/posets/lattices", "sage/combinat/posets/linear_extensions", "sage/combinat/posets/mobile", "sage/combinat/posets/moebius_algebra", "sage/combinat/posets/poset_examples", "sage/combinat/posets/posets", "sage/combinat/q_analogues", "sage/combinat/q_bernoulli", "sage/combinat/quickref", "sage/combinat/ranker", "sage/combinat/recognizable_series", "sage/combinat/restricted_growth", "sage/combinat/ribbon", "sage/combinat/ribbon_shaped_tableau", "sage/combinat/ribbon_tableau", "sage/combinat/rigged_configurations/all", "sage/combinat/rigged_configurations/bij_abstract_class", "sage/combinat/rigged_configurations/bij_infinity", "sage/combinat/rigged_configurations/bij_type_A", "sage/combinat/rigged_configurations/bij_type_A2_dual", "sage/combinat/rigged_configurations/bij_type_A2_even", "sage/combinat/rigged_configurations/bij_type_A2_odd", "sage/combinat/rigged_configurations/bij_type_B", "sage/combinat/rigged_configurations/bij_type_C", "sage/combinat/rigged_configurations/bij_type_D", "sage/combinat/rigged_configurations/bij_type_D_tri", "sage/combinat/rigged_configurations/bij_type_D_twisted", "sage/combinat/rigged_configurations/bijection", "sage/combinat/rigged_configurations/kleber_tree", "sage/combinat/rigged_configurations/kr_tableaux", "sage/combinat/rigged_configurations/rc_crystal", "sage/combinat/rigged_configurations/rc_infinity", "sage/combinat/rigged_configurations/rigged_configuration_element", "sage/combinat/rigged_configurations/rigged_configurations", "sage/combinat/rigged_configurations/rigged_partition", "sage/combinat/rigged_configurations/tensor_product_kr_tableaux", "sage/combinat/rigged_configurations/tensor_product_kr_tableaux_element", "sage/combinat/root_system/all", "sage/combinat/root_system/ambient_space", "sage/combinat/root_system/associahedron", "sage/combinat/root_system/braid_move_calculator", "sage/combinat/root_system/braid_orbit", "sage/combinat/root_system/branching_rules", "sage/combinat/root_system/cartan_matrix", "sage/combinat/root_system/cartan_type", "sage/combinat/root_system/coxeter_group", "sage/combinat/root_system/coxeter_matrix", "sage/combinat/root_system/coxeter_type", "sage/combinat/root_system/dynkin_diagram", "sage/combinat/root_system/extended_affine_weyl_group", "sage/combinat/root_system/fundamental_group", "sage/combinat/root_system/hecke_algebra_representation", "sage/combinat/root_system/integrable_representations", "sage/combinat/root_system/non_symmetric_macdonald_polynomials", "sage/combinat/root_system/pieri_factors", "sage/combinat/root_system/plot", "sage/combinat/root_system/reflection_group_complex", "sage/combinat/root_system/reflection_group_real", "sage/combinat/root_system/root_lattice_realization_algebras", "sage/combinat/root_system/root_lattice_realizations", "sage/combinat/root_system/root_space", "sage/combinat/root_system/root_system", "sage/combinat/root_system/type_A", "sage/combinat/root_system/type_A_affine", "sage/combinat/root_system/type_A_infinity", "sage/combinat/root_system/type_B", "sage/combinat/root_system/type_BC_affine", "sage/combinat/root_system/type_B_affine", "sage/combinat/root_system/type_C", "sage/combinat/root_system/type_C_affine", "sage/combinat/root_system/type_D", "sage/combinat/root_system/type_D_affine", "sage/combinat/root_system/type_E", "sage/combinat/root_system/type_E_affine", "sage/combinat/root_system/type_F", "sage/combinat/root_system/type_F_affine", "sage/combinat/root_system/type_G", "sage/combinat/root_system/type_G_affine", "sage/combinat/root_system/type_H", "sage/combinat/root_system/type_I", "sage/combinat/root_system/type_Q", "sage/combinat/root_system/type_affine", "sage/combinat/root_system/type_dual", "sage/combinat/root_system/type_folded", "sage/combinat/root_system/type_marked", "sage/combinat/root_system/type_reducible", "sage/combinat/root_system/type_relabel", "sage/combinat/root_system/type_super_A", "sage/combinat/root_system/weight_lattice_realizations", "sage/combinat/root_system/weight_space", "sage/combinat/root_system/weyl_characters", "sage/combinat/root_system/weyl_group", "sage/combinat/rooted_tree", "sage/combinat/rsk", "sage/combinat/schubert_polynomial", "sage/combinat/set_partition", "sage/combinat/set_partition_ordered", "sage/combinat/sf/all", "sage/combinat/sf/character", "sage/combinat/sf/classical", "sage/combinat/sf/dual", "sage/combinat/sf/elementary", "sage/combinat/sf/hall_littlewood", "sage/combinat/sf/hecke", "sage/combinat/sf/homogeneous", "sage/combinat/sf/jack", "sage/combinat/sf/k_dual", "sage/combinat/sf/kfpoly", "sage/combinat/sf/llt", "sage/combinat/sf/macdonald", "sage/combinat/sf/monomial", "sage/combinat/sf/multiplicative", "sage/combinat/sf/new_kschur", "sage/combinat/sf/ns_macdonald", "sage/combinat/sf/orthogonal", "sage/combinat/sf/orthotriang", "sage/combinat/sf/powersum", "sage/combinat/sf/schur", "sage/combinat/sf/sf", "sage/combinat/sf/sfa", "sage/combinat/sf/symplectic", "sage/combinat/sf/witt", "sage/combinat/shard_order", "sage/combinat/shifted_primed_tableau", "sage/combinat/shuffle", "sage/combinat/sidon_sets", "sage/combinat/similarity_class_type", "sage/combinat/sine_gordon", "sage/combinat/six_vertex_model", "sage/combinat/skew_partition", "sage/combinat/skew_tableau", "sage/combinat/sloane_functions", "sage/combinat/species/all", "sage/combinat/species/characteristic_species", "sage/combinat/species/composition_species", "sage/combinat/species/cycle_species", "sage/combinat/species/empty_species", "sage/combinat/species/functorial_composition_species", "sage/combinat/species/generating_series", "sage/combinat/species/library", "sage/combinat/species/linear_order_species", "sage/combinat/species/misc", "sage/combinat/species/partition_species", "sage/combinat/species/permutation_species", "sage/combinat/species/product_species", "sage/combinat/species/recursive_species", "sage/combinat/species/set_species", "sage/combinat/species/species", "sage/combinat/species/structure", "sage/combinat/species/subset_species", "sage/combinat/species/sum_species", "sage/combinat/subset", "sage/combinat/subsets_hereditary", "sage/combinat/subsets_pairwise", "sage/combinat/subword", "sage/combinat/subword_complex", "sage/combinat/super_tableau", "sage/combinat/superpartition", "sage/combinat/symmetric_group_algebra", "sage/combinat/symmetric_group_representations", "sage/combinat/t_sequences", "sage/combinat/tableau", "sage/combinat/tableau_residues", "sage/combinat/tableau_tuple", "sage/combinat/tamari_lattices", "sage/combinat/tiling", "sage/combinat/tools", "sage/combinat/triangles_FHM", "sage/combinat/tuple", "sage/combinat/tutorial", "sage/combinat/vector_partition", "sage/combinat/words", "sage/combinat/words/abstract_word", "sage/combinat/words/alphabet", "sage/combinat/words/finite_word", "sage/combinat/words/infinite_word", "sage/combinat/words/lyndon_word", "sage/combinat/words/morphism", "sage/combinat/words/paths", "sage/combinat/words/shuffle_product", "sage/combinat/words/suffix_trees", "sage/combinat/words/word", "sage/combinat/words/word_char", "sage/combinat/words/word_datatypes", "sage/combinat/words/word_generators", "sage/combinat/words/word_infinite_datatypes", "sage/combinat/words/word_options", "sage/combinat/words/words", "sage/combinat/yang_baxter_graph", "sage/rings/cfinite_sequence"], "filenames": ["index.rst", "module_list.rst", "sage/combinat/abstract_tree.rst", "sage/combinat/affine_permutation.rst", "sage/combinat/algebraic_combinatorics.rst", "sage/combinat/all.rst", "sage/combinat/alternating_sign_matrix.rst", "sage/combinat/backtrack.rst", "sage/combinat/baxter_permutations.rst", "sage/combinat/binary_recurrence_sequences.rst", "sage/combinat/binary_tree.rst", "sage/combinat/blob_algebra.rst", "sage/combinat/cartesian_product.rst", "sage/combinat/catalog_partitions.rst", "sage/combinat/chas/all.rst", "sage/combinat/chas/fsym.rst", "sage/combinat/chas/wqsym.rst", "sage/combinat/cluster_algebra_quiver/all.rst", "sage/combinat/cluster_algebra_quiver/cluster_seed.rst", "sage/combinat/cluster_algebra_quiver/mutation_class.rst", "sage/combinat/cluster_algebra_quiver/mutation_type.rst", "sage/combinat/cluster_algebra_quiver/quiver.rst", "sage/combinat/cluster_algebra_quiver/quiver_mutation_type.rst", "sage/combinat/cluster_complex.rst", "sage/combinat/colored_permutations.rst", "sage/combinat/combinat.rst", "sage/combinat/combinat_cython.rst", "sage/combinat/combination.rst", "sage/combinat/combinatorial_map.rst", "sage/combinat/composition.rst", "sage/combinat/composition_signed.rst", "sage/combinat/composition_tableau.rst", "sage/combinat/constellation.rst", "sage/combinat/core.rst", "sage/combinat/counting.rst", "sage/combinat/crystals/affine.rst", "sage/combinat/crystals/affine_factorization.rst", "sage/combinat/crystals/affinization.rst", "sage/combinat/crystals/alcove_path.rst", "sage/combinat/crystals/all.rst", "sage/combinat/crystals/bkk_crystals.rst", "sage/combinat/crystals/catalog.rst", "sage/combinat/crystals/catalog_elementary_crystals.rst", "sage/combinat/crystals/catalog_infinity_crystals.rst", "sage/combinat/crystals/catalog_kirillov_reshetikhin.rst", "sage/combinat/crystals/crystals.rst", "sage/combinat/crystals/direct_sum.rst", "sage/combinat/crystals/elementary_crystals.rst", "sage/combinat/crystals/fast_crystals.rst", "sage/combinat/crystals/fully_commutative_stable_grothendieck.rst", "sage/combinat/crystals/generalized_young_walls.rst", "sage/combinat/crystals/highest_weight_crystals.rst", "sage/combinat/crystals/induced_structure.rst", "sage/combinat/crystals/infinity_crystals.rst", "sage/combinat/crystals/kac_modules.rst", "sage/combinat/crystals/kirillov_reshetikhin.rst", "sage/combinat/crystals/kyoto_path_model.rst", "sage/combinat/crystals/letters.rst", "sage/combinat/crystals/littelmann_path.rst", "sage/combinat/crystals/monomial_crystals.rst", "sage/combinat/crystals/multisegments.rst", "sage/combinat/crystals/mv_polytopes.rst", "sage/combinat/crystals/pbw_crystal.rst", "sage/combinat/crystals/pbw_datum.rst", "sage/combinat/crystals/polyhedral_realization.rst", "sage/combinat/crystals/spins.rst", "sage/combinat/crystals/star_crystal.rst", "sage/combinat/crystals/tensor_product.rst", "sage/combinat/crystals/tensor_product_element.rst", "sage/combinat/cyclic_sieving_phenomenon.rst", "sage/combinat/debruijn_sequence.rst", "sage/combinat/degree_sequences.rst", "sage/combinat/derangements.rst", "sage/combinat/descent_algebra.rst", "sage/combinat/designs/all.rst", "sage/combinat/designs/bibd.rst", "sage/combinat/designs/block_design.rst", "sage/combinat/designs/covering_design.rst", "sage/combinat/designs/database.rst", "sage/combinat/designs/design_catalog.rst", "sage/combinat/designs/designs_pyx.rst", "sage/combinat/designs/difference_family.rst", "sage/combinat/designs/difference_matrices.rst", "sage/combinat/designs/evenly_distributed_sets.rst", "sage/combinat/designs/ext_rep.rst", "sage/combinat/designs/gen_quadrangles_with_spread.rst", "sage/combinat/designs/group_divisible_designs.rst", "sage/combinat/designs/incidence_structures.rst", "sage/combinat/designs/latin_squares.rst", "sage/combinat/designs/orthogonal_arrays.rst", "sage/combinat/designs/orthogonal_arrays_build_recursive.rst", "sage/combinat/designs/orthogonal_arrays_find_recursive.rst", "sage/combinat/designs/resolvable_bibd.rst", "sage/combinat/designs/steiner_quadruple_systems.rst", "sage/combinat/designs/subhypergraph_search.rst", "sage/combinat/designs/twographs.rst", "sage/combinat/diagram.rst", "sage/combinat/diagram_algebras.rst", "sage/combinat/dlx.rst", "sage/combinat/dyck_word.rst", "sage/combinat/e_one_star.rst", "sage/combinat/enumerated_sets.rst", "sage/combinat/enumeration_mod_permgroup.rst", "sage/combinat/expnums.rst", "sage/combinat/family.rst", "sage/combinat/fast_vector_partitions.rst", "sage/combinat/finite_state_machine.rst", "sage/combinat/finite_state_machine_generators.rst", "sage/combinat/fqsym.rst", "sage/combinat/free_dendriform_algebra.rst", "sage/combinat/free_module.rst", "sage/combinat/free_prelie_algebra.rst", "sage/combinat/fully_commutative_elements.rst", "sage/combinat/fully_packed_loop.rst", "sage/combinat/gelfand_tsetlin_patterns.rst", "sage/combinat/graph_path.rst", "sage/combinat/gray_codes.rst", "sage/combinat/grossman_larson_algebras.rst", "sage/combinat/growth.rst", "sage/combinat/hall_polynomial.rst", "sage/combinat/hillman_grassl.rst", "sage/combinat/integer_lists/base.rst", "sage/combinat/integer_lists/invlex.rst", "sage/combinat/integer_lists/lists.rst", "sage/combinat/integer_matrices.rst", "sage/combinat/integer_vector.rst", "sage/combinat/integer_vector_weighted.rst", "sage/combinat/integer_vectors_mod_permgroup.rst", "sage/combinat/interval_posets.rst", "sage/combinat/k_regular_sequence.rst", "sage/combinat/k_tableau.rst", "sage/combinat/kazhdan_lusztig.rst", "sage/combinat/knutson_tao_puzzles.rst", "sage/combinat/matrices/all.rst", "sage/combinat/matrices/dancing_links.rst", "sage/combinat/matrices/dlxcpp.rst", "sage/combinat/matrices/hadamard_matrix.rst", "sage/combinat/matrices/latin.rst", "sage/combinat/misc.rst", "sage/combinat/multiset_partition_into_sets_ordered.rst", "sage/combinat/ncsf_qsym/all.rst", "sage/combinat/ncsf_qsym/combinatorics.rst", "sage/combinat/ncsf_qsym/generic_basis_code.rst", "sage/combinat/ncsf_qsym/ncsf.rst", "sage/combinat/ncsf_qsym/qsym.rst", "sage/combinat/ncsf_qsym/tutorial.rst", "sage/combinat/ncsym/all.rst", "sage/combinat/ncsym/bases.rst", "sage/combinat/ncsym/dual.rst", "sage/combinat/ncsym/ncsym.rst", "sage/combinat/necklace.rst", "sage/combinat/non_decreasing_parking_function.rst", "sage/combinat/nu_dyck_word.rst", "sage/combinat/nu_tamari_lattice.rst", "sage/combinat/ordered_tree.rst", "sage/combinat/output.rst", "sage/combinat/parallelogram_polyomino.rst", "sage/combinat/parking_functions.rst", "sage/combinat/partition.rst", "sage/combinat/partition_algebra.rst", "sage/combinat/partition_kleshchev.rst", "sage/combinat/partition_shifting_algebras.rst", "sage/combinat/partition_tuple.rst", "sage/combinat/partitions.rst", "sage/combinat/path_tableaux/catalog.rst", "sage/combinat/path_tableaux/dyck_path.rst", "sage/combinat/path_tableaux/frieze.rst", "sage/combinat/path_tableaux/path_tableau.rst", "sage/combinat/path_tableaux/semistandard.rst", "sage/combinat/perfect_matching.rst", "sage/combinat/permutation.rst", "sage/combinat/permutation_cython.rst", "sage/combinat/plane_partition.rst", "sage/combinat/posets/all.rst", "sage/combinat/posets/cartesian_product.rst", "sage/combinat/posets/d_complete.rst", "sage/combinat/posets/elements.rst", "sage/combinat/posets/forest.rst", "sage/combinat/posets/hasse_diagram.rst", "sage/combinat/posets/incidence_algebras.rst", "sage/combinat/posets/lattices.rst", "sage/combinat/posets/linear_extensions.rst", "sage/combinat/posets/mobile.rst", "sage/combinat/posets/moebius_algebra.rst", "sage/combinat/posets/poset_examples.rst", "sage/combinat/posets/posets.rst", "sage/combinat/q_analogues.rst", "sage/combinat/q_bernoulli.rst", "sage/combinat/quickref.rst", "sage/combinat/ranker.rst", "sage/combinat/recognizable_series.rst", "sage/combinat/restricted_growth.rst", "sage/combinat/ribbon.rst", "sage/combinat/ribbon_shaped_tableau.rst", "sage/combinat/ribbon_tableau.rst", "sage/combinat/rigged_configurations/all.rst", "sage/combinat/rigged_configurations/bij_abstract_class.rst", "sage/combinat/rigged_configurations/bij_infinity.rst", "sage/combinat/rigged_configurations/bij_type_A.rst", "sage/combinat/rigged_configurations/bij_type_A2_dual.rst", "sage/combinat/rigged_configurations/bij_type_A2_even.rst", "sage/combinat/rigged_configurations/bij_type_A2_odd.rst", "sage/combinat/rigged_configurations/bij_type_B.rst", "sage/combinat/rigged_configurations/bij_type_C.rst", "sage/combinat/rigged_configurations/bij_type_D.rst", "sage/combinat/rigged_configurations/bij_type_D_tri.rst", "sage/combinat/rigged_configurations/bij_type_D_twisted.rst", "sage/combinat/rigged_configurations/bijection.rst", "sage/combinat/rigged_configurations/kleber_tree.rst", "sage/combinat/rigged_configurations/kr_tableaux.rst", "sage/combinat/rigged_configurations/rc_crystal.rst", "sage/combinat/rigged_configurations/rc_infinity.rst", "sage/combinat/rigged_configurations/rigged_configuration_element.rst", "sage/combinat/rigged_configurations/rigged_configurations.rst", "sage/combinat/rigged_configurations/rigged_partition.rst", "sage/combinat/rigged_configurations/tensor_product_kr_tableaux.rst", "sage/combinat/rigged_configurations/tensor_product_kr_tableaux_element.rst", "sage/combinat/root_system/all.rst", "sage/combinat/root_system/ambient_space.rst", "sage/combinat/root_system/associahedron.rst", "sage/combinat/root_system/braid_move_calculator.rst", "sage/combinat/root_system/braid_orbit.rst", "sage/combinat/root_system/branching_rules.rst", "sage/combinat/root_system/cartan_matrix.rst", "sage/combinat/root_system/cartan_type.rst", "sage/combinat/root_system/coxeter_group.rst", "sage/combinat/root_system/coxeter_matrix.rst", "sage/combinat/root_system/coxeter_type.rst", "sage/combinat/root_system/dynkin_diagram.rst", "sage/combinat/root_system/extended_affine_weyl_group.rst", "sage/combinat/root_system/fundamental_group.rst", "sage/combinat/root_system/hecke_algebra_representation.rst", "sage/combinat/root_system/integrable_representations.rst", "sage/combinat/root_system/non_symmetric_macdonald_polynomials.rst", "sage/combinat/root_system/pieri_factors.rst", "sage/combinat/root_system/plot.rst", "sage/combinat/root_system/reflection_group_complex.rst", "sage/combinat/root_system/reflection_group_real.rst", "sage/combinat/root_system/root_lattice_realization_algebras.rst", "sage/combinat/root_system/root_lattice_realizations.rst", "sage/combinat/root_system/root_space.rst", "sage/combinat/root_system/root_system.rst", "sage/combinat/root_system/type_A.rst", "sage/combinat/root_system/type_A_affine.rst", "sage/combinat/root_system/type_A_infinity.rst", "sage/combinat/root_system/type_B.rst", "sage/combinat/root_system/type_BC_affine.rst", "sage/combinat/root_system/type_B_affine.rst", "sage/combinat/root_system/type_C.rst", "sage/combinat/root_system/type_C_affine.rst", "sage/combinat/root_system/type_D.rst", "sage/combinat/root_system/type_D_affine.rst", "sage/combinat/root_system/type_E.rst", "sage/combinat/root_system/type_E_affine.rst", "sage/combinat/root_system/type_F.rst", "sage/combinat/root_system/type_F_affine.rst", "sage/combinat/root_system/type_G.rst", "sage/combinat/root_system/type_G_affine.rst", "sage/combinat/root_system/type_H.rst", "sage/combinat/root_system/type_I.rst", "sage/combinat/root_system/type_Q.rst", "sage/combinat/root_system/type_affine.rst", "sage/combinat/root_system/type_dual.rst", "sage/combinat/root_system/type_folded.rst", "sage/combinat/root_system/type_marked.rst", "sage/combinat/root_system/type_reducible.rst", "sage/combinat/root_system/type_relabel.rst", "sage/combinat/root_system/type_super_A.rst", "sage/combinat/root_system/weight_lattice_realizations.rst", "sage/combinat/root_system/weight_space.rst", "sage/combinat/root_system/weyl_characters.rst", "sage/combinat/root_system/weyl_group.rst", "sage/combinat/rooted_tree.rst", "sage/combinat/rsk.rst", "sage/combinat/schubert_polynomial.rst", "sage/combinat/set_partition.rst", "sage/combinat/set_partition_ordered.rst", "sage/combinat/sf/all.rst", "sage/combinat/sf/character.rst", "sage/combinat/sf/classical.rst", "sage/combinat/sf/dual.rst", "sage/combinat/sf/elementary.rst", "sage/combinat/sf/hall_littlewood.rst", "sage/combinat/sf/hecke.rst", "sage/combinat/sf/homogeneous.rst", "sage/combinat/sf/jack.rst", "sage/combinat/sf/k_dual.rst", "sage/combinat/sf/kfpoly.rst", "sage/combinat/sf/llt.rst", "sage/combinat/sf/macdonald.rst", "sage/combinat/sf/monomial.rst", "sage/combinat/sf/multiplicative.rst", "sage/combinat/sf/new_kschur.rst", "sage/combinat/sf/ns_macdonald.rst", "sage/combinat/sf/orthogonal.rst", "sage/combinat/sf/orthotriang.rst", "sage/combinat/sf/powersum.rst", "sage/combinat/sf/schur.rst", "sage/combinat/sf/sf.rst", "sage/combinat/sf/sfa.rst", "sage/combinat/sf/symplectic.rst", "sage/combinat/sf/witt.rst", "sage/combinat/shard_order.rst", "sage/combinat/shifted_primed_tableau.rst", "sage/combinat/shuffle.rst", "sage/combinat/sidon_sets.rst", "sage/combinat/similarity_class_type.rst", "sage/combinat/sine_gordon.rst", "sage/combinat/six_vertex_model.rst", "sage/combinat/skew_partition.rst", "sage/combinat/skew_tableau.rst", "sage/combinat/sloane_functions.rst", "sage/combinat/species/all.rst", "sage/combinat/species/characteristic_species.rst", "sage/combinat/species/composition_species.rst", "sage/combinat/species/cycle_species.rst", "sage/combinat/species/empty_species.rst", "sage/combinat/species/functorial_composition_species.rst", "sage/combinat/species/generating_series.rst", "sage/combinat/species/library.rst", "sage/combinat/species/linear_order_species.rst", "sage/combinat/species/misc.rst", "sage/combinat/species/partition_species.rst", "sage/combinat/species/permutation_species.rst", "sage/combinat/species/product_species.rst", "sage/combinat/species/recursive_species.rst", "sage/combinat/species/set_species.rst", "sage/combinat/species/species.rst", "sage/combinat/species/structure.rst", "sage/combinat/species/subset_species.rst", "sage/combinat/species/sum_species.rst", "sage/combinat/subset.rst", "sage/combinat/subsets_hereditary.rst", "sage/combinat/subsets_pairwise.rst", "sage/combinat/subword.rst", "sage/combinat/subword_complex.rst", "sage/combinat/super_tableau.rst", "sage/combinat/superpartition.rst", "sage/combinat/symmetric_group_algebra.rst", "sage/combinat/symmetric_group_representations.rst", "sage/combinat/t_sequences.rst", "sage/combinat/tableau.rst", "sage/combinat/tableau_residues.rst", "sage/combinat/tableau_tuple.rst", "sage/combinat/tamari_lattices.rst", "sage/combinat/tiling.rst", "sage/combinat/tools.rst", "sage/combinat/triangles_FHM.rst", "sage/combinat/tuple.rst", "sage/combinat/tutorial.rst", "sage/combinat/vector_partition.rst", "sage/combinat/words.rst", "sage/combinat/words/abstract_word.rst", "sage/combinat/words/alphabet.rst", "sage/combinat/words/finite_word.rst", "sage/combinat/words/infinite_word.rst", "sage/combinat/words/lyndon_word.rst", "sage/combinat/words/morphism.rst", "sage/combinat/words/paths.rst", "sage/combinat/words/shuffle_product.rst", "sage/combinat/words/suffix_trees.rst", "sage/combinat/words/word.rst", "sage/combinat/words/word_char.rst", "sage/combinat/words/word_datatypes.rst", "sage/combinat/words/word_generators.rst", "sage/combinat/words/word_infinite_datatypes.rst", "sage/combinat/words/word_options.rst", "sage/combinat/words/words.rst", "sage/combinat/yang_baxter_graph.rst", "sage/rings/cfinite_sequence.rst"], "titles": ["Combinatorics", "Comprehensive Module List", "Abstract Recursive Trees", "Affine Permutations", "Algebraic combinatorics", "Combinatorics", "Alternating Sign Matrices", "Backtracking", "Baxter permutations", "Binary Recurrence Sequences", "Binary Trees", "Blob Algebras", "Cartesian Products", "Enumerated sets of partitions, tableaux, \u2026", "Combinatorial Hopf algebras", "Poirier-Reutenauer Hopf algebra of standard tableaux", "Word Quasi-symmetric functions", "Cluster algebras and quivers", "ClusterSeed", "mutation_class", "Helper functions for mutation types of quivers", "Quiver", "Quiver mutation types", "Cluster complex (or generalized dual associahedron)", "Colored Permutations", "Combinatorial Functions", "Fast computation of combinatorial functions (Cython + mpz)", "Combinations", "Combinatorial maps", "Integer compositions", "Signed Compositions", "Composition Tableaux", "Constellations", "Cores", "Counting", "Affine Crystals", "Affine factorization crystal of type <span class=\"math notranslate nohighlight\">\\(A\\)</span>", "Affinization Crystals", "Alcove paths", "Crystals", "Benkart-Kang-Kashiwara crystals for the general-linear Lie superalgebra", "Catalog Of Crystals", "Catalog Of Elementary Crystals", "Catalog Of Crystal Models For <span class=\"math notranslate nohighlight\">\\(B(\\infty)\\)</span>", "Catalog Of Crystal Models For Kirillov-Reshetikhin Crystals", "An introduction to crystals", "Direct Sum of Crystals", "Elementary Crystals", "Fast Rank Two Crystals", "Fully commutative stable Grothendieck crystal", "Crystals of Generalized Young Walls", "Highest weight crystals", "Induced Crystals", "<span class=\"math notranslate nohighlight\">\\(\\mathcal{B}(\\infty)\\)</span> Crystals of Tableaux in Nonexceptional Types and <span class=\"math notranslate nohighlight\">\\(G_2\\)</span>", "Crystals of Kac modules of the general-linear Lie superalgebra", "Kirillov-Reshetikhin Crystals", "Kyoto Path Model for Affine Highest Weight Crystals", "Crystals of letters", "Littelmann paths", "Crystals of Modified Nakajima Monomials", "Crystal of Bernstein-Zelevinsky Multisegments", "Crystal Of Mirkovi\u0107-Vilonen (MV) Polytopes", "<span class=\"math notranslate nohighlight\">\\(\\mathcal{B}(\\infty)\\)</span> Crystal Of PBW Monomials", "PBW Data", "Polyhedral Realization of <span class=\"math notranslate nohighlight\">\\(B(\\infty)\\)</span>", "Spin Crystals", "Star-Crystal Structure On <span class=\"math notranslate nohighlight\">\\(B(\\infty)\\)</span>", "Tensor Products of Crystals", "Tensor Products of Crystal Elements", "Cyclic sieving phenomenon", "De Bruijn sequences", "Degree sequences", "Derangements", "Descent Algebras", "Combinatorial designs and incidence structures", "Balanced Incomplete Block Designs (BIBD)", "Block designs", "Covering designs: coverings of <span class=\"math notranslate nohighlight\">\\(t\\)</span>-element subsets of a <span class=\"math notranslate nohighlight\">\\(v\\)</span>-set by <span class=\"math notranslate nohighlight\">\\(k\\)</span>-sets", "Database of small combinatorial designs", "Catalog of designs", "Cython functions for combinatorial designs", "Difference families", "Difference Matrices", "Evenly distributed sets in finite fields", "External Representations of Block Designs", "Database of generalised quadrangles with spread", "Group-Divisible Designs (GDD)", "Incidence structures (i.e. hypergraphs, i.e. set systems)", "Mutually Orthogonal Latin Squares (MOLS)", "Orthogonal arrays (OA)", "Orthogonal arrays (build recursive constructions)", "Orthogonal arrays (find recursive constructions)", "Resolvable Balanced Incomplete Block Design (RBIBD)", "Steiner Quadruple Systems", "Hypergraph isomorphic copy search", "Two-graphs", "Combinatorial diagrams", "Diagram and Partition Algebras", "Exact Cover Problem via Dancing Links", "Dyck Words", "Substitutions over unit cube faces (Rauzy fractals)", "Enumerated sets and combinatorial objects", "Tools for enumeration modulo the action of a permutation group", "Compute Bell and Uppuluri-Carpenter numbers", "Families", "Brent Yorgey\u2019s fast algorithm for integer vector (multiset) partitions.", "Finite state machines, automata, transducers", "Common Automata and Transducers (Finite State Machines Generators)", "Free Quasi-symmetric functions", "Free Dendriform Algebras", "Free modules", "Free Pre-Lie Algebras", "Fully commutative elements of Coxeter groups", "Fully packed loops", "Gelfand-Tsetlin Patterns", "Paths in Directed Acyclic Graphs", "Gray codes", "Grossman-Larson Hopf Algebras", "Growth diagrams and dual graded graphs", "Hall Polynomials", "The Hillman-Grassl correspondence", "Enumerated set of lists of integers with constraints: base classes", "Enumerated set of lists of integers with constraints, in inverse lexicographic order", "Enumerated set of lists of integers with constraints: front-end", "Counting, generating, and manipulating non-negative integer matrices", "(Non-negative) Integer vectors", "Weighted Integer Vectors", "Integer vectors modulo the action of a permutation group", "Tamari Interval-posets", "<span class=\"math notranslate nohighlight\">\\(k\\)</span>-regular Sequences", "Strong and weak tableaux", "Kazhdan-Lusztig Polynomials", "Knutson-Tao Puzzles", "Combinatorics on matrices", "Dancing Links internal pyx code", "Dancing links C++ wrapper", "Hadamard matrices", "Latin Squares", "Miscellaneous", "Ordered Multiset Partitions into Sets and the Minimaj Crystal", "Non-commutative symmetric functions and quasi-symmetric functions", "Common combinatorial tools", "Generic code for bases", "Non-Commutative Symmetric Functions", "Quasisymmetric functions", "Introduction to Quasisymmetric Functions", "Symmetric functions in non-commuting variables", "Bases for <span class=\"math notranslate nohighlight\">\\(NCSym\\)</span>", "Dual Symmetric Functions in Non-Commuting Variables", "Symmetric Functions in Non-Commuting Variables", "Necklaces", "Non-Decreasing Parking Functions", "<span class=\"math notranslate nohighlight\">\\(\\nu\\)</span>-Dyck Words", "<span class=\"math notranslate nohighlight\">\\(\\nu\\)</span>-Tamari lattice", "Ordered Rooted Trees", "Output functions", "Parallelogram Polyominoes", "Parking Functions", "Integer partitions", "Partition/Diagram Algebras", "Kleshchev partitions", "Partition Shifting Algebras", "Partition tuples", "Iterators over the partitions of an integer", "Catalog of Path Tableaux", "Dyck Paths", "Frieze Patterns", "Path Tableaux", "Semistandard Tableaux", "Perfect matchings", "Permutations", "Permutations (Cython file)", "Plane Partitions", "Posets", "Cartesian products of Posets", "D-Complete Posets", "Elements of posets, lattices, semilattices, etc.", "Forest Posets", "Hasse diagrams of posets", "Incidence Algebras", "Finite lattices and semilattices", "Linear Extensions of Posets", "Mobile posets", "M\u00f6bius Algebras", "Catalog of posets and lattices", "Finite posets", "<span class=\"math notranslate nohighlight\">\\(q\\)</span>-Analogues", "<span class=\"math notranslate nohighlight\">\\(q\\)</span>-Bernoulli Numbers and Polynomials", "Combinatorics quickref", "Rankers", "Recognizable Series", "Restricted growth arrays", "Ribbons", "Ribbon Shaped Tableaux", "Ribbon Tableaux", "Rigged configurations", "Abstract classes for the rigged configuration bijections", "Bijection between rigged configurations for <span class=\"math notranslate nohighlight\">\\(B(\\infty)\\)</span> and marginally large tableaux", "Bijection classes for type <span class=\"math notranslate nohighlight\">\\(A_n^{(1)}\\)</span>", "Bijection classes for type <span class=\"math notranslate nohighlight\">\\(A_{2n}^{(2)\\dagger}\\)</span>", "Bijection classes for type <span class=\"math notranslate nohighlight\">\\(A_{2n}^{(2)}\\)</span>", "Bijection classes for type <span class=\"math notranslate nohighlight\">\\(A_{2n-1}^{(2)}\\)</span>.", "Bijection classes for type <span class=\"math notranslate nohighlight\">\\(B_n^{(1)}\\)</span>", "Bijection classes for type <span class=\"math notranslate nohighlight\">\\(C_n^{(1)}\\)</span>", "Bijection classes for type <span class=\"math notranslate nohighlight\">\\(D_n^{(1)}\\)</span>", "Bijection classes for type <span class=\"math notranslate nohighlight\">\\(D_4^{(3)}\\)</span>", "Bijection classes for type <span class=\"math notranslate nohighlight\">\\(D_{n+1}^{(2)}\\)</span>", "Bijection between rigged configurations and KR tableaux", "Kleber Trees", "Kirillov-Reshetikhin Tableaux", "Crystal of Rigged Configurations", "Rigged Configurations of <span class=\"math notranslate nohighlight\">\\(\\mathcal{B}(\\infty)\\)</span>", "Rigged Configuration Elements", "Rigged Configurations", "Rigged Partitions", "Tensor Product of Kirillov-Reshetikhin Tableaux", "Tensor Product of Kirillov-Reshetikhin Tableaux Elements", "Root Systems", "Ambient lattices and ambient spaces", "Associahedron", "Braid Move Calculator", "Braid Orbit", "Branching Rules", "Cartan matrices", "Cartan types", "Coxeter Groups", "Coxeter Matrices", "Coxeter Types", "Dynkin diagrams", "Extended Affine Weyl Groups", "Fundamental Group of an Extended Affine Weyl Group", "Hecke algebra representations", "Integrable Representations of Affine Lie Algebras", "Nonsymmetric Macdonald polynomials", "Pieri Factors", "Tutorial: visualizing root systems", "Finite complex reflection groups", "Finite real reflection groups", "Group algebras of root lattice realizations", "Root lattice realizations", "Root lattices and root spaces", "Root systems", "Root system data for type A", "Root system data for (untwisted) type A affine", "Root system data for type A infinity", "Root system data for type B", "Root system data for type BC affine", "Root system data for (untwisted) type B affine", "Root system data for type C", "Root system data for (untwisted) type C affine", "Root system data for type D", "Root system data for (untwisted) type D affine", "Root system data for type E", "Root system data for (untwisted) type E affine", "Root system data for type F", "Root system data for (untwisted) type F affine", "Root system data for type G", "Root system data for (untwisted) type G affine", "Root system data for type H", "Root system data for type I", "Root system data for type Q", "Root system data for affine Cartan types", "Root system data for dual Cartan types", "Root system data for folded Cartan types", "Root system data for Cartan types with marked nodes", "Root system data for reducible Cartan types", "Root system data for relabelled Cartan types", "Root system data for super type A", "Weight lattice realizations", "Weight lattices and weight spaces", "Weyl Character Rings", "Weyl Groups", "Rooted (Unordered) Trees", "Robinson-Schensted-Knuth correspondence", "Schubert Polynomials", "Set Partitions", "Ordered Set Partitions", "Symmetric Functions", "Characters of the symmetric group as bases of the symmetric functions", "Classical symmetric functions", "Generic dual bases symmetric functions", "Elementary symmetric functions", "Hall-Littlewood Polynomials", "Hecke Character Basis", "Homogeneous symmetric functions", "Jack Symmetric Functions", "Quotient of symmetric function space by ideal generated by Hall-Littlewood symmetric functions", "Kostka-Foulkes Polynomials", "LLT symmetric functions", "Macdonald Polynomials", "Monomial symmetric functions", "Multiplicative symmetric functions", "<span class=\"math notranslate nohighlight\">\\(k\\)</span>-Schur Functions", "Non-symmetric Macdonald Polynomials", "Orthogonal Symmetric Functions", "Symmetric functions defined by orthogonality and triangularity", "Power sum symmetric functions", "Schur symmetric functions", "Symmetric functions, with their multiple realizations", "Symmetric Functions", "Symplectic Symmetric Functions", "Witt symmetric functions", "Shard intersection order", "Shifted primed tableaux", "Shuffle product of iterables", "Sidon sets and their generalizations, Sidon <span class=\"math notranslate nohighlight\">\\(g\\)</span>-sets", "Similarity class types of matrices with entries in a finite field", "sine-Gordon Y-system plotter", "Six Vertex Model", "Skew Partitions", "Skew Tableaux", "Functions that compute some of the sequences in Sloane\u2019s tables", "Combinatorial species", "Characteristic Species", "Composition species", "Cycle Species", "Empty Species", "Functorial composition species", "Generating Series", "Examples of Combinatorial Species", "Linear-order Species", "Miscellaneous Functions", "Partition Species", "Permutation species", "Product species", "Recursive Species", "Set Species", "Combinatorial Species", "Species structures", "Subset Species", "Sum species", "Subsets", "Subsets satisfying a hereditary property", "Subsets whose elements satisfy a predicate pairwise", "Subwords", "Subword complex", "Super Tableaux", "Super Partitions", "Symmetric Group Algebra", "Representations of the Symmetric Group", "T-sequences", "Tableaux", "Residue sequences of tableaux", "TableauTuples", "Generalized Tamari lattices", "Tiling Solver", "Transitive ideal closure tool", "Combinatorial triangles for posets and fans", "Tuples", "Introduction to combinatorics in Sage", "Vector Partitions", "Combinatorics on words", "Abstract word (finite or infinite)", "Alphabet", "Finite word", "Infinite word", "Lyndon words", "Word morphisms/substitutions", "Word paths", "Shuffle product of words", "Suffix Tries and Suffix Trees", "Word classes", "Fast word datatype using an array of unsigned char", "Datatypes for finite words", "Common words", "Datatypes for words defined by iterators and callables", "User-customizable options for words", "Set of words", "Yang-Baxter Graphs", "C-Finite Sequences"], "terms": {"quickref": [0, 1, 5], "introduct": [0, 1, 5, 39, 128, 129, 140, 144, 146, 217, 224, 270, 277, 298, 318, 345], "sage": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "algebra": [0, 1, 5, 7, 16, 18, 19, 20, 21, 22, 23, 37, 45, 55, 56, 64, 65, 66, 68, 101, 106, 108, 110, 119, 128, 139, 141, 142, 143, 144, 147, 148, 149, 158, 160, 162, 169, 170, 173, 180, 185, 188, 208, 209, 213, 215, 217, 218, 222, 224, 229, 233, 235, 236, 239, 241, 268, 270, 272, 273, 274, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 306, 311, 327, 331, 342, 343, 349, 356, 357, 364], "combinatori": [0, 1, 3, 5, 6, 8, 10, 15, 18, 21, 27, 29, 34, 45, 57, 65, 69, 70, 75, 77, 81, 88, 89, 90, 91, 99, 110, 111, 114, 115, 117, 122, 125, 128, 130, 137, 144, 145, 148, 151, 157, 158, 159, 162, 169, 170, 183, 184, 188, 191, 208, 213, 233, 234, 235, 238, 276, 288, 293, 299, 301, 302, 303, 306, 318, 325, 331, 337, 343, 354, 355, 356, 358, 361, 367], "hopf": [0, 1, 5, 16, 108, 111, 139, 142, 143, 144, 147, 148, 149, 188, 273, 280, 281, 284, 286, 294, 296, 297, 298, 299, 300, 301, 338], "cluster": [0, 1, 4, 5, 18, 19, 20, 21, 22, 219, 239], "quiver": [0, 1, 4, 5, 18, 19, 342], "crystal": [0, 1, 4, 5, 38, 58, 63, 64, 160, 162, 167, 188, 195, 196, 197, 198, 202, 204, 206, 208, 209, 211, 212, 213, 215, 216, 217, 224, 228, 233, 235, 239, 263, 270, 273, 303, 341, 343], "root": [0, 1, 2, 3, 4, 5, 7, 9, 10, 18, 22, 23, 24, 33, 37, 38, 39, 45, 46, 47, 48, 50, 53, 54, 56, 58, 59, 60, 61, 62, 67, 81, 84, 89, 101, 106, 109, 111, 117, 118, 127, 128, 156, 157, 158, 162, 170, 175, 186, 188, 196, 208, 210, 211, 213, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 236, 237, 268, 269, 270, 271, 292, 296, 298, 299, 311, 318, 333, 335, 342, 349, 357, 360, 368, 369], "system": [0, 1, 4, 5, 21, 38, 39, 46, 47, 56, 58, 60, 61, 67, 74, 75, 76, 79, 92, 95, 102, 106, 112, 114, 118, 119, 127, 134, 156, 158, 188, 210, 211, 218, 222, 223, 224, 226, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 268, 269, 270, 271, 308, 327, 331, 335, 345, 346, 349], "symmetr": [0, 1, 3, 5, 10, 14, 15, 18, 22, 24, 25, 32, 33, 49, 68, 73, 75, 78, 90, 97, 99, 111, 118, 124, 127, 128, 136, 141, 142, 144, 147, 154, 158, 160, 161, 162, 169, 170, 172, 184, 185, 186, 188, 222, 223, 224, 226, 228, 229, 233, 234, 235, 238, 239, 240, 241, 267, 268, 270, 271, 274, 282, 283, 289, 292, 310, 311, 313, 318, 320, 326, 327, 333, 337, 340, 341, 342, 343, 354, 357], "function": [0, 1, 2, 3, 5, 6, 7, 9, 10, 14, 15, 18, 19, 21, 23, 28, 34, 35, 45, 48, 55, 57, 58, 63, 65, 69, 70, 71, 73, 74, 79, 87, 94, 95, 97, 99, 100, 101, 102, 105, 110, 112, 113, 114, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 136, 137, 138, 141, 142, 147, 150, 152, 153, 156, 158, 161, 162, 167, 169, 170, 171, 174, 178, 179, 180, 183, 184, 186, 187, 188, 189, 194, 196, 207, 213, 219, 221, 222, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 282, 283, 289, 304, 305, 306, 308, 310, 312, 318, 327, 332, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 350, 351, 352, 355, 357, 358, 360, 361, 362, 364, 366, 368, 369], "fullycommutativeel": [0, 5, 112], "count": [0, 1, 2, 5, 10, 22, 24, 25, 29, 38, 45, 50, 53, 70, 71, 72, 75, 83, 91, 97, 99, 101, 106, 107, 112, 118, 119, 122, 128, 134, 139, 150, 158, 169, 170, 181, 182, 184, 190, 234, 273, 275, 303, 306, 310, 311, 318, 319, 327, 331, 341, 343, 345, 349, 352, 354, 355, 356, 359, 360, 361, 362, 363, 365], "enumer": [0, 1, 5, 6, 7, 8, 10, 25, 28, 29, 45, 70, 71, 89, 94, 99, 106, 110, 112, 118, 127, 128, 149, 154, 156, 162, 171, 178, 180, 184, 185, 186, 189, 190, 225, 239, 272, 299, 305, 312, 327, 333, 334, 341, 343, 348, 350, 354, 362, 364], "set": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 40, 41, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 125, 126, 127, 128, 129, 130, 132, 134, 136, 137, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 162, 165, 166, 169, 170, 174, 178, 180, 181, 183, 184, 185, 186, 189, 190, 191, 193, 196, 208, 209, 212, 213, 214, 215, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 260, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 284, 286, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 309, 310, 312, 313, 318, 319, 322, 325, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 368], "object": [0, 1, 2, 5, 7, 10, 12, 15, 16, 18, 21, 22, 25, 27, 28, 29, 31, 38, 45, 47, 61, 63, 67, 68, 69, 70, 71, 73, 75, 77, 78, 82, 83, 84, 85, 86, 87, 89, 92, 93, 94, 97, 98, 99, 100, 106, 107, 108, 110, 112, 113, 115, 118, 119, 121, 122, 124, 128, 129, 130, 132, 134, 137, 138, 139, 141, 142, 143, 144, 147, 152, 154, 156, 158, 160, 163, 164, 165, 166, 167, 169, 170, 171, 172, 176, 178, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 196, 208, 209, 212, 213, 214, 219, 220, 224, 229, 231, 234, 238, 239, 241, 265, 268, 269, 272, 273, 275, 276, 286, 292, 298, 299, 307, 310, 311, 328, 335, 337, 341, 343, 345, 349, 353, 354, 357, 358, 360, 361, 363, 364, 367, 368, 369], "partit": [0, 1, 3, 4, 5, 6, 10, 11, 16, 25, 26, 29, 31, 32, 33, 36, 40, 50, 52, 55, 67, 68, 73, 78, 80, 81, 86, 87, 88, 89, 90, 92, 96, 99, 110, 113, 114, 118, 119, 120, 122, 123, 125, 130, 137, 142, 143, 144, 145, 147, 148, 149, 155, 168, 169, 170, 175, 178, 180, 181, 184, 185, 186, 188, 191, 193, 194, 195, 204, 212, 213, 238, 239, 273, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 310, 311, 312, 336, 338, 339, 341, 342, 343, 354, 357, 363, 368], "tableaux": [0, 1, 3, 4, 5, 6, 10, 14, 35, 36, 38, 40, 41, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 57, 58, 59, 66, 67, 68, 96, 99, 114, 118, 120, 132, 139, 141, 143, 144, 155, 158, 162, 165, 170, 172, 184, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 213, 214, 224, 235, 239, 273, 288, 289, 297, 311, 338, 343, 349], "finit": [0, 1, 3, 5, 6, 9, 10, 12, 16, 18, 21, 22, 23, 24, 25, 34, 37, 38, 45, 51, 55, 56, 58, 63, 64, 67, 69, 73, 74, 75, 76, 81, 82, 90, 100, 101, 109, 110, 111, 112, 114, 117, 118, 120, 121, 122, 127, 128, 129, 143, 144, 145, 149, 153, 154, 156, 158, 160, 161, 162, 170, 173, 178, 179, 181, 183, 184, 186, 188, 189, 190, 208, 210, 211, 218, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 244, 245, 248, 250, 252, 254, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 290, 293, 298, 299, 302, 305, 309, 310, 331, 333, 335, 338, 341, 343, 344, 350, 351, 357, 358, 360, 361, 364, 365, 367, 368], "state": [0, 1, 2, 5, 10, 56, 64, 66, 81, 122, 136, 149, 158, 170, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 223, 270, 273, 289, 302, 306, 311, 338, 349, 360], "machin": [0, 1, 5, 25, 103], "automata": [0, 1, 5, 357], "transduc": [0, 1, 5], "speci": [0, 1, 5, 101, 188, 318, 321], "design": [0, 1, 5, 29, 50, 81, 82, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 97, 110, 136, 137, 170, 224, 233, 235, 275, 276, 298, 360], "incid": [0, 1, 5, 75, 76, 77, 78, 79, 80, 85, 90, 93, 95, 100, 118, 128, 136, 173, 185, 263, 357], "structur": [0, 1, 2, 5, 7, 10, 16, 29, 37, 38, 47, 50, 52, 54, 55, 56, 59, 60, 61, 62, 64, 67, 76, 77, 78, 79, 80, 84, 85, 93, 94, 95, 102, 108, 117, 119, 121, 127, 128, 132, 142, 143, 144, 145, 147, 149, 154, 156, 160, 170, 178, 185, 208, 209, 210, 211, 213, 214, 215, 224, 230, 235, 265, 272, 273, 275, 278, 294, 296, 298, 299, 300, 303, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 327, 329, 331, 333, 349, 354, 360], "poset": [0, 1, 5, 6, 10, 16, 26, 48, 57, 65, 99, 112, 118, 143, 153, 154, 158, 170, 179, 180, 183, 188, 234, 235, 239, 241, 302, 304, 309, 335, 338, 344, 349], "word": [0, 1, 2, 3, 5, 6, 8, 10, 14, 15, 21, 23, 24, 26, 29, 36, 38, 49, 52, 61, 62, 63, 67, 70, 76, 78, 89, 96, 107, 108, 109, 110, 111, 112, 114, 117, 118, 122, 125, 128, 130, 132, 139, 143, 144, 150, 151, 154, 156, 157, 158, 165, 170, 178, 180, 184, 188, 190, 193, 194, 209, 215, 220, 221, 222, 224, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 246, 262, 264, 266, 268, 270, 271, 273, 275, 276, 293, 299, 303, 304, 309, 310, 331, 334, 335, 338, 341, 343, 349, 353, 360], "output": [0, 1, 2, 3, 5, 8, 9, 10, 15, 16, 18, 21, 25, 28, 29, 31, 32, 33, 38, 50, 52, 55, 57, 58, 59, 63, 67, 68, 69, 72, 75, 76, 77, 78, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 99, 100, 102, 103, 105, 107, 108, 112, 116, 118, 121, 124, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 141, 142, 143, 144, 147, 148, 149, 152, 153, 154, 156, 157, 158, 160, 162, 169, 170, 171, 172, 174, 178, 180, 184, 185, 186, 187, 189, 190, 208, 209, 212, 213, 214, 216, 222, 224, 226, 229, 231, 234, 235, 236, 239, 240, 241, 267, 270, 271, 272, 273, 274, 275, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 311, 314, 322, 324, 328, 335, 337, 338, 340, 341, 342, 343, 344, 345, 347, 349, 350, 352, 354, 356, 357, 358, 360, 363, 364, 366, 367, 368, 369], "ranker": [0, 1, 5], "map": [0, 1, 5, 6, 10, 15, 16, 24, 25, 27, 29, 32, 33, 35, 41, 45, 50, 52, 55, 58, 64, 73, 81, 85, 87, 92, 97, 99, 100, 106, 107, 108, 109, 110, 111, 113, 117, 119, 120, 125, 129, 134, 137, 139, 142, 143, 144, 147, 149, 152, 154, 158, 161, 166, 170, 171, 178, 184, 185, 204, 209, 212, 215, 216, 218, 222, 224, 229, 231, 233, 235, 238, 239, 240, 261, 263, 268, 269, 270, 273, 275, 286, 290, 292, 296, 298, 299, 301, 304, 309, 311, 335, 338, 339, 340, 341, 343, 345, 349, 354, 357, 358, 359, 360, 364, 367, 368], "miscellan": [0, 1, 5, 25, 180, 185, 222, 270], "code": [0, 1, 2, 3, 5, 25, 26, 28, 29, 50, 58, 63, 71, 76, 78, 82, 83, 87, 89, 90, 94, 97, 99, 100, 101, 105, 107, 111, 112, 117, 118, 128, 129, 132, 133, 136, 137, 139, 140, 147, 155, 156, 157, 158, 170, 171, 178, 185, 190, 196, 233, 235, 236, 238, 241, 261, 262, 268, 269, 286, 292, 307, 318, 321, 327, 335, 338, 339, 341, 343, 345, 349, 354, 358, 361, 364], "theori": [0, 5, 18, 21, 45, 69, 75, 78, 81, 90, 92, 106, 111, 112, 114, 132, 141, 144, 145, 158, 162, 178, 180, 183, 185, 188, 213, 233, 235, 238, 239, 263, 268, 270, 288, 289, 292, 296, 298, 299, 300, 301, 318, 338, 341, 342, 343, 349, 357, 358, 364], "discret": [0, 5, 38, 78, 89, 92, 99, 106, 185, 186, 188, 239, 302, 338, 358, 364], "dynam": [0, 5, 28, 170, 311, 364], "graph": [0, 1, 2, 4, 5, 7, 10, 13, 18, 21, 22, 26, 32, 38, 45, 47, 48, 50, 57, 58, 65, 71, 74, 75, 76, 78, 85, 87, 94, 97, 99, 106, 127, 128, 136, 137, 151, 154, 158, 159, 162, 167, 169, 170, 171, 177, 178, 180, 181, 185, 188, 196, 202, 204, 206, 208, 212, 219, 223, 224, 225, 226, 227, 228, 233, 240, 258, 259, 265, 266, 271, 302, 309, 318, 319, 327, 332, 335, 339, 346, 360, 364], "search": [0, 1, 7, 8, 10, 18, 38, 45, 50, 74, 81, 98, 106, 118, 122, 128, 134, 170, 178, 180, 185, 237, 271, 311, 333, 345, 352, 354, 363], "page": [0, 21, 75, 76, 78, 88, 89, 92, 118, 128, 132, 136, 156, 158, 178, 213, 235, 285, 298, 299, 310, 341, 349, 357, 358], "thi": [1, 2, 3, 6, 7, 8, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 35, 36, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 252, 254, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369], "i": [1, 2, 3, 6, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 196, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 254, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "current": [1, 2, 10, 16, 18, 21, 26, 29, 38, 41, 43, 44, 45, 53, 56, 58, 64, 67, 71, 73, 84, 96, 97, 99, 106, 107, 110, 121, 122, 123, 128, 130, 132, 134, 136, 137, 143, 144, 145, 152, 156, 158, 162, 164, 170, 184, 185, 189, 193, 194, 204, 208, 209, 210, 211, 213, 215, 218, 224, 229, 231, 233, 234, 235, 236, 238, 239, 261, 262, 268, 269, 270, 275, 299, 303, 309, 310, 328, 333, 337, 338, 341, 343, 345, 360, 362], "sort": [1, 3, 10, 11, 15, 16, 18, 21, 23, 25, 29, 31, 32, 38, 47, 51, 54, 55, 58, 59, 69, 73, 75, 81, 86, 87, 94, 97, 99, 100, 102, 106, 107, 110, 112, 116, 122, 127, 132, 134, 139, 141, 142, 143, 144, 145, 149, 154, 156, 157, 158, 159, 160, 161, 167, 169, 170, 178, 180, 181, 182, 184, 185, 208, 219, 221, 223, 224, 227, 228, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 270, 272, 273, 275, 276, 281, 287, 296, 297, 298, 299, 301, 304, 305, 306, 309, 321, 327, 331, 332, 335, 337, 338, 341, 343, 345, 348, 350, 354, 357, 358, 359, 360, 368], "alphabet": [1, 16, 26, 53, 70, 99, 100, 106, 107, 108, 111, 117, 132, 139, 143, 144, 145, 147, 149, 152, 165, 170, 190, 238, 273, 276, 280, 281, 282, 284, 290, 296, 297, 299, 303, 304, 336, 341, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 367], "order": [1, 2, 3, 10, 11, 16, 18, 21, 23, 24, 25, 27, 28, 29, 31, 33, 38, 40, 53, 55, 59, 61, 67, 69, 71, 73, 75, 76, 77, 78, 80, 81, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 99, 101, 102, 105, 106, 107, 108, 110, 112, 113, 114, 118, 120, 121, 125, 126, 127, 128, 129, 130, 132, 136, 137, 141, 142, 144, 147, 149, 151, 156, 157, 158, 160, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 179, 180, 181, 183, 184, 185, 190, 212, 215, 222, 224, 229, 231, 232, 234, 235, 236, 237, 238, 239, 241, 252, 254, 263, 268, 270, 271, 272, 273, 275, 280, 281, 284, 287, 290, 296, 297, 298, 299, 301, 303, 306, 309, 310, 311, 312, 313, 318, 325, 326, 327, 328, 331, 333, 335, 337, 338, 339, 341, 343, 344, 348, 349, 350, 352, 353, 354, 357, 358, 360, 362, 367], "w": [1, 3, 10, 15, 16, 18, 21, 23, 24, 33, 36, 49, 55, 57, 58, 60, 61, 63, 68, 70, 78, 87, 89, 95, 96, 99, 106, 107, 108, 109, 111, 112, 118, 122, 126, 127, 129, 130, 131, 136, 139, 142, 144, 147, 148, 149, 156, 158, 165, 170, 178, 180, 184, 185, 190, 208, 209, 220, 222, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 252, 268, 269, 270, 271, 273, 274, 275, 276, 298, 299, 301, 304, 310, 334, 335, 338, 340, 341, 343, 345, 347, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "r": [1, 9, 10, 11, 15, 16, 25, 27, 29, 38, 42, 47, 55, 56, 57, 58, 60, 61, 67, 72, 73, 75, 76, 77, 78, 80, 81, 82, 87, 88, 89, 90, 91, 92, 95, 97, 98, 99, 106, 107, 108, 109, 110, 111, 117, 118, 119, 122, 125, 128, 129, 130, 131, 132, 137, 141, 142, 143, 144, 145, 147, 148, 149, 157, 158, 159, 160, 161, 162, 166, 168, 170, 178, 179, 180, 183, 184, 185, 186, 189, 191, 194, 208, 209, 212, 213, 215, 216, 218, 222, 223, 224, 226, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 241, 242, 246, 252, 261, 262, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 278, 281, 282, 283, 284, 285, 286, 289, 290, 293, 296, 297, 298, 299, 301, 302, 303, 304, 307, 309, 310, 311, 318, 331, 335, 337, 338, 341, 342, 343, 345, 349, 353, 354, 358, 360, 364, 369], "t": [1, 2, 6, 9, 10, 12, 15, 16, 18, 21, 22, 24, 25, 31, 35, 36, 38, 40, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 66, 67, 68, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 122, 125, 128, 129, 130, 132, 136, 137, 138, 139, 143, 144, 145, 154, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 170, 171, 174, 178, 180, 184, 185, 186, 190, 193, 194, 197, 202, 209, 210, 212, 213, 214, 215, 216, 217, 222, 224, 226, 227, 228, 229, 230, 231, 233, 235, 236, 238, 239, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 318, 324, 327, 330, 331, 336, 338, 341, 342, 343, 345, 346, 348, 349, 352, 353, 354, 355, 357, 358, 360, 364], "name": [1, 10, 16, 18, 21, 22, 25, 28, 55, 77, 84, 87, 92, 94, 95, 96, 97, 99, 100, 106, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 125, 128, 132, 136, 137, 138, 142, 143, 144, 145, 147, 154, 156, 158, 159, 170, 178, 180, 183, 185, 212, 222, 224, 226, 231, 233, 234, 238, 239, 261, 267, 268, 271, 272, 273, 274, 275, 276, 280, 281, 282, 295, 296, 297, 298, 299, 301, 328, 333, 337, 338, 341, 349, 353, 354, 357, 367, 369], "It": [1, 2, 6, 7, 10, 15, 16, 18, 21, 22, 25, 26, 27, 29, 45, 48, 55, 58, 59, 65, 66, 67, 71, 73, 75, 76, 77, 78, 81, 83, 87, 90, 92, 93, 94, 95, 96, 97, 99, 100, 102, 105, 106, 107, 108, 112, 117, 118, 120, 122, 128, 130, 132, 134, 136, 139, 143, 144, 145, 147, 149, 151, 154, 158, 160, 165, 166, 167, 169, 170, 174, 175, 178, 180, 185, 208, 222, 223, 224, 226, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 254, 261, 262, 264, 266, 268, 270, 272, 273, 278, 280, 281, 284, 289, 290, 292, 296, 297, 298, 299, 301, 306, 309, 310, 311, 313, 316, 332, 334, 335, 338, 341, 343, 345, 349, 352, 354, 357, 358, 359, 360, 361, 364, 367, 369], "can": [1, 2, 3, 6, 7, 9, 10, 11, 12, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 32, 33, 35, 36, 38, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 125, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 168, 169, 170, 173, 174, 175, 178, 180, 181, 184, 185, 186, 187, 190, 194, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 256, 261, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 284, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 318, 325, 327, 328, 331, 332, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 357, 358, 360, 361, 363, 364, 367, 368, 369], "updat": [1, 18, 71, 79, 83, 122, 125, 156, 204, 214, 273, 311, 341], "semi": [1, 21, 129, 130, 141, 169, 170, 185, 190, 273, 310, 311, 316, 338, 341, 349], "automat": [1, 18, 25, 75, 80, 86, 87, 90, 96, 97, 106, 112, 125, 156, 160, 169, 186, 190, 224, 231, 272, 298, 311, 332, 349, 357, 358, 363], "run": [1, 2, 3, 10, 16, 18, 25, 29, 32, 38, 48, 51, 53, 59, 67, 68, 71, 72, 83, 96, 99, 103, 106, 127, 131, 143, 144, 145, 159, 166, 170, 175, 178, 180, 184, 185, 191, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 213, 230, 232, 233, 236, 238, 239, 241, 242, 261, 262, 264, 266, 271, 274, 280, 282, 285, 286, 291, 292, 299, 301, 302, 338, 349, 352, 354, 359, 360, 361, 364], "src": [1, 273], "combinat": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "find": [1, 3, 9, 25, 38, 58, 71, 74, 82, 90, 98, 99, 112, 122, 130, 134, 137, 151, 152, 157, 158, 178, 184, 185, 212, 222, 223, 232, 273, 299, 349, 354, 363, 364], "py": [1, 76, 84, 87, 106, 156, 196, 236, 282, 343, 349], "sed": 1, "": [1, 2, 3, 6, 9, 10, 11, 15, 18, 20, 21, 22, 24, 25, 27, 29, 32, 34, 35, 36, 37, 45, 47, 49, 50, 51, 54, 55, 56, 57, 58, 59, 61, 62, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 169, 170, 171, 174, 178, 180, 181, 184, 185, 186, 187, 188, 190, 194, 202, 208, 209, 212, 213, 215, 216, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 343, 346, 348, 349, 350, 353, 354, 357, 358, 359, 360, 363, 364, 365, 369], "pyx": [1, 133, 171], "lang": [1, 185], "en_u": 1, "utf": 1, "8": [1, 2, 3, 6, 7, 9, 10, 15, 18, 20, 21, 22, 24, 25, 29, 33, 38, 45, 47, 48, 50, 53, 55, 57, 58, 59, 60, 63, 65, 67, 69, 70, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 105, 106, 107, 108, 112, 113, 114, 118, 122, 126, 128, 129, 130, 134, 136, 137, 139, 141, 143, 144, 148, 149, 152, 155, 156, 157, 158, 159, 162, 166, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 208, 209, 210, 213, 222, 223, 224, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 239, 241, 242, 245, 246, 248, 250, 252, 253, 261, 264, 265, 267, 270, 271, 273, 275, 276, 281, 282, 284, 285, 286, 289, 290, 293, 296, 297, 299, 302, 305, 306, 309, 310, 311, 318, 319, 322, 324, 331, 333, 334, 335, 337, 338, 340, 341, 342, 343, 345, 346, 347, 349, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 369], "lc_collat": 1, "c": [1, 2, 3, 9, 10, 12, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 67, 68, 70, 72, 73, 75, 76, 77, 79, 81, 86, 87, 89, 90, 91, 92, 94, 96, 98, 99, 101, 103, 106, 110, 111, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 143, 144, 145, 148, 149, 152, 155, 158, 160, 162, 165, 169, 170, 171, 172, 174, 178, 180, 183, 184, 185, 186, 189, 190, 208, 209, 210, 211, 212, 213, 215, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 261, 262, 263, 265, 268, 269, 270, 271, 272, 274, 275, 276, 278, 285, 294, 296, 297, 298, 299, 300, 303, 304, 306, 310, 311, 313, 314, 315, 317, 318, 320, 322, 323, 324, 326, 327, 328, 329, 330, 334, 335, 338, 340, 341, 342, 343, 345, 347, 348, 349, 353, 354, 357, 358, 360, 361, 363, 364, 367], "tmp": [1, 94], "module_list": 1, "rst": [1, 193, 343, 367], "copi": [1, 2, 10, 18, 25, 32, 57, 74, 75, 86, 87, 95, 100, 107, 120, 122, 130, 132, 134, 171, 184, 185, 224, 226, 227, 236, 267, 293, 311, 341, 345, 357, 361, 366, 368], "past": [1, 6, 185, 270], "result": [1, 2, 6, 10, 11, 16, 18, 20, 21, 25, 26, 29, 31, 32, 35, 47, 50, 55, 58, 67, 68, 71, 72, 75, 76, 78, 81, 82, 83, 88, 89, 90, 97, 99, 100, 103, 106, 107, 108, 109, 111, 112, 113, 117, 118, 120, 127, 128, 129, 130, 131, 136, 137, 139, 142, 143, 144, 145, 147, 149, 154, 158, 159, 160, 161, 170, 171, 174, 178, 180, 181, 184, 185, 186, 190, 202, 209, 211, 212, 213, 216, 222, 228, 232, 233, 235, 236, 238, 239, 240, 263, 268, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 285, 287, 290, 292, 296, 297, 298, 299, 301, 306, 309, 310, 314, 317, 324, 330, 331, 337, 338, 339, 340, 341, 343, 349, 352, 354, 357, 360, 364, 369], "back": [1, 6, 10, 16, 55, 62, 81, 84, 97, 108, 119, 121, 122, 123, 137, 143, 144, 148, 157, 158, 185, 209, 212, 235, 238, 268, 272, 274, 280, 282, 288, 289, 292, 295, 298, 299, 341, 343, 347, 354, 363], "see": [1, 2, 3, 6, 7, 8, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 33, 35, 36, 38, 42, 45, 46, 47, 50, 53, 55, 57, 58, 61, 62, 65, 66, 70, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 123, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 141, 142, 143, 144, 145, 148, 152, 153, 154, 156, 157, 158, 160, 161, 162, 164, 169, 170, 172, 173, 174, 175, 178, 180, 181, 182, 184, 185, 186, 189, 190, 208, 209, 212, 213, 214, 215, 216, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 261, 263, 265, 268, 269, 270, 272, 273, 274, 275, 276, 281, 282, 284, 286, 289, 290, 292, 296, 297, 298, 299, 301, 304, 306, 307, 308, 309, 310, 311, 331, 332, 337, 338, 340, 341, 342, 343, 344, 346, 349, 351, 352, 354, 356, 357, 358, 361, 363, 364, 366, 369], "trac": [1, 12, 18, 20, 21, 22, 25, 38, 67, 75, 76, 87, 97, 106, 107, 118, 122, 125, 126, 157, 158, 159, 170, 185, 186, 189, 208, 235, 236, 266, 271, 275, 276, 279, 299, 338, 341, 354, 357, 364, 367], "ticket": [1, 12, 18, 20, 21, 22, 25, 38, 67, 75, 76, 87, 97, 106, 107, 118, 122, 125, 126, 157, 158, 159, 170, 185, 186, 189, 208, 235, 236, 266, 271, 275, 276, 279, 282, 299, 338, 341, 357, 364, 367], "17421": 1, "desir": [1, 10, 18, 97, 118, 122, 136, 185, 224, 234, 235, 239, 338, 349, 357, 364, 367], "improv": [1, 25, 81, 83, 97, 106, 107, 118, 121, 122, 185, 208, 235, 236, 269, 331, 334, 335, 354, 357, 367], "abstract": [1, 15, 16, 29, 35, 41, 47, 55, 57, 67, 78, 84, 97, 99, 101, 108, 123, 130, 132, 143, 147, 160, 162, 165, 167, 168, 170, 183, 185, 195, 218, 224, 227, 229, 234, 265, 286, 298, 299, 304, 328, 346, 351, 367], "recurs": [1, 10, 16, 18, 24, 25, 45, 66, 67, 71, 74, 81, 89, 96, 97, 98, 99, 101, 103, 107, 112, 119, 120, 124, 129, 130, 136, 139, 143, 144, 154, 158, 160, 178, 185, 208, 229, 231, 233, 235, 239, 268, 270, 272, 273, 292, 293, 301, 306, 312, 328, 333, 341, 343, 349, 352, 354, 364], "tree": [1, 7, 8, 45, 84, 99, 102, 109, 111, 117, 118, 122, 127, 128, 156, 170, 178, 185, 195, 213, 311, 312, 318, 319, 327, 333, 351, 354], "affin": [1, 18, 21, 22, 33, 38, 50, 51, 55, 57, 58, 76, 83, 90, 101, 112, 118, 130, 158, 160, 162, 170, 194, 208, 209, 210, 211, 212, 213, 215, 216, 217, 222, 223, 224, 226, 227, 228, 231, 233, 234, 238, 239, 241, 244, 245, 248, 250, 252, 254, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 286, 288, 292, 298, 300, 342, 343], "permut": [1, 2, 6, 10, 12, 15, 16, 18, 25, 28, 32, 36, 52, 72, 73, 78, 87, 90, 94, 96, 97, 99, 108, 118, 128, 130, 137, 139, 142, 143, 144, 157, 158, 159, 162, 181, 184, 185, 188, 193, 194, 225, 229, 230, 234, 235, 236, 237, 241, 268, 271, 273, 274, 275, 276, 278, 281, 286, 293, 296, 297, 298, 299, 301, 302, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 324, 326, 327, 329, 330, 334, 335, 337, 338, 339, 341, 343, 349, 354, 359, 368], "combinator": [1, 25, 39, 90, 99, 141, 145, 149, 157, 162, 169, 183, 185, 194, 209, 213, 215, 217, 233, 238, 239, 268, 270, 273, 292, 298, 318, 343, 357, 358, 364], "altern": [1, 33, 45, 48, 52, 55, 60, 71, 75, 87, 99, 100, 101, 106, 107, 113, 114, 118, 128, 129, 130, 136, 137, 139, 142, 143, 149, 154, 158, 170, 181, 184, 224, 232, 241, 261, 262, 270, 271, 273, 308, 311, 331, 338, 349, 353], "sign": [1, 16, 18, 24, 25, 26, 29, 50, 65, 99, 101, 106, 113, 118, 121, 122, 128, 130, 136, 143, 158, 160, 170, 184, 229, 231, 233, 235, 238, 241, 252, 254, 270, 281, 296, 297, 299, 301, 308, 311, 337, 338, 339, 341, 342, 349], "matric": [1, 18, 21, 22, 73, 74, 78, 80, 81, 88, 89, 98, 99, 113, 114, 118, 129, 134, 135, 137, 142, 144, 160, 170, 178, 184, 185, 186, 190, 217, 222, 224, 228, 229, 236, 237, 241, 271, 273, 278, 299, 301, 308, 311, 339, 341, 345, 349, 357], "backtrack": [1, 31, 83, 99, 171, 185, 346], "baxter": [1, 4, 10, 101, 339], "binari": [1, 2, 8, 29, 34, 70, 87, 98, 99, 101, 107, 108, 109, 111, 118, 125, 128, 134, 135, 144, 154, 156, 170, 273, 275, 299, 311, 318, 319, 333, 338, 340, 341, 353, 354, 364], "recurr": [1, 18, 25, 34, 107, 129, 170, 186, 231, 311, 349, 354, 369], "sequenc": [1, 2, 3, 8, 10, 13, 16, 18, 21, 25, 29, 34, 38, 45, 50, 56, 60, 64, 65, 81, 99, 101, 107, 110, 112, 118, 119, 120, 123, 125, 128, 130, 136, 137, 139, 143, 144, 151, 152, 157, 158, 160, 161, 165, 166, 168, 170, 180, 185, 188, 189, 190, 194, 208, 212, 213, 224, 229, 231, 232, 239, 272, 273, 275, 276, 281, 287, 296, 297, 299, 301, 304, 306, 307, 309, 310, 327, 335, 337, 341, 343, 344, 349, 352, 354, 357, 362, 364], "blob": [1, 4, 97], "cartesian": [1, 67, 81, 82, 106, 107, 110, 118, 158, 170, 173, 180, 185, 349], "product": [1, 2, 3, 9, 10, 11, 15, 16, 23, 24, 29, 32, 33, 37, 38, 55, 56, 57, 58, 64, 73, 78, 81, 82, 88, 89, 90, 91, 97, 101, 106, 107, 108, 109, 110, 111, 116, 117, 119, 129, 132, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 158, 161, 162, 170, 173, 175, 179, 180, 183, 184, 185, 186, 190, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 213, 218, 222, 224, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 261, 265, 267, 268, 269, 270, 271, 272, 274, 275, 280, 281, 282, 285, 286, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 303, 311, 312, 322, 327, 330, 335, 338, 339, 341, 343, 345, 349, 351, 354], "poirier": [1, 14], "reutenau": [1, 14, 108, 144, 149, 181, 289, 299, 301, 364], "standard": [1, 3, 6, 8, 10, 14, 16, 18, 20, 21, 22, 25, 31, 32, 72, 73, 76, 77, 96, 97, 99, 106, 107, 108, 114, 118, 130, 132, 141, 143, 144, 145, 148, 149, 153, 157, 158, 162, 165, 167, 168, 169, 170, 184, 185, 190, 193, 222, 223, 224, 236, 240, 241, 244, 252, 269, 273, 274, 275, 280, 282, 285, 292, 296, 297, 298, 299, 308, 309, 310, 311, 318, 336, 338, 341, 342, 343, 349, 353, 354, 356, 361, 364], "quasi": [1, 14, 15, 78, 80, 89, 142, 143, 144], "clusterse": [1, 17, 20, 21], "mutation_class": [1, 18, 21], "helper": [1, 19, 25, 35, 55, 63, 99, 152, 158, 161, 170, 178, 207, 220], "mutat": [1, 17, 18, 19, 21, 112, 120, 122, 152, 171], "type": [1, 3, 11, 12, 17, 18, 21, 23, 24, 25, 26, 33, 35, 37, 38, 40, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 72, 78, 84, 86, 90, 96, 99, 100, 101, 106, 107, 112, 114, 119, 122, 126, 127, 130, 132, 136, 137, 144, 153, 154, 156, 158, 159, 160, 162, 163, 164, 169, 170, 171, 178, 180, 185, 186, 189, 194, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 268, 269, 270, 271, 272, 273, 283, 293, 296, 299, 300, 302, 303, 307, 308, 309, 311, 317, 318, 327, 328, 335, 337, 338, 340, 342, 343, 344, 349, 352, 353, 354, 357, 358, 360, 361, 362, 364, 369], "complex": [1, 24, 29, 45, 90, 107, 121, 145, 158, 162, 170, 178, 185, 189, 217, 219, 225, 237, 239, 241, 270, 271, 343, 347, 349, 354, 357], "gener": [1, 2, 3, 6, 7, 8, 9, 10, 16, 18, 21, 22, 24, 25, 26, 29, 31, 32, 33, 35, 38, 41, 47, 49, 51, 52, 53, 55, 57, 58, 60, 65, 66, 67, 68, 70, 71, 73, 75, 76, 78, 80, 81, 83, 87, 88, 89, 91, 94, 96, 97, 99, 102, 103, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 125, 127, 129, 130, 132, 136, 137, 138, 140, 143, 144, 148, 150, 151, 153, 154, 156, 157, 158, 160, 161, 162, 163, 167, 168, 170, 171, 173, 178, 179, 180, 181, 184, 185, 186, 189, 196, 208, 209, 211, 212, 213, 215, 216, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 252, 261, 262, 268, 269, 270, 271, 272, 273, 275, 276, 277, 281, 282, 283, 287, 289, 292, 296, 298, 299, 301, 302, 303, 306, 307, 311, 312, 315, 319, 322, 323, 324, 327, 329, 333, 334, 335, 338, 339, 341, 342, 343, 347, 354, 356, 357, 359, 360, 363, 364, 367, 368, 369], "dual": [1, 13, 15, 22, 45, 47, 51, 54, 55, 57, 58, 68, 78, 83, 85, 87, 97, 100, 141, 142, 143, 144, 145, 146, 147, 149, 158, 167, 178, 180, 181, 182, 184, 185, 208, 212, 213, 217, 223, 224, 228, 229, 230, 232, 233, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 273, 277, 282, 285, 286, 289, 297, 298, 299, 335, 339, 341, 343, 347, 357, 364], "associahedron": [1, 128, 239], "color": [1, 45, 50, 87, 96, 99, 100, 106, 113, 118, 128, 132, 152, 154, 156, 158, 172, 181, 184, 185, 224, 235, 239, 272, 275, 307, 308, 335, 345, 354, 357, 358], "fast": [1, 25, 45, 121, 125, 128, 143, 150, 163, 178, 185, 235, 299, 341, 345, 349, 351, 357], "comput": [1, 2, 3, 10, 15, 16, 18, 19, 23, 25, 32, 34, 36, 38, 45, 48, 49, 50, 58, 60, 72, 73, 75, 76, 81, 85, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 102, 105, 106, 107, 108, 110, 112, 118, 119, 120, 121, 122, 124, 125, 128, 130, 132, 134, 135, 137, 139, 142, 143, 144, 145, 147, 148, 149, 150, 158, 160, 161, 163, 169, 170, 178, 180, 181, 185, 187, 190, 194, 208, 209, 212, 213, 220, 221, 222, 224, 227, 231, 232, 233, 234, 235, 236, 238, 239, 241, 252, 254, 262, 263, 268, 270, 272, 274, 275, 280, 281, 283, 284, 286, 289, 290, 292, 296, 297, 298, 299, 301, 303, 306, 309, 310, 318, 332, 335, 338, 339, 341, 342, 345, 346, 349, 352, 354, 357, 358, 360, 361, 364, 368], "cython": [1, 2, 63, 68, 74, 101, 103, 105, 121, 122, 123, 178, 221], "mpz": 1, "combin": [1, 6, 16, 25, 29, 60, 73, 101, 106, 108, 110, 112, 116, 119, 122, 128, 143, 158, 170, 185, 188, 208, 218, 222, 224, 235, 239, 241, 261, 270, 273, 275, 298, 299, 302, 349, 353], "integ": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 15, 16, 18, 21, 22, 25, 31, 32, 33, 34, 35, 36, 38, 48, 50, 53, 55, 57, 58, 59, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 128, 129, 130, 132, 134, 136, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 154, 155, 156, 157, 159, 161, 162, 165, 166, 167, 168, 169, 170, 172, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 208, 213, 214, 218, 221, 222, 223, 224, 225, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 261, 265, 267, 268, 270, 272, 273, 274, 275, 276, 280, 281, 282, 284, 286, 287, 289, 290, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 327, 328, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 350, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369], "composit": [1, 3, 15, 16, 26, 28, 73, 81, 96, 97, 99, 101, 106, 108, 118, 122, 124, 125, 137, 139, 141, 142, 143, 144, 145, 149, 150, 154, 155, 156, 157, 158, 159, 170, 180, 184, 188, 193, 212, 222, 231, 235, 274, 275, 276, 280, 298, 299, 309, 310, 311, 312, 318, 327, 328, 337, 338, 341, 349, 356, 359], "constel": 1, "core": [1, 3, 36, 118, 121, 130, 158, 272, 281, 292, 296, 297, 299, 301, 311, 338], "factor": [1, 3, 9, 10, 12, 18, 21, 49, 54, 55, 58, 60, 67, 75, 90, 91, 93, 99, 107, 110, 112, 122, 128, 129, 130, 139, 144, 158, 169, 185, 186, 209, 212, 213, 214, 215, 216, 222, 224, 229, 233, 261, 263, 265, 273, 284, 289, 290, 296, 297, 298, 299, 309, 310, 311, 324, 334, 338, 349, 352, 357, 360, 361, 364, 367], "A": [1, 2, 3, 6, 7, 8, 9, 10, 11, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 193, 194, 196, 198, 202, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 246, 256, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 318, 322, 324, 328, 330, 331, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 368, 369], "alcov": [1, 51, 224, 229, 232, 233, 239, 268], "path": [1, 2, 10, 18, 21, 22, 45, 48, 51, 53, 55, 57, 61, 65, 99, 101, 106, 109, 113, 118, 120, 121, 122, 128, 152, 153, 154, 156, 157, 158, 168, 170, 184, 208, 209, 213, 239, 240, 272, 298, 341, 344, 346, 351, 354, 357, 360, 364, 368], "benkart": [1, 57, 139], "kang": [1, 53, 57, 228], "kashiwara": [1, 47, 50, 53, 55, 56, 57, 59, 64, 65, 66, 67, 160, 209, 213, 215, 268], "linear": [1, 4, 9, 10, 15, 16, 26, 57, 58, 60, 73, 75, 87, 89, 90, 106, 108, 110, 114, 119, 125, 128, 129, 134, 142, 143, 144, 145, 147, 149, 158, 160, 161, 162, 170, 173, 178, 179, 182, 185, 186, 190, 208, 218, 222, 224, 229, 231, 235, 236, 237, 238, 239, 241, 261, 268, 270, 271, 274, 275, 290, 292, 298, 299, 306, 311, 312, 318, 325, 328, 338, 342, 343, 349, 354, 357, 358, 360, 369], "lie": [1, 4, 22, 39, 45, 56, 57, 68, 97, 99, 117, 158, 213, 217, 218, 222, 224, 229, 235, 236, 239, 241, 252, 254, 268, 270, 272, 292, 293, 299, 342, 356], "superalgebra": [1, 57, 68], "catalog": [1, 4, 74, 101, 118, 173, 273, 351], "Of": [1, 39, 75, 106, 118, 158, 185, 224, 232, 239, 268, 299, 309, 343], "elementari": [1, 41, 53, 61, 64, 66, 67, 81, 97, 137, 142, 143, 145, 149, 158, 170, 270, 277, 280, 284, 291, 296, 297, 298, 299, 301, 306, 346], "model": [1, 6, 36, 40, 41, 45, 51, 53, 55, 57, 58, 62, 64, 65, 73, 100, 101, 106, 113, 118, 123, 127, 129, 132, 160, 161, 166, 178, 185, 197, 209, 211, 213, 215, 233, 241, 279, 298, 307, 314, 317, 324, 328, 330, 331, 341, 343, 349, 358, 360, 368], "For": [1, 2, 3, 8, 10, 12, 15, 16, 18, 19, 20, 21, 22, 23, 25, 28, 29, 31, 33, 35, 41, 45, 47, 50, 53, 55, 57, 58, 60, 62, 63, 66, 67, 68, 70, 71, 72, 75, 76, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 106, 107, 108, 109, 110, 113, 114, 117, 118, 120, 121, 122, 123, 125, 127, 128, 130, 132, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 153, 154, 156, 157, 158, 161, 162, 170, 171, 178, 180, 181, 184, 185, 187, 189, 193, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 281, 289, 290, 292, 296, 297, 298, 299, 301, 302, 303, 304, 306, 309, 310, 311, 313, 318, 320, 322, 326, 328, 331, 334, 336, 338, 340, 341, 343, 344, 346, 349, 352, 354, 355, 357, 359, 360, 361, 364, 368], "b": [1, 2, 3, 6, 9, 10, 11, 12, 16, 18, 20, 21, 22, 25, 32, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 67, 68, 70, 72, 73, 75, 76, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 93, 97, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 125, 128, 129, 131, 132, 136, 137, 138, 139, 143, 144, 147, 148, 149, 155, 156, 158, 160, 161, 169, 170, 171, 172, 174, 178, 179, 180, 183, 184, 185, 188, 189, 195, 202, 204, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 285, 286, 292, 296, 297, 299, 304, 310, 311, 313, 314, 315, 319, 320, 322, 323, 324, 326, 327, 328, 329, 331, 334, 335, 338, 340, 341, 343, 344, 345, 347, 348, 349, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367], "infti": [1, 25, 38, 41, 45, 47, 50, 58, 59, 60, 61, 75, 92, 120, 121, 122, 144, 149, 158, 162, 186, 195, 212, 224, 226, 244, 280, 298, 299, 301, 318, 341, 342, 354, 357, 364], "kirillov": [1, 35, 37, 38, 41, 56, 58, 114, 195, 196, 198, 210, 212, 213, 224, 233, 263, 341], "reshetikhin": [1, 35, 37, 38, 41, 56, 58, 195, 196, 198, 210, 212, 213, 224, 233, 263], "an": [1, 2, 3, 6, 7, 9, 10, 15, 16, 18, 21, 22, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 194, 202, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 256, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 318, 327, 328, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 363, 364, 365, 367, 368, 369], "direct": [1, 2, 10, 18, 20, 21, 22, 48, 55, 57, 58, 65, 88, 90, 95, 99, 101, 105, 106, 112, 118, 128, 129, 137, 144, 149, 152, 156, 158, 160, 170, 172, 177, 178, 180, 185, 208, 209, 223, 224, 238, 239, 265, 273, 301, 302, 308, 309, 310, 318, 322, 327, 335, 338, 341, 354, 358, 364, 368], "sum": [1, 3, 6, 10, 15, 16, 24, 25, 29, 38, 55, 58, 71, 73, 78, 81, 87, 89, 90, 96, 97, 98, 99, 102, 106, 107, 108, 109, 110, 111, 114, 117, 118, 122, 123, 124, 125, 127, 130, 135, 136, 139, 141, 142, 143, 144, 147, 148, 149, 156, 157, 158, 162, 170, 174, 180, 184, 185, 186, 194, 213, 222, 231, 233, 235, 236, 239, 240, 241, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 290, 295, 297, 298, 299, 301, 303, 304, 305, 306, 308, 309, 311, 312, 318, 327, 328, 331, 335, 337, 338, 341, 345, 349, 350, 352, 354, 363, 364, 367], "rank": [1, 3, 18, 20, 22, 24, 25, 27, 32, 45, 55, 67, 87, 97, 108, 109, 110, 111, 114, 118, 125, 131, 144, 158, 170, 178, 180, 183, 184, 185, 189, 208, 218, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 238, 241, 244, 258, 259, 265, 270, 271, 296, 309, 331, 335, 349, 356, 358], "two": [1, 2, 6, 8, 10, 11, 15, 16, 18, 21, 22, 25, 28, 29, 32, 33, 38, 45, 55, 58, 67, 71, 73, 74, 75, 76, 78, 80, 81, 82, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 120, 122, 125, 128, 130, 132, 134, 135, 136, 137, 139, 142, 143, 144, 145, 149, 154, 155, 156, 157, 158, 162, 165, 166, 169, 170, 174, 180, 181, 184, 185, 190, 196, 212, 218, 219, 220, 222, 224, 230, 232, 233, 235, 238, 239, 244, 261, 269, 270, 272, 273, 275, 276, 281, 284, 285, 286, 289, 290, 292, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 314, 317, 327, 330, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 363, 364, 367, 368], "fulli": [1, 3, 6, 67, 106, 185, 273, 338], "commut": [1, 3, 7, 10, 14, 15, 16, 32, 59, 73, 106, 108, 110, 111, 117, 119, 120, 141, 142, 144, 145, 147, 158, 161, 179, 183, 185, 212, 224, 231, 233, 264, 266, 273, 281, 284, 290, 296, 297, 298, 299, 306, 310, 337, 338, 341, 354, 369], "stabl": [1, 21, 186, 222, 273, 278, 281, 284, 290, 296, 297, 299, 309], "grothendieck": [1, 149, 178, 185, 273, 286], "young": [1, 10, 51, 60, 67, 96, 97, 114, 118, 125, 143, 144, 145, 158, 161, 162, 170, 184, 214, 273, 297, 299, 300, 309, 311, 338, 339, 341, 343, 361], "wall": [1, 51, 58, 60, 67, 87, 235, 239, 268, 308, 349], "highest": [1, 18, 36, 38, 40, 45, 47, 49, 50, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 71, 128, 130, 143, 160, 162, 170, 209, 210, 211, 212, 213, 215, 222, 232, 236, 239, 240, 241, 267, 268, 270, 271, 303, 310, 338, 343, 358], "weight": [1, 21, 29, 31, 35, 36, 37, 38, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 99, 106, 107, 114, 130, 139, 158, 160, 162, 170, 178, 181, 185, 194, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 222, 224, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 254, 261, 262, 263, 264, 265, 266, 267, 270, 271, 275, 276, 287, 293, 303, 310, 313, 314, 315, 316, 317, 320, 322, 323, 324, 326, 327, 329, 330, 331, 335, 341, 342, 343, 354], "induc": [1, 10, 41, 54, 55, 66, 87, 94, 97, 99, 106, 128, 129, 143, 144, 145, 158, 178, 180, 185, 222, 223, 224, 228, 229, 233, 239, 263, 268, 278, 294, 298, 300, 354], "mathcal": [1, 15, 38, 45, 50, 58, 59, 61, 67, 75, 81, 86, 87, 89, 90, 106, 108, 120, 185, 195, 236, 335, 341, 349], "nonexcept": [1, 215], "g_2": [1, 51, 57, 64, 208, 222, 224, 233, 235, 256, 263, 270, 299, 349], "kac": [1, 22, 37, 56, 58, 64, 158, 162, 213, 223, 224, 228, 232, 238, 239, 262, 268], "kyoto": [1, 288], "letter": [1, 2, 8, 10, 16, 22, 23, 24, 26, 36, 41, 45, 46, 49, 51, 52, 54, 59, 65, 67, 68, 70, 105, 106, 107, 108, 110, 111, 112, 117, 118, 130, 132, 139, 143, 145, 148, 158, 159, 170, 171, 184, 185, 190, 212, 220, 224, 228, 273, 275, 276, 303, 304, 310, 311, 334, 336, 338, 341, 343, 344, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "littelmann": [1, 38, 48], "modifi": [1, 2, 6, 10, 16, 18, 20, 21, 26, 32, 51, 60, 75, 76, 83, 84, 86, 87, 90, 110, 130, 154, 156, 170, 185, 208, 212, 224, 273, 289, 298, 299, 336, 341, 360, 368], "nakajima": [1, 51], "monomi": [1, 16, 51, 105, 108, 110, 122, 141, 142, 143, 144, 145, 147, 148, 149, 161, 170, 185, 231, 233, 238, 240, 270, 277, 280, 281, 282, 284, 285, 286, 288, 289, 291, 292, 295, 296, 297, 298, 299, 347, 349], "bernstein": [1, 143, 299], "zelevinski": [1, 18, 22, 48, 285, 298], "multiseg": [1, 43], "mirkovi\u0107": 1, "vilonen": 1, "mv": [1, 169, 239], "polytop": [1, 122, 170, 185, 188, 219, 235, 239, 335], "pbw": [1, 43, 61], "data": [1, 2, 10, 18, 20, 21, 22, 32, 38, 45, 50, 61, 62, 75, 78, 81, 84, 86, 87, 88, 94, 96, 106, 112, 121, 134, 136, 139, 154, 155, 156, 171, 178, 180, 185, 214, 218, 219, 223, 224, 225, 226, 229, 231, 235, 236, 241, 271, 272, 306, 331, 340, 345, 349, 353, 354, 356, 357, 358, 360, 361, 369], "polyhedr": [1, 21, 47, 237, 335], "realiz": [1, 15, 16, 45, 46, 47, 50, 55, 56, 58, 59, 60, 61, 67, 71, 73, 106, 107, 108, 125, 142, 143, 144, 145, 148, 149, 160, 169, 183, 185, 210, 211, 213, 217, 218, 219, 224, 229, 230, 233, 234, 235, 241, 261, 263, 269, 270, 271, 277, 278, 286, 291, 292, 299, 307, 335, 368], "spin": [1, 41, 45, 48, 57, 67, 118, 130, 193, 194, 209, 222, 241, 270, 288, 298], "star": [1, 16, 43, 62, 63, 106, 108, 112, 137, 143, 144, 180, 185, 273, 337, 338], "On": [1, 2, 34, 55, 75, 78, 81, 106, 108, 112, 122, 148, 162, 169, 178, 183, 185, 212, 222, 235, 238, 299, 302, 304, 311, 338, 358, 364], "tensor": [1, 37, 38, 47, 55, 56, 57, 58, 61, 64, 110, 117, 132, 136, 143, 144, 145, 147, 148, 149, 160, 167, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 213, 222, 270, 285, 291, 292, 297, 298, 299, 301, 303, 342], "element": [1, 2, 3, 6, 7, 10, 11, 12, 15, 16, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 139, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 193, 194, 195, 208, 209, 210, 211, 213, 215, 218, 219, 222, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 252, 254, 261, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 323, 324, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 357, 359, 361, 364, 366, 368, 369], "cyclic": [1, 2, 3, 22, 23, 24, 70, 78, 81, 87, 89, 90, 99, 100, 106, 127, 128, 130, 136, 150, 158, 162, 170, 172, 234, 272, 275, 315, 318, 327, 343, 354], "siev": [1, 9], "phenomenon": [1, 349], "de": [1, 22, 78, 96, 99, 101, 139, 144, 157, 167, 168, 169, 185, 186, 252, 254, 299, 304, 310, 341, 352, 357, 358], "bruijn": [1, 101], "degre": [1, 15, 16, 18, 24, 32, 69, 87, 94, 101, 106, 108, 109, 111, 117, 118, 119, 122, 127, 132, 142, 143, 144, 145, 147, 149, 156, 158, 162, 170, 185, 222, 224, 232, 235, 236, 238, 265, 270, 280, 281, 282, 284, 286, 290, 292, 296, 297, 298, 299, 306, 311, 318, 337, 341, 343, 345, 349, 354, 356, 357, 369], "derang": [1, 25, 101, 170, 311], "descent": [1, 3, 4, 15, 24, 25, 28, 29, 99, 108, 112, 118, 125, 139, 141, 142, 143, 144, 157, 165, 170, 184, 193, 229, 231, 235, 239, 267, 271, 293, 299, 338, 341, 343, 354], "balanc": [1, 74, 76, 78, 79, 80, 81, 87, 89, 99, 137, 154, 170, 273, 354], "incomplet": [1, 74, 76, 78, 79, 81, 87, 89, 90, 99, 345, 357], "block": [1, 16, 25, 26, 50, 53, 57, 74, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 106, 107, 129, 136, 139, 158, 159, 162, 170, 178, 180, 223, 265, 275, 276, 299, 306, 322, 338, 342, 349, 354, 360, 363, 364], "bibd": [1, 74, 78, 81, 87, 90, 92], "resolv": [1, 74, 78, 87, 89, 90, 357], "rbibd": [1, 74, 78], "group": [1, 3, 10, 15, 16, 21, 23, 24, 25, 29, 32, 33, 36, 48, 49, 58, 61, 63, 65, 68, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 89, 90, 92, 96, 97, 101, 106, 108, 114, 130, 131, 136, 137, 139, 143, 144, 145, 149, 154, 158, 160, 162, 167, 168, 169, 170, 178, 183, 184, 185, 186, 188, 213, 218, 222, 223, 224, 226, 231, 232, 233, 234, 235, 239, 240, 241, 252, 254, 262, 265, 268, 270, 273, 274, 276, 277, 283, 296, 298, 299, 300, 301, 302, 304, 306, 311, 313, 315, 319, 320, 322, 323, 324, 326, 329, 335, 341, 342, 343, 345, 349, 368], "divis": [1, 25, 74, 80, 90, 143, 268, 270, 281, 296, 297, 299, 301, 364], "gdd": [1, 74, 78, 80, 90, 92], "cover": [1, 3, 6, 32, 33, 65, 74, 75, 78, 79, 87, 90, 101, 118, 128, 130, 135, 137, 139, 170, 178, 180, 181, 184, 185, 222, 229, 230, 233, 237, 335, 344, 345, 349, 354, 360], "subset": [1, 3, 16, 18, 23, 24, 25, 27, 29, 38, 47, 50, 53, 58, 59, 67, 69, 73, 74, 75, 76, 81, 83, 86, 87, 89, 90, 93, 95, 97, 98, 106, 112, 116, 117, 126, 127, 128, 134, 135, 137, 139, 142, 143, 144, 148, 149, 158, 160, 170, 178, 180, 184, 185, 188, 208, 222, 229, 234, 236, 237, 239, 275, 276, 305, 312, 324, 338, 341, 354, 359, 369], "v": [1, 2, 6, 9, 10, 16, 21, 24, 27, 29, 32, 38, 48, 49, 54, 55, 57, 58, 59, 65, 74, 75, 76, 78, 80, 81, 84, 86, 87, 89, 90, 92, 94, 95, 100, 102, 105, 106, 107, 108, 113, 115, 117, 118, 120, 125, 127, 128, 129, 130, 137, 139, 142, 143, 144, 158, 170, 178, 180, 184, 185, 190, 218, 219, 222, 224, 229, 230, 232, 233, 234, 235, 236, 237, 239, 252, 261, 262, 265, 270, 271, 275, 281, 284, 296, 297, 299, 300, 301, 304, 308, 309, 311, 338, 339, 340, 341, 345, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 362, 364, 368], "k": [1, 3, 6, 8, 9, 10, 11, 16, 18, 22, 23, 25, 26, 27, 29, 31, 32, 33, 35, 36, 37, 38, 45, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 99, 100, 105, 106, 107, 108, 110, 112, 113, 114, 118, 119, 120, 121, 124, 125, 128, 130, 132, 137, 139, 141, 142, 143, 144, 145, 148, 149, 154, 156, 158, 159, 160, 162, 163, 166, 170, 172, 178, 179, 180, 184, 185, 186, 190, 194, 209, 212, 213, 215, 220, 222, 228, 231, 232, 233, 234, 236, 238, 242, 254, 263, 266, 268, 270, 272, 273, 275, 276, 277, 280, 281, 284, 286, 288, 289, 290, 296, 297, 298, 299, 300, 304, 306, 307, 309, 310, 311, 331, 332, 334, 335, 338, 341, 342, 343, 348, 349, 353, 354, 356, 357, 358, 359, 360, 364, 367, 369], "databas": [1, 28, 74, 77, 79, 80, 81, 83, 84, 87, 89, 95, 107, 136, 224, 237, 311], "small": [1, 10, 21, 29, 57, 71, 74, 76, 81, 83, 94, 106, 112, 128, 136, 143, 158, 170, 171, 184, 185, 186, 235, 239, 272, 340, 342, 349, 369], "differ": [1, 2, 6, 10, 12, 18, 22, 25, 29, 33, 35, 54, 56, 64, 67, 70, 71, 73, 74, 75, 78, 80, 83, 86, 87, 88, 89, 93, 95, 97, 99, 100, 106, 108, 112, 113, 116, 118, 120, 122, 123, 128, 129, 136, 137, 139, 142, 143, 144, 148, 149, 154, 156, 157, 158, 160, 162, 167, 169, 170, 178, 180, 185, 190, 208, 209, 213, 219, 222, 223, 224, 225, 228, 229, 232, 233, 238, 261, 268, 269, 270, 272, 273, 274, 275, 298, 299, 303, 307, 308, 310, 311, 318, 332, 337, 338, 339, 341, 342, 343, 345, 347, 349, 352, 353, 354, 357, 358, 369], "famili": [1, 15, 16, 55, 58, 74, 75, 76, 78, 83, 86, 89, 93, 95, 97, 108, 110, 112, 117, 122, 129, 136, 143, 145, 156, 161, 170, 175, 181, 188, 190, 223, 224, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 241, 242, 245, 248, 250, 252, 254, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 282, 285, 288, 289, 298, 299, 338, 340, 349, 353], "evenli": [1, 74, 78, 81, 235], "distribut": [1, 10, 29, 74, 78, 81, 106, 128, 137, 157, 158, 178, 180, 184, 185, 275, 341, 349], "field": [1, 15, 16, 18, 24, 25, 46, 58, 73, 74, 76, 77, 81, 82, 94, 97, 99, 101, 106, 107, 108, 109, 110, 111, 112, 117, 129, 142, 143, 144, 145, 147, 148, 149, 157, 161, 166, 170, 178, 179, 180, 183, 185, 190, 218, 223, 225, 227, 231, 233, 236, 238, 239, 240, 241, 248, 256, 261, 268, 270, 271, 280, 281, 282, 284, 285, 286, 288, 289, 290, 292, 295, 296, 297, 298, 299, 308, 314, 317, 318, 324, 325, 327, 330, 331, 338, 339, 349, 357, 358, 369], "extern": [1, 45, 74, 76, 181], "represent": [1, 10, 12, 21, 25, 28, 36, 45, 48, 53, 54, 55, 57, 65, 74, 76, 77, 94, 97, 98, 99, 106, 110, 114, 129, 130, 132, 137, 143, 144, 152, 154, 156, 157, 158, 160, 162, 170, 172, 185, 190, 208, 209, 213, 219, 222, 224, 225, 233, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 270, 271, 283, 288, 289, 296, 298, 299, 300, 310, 311, 335, 338, 342, 343, 349, 351, 354, 357, 358, 364, 366, 369], "generalis": [1, 74, 160, 162, 167, 168, 342, 343], "quadrangl": [1, 74, 76, 87], "spread": [1, 74, 87], "e": [1, 2, 3, 9, 10, 16, 18, 21, 22, 23, 25, 32, 35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 123, 128, 129, 132, 136, 137, 139, 142, 143, 144, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 169, 170, 171, 174, 178, 179, 180, 181, 183, 185, 186, 190, 208, 209, 211, 212, 213, 214, 215, 217, 218, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 245, 248, 250, 254, 256, 261, 262, 263, 267, 268, 270, 271, 272, 273, 275, 276, 280, 281, 284, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 310, 311, 314, 317, 318, 325, 326, 327, 328, 331, 332, 334, 338, 340, 341, 342, 343, 344, 345, 348, 349, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 367, 368], "hypergraph": [1, 74, 95, 185], "mutual": [1, 73, 74, 78, 89, 90, 91, 120, 136, 158, 170, 180, 235, 273, 357], "orthogon": [1, 38, 65, 73, 74, 76, 78, 80, 97, 100, 123, 136, 169, 183, 218, 222, 224, 235, 237, 239, 240, 265, 267, 269, 270, 271, 277, 280, 282, 285, 289, 296, 298, 299, 338, 339, 358], "latin": [1, 74, 78, 89, 90, 91, 101, 133], "squar": [1, 6, 9, 16, 18, 22, 25, 74, 75, 76, 78, 80, 81, 89, 90, 91, 95, 99, 101, 108, 113, 114, 125, 129, 133, 144, 145, 147, 149, 154, 156, 157, 158, 185, 190, 222, 226, 233, 238, 239, 241, 270, 285, 288, 291, 292, 297, 299, 301, 306, 308, 310, 311, 341, 345, 349, 354, 357, 358, 360, 361, 362], "mol": [1, 74, 78, 80, 89, 90], "arrai": [1, 18, 31, 54, 71, 74, 76, 78, 80, 81, 88, 100, 101, 113, 114, 120, 136, 137, 155, 156, 171, 209, 212, 213, 214, 224, 263, 273, 310, 341, 351, 357, 361], "oa": [1, 74, 76, 78, 80, 90, 91, 97], "build": [1, 2, 3, 7, 25, 32, 53, 57, 71, 74, 75, 76, 78, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 99, 106, 110, 127, 129, 130, 132, 136, 158, 161, 171, 185, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 224, 229, 235, 280, 298, 302, 307, 331, 334, 335, 349, 353, 364], "construct": [1, 2, 3, 7, 10, 12, 15, 16, 18, 22, 23, 24, 25, 35, 37, 38, 41, 45, 52, 54, 55, 57, 61, 62, 67, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 92, 93, 95, 96, 97, 99, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 120, 122, 125, 128, 129, 130, 132, 136, 137, 142, 143, 144, 145, 147, 149, 153, 154, 158, 166, 167, 168, 170, 171, 178, 180, 183, 185, 188, 189, 194, 208, 209, 210, 211, 212, 214, 216, 218, 219, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 241, 248, 256, 261, 262, 263, 264, 266, 268, 270, 271, 273, 276, 292, 293, 298, 299, 303, 304, 306, 307, 309, 310, 311, 327, 333, 337, 338, 339, 340, 341, 342, 343, 344, 352, 353, 354, 356, 360, 361, 364, 368, 369], "steiner": [1, 74, 75, 79, 87, 92], "quadrupl": [1, 74, 87, 136, 308], "isomorph": [1, 2, 15, 21, 22, 23, 32, 36, 38, 48, 55, 56, 57, 58, 59, 61, 67, 74, 76, 78, 83, 87, 112, 137, 142, 143, 154, 160, 161, 170, 179, 180, 184, 185, 186, 197, 209, 213, 222, 224, 226, 229, 230, 233, 239, 262, 265, 267, 270, 280, 298, 317, 326, 327, 360], "diagram": [1, 3, 4, 10, 11, 13, 16, 22, 26, 33, 35, 55, 101, 112, 120, 128, 130, 154, 156, 158, 162, 167, 170, 176, 177, 180, 184, 185, 193, 194, 208, 209, 210, 211, 214, 217, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 275, 299, 303, 309, 310, 337, 341, 343, 349], "exact": [1, 77, 101, 110, 120, 128, 134, 135, 137, 235, 299, 341, 345], "problem": [1, 25, 71, 81, 87, 92, 94, 101, 106, 122, 134, 135, 137, 185, 299, 311, 332, 349, 357, 358], "via": [1, 22, 38, 45, 67, 83, 101, 102, 103, 107, 112, 118, 129, 137, 139, 143, 144, 149, 154, 156, 158, 162, 170, 190, 197, 213, 224, 234, 282, 286, 290, 295, 296, 299, 341, 342, 349, 354, 369], "danc": [1, 81, 101, 133, 137, 311], "link": [1, 6, 71, 76, 81, 101, 113, 128, 133, 137, 138, 170, 275, 311, 347, 349, 360], "dyck": [1, 6, 10, 18, 101, 122, 128, 151, 153, 154, 156, 157, 158, 184, 344, 349, 358], "substitut": [1, 10, 119, 185, 194, 289, 298, 349, 351, 364], "over": [1, 2, 6, 10, 15, 16, 18, 24, 25, 26, 29, 32, 46, 53, 54, 55, 58, 71, 73, 75, 76, 78, 81, 83, 84, 87, 88, 89, 90, 94, 95, 96, 97, 99, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 122, 125, 126, 127, 128, 129, 130, 134, 136, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 152, 157, 158, 161, 162, 169, 170, 178, 179, 180, 183, 185, 186, 190, 208, 213, 218, 222, 223, 225, 227, 231, 233, 236, 237, 238, 239, 240, 241, 268, 270, 271, 273, 274, 275, 280, 281, 282, 284, 285, 286, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 308, 310, 311, 318, 324, 327, 330, 335, 338, 339, 341, 343, 345, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 364, 367, 369], "unit": [1, 7, 16, 58, 95, 97, 108, 109, 128, 136, 143, 151, 156, 157, 159, 179, 185, 224, 229, 271, 274, 286, 299, 303, 338, 341, 345, 349], "cube": [1, 172, 185, 311, 345, 349, 354, 357, 358], "face": [1, 23, 184, 185, 229], "rauzi": [1, 357, 358], "fractal": [1, 357, 358], "tool": [1, 7, 29, 90, 122, 156, 169, 239, 337, 349, 364], "modulo": [1, 9, 33, 63, 75, 78, 81, 83, 89, 101, 130, 137, 158, 170, 229, 270, 281, 286, 296, 297, 299, 301, 307, 341, 342, 345, 352, 354, 364], "action": [1, 2, 6, 32, 33, 35, 36, 37, 38, 46, 47, 48, 49, 50, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 69, 76, 81, 89, 101, 113, 130, 137, 143, 149, 158, 160, 161, 167, 170, 181, 194, 209, 212, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 270, 271, 274, 275, 281, 289, 296, 297, 299, 301, 303, 306, 313, 315, 320, 322, 323, 326, 329, 338, 339, 341, 343, 345, 354], "bell": [1, 25, 34, 97, 106, 275, 276, 311], "uppuluri": [1, 34, 311], "carpent": [1, 34, 311], "number": [1, 2, 6, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 38, 49, 50, 53, 55, 57, 58, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 87, 88, 89, 90, 94, 95, 96, 97, 99, 100, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 124, 128, 130, 132, 134, 136, 137, 139, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 169, 170, 172, 178, 180, 181, 184, 185, 186, 190, 193, 194, 204, 208, 209, 212, 213, 214, 215, 222, 223, 224, 225, 226, 227, 229, 232, 234, 235, 236, 239, 241, 242, 245, 248, 250, 252, 254, 256, 258, 259, 263, 271, 272, 273, 275, 276, 280, 282, 289, 293, 297, 298, 299, 303, 304, 306, 307, 308, 309, 310, 311, 318, 321, 327, 328, 331, 332, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 363, 364, 367, 369], "brent": 1, "yorgei": 1, "algorithm": [1, 2, 3, 6, 8, 10, 15, 16, 18, 20, 21, 23, 25, 26, 27, 29, 32, 35, 38, 45, 50, 58, 66, 70, 72, 76, 81, 87, 96, 97, 98, 99, 103, 106, 107, 112, 114, 116, 118, 119, 120, 122, 125, 130, 132, 134, 135, 137, 144, 150, 157, 158, 163, 170, 171, 172, 178, 180, 181, 184, 185, 186, 190, 208, 212, 213, 216, 224, 229, 234, 237, 239, 268, 270, 271, 273, 274, 275, 276, 287, 299, 307, 310, 311, 318, 333, 335, 340, 341, 352, 357, 358, 360, 361, 364, 369], "vector": [1, 3, 16, 18, 21, 24, 25, 27, 38, 40, 47, 55, 58, 60, 66, 73, 76, 78, 81, 89, 98, 100, 101, 102, 106, 107, 109, 110, 111, 117, 119, 122, 129, 130, 135, 136, 142, 143, 144, 156, 158, 170, 184, 185, 190, 208, 210, 218, 222, 224, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 265, 268, 270, 271, 281, 296, 297, 299, 301, 302, 303, 335, 338, 339, 341, 347, 349, 354, 357, 358], "multiset": [1, 25, 27, 72, 80, 87, 89, 144, 170, 272, 276, 304, 306, 331, 334, 350, 356, 359], "coxet": [1, 3, 10, 23, 24, 131, 166, 170, 184, 185, 188, 223, 224, 228, 229, 232, 236, 237, 239, 242, 245, 248, 250, 252, 254, 256, 258, 259, 262, 265, 266, 271, 273, 302, 335, 341], "common": [1, 16, 18, 21, 32, 46, 51, 67, 78, 90, 106, 144, 147, 173, 175, 178, 180, 184, 185, 216, 235, 262, 276, 282, 285, 288, 299, 309, 311, 345, 347, 351, 352, 354, 362, 367], "free": [1, 3, 4, 14, 15, 16, 21, 26, 97, 117, 118, 142, 143, 144, 145, 149, 157, 158, 169, 170, 185, 189, 224, 234, 238, 239, 240, 241, 268, 269, 272, 293, 298, 299, 301, 308, 310, 311, 335, 341, 349, 352, 354, 356, 357, 358, 361, 364], "dendriform": [1, 4, 10, 16, 108, 144], "pre": [1, 2, 4, 117, 128, 132, 139, 184, 185, 272, 302], "pack": [1, 6, 16, 81, 87, 108, 276, 345], "loop": [1, 6, 11, 21, 32, 45, 83, 87, 97, 105, 106, 158, 169, 178, 181, 185, 218, 239, 349, 352, 354, 361], "gelfand": [1, 6, 52, 141, 144, 145, 168, 299, 341, 342], "tsetlin": [1, 6, 52, 168, 341, 342], "pattern": [1, 6, 8, 52, 99, 113, 128, 168, 170, 184, 341], "acycl": [1, 18, 21, 45, 48, 57, 65, 87, 101, 128, 177, 178, 184, 185, 309], "grai": [1, 25, 26, 100, 101, 107, 185, 235, 345], "growth": [1, 13, 50, 101, 103, 167, 275, 349, 354, 357], "grade": [1, 13, 15, 16, 108, 117, 122, 125, 126, 142, 143, 144, 149, 151, 157, 158, 160, 162, 170, 180, 185, 232, 235, 278, 279, 284, 286, 289, 291, 292, 294, 296, 298, 299, 300, 341, 342, 343, 347], "grossman": [1, 14, 111, 272], "larson": [1, 14, 111, 272], "hall": [1, 4, 25, 78, 106, 136, 141, 144, 169, 270, 277, 280, 281, 285, 287, 288, 289, 292, 295, 296, 297, 298, 299, 301], "polynomi": [1, 4, 9, 10, 14, 18, 21, 24, 25, 34, 69, 97, 99, 106, 109, 111, 112, 132, 139, 144, 145, 149, 157, 158, 161, 169, 170, 180, 183, 185, 186, 194, 217, 225, 231, 234, 236, 238, 239, 270, 273, 277, 280, 281, 284, 285, 286, 288, 290, 292, 296, 297, 298, 299, 306, 309, 311, 324, 327, 330, 331, 337, 338, 347, 349, 357, 358, 369], "The": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 193, 194, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 252, 254, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 316, 318, 319, 321, 325, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369], "hillman": [1, 341], "grassl": [1, 341], "correspond": [1, 2, 3, 6, 9, 10, 11, 13, 15, 16, 18, 22, 23, 24, 29, 31, 32, 33, 35, 37, 38, 45, 50, 53, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 70, 71, 72, 73, 75, 78, 81, 87, 89, 91, 95, 96, 97, 98, 99, 100, 101, 106, 108, 109, 112, 113, 114, 116, 117, 118, 122, 123, 124, 125, 128, 129, 130, 132, 134, 135, 136, 137, 139, 142, 143, 144, 149, 151, 154, 156, 157, 158, 159, 160, 162, 169, 170, 172, 180, 185, 190, 193, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 228, 229, 232, 233, 235, 236, 237, 238, 239, 241, 252, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 282, 283, 286, 287, 289, 290, 292, 293, 298, 299, 302, 303, 306, 308, 309, 310, 311, 318, 327, 328, 336, 338, 339, 341, 342, 343, 349, 354, 356, 357, 358, 360, 364, 368], "constraint": [1, 10, 18, 21, 29, 49, 53, 81, 90, 118, 125, 127, 134, 139, 154, 156, 158, 178, 213, 235, 273, 303, 309, 340, 349], "base": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 77, 78, 81, 83, 84, 86, 87, 89, 90, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369], "class": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 81, 84, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 137, 138, 139, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 189, 191, 193, 194, 195, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369], "front": [1, 143, 293], "end": [1, 22, 25, 37, 38, 47, 50, 54, 56, 58, 59, 60, 61, 64, 67, 68, 76, 81, 96, 97, 100, 106, 113, 114, 115, 119, 120, 121, 122, 128, 136, 137, 139, 143, 144, 145, 152, 155, 156, 157, 158, 160, 162, 165, 170, 179, 184, 185, 186, 208, 213, 214, 220, 222, 224, 226, 228, 229, 263, 273, 275, 282, 303, 337, 338, 340, 341, 342, 352, 354, 357, 358, 360, 363, 364], "invers": [1, 6, 10, 16, 21, 28, 32, 33, 35, 52, 55, 57, 68, 81, 99, 100, 108, 118, 120, 128, 143, 144, 151, 152, 154, 157, 170, 178, 179, 181, 189, 194, 204, 209, 229, 230, 231, 233, 236, 238, 239, 270, 273, 276, 280, 293, 298, 308, 311, 318, 338, 341, 343, 354, 361], "lexicograph": [1, 27, 29, 45, 70, 99, 102, 105, 125, 127, 128, 141, 144, 150, 158, 162, 163, 170, 174, 184, 185, 252, 254, 272, 273, 306, 333, 335, 341, 343, 350, 352, 354, 356, 357], "manipul": [1, 2, 6, 29, 101, 113, 156, 158, 172, 185, 224, 235, 238, 241, 298, 299, 337, 349], "non": [1, 3, 6, 10, 14, 15, 18, 20, 21, 22, 23, 25, 29, 32, 38, 45, 56, 59, 64, 67, 68, 71, 72, 73, 76, 78, 81, 87, 95, 96, 97, 99, 101, 102, 105, 106, 107, 110, 111, 112, 113, 118, 121, 122, 126, 129, 130, 132, 136, 139, 141, 142, 144, 145, 147, 150, 156, 157, 158, 160, 162, 168, 169, 170, 178, 180, 184, 185, 186, 189, 194, 207, 208, 209, 210, 211, 212, 213, 215, 223, 224, 226, 227, 231, 233, 234, 236, 237, 238, 239, 241, 244, 250, 262, 263, 264, 266, 268, 273, 275, 277, 282, 286, 296, 299, 301, 303, 304, 306, 307, 308, 309, 310, 311, 320, 331, 334, 336, 337, 338, 341, 342, 343, 345, 347, 349, 350, 352, 353, 354, 356, 357, 358, 363, 364, 367], "neg": [1, 3, 15, 18, 22, 24, 25, 29, 38, 54, 59, 66, 67, 73, 81, 87, 96, 97, 99, 101, 105, 106, 107, 118, 119, 122, 126, 129, 130, 132, 137, 142, 143, 147, 150, 156, 158, 159, 162, 165, 168, 184, 186, 187, 194, 212, 222, 223, 224, 234, 236, 239, 241, 244, 252, 254, 267, 268, 271, 275, 282, 286, 296, 299, 306, 309, 311, 318, 331, 335, 336, 337, 341, 342, 343, 345, 349, 350, 352, 353, 354, 357, 358, 363, 364, 367], "tamari": [1, 10, 99, 173, 180, 184], "interv": [1, 10, 18, 58, 63, 99, 121, 170, 173, 178, 179, 180, 184, 185, 235, 237, 273, 276, 302, 307, 310, 335, 341, 344, 349, 357], "regular": [1, 6, 21, 25, 67, 68, 81, 87, 95, 99, 106, 136, 158, 160, 162, 166, 180, 190, 214, 235, 236, 239, 301, 306, 360, 364], "strong": [1, 13, 33, 102, 127, 139, 170, 237, 357], "weak": [1, 3, 10, 13, 33, 87, 96, 118, 120, 128, 139, 144, 170, 184, 185, 215, 237, 239, 271, 302, 310, 311, 337, 341, 342, 356], "kazhdan": [1, 112, 183, 185, 288], "lusztig": [1, 55, 61, 62, 63, 112, 183, 185, 209, 212, 216, 233, 238, 270, 288], "knutson": [1, 335], "tao": 1, "puzzl": [1, 105], "intern": [1, 10, 16, 25, 67, 75, 78, 86, 87, 98, 105, 106, 113, 122, 128, 130, 133, 137, 139, 142, 143, 144, 147, 149, 156, 163, 178, 185, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 224, 232, 233, 266, 272, 280, 289, 298, 299, 303, 305, 309, 327, 351, 357], "wrapper": [1, 3, 18, 25, 28, 101, 133, 134, 137, 158, 222, 328], "hadamard": [1, 76, 81, 101, 133, 190], "minimaj": [1, 41], "quasisymmetr": [1, 16, 108, 140, 141, 142, 143, 149, 157, 185, 299], "variabl": [1, 10, 14, 18, 21, 22, 23, 25, 26, 58, 59, 71, 97, 106, 107, 109, 111, 114, 117, 125, 128, 129, 134, 137, 142, 143, 144, 145, 147, 158, 170, 184, 185, 186, 187, 194, 213, 233, 238, 240, 273, 274, 280, 281, 282, 284, 290, 292, 296, 297, 298, 299, 301, 306, 309, 310, 318, 331, 337, 338, 341, 347, 349, 353, 369], "ncsym": [1, 143, 146, 148, 149], "necklac": [1, 101, 170], "decreas": [1, 3, 16, 18, 29, 31, 49, 71, 99, 101, 114, 118, 122, 123, 125, 126, 128, 130, 141, 143, 144, 157, 158, 163, 168, 170, 185, 212, 213, 234, 239, 273, 276, 281, 296, 297, 299, 301, 302, 303, 306, 332, 333, 337, 341, 349, 358, 360], "park": [1, 99, 101], "nu": [1, 96, 119, 132, 149, 158, 160, 162, 170, 197, 202, 212, 213, 239, 240, 270, 282, 287, 289, 292, 294, 298, 299, 300, 308, 310], "lattic": [1, 6, 10, 21, 45, 46, 47, 50, 56, 58, 59, 60, 61, 67, 97, 99, 112, 113, 118, 120, 128, 130, 143, 149, 152, 157, 158, 162, 170, 173, 178, 179, 183, 185, 188, 210, 211, 217, 222, 224, 229, 230, 231, 232, 233, 235, 236, 241, 242, 248, 252, 254, 256, 261, 263, 265, 267, 270, 271, 275, 299, 302, 331, 335, 341, 342, 349, 358], "parallelogram": [1, 101, 154], "polyomino": [1, 96, 154, 345], "friez": 1, "semistandard": [1, 3, 6, 10, 15, 52, 53, 67, 114, 118, 130, 184, 194, 209, 273, 310, 336, 341, 343, 354, 361], "plane": [1, 10, 22, 75, 76, 77, 78, 80, 81, 87, 89, 90, 95, 96, 120, 158, 166, 180, 184, 224, 235, 275, 341, 349, 358], "kleshchev": [1, 341, 343], "shift": [1, 2, 10, 13, 16, 38, 47, 61, 70, 89, 100, 106, 108, 118, 125, 129, 137, 150, 160, 170, 175, 193, 233, 235, 270, 281, 296, 297, 299, 301, 335, 354, 359, 367, 369], "tupl": [1, 2, 3, 10, 13, 16, 18, 20, 21, 22, 24, 25, 26, 29, 32, 33, 36, 38, 40, 46, 52, 55, 57, 58, 63, 65, 67, 69, 73, 76, 81, 84, 87, 91, 97, 99, 100, 101, 106, 107, 110, 112, 113, 116, 118, 121, 124, 126, 128, 129, 130, 132, 136, 137, 138, 139, 143, 144, 145, 150, 154, 155, 158, 159, 160, 161, 168, 170, 171, 174, 178, 180, 184, 185, 189, 190, 194, 212, 213, 218, 223, 228, 229, 230, 231, 232, 235, 238, 239, 263, 271, 272, 273, 276, 299, 302, 306, 307, 308, 309, 331, 333, 334, 335, 337, 340, 341, 342, 343, 345, 349, 353, 354, 357, 358, 360, 361, 362, 363, 364, 367, 368], "iter": [1, 2, 6, 10, 12, 16, 18, 21, 24, 25, 26, 29, 45, 47, 56, 64, 71, 83, 84, 85, 87, 97, 98, 99, 100, 101, 105, 106, 107, 110, 112, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 138, 139, 143, 149, 152, 154, 156, 157, 158, 162, 169, 170, 178, 180, 184, 185, 186, 189, 190, 208, 213, 223, 228, 235, 237, 238, 239, 271, 272, 273, 275, 276, 306, 309, 310, 328, 331, 332, 333, 336, 341, 342, 343, 345, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 364, 367], "perfect": [1, 9, 10, 11, 26, 56, 58, 97, 101, 113, 118, 165, 170, 239, 311, 341], "match": [1, 11, 16, 22, 26, 38, 97, 99, 101, 106, 108, 113, 118, 149, 150, 165, 170, 185, 231, 233, 235, 238, 239, 261, 338, 341, 354, 356], "file": [1, 19, 20, 21, 28, 75, 84, 101, 106, 136, 137, 150, 152, 196, 235, 282, 302, 318, 327, 341, 358, 367], "d": [1, 3, 6, 10, 12, 15, 18, 21, 22, 26, 27, 32, 35, 38, 45, 46, 48, 52, 53, 55, 56, 57, 58, 59, 65, 67, 68, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 105, 106, 114, 118, 125, 127, 128, 129, 134, 136, 137, 139, 143, 144, 149, 150, 152, 157, 158, 160, 169, 170, 171, 173, 178, 180, 181, 182, 184, 185, 189, 190, 197, 204, 206, 208, 209, 212, 213, 215, 216, 217, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 261, 262, 263, 264, 268, 270, 271, 272, 275, 276, 280, 292, 297, 298, 299, 301, 302, 306, 307, 311, 323, 327, 331, 335, 338, 340, 341, 343, 345, 347, 349, 352, 353, 354, 357, 358, 360, 364, 367, 368, 369], "complet": [1, 6, 10, 21, 25, 45, 71, 73, 75, 78, 87, 89, 90, 99, 106, 107, 121, 122, 130, 132, 137, 141, 142, 143, 144, 145, 147, 149, 155, 158, 161, 164, 170, 173, 178, 181, 182, 184, 185, 186, 222, 236, 270, 278, 280, 281, 283, 284, 286, 290, 291, 292, 296, 297, 298, 299, 301, 311, 338, 341, 342, 345, 347, 352, 354, 369], "mobil": [1, 173, 181, 184], "semilattic": [1, 173, 178, 184, 185, 344], "etc": [1, 2, 7, 10, 16, 29, 55, 84, 89, 97, 99, 106, 110, 122, 130, 132, 137, 156, 157, 158, 170, 185, 224, 229, 231, 235, 239, 262, 266, 280, 298, 309, 310, 311, 338, 341, 349, 358, 361], "forest": [1, 10, 117, 128, 157, 173, 175, 178, 181, 185, 318, 319, 333, 349], "hass": [1, 10, 26, 112, 128, 154, 176, 177, 180, 185, 349], "extens": [1, 2, 10, 18, 21, 26, 71, 76, 84, 100, 103, 118, 128, 158, 166, 173, 178, 179, 180, 182, 184, 185, 224, 229, 230, 235, 237, 271, 275, 276, 282, 298, 299, 318, 349, 357, 361], "m\u00f6biu": [1, 16, 143, 173, 178, 179, 180, 185, 186, 311, 347], "q": [1, 3, 9, 10, 11, 15, 16, 18, 20, 21, 23, 24, 25, 34, 50, 53, 54, 57, 58, 66, 67, 68, 69, 73, 75, 76, 78, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 95, 96, 97, 99, 100, 106, 111, 118, 119, 128, 131, 137, 139, 142, 144, 145, 149, 152, 157, 158, 160, 162, 169, 170, 171, 174, 178, 180, 181, 183, 184, 185, 193, 202, 213, 224, 229, 230, 231, 233, 235, 236, 238, 239, 240, 268, 269, 273, 275, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 302, 303, 306, 307, 309, 310, 327, 335, 338, 341, 342, 344, 345, 349, 353, 354, 360, 361, 364], "analogu": [1, 34, 35, 55, 130, 143, 149, 160, 180, 187, 218, 235, 278, 292, 299, 349], "bernoulli": [1, 25, 34, 170], "recogniz": [1, 106, 112, 129], "seri": [1, 9, 16, 58, 90, 108, 114, 129, 143, 144, 145, 149, 185, 186, 233, 234, 236, 238, 299, 301, 325, 327, 347, 349, 369], "restrict": [1, 6, 16, 18, 21, 38, 50, 75, 98, 99, 101, 106, 111, 117, 121, 122, 130, 134, 136, 139, 143, 144, 148, 158, 160, 162, 170, 184, 209, 222, 224, 226, 227, 232, 234, 239, 241, 268, 270, 272, 273, 275, 276, 296, 298, 299, 303, 304, 310, 318, 321, 327, 331, 338, 339, 341, 342, 343, 345, 349, 357], "ribbon": [1, 13, 16, 29, 118, 130, 139, 142, 143, 144, 145, 158, 182, 184, 288, 309, 310], "shape": [1, 2, 3, 10, 15, 22, 28, 29, 31, 35, 36, 38, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 67, 68, 96, 97, 99, 114, 118, 120, 128, 129, 130, 137, 141, 143, 144, 145, 148, 149, 155, 158, 162, 167, 170, 175, 184, 185, 188, 194, 209, 210, 213, 214, 215, 224, 235, 239, 273, 275, 276, 287, 289, 293, 297, 298, 299, 303, 308, 309, 310, 336, 337, 338, 341, 342, 343, 347], "rig": [1, 4, 51, 55, 57, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 215, 216, 287], "configur": [1, 4, 6, 51, 55, 57, 58, 76, 113, 122, 128, 156, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 214, 215, 216, 233, 308, 335, 358], "biject": [1, 3, 6, 8, 10, 16, 29, 33, 38, 52, 55, 57, 69, 73, 97, 99, 106, 113, 114, 118, 120, 122, 128, 132, 139, 151, 154, 156, 158, 159, 162, 165, 169, 170, 172, 184, 191, 209, 212, 213, 214, 215, 216, 229, 230, 232, 234, 239, 271, 273, 275, 276, 303, 306, 308, 336, 341, 342, 343, 349, 354, 361], "between": [1, 2, 3, 6, 8, 10, 15, 16, 18, 21, 24, 25, 28, 29, 32, 33, 36, 49, 55, 58, 73, 81, 89, 94, 97, 99, 100, 106, 109, 111, 114, 117, 118, 120, 122, 123, 128, 129, 130, 137, 142, 143, 144, 145, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160, 166, 170, 176, 178, 180, 181, 184, 185, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 215, 219, 224, 229, 232, 233, 235, 237, 238, 240, 241, 244, 261, 268, 269, 273, 275, 276, 279, 280, 282, 285, 289, 292, 296, 297, 298, 299, 301, 303, 308, 338, 341, 342, 344, 345, 347, 349, 354, 358, 361, 362, 367], "margin": [1, 53, 195, 276], "larg": [1, 7, 18, 22, 25, 53, 57, 71, 76, 83, 93, 112, 121, 122, 131, 144, 158, 170, 185, 195, 210, 235, 236, 239, 241, 271, 298, 311, 338, 342, 349, 357, 364], "a_n": [1, 22, 23, 25, 35, 50, 51, 53, 54, 55, 60, 68, 99, 112, 127, 157, 158, 170, 195, 201, 203, 204, 205, 208, 209, 212, 213, 215, 216, 219, 224, 242, 261, 273, 275, 303, 304, 340, 345, 354, 369], "1": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 199, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "a_": [1, 6, 25, 33, 41, 50, 55, 59, 61, 89, 99, 106, 114, 125, 149, 158, 160, 162, 170, 178, 180, 195, 208, 209, 212, 213, 222, 223, 224, 228, 229, 235, 239, 244, 263, 269, 273, 275, 299, 311, 335, 338, 340, 341, 342, 354, 364, 369], "2n": [1, 6, 10, 18, 25, 26, 55, 68, 81, 93, 97, 99, 113, 129, 136, 137, 158, 169, 170, 178, 184, 195, 208, 209, 212, 213, 222, 224, 229, 234, 239, 263, 269, 311, 340, 349], "2": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 198, 202, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "dagger": [1, 195, 208, 209, 212, 213, 224, 229, 263], "b_n": [1, 24, 25, 51, 53, 55, 57, 62, 64, 65, 67, 112, 157, 195, 208, 209, 212, 214, 224, 263, 273, 275, 311, 364], "c_n": [1, 25, 38, 51, 53, 55, 57, 170, 195, 199, 200, 206, 208, 209, 213, 224, 263, 311, 349], "d_n": [1, 51, 53, 55, 65, 71, 72, 112, 114, 158, 180, 195, 206, 208, 209, 212, 213, 215, 216, 236, 250, 349, 364], "d_": [1, 24, 55, 71, 72, 73, 76, 89, 97, 114, 180, 195, 208, 209, 213, 222, 224, 263, 280, 318, 349], "n": [1, 2, 3, 6, 8, 9, 10, 11, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 40, 45, 47, 50, 53, 54, 55, 56, 57, 58, 60, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 106, 107, 108, 111, 112, 113, 114, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 162, 163, 169, 170, 171, 178, 180, 181, 184, 185, 186, 188, 190, 191, 194, 195, 202, 208, 209, 213, 214, 218, 222, 223, 224, 228, 229, 232, 233, 234, 235, 236, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 263, 265, 266, 267, 270, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 287, 289, 290, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 318, 319, 321, 327, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 367, 369], "d_4": [1, 55, 96, 195, 207, 208, 209, 222, 224, 263, 270], "3": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "kr": [1, 37, 45, 55, 58, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 213, 214, 215, 216], "kleber": [1, 195, 213, 300], "ambient": [1, 47, 55, 61, 67, 97, 100, 127, 130, 179, 186, 217, 219, 222, 224, 225, 229, 230, 231, 233, 235, 238, 239, 240, 241, 242, 248, 256, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 286, 292, 333, 338, 358], "space": [1, 3, 6, 7, 21, 22, 24, 33, 46, 47, 58, 61, 67, 76, 81, 94, 97, 99, 100, 109, 110, 111, 117, 119, 127, 129, 132, 142, 143, 144, 145, 157, 162, 170, 179, 184, 190, 208, 214, 217, 219, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 248, 256, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 277, 282, 292, 298, 299, 302, 335, 337, 338, 345, 349, 353, 354, 357, 358, 360, 363], "braid": [1, 3, 32, 63, 112, 170, 217, 233, 236, 238, 270, 299, 338, 339], "move": [1, 21, 36, 49, 63, 105, 106, 112, 122, 132, 144, 157, 169, 170, 181, 209, 213, 217, 221, 223, 228, 236, 303, 310, 332, 341, 344, 354, 364], "calcul": [1, 9, 18, 29, 55, 99, 106, 112, 127, 130, 131, 137, 142, 152, 157, 158, 162, 194, 209, 212, 214, 217, 231, 233, 235, 238, 270, 282, 286, 288, 289, 299, 306, 311, 349, 354], "orbit": [1, 6, 32, 69, 97, 102, 113, 125, 127, 167, 217, 233, 236, 239, 241, 263, 270, 299, 306, 357, 358], "branch": [1, 7, 10, 22, 106, 122, 128, 160, 162, 217, 232, 270, 299, 349], "rule": [1, 10, 16, 49, 60, 67, 68, 71, 73, 97, 107, 114, 128, 129, 132, 141, 143, 144, 154, 158, 160, 162, 165, 166, 167, 168, 186, 209, 214, 217, 232, 270, 295, 299, 337, 349, 360, 364], "cartan": [1, 3, 22, 35, 38, 40, 41, 45, 46, 47, 48, 51, 53, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 112, 158, 162, 170, 208, 209, 210, 211, 212, 213, 215, 218, 219, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 246, 250, 254, 256, 260, 267, 268, 269, 270, 271, 335, 342], "dynkin": [1, 3, 22, 35, 55, 143, 208, 209, 217, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 270, 271], "heck": [1, 49, 145, 158, 160, 162, 217, 224, 229, 233, 238, 270, 273, 277, 292, 298, 338, 342, 343], "integr": [1, 9, 25, 38, 47, 48, 50, 107, 122, 156, 158, 160, 162, 166, 169, 185, 217, 223, 224, 238, 268, 270, 289, 293, 299, 343], "nonsymmetr": [1, 217, 231, 238, 270], "macdonald": [1, 22, 99, 144, 145, 157, 169, 217, 231, 238, 270, 277, 282, 285, 298, 299, 309, 354], "pieri": [1, 141, 289, 309, 337], "tutori": [1, 39, 217, 222, 239, 241, 268, 270, 298, 299, 349], "visual": [1, 96, 106, 112, 118, 156, 158, 217, 224, 239, 241, 349], "reflect": [1, 2, 3, 24, 33, 48, 57, 58, 68, 96, 116, 118, 132, 156, 158, 162, 170, 218, 222, 223, 224, 225, 229, 232, 233, 234, 235, 238, 239, 240, 241, 267, 268, 270, 271, 298, 299, 307, 309, 335, 343], "real": [1, 28, 97, 100, 114, 120, 166, 170, 184, 217, 225, 229, 235, 236, 239, 270, 271, 325, 335, 343, 349, 354, 357, 358, 364], "super": [1, 13, 15, 16, 35, 40, 67, 68, 73, 101, 108, 121, 143, 144, 147, 183, 217, 224, 265, 273, 286, 292, 299], "untwist": [1, 22, 38, 58, 217, 224, 229, 230, 233, 241, 244, 246, 262, 264, 266, 270], "infin": [1, 7, 12, 18, 21, 25, 38, 47, 50, 53, 58, 59, 60, 61, 62, 64, 66, 67, 68, 89, 106, 110, 116, 121, 122, 126, 127, 154, 156, 158, 197, 211, 212, 217, 223, 224, 228, 239, 281, 284, 290, 296, 297, 299, 309, 310, 341, 349, 353, 354, 355, 357, 361, 364, 367], "bc": [1, 22, 55, 58, 87, 106, 170, 213, 217, 224, 227, 229, 231, 233, 238, 239, 261, 262, 263, 264, 265, 266, 268, 269, 334, 357, 367], "f": [1, 2, 9, 10, 15, 16, 18, 21, 22, 23, 25, 28, 35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 75, 76, 78, 80, 81, 84, 86, 87, 89, 90, 91, 94, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 121, 125, 129, 132, 138, 139, 142, 143, 144, 145, 147, 148, 149, 151, 152, 157, 158, 160, 169, 170, 178, 180, 183, 184, 185, 186, 209, 211, 212, 217, 218, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 284, 286, 289, 290, 292, 296, 297, 298, 299, 301, 303, 304, 306, 307, 308, 311, 313, 314, 315, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 332, 335, 338, 341, 344, 345, 346, 347, 349, 352, 353, 354, 355, 357, 358, 361, 364, 367, 369], "g": [1, 2, 3, 10, 12, 15, 18, 20, 21, 22, 23, 24, 32, 37, 38, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 71, 72, 75, 76, 78, 80, 81, 82, 85, 86, 87, 89, 90, 95, 97, 99, 101, 102, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 127, 128, 129, 132, 136, 137, 138, 142, 143, 144, 145, 152, 154, 157, 158, 159, 160, 162, 169, 170, 178, 180, 181, 185, 186, 211, 212, 213, 217, 218, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 261, 262, 264, 266, 268, 270, 271, 273, 276, 285, 289, 292, 295, 298, 299, 306, 310, 311, 314, 317, 318, 324, 327, 329, 330, 331, 332, 338, 339, 341, 342, 343, 345, 347, 349, 352, 353, 354, 357, 362, 364, 367, 368, 369], "h": [1, 10, 47, 49, 55, 57, 59, 66, 72, 75, 76, 77, 78, 81, 83, 85, 86, 87, 89, 90, 92, 94, 97, 98, 99, 106, 109, 110, 111, 116, 117, 118, 120, 125, 130, 132, 136, 142, 143, 144, 145, 147, 148, 149, 153, 156, 157, 158, 161, 178, 180, 184, 185, 188, 209, 217, 222, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 237, 239, 266, 267, 270, 273, 278, 280, 281, 284, 285, 288, 289, 291, 292, 294, 296, 297, 298, 299, 300, 301, 304, 309, 311, 335, 337, 338, 341, 345, 347, 349, 353, 357, 358, 364, 368], "extend": [1, 2, 10, 18, 46, 50, 56, 58, 59, 60, 64, 67, 68, 71, 90, 92, 97, 99, 106, 107, 120, 122, 130, 142, 143, 144, 145, 147, 149, 161, 162, 178, 185, 186, 190, 210, 211, 212, 217, 222, 232, 233, 235, 238, 239, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 261, 263, 268, 269, 270, 275, 299, 301, 309, 310, 335, 338, 341, 343, 345, 354, 357, 358], "weyl": [1, 3, 33, 36, 48, 58, 61, 63, 112, 114, 130, 131, 158, 170, 184, 188, 208, 217, 222, 223, 224, 225, 231, 232, 233, 234, 235, 238, 239, 240, 241, 262, 268, 299, 338], "fundament": [1, 15, 24, 38, 53, 55, 56, 57, 58, 59, 65, 108, 142, 143, 144, 145, 160, 170, 178, 213, 217, 218, 222, 224, 229, 232, 233, 235, 236, 237, 239, 241, 248, 254, 261, 262, 264, 266, 267, 268, 269, 270, 299, 335, 349], "fold": [1, 38, 144, 210, 211, 217, 222, 224, 235, 239], "mark": [1, 11, 18, 21, 28, 58, 61, 100, 130, 137, 158, 160, 180, 208, 213, 214, 217, 224, 229, 230, 233, 238, 239, 300, 318, 341, 354, 357, 360], "node": [1, 2, 8, 10, 11, 24, 35, 38, 45, 50, 55, 57, 84, 97, 100, 106, 118, 122, 128, 154, 156, 158, 160, 162, 208, 209, 217, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 265, 266, 267, 268, 269, 271, 272, 311, 327, 333, 342, 343, 349, 354, 360], "reduc": [1, 3, 12, 18, 21, 22, 23, 24, 36, 49, 50, 53, 61, 62, 63, 67, 71, 78, 96, 112, 118, 128, 130, 144, 158, 170, 178, 179, 180, 183, 184, 185, 213, 217, 220, 221, 222, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 268, 270, 271, 273, 274, 299, 307, 309, 310, 332, 335, 338, 341, 343, 349, 354, 357, 369], "relabel": [1, 21, 32, 55, 86, 87, 88, 89, 93, 94, 106, 107, 108, 128, 178, 180, 181, 185, 208, 217, 223, 224, 226, 227, 228, 237, 239, 254, 256, 262, 263, 264, 265, 267, 314, 322, 324, 327, 328, 336, 368], "charact": [1, 32, 81, 99, 106, 114, 136, 152, 158, 217, 222, 224, 232, 236, 238, 271, 275, 277, 298, 299, 300, 306, 339, 353], "ring": [1, 6, 8, 10, 15, 16, 18, 22, 24, 25, 57, 73, 75, 78, 81, 83, 87, 88, 89, 90, 97, 99, 106, 107, 108, 109, 110, 111, 112, 114, 117, 125, 126, 129, 132, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 157, 158, 161, 162, 166, 170, 178, 179, 180, 183, 185, 186, 190, 217, 218, 222, 223, 225, 227, 229, 230, 231, 232, 233, 236, 238, 239, 240, 241, 242, 244, 261, 267, 268, 269, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 306, 307, 314, 316, 317, 318, 324, 327, 330, 335, 338, 339, 342, 349, 357, 358, 362, 369], "unord": [1, 25, 27, 101, 125, 154, 158, 275, 305, 348], "robinson": [1, 10, 13, 28, 101, 118, 158, 170, 341, 354], "schenst": [1, 10, 13, 28, 101, 118, 158, 170, 310, 341, 354], "knuth": [1, 10, 13, 98, 99, 101, 114, 118, 135, 137, 145, 158, 168, 171, 275, 310, 311, 341], "schubert": [1, 14, 132, 286, 292], "classic": [1, 3, 16, 21, 22, 35, 45, 48, 51, 53, 55, 56, 57, 58, 65, 67, 99, 106, 108, 118, 119, 143, 144, 153, 156, 185, 187, 208, 209, 212, 213, 216, 219, 222, 224, 229, 230, 231, 232, 233, 235, 238, 239, 241, 243, 246, 247, 249, 251, 253, 255, 257, 261, 262, 263, 264, 266, 268, 270, 271, 273, 275, 277, 282, 289, 296, 298, 299, 300, 301, 303, 311, 338, 344, 347, 349], "littlewood": [1, 119, 132, 144, 213, 277, 280, 287, 288, 289, 292, 294, 298, 299, 300], "basi": [1, 11, 15, 16, 54, 58, 73, 97, 99, 108, 109, 110, 111, 117, 139, 141, 142, 143, 144, 145, 147, 148, 149, 158, 159, 160, 161, 162, 170, 178, 179, 183, 185, 190, 218, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 252, 254, 256, 261, 267, 268, 269, 270, 271, 274, 277, 278, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 318, 337, 338, 341, 343, 356, 357], "homogen": [1, 76, 106, 132, 137, 142, 143, 144, 145, 148, 149, 158, 161, 277, 280, 281, 282, 290, 291, 292, 296, 297, 298, 299, 301, 311, 318, 341, 343, 369], "jack": [1, 158, 277, 298, 299, 349], "quotient": [1, 3, 10, 11, 15, 18, 106, 110, 119, 127, 154, 158, 180, 224, 277, 281, 296, 297, 298, 299, 301, 309, 345, 349], "ideal": [1, 10, 18, 97, 112, 118, 166, 178, 184, 185, 234, 239, 277, 298, 306, 358], "kostka": [1, 277, 289, 299], "foulk": [1, 277], "llt": [1, 160, 277, 298, 299, 354], "multipl": [1, 3, 9, 10, 21, 24, 25, 29, 32, 33, 50, 53, 56, 58, 69, 73, 75, 76, 81, 83, 87, 89, 106, 108, 111, 114, 118, 120, 129, 130, 136, 137, 139, 142, 143, 144, 145, 147, 148, 149, 158, 162, 170, 171, 178, 179, 183, 185, 190, 208, 209, 212, 213, 214, 218, 222, 223, 228, 229, 232, 233, 236, 237, 239, 240, 261, 263, 268, 270, 277, 280, 281, 282, 285, 288, 289, 292, 294, 296, 299, 300, 301, 311, 316, 318, 331, 338, 349, 354, 357, 369], "schur": [1, 15, 99, 110, 114, 130, 141, 143, 144, 145, 158, 161, 186, 238, 270, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 294, 295, 296, 298, 299, 300, 301, 310, 337, 341], "defin": [1, 2, 3, 6, 9, 10, 11, 15, 16, 18, 21, 22, 23, 24, 25, 28, 29, 32, 38, 45, 47, 50, 53, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 73, 75, 76, 78, 81, 86, 87, 88, 89, 93, 95, 97, 99, 100, 105, 106, 107, 108, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 125, 127, 128, 129, 130, 132, 136, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 158, 160, 161, 162, 166, 167, 174, 178, 179, 180, 181, 183, 184, 185, 186, 209, 212, 213, 219, 222, 224, 225, 227, 229, 230, 232, 233, 235, 236, 237, 238, 239, 241, 242, 261, 263, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 280, 281, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 318, 319, 321, 325, 327, 328, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 349, 351, 352, 354, 355, 357, 358, 359, 360, 361, 363, 364, 367, 368, 369], "triangular": [1, 22, 25, 114, 118, 144, 275, 277, 311, 347, 369], "power": [1, 6, 9, 10, 16, 57, 58, 73, 75, 76, 78, 81, 83, 85, 86, 87, 89, 90, 92, 95, 99, 106, 108, 119, 136, 143, 144, 145, 147, 149, 157, 158, 162, 167, 184, 185, 186, 218, 222, 232, 233, 236, 242, 270, 277, 280, 281, 282, 284, 285, 289, 290, 292, 295, 297, 298, 299, 301, 311, 318, 346, 347, 349, 354, 357, 369], "symplect": [1, 222, 270, 277, 298], "witt": [1, 76, 79, 87, 277, 281, 291, 296, 297, 298, 299], "shard": [1, 173, 184], "intersect": [1, 18, 29, 75, 76, 78, 86, 87, 88, 89, 90, 106, 110, 113, 128, 137, 158, 173, 180, 184, 185, 218, 219, 235, 236, 239, 275, 309, 345, 358], "prime": [1, 9, 13, 25, 37, 45, 53, 56, 67, 75, 76, 78, 81, 83, 85, 86, 89, 90, 92, 95, 99, 119, 136, 137, 142, 158, 162, 178, 180, 185, 186, 212, 213, 280, 281, 282, 284, 296, 297, 299, 311, 333, 336, 342, 349, 352, 353, 364], "shuffl": [1, 10, 16, 18, 29, 101, 108, 109, 139, 144, 157, 170, 310, 338, 351, 354], "sidon": [1, 101], "similar": [1, 9, 10, 18, 55, 60, 78, 88, 101, 106, 108, 112, 118, 121, 132, 136, 143, 155, 170, 224, 229, 236, 238, 273, 301, 331, 342, 347, 349], "entri": [1, 3, 6, 10, 15, 16, 18, 22, 25, 29, 31, 36, 49, 53, 55, 63, 67, 73, 75, 80, 82, 88, 89, 96, 97, 98, 99, 101, 102, 106, 114, 118, 120, 124, 125, 127, 128, 130, 135, 136, 137, 138, 139, 142, 143, 144, 154, 155, 156, 157, 158, 159, 161, 162, 165, 166, 168, 170, 178, 180, 184, 185, 193, 194, 212, 213, 214, 223, 226, 236, 237, 263, 268, 270, 272, 273, 275, 276, 282, 292, 293, 298, 299, 303, 308, 310, 311, 333, 336, 337, 338, 339, 340, 341, 343, 349, 350, 352, 354, 357, 368], "sine": 1, "gordon": [1, 77], "y": [1, 9, 10, 11, 15, 16, 18, 21, 25, 32, 38, 45, 48, 50, 55, 57, 58, 59, 63, 65, 66, 72, 75, 76, 80, 81, 87, 89, 92, 95, 97, 99, 100, 108, 109, 110, 111, 114, 117, 118, 122, 128, 131, 136, 137, 142, 143, 144, 145, 147, 148, 149, 152, 154, 156, 158, 159, 160, 161, 170, 172, 178, 179, 180, 183, 184, 185, 186, 187, 208, 212, 222, 224, 228, 229, 230, 231, 233, 236, 237, 238, 239, 261, 272, 273, 275, 276, 280, 281, 282, 284, 286, 289, 290, 292, 296, 297, 298, 299, 303, 304, 310, 311, 316, 318, 331, 333, 335, 338, 340, 341, 344, 346, 347, 349, 353, 354, 357, 358, 360, 361, 364, 367, 368, 369], "plotter": [1, 132], "six": [1, 6, 101, 113, 132, 229, 235, 345, 358, 369], "vertex": [1, 2, 6, 10, 18, 21, 22, 32, 38, 50, 61, 71, 87, 94, 95, 97, 99, 101, 106, 109, 111, 113, 115, 117, 118, 128, 136, 137, 154, 176, 178, 180, 185, 219, 235, 237, 272, 292, 299, 335, 339, 346, 349, 354, 368], "skew": [1, 13, 18, 21, 22, 29, 36, 49, 81, 96, 114, 118, 130, 136, 139, 142, 143, 144, 155, 158, 165, 166, 167, 168, 193, 194, 222, 233, 288, 298, 299, 303, 340, 341], "some": [1, 2, 9, 10, 15, 16, 18, 25, 29, 34, 38, 45, 47, 50, 51, 52, 55, 56, 60, 64, 67, 70, 75, 76, 77, 80, 81, 83, 85, 86, 87, 89, 90, 91, 96, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 120, 121, 122, 125, 128, 129, 130, 134, 136, 137, 139, 143, 144, 147, 149, 154, 156, 158, 159, 162, 166, 169, 170, 178, 179, 180, 181, 183, 184, 185, 189, 190, 193, 199, 200, 201, 203, 204, 205, 206, 222, 223, 224, 226, 227, 229, 230, 231, 233, 235, 236, 238, 239, 240, 241, 246, 262, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 283, 284, 289, 292, 294, 296, 297, 298, 299, 300, 301, 303, 306, 309, 310, 318, 327, 331, 332, 334, 337, 338, 340, 341, 342, 343, 347, 354, 357, 358, 360, 364, 368], "sloan": [1, 34, 136, 272, 349], "tabl": [1, 10, 25, 34, 48, 55, 88, 137, 149, 155, 185, 222, 236, 268, 271, 275, 283, 298, 306, 354], "characterist": [1, 9, 16, 32, 99, 106, 157, 158, 160, 162, 183, 185, 232, 236, 298, 299, 311, 312, 338, 341, 342, 343, 349, 357, 364, 369], "cycl": [1, 21, 24, 25, 32, 84, 87, 99, 100, 106, 107, 137, 144, 158, 169, 170, 184, 185, 235, 266, 275, 283, 296, 298, 299, 306, 311, 312, 318, 327, 337, 338, 349, 354, 357, 361, 364, 365], "empti": [1, 2, 10, 12, 29, 32, 38, 45, 53, 55, 60, 72, 73, 75, 77, 80, 84, 87, 89, 96, 97, 99, 100, 106, 107, 114, 117, 118, 125, 127, 128, 130, 134, 136, 137, 139, 142, 143, 147, 149, 154, 155, 156, 157, 158, 160, 162, 169, 170, 178, 180, 182, 185, 190, 211, 224, 228, 235, 237, 238, 239, 272, 273, 275, 276, 280, 298, 299, 304, 309, 310, 311, 312, 313, 325, 331, 336, 341, 343, 345, 349, 352, 354, 356, 357, 360, 361, 362, 365], "functori": [1, 12, 41, 299, 312, 318, 327], "exampl": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 196, 197, 198, 202, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "satisfi": [1, 2, 10, 15, 16, 20, 21, 25, 29, 45, 47, 50, 59, 61, 71, 75, 76, 81, 87, 88, 89, 90, 91, 95, 96, 99, 101, 105, 108, 109, 111, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 136, 137, 139, 141, 142, 143, 144, 145, 148, 157, 158, 168, 170, 178, 185, 186, 209, 213, 223, 233, 238, 273, 275, 280, 281, 284, 296, 297, 299, 301, 318, 327, 328, 335, 338, 340, 341, 349, 350, 354, 364, 369], "hereditari": [1, 101, 271], "properti": [1, 2, 3, 10, 22, 25, 29, 45, 47, 67, 71, 75, 76, 80, 88, 96, 97, 99, 101, 119, 128, 136, 143, 149, 154, 158, 169, 170, 178, 180, 184, 185, 190, 223, 224, 235, 240, 262, 268, 274, 275, 278, 292, 294, 298, 299, 300, 306, 318, 335, 338, 344, 349, 354, 357, 369], "whose": [1, 2, 7, 10, 11, 15, 16, 21, 22, 26, 29, 40, 45, 47, 50, 55, 62, 63, 64, 71, 73, 76, 78, 86, 87, 89, 90, 96, 99, 100, 102, 106, 108, 110, 118, 120, 125, 127, 128, 130, 132, 136, 139, 142, 143, 144, 148, 149, 154, 156, 157, 158, 170, 172, 178, 179, 180, 184, 185, 186, 187, 193, 194, 209, 212, 220, 229, 230, 233, 234, 236, 239, 240, 270, 273, 275, 276, 286, 290, 298, 299, 302, 304, 305, 306, 308, 309, 310, 313, 315, 318, 320, 322, 323, 326, 329, 331, 332, 335, 336, 341, 343, 346, 349, 350, 352, 354, 357, 360, 369], "predic": 1, "pairwis": [1, 25, 75, 80, 89, 90, 92, 118, 137, 158, 170, 185, 275, 276, 338], "subword": [1, 8, 23, 27, 101, 112, 234, 354], "residu": [1, 3, 13, 36, 60, 78, 130, 136, 158, 160, 162, 170, 306, 341, 343], "tableautupl": [1, 13, 341, 342], "tile": [1, 6, 81, 96, 101, 118, 172, 194, 224, 235, 357, 358, 364], "solver": [1, 75, 87, 89, 90, 125, 132, 134, 185], "transit": [1, 10, 32, 45, 57, 81, 84, 106, 107, 136, 170, 178, 181, 185, 229, 233, 275, 280, 282, 283, 289, 292, 299, 301, 302, 341, 347, 349, 354, 360], "closur": [1, 57, 106, 170, 185, 275, 302, 352, 354, 364], "triangl": [1, 6, 22, 25, 75, 76, 99, 103, 114, 132, 185, 224, 311, 349, 358], "fan": [1, 21, 335], "infinit": [1, 7, 12, 16, 18, 20, 21, 22, 25, 29, 37, 56, 64, 67, 89, 106, 108, 109, 111, 112, 118, 119, 122, 127, 128, 137, 158, 162, 184, 190, 224, 226, 227, 232, 237, 239, 268, 269, 281, 284, 286, 290, 296, 297, 299, 310, 318, 342, 343, 346, 349, 351, 353, 354, 357, 361, 362, 364, 367, 369], "lyndon": [1, 26, 101, 144, 299, 354], "morphism": [1, 15, 47, 52, 55, 73, 110, 119, 142, 143, 144, 145, 147, 148, 161, 179, 185, 190, 197, 212, 229, 231, 238, 239, 240, 263, 268, 269, 270, 298, 299, 338, 351, 352, 354, 355, 361, 364, 367], "suffix": [1, 18, 21, 100, 351, 352, 354, 362, 363], "tri": [1, 136, 178, 349, 351, 361], "datatyp": [1, 272, 351, 354, 357, 361], "us": [1, 2, 3, 6, 10, 12, 15, 16, 18, 20, 21, 22, 25, 26, 27, 28, 29, 32, 33, 35, 36, 38, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 81, 83, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 178, 180, 181, 183, 184, 185, 186, 190, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 252, 254, 256, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 280, 281, 282, 284, 285, 286, 289, 290, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 318, 325, 328, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 347, 351, 352, 353, 354, 357, 358, 359, 360, 361, 363, 364, 367, 369], "unsign": [1, 171, 186, 311, 351, 361], "char": [1, 106, 351, 361], "callabl": [1, 10, 106, 107, 122, 132, 154, 351, 352, 354, 357, 358, 361, 364, 368], "user": [1, 16, 18, 20, 21, 29, 105, 106, 118, 123, 125, 130, 132, 139, 156, 171, 178, 196, 208, 212, 214, 224, 235, 273, 305, 333, 338, 347, 349, 351, 368], "customiz": [1, 351], "option": [1, 2, 3, 10, 15, 16, 18, 20, 22, 24, 25, 28, 29, 32, 38, 45, 46, 48, 51, 52, 55, 56, 57, 58, 59, 61, 64, 67, 75, 76, 77, 78, 79, 81, 84, 85, 87, 95, 96, 97, 99, 100, 105, 106, 108, 110, 113, 118, 122, 126, 128, 129, 130, 131, 132, 134, 136, 137, 139, 142, 143, 144, 145, 147, 148, 149, 152, 154, 155, 156, 158, 160, 162, 166, 170, 172, 178, 180, 181, 184, 185, 186, 187, 188, 190, 193, 194, 208, 209, 210, 211, 212, 213, 215, 216, 222, 224, 225, 226, 227, 228, 229, 232, 235, 236, 237, 238, 239, 241, 242, 263, 265, 270, 271, 272, 273, 275, 276, 280, 282, 285, 287, 289, 292, 296, 297, 298, 299, 301, 303, 306, 308, 309, 310, 325, 327, 328, 330, 331, 334, 335, 337, 338, 341, 342, 343, 344, 345, 349, 351, 352, 353, 354, 356, 357, 358, 360, 361, 363, 364, 367, 369], "yang": [1, 4, 339], "purpos": [2, 28, 83, 106, 122, 165, 189, 193, 222, 231, 234, 235, 239, 265, 318, 321, 341, 360], "help": [2, 28, 67, 78, 90, 105, 122, 185, 233, 235, 358], "implement": [2, 3, 6, 9, 10, 15, 16, 18, 21, 22, 23, 25, 26, 27, 28, 29, 33, 35, 38, 40, 41, 45, 48, 52, 55, 57, 58, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 103, 105, 106, 110, 111, 112, 114, 120, 121, 123, 125, 127, 128, 130, 131, 132, 134, 136, 137, 139, 142, 143, 144, 145, 149, 151, 154, 158, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 177, 179, 180, 184, 185, 186, 189, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 213, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 250, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 282, 285, 286, 289, 292, 293, 298, 299, 302, 303, 306, 307, 310, 311, 313, 316, 317, 318, 327, 332, 333, 334, 335, 338, 339, 341, 342, 343, 352, 354, 357, 358, 359, 360, 368, 369], "specif": [2, 3, 16, 29, 50, 54, 61, 67, 68, 90, 93, 96, 106, 121, 122, 128, 129, 134, 136, 144, 158, 161, 178, 180, 185, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 222, 224, 234, 273, 284, 296, 298, 310, 318, 341, 347, 349, 354, 355, 358, 360, 367], "children": [2, 7, 10, 84, 102, 122, 127, 128, 154, 272, 333, 349], "each": [2, 6, 10, 15, 16, 18, 21, 22, 24, 25, 29, 38, 45, 47, 50, 53, 55, 58, 59, 61, 63, 67, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 94, 95, 97, 99, 100, 103, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 124, 127, 128, 130, 132, 134, 136, 137, 138, 139, 142, 143, 144, 145, 152, 154, 155, 156, 157, 158, 159, 160, 162, 168, 169, 170, 174, 178, 180, 184, 185, 189, 190, 193, 194, 196, 202, 204, 206, 208, 212, 213, 214, 216, 222, 223, 224, 229, 230, 232, 233, 235, 236, 237, 239, 268, 270, 271, 272, 273, 274, 275, 290, 298, 299, 302, 303, 306, 307, 308, 309, 310, 311, 314, 317, 318, 322, 324, 325, 330, 331, 333, 336, 337, 338, 340, 341, 343, 344, 345, 349, 352, 354, 357, 358, 360, 364, 367, 369], "instanc": [2, 6, 10, 25, 28, 29, 35, 49, 53, 55, 57, 68, 70, 71, 75, 86, 87, 94, 96, 102, 106, 110, 113, 123, 128, 129, 132, 134, 137, 138, 139, 143, 154, 158, 161, 165, 166, 168, 170, 171, 172, 180, 184, 185, 190, 218, 222, 236, 272, 273, 281, 282, 284, 285, 288, 290, 294, 295, 296, 297, 298, 299, 300, 301, 338, 341, 349, 352, 354, 357, 363, 364, 369], "one": [2, 3, 6, 7, 10, 11, 16, 18, 21, 22, 23, 24, 25, 28, 29, 32, 36, 38, 40, 45, 46, 48, 50, 51, 53, 55, 56, 57, 58, 59, 64, 67, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 122, 125, 128, 130, 132, 134, 136, 137, 139, 143, 144, 145, 147, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 166, 169, 170, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 193, 196, 208, 209, 212, 213, 218, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 252, 254, 261, 262, 263, 268, 269, 270, 271, 272, 273, 274, 275, 280, 286, 289, 290, 292, 294, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 311, 313, 326, 327, 328, 331, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 360, 364, 367, 369], "could": [2, 10, 18, 22, 28, 77, 97, 99, 106, 107, 118, 122, 136, 143, 144, 145, 154, 155, 158, 170, 178, 180, 222, 233, 235, 239, 262, 268, 272, 304, 306, 343, 349, 369], "want": [2, 10, 18, 21, 25, 56, 67, 75, 76, 82, 83, 85, 86, 87, 88, 89, 90, 92, 101, 106, 121, 122, 125, 130, 134, 136, 138, 143, 154, 156, 158, 170, 178, 185, 212, 213, 216, 222, 223, 224, 229, 232, 233, 235, 238, 270, 271, 272, 275, 306, 309, 311, 338, 343, 349, 358], "which": [2, 3, 6, 7, 8, 9, 10, 11, 15, 16, 18, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 38, 40, 45, 46, 47, 48, 50, 53, 55, 57, 58, 59, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 107, 108, 110, 112, 113, 114, 116, 118, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 135, 136, 139, 141, 142, 143, 144, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 172, 174, 178, 179, 180, 182, 185, 186, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 218, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 254, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 296, 297, 298, 299, 301, 304, 306, 308, 309, 310, 311, 318, 327, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 349, 350, 352, 353, 354, 357, 358, 360, 361, 363, 364, 369], "its": [2, 3, 6, 7, 10, 12, 15, 16, 18, 22, 23, 24, 25, 28, 29, 38, 45, 55, 57, 58, 63, 67, 71, 75, 76, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 99, 100, 102, 105, 106, 108, 110, 111, 112, 113, 114, 117, 118, 120, 122, 123, 125, 127, 128, 129, 130, 132, 136, 139, 142, 143, 144, 147, 148, 149, 151, 154, 156, 157, 158, 162, 163, 169, 170, 172, 174, 178, 180, 181, 185, 208, 209, 214, 218, 222, 223, 224, 229, 233, 235, 236, 238, 239, 240, 241, 261, 262, 264, 265, 269, 270, 271, 272, 273, 275, 276, 281, 284, 290, 295, 296, 297, 298, 299, 301, 309, 310, 311, 313, 318, 326, 328, 331, 332, 335, 338, 341, 342, 343, 349, 350, 352, 354, 356, 357, 358, 364, 367, 369], "linearli": [2, 18, 147, 149, 236, 269, 335], "modul": [2, 7, 10, 16, 25, 28, 29, 38, 47, 51, 53, 55, 57, 58, 67, 71, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 106, 107, 108, 111, 117, 118, 120, 125, 128, 132, 136, 139, 142, 143, 144, 145, 156, 158, 160, 161, 162, 170, 178, 180, 181, 184, 185, 195, 209, 213, 215, 231, 233, 239, 240, 241, 268, 269, 270, 275, 286, 289, 292, 299, 301, 303, 306, 311, 312, 337, 338, 341, 342, 343, 345, 351, 352, 357, 358, 359], "conceptu": 2, "from": [2, 3, 6, 7, 8, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 254, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 318, 321, 322, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369], "ani": [2, 8, 9, 10, 12, 16, 18, 21, 25, 29, 45, 47, 50, 52, 53, 55, 56, 57, 58, 64, 66, 67, 68, 73, 75, 76, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 105, 106, 107, 108, 112, 114, 118, 119, 120, 121, 122, 125, 127, 128, 130, 132, 137, 139, 142, 143, 144, 145, 152, 154, 158, 161, 162, 167, 168, 170, 171, 176, 178, 180, 181, 184, 185, 189, 190, 194, 208, 212, 222, 223, 224, 226, 229, 232, 233, 235, 236, 239, 240, 241, 262, 263, 268, 269, 270, 272, 273, 274, 275, 276, 280, 281, 284, 290, 292, 296, 297, 298, 299, 301, 305, 306, 308, 310, 311, 313, 331, 335, 338, 339, 341, 343, 345, 349, 354, 357, 358, 361, 363, 364, 367, 369], "contain": [2, 3, 6, 7, 10, 11, 16, 18, 19, 20, 21, 23, 25, 29, 32, 33, 40, 47, 53, 55, 59, 63, 67, 69, 71, 72, 75, 76, 77, 78, 80, 81, 83, 84, 87, 89, 90, 92, 94, 95, 96, 97, 99, 100, 106, 107, 108, 112, 115, 118, 120, 121, 122, 125, 127, 128, 129, 130, 132, 134, 136, 137, 141, 143, 144, 145, 147, 149, 152, 153, 154, 156, 158, 159, 161, 162, 170, 172, 178, 179, 180, 181, 183, 184, 185, 188, 190, 194, 196, 215, 218, 222, 223, 224, 226, 227, 228, 232, 233, 234, 235, 236, 239, 241, 270, 273, 275, 289, 298, 302, 307, 309, 310, 311, 331, 335, 336, 338, 340, 341, 342, 343, 344, 345, 348, 349, 354, 357, 358, 359, 360, 363, 364, 367], "other": [2, 3, 8, 10, 15, 16, 18, 22, 25, 27, 29, 32, 33, 40, 45, 47, 50, 51, 52, 55, 57, 58, 67, 73, 75, 76, 78, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 114, 118, 120, 122, 125, 128, 129, 134, 136, 137, 139, 142, 143, 144, 145, 147, 152, 153, 154, 157, 158, 162, 167, 169, 170, 174, 178, 180, 184, 185, 186, 189, 190, 196, 202, 209, 213, 222, 224, 228, 229, 231, 233, 235, 236, 237, 238, 239, 241, 246, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 275, 276, 280, 290, 292, 294, 298, 299, 300, 301, 304, 309, 311, 313, 318, 327, 331, 333, 335, 337, 338, 341, 342, 344, 345, 347, 352, 353, 354, 357, 358, 360, 361, 362, 363, 364, 367], "inde": [2, 25, 29, 45, 70, 71, 78, 86, 89, 106, 107, 110, 128, 129, 144, 158, 170, 181, 185, 232, 233, 235, 236, 238, 290, 298, 299, 310, 338, 354, 357], "list": [2, 3, 6, 7, 9, 10, 12, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 141, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 181, 184, 188, 189, 190, 193, 194, 208, 209, 212, 213, 215, 216, 219, 220, 221, 222, 223, 224, 227, 231, 232, 233, 235, 236, 237, 238, 239, 241, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 280, 281, 285, 286, 287, 288, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "thu": [2, 3, 9, 10, 16, 18, 20, 21, 24, 25, 29, 67, 73, 78, 81, 86, 89, 90, 97, 99, 106, 107, 108, 114, 118, 119, 120, 127, 136, 143, 144, 149, 154, 158, 170, 178, 179, 185, 222, 226, 232, 233, 235, 238, 261, 262, 263, 270, 272, 273, 274, 275, 281, 284, 290, 292, 296, 297, 298, 299, 301, 306, 310, 332, 338, 341, 349, 354, 360], "same": [2, 3, 10, 16, 18, 25, 29, 32, 33, 36, 46, 47, 55, 56, 57, 67, 71, 73, 75, 76, 78, 87, 88, 90, 94, 95, 96, 97, 99, 100, 103, 105, 107, 109, 110, 111, 112, 113, 114, 117, 118, 120, 122, 123, 124, 125, 128, 129, 130, 132, 134, 136, 137, 142, 143, 144, 145, 147, 149, 152, 154, 156, 157, 158, 159, 160, 161, 162, 169, 170, 171, 178, 180, 181, 184, 185, 190, 199, 200, 201, 203, 204, 205, 206, 209, 211, 213, 215, 221, 222, 224, 229, 231, 232, 233, 235, 236, 239, 240, 241, 244, 246, 262, 270, 271, 272, 273, 275, 276, 280, 282, 286, 289, 290, 292, 293, 297, 298, 299, 301, 306, 307, 308, 309, 310, 313, 331, 332, 334, 337, 338, 340, 341, 342, 343, 345, 347, 349, 350, 352, 353, 354, 357, 358, 362, 364, 367], "done": [2, 6, 24, 28, 50, 71, 73, 90, 94, 105, 106, 134, 136, 158, 170, 178, 181, 183, 231, 236, 239, 272, 273, 280, 285, 298, 325, 341, 345, 354, 356, 357, 363], "kind": [2, 25, 26, 78, 89, 96, 112, 134, 143, 144, 170, 185, 186, 239, 273, 275, 276, 304, 311, 347, 349, 358], "while": [2, 3, 10, 18, 26, 67, 71, 75, 76, 78, 80, 81, 90, 93, 94, 98, 105, 106, 113, 122, 132, 137, 142, 143, 144, 158, 170, 171, 181, 212, 222, 224, 236, 244, 270, 273, 276, 296, 299, 301, 306, 307, 338, 341, 349, 364], "suffici": [2, 25, 57, 87, 90, 94, 106, 270, 298], "encod": [2, 6, 15, 18, 22, 29, 60, 63, 94, 99, 107, 118, 120, 154, 166, 170, 185, 222, 226, 228, 232, 235, 272, 273, 331, 338, 341, 347, 349, 354, 358, 364], "prove": [2, 22, 25, 76, 78, 83, 88, 92, 122, 128, 136, 160, 349, 357], "have": [2, 3, 10, 16, 18, 21, 22, 25, 29, 31, 32, 33, 43, 44, 45, 47, 50, 51, 54, 56, 57, 59, 60, 61, 64, 67, 68, 71, 73, 75, 76, 77, 78, 81, 83, 86, 87, 88, 89, 90, 93, 94, 97, 99, 100, 102, 105, 106, 107, 108, 110, 111, 113, 118, 119, 121, 125, 128, 129, 130, 132, 134, 136, 137, 139, 142, 143, 144, 145, 148, 152, 154, 156, 158, 161, 162, 165, 169, 170, 175, 178, 180, 181, 182, 184, 185, 189, 190, 196, 208, 209, 212, 213, 214, 215, 218, 222, 223, 224, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 248, 256, 261, 262, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 284, 286, 290, 291, 292, 293, 296, 297, 298, 299, 303, 305, 306, 309, 310, 311, 318, 327, 328, 331, 332, 338, 340, 341, 342, 343, 345, 347, 349, 352, 353, 354, 356, 357, 360, 361, 364, 366, 369], "method": [2, 3, 4, 6, 8, 9, 10, 16, 18, 20, 21, 22, 25, 28, 29, 32, 33, 35, 38, 39, 45, 49, 51, 55, 58, 67, 68, 70, 75, 78, 79, 80, 84, 86, 88, 89, 90, 92, 96, 97, 99, 100, 102, 110, 111, 112, 113, 117, 118, 121, 122, 124, 125, 127, 128, 130, 131, 132, 134, 136, 139, 142, 143, 144, 145, 147, 149, 154, 156, 158, 162, 165, 166, 167, 169, 171, 172, 174, 178, 184, 189, 194, 199, 200, 201, 203, 204, 205, 206, 212, 214, 217, 218, 219, 222, 224, 228, 229, 231, 232, 233, 234, 235, 236, 239, 240, 261, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 282, 284, 285, 286, 288, 289, 290, 292, 295, 296, 297, 298, 299, 300, 301, 303, 309, 310, 318, 325, 328, 331, 334, 335, 338, 339, 340, 341, 342, 345, 346, 347, 349, 351, 354, 357, 358, 362, 363, 364, 367, 368, 369], "avail": [2, 22, 75, 76, 77, 78, 81, 82, 84, 86, 87, 88, 89, 90, 91, 94, 99, 100, 106, 107, 110, 136, 137, 142, 145, 147, 148, 153, 156, 157, 158, 162, 164, 170, 178, 184, 185, 190, 222, 224, 226, 227, 236, 237, 238, 239, 241, 270, 275, 302, 332, 338, 340, 344, 349, 353, 354, 357, 358, 360], "like": [2, 3, 10, 15, 16, 18, 22, 29, 57, 84, 97, 106, 110, 118, 122, 138, 143, 156, 157, 158, 161, 162, 171, 180, 185, 222, 235, 241, 250, 273, 275, 318, 321, 341, 343, 349, 354, 358, 361], "test": [2, 3, 12, 16, 25, 29, 32, 38, 45, 48, 50, 55, 57, 58, 70, 71, 76, 78, 80, 81, 87, 90, 91, 95, 97, 99, 100, 105, 106, 108, 122, 125, 126, 127, 130, 132, 136, 137, 139, 142, 143, 144, 145, 147, 152, 156, 158, 160, 165, 168, 170, 174, 178, 180, 181, 185, 188, 189, 212, 220, 224, 231, 233, 235, 237, 238, 239, 241, 267, 268, 270, 271, 275, 296, 298, 299, 307, 310, 311, 316, 335, 338, 339, 341, 345, 349, 352, 354, 357, 362, 363, 364], "next": [2, 10, 18, 21, 25, 29, 37, 56, 58, 76, 89, 96, 97, 98, 99, 100, 106, 107, 116, 118, 119, 120, 122, 127, 128, 130, 137, 138, 145, 156, 157, 158, 159, 163, 169, 170, 171, 178, 180, 185, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 222, 231, 233, 235, 273, 275, 276, 311, 331, 338, 345, 349, 352, 354, 357, 358, 360, 364, 367], "section": [2, 10, 16, 18, 25, 29, 55, 60, 76, 81, 83, 87, 90, 99, 101, 106, 107, 108, 116, 117, 118, 120, 128, 130, 136, 137, 143, 144, 148, 154, 158, 170, 180, 185, 186, 224, 232, 233, 238, 241, 273, 275, 281, 284, 285, 286, 290, 296, 297, 298, 299, 301, 307, 310, 318, 327, 338, 341, 349, 354, 357, 364], "convers": [2, 25, 71, 95, 97, 99, 105, 107, 114, 121, 143, 144, 145, 151, 156, 161, 178, 180, 185, 222, 268, 270, 272, 279, 280, 290, 294, 298, 299, 300, 301, 347, 349], "digraph": [2, 10, 18, 20, 21, 22, 32, 36, 38, 45, 47, 48, 50, 52, 53, 55, 58, 59, 60, 106, 107, 115, 118, 128, 160, 170, 175, 178, 180, 181, 185, 196, 202, 204, 206, 208, 210, 211, 213, 228, 235, 271, 302, 303, 309, 327, 335, 346, 354, 360, 361, 368], "as_digraph": 2, "automorph": [2, 3, 16, 35, 55, 62, 67, 78, 83, 84, 87, 108, 136, 142, 143, 144, 160, 180, 185, 222, 224, 229, 230, 233, 235, 263, 268, 270, 280, 281, 284, 296, 297, 299, 313, 320, 322, 326, 349], "constrain": [2, 89, 139, 158], "provid": [2, 7, 10, 18, 25, 28, 29, 32, 47, 53, 67, 76, 81, 83, 84, 87, 88, 93, 96, 97, 99, 106, 118, 122, 127, 128, 132, 136, 137, 138, 139, 144, 153, 154, 158, 165, 171, 174, 185, 194, 213, 218, 222, 229, 233, 236, 239, 241, 252, 272, 273, 276, 280, 310, 311, 328, 331, 337, 338, 342, 344, 347, 349, 353, 354, 364, 368], "whole": [2, 75, 86, 87, 97, 100, 106, 143, 154, 180, 185, 272, 275, 303, 307, 310, 311, 341], "abstracttre": 2, "As": [2, 15, 18, 28, 47, 54, 64, 67, 71, 73, 75, 76, 78, 79, 82, 83, 86, 87, 88, 89, 90, 92, 94, 106, 107, 108, 113, 118, 122, 128, 129, 136, 143, 145, 160, 162, 170, 178, 185, 190, 222, 230, 233, 235, 244, 268, 270, 271, 272, 273, 297, 298, 309, 327, 334, 335, 336, 343, 345, 347, 349, 354, 364], "meant": [2, 97, 99, 196, 208, 231, 351, 359], "instanti": [2, 35, 48, 134, 145, 311, 328], "expect": [2, 3, 18, 22, 25, 69, 75, 76, 80, 82, 86, 87, 88, 89, 90, 92, 105, 106, 134, 136, 139, 156, 178, 180, 185, 233, 269, 298, 306, 349, 357], "mai": [2, 11, 16, 18, 25, 29, 33, 45, 47, 48, 50, 53, 59, 60, 67, 70, 72, 75, 76, 81, 82, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 105, 106, 107, 110, 112, 114, 118, 120, 122, 129, 131, 134, 136, 137, 139, 144, 145, 150, 151, 157, 158, 162, 164, 166, 170, 178, 181, 184, 185, 188, 190, 222, 223, 224, 229, 232, 233, 234, 235, 239, 241, 263, 268, 269, 270, 271, 272, 273, 275, 280, 292, 298, 299, 306, 309, 310, 328, 332, 337, 338, 341, 342, 343, 349, 352, 353, 354, 357, 358, 364, 367, 369], "also": [2, 3, 6, 7, 10, 11, 16, 18, 22, 23, 24, 25, 29, 31, 32, 33, 36, 45, 47, 49, 50, 52, 53, 55, 57, 58, 61, 62, 65, 67, 70, 71, 73, 75, 76, 78, 80, 81, 83, 84, 87, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 120, 121, 122, 127, 128, 129, 130, 132, 134, 136, 139, 143, 144, 145, 149, 153, 154, 157, 158, 161, 162, 167, 169, 170, 172, 178, 180, 184, 185, 186, 188, 190, 209, 211, 212, 213, 214, 222, 223, 224, 228, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 261, 262, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 284, 286, 289, 290, 292, 296, 297, 298, 299, 301, 302, 305, 306, 308, 310, 311, 332, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 349, 352, 354, 356, 357, 358, 360, 361, 362, 363, 364, 369], "inherit": [2, 6, 7, 22, 25, 35, 73, 106, 110, 127, 142, 144, 145, 154, 161, 169, 170, 185, 199, 200, 201, 203, 204, 205, 206, 234, 272, 298, 309, 328, 334, 358], "repres": [2, 3, 6, 10, 12, 18, 20, 21, 25, 26, 32, 38, 46, 48, 50, 54, 57, 58, 59, 63, 65, 67, 70, 71, 76, 77, 81, 84, 85, 87, 89, 96, 97, 99, 100, 105, 106, 112, 125, 127, 128, 129, 130, 134, 136, 137, 139, 144, 145, 148, 150, 152, 154, 156, 158, 159, 162, 168, 170, 171, 172, 178, 184, 185, 218, 222, 224, 225, 226, 227, 229, 232, 236, 237, 239, 270, 271, 272, 273, 274, 275, 276, 282, 296, 298, 299, 303, 306, 325, 328, 331, 333, 335, 339, 341, 343, 344, 345, 348, 349, 353, 354, 356, 357, 358, 360, 361, 362, 369], "clonablearrai": [2, 3, 10, 68, 96, 114, 122, 123, 125, 139, 157, 167, 170, 172, 181, 212, 275, 276, 303, 308, 337, 342], "clonablelist": [2, 25, 130, 154, 156, 310, 341], "built": [2, 22, 28, 75, 76, 78, 81, 82, 85, 89, 90, 91, 107, 128, 130, 132, 139, 145, 170, 185, 222, 229, 231, 235, 241, 261, 265, 273, 279, 304, 353, 358], "ar": [2, 3, 6, 8, 9, 10, 12, 15, 16, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 35, 38, 41, 45, 46, 47, 48, 50, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 184, 185, 186, 190, 191, 193, 194, 196, 207, 208, 209, 212, 213, 214, 215, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 248, 252, 254, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 319, 327, 328, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369], "both": [2, 10, 15, 16, 18, 22, 25, 29, 53, 75, 80, 87, 88, 89, 91, 97, 99, 105, 106, 107, 112, 113, 114, 115, 117, 118, 120, 121, 125, 128, 129, 130, 132, 134, 143, 144, 145, 154, 158, 159, 170, 172, 178, 180, 185, 186, 222, 224, 239, 273, 275, 282, 285, 288, 289, 293, 295, 299, 304, 310, 311, 318, 334, 338, 341, 343, 349, 352, 354, 357, 368], "If": [2, 3, 6, 9, 10, 15, 16, 18, 20, 21, 22, 24, 25, 27, 29, 32, 33, 38, 45, 46, 48, 50, 57, 59, 60, 62, 67, 69, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 99, 100, 102, 105, 106, 107, 108, 110, 112, 114, 115, 118, 119, 120, 122, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 169, 170, 173, 178, 180, 184, 185, 186, 190, 209, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 229, 232, 233, 234, 235, 236, 238, 239, 242, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 284, 285, 287, 289, 290, 292, 296, 297, 298, 299, 301, 303, 304, 306, 309, 310, 311, 318, 328, 334, 337, 338, 340, 341, 342, 343, 345, 346, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368], "behav": [2, 16, 25, 29, 87, 106, 143, 162, 170, 235, 273, 289, 298, 343, 349, 361], "consid": [2, 3, 10, 12, 15, 16, 18, 20, 21, 22, 25, 32, 45, 52, 55, 56, 61, 64, 67, 75, 76, 78, 81, 83, 86, 87, 90, 94, 97, 98, 99, 106, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 125, 128, 129, 134, 135, 139, 144, 145, 149, 154, 158, 160, 166, 169, 170, 185, 209, 210, 211, 212, 222, 223, 224, 228, 233, 234, 239, 241, 261, 262, 263, 268, 273, 275, 276, 283, 298, 299, 309, 311, 327, 333, 341, 343, 345, 349, 352, 353, 354, 358, 364, 367], "equal": [2, 3, 6, 8, 10, 18, 22, 24, 29, 30, 55, 57, 64, 67, 71, 76, 80, 87, 89, 90, 94, 99, 100, 102, 106, 107, 110, 111, 113, 118, 120, 124, 125, 128, 130, 132, 134, 136, 137, 139, 141, 142, 143, 144, 145, 148, 149, 156, 157, 158, 160, 162, 170, 172, 174, 178, 180, 184, 185, 190, 208, 212, 213, 222, 229, 230, 232, 233, 234, 236, 240, 241, 262, 272, 273, 275, 276, 278, 285, 286, 292, 296, 298, 299, 303, 304, 305, 306, 308, 309, 310, 311, 325, 335, 338, 340, 341, 342, 343, 345, 347, 350, 352, 353, 354, 357, 358, 364, 367, 369], "obtain": [2, 3, 6, 8, 10, 15, 16, 18, 21, 22, 23, 24, 29, 32, 38, 45, 47, 48, 50, 53, 55, 56, 58, 63, 64, 67, 70, 71, 72, 73, 75, 76, 78, 81, 83, 89, 90, 91, 92, 94, 95, 96, 97, 99, 106, 108, 109, 111, 112, 113, 117, 118, 119, 120, 122, 124, 128, 129, 130, 132, 136, 139, 142, 143, 144, 145, 154, 156, 158, 160, 162, 169, 170, 171, 181, 184, 185, 190, 194, 208, 212, 213, 215, 222, 223, 224, 226, 228, 229, 233, 236, 238, 241, 246, 261, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 281, 292, 293, 295, 296, 297, 298, 299, 301, 303, 305, 306, 310, 311, 334, 335, 338, 341, 342, 343, 347, 349, 350, 352, 354, 357, 358, 359, 360, 361, 364, 368], "through": [2, 6, 7, 10, 18, 22, 25, 29, 45, 52, 71, 75, 76, 78, 79, 83, 84, 86, 91, 92, 93, 94, 97, 99, 106, 107, 110, 112, 116, 122, 130, 142, 143, 149, 157, 158, 169, 170, 173, 178, 184, 185, 213, 215, 222, 224, 229, 237, 270, 271, 275, 276, 282, 298, 301, 332, 338, 341, 343, 349, 351, 354, 367], "id": [2, 97, 99, 106, 157, 213, 236, 241, 341], "should": [2, 3, 10, 12, 16, 18, 21, 22, 25, 32, 35, 38, 40, 46, 50, 51, 57, 58, 67, 68, 71, 78, 81, 87, 89, 90, 96, 97, 99, 106, 110, 117, 118, 122, 123, 126, 127, 128, 130, 132, 137, 144, 145, 152, 153, 154, 155, 156, 158, 160, 170, 178, 184, 185, 189, 196, 208, 218, 219, 224, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 241, 246, 252, 262, 268, 269, 270, 271, 272, 273, 275, 276, 278, 280, 285, 292, 296, 298, 299, 305, 309, 311, 335, 338, 340, 341, 343, 344, 345, 347, 349, 354, 358, 361, 364], "identifi": [2, 10, 55, 97, 102, 108, 109, 122, 162, 166, 185, 229, 230, 261, 263, 349, 354], "index": [2, 3, 9, 10, 11, 15, 16, 18, 22, 23, 24, 25, 28, 29, 32, 37, 38, 40, 41, 45, 47, 53, 55, 57, 58, 59, 60, 64, 66, 67, 68, 73, 76, 86, 87, 89, 90, 96, 97, 98, 99, 108, 109, 110, 111, 112, 117, 118, 120, 122, 125, 129, 132, 134, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 158, 159, 160, 161, 162, 170, 179, 181, 183, 184, 185, 186, 189, 209, 212, 213, 214, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 244, 245, 248, 250, 254, 259, 260, 262, 263, 265, 267, 268, 269, 270, 271, 274, 275, 280, 282, 285, 286, 287, 288, 289, 292, 293, 298, 299, 302, 303, 306, 309, 310, 311, 318, 327, 331, 337, 338, 340, 341, 342, 343, 344, 349, 353, 354, 360, 363, 369], "wai": [2, 10, 16, 25, 29, 32, 45, 52, 54, 71, 73, 75, 78, 89, 90, 94, 96, 97, 99, 106, 109, 116, 117, 118, 122, 128, 130, 132, 137, 139, 143, 144, 145, 152, 157, 158, 160, 162, 164, 170, 180, 184, 185, 209, 215, 216, 219, 222, 232, 233, 235, 241, 262, 263, 264, 266, 273, 275, 276, 281, 284, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 304, 309, 310, 311, 338, 341, 343, 347, 349, 353, 357, 358, 364], "describ": [2, 7, 10, 16, 29, 45, 48, 49, 53, 69, 70, 71, 72, 75, 76, 78, 81, 87, 89, 90, 97, 98, 99, 100, 106, 109, 111, 118, 122, 125, 129, 135, 136, 137, 143, 144, 148, 149, 156, 158, 160, 162, 170, 185, 216, 222, 231, 235, 239, 268, 270, 279, 296, 299, 301, 303, 306, 307, 309, 340, 342, 349, 353, 354, 357, 358, 360, 364], "canon": [2, 10, 15, 16, 21, 32, 55, 56, 58, 76, 87, 100, 102, 108, 110, 112, 127, 142, 143, 147, 154, 160, 162, 166, 180, 185, 224, 234, 235, 241, 261, 262, 264, 266, 269, 280, 298, 306, 329, 338, 343, 345, 349, 357, 360], "label": [2, 10, 16, 18, 20, 21, 22, 32, 38, 55, 76, 87, 96, 97, 99, 106, 107, 111, 112, 117, 118, 122, 128, 130, 132, 152, 154, 157, 158, 160, 161, 167, 169, 170, 180, 181, 184, 185, 193, 194, 208, 212, 213, 219, 224, 226, 228, 230, 235, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 264, 265, 266, 267, 272, 275, 280, 281, 284, 290, 296, 297, 299, 302, 311, 313, 314, 315, 317, 318, 320, 322, 323, 324, 326, 327, 328, 329, 335, 343, 349, 354, 360, 364, 368], "entir": [2, 71, 84, 96, 106, 180, 214, 230, 239, 349, 354], "howev": [2, 10, 16, 21, 29, 53, 57, 73, 78, 81, 88, 92, 96, 99, 106, 107, 111, 114, 118, 122, 136, 139, 144, 145, 149, 154, 155, 158, 161, 170, 185, 190, 212, 213, 222, 223, 224, 228, 229, 235, 239, 261, 265, 268, 269, 270, 272, 276, 292, 294, 298, 299, 300, 301, 332, 341, 349, 357], "hand": [2, 18, 94, 106, 107, 112, 114, 129, 143, 144, 162, 170, 178, 185, 213, 222, 224, 233, 236, 237, 238, 239, 268, 273, 299, 338, 342, 349, 364], "reason": [2, 10, 16, 29, 71, 91, 94, 117, 158, 162, 185, 196, 222, 224, 270, 292, 299, 302, 343, 349, 354, 357], "valu": [2, 3, 9, 10, 18, 20, 21, 22, 25, 29, 32, 38, 48, 49, 50, 53, 55, 57, 58, 59, 60, 65, 67, 71, 72, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 97, 99, 100, 105, 106, 107, 112, 114, 118, 119, 121, 122, 125, 127, 128, 129, 130, 134, 136, 137, 139, 143, 144, 152, 154, 156, 158, 162, 169, 170, 171, 178, 185, 186, 187, 189, 194, 196, 197, 209, 212, 213, 214, 224, 228, 230, 232, 233, 236, 239, 263, 268, 270, 271, 272, 273, 275, 276, 281, 282, 284, 287, 289, 290, 292, 295, 296, 297, 298, 299, 303, 306, 311, 331, 332, 335, 337, 338, 339, 340, 341, 342, 345, 349, 352, 354, 357, 365, 367, 369], "return": [2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369], "canonical_label": [2, 10, 21, 87, 154, 185, 272, 313, 315, 320, 322, 323, 324, 326, 327, 328, 329], "heavili": [2, 71, 90, 298, 343], "depend": [2, 10, 18, 20, 23, 25, 31, 38, 58, 59, 87, 89, 102, 110, 112, 121, 132, 134, 139, 143, 144, 153, 154, 158, 160, 161, 162, 170, 179, 185, 231, 233, 234, 235, 263, 269, 273, 281, 282, 284, 290, 296, 297, 298, 299, 302, 309, 311, 338, 344, 349, 354, 361], "overridden": [2, 106, 154, 224, 239, 268, 273], "most": [2, 3, 6, 9, 10, 12, 18, 21, 22, 25, 27, 29, 31, 32, 33, 36, 45, 50, 53, 55, 58, 67, 71, 72, 73, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 99, 106, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 125, 127, 128, 130, 137, 138, 139, 144, 145, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 180, 182, 184, 185, 186, 187, 189, 190, 212, 216, 218, 219, 222, 224, 225, 226, 227, 228, 233, 235, 236, 238, 239, 240, 241, 250, 268, 269, 270, 271, 272, 273, 275, 280, 286, 289, 290, 292, 298, 299, 301, 303, 305, 306, 309, 310, 311, 327, 331, 338, 341, 342, 343, 344, 345, 349, 352, 354, 356, 357, 358, 360, 361, 363, 364, 367, 369], "incoher": [2, 29, 349], "author": [2, 6, 9, 10, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 31, 33, 38, 47, 49, 50, 52, 53, 58, 59, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 85, 87, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 118, 120, 124, 125, 126, 128, 129, 130, 131, 136, 137, 139, 142, 143, 144, 147, 148, 149, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 185, 186, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 223, 228, 229, 230, 233, 236, 237, 263, 271, 272, 273, 275, 276, 283, 286, 294, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 311, 331, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 349, 350, 352, 353, 354, 355, 357, 358, 361, 364, 367, 368, 369], "florent": [2, 10, 25, 99, 111, 151, 152, 154, 157, 158, 272, 298, 331, 334, 345], "hivert": [2, 10, 25, 99, 111, 122, 144, 148, 151, 152, 154, 157, 158, 224, 272, 298, 331, 334, 345], "2010": [2, 10, 25, 26, 72, 100, 125, 126, 144, 154, 157, 169, 210, 212, 213, 214, 215, 216, 292, 354, 357], "2011": [2, 10, 23, 27, 33, 70, 99, 100, 111, 114, 125, 141, 154, 158, 185, 196, 198, 204, 206, 207, 208, 237, 271, 272, 280, 302, 305, 311, 341, 343, 345], "initi": [2, 6, 9, 10, 11, 15, 16, 18, 21, 22, 23, 25, 27, 31, 32, 33, 38, 45, 47, 49, 50, 52, 53, 58, 59, 61, 62, 63, 66, 67, 68, 70, 72, 73, 77, 85, 96, 97, 99, 100, 105, 106, 107, 110, 112, 113, 114, 118, 120, 126, 128, 129, 130, 131, 136, 137, 139, 145, 147, 148, 149, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 172, 175, 177, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 223, 224, 229, 230, 231, 233, 236, 237, 263, 271, 272, 273, 283, 286, 294, 295, 298, 300, 302, 303, 306, 307, 309, 310, 311, 331, 334, 335, 336, 337, 340, 341, 342, 343, 345, 350, 354, 357, 358, 360, 363, 364, 369], "revis": [2, 154], "fr\u00e9d\u00e9ric": [2, 10, 108, 109, 111, 117, 128, 154, 186], "chapoton": [2, 10, 105, 108, 109, 111, 117, 128, 154, 186], "contribut": [2, 18, 99, 112, 132, 154, 224, 285, 298], "abstract_tre": [2, 10, 272], "abstractclonabletre": [2, 10, 154, 272], "clonabl": [2, 127], "clone": [2, 10, 272], "protocol": [2, 122], "list_clon": [2, 272], "whether": [2, 3, 9, 10, 12, 16, 18, 20, 24, 25, 29, 31, 32, 33, 50, 55, 58, 61, 63, 69, 70, 71, 73, 75, 76, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 99, 102, 106, 107, 108, 110, 112, 113, 118, 122, 125, 128, 129, 130, 132, 136, 139, 144, 151, 152, 154, 155, 156, 157, 158, 160, 170, 171, 172, 174, 178, 180, 181, 184, 185, 189, 190, 212, 224, 226, 227, 229, 231, 233, 235, 236, 237, 239, 240, 260, 261, 267, 268, 269, 270, 271, 272, 273, 275, 281, 284, 290, 292, 296, 297, 299, 301, 303, 309, 310, 335, 340, 341, 345, 349, 352, 354, 357, 358, 359, 361, 362, 363, 366, 368], "where": [2, 3, 8, 9, 10, 15, 16, 18, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 37, 38, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 97, 98, 99, 100, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 157, 158, 159, 160, 161, 162, 169, 170, 172, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 189, 208, 209, 212, 213, 214, 221, 222, 226, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 261, 263, 268, 269, 270, 273, 274, 275, 276, 280, 281, 282, 283, 284, 285, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 318, 319, 325, 327, 328, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 352, 354, 357, 358, 359, 360, 364, 367, 368, 369], "ad": [2, 6, 15, 18, 21, 22, 25, 33, 50, 53, 67, 70, 71, 75, 77, 78, 89, 90, 92, 96, 97, 99, 100, 106, 107, 111, 116, 118, 120, 121, 128, 130, 136, 143, 144, 151, 155, 158, 160, 161, 162, 170, 172, 180, 184, 185, 190, 196, 207, 208, 209, 212, 222, 223, 224, 228, 235, 261, 269, 271, 273, 275, 276, 281, 289, 296, 297, 299, 301, 303, 306, 310, 341, 343, 345, 349, 350, 354, 357, 358, 359, 364], "child": [2, 7, 10, 84, 118, 154, 176, 208, 272, 349], "allow": [2, 6, 10, 18, 21, 22, 29, 67, 75, 76, 87, 90, 100, 105, 106, 107, 112, 113, 118, 120, 122, 128, 129, 130, 132, 134, 136, 137, 139, 143, 144, 149, 155, 156, 158, 161, 168, 170, 171, 180, 185, 187, 190, 224, 226, 227, 231, 235, 236, 269, 272, 273, 296, 298, 301, 303, 309, 310, 331, 334, 338, 341, 349, 350, 354, 357, 358, 369], "due": [2, 18, 25, 26, 73, 78, 81, 96, 97, 99, 106, 114, 118, 122, 125, 131, 136, 143, 144, 145, 149, 166, 170, 180, 185, 190, 209, 212, 223, 230, 235, 289, 298, 310, 317], "limit": [2, 18, 22, 25, 105, 106, 121, 122, 137, 143, 144, 149, 171, 185, 222, 241, 281, 284, 290, 296, 297, 298, 299, 345, 349, 364], "cannot": [2, 18, 36, 38, 75, 78, 87, 89, 106, 107, 118, 122, 127, 130, 136, 139, 143, 158, 170, 185, 190, 222, 229, 248, 275, 298, 303, 310, 340, 349, 353, 364], "here": [2, 10, 11, 16, 22, 25, 29, 33, 45, 52, 55, 56, 59, 61, 64, 65, 66, 67, 68, 75, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 94, 96, 99, 100, 106, 107, 108, 110, 111, 113, 114, 118, 120, 122, 127, 128, 130, 134, 136, 139, 142, 143, 144, 145, 149, 151, 157, 158, 161, 162, 164, 165, 168, 170, 180, 181, 185, 194, 208, 209, 212, 222, 223, 224, 226, 228, 229, 231, 233, 235, 236, 237, 238, 239, 241, 261, 263, 268, 269, 270, 271, 272, 274, 275, 276, 281, 284, 286, 289, 290, 294, 296, 297, 298, 299, 300, 301, 307, 308, 309, 318, 328, 331, 333, 338, 341, 343, 345, 349, 354, 358, 363], "clonableel": 2, "becaus": [2, 10, 12, 22, 25, 46, 48, 57, 65, 78, 96, 99, 103, 105, 106, 107, 110, 112, 118, 122, 128, 130, 137, 142, 144, 145, 154, 158, 161, 162, 171, 185, 196, 199, 200, 201, 203, 204, 205, 206, 208, 224, 229, 230, 233, 235, 244, 248, 256, 262, 268, 269, 272, 286, 292, 298, 311, 338, 341, 342, 343, 347, 349, 357, 361, 362, 364], "would": [2, 8, 18, 78, 90, 91, 106, 107, 111, 112, 117, 118, 121, 122, 125, 128, 130, 137, 144, 154, 157, 158, 163, 209, 222, 224, 228, 231, 235, 236, 261, 262, 268, 269, 270, 272, 301, 309, 310, 318, 338, 341, 349, 367], "prevent": [2, 298], "u": [2, 8, 10, 15, 16, 18, 29, 32, 38, 45, 49, 52, 54, 55, 57, 58, 61, 62, 72, 73, 75, 76, 78, 80, 87, 89, 90, 91, 100, 106, 108, 109, 110, 117, 118, 120, 121, 125, 128, 129, 139, 142, 143, 144, 158, 165, 170, 171, 178, 180, 184, 185, 189, 222, 224, 230, 231, 232, 233, 234, 235, 238, 239, 241, 268, 270, 273, 275, 276, 281, 284, 289, 292, 297, 298, 299, 301, 303, 304, 309, 311, 338, 339, 340, 341, 345, 349, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 366, 368], "later": [2, 16, 28, 106, 112, 121, 181, 218, 235, 298, 354], "how": [2, 3, 10, 18, 25, 28, 29, 50, 57, 61, 75, 76, 77, 80, 81, 82, 86, 87, 88, 89, 91, 92, 97, 105, 107, 112, 121, 122, 125, 129, 132, 136, 139, 143, 144, 145, 152, 158, 161, 178, 184, 185, 209, 222, 224, 231, 232, 233, 235, 239, 268, 273, 286, 292, 298, 299, 301, 309, 310, 311, 318, 341, 342, 345, 349, 354, 357], "follow": [2, 3, 6, 8, 10, 15, 16, 18, 21, 22, 25, 28, 29, 38, 41, 43, 44, 45, 46, 48, 50, 51, 53, 55, 56, 57, 59, 60, 62, 64, 65, 67, 68, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 110, 112, 113, 114, 117, 118, 119, 120, 122, 125, 128, 129, 130, 132, 136, 137, 139, 143, 144, 145, 149, 151, 152, 154, 155, 156, 158, 160, 161, 166, 168, 169, 170, 174, 178, 180, 181, 183, 184, 185, 186, 190, 208, 209, 212, 213, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 263, 268, 269, 270, 271, 272, 273, 275, 279, 280, 281, 282, 286, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 308, 309, 310, 311, 316, 327, 328, 333, 337, 338, 340, 341, 342, 344, 345, 349, 352, 354, 357, 358, 359, 360, 364, 367], "assumpt": [2, 15, 57, 91, 223, 231, 299, 308, 333, 345], "subclass": [2, 10, 25, 51, 57, 67, 68, 97, 118, 121, 128, 154, 218, 224, 231, 239, 268, 272, 328, 343, 347, 354], "least": [2, 3, 16, 18, 25, 29, 32, 59, 71, 77, 90, 93, 99, 105, 106, 107, 118, 122, 129, 137, 139, 158, 162, 178, 180, 181, 184, 185, 193, 273, 275, 280, 296, 298, 299, 309, 311, 343, 344, 349, 357, 363, 367], "To": [2, 10, 22, 25, 50, 55, 56, 57, 64, 67, 83, 87, 96, 97, 99, 105, 106, 107, 112, 113, 114, 118, 119, 121, 122, 127, 128, 130, 132, 134, 137, 143, 144, 145, 148, 153, 157, 170, 178, 179, 180, 184, 185, 212, 213, 215, 218, 222, 223, 231, 232, 233, 234, 235, 236, 237, 239, 240, 268, 269, 270, 273, 281, 284, 290, 296, 297, 298, 299, 302, 310, 327, 338, 341, 344, 345, 349, 354, 358, 364, 367], "respect": [2, 10, 18, 21, 25, 29, 32, 45, 54, 55, 59, 61, 62, 67, 68, 75, 78, 87, 88, 89, 95, 99, 102, 105, 106, 107, 112, 118, 125, 128, 130, 132, 137, 139, 141, 142, 143, 144, 145, 149, 154, 158, 160, 162, 170, 172, 180, 184, 185, 186, 190, 209, 213, 218, 223, 224, 226, 227, 229, 234, 235, 239, 244, 254, 269, 270, 273, 275, 280, 281, 282, 285, 289, 290, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 308, 309, 316, 318, 332, 338, 341, 342, 343, 345, 347, 349, 357, 359, 364], "check": [2, 3, 6, 9, 10, 12, 16, 18, 20, 22, 24, 25, 27, 29, 32, 33, 38, 47, 52, 53, 55, 58, 60, 67, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 105, 106, 107, 108, 112, 114, 117, 118, 121, 122, 123, 125, 127, 128, 129, 130, 132, 136, 137, 139, 142, 143, 144, 149, 150, 151, 154, 156, 157, 158, 159, 161, 165, 166, 168, 169, 170, 171, 172, 178, 180, 181, 182, 185, 190, 194, 208, 209, 212, 213, 216, 223, 224, 226, 228, 231, 233, 236, 238, 239, 240, 261, 262, 266, 269, 270, 271, 272, 273, 274, 275, 276, 279, 290, 298, 299, 301, 303, 305, 308, 310, 336, 337, 338, 340, 341, 342, 343, 344, 349, 354, 356, 357, 359], "new": [2, 18, 27, 29, 32, 47, 57, 59, 63, 67, 68, 71, 78, 87, 90, 99, 100, 106, 107, 114, 117, 128, 130, 132, 134, 144, 152, 154, 156, 170, 178, 180, 185, 190, 212, 213, 222, 224, 233, 272, 273, 285, 298, 310, 331, 334, 335, 341, 342, 350, 358, 360, 367, 368], "self": [2, 3, 6, 7, 8, 10, 11, 15, 16, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 77, 78, 87, 95, 96, 97, 99, 100, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 137, 139, 142, 143, 144, 145, 147, 148, 149, 151, 152, 154, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 178, 179, 180, 181, 183, 184, 185, 193, 194, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 303, 306, 307, 308, 309, 310, 311, 314, 318, 322, 323, 324, 325, 327, 328, 329, 331, 333, 335, 336, 337, 338, 339, 341, 342, 343, 345, 347, 352, 354, 355, 357, 358, 360, 362, 363, 364, 367, 368, 369], "correct": [2, 10, 22, 25, 27, 75, 76, 78, 81, 82, 85, 86, 87, 88, 89, 90, 92, 99, 106, 117, 125, 136, 144, 170, 185, 207, 209, 213, 215, 233, 234, 235, 236, 252, 269, 275, 286, 310, 311, 341, 342, 343, 349, 359], "doe": [2, 3, 10, 15, 16, 18, 25, 28, 29, 32, 45, 50, 60, 71, 75, 77, 81, 82, 83, 86, 87, 89, 90, 92, 93, 97, 99, 105, 106, 107, 110, 122, 125, 128, 130, 132, 136, 137, 138, 139, 143, 147, 149, 154, 156, 158, 162, 163, 166, 167, 168, 171, 178, 180, 181, 185, 187, 190, 194, 209, 212, 214, 224, 233, 234, 235, 236, 237, 238, 239, 240, 268, 269, 270, 271, 272, 273, 281, 286, 289, 294, 296, 297, 299, 300, 301, 307, 310, 311, 328, 335, 338, 341, 342, 343, 344, 345, 349, 354, 357, 358, 359, 361], "noth": [2, 10, 28, 32, 106, 107, 136, 143, 154, 170, 185, 190, 212, 235, 273, 341], "mani": [2, 6, 9, 10, 12, 16, 18, 21, 22, 25, 27, 35, 50, 55, 60, 87, 94, 96, 97, 99, 106, 107, 108, 110, 111, 112, 117, 118, 119, 122, 128, 134, 143, 144, 145, 149, 158, 161, 162, 169, 180, 185, 222, 232, 233, 235, 236, 262, 290, 298, 299, 306, 310, 311, 318, 335, 341, 343, 346, 349, 353, 354, 357, 358], "requir": [2, 6, 10, 16, 22, 25, 33, 45, 46, 50, 58, 71, 75, 76, 78, 81, 87, 89, 90, 93, 94, 106, 112, 118, 127, 129, 132, 139, 144, 158, 165, 168, 185, 190, 208, 219, 229, 232, 233, 235, 237, 239, 269, 271, 273, 288, 295, 296, 299, 301, 310, 327, 335, 338, 341, 342, 349, 357, 358], "character": [2, 45, 50, 61, 71, 75, 112, 129, 154, 180, 222, 272, 295, 296, 298, 299, 349], "hold": [2, 10, 29, 58, 71, 90, 106, 108, 109, 112, 113, 121, 136, 137, 149, 158, 170, 180, 196, 209, 214, 215, 224, 301, 333, 339, 341, 344, 369], "eg": [2, 273, 341], "orderedtre": [2, 154, 272], "binarytre": [2, 10, 118, 128], "abstractlabelledclonabletre": [2, 10, 154, 272], "parent": [2, 3, 6, 8, 10, 11, 12, 15, 16, 18, 23, 24, 25, 27, 29, 31, 32, 33, 35, 36, 37, 38, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 95, 96, 97, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 139, 142, 143, 144, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 170, 172, 174, 176, 180, 181, 183, 185, 186, 187, 189, 190, 191, 193, 194, 208, 209, 210, 211, 212, 213, 216, 219, 222, 226, 229, 230, 232, 233, 234, 236, 238, 239, 240, 269, 270, 271, 272, 273, 275, 276, 280, 283, 286, 292, 293, 298, 299, 303, 304, 306, 308, 309, 310, 311, 313, 314, 315, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 341, 342, 343, 347, 348, 350, 352, 354, 356, 357, 358, 359, 361, 365, 367, 369], "none": [2, 3, 8, 10, 15, 18, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 40, 45, 46, 47, 48, 50, 51, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 138, 139, 142, 143, 144, 147, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 165, 166, 168, 169, 170, 172, 174, 178, 180, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 208, 209, 212, 213, 214, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 284, 285, 287, 289, 290, 291, 292, 293, 295, 296, 297, 299, 303, 304, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 341, 342, 343, 345, 347, 350, 352, 353, 354, 356, 357, 358, 360, 361, 363, 364, 365, 367, 368, 369], "true": [2, 3, 6, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 196, 197, 202, 204, 206, 208, 209, 210, 211, 212, 213, 215, 216, 218, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 296, 298, 299, 301, 302, 303, 306, 308, 309, 310, 311, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "abstractlabelledtre": 2, "take": [2, 3, 6, 10, 12, 18, 21, 25, 27, 28, 37, 45, 46, 49, 53, 54, 56, 57, 58, 64, 67, 68, 78, 83, 87, 89, 90, 94, 97, 99, 105, 106, 107, 114, 118, 122, 125, 132, 134, 137, 138, 139, 142, 143, 144, 147, 148, 149, 151, 157, 158, 160, 162, 165, 166, 167, 170, 174, 178, 185, 212, 218, 223, 224, 231, 232, 233, 239, 241, 261, 264, 266, 268, 270, 271, 272, 273, 275, 276, 285, 289, 292, 296, 298, 299, 301, 306, 308, 332, 338, 341, 342, 345, 349, 352, 354, 357, 364], "care": [2, 87, 97, 154, 170, 231, 272, 298, 349, 353, 361], "modif": [2, 32, 116, 156, 212, 272, 354], "map_label": [2, 10], "appli": [2, 3, 6, 8, 10, 15, 18, 20, 21, 28, 29, 35, 55, 58, 63, 67, 68, 78, 89, 90, 91, 100, 106, 112, 113, 116, 118, 120, 122, 128, 129, 130, 138, 139, 143, 144, 145, 147, 148, 149, 158, 160, 161, 165, 166, 167, 170, 171, 180, 185, 190, 209, 211, 212, 229, 231, 233, 236, 238, 239, 268, 270, 273, 274, 275, 280, 281, 289, 296, 297, 298, 299, 301, 309, 310, 338, 341, 343, 349, 352, 354, 360, 361, 364, 368], "ha": [2, 3, 7, 9, 10, 11, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 29, 33, 45, 50, 55, 65, 67, 71, 73, 76, 78, 80, 81, 82, 83, 85, 86, 87, 89, 94, 95, 96, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 142, 143, 144, 145, 149, 151, 152, 154, 156, 157, 158, 159, 161, 162, 165, 167, 170, 178, 179, 180, 181, 183, 184, 185, 186, 190, 193, 213, 214, 218, 222, 223, 224, 226, 229, 230, 232, 233, 236, 237, 239, 240, 267, 271, 272, 273, 275, 278, 285, 289, 292, 296, 298, 299, 304, 306, 309, 310, 311, 313, 316, 318, 327, 331, 334, 338, 340, 341, 342, 343, 344, 345, 349, 350, 352, 354, 357, 358, 360, 363, 364, 369], "been": [2, 7, 10, 15, 22, 25, 76, 77, 78, 80, 83, 87, 89, 90, 93, 99, 105, 106, 110, 122, 128, 130, 132, 136, 139, 143, 144, 157, 158, 161, 170, 178, 185, 189, 213, 214, 224, 233, 235, 237, 238, 239, 241, 261, 262, 273, 275, 299, 304, 309, 310, 311, 338, 341, 349, 352, 357, 364], "all": [2, 3, 6, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 36, 38, 40, 41, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 172, 174, 175, 178, 179, 180, 181, 183, 184, 185, 186, 187, 190, 193, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 226, 227, 228, 230, 231, 233, 235, 236, 237, 238, 239, 241, 244, 250, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 325, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 364, 367, 368], "x": [2, 3, 7, 9, 10, 11, 12, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 38, 45, 47, 48, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 72, 75, 76, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 166, 169, 170, 172, 178, 179, 180, 183, 184, 185, 186, 187, 188, 193, 196, 197, 202, 204, 206, 208, 209, 212, 213, 215, 216, 219, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 261, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 296, 297, 298, 299, 303, 304, 306, 307, 308, 309, 310, 311, 313, 316, 318, 319, 324, 325, 327, 328, 331, 332, 333, 335, 338, 340, 341, 344, 345, 346, 347, 348, 349, 352, 353, 354, 357, 358, 360, 361, 364, 367, 369], "replac": [2, 10, 16, 22, 29, 50, 89, 90, 92, 94, 99, 106, 107, 118, 120, 138, 144, 152, 157, 158, 165, 166, 167, 170, 184, 185, 221, 229, 232, 238, 239, 270, 273, 275, 306, 310, 314, 322, 324, 328, 338, 341, 343, 354], "lt": [2, 128, 185, 272, 275], "labelledorderedtre": [2, 10, 154], "7": [2, 3, 6, 7, 9, 10, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 38, 47, 48, 51, 53, 55, 57, 59, 60, 61, 63, 71, 73, 75, 76, 77, 78, 79, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 99, 100, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 118, 120, 121, 122, 125, 128, 129, 130, 134, 136, 137, 139, 143, 144, 145, 147, 149, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 208, 212, 213, 218, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 256, 261, 262, 263, 264, 265, 267, 268, 270, 271, 273, 274, 275, 276, 281, 283, 284, 286, 287, 290, 292, 296, 297, 298, 299, 301, 302, 303, 306, 307, 308, 309, 310, 311, 318, 319, 331, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 369], "lambda": [2, 10, 15, 25, 32, 35, 37, 38, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 66, 67, 70, 73, 75, 76, 78, 80, 81, 82, 86, 87, 89, 96, 97, 100, 106, 107, 110, 114, 118, 119, 120, 121, 122, 125, 130, 132, 143, 144, 145, 147, 148, 149, 158, 160, 161, 162, 170, 174, 178, 180, 185, 186, 188, 204, 208, 209, 210, 211, 212, 213, 222, 224, 226, 229, 230, 231, 232, 233, 235, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 264, 265, 266, 267, 268, 269, 270, 275, 280, 281, 282, 283, 284, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 304, 306, 309, 310, 311, 318, 332, 338, 339, 341, 343, 345, 346, 349, 350, 352, 354, 355, 357, 358, 361, 364, 368], "z": [2, 15, 16, 18, 21, 23, 57, 76, 81, 95, 97, 100, 106, 108, 109, 111, 114, 117, 118, 122, 128, 136, 137, 138, 144, 145, 158, 170, 172, 178, 180, 183, 185, 188, 190, 208, 213, 222, 229, 230, 233, 234, 236, 238, 280, 281, 282, 284, 285, 288, 289, 290, 296, 298, 299, 308, 318, 327, 340, 345, 349, 353, 354, 357, 361, 367], "4": [2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198, 204, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369], "lbt": [2, 10], "labelledbinarytre": [2, 10], "bt": [2, 10, 128, 239, 318, 349], "5": [2, 3, 6, 7, 8, 9, 10, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 38, 45, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 196, 198, 202, 208, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 323, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 367, 369], "set_label": 2, "chang": [2, 10, 18, 21, 25, 28, 48, 61, 62, 71, 99, 100, 106, 107, 108, 110, 112, 122, 128, 130, 137, 139, 143, 144, 151, 152, 154, 156, 157, 158, 160, 162, 168, 170, 171, 184, 185, 212, 224, 228, 236, 266, 269, 271, 273, 279, 289, 294, 298, 299, 300, 309, 310, 311, 321, 332, 333, 335, 338, 341, 343, 345, 347, 349, 358, 367], "subtre": [2, 10, 84, 99, 122, 128, 154, 272, 349], "input": [2, 3, 6, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 178, 180, 181, 183, 184, 185, 186, 187, 189, 190, 193, 194, 196, 202, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 318, 322, 324, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "default": [2, 3, 8, 10, 16, 18, 20, 21, 22, 24, 25, 28, 29, 31, 32, 36, 38, 46, 47, 48, 49, 51, 52, 55, 57, 58, 59, 61, 62, 64, 67, 69, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 95, 97, 99, 100, 106, 107, 108, 110, 111, 112, 113, 114, 118, 120, 122, 125, 127, 128, 129, 130, 132, 134, 136, 139, 142, 143, 144, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 170, 172, 178, 180, 181, 184, 185, 186, 187, 190, 196, 202, 204, 206, 208, 209, 212, 214, 216, 218, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 256, 261, 263, 265, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 282, 283, 284, 285, 287, 289, 290, 292, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 309, 310, 327, 328, 332, 335, 337, 338, 339, 340, 341, 343, 344, 345, 349, 352, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369], "place": [2, 16, 61, 75, 86, 87, 97, 99, 106, 112, 130, 137, 143, 158, 170, 185, 199, 200, 201, 203, 204, 205, 206, 208, 222, 235, 241, 273, 275, 276, 299, 331, 341, 343, 354, 357], "must": [2, 3, 6, 10, 11, 15, 16, 18, 21, 22, 25, 27, 29, 32, 48, 50, 58, 69, 70, 71, 73, 75, 76, 77, 80, 81, 86, 87, 89, 90, 91, 96, 97, 100, 106, 107, 108, 109, 111, 113, 115, 117, 118, 125, 127, 128, 136, 149, 158, 162, 166, 169, 170, 178, 180, 184, 185, 186, 187, 213, 222, 224, 225, 228, 229, 232, 237, 239, 241, 268, 271, 272, 273, 280, 282, 288, 293, 298, 299, 303, 309, 310, 311, 332, 338, 341, 343, 344, 349, 352, 353, 354, 356, 357, 358, 360, 363, 364, 367], "mutabl": [2, 10, 18, 21, 32, 122, 152, 229, 275, 310], "more": [2, 9, 10, 16, 18, 22, 25, 29, 35, 38, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 64, 66, 70, 71, 73, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 105, 106, 107, 108, 113, 114, 116, 118, 119, 120, 121, 125, 127, 128, 129, 130, 134, 136, 137, 139, 142, 143, 144, 145, 152, 153, 154, 156, 158, 161, 162, 170, 171, 178, 180, 181, 185, 186, 189, 190, 208, 209, 212, 213, 214, 215, 216, 218, 222, 224, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 263, 268, 270, 271, 272, 273, 274, 281, 282, 284, 286, 289, 290, 296, 297, 298, 299, 301, 311, 318, 331, 332, 335, 336, 338, 341, 342, 343, 344, 346, 347, 349, 352, 353, 354, 357, 358, 359, 364], "detail": [2, 10, 16, 18, 22, 25, 28, 33, 46, 60, 75, 81, 89, 99, 106, 107, 108, 118, 121, 122, 136, 137, 139, 143, 152, 153, 154, 156, 158, 162, 169, 170, 181, 185, 189, 213, 222, 233, 234, 238, 239, 241, 261, 263, 268, 273, 298, 301, 310, 336, 341, 344, 349, 354, 357, 364], "about": [2, 3, 28, 35, 50, 55, 77, 84, 89, 96, 131, 143, 154, 156, 162, 170, 172, 178, 185, 209, 235, 239, 241, 262, 268, 270, 273, 298, 311, 312, 321, 338, 347, 349, 354, 357, 364], "0": [2, 3, 6, 9, 10, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 35, 36, 37, 38, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 196, 197, 198, 202, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 329, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369], "traceback": [2, 3, 6, 9, 10, 12, 18, 25, 27, 29, 32, 33, 36, 58, 72, 73, 75, 76, 81, 83, 84, 85, 86, 87, 88, 89, 96, 97, 99, 106, 107, 109, 111, 112, 113, 115, 117, 118, 122, 125, 127, 128, 130, 138, 139, 144, 145, 151, 152, 154, 156, 157, 158, 161, 162, 165, 166, 168, 169, 170, 171, 180, 182, 185, 186, 187, 189, 190, 218, 219, 224, 225, 226, 227, 228, 233, 238, 239, 240, 241, 250, 268, 269, 270, 271, 272, 273, 275, 280, 286, 289, 290, 292, 298, 299, 303, 309, 310, 311, 327, 331, 338, 341, 343, 344, 345, 349, 352, 354, 356, 357, 358, 360, 363, 364, 367, 369], "recent": [2, 3, 6, 9, 10, 12, 18, 25, 27, 29, 32, 33, 36, 58, 72, 73, 75, 76, 81, 83, 84, 85, 86, 87, 88, 89, 96, 97, 99, 106, 107, 109, 111, 112, 113, 115, 117, 118, 122, 125, 127, 128, 130, 138, 139, 144, 145, 151, 152, 154, 156, 157, 158, 161, 162, 165, 166, 168, 169, 170, 171, 180, 182, 185, 186, 187, 189, 190, 218, 219, 224, 225, 226, 227, 228, 233, 238, 239, 240, 241, 250, 268, 269, 270, 271, 272, 273, 275, 280, 286, 289, 290, 292, 298, 299, 303, 309, 310, 311, 327, 331, 338, 341, 343, 344, 345, 349, 352, 354, 356, 357, 358, 360, 363, 364, 367, 369], "call": [2, 3, 6, 8, 9, 10, 12, 15, 16, 18, 21, 22, 25, 27, 29, 32, 33, 36, 38, 51, 55, 58, 59, 60, 65, 66, 67, 71, 72, 73, 75, 76, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 120, 122, 125, 127, 128, 129, 130, 132, 136, 137, 138, 139, 141, 142, 143, 144, 145, 149, 151, 152, 154, 156, 157, 158, 161, 162, 165, 166, 168, 169, 170, 171, 178, 180, 182, 184, 185, 186, 187, 189, 190, 208, 212, 213, 216, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 250, 252, 254, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 286, 289, 290, 292, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 310, 311, 321, 325, 327, 328, 331, 332, 333, 334, 338, 340, 341, 342, 343, 344, 345, 347, 349, 352, 354, 356, 357, 358, 360, 363, 364, 367, 369], "last": [2, 3, 6, 9, 10, 12, 16, 18, 25, 27, 29, 30, 32, 33, 36, 54, 55, 58, 67, 68, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 99, 102, 103, 105, 106, 107, 109, 111, 112, 113, 115, 117, 118, 122, 125, 126, 127, 128, 129, 130, 138, 139, 144, 145, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 178, 180, 182, 185, 186, 187, 189, 190, 193, 218, 219, 222, 224, 225, 226, 227, 228, 233, 235, 238, 239, 240, 241, 250, 268, 269, 270, 271, 272, 273, 275, 276, 280, 286, 289, 290, 292, 298, 299, 303, 309, 310, 311, 327, 331, 334, 335, 336, 338, 340, 341, 343, 344, 345, 349, 350, 352, 353, 354, 356, 357, 358, 360, 363, 364, 367, 369], "valueerror": [2, 3, 6, 9, 10, 12, 18, 25, 27, 29, 32, 33, 36, 58, 72, 75, 76, 77, 81, 89, 96, 97, 99, 106, 107, 112, 113, 118, 122, 125, 128, 130, 139, 144, 151, 152, 156, 157, 158, 161, 162, 165, 166, 168, 169, 170, 171, 178, 180, 182, 185, 186, 187, 189, 190, 219, 224, 225, 226, 227, 228, 238, 239, 240, 250, 268, 269, 270, 271, 272, 273, 286, 290, 292, 298, 299, 303, 309, 310, 311, 331, 338, 341, 342, 343, 344, 354, 356, 357, 363, 364, 369], "immut": [2, 10, 25, 32, 100, 137, 178, 235, 275, 337, 349], "pleas": [2, 10, 22, 25, 58, 71, 121, 122, 130, 185, 235, 298, 310, 358, 367], "instead": [2, 10, 12, 18, 25, 26, 29, 32, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 90, 92, 97, 99, 100, 104, 106, 109, 111, 117, 118, 121, 122, 128, 132, 137, 139, 142, 143, 149, 154, 158, 170, 178, 180, 185, 189, 208, 228, 231, 233, 234, 235, 236, 239, 241, 244, 267, 268, 269, 270, 271, 272, 273, 275, 298, 299, 301, 304, 310, 318, 328, 338, 341, 342, 349, 354, 360, 364, 367], "42": [2, 6, 7, 25, 78, 81, 83, 88, 113, 122, 137, 151, 158, 159, 163, 170, 184, 232, 236, 272, 273, 308, 311, 319, 331, 344, 349, 354], "do": [2, 3, 10, 16, 18, 21, 23, 24, 25, 29, 31, 32, 33, 38, 67, 71, 75, 76, 78, 80, 81, 83, 87, 88, 89, 94, 99, 101, 106, 107, 110, 111, 112, 113, 117, 118, 122, 125, 127, 128, 130, 131, 136, 137, 143, 144, 145, 157, 158, 160, 165, 170, 178, 180, 185, 186, 196, 202, 209, 215, 222, 223, 224, 229, 232, 233, 235, 236, 238, 239, 241, 261, 262, 268, 270, 271, 273, 282, 283, 286, 288, 289, 292, 298, 299, 301, 310, 311, 328, 331, 335, 338, 340, 341, 343, 349, 353, 354, 357, 358, 361], "we": [2, 3, 6, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 36, 37, 38, 43, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 71, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 141, 142, 143, 144, 145, 148, 149, 152, 154, 156, 157, 158, 160, 161, 162, 165, 166, 168, 169, 170, 171, 178, 179, 180, 183, 185, 186, 190, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 244, 252, 254, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 284, 285, 288, 290, 291, 292, 295, 296, 297, 298, 299, 301, 303, 304, 306, 307, 308, 309, 311, 318, 327, 328, 331, 332, 333, 334, 338, 340, 341, 342, 343, 345, 346, 349, 353, 354, 357, 360, 361, 364, 368], "syntact": [2, 10, 73], "sugar": [2, 10, 73], "tt": [2, 130, 338], "set_root_label": 2, "work": [2, 8, 9, 12, 18, 21, 25, 32, 38, 53, 55, 67, 70, 71, 73, 76, 78, 90, 93, 94, 96, 97, 98, 99, 100, 106, 112, 118, 122, 125, 130, 134, 135, 136, 137, 138, 149, 158, 160, 161, 162, 170, 171, 178, 180, 185, 186, 208, 209, 212, 216, 218, 224, 230, 234, 235, 236, 237, 238, 239, 241, 252, 268, 269, 271, 273, 275, 282, 288, 290, 292, 298, 299, 306, 310, 318, 325, 327, 335, 338, 341, 349, 352, 354, 358], "typic": [2, 28, 29, 38, 77, 106, 107, 180, 190, 209, 212, 224, 226, 227, 233, 235, 238, 239, 252, 261, 268, 298, 328, 343, 347, 349], "unlabel": [2, 10, 21, 22, 87, 109, 111, 117, 127, 154, 185, 272, 327, 349, 368], "unlabelled_tre": [2, 10, 154, 272], "In": [2, 6, 8, 9, 10, 16, 18, 22, 25, 28, 29, 32, 33, 35, 38, 45, 46, 48, 50, 53, 55, 58, 68, 71, 75, 76, 77, 78, 87, 89, 90, 94, 95, 96, 97, 99, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 118, 121, 122, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 141, 143, 144, 145, 149, 154, 158, 160, 161, 162, 165, 167, 168, 170, 178, 180, 184, 185, 190, 194, 208, 209, 212, 213, 218, 222, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 246, 261, 262, 263, 264, 266, 268, 269, 270, 271, 273, 274, 275, 276, 285, 289, 290, 292, 298, 299, 306, 307, 309, 310, 318, 327, 331, 332, 333, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 353, 354, 357, 358, 367, 369], "vein": 2, "attribut": [2, 15, 16, 51, 77, 78, 84, 97, 106, 107, 108, 118, 122, 123, 145, 178, 185, 215, 218, 358, 363], "_unlabel": 2, "version": [2, 6, 8, 9, 10, 11, 15, 18, 21, 22, 23, 25, 28, 31, 33, 38, 47, 49, 50, 53, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 72, 73, 76, 77, 84, 85, 87, 89, 96, 97, 99, 100, 105, 106, 107, 112, 113, 114, 118, 126, 130, 131, 136, 137, 143, 144, 147, 148, 149, 155, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 180, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 229, 230, 233, 236, 237, 263, 269, 271, 272, 273, 275, 283, 294, 300, 302, 307, 309, 310, 327, 331, 334, 335, 336, 340, 341, 342, 343, 345, 346, 349, 350, 354, 357, 358, 364, 369], "At": [2, 10, 99, 106, 116, 118, 121, 170, 183, 185, 231, 238, 280, 285, 286, 292, 298, 338, 349, 354], "time": [2, 6, 9, 10, 16, 18, 21, 22, 25, 26, 27, 29, 31, 32, 35, 38, 45, 50, 53, 55, 57, 58, 59, 61, 63, 66, 67, 75, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 97, 99, 103, 106, 107, 110, 112, 113, 116, 118, 122, 124, 125, 129, 134, 136, 137, 138, 142, 143, 144, 145, 152, 156, 158, 170, 172, 179, 180, 184, 185, 186, 189, 190, 194, 197, 208, 209, 212, 213, 219, 222, 224, 231, 232, 233, 235, 236, 238, 239, 241, 261, 265, 268, 269, 270, 271, 273, 276, 279, 280, 282, 285, 289, 292, 298, 299, 301, 305, 306, 307, 308, 311, 332, 336, 338, 341, 343, 344, 345, 349, 354, 357, 358, 360, 364], "make": [2, 6, 10, 21, 22, 57, 58, 67, 68, 75, 76, 78, 81, 87, 89, 90, 94, 106, 110, 113, 118, 122, 123, 125, 134, 136, 139, 143, 144, 145, 150, 157, 158, 159, 162, 170, 178, 184, 185, 196, 212, 214, 222, 223, 224, 227, 229, 232, 235, 236, 238, 239, 261, 265, 268, 269, 272, 286, 292, 298, 299, 304, 306, 310, 311, 318, 321, 327, 338, 341, 343, 345, 349, 356, 357, 360], "sens": [2, 6, 10, 21, 22, 25, 32, 38, 68, 99, 106, 118, 143, 144, 149, 170, 180, 185, 214, 229, 239, 292, 298, 309, 310, 318, 341, 342, 343, 345, 349], "onli": [2, 8, 9, 10, 16, 18, 20, 21, 22, 25, 29, 32, 38, 41, 45, 48, 55, 57, 58, 65, 68, 70, 71, 72, 73, 75, 78, 80, 81, 83, 87, 88, 89, 90, 92, 93, 96, 97, 98, 99, 100, 102, 105, 106, 107, 109, 110, 112, 113, 115, 118, 120, 121, 122, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 143, 144, 149, 152, 154, 156, 158, 162, 166, 170, 178, 180, 184, 185, 186, 196, 209, 210, 212, 213, 215, 216, 218, 219, 222, 223, 224, 226, 227, 229, 232, 233, 235, 236, 238, 239, 240, 241, 261, 262, 263, 269, 270, 271, 272, 273, 275, 280, 281, 284, 286, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 311, 313, 326, 332, 333, 335, 337, 338, 340, 341, 342, 344, 345, 349, 350, 354, 357, 358, 359, 360, 362, 364, 368, 369], "repeat": [2, 8, 15, 25, 50, 72, 76, 81, 87, 106, 131, 143, 185, 222, 238, 273, 275, 303, 310, 311, 331, 334, 341, 345, 350, 355, 364, 368], "t1": [2, 10, 15, 21, 106, 128, 132, 137, 167, 194, 236, 265, 270, 273, 296, 310, 341, 352], "6": [2, 3, 6, 7, 8, 9, 10, 12, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 29, 31, 32, 33, 36, 38, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 99, 100, 102, 105, 106, 107, 108, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 170, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 194, 202, 206, 208, 209, 211, 212, 213, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 264, 265, 267, 268, 270, 271, 273, 274, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 311, 318, 319, 322, 325, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 349, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 365, 369], "9": [2, 3, 7, 9, 10, 15, 18, 20, 21, 22, 25, 26, 29, 31, 33, 38, 47, 55, 61, 67, 72, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 103, 105, 106, 107, 108, 109, 111, 113, 114, 118, 121, 122, 128, 129, 130, 134, 136, 137, 139, 141, 143, 144, 149, 152, 155, 157, 158, 160, 161, 162, 166, 168, 170, 178, 179, 180, 182, 183, 184, 185, 186, 187, 190, 194, 208, 212, 218, 219, 222, 224, 228, 232, 233, 234, 235, 236, 237, 242, 252, 253, 254, 265, 271, 272, 273, 275, 276, 282, 285, 286, 287, 289, 296, 298, 299, 301, 302, 304, 306, 309, 310, 311, 318, 331, 333, 337, 338, 340, 341, 343, 345, 346, 349, 352, 353, 354, 355, 357, 358, 360, 361, 364, 365, 368, 369], "vertic": [2, 10, 18, 20, 21, 22, 23, 32, 38, 47, 48, 52, 55, 61, 71, 75, 87, 94, 96, 97, 99, 105, 106, 109, 111, 115, 117, 118, 127, 128, 151, 152, 154, 156, 157, 158, 159, 167, 170, 178, 180, 181, 184, 185, 196, 202, 204, 206, 208, 210, 211, 212, 213, 219, 223, 224, 226, 227, 228, 235, 239, 258, 259, 265, 266, 271, 272, 302, 307, 308, 309, 327, 332, 335, 341, 344, 349, 354, 360, 361, 368], "leaf_label": [2, 10], "leav": [2, 10, 47, 55, 89, 97, 106, 121, 154, 158, 170, 313, 315, 319, 320, 322, 323, 326, 327, 329, 338, 341, 345, 349], "case": [2, 7, 9, 10, 15, 16, 18, 21, 22, 24, 25, 27, 28, 29, 32, 37, 38, 46, 47, 55, 58, 59, 60, 65, 67, 68, 71, 75, 76, 77, 87, 88, 89, 90, 94, 96, 99, 103, 105, 106, 107, 109, 110, 111, 112, 118, 121, 122, 125, 129, 130, 134, 136, 137, 139, 142, 144, 147, 153, 154, 157, 158, 160, 161, 162, 165, 168, 170, 179, 180, 184, 185, 186, 189, 190, 202, 208, 209, 212, 218, 222, 224, 226, 229, 230, 231, 232, 233, 235, 236, 239, 241, 262, 268, 269, 270, 271, 273, 275, 276, 286, 289, 290, 292, 297, 298, 299, 303, 307, 309, 310, 311, 331, 332, 335, 338, 341, 342, 343, 344, 345, 347, 349, 353, 354, 356, 357, 358, 364, 367, 369], "actual": [2, 3, 10, 16, 18, 21, 25, 71, 81, 87, 90, 98, 106, 107, 109, 111, 112, 120, 122, 124, 129, 137, 144, 161, 163, 170, 180, 185, 222, 224, 233, 235, 238, 239, 262, 268, 270, 272, 273, 299, 310, 341, 342, 343, 349, 354, 357], "associ": [2, 3, 10, 16, 18, 21, 22, 26, 28, 32, 36, 41, 48, 49, 55, 58, 65, 67, 71, 75, 81, 89, 90, 94, 97, 99, 100, 106, 108, 109, 110, 111, 112, 113, 117, 118, 128, 134, 137, 143, 147, 149, 154, 156, 158, 162, 165, 170, 176, 179, 181, 185, 194, 208, 209, 212, 213, 219, 224, 227, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 250, 252, 254, 256, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 282, 285, 287, 288, 289, 296, 298, 299, 307, 318, 325, 327, 328, 331, 335, 338, 339, 341, 342, 343, 345, 347, 357, 358, 364, 365, 368, 369], "25": [2, 7, 25, 75, 78, 81, 82, 83, 85, 86, 87, 88, 90, 91, 96, 100, 106, 126, 129, 137, 139, 158, 166, 180, 185, 186, 212, 232, 236, 273, 275, 285, 293, 296, 305, 307, 311, 345, 348, 349, 352, 354, 355, 357, 361, 364, 365], "lrt": [2, 272], "labelledrootedtre": [2, 111, 117, 272], "tb": [2, 130, 154], "There": [2, 3, 9, 10, 15, 16, 22, 24, 25, 29, 47, 50, 55, 58, 67, 73, 78, 80, 81, 89, 95, 96, 97, 99, 106, 124, 129, 130, 132, 134, 137, 139, 143, 144, 145, 149, 154, 158, 159, 160, 166, 170, 171, 180, 185, 186, 208, 212, 218, 220, 222, 224, 228, 229, 230, 232, 239, 241, 252, 263, 268, 270, 271, 272, 273, 275, 276, 298, 299, 302, 308, 309, 338, 340, 343, 345, 349, 352, 354, 357, 358, 364, 367], "sever": [2, 9, 22, 25, 29, 50, 57, 67, 71, 89, 90, 91, 106, 107, 109, 111, 117, 122, 128, 132, 145, 158, 186, 218, 222, 233, 235, 238, 239, 268, 292, 299, 310, 338, 343, 347, 357, 364], "document": [2, 16, 33, 45, 70, 71, 84, 86, 89, 91, 95, 99, 100, 105, 106, 107, 108, 118, 122, 143, 145, 158, 170, 186, 229, 273, 282, 298, 332, 335, 341, 357, 364, 367], "labelled_tre": [2, 10, 154, 272], "breadth_first_order_travers": 2, "breadth": [2, 38, 180, 208, 237, 271], "first": [2, 6, 7, 10, 15, 16, 18, 21, 23, 25, 29, 30, 31, 32, 33, 37, 38, 45, 52, 53, 56, 57, 63, 68, 71, 75, 78, 80, 81, 84, 87, 89, 90, 93, 94, 96, 97, 98, 99, 102, 103, 105, 106, 107, 108, 112, 113, 114, 117, 118, 119, 122, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 139, 142, 143, 144, 145, 149, 150, 152, 154, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 178, 180, 184, 185, 186, 190, 193, 194, 202, 208, 209, 212, 213, 220, 222, 229, 231, 233, 236, 237, 238, 239, 241, 268, 270, 271, 272, 273, 275, 276, 286, 292, 294, 298, 299, 300, 301, 306, 307, 309, 310, 311, 327, 331, 333, 334, 335, 336, 337, 338, 340, 341, 343, 345, 352, 353, 354, 356, 357, 358, 362, 363, 364, 365, 369], "post": [2, 128, 235], "travers": [2, 10, 38, 128, 142, 170, 208, 349], "subject": [2, 41, 53, 99, 122, 125, 130, 152, 158, 285, 303, 309, 333, 341], "everi": [2, 10, 16, 18, 20, 21, 25, 27, 50, 60, 73, 75, 77, 78, 80, 81, 87, 89, 90, 94, 96, 97, 99, 100, 108, 109, 112, 113, 114, 117, 119, 120, 128, 134, 136, 137, 139, 142, 143, 144, 154, 156, 157, 158, 159, 162, 170, 178, 179, 180, 181, 184, 185, 187, 208, 224, 230, 232, 270, 272, 275, 276, 280, 281, 284, 296, 297, 298, 299, 301, 302, 304, 306, 311, 313, 326, 331, 335, 338, 340, 341, 346, 354, 357, 359], "encount": [2, 99, 128], "procedur": [2, 186, 273, 341, 349], "queue": 2, "pop": [2, 80, 122], "prepend": [2, 144], "rightmost": [2, 10, 50, 60, 67, 109, 111, 112, 156, 158, 162, 170, 209, 273, 303, 310, 341, 358], "leftmost": [2, 10, 11, 50, 53, 67, 109, 112, 120, 156, 158, 170, 209, 310, 341, 358, 360], "someth": [2, 10, 18, 25, 29, 93, 99, 106, 138, 158, 238, 273, 298, 328, 354, 364], "dure": [2, 10, 18, 71, 106, 107, 112, 132, 190, 214, 233], "explor": [2, 7, 10, 106, 122, 235, 239, 298, 349], "___3____": 2, "_7_": [2, 10], "unspecifi": [2, 10, 86, 97, 186], "guarante": [2, 10, 45, 106, 110, 121, 185, 214, 224, 269, 273, 292, 298, 341, 357], "moreov": [2, 10, 25, 29, 58, 68, 99, 106, 107, 118, 128, 158, 161, 183, 184, 232, 296, 299], "compar": [2, 10, 27, 38, 58, 71, 88, 94, 99, 102, 105, 106, 107, 128, 129, 134, 158, 162, 170, 174, 178, 180, 184, 185, 229, 233, 234, 235, 238, 239, 303, 311, 344, 349, 353, 354, 357], "10": [2, 3, 6, 7, 9, 10, 15, 18, 20, 21, 22, 25, 26, 37, 55, 56, 61, 62, 64, 67, 72, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 99, 100, 103, 106, 107, 110, 113, 115, 116, 118, 121, 122, 126, 127, 129, 130, 132, 134, 136, 137, 139, 142, 143, 144, 149, 150, 151, 152, 154, 155, 156, 157, 158, 162, 163, 168, 170, 174, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 205, 207, 208, 212, 222, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 242, 258, 263, 265, 270, 271, 272, 273, 275, 276, 285, 290, 294, 298, 299, 300, 301, 303, 304, 306, 309, 310, 311, 318, 319, 331, 335, 337, 338, 341, 342, 343, 345, 346, 347, 349, 352, 354, 355, 357, 358, 360, 361, 364, 365, 367], "11": [2, 3, 6, 7, 9, 10, 15, 25, 29, 33, 36, 55, 61, 62, 70, 75, 76, 78, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 97, 99, 100, 106, 107, 113, 114, 118, 126, 128, 129, 134, 136, 137, 139, 144, 151, 152, 157, 158, 162, 166, 168, 169, 170, 178, 179, 180, 182, 183, 184, 185, 186, 190, 209, 218, 222, 224, 228, 232, 233, 236, 237, 242, 254, 265, 271, 273, 275, 280, 285, 286, 289, 294, 297, 299, 300, 302, 303, 304, 306, 309, 310, 311, 317, 318, 319, 327, 331, 335, 338, 340, 341, 343, 345, 349, 352, 354, 355, 357, 360, 361, 364, 365, 367, 368], "12": [2, 3, 6, 7, 9, 10, 15, 16, 18, 21, 22, 24, 25, 27, 29, 32, 47, 53, 61, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 97, 99, 100, 106, 113, 118, 122, 125, 126, 127, 128, 129, 130, 134, 136, 137, 139, 143, 144, 147, 149, 152, 153, 156, 158, 162, 166, 170, 171, 178, 179, 180, 182, 183, 184, 185, 186, 187, 194, 199, 200, 201, 202, 203, 207, 208, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 252, 254, 259, 263, 264, 265, 271, 273, 275, 276, 281, 285, 286, 296, 298, 299, 303, 306, 310, 311, 319, 331, 334, 341, 343, 344, 345, 347, 349, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369], "13": [2, 3, 7, 8, 9, 10, 15, 18, 25, 33, 50, 53, 55, 75, 76, 78, 81, 82, 83, 86, 87, 88, 89, 90, 91, 97, 99, 100, 106, 107, 110, 113, 116, 122, 125, 128, 129, 134, 136, 137, 139, 143, 144, 149, 152, 156, 158, 162, 166, 170, 178, 179, 180, 182, 183, 184, 185, 189, 208, 223, 232, 233, 235, 236, 241, 265, 271, 273, 275, 276, 284, 299, 302, 306, 310, 311, 331, 334, 338, 341, 343, 345, 349, 352, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 367, 369], "depth": [2, 7, 10, 18, 21, 45, 50, 71, 96, 99, 114, 122, 154, 178, 185, 208, 232, 237, 271, 333, 349, 360], "iterative_post_order_travers": 2, "leaf": [2, 10, 99, 109, 154, 272, 327, 349, 354, 360], "post_order_traversal_it": 2, "iterative_pre_order_travers": 2, "pre_order_traversal_it": 2, "pre_order_travers": [2, 128], "node_numb": [2, 10], "node_number_at_depth": 2, "node_number_to_the_right": 2, "given": [2, 3, 6, 8, 9, 10, 15, 16, 18, 20, 21, 22, 24, 25, 28, 29, 31, 32, 35, 38, 45, 46, 47, 50, 51, 53, 54, 55, 57, 58, 61, 62, 64, 65, 67, 68, 70, 71, 72, 75, 76, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 95, 96, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 142, 143, 144, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 165, 167, 169, 170, 172, 178, 179, 180, 181, 183, 184, 185, 186, 190, 193, 194, 208, 209, 210, 211, 212, 213, 214, 215, 218, 221, 222, 223, 224, 225, 226, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 246, 252, 254, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 283, 284, 285, 286, 289, 290, 293, 296, 297, 298, 299, 302, 303, 306, 308, 309, 310, 328, 331, 334, 335, 336, 338, 339, 340, 341, 342, 343, 345, 346, 349, 352, 353, 354, 357, 358, 359, 363, 364, 367, 369], "paths_at_depth": 2, "ascii_art": [2, 10, 54, 66, 99, 108, 109, 117, 118, 130, 152, 154, 156, 193, 194, 211, 212, 224, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 264, 265, 266, 267, 273, 303, 310, 341, 343], "___o____": 2, "o_": [2, 10, 97, 117, 180, 294], "o": [2, 3, 10, 12, 25, 29, 32, 45, 57, 72, 84, 85, 87, 90, 96, 97, 103, 106, 109, 111, 117, 118, 139, 152, 154, 156, 158, 169, 170, 178, 180, 185, 188, 189, 190, 222, 223, 224, 228, 230, 232, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 264, 265, 266, 267, 270, 272, 276, 294, 298, 299, 306, 318, 328, 349, 353, 354, 357, 360, 369], "rang": [2, 3, 6, 8, 9, 10, 12, 15, 16, 18, 25, 26, 27, 29, 32, 47, 54, 61, 65, 70, 75, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 97, 99, 106, 108, 110, 113, 114, 115, 116, 118, 121, 122, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 142, 143, 144, 147, 151, 152, 156, 157, 158, 168, 169, 170, 178, 181, 184, 185, 186, 187, 189, 226, 228, 233, 235, 236, 239, 252, 254, 265, 272, 275, 276, 289, 296, 298, 299, 301, 304, 306, 308, 309, 310, 311, 318, 331, 332, 334, 338, 341, 343, 345, 349, 352, 354, 357, 358, 359, 360, 361, 362, 364, 367, 368, 369], "right": [2, 3, 8, 10, 15, 16, 25, 31, 50, 56, 64, 67, 73, 75, 86, 89, 95, 96, 97, 99, 105, 106, 107, 110, 111, 112, 114, 118, 119, 122, 124, 125, 128, 129, 136, 137, 139, 142, 143, 144, 145, 154, 156, 157, 158, 159, 160, 162, 170, 174, 184, 185, 190, 208, 209, 212, 215, 216, 222, 226, 229, 231, 235, 236, 237, 254, 270, 271, 272, 273, 274, 275, 280, 282, 285, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 304, 308, 309, 310, 324, 330, 338, 341, 343, 347, 352, 354, 356, 357, 358, 369], "strictli": [2, 10, 16, 31, 58, 71, 97, 99, 114, 118, 128, 130, 144, 149, 158, 160, 170, 180, 185, 234, 239, 265, 273, 276, 281, 293, 296, 297, 299, 301, 303, 304, 336, 337, 338, 341, 342, 349, 354, 357, 369], "paths_to_the_right": 2, "choos": [2, 3, 16, 57, 72, 76, 97, 99, 106, 110, 113, 122, 139, 160, 186, 224, 235, 238, 266, 272, 275, 338, 341, 349, 357], "1st": [2, 9, 136], "3rd": [2, 9, 25, 134, 157], "2nd": [2, 77, 157, 298, 311], "latter": [2, 15, 16, 60, 73, 91, 97, 106, 108, 120, 136, 143, 144, 154, 158, 185, 230, 272, 299, 338, 341, 352, 367], "zero": [2, 6, 9, 10, 18, 29, 31, 35, 38, 55, 58, 73, 76, 89, 90, 102, 103, 106, 107, 108, 110, 117, 118, 119, 122, 124, 125, 129, 136, 139, 142, 143, 144, 147, 158, 160, 161, 162, 165, 170, 171, 180, 185, 190, 194, 208, 213, 223, 229, 230, 232, 233, 235, 238, 239, 240, 254, 269, 270, 274, 281, 286, 292, 296, 297, 298, 299, 301, 306, 308, 309, 310, 311, 316, 338, 340, 341, 343, 345, 347, 349, 352, 354, 357, 369], "fix": [2, 3, 9, 10, 18, 20, 22, 24, 25, 26, 29, 31, 32, 47, 50, 52, 53, 57, 61, 62, 67, 72, 75, 78, 81, 89, 96, 98, 99, 106, 114, 118, 119, 120, 122, 125, 126, 128, 137, 139, 143, 144, 149, 150, 151, 156, 157, 158, 160, 162, 166, 169, 170, 171, 178, 212, 219, 222, 224, 232, 233, 235, 236, 237, 238, 239, 263, 270, 272, 275, 279, 287, 292, 299, 303, 304, 310, 311, 313, 315, 318, 320, 322, 323, 326, 329, 331, 334, 335, 336, 338, 341, 343, 349, 354, 356, 357, 364, 367], "directli": [2, 22, 25, 29, 35, 58, 83, 96, 97, 99, 106, 107, 110, 118, 122, 128, 129, 130, 136, 144, 170, 171, 178, 180, 185, 196, 208, 215, 229, 230, 231, 233, 236, 270, 272, 275, 276, 293, 298, 305, 328, 340, 342, 343, 344, 347, 349], "______o_______": 2, "_o__": [2, 10, 154], "t2": [2, 10, 15, 18, 21, 106, 107, 128, 137, 167, 194, 215, 236, 265, 270, 273, 296, 310, 341, 352], "post_order_travers": [2, 128], "yield": [2, 6, 10, 18, 25, 29, 51, 55, 67, 81, 89, 90, 91, 98, 99, 108, 112, 117, 118, 120, 122, 125, 138, 149, 158, 170, 181, 185, 210, 211, 224, 229, 239, 241, 271, 273, 276, 298, 301, 309, 310, 318, 338, 341, 349, 358, 362, 364], "shown": [2, 10, 16, 18, 21, 22, 58, 59, 77, 99, 134, 143, 144, 152, 158, 160, 210, 232, 294, 298, 300, 309, 341, 345, 364], "anoth": [2, 10, 25, 29, 33, 55, 57, 81, 83, 90, 97, 106, 108, 109, 111, 118, 128, 130, 139, 142, 143, 144, 145, 152, 154, 158, 159, 170, 171, 174, 179, 184, 185, 212, 222, 224, 229, 232, 233, 235, 239, 262, 270, 272, 275, 281, 282, 284, 289, 290, 296, 297, 298, 299, 301, 304, 345, 347, 349, 354, 357, 358], "__1____": 2, "8_": 2, "3_": 2, "nonempti": [2, 10, 25, 29, 50, 99, 139, 142, 170, 275, 276, 281, 296, 297, 299, 301, 304, 309, 310, 318, 341], "to_hexacod": 2, "transform": [2, 10, 16, 35, 58, 75, 90, 106, 120, 128, 143, 144, 145, 169, 170, 185, 235, 236, 289, 298, 299, 338, 341, 354, 357], "hexadecim": [2, 340, 353], "string": [2, 10, 18, 21, 22, 25, 28, 31, 38, 48, 50, 53, 57, 58, 61, 68, 70, 72, 80, 81, 84, 87, 89, 90, 99, 100, 106, 111, 112, 113, 117, 122, 125, 130, 132, 134, 137, 144, 148, 149, 153, 154, 155, 156, 158, 162, 170, 172, 174, 178, 180, 185, 202, 212, 219, 222, 230, 232, 235, 237, 270, 275, 280, 282, 299, 303, 309, 310, 334, 338, 339, 341, 345, 350, 352, 353, 354, 357, 358, 360, 361, 363, 364, 366, 369], "definit": [2, 6, 8, 9, 10, 15, 16, 21, 22, 25, 29, 32, 38, 53, 55, 58, 67, 80, 81, 83, 87, 89, 90, 97, 99, 100, 106, 108, 112, 114, 118, 120, 128, 129, 130, 137, 141, 142, 143, 144, 147, 151, 156, 158, 161, 170, 180, 182, 183, 185, 186, 212, 223, 229, 232, 234, 236, 237, 238, 239, 272, 273, 275, 276, 281, 282, 289, 295, 296, 297, 298, 299, 301, 304, 309, 311, 328, 338, 340, 341, 342, 349, 352, 354, 357, 360, 361, 364], "hexacod": 2, "valenc": 2, "up": [2, 3, 18, 22, 25, 29, 32, 45, 55, 62, 76, 81, 83, 90, 97, 99, 105, 106, 107, 112, 118, 122, 125, 127, 129, 131, 132, 134, 137, 139, 143, 145, 150, 152, 157, 158, 160, 162, 166, 170, 178, 180, 181, 184, 185, 208, 218, 224, 227, 231, 235, 236, 239, 254, 256, 262, 264, 265, 266, 270, 279, 286, 298, 306, 308, 310, 311, 327, 341, 343, 345, 354, 356, 357, 360, 363], "15": [2, 7, 9, 15, 18, 21, 25, 29, 50, 52, 67, 75, 76, 78, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 97, 99, 100, 103, 106, 107, 112, 114, 129, 134, 136, 137, 139, 143, 152, 158, 159, 162, 169, 178, 179, 180, 182, 183, 184, 185, 187, 190, 196, 198, 204, 206, 207, 208, 222, 224, 232, 233, 234, 235, 236, 238, 239, 271, 272, 275, 293, 299, 301, 308, 310, 311, 318, 319, 335, 341, 343, 344, 345, 348, 349, 352, 354, 355, 357, 361, 362, 364, 365], "concaten": [2, 16, 29, 64, 73, 89, 99, 106, 107, 112, 139, 143, 144, 154, 170, 236, 276, 292, 298, 310, 337, 341, 343, 354, 362, 363, 364], "from_hexacod": [2, 10, 272], "revers": [2, 3, 10, 16, 23, 28, 29, 63, 67, 68, 71, 81, 99, 105, 106, 107, 110, 117, 118, 120, 122, 139, 141, 143, 144, 149, 161, 162, 170, 175, 178, 180, 184, 185, 196, 212, 215, 228, 229, 233, 262, 273, 276, 298, 299, 310, 338, 339, 341, 343, 349, 354, 357, 362, 364], "import": [2, 3, 7, 8, 10, 11, 12, 15, 16, 18, 20, 21, 25, 26, 27, 28, 29, 31, 32, 36, 38, 45, 47, 49, 54, 55, 57, 58, 63, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 112, 116, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 132, 134, 136, 137, 138, 141, 142, 143, 144, 145, 147, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 170, 171, 175, 178, 181, 182, 183, 185, 186, 187, 189, 190, 191, 193, 194, 196, 198, 202, 204, 206, 208, 212, 215, 218, 219, 220, 221, 222, 223, 224, 226, 228, 230, 231, 232, 233, 235, 236, 237, 239, 262, 268, 272, 273, 275, 276, 279, 285, 286, 287, 289, 292, 293, 295, 298, 299, 302, 304, 306, 309, 311, 318, 321, 322, 328, 331, 332, 333, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 352, 354, 355, 356, 357, 359, 360, 361, 364, 365, 368, 369], "an_el": [2, 3, 7, 10, 12, 15, 16, 24, 25, 31, 33, 57, 67, 68, 70, 83, 96, 97, 108, 109, 110, 111, 117, 120, 126, 127, 130, 139, 142, 143, 144, 149, 156, 162, 169, 179, 181, 185, 188, 218, 229, 230, 231, 233, 234, 236, 238, 239, 240, 242, 256, 261, 269, 272, 286, 292, 298, 305, 331, 338, 341, 342, 343, 349, 353, 369], "3020010": 2, "a0000000000000000": 2, "a0000000000": 2, "500000": [2, 156], "tree_factori": 2, "factori": [2, 6, 10, 24, 25, 26, 32, 52, 97, 128, 154, 156, 162, 170, 186, 230, 272, 281, 284, 290, 296, 297, 299, 310, 311, 338, 341, 343], "prod_": [2, 6, 10, 24, 59, 60, 72, 97, 113, 114, 142, 144, 158, 172, 185, 186, 208, 212, 213, 239, 276, 280, 281, 282, 284, 296, 297, 298, 299, 301, 306, 318, 341, 343], "mbox": [2, 25, 125, 143, 185, 338], "ch": [2, 252, 254, 354], "produc": [2, 3, 18, 45, 48, 67, 72, 75, 77, 78, 83, 88, 89, 97, 106, 112, 118, 124, 139, 185, 215, 222, 224, 230, 232, 233, 265, 270, 271, 275, 349, 360], "descript": [2, 3, 9, 10, 25, 28, 58, 76, 78, 98, 99, 106, 107, 109, 111, 117, 118, 120, 128, 129, 149, 155, 156, 158, 185, 224, 229, 234, 235, 239, 275, 280, 281, 296, 297, 299, 301, 308, 341, 357], "_from_hexacode_aux": 2, "12000": 2, "1200": [2, 139], "happen": [2, 18, 96, 106, 128, 154, 170, 178, 235, 292, 299, 309, 349, 360], "prefix": [2, 11, 15, 16, 36, 73, 97, 100, 106, 108, 110, 113, 122, 131, 143, 147, 152, 159, 161, 178, 179, 183, 184, 185, 190, 229, 230, 232, 239, 270, 271, 278, 279, 280, 286, 288, 291, 295, 298, 299, 338, 345, 349, 352, 353, 354, 357, 358, 360, 361, 362, 363, 364], "14": [2, 3, 7, 8, 10, 11, 15, 18, 21, 23, 25, 38, 47, 75, 76, 78, 81, 82, 86, 87, 88, 89, 90, 91, 93, 97, 99, 100, 106, 107, 113, 116, 122, 128, 129, 134, 136, 137, 139, 143, 151, 152, 153, 154, 155, 158, 162, 170, 178, 179, 180, 183, 184, 185, 186, 194, 209, 219, 222, 232, 233, 234, 236, 239, 271, 273, 275, 276, 299, 301, 306, 307, 310, 311, 318, 319, 331, 333, 335, 341, 343, 344, 345, 349, 352, 354, 355, 357, 358, 361, 364, 365, 369], "One": [2, 12, 25, 28, 32, 33, 38, 45, 53, 59, 67, 70, 73, 75, 81, 82, 87, 89, 94, 96, 97, 99, 106, 122, 128, 139, 143, 144, 145, 148, 149, 154, 158, 161, 162, 169, 170, 178, 185, 187, 208, 215, 224, 228, 235, 236, 238, 239, 248, 256, 272, 275, 295, 298, 299, 318, 328, 332, 335, 342, 343, 345, 347, 349], "creat": [2, 6, 9, 23, 24, 25, 29, 33, 38, 49, 59, 61, 67, 68, 77, 78, 81, 94, 96, 97, 99, 106, 110, 112, 113, 118, 122, 128, 129, 130, 132, 134, 136, 139, 149, 154, 155, 158, 161, 164, 169, 170, 172, 178, 180, 181, 184, 185, 190, 196, 207, 208, 209, 212, 213, 215, 222, 223, 228, 229, 233, 235, 236, 237, 262, 263, 270, 272, 275, 276, 281, 284, 290, 296, 297, 298, 299, 306, 308, 340, 341, 345, 349, 350, 354, 357, 360, 369], "affine_permut": 3, "affinepermut": 3, "lst": [3, 10, 25, 149, 151, 157, 337], "window": [3, 18, 21, 45, 181, 241, 354], "notat": [3, 10, 16, 22, 29, 54, 56, 60, 64, 67, 73, 75, 96, 97, 99, 105, 106, 108, 119, 120, 128, 130, 137, 143, 144, 145, 148, 158, 161, 170, 181, 184, 185, 208, 209, 215, 222, 224, 229, 231, 236, 238, 241, 263, 268, 269, 270, 273, 274, 275, 280, 281, 282, 283, 284, 289, 290, 292, 296, 297, 298, 299, 309, 310, 318, 338, 341, 343, 349, 366], "zz": [3, 10, 11, 12, 15, 16, 18, 24, 25, 37, 41, 45, 47, 50, 57, 58, 59, 60, 61, 76, 97, 99, 106, 107, 108, 109, 110, 111, 117, 118, 129, 137, 142, 143, 144, 145, 148, 152, 158, 159, 160, 161, 162, 170, 178, 179, 185, 186, 188, 190, 194, 213, 222, 224, 229, 235, 239, 240, 241, 244, 268, 269, 273, 274, 275, 276, 279, 280, 281, 283, 287, 290, 294, 296, 297, 298, 299, 300, 301, 306, 327, 331, 338, 341, 342, 343, 345, 347, 349, 353, 354, 364, 367, 369], "affinepermutationgroup": 3, "p": [3, 6, 8, 9, 10, 15, 16, 18, 22, 24, 25, 26, 28, 29, 32, 38, 41, 47, 50, 52, 53, 55, 56, 57, 61, 62, 63, 69, 72, 73, 75, 76, 77, 78, 80, 81, 86, 87, 90, 92, 93, 95, 96, 97, 99, 100, 105, 106, 107, 109, 111, 114, 115, 116, 118, 119, 120, 122, 127, 128, 129, 131, 132, 134, 136, 137, 138, 139, 142, 143, 144, 145, 147, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 169, 170, 171, 172, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 213, 218, 224, 229, 230, 233, 235, 236, 237, 238, 239, 240, 259, 268, 269, 270, 273, 274, 275, 276, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 311, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 347, 349, 352, 353, 354, 357, 358, 360, 361, 363, 364, 369], "apply_simple_reflect": [3, 229, 231, 271], "side": [3, 10, 11, 22, 25, 90, 107, 112, 117, 118, 129, 132, 136, 142, 143, 144, 145, 170, 172, 184, 229, 231, 235, 237, 239, 261, 267, 268, 271, 335, 354], "simpl": [3, 7, 10, 22, 24, 32, 33, 38, 45, 47, 48, 50, 53, 58, 59, 60, 62, 66, 75, 81, 83, 87, 89, 90, 97, 100, 112, 127, 128, 134, 143, 154, 158, 160, 161, 162, 169, 170, 178, 180, 185, 213, 218, 222, 224, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 254, 256, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 298, 301, 306, 311, 319, 332, 335, 339, 341, 342, 349, 354, 358], "determin": [3, 6, 9, 10, 12, 18, 21, 22, 28, 29, 36, 37, 50, 53, 55, 58, 67, 71, 88, 89, 91, 94, 99, 100, 106, 107, 108, 112, 114, 118, 119, 122, 129, 132, 139, 142, 143, 144, 148, 149, 155, 156, 158, 162, 170, 172, 178, 180, 181, 182, 184, 185, 194, 209, 218, 223, 230, 231, 232, 235, 236, 242, 261, 270, 274, 275, 280, 283, 295, 298, 299, 301, 308, 309, 314, 317, 324, 330, 338, 342, 343, 345, 349, 367], "left": [3, 6, 8, 10, 11, 16, 24, 25, 29, 31, 33, 50, 56, 64, 67, 73, 81, 90, 95, 96, 97, 99, 106, 107, 110, 111, 112, 113, 114, 118, 119, 122, 124, 125, 128, 129, 130, 136, 137, 139, 141, 142, 143, 144, 145, 154, 156, 158, 159, 160, 162, 170, 174, 180, 184, 185, 190, 208, 209, 212, 215, 216, 222, 226, 229, 231, 233, 235, 237, 254, 271, 272, 274, 275, 276, 280, 282, 285, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 303, 304, 308, 309, 310, 324, 330, 338, 341, 343, 347, 354, 357, 358, 369], "grassmannian_quoti": 3, "grassmannian": [3, 22, 33, 130, 132, 158, 229, 286, 292], "uniqu": [3, 10, 16, 22, 25, 29, 45, 47, 53, 55, 56, 58, 61, 64, 66, 67, 69, 76, 78, 81, 87, 89, 90, 97, 99, 106, 107, 110, 112, 118, 119, 128, 129, 136, 137, 139, 143, 148, 154, 178, 180, 185, 194, 209, 224, 229, 230, 232, 233, 234, 235, 236, 237, 239, 261, 263, 268, 270, 272, 276, 280, 281, 284, 296, 297, 298, 299, 301, 309, 311, 335, 341, 343, 349, 354, 357, 364], "accord": [3, 10, 16, 18, 25, 29, 71, 87, 90, 97, 100, 102, 106, 109, 112, 118, 122, 128, 137, 139, 154, 170, 180, 181, 184, 185, 186, 219, 229, 235, 237, 241, 254, 272, 275, 276, 293, 299, 340, 341, 349, 354, 358], "gq": [3, 85], "is_i_grassmannian": 3, "reduced_word": [3, 23, 24, 25, 170, 184, 230, 231, 233, 234, 236, 237, 238, 239, 273, 335], "prod": [3, 24, 158, 185, 270, 299, 306, 338], "gqleft": 3, "index_set": [3, 24, 35, 38, 40, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 68, 160, 170, 209, 212, 218, 223, 224, 225, 226, 227, 228, 229, 230, 234, 236, 237, 239, 240, 241, 242, 244, 245, 248, 250, 256, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 303, 335], "either": [3, 6, 10, 11, 15, 16, 22, 24, 29, 33, 48, 75, 78, 80, 81, 84, 87, 89, 90, 99, 100, 106, 107, 111, 112, 113, 116, 117, 118, 122, 128, 129, 130, 132, 136, 142, 143, 144, 147, 152, 154, 155, 158, 160, 162, 170, 178, 180, 181, 185, 212, 213, 223, 224, 226, 229, 230, 234, 236, 270, 271, 273, 274, 299, 303, 304, 306, 307, 308, 309, 310, 328, 334, 337, 341, 343, 347, 349, 354, 357, 358, 360, 368], "ident": [3, 16, 24, 32, 33, 55, 73, 81, 97, 106, 107, 108, 110, 118, 128, 136, 137, 141, 143, 144, 145, 149, 154, 158, 159, 161, 167, 170, 179, 181, 185, 186, 190, 194, 212, 218, 222, 224, 229, 230, 235, 236, 240, 241, 263, 270, 273, 274, 289, 293, 299, 318, 338, 341, 349, 354, 357, 367, 368], "sole": [3, 18, 128, 170, 193, 194, 310, 341], "fals": [3, 6, 9, 10, 12, 16, 18, 20, 21, 22, 24, 25, 29, 31, 32, 33, 38, 46, 47, 49, 50, 52, 57, 58, 61, 63, 65, 68, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 102, 106, 107, 108, 110, 111, 112, 113, 114, 117, 118, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 136, 137, 139, 142, 143, 144, 145, 148, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 174, 178, 179, 180, 181, 184, 185, 188, 190, 196, 202, 204, 206, 208, 209, 212, 213, 215, 216, 218, 222, 223, 224, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 282, 287, 292, 293, 298, 299, 301, 302, 303, 306, 308, 309, 310, 311, 317, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 349, 350, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 365, 367, 368, 369], "from_word": [3, 276], "is_on": [3, 233], "lower_cov": [3, 184, 185], "lower": [3, 38, 50, 58, 77, 79, 90, 106, 112, 118, 120, 121, 122, 128, 129, 137, 156, 158, 161, 170, 178, 180, 181, 185, 237, 275, 297, 309, 310, 321, 341, 353, 354, 364], "less": [3, 9, 10, 18, 33, 80, 91, 97, 99, 118, 157, 158, 159, 160, 170, 174, 178, 180, 184, 185, 212, 214, 222, 229, 233, 240, 271, 286, 292, 298, 299, 303, 305, 306, 310, 338, 341, 343, 345, 349, 350, 352, 354, 356, 357, 364, 369], "length": [3, 10, 16, 18, 22, 24, 25, 26, 27, 29, 32, 33, 36, 49, 50, 53, 55, 56, 58, 60, 61, 64, 67, 69, 70, 71, 78, 81, 87, 89, 94, 96, 99, 100, 103, 105, 106, 107, 112, 118, 121, 122, 123, 125, 126, 127, 128, 130, 132, 136, 138, 139, 142, 143, 144, 149, 151, 152, 157, 158, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 178, 181, 184, 185, 193, 194, 209, 212, 213, 214, 219, 221, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 270, 271, 273, 274, 275, 276, 280, 281, 283, 284, 285, 290, 292, 293, 296, 297, 298, 299, 301, 304, 306, 307, 309, 310, 318, 331, 334, 337, 338, 340, 341, 342, 343, 345, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369], "relat": [3, 4, 6, 9, 10, 11, 16, 18, 21, 25, 32, 39, 61, 62, 63, 67, 74, 75, 76, 78, 81, 82, 84, 86, 89, 92, 95, 97, 99, 106, 107, 108, 112, 128, 129, 143, 144, 145, 148, 149, 154, 158, 170, 173, 178, 180, 181, 183, 184, 185, 215, 222, 226, 233, 236, 237, 238, 268, 270, 273, 275, 283, 285, 289, 290, 295, 296, 297, 298, 299, 301, 302, 309, 335, 338, 339, 341, 342, 343, 344, 346, 347, 349, 354, 357], "transposit": [3, 32, 33, 97, 106, 127, 130, 158, 162, 170, 171, 185, 274, 338, 339, 341, 368], "indic": [3, 6, 9, 18, 25, 29, 38, 49, 50, 58, 63, 68, 75, 94, 96, 99, 106, 110, 118, 129, 130, 132, 134, 139, 144, 147, 149, 152, 158, 161, 162, 164, 170, 171, 172, 179, 184, 189, 190, 208, 212, 216, 220, 222, 223, 224, 229, 231, 232, 234, 235, 239, 252, 254, 263, 270, 273, 286, 298, 299, 302, 308, 310, 331, 337, 338, 342, 343, 354, 360, 364], "These": [3, 6, 18, 25, 50, 55, 65, 75, 76, 78, 81, 88, 96, 99, 108, 109, 110, 111, 114, 118, 119, 120, 127, 128, 130, 132, 139, 143, 144, 145, 153, 155, 158, 159, 165, 166, 169, 170, 178, 180, 184, 185, 186, 191, 196, 209, 210, 213, 222, 229, 236, 238, 239, 252, 254, 270, 275, 276, 288, 289, 296, 298, 299, 301, 302, 306, 308, 309, 311, 331, 337, 338, 340, 342, 343, 344, 347, 349, 356, 357, 360], "signatur": [3, 50, 60, 65, 67, 170, 339], "l": [3, 6, 9, 10, 12, 25, 29, 32, 36, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 61, 63, 67, 69, 72, 73, 76, 78, 80, 81, 86, 87, 88, 89, 90, 97, 98, 99, 100, 106, 112, 114, 116, 118, 119, 121, 122, 123, 124, 125, 126, 129, 137, 138, 142, 143, 144, 149, 156, 157, 158, 159, 160, 162, 170, 171, 178, 180, 181, 183, 184, 185, 188, 189, 194, 209, 212, 213, 216, 218, 224, 229, 231, 232, 233, 235, 238, 239, 240, 241, 242, 254, 256, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 285, 286, 289, 293, 297, 299, 307, 310, 311, 314, 318, 320, 325, 327, 328, 331, 338, 340, 341, 342, 343, 344, 345, 349, 352, 353, 354, 356, 357, 359, 360, 362, 363, 367, 368], "to_weyl_group_el": 3, "cartan_typ": [3, 35, 36, 38, 47, 48, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 170, 208, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 335], "basic": [3, 28, 57, 106, 121, 134, 167, 178, 184, 212, 224, 236, 238, 239, 246, 262, 264, 266, 273, 298, 302, 327, 341, 349, 357], "deriv": [3, 25, 76, 95, 107, 139, 162, 178, 185, 218, 224, 227, 236, 280, 281, 296, 297, 299, 301, 318, 349, 354], "bb2005": [3, 112, 131], "eri1995": 3, "ct": [3, 31, 40, 47, 48, 55, 57, 58, 59, 63, 65, 208, 222, 223, 224, 227, 228, 233, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 270, 271], "cartantyp": [3, 18, 45, 47, 51, 55, 58, 63, 112, 197, 208, 210, 211, 212, 213, 217, 218, 222, 223, 224, 225, 227, 228, 229, 231, 233, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "posit": [3, 7, 8, 10, 18, 21, 22, 23, 24, 25, 29, 31, 32, 36, 38, 50, 53, 54, 55, 58, 59, 64, 67, 68, 72, 81, 82, 83, 86, 87, 96, 97, 99, 100, 106, 107, 108, 112, 114, 116, 118, 120, 121, 122, 125, 126, 127, 129, 130, 132, 137, 139, 141, 142, 143, 144, 147, 156, 157, 158, 159, 162, 166, 167, 170, 172, 181, 184, 185, 189, 208, 213, 214, 223, 224, 229, 232, 235, 237, 239, 240, 241, 252, 254, 267, 268, 269, 270, 271, 273, 274, 275, 280, 281, 282, 284, 286, 287, 289, 290, 292, 296, 297, 298, 299, 301, 302, 303, 305, 306, 307, 309, 310, 311, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 357, 363, 364, 367, 368], "equival": [3, 6, 10, 15, 18, 20, 22, 24, 29, 55, 58, 62, 63, 70, 71, 73, 75, 76, 78, 81, 83, 89, 95, 97, 99, 106, 107, 122, 132, 134, 142, 143, 144, 149, 154, 156, 158, 160, 161, 162, 167, 169, 170, 180, 185, 186, 190, 210, 211, 213, 222, 224, 229, 232, 268, 270, 271, 273, 281, 284, 290, 292, 296, 297, 299, 301, 306, 310, 311, 335, 338, 341, 342, 343, 349, 354, 356, 357, 364], "sinc": [3, 18, 25, 28, 29, 35, 38, 55, 58, 67, 73, 81, 87, 97, 99, 100, 106, 111, 112, 113, 117, 118, 122, 125, 136, 137, 143, 144, 145, 154, 158, 170, 208, 214, 222, 223, 229, 232, 235, 239, 262, 265, 268, 269, 270, 272, 273, 275, 276, 280, 295, 296, 298, 299, 306, 331, 335, 336, 341, 349, 354, 357, 358], "demonstr": [3, 106, 107, 144, 145, 185, 229, 298, 331, 349], "decid": [3, 9, 106, 108, 122, 125, 178, 341], "prefer": [3, 18, 38, 125, 157, 160, 161, 171, 222, 261, 271, 298, 303, 310, 338, 341], "easili": [3, 25, 71, 99, 106, 112, 144, 298, 299, 301, 302, 309, 338, 349, 354, 357], "get": [3, 10, 16, 18, 25, 29, 38, 45, 53, 81, 83, 88, 96, 106, 112, 116, 121, 127, 137, 139, 143, 144, 145, 154, 156, 158, 160, 161, 162, 170, 178, 180, 181, 184, 185, 186, 209, 214, 215, 218, 219, 222, 223, 224, 231, 232, 233, 234, 235, 238, 268, 269, 274, 280, 289, 290, 292, 298, 299, 306, 307, 311, 340, 344, 354, 357, 358, 363, 369], "thing": [3, 29, 74, 84, 95, 170, 185, 231, 235, 310, 311, 345, 360, 364], "has_right_desc": [3, 170, 271], "particular": [3, 10, 15, 16, 21, 29, 31, 53, 57, 67, 73, 75, 76, 83, 87, 89, 90, 94, 96, 99, 106, 108, 110, 118, 120, 121, 125, 128, 129, 136, 143, 144, 156, 158, 160, 161, 170, 179, 183, 184, 185, 190, 224, 226, 228, 231, 233, 235, 236, 237, 238, 239, 240, 241, 262, 263, 269, 271, 273, 275, 281, 284, 285, 286, 290, 296, 297, 298, 299, 304, 310, 318, 327, 328, 332, 338, 340, 341, 342, 343, 345, 349, 354, 360], "is_fully_commut": [3, 112], "lehmer": [3, 170], "to_lehmer_cod": [3, 170, 274], "onc": [3, 29, 53, 75, 78, 89, 90, 106, 113, 121, 137, 158, 161, 170, 178, 185, 190, 218, 222, 224, 270, 271, 279, 298, 336, 338, 341, 349, 353, 354], "bound": [3, 9, 16, 18, 25, 29, 33, 36, 77, 79, 90, 108, 120, 121, 122, 128, 130, 142, 144, 149, 158, 170, 172, 178, 180, 185, 229, 232, 235, 239, 286, 292, 298, 299, 310, 341, 349, 354, 357], "read": [3, 10, 50, 67, 73, 84, 93, 96, 99, 106, 107, 118, 124, 125, 139, 142, 144, 151, 157, 158, 160, 170, 194, 196, 209, 215, 222, 224, 233, 273, 293, 302, 303, 310, 311, 328, 341, 343, 354, 358, 360, 364], "row": [3, 6, 15, 18, 26, 29, 31, 35, 50, 52, 53, 55, 67, 68, 73, 78, 80, 82, 87, 88, 89, 90, 92, 96, 97, 98, 99, 113, 114, 118, 120, 124, 125, 129, 130, 134, 135, 136, 137, 139, 142, 144, 155, 156, 158, 159, 160, 162, 165, 168, 170, 188, 193, 194, 208, 209, 212, 213, 214, 215, 223, 224, 228, 236, 271, 273, 275, 280, 282, 292, 293, 294, 303, 308, 309, 310, 311, 336, 338, 341, 342, 343, 345, 349, 357], "grassmanian": 3, "domin": [3, 38, 40, 47, 50, 51, 54, 58, 59, 103, 125, 158, 160, 162, 184, 208, 213, 231, 232, 233, 238, 239, 241, 267, 269, 270, 287, 337, 341, 342, 343, 350, 357], "well": [3, 9, 10, 18, 21, 24, 29, 45, 55, 71, 93, 96, 97, 98, 106, 107, 108, 112, 120, 128, 129, 135, 143, 144, 145, 161, 170, 181, 185, 190, 212, 213, 216, 224, 225, 226, 227, 236, 241, 252, 254, 268, 273, 281, 284, 290, 296, 297, 299, 301, 304, 309, 327, 328, 332, 335, 341, 343, 349, 352, 354, 357, 358, 367, 369], "to_bounded_partit": [3, 33, 130, 158], "to_domin": [3, 232], "to_cor": [3, 158], "final": [3, 29, 60, 78, 89, 90, 96, 97, 99, 106, 107, 118, 128, 129, 130, 144, 156, 158, 162, 167, 185, 222, 233, 235, 239, 273, 302, 331, 335, 338, 341, 349, 354, 360], "insert": [3, 8, 10, 28, 36, 106, 114, 118, 128, 143, 158, 162, 170, 198, 214, 265, 299, 310, 341], "tableau": [3, 6, 15, 28, 31, 36, 52, 53, 54, 55, 57, 67, 68, 96, 99, 114, 118, 120, 130, 139, 141, 144, 145, 158, 162, 164, 165, 167, 168, 170, 172, 193, 194, 197, 209, 213, 214, 215, 273, 303, 310, 336, 338, 341, 342, 343, 354, 361], "tableau_of_word": 3, "form": [3, 9, 10, 11, 16, 22, 24, 25, 29, 46, 48, 50, 52, 53, 57, 59, 60, 67, 68, 72, 73, 76, 78, 80, 81, 83, 84, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 106, 107, 112, 117, 118, 125, 128, 129, 130, 135, 136, 137, 143, 144, 145, 158, 162, 170, 178, 180, 182, 184, 185, 213, 222, 224, 226, 227, 229, 230, 232, 233, 235, 236, 239, 244, 260, 265, 268, 272, 273, 274, 275, 278, 281, 284, 285, 289, 290, 293, 296, 297, 298, 299, 301, 303, 306, 310, 311, 333, 334, 335, 338, 341, 342, 343, 349, 354, 356, 357, 360, 368, 369], "affinepermutationgroupgener": 3, "uniquerepresent": [3, 6, 7, 8, 10, 11, 15, 16, 22, 24, 29, 31, 32, 33, 35, 36, 37, 38, 47, 48, 49, 50, 52, 54, 57, 58, 59, 60, 62, 65, 66, 67, 70, 72, 73, 96, 97, 99, 108, 110, 112, 113, 114, 118, 124, 125, 126, 127, 128, 130, 131, 132, 139, 143, 144, 148, 149, 150, 151, 154, 156, 157, 158, 161, 162, 167, 170, 172, 181, 183, 185, 190, 191, 194, 208, 210, 211, 213, 215, 219, 224, 227, 229, 230, 231, 232, 234, 236, 241, 263, 271, 272, 273, 275, 276, 282, 285, 286, 288, 289, 292, 293, 298, 303, 306, 308, 309, 310, 313, 314, 315, 316, 320, 323, 324, 326, 329, 330, 335, 337, 339, 341, 342, 343, 348, 350, 356, 359, 369], "cartan_matrix": [3, 22, 217, 223, 224, 228, 236, 239, 240, 241, 265, 267, 269], "matrix": [3, 6, 9, 15, 18, 20, 21, 22, 24, 25, 33, 41, 59, 61, 63, 76, 78, 80, 82, 87, 88, 89, 90, 96, 98, 99, 100, 106, 108, 112, 113, 114, 118, 124, 125, 129, 135, 136, 137, 142, 144, 147, 148, 149, 156, 158, 169, 170, 178, 179, 180, 181, 185, 186, 190, 212, 219, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 236, 237, 239, 240, 241, 259, 261, 262, 265, 267, 269, 271, 273, 280, 282, 283, 285, 292, 296, 297, 298, 299, 306, 308, 309, 311, 335, 338, 339, 341, 345, 347, 354, 357, 358, 364, 369], "note": [3, 6, 16, 18, 21, 22, 25, 29, 32, 47, 50, 53, 55, 56, 64, 67, 73, 76, 78, 81, 83, 87, 90, 94, 95, 96, 97, 98, 99, 102, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 132, 134, 136, 138, 139, 142, 143, 144, 149, 154, 158, 159, 170, 178, 180, 185, 208, 214, 222, 223, 224, 229, 233, 235, 238, 239, 241, 242, 245, 248, 250, 262, 263, 268, 269, 270, 271, 272, 273, 275, 292, 293, 296, 297, 298, 299, 307, 310, 318, 331, 332, 335, 336, 338, 341, 343, 346, 349, 354, 357, 359, 360, 364, 367, 368, 369], "alreadi": [3, 32, 71, 78, 83, 90, 94, 97, 99, 102, 105, 106, 120, 127, 132, 154, 161, 178, 185, 190, 224, 272, 280, 338, 341, 349, 357], "categori": [3, 6, 7, 10, 15, 16, 25, 29, 35, 38, 39, 41, 46, 47, 50, 53, 58, 59, 72, 73, 90, 96, 97, 108, 110, 112, 119, 122, 125, 127, 129, 142, 143, 144, 147, 154, 158, 162, 167, 170, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 190, 193, 194, 217, 225, 229, 238, 239, 268, 270, 271, 272, 286, 292, 298, 299, 305, 310, 333, 334, 338, 341, 343, 367, 369], "from_reduced_word": [3, 36, 49, 170, 229, 230, 231, 234, 236, 237, 239, 335], "is_crystallograph": [3, 223, 224, 226, 227, 228, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 265], "tell": [3, 125, 178, 222, 298, 335, 354], "crystallograph": [3, 223, 224, 226, 227, 228, 236, 238, 239, 241, 244, 261, 262, 265], "random_el": [3, 6, 10, 12, 25, 29, 30, 32, 72, 99, 114, 115, 125, 126, 128, 137, 139, 151, 154, 157, 158, 159, 169, 170, 172, 188, 275, 276, 310, 313, 315, 320, 326, 328, 331, 334, 341, 343, 349, 356, 367], "random": [3, 6, 10, 12, 18, 20, 21, 25, 28, 29, 30, 32, 72, 75, 81, 83, 87, 99, 100, 106, 113, 114, 117, 128, 134, 136, 137, 139, 151, 154, 157, 158, 159, 169, 170, 172, 179, 180, 184, 185, 188, 213, 237, 275, 276, 331, 334, 341, 343, 349, 354, 356, 357, 360, 364, 367], "specifi": [3, 6, 10, 15, 18, 21, 22, 25, 26, 27, 29, 32, 33, 35, 36, 40, 49, 50, 51, 52, 55, 56, 57, 58, 61, 64, 67, 75, 81, 87, 89, 90, 96, 97, 99, 100, 106, 107, 108, 113, 114, 115, 118, 120, 121, 122, 125, 128, 129, 130, 132, 134, 136, 139, 142, 143, 144, 145, 147, 149, 151, 154, 156, 157, 158, 159, 160, 162, 170, 174, 184, 185, 186, 190, 194, 208, 209, 212, 213, 214, 216, 219, 222, 223, 224, 225, 229, 231, 232, 233, 235, 238, 239, 252, 254, 270, 271, 272, 273, 275, 276, 280, 281, 282, 284, 290, 293, 296, 297, 298, 299, 303, 306, 308, 309, 310, 327, 334, 337, 341, 342, 343, 345, 347, 350, 352, 354, 356, 357, 363, 364, 367], "chosen": [3, 18, 21, 22, 53, 58, 59, 76, 97, 106, 107, 118, 127, 128, 130, 134, 154, 162, 236, 238, 263, 280, 299, 310, 347, 349, 358, 364], "1000": [3, 12, 116, 139, 158, 180, 185, 187, 311, 349, 352, 354, 357, 358, 360, 361, 362, 364], "start": [3, 10, 18, 21, 24, 25, 29, 32, 38, 50, 56, 63, 67, 78, 88, 89, 90, 96, 99, 100, 103, 106, 112, 115, 117, 121, 128, 132, 139, 143, 144, 145, 152, 156, 157, 158, 162, 165, 170, 178, 180, 184, 185, 189, 210, 220, 224, 229, 231, 233, 235, 236, 239, 242, 245, 248, 250, 262, 268, 273, 276, 293, 298, 310, 311, 334, 341, 345, 349, 352, 354, 357, 358, 360, 361, 363, 364, 369], "upper": [3, 18, 22, 23, 112, 118, 120, 121, 122, 128, 129, 156, 158, 166, 178, 180, 181, 185, 232, 237, 275, 289, 293, 294, 295, 300, 309, 310, 341, 353, 364], "Not": [3, 6, 18, 25, 38, 128, 178, 180, 185, 222, 239, 316, 354], "veri": [3, 25, 77, 78, 83, 87, 89, 93, 94, 106, 112, 122, 134, 136, 143, 144, 157, 158, 171, 178, 185, 224, 233, 275, 343, 349, 357], "uniform": [3, 10, 29, 87, 95, 128, 139, 154, 157, 158, 162, 170, 180, 185, 189, 218, 222, 233, 238, 275, 331, 334, 338, 341, 349, 357], "uniformli": [3, 6, 59, 114, 128, 137, 172, 210, 235, 275, 341, 349, 367], "lot": [3, 71, 76, 83, 91, 106, 107, 154, 158, 235, 262, 311, 341, 343], "coxeter_group": [3, 112, 220, 225, 231], "random_element_of_length": 3, "16": [3, 7, 9, 11, 25, 27, 52, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 91, 97, 99, 100, 106, 107, 122, 125, 129, 134, 136, 137, 152, 157, 158, 162, 170, 179, 180, 183, 185, 186, 194, 211, 221, 222, 227, 232, 233, 236, 268, 271, 285, 287, 299, 303, 306, 310, 311, 319, 331, 336, 340, 341, 343, 345, 347, 349, 352, 354, 355, 357, 358, 361, 365, 368, 369], "19": [3, 7, 22, 29, 75, 78, 79, 81, 82, 86, 87, 88, 89, 90, 91, 92, 97, 99, 100, 105, 106, 129, 136, 137, 144, 158, 162, 170, 180, 183, 184, 185, 188, 232, 236, 271, 286, 289, 298, 299, 310, 311, 319, 341, 344, 345, 349, 352, 354, 355, 357, 361, 364, 365, 369], "reflection_index_set": [3, 236, 237, 271], "weyl_group": [3, 231, 232, 235, 238, 239, 241, 270, 271], "act": [3, 6, 16, 23, 24, 32, 33, 55, 67, 69, 76, 78, 100, 106, 123, 130, 137, 144, 145, 158, 161, 162, 167, 170, 178, 181, 185, 209, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 238, 239, 271, 275, 285, 289, 298, 301, 310, 338, 341, 357], "affinepermutationgrouptypea": 3, "alia": [3, 6, 10, 11, 15, 16, 23, 24, 25, 29, 31, 32, 33, 35, 38, 49, 50, 51, 55, 57, 59, 61, 62, 72, 73, 75, 96, 97, 99, 106, 107, 110, 112, 113, 114, 118, 120, 122, 123, 125, 126, 128, 129, 130, 139, 143, 144, 149, 151, 152, 154, 157, 158, 159, 160, 162, 165, 166, 168, 169, 170, 172, 180, 181, 183, 184, 185, 186, 190, 193, 194, 208, 209, 210, 213, 215, 218, 219, 224, 229, 230, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 256, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 299, 303, 306, 308, 309, 310, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 326, 328, 329, 330, 331, 335, 336, 337, 339, 341, 342, 343, 348, 350, 354, 364, 369], "affinepermutationtypea": 3, "from_lehmer_cod": [3, 170], "typ": 3, "suppli": [3, 222, 224, 232, 270, 349], "part": [3, 16, 18, 21, 22, 23, 26, 29, 33, 50, 67, 73, 76, 83, 87, 89, 92, 97, 99, 105, 108, 109, 112, 113, 114, 118, 121, 122, 125, 130, 134, 139, 142, 144, 147, 149, 157, 158, 160, 161, 162, 169, 170, 178, 180, 184, 185, 186, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 230, 238, 275, 276, 285, 286, 287, 289, 292, 298, 299, 301, 306, 311, 337, 341, 349, 350, 354, 363, 369], "increas": [3, 16, 24, 25, 29, 31, 49, 71, 99, 108, 118, 120, 121, 127, 128, 134, 139, 144, 156, 157, 158, 170, 184, 185, 209, 212, 215, 232, 239, 272, 273, 275, 276, 281, 296, 297, 299, 301, 303, 304, 311, 333, 335, 336, 337, 338, 341, 343, 354, 358, 368], "decomposit": [3, 10, 29, 48, 55, 67, 69, 75, 82, 91, 99, 109, 112, 128, 149, 160, 170, 175, 178, 180, 185, 209, 222, 229, 239, 268, 299, 338, 354, 360], "itertool": [3, 25, 81, 106, 129, 143, 190, 345, 349, 352, 354, 355, 361, 364, 365], "affinepermutationgrouptypeb": 3, "affinepermutationgrouptypec": 3, "affinepermutationtypeb": 3, "affinepermutationtypec": 3, "affinepermutationgrouptyp": 3, "affinepermutationtyp": 3, "affinepermutationgrouptypeg": 3, "affinepermutationtypeg": 3, "apply_simple_reflection_left": [3, 170], "apply_simple_reflection_right": [3, 170], "indirect": [3, 10, 16, 25, 55, 73, 75, 89, 97, 99, 108, 109, 112, 117, 128, 143, 147, 156, 157, 159, 160, 165, 168, 170, 184, 190, 197, 202, 223, 226, 230, 270, 272, 274, 280, 282, 285, 286, 289, 290, 291, 292, 295, 299, 302, 338, 341, 342, 362], "doctest": [3, 10, 15, 16, 18, 25, 27, 28, 38, 55, 73, 75, 89, 97, 99, 102, 105, 106, 108, 109, 110, 112, 117, 122, 127, 128, 143, 144, 147, 156, 157, 159, 165, 170, 184, 190, 197, 202, 223, 226, 230, 262, 270, 272, 274, 280, 282, 285, 286, 289, 290, 291, 292, 295, 299, 302, 335, 338, 341, 342, 354, 362], "36": [3, 7, 25, 78, 81, 83, 86, 88, 89, 91, 118, 129, 136, 137, 141, 158, 178, 180, 185, 232, 236, 271, 275, 281, 296, 308, 311, 340, 349, 352, 354, 355, 361, 365, 369], "distinct": [3, 10, 46, 50, 70, 72, 75, 80, 87, 89, 90, 94, 106, 110, 134, 136, 137, 139, 142, 154, 156, 158, 170, 180, 184, 185, 210, 211, 222, 224, 233, 268, 272, 275, 276, 292, 299, 305, 306, 311, 341, 345, 349, 350, 354, 358, 359, 360, 364], "flip_automorph": 3, "s_0": [3, 15, 108, 112, 229, 234, 241, 364], "has_left_desc": [3, 24, 170, 271], "maximal_cyclic_decomposit": 3, "verbos": [3, 18, 22, 32, 75, 77, 80, 81, 87, 88, 89, 90, 91, 106, 136, 167, 168, 188, 196, 202, 204, 206, 222, 340], "maxim": [3, 10, 18, 21, 23, 35, 49, 53, 58, 60, 75, 87, 89, 94, 97, 99, 102, 108, 112, 118, 125, 127, 128, 134, 139, 154, 158, 170, 178, 180, 184, 185, 222, 232, 234, 238, 270, 275, 292, 311, 333, 338, 341, 345, 347, 349, 354, 357], "print": [3, 10, 18, 21, 22, 25, 29, 31, 35, 38, 50, 54, 55, 57, 58, 65, 68, 70, 71, 76, 77, 78, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 106, 107, 110, 114, 116, 118, 122, 124, 125, 126, 130, 134, 135, 136, 137, 138, 151, 152, 154, 155, 156, 157, 158, 162, 167, 170, 171, 172, 174, 178, 181, 185, 188, 190, 194, 208, 209, 212, 214, 216, 222, 224, 229, 232, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 261, 262, 264, 265, 266, 267, 271, 275, 276, 287, 299, 303, 306, 308, 309, 310, 311, 321, 331, 335, 336, 341, 343, 349, 350, 353, 354, 357, 362, 363, 364], "extra": [3, 18, 77, 78, 97, 100, 127, 128, 136, 143, 154, 158, 230, 235, 238, 239, 269, 272, 302, 318, 337, 349], "inform": [3, 18, 28, 29, 35, 45, 47, 50, 52, 53, 55, 58, 62, 66, 70, 71, 75, 76, 77, 80, 81, 84, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 100, 105, 106, 118, 125, 127, 129, 130, 131, 132, 136, 137, 143, 153, 156, 157, 158, 162, 170, 178, 180, 181, 184, 185, 208, 209, 212, 215, 222, 224, 235, 263, 270, 272, 273, 289, 298, 299, 311, 331, 332, 336, 338, 341, 343, 344, 347, 349, 352, 354, 357, 360, 364], "maximal_cyclic_factor": 3, "yd_a": 3, "wa": [3, 6, 15, 20, 25, 29, 36, 50, 55, 77, 78, 89, 91, 94, 99, 106, 108, 110, 112, 113, 114, 122, 128, 132, 134, 139, 143, 149, 157, 158, 160, 171, 183, 185, 213, 224, 229, 232, 233, 239, 268, 270, 299, 306, 311, 341, 343, 349, 354], "found": [3, 18, 21, 22, 29, 32, 75, 77, 78, 89, 91, 96, 106, 112, 129, 130, 131, 134, 137, 161, 163, 170, 175, 178, 202, 219, 223, 270, 275, 282, 287, 298, 301, 310, 311, 318, 327, 334, 340, 349, 352, 354, 357, 358, 369], "j": [3, 6, 9, 10, 16, 18, 21, 22, 25, 29, 31, 41, 45, 47, 50, 57, 58, 59, 61, 62, 64, 67, 70, 71, 75, 76, 77, 78, 80, 81, 83, 87, 88, 89, 90, 96, 97, 98, 99, 100, 102, 106, 107, 108, 112, 114, 116, 118, 120, 121, 124, 125, 128, 129, 130, 131, 132, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 157, 158, 161, 163, 167, 170, 172, 178, 180, 181, 184, 185, 186, 187, 194, 208, 209, 212, 213, 215, 222, 223, 224, 226, 228, 230, 233, 237, 239, 240, 242, 245, 248, 250, 252, 254, 263, 267, 268, 269, 270, 273, 275, 276, 281, 283, 284, 285, 286, 288, 289, 292, 293, 298, 299, 300, 302, 304, 306, 310, 311, 335, 338, 340, 341, 342, 343, 344, 347, 349, 352, 353, 354, 357, 358, 360, 364], "promot": [3, 35, 55, 68, 165, 167, 168, 181, 185, 341], "send": [3, 10, 15, 16, 22, 47, 73, 99, 108, 117, 120, 128, 142, 143, 144, 145, 147, 152, 154, 158, 161, 170, 212, 229, 230, 236, 237, 239, 270, 274, 280, 281, 284, 292, 296, 297, 298, 299, 301, 304, 335, 338, 341, 346], "s_i": [3, 24, 33, 57, 68, 72, 81, 89, 97, 112, 158, 170, 180, 212, 216, 224, 226, 229, 231, 233, 234, 236, 238, 239, 270, 274, 275, 338, 341, 354], "s_": [3, 15, 24, 33, 38, 57, 60, 61, 62, 67, 68, 112, 114, 125, 141, 143, 149, 158, 167, 170, 186, 224, 229, 231, 237, 240, 268, 274, 275, 280, 281, 283, 284, 287, 289, 292, 294, 296, 297, 298, 299, 300, 301, 338, 341, 343, 364], "alpha": [3, 9, 15, 18, 38, 45, 47, 50, 53, 54, 59, 61, 63, 89, 93, 95, 96, 106, 137, 141, 143, 144, 150, 158, 179, 185, 219, 224, 229, 231, 233, 235, 236, 238, 239, 240, 241, 261, 268, 269, 271, 272, 285, 289, 299, 338, 341, 352, 354, 357, 358, 364], "full": [3, 6, 10, 18, 38, 56, 64, 67, 99, 105, 106, 121, 137, 158, 180, 185, 186, 209, 213, 215, 218, 223, 224, 231, 235, 270, 311, 341, 342, 343, 349, 354], "den2012": 3, "content": [3, 33, 50, 53, 67, 71, 114, 118, 130, 141, 150, 158, 162, 287, 297, 310, 318, 339, 341, 342, 343, 354], "four": [3, 10, 18, 22, 78, 80, 90, 95, 96, 106, 112, 120, 136, 137, 157, 160, 162, 170, 185, 235, 261, 299, 306, 307, 340, 345, 349, 358], "to_type_a": 3, "embed": [3, 10, 15, 47, 55, 64, 66, 67, 97, 106, 110, 128, 130, 137, 143, 148, 154, 158, 208, 209, 218, 222, 224, 233, 234, 238, 239, 241, 261, 263, 267, 268, 269, 270, 272, 292, 338], "just": [3, 10, 15, 22, 25, 28, 45, 46, 53, 58, 67, 77, 83, 89, 94, 96, 97, 99, 106, 108, 109, 110, 111, 117, 118, 120, 123, 128, 134, 137, 138, 143, 144, 154, 156, 158, 160, 170, 178, 180, 185, 218, 224, 230, 231, 233, 235, 238, 241, 269, 272, 273, 278, 280, 290, 299, 309, 310, 318, 327, 328, 338, 341, 343, 349, 352, 353, 354, 357, 363], "base_window": 3, "imag": [3, 15, 16, 18, 21, 25, 35, 55, 56, 64, 66, 85, 99, 108, 110, 114, 117, 120, 128, 139, 142, 143, 144, 147, 148, 149, 158, 170, 209, 212, 216, 222, 229, 230, 238, 239, 268, 269, 273, 280, 281, 284, 289, 291, 292, 296, 297, 298, 299, 301, 310, 338, 339, 341, 345, 347, 352, 354, 357, 358, 364, 367, 368], "under": [3, 10, 15, 16, 29, 32, 35, 38, 48, 55, 61, 69, 73, 81, 85, 89, 95, 99, 102, 106, 108, 109, 114, 120, 121, 127, 128, 137, 139, 142, 143, 144, 145, 147, 149, 154, 157, 158, 160, 167, 170, 171, 180, 184, 185, 186, 209, 212, 213, 216, 222, 229, 232, 234, 236, 238, 239, 241, 263, 268, 270, 272, 273, 280, 281, 284, 291, 296, 297, 298, 299, 301, 303, 309, 310, 328, 335, 336, 338, 341, 345, 349, 352, 354, 357, 364], "boolean": [3, 10, 20, 21, 25, 26, 29, 32, 33, 46, 47, 50, 58, 75, 76, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 99, 105, 106, 107, 112, 113, 120, 122, 129, 130, 134, 136, 142, 143, 144, 152, 154, 155, 156, 158, 170, 171, 172, 174, 178, 180, 181, 184, 185, 190, 212, 216, 223, 224, 226, 227, 233, 235, 236, 239, 269, 287, 290, 299, 301, 303, 306, 308, 332, 335, 338, 339, 340, 341, 350, 354, 357, 358, 359, 360, 363, 366, 368], "bit": [3, 25, 94, 97, 106, 107, 145, 171, 225, 235, 268, 270, 357, 364], "faster": [3, 25, 35, 48, 70, 83, 94, 95, 99, 110, 118, 131, 134, 144, 158, 170, 171, 178, 185, 235, 237, 270, 271, 276, 286, 298, 299, 301, 303, 310, 338, 341, 357, 360], "screw": [3, 298], "18": [3, 7, 10, 25, 30, 75, 78, 81, 82, 86, 87, 88, 89, 97, 100, 106, 107, 128, 129, 131, 137, 145, 152, 157, 162, 166, 170, 178, 180, 185, 186, 194, 222, 232, 233, 234, 236, 252, 271, 281, 285, 289, 296, 299, 303, 304, 306, 307, 310, 311, 318, 319, 331, 345, 349, 352, 354, 355, 356, 361, 364, 365], "program": [4, 70, 75, 84, 87, 89, 90, 99, 125, 132, 134, 163, 170, 185, 188, 213, 224, 233, 298, 311, 349], "mix": [4, 75, 87, 89, 90, 116, 125, 134, 143, 185, 229, 230, 273, 298, 338], "gelfandtsetlinpattern": [4, 6, 52, 101, 114, 168], "knutsontaopuzzlesolv": [4, 101, 132], "symmetricgroup": [4, 25, 32, 49, 81, 96, 101, 102, 158, 170, 185, 188, 231, 298, 338, 339, 347, 368], "coxetergroup": [4, 63, 112, 131, 184, 217, 220, 225, 231, 335], "weylgroup": [4, 36, 130, 131, 184, 185, 188, 217, 224, 230, 231, 233, 234, 239, 271, 286, 335, 338], "partitionalgebra": [4, 97], "iwahoriheckealgebra": [4, 160, 342], "symmetricgroupalgebra": [4, 97, 108, 110, 338], "nilcoxeteralgebra": 4, "affineniltemperleyliebtypea": 4, "kazhdanlusztigpolynomi": [4, 131], "symmetricgrouprepresent": [4, 339], "zinbiel": 4, "mike": [6, 27, 29, 33, 97, 99, 122, 125, 126, 130, 144, 152, 155, 158, 170, 271, 275, 276, 286, 298, 299, 300, 309, 310, 331, 334, 337, 341, 343], "hansen": [6, 27, 29, 97, 99, 122, 125, 126, 152, 155, 158, 170, 271, 275, 276, 299, 309, 310, 331, 334, 341, 343], "2007": [6, 25, 27, 67, 68, 76, 87, 90, 91, 97, 105, 106, 122, 125, 126, 158, 163, 224, 299, 311, 336, 341, 343, 357, 364], "pierr": [6, 318], "cang": 6, "lui": [6, 144], "serrano": [6, 143, 144], "2012": [6, 15, 22, 25, 31, 33, 58, 78, 97, 99, 106, 125, 145, 151, 157, 158, 162, 170, 184, 185, 186, 199, 200, 201, 202, 203, 207, 208, 209, 212, 223, 228, 229, 273, 282, 285, 286, 299, 341, 343, 349, 353, 357], "monoton": [6, 156, 232, 332], "travi": [6, 11, 15, 16, 26, 29, 33, 38, 50, 52, 53, 58, 61, 63, 66, 67, 68, 72, 73, 99, 114, 118, 125, 128, 143, 147, 148, 149, 152, 155, 158, 160, 170, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 223, 228, 263, 273, 275, 276, 283, 294, 300, 309, 310, 341], "scrimshaw": [6, 11, 15, 16, 26, 29, 33, 38, 50, 52, 53, 58, 61, 63, 66, 67, 68, 72, 73, 99, 105, 114, 118, 125, 128, 143, 147, 148, 149, 152, 155, 158, 160, 170, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 223, 228, 263, 273, 275, 276, 283, 294, 300, 309, 310, 341], "2013": [6, 9, 10, 29, 38, 58, 67, 68, 72, 73, 78, 89, 93, 99, 106, 114, 125, 130, 144, 147, 148, 149, 155, 170, 185, 186, 208, 209, 211, 213, 215, 223, 228, 229, 230, 233, 238, 263, 271, 275, 276, 289, 294, 299, 300, 302, 306, 309, 310, 350], "28": [6, 7, 25, 73, 75, 78, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 95, 129, 136, 137, 158, 163, 178, 184, 185, 222, 232, 233, 236, 273, 275, 276, 285, 286, 288, 306, 308, 309, 311, 345, 347, 349, 352, 354, 355, 361, 365], "03": [6, 25, 29, 38, 72, 105, 106, 110, 114, 131, 137, 150, 158, 170, 171, 186, 208, 209, 220, 271, 309, 310, 311, 357], "asm": [6, 113, 308], "made": [6, 10, 32, 81, 84, 87, 91, 99, 100, 109, 120, 143, 158, 170, 185, 194, 235, 274, 309, 311, 341, 345, 349, 354], "monotonetriangl": 6, "jessica": [6, 172], "striker": [6, 172], "addit": [6, 7, 10, 16, 29, 68, 75, 77, 80, 81, 88, 89, 97, 99, 103, 106, 107, 108, 109, 110, 118, 121, 122, 132, 136, 137, 143, 158, 160, 161, 170, 172, 185, 190, 229, 230, 232, 233, 235, 264, 272, 275, 276, 298, 299, 304, 316, 328, 340, 349], "vincent": [6, 27, 76, 87, 100, 113, 335, 353, 367], "delecroix": [6, 27, 76, 87, 100, 113, 353, 367], "2017": [6, 68, 78, 81, 108, 109, 113, 117, 118, 169, 275, 283, 303, 306, 345], "clean": [6, 25, 27, 113, 158, 218, 341, 349], "alternating_sign_matrix": 6, "alternatingsignmatric": [6, 113, 184, 308, 349], "size": [6, 8, 10, 15, 16, 18, 21, 22, 24, 25, 27, 29, 31, 33, 45, 61, 69, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 106, 107, 108, 109, 111, 113, 114, 116, 118, 126, 128, 130, 134, 136, 139, 142, 143, 144, 145, 147, 149, 151, 154, 156, 157, 158, 159, 160, 162, 167, 168, 169, 170, 172, 178, 180, 181, 184, 185, 186, 193, 194, 235, 239, 272, 273, 275, 276, 289, 292, 293, 296, 298, 299, 301, 302, 306, 307, 309, 310, 311, 313, 317, 318, 321, 331, 332, 335, 336, 337, 338, 340, 341, 342, 343, 345, 349, 354, 356, 357, 358, 364, 367], "column": [6, 18, 25, 31, 38, 50, 53, 55, 58, 65, 67, 73, 78, 80, 82, 87, 88, 89, 90, 91, 96, 98, 100, 105, 112, 113, 118, 120, 124, 125, 130, 134, 136, 137, 139, 142, 144, 156, 158, 162, 170, 193, 208, 209, 212, 213, 214, 215, 216, 223, 224, 228, 235, 261, 269, 273, 275, 280, 282, 289, 292, 300, 303, 308, 309, 310, 336, 338, 341, 342, 343, 345, 357], "cardin": [6, 7, 8, 10, 11, 12, 24, 25, 27, 29, 30, 32, 33, 35, 40, 45, 47, 51, 52, 54, 55, 58, 59, 67, 70, 71, 72, 75, 76, 77, 78, 81, 82, 83, 86, 87, 89, 94, 97, 99, 110, 112, 113, 115, 116, 122, 124, 125, 126, 127, 128, 129, 130, 139, 141, 150, 151, 152, 154, 156, 157, 158, 159, 162, 169, 170, 172, 178, 180, 181, 182, 185, 188, 190, 191, 193, 194, 208, 209, 210, 213, 215, 224, 234, 236, 271, 272, 275, 276, 303, 304, 305, 306, 308, 309, 310, 324, 325, 328, 331, 333, 334, 336, 337, 339, 341, 343, 348, 349, 353, 354, 356, 357, 359, 367], "notabl": [6, 318], "facad": [6, 7, 46, 175, 177, 178, 180, 181, 182, 184, 185, 239, 241, 341, 353], "alternatingsignmatrix": [6, 113, 170, 308], "frac": [6, 10, 25, 73, 75, 76, 77, 81, 99, 106, 113, 128, 143, 144, 149, 158, 161, 170, 172, 185, 186, 212, 214, 226, 232, 233, 236, 238, 254, 270, 272, 274, 276, 299, 306, 311, 318, 338, 340, 341, 344, 347, 349, 354, 364], "3k": [6, 113], "cdot": [6, 10, 16, 24, 25, 29, 33, 38, 46, 47, 50, 53, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 71, 72, 73, 75, 76, 77, 81, 89, 97, 99, 102, 106, 107, 110, 112, 113, 114, 118, 119, 125, 127, 129, 130, 136, 138, 139, 142, 143, 144, 145, 147, 149, 157, 158, 161, 162, 170, 180, 181, 183, 184, 185, 186, 209, 222, 229, 231, 232, 236, 268, 270, 273, 274, 275, 276, 283, 291, 298, 299, 301, 303, 304, 306, 308, 309, 311, 318, 319, 338, 341, 342, 345, 349, 354, 359, 364, 369], "3n": [6, 93, 113, 128, 311], "429": [6, 113, 122, 151, 222, 311, 319, 349], "7436": [6, 113], "218348": [6, 113], "10850216": [6, 113], "911835460": [6, 113], "129534272700": [6, 113], "cover_rel": [6, 10, 112, 170, 178, 180, 181, 184, 185, 239, 241, 335], "eval": [6, 271, 341], "from_contre_tableau": 6, "comp": [6, 29, 31, 108, 125, 142, 147, 150, 162, 276, 356], "contr": 6, "from_corner_sum": 6, "corner": [6, 25, 33, 99, 118, 120, 125, 132, 152, 158, 162, 170, 224, 235, 275, 309, 310, 337, 341, 349], "from_height_funct": 6, "height": [6, 38, 40, 53, 55, 99, 105, 130, 152, 153, 154, 156, 158, 165, 184, 185, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 229, 231, 235, 239, 300, 341, 354, 358], "from_monotone_triangl": 6, "valid": [6, 18, 38, 50, 53, 71, 84, 89, 96, 97, 99, 107, 114, 121, 122, 123, 125, 129, 130, 132, 139, 156, 157, 158, 161, 162, 165, 166, 168, 170, 172, 178, 180, 211, 212, 239, 250, 273, 275, 276, 303, 308, 310, 336, 337, 341, 342, 344], "gyration_orbit_s": 6, "gyrat": [6, 113], "li": [6, 18, 78, 80, 89, 110, 158, 216, 240, 269, 309, 310, 341, 345], "gyration_orbit": 6, "latticeposet": [6, 173, 180, 185], "matrix_spac": [6, 223], "underli": [6, 18, 21, 22, 37, 38, 48, 53, 55, 58, 67, 75, 76, 86, 87, 97, 106, 109, 111, 112, 113, 117, 130, 131, 136, 137, 152, 157, 162, 170, 177, 181, 184, 185, 208, 212, 213, 235, 236, 238, 252, 254, 272, 275, 276, 303, 338, 339, 341, 342, 343, 349, 354, 367], "matrixspac": [6, 101, 170, 185, 223, 349], "dens": [6, 94, 98, 135, 136, 178, 185], "bool": [6, 77, 100, 106, 152, 154, 272, 345, 349, 354, 356, 358], "number_negative_on": 6, "is_permut": 6, "propp": 6, "wilson": [6, 78, 81, 83, 89, 90, 91, 92], "coupl": [6, 71, 99, 107, 185, 224, 335, 349, 354, 357], "top": [6, 10, 11, 28, 31, 50, 53, 67, 73, 90, 96, 97, 99, 105, 113, 114, 118, 124, 128, 136, 142, 156, 158, 159, 160, 162, 170, 178, 180, 184, 185, 193, 194, 209, 215, 229, 273, 275, 293, 303, 308, 310, 336, 341, 343, 349, 354, 368], "ldot": [6, 10, 11, 15, 16, 24, 25, 26, 29, 31, 32, 33, 38, 46, 50, 53, 55, 57, 58, 60, 61, 62, 64, 67, 68, 72, 73, 75, 81, 83, 87, 89, 91, 94, 96, 97, 99, 100, 106, 107, 108, 114, 116, 118, 119, 120, 125, 126, 128, 130, 139, 141, 142, 143, 144, 145, 148, 149, 150, 154, 157, 158, 159, 161, 162, 169, 170, 178, 180, 181, 184, 185, 186, 190, 209, 224, 226, 231, 232, 236, 238, 244, 260, 265, 268, 272, 273, 274, 275, 276, 281, 283, 284, 290, 291, 296, 297, 299, 301, 303, 310, 311, 318, 336, 338, 341, 342, 343, 353, 354, 356, 357, 360, 364], "convert": [6, 10, 25, 33, 57, 63, 72, 83, 97, 99, 102, 106, 107, 118, 127, 137, 139, 144, 145, 147, 149, 152, 154, 156, 159, 160, 165, 168, 170, 178, 185, 209, 210, 211, 212, 213, 214, 224, 229, 232, 272, 273, 274, 275, 276, 280, 282, 286, 288, 289, 290, 292, 295, 298, 299, 302, 306, 331, 338, 340, 345, 347, 354, 358, 360, 369], "were": [6, 18, 50, 77, 78, 83, 97, 106, 110, 112, 114, 118, 143, 144, 154, 158, 160, 162, 167, 184, 187, 210, 233, 234, 238, 263, 271, 345, 360], "introduc": [6, 10, 11, 15, 16, 36, 49, 50, 53, 76, 83, 106, 108, 110, 118, 128, 143, 145, 158, 162, 170, 175, 187, 213, 229, 232, 238, 273, 278, 298, 299, 304, 306, 309, 338, 345, 349], "mrr1983": 6, "asm_compat": 6, "compat": [6, 23, 29, 104, 106, 110, 118, 129, 134, 158, 166, 180, 183, 194, 236, 269, 274, 287, 309, 310, 341, 343, 360], "eklp1992": 6, "notion": [6, 10, 18, 21, 24, 33, 118, 130, 141, 158, 170, 180, 185, 299, 306, 318, 334, 337, 341, 349, 354], "pair": [6, 8, 10, 11, 15, 16, 18, 21, 22, 25, 29, 32, 38, 50, 55, 58, 63, 67, 75, 76, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 106, 107, 108, 109, 110, 111, 112, 113, 116, 118, 128, 129, 130, 132, 136, 137, 139, 142, 143, 144, 145, 147, 148, 149, 154, 156, 157, 158, 159, 160, 169, 170, 178, 180, 181, 184, 185, 188, 189, 194, 208, 209, 215, 221, 222, 235, 239, 241, 268, 270, 272, 273, 275, 276, 293, 302, 305, 306, 307, 309, 310, 335, 337, 338, 341, 343, 345, 349, 354, 360, 368], "being": [6, 9, 10, 16, 18, 20, 21, 22, 23, 25, 38, 61, 62, 73, 76, 77, 78, 81, 82, 90, 97, 106, 108, 110, 114, 118, 122, 127, 128, 136, 137, 139, 143, 144, 154, 156, 158, 162, 170, 178, 180, 181, 222, 230, 233, 235, 236, 243, 250, 273, 275, 296, 298, 299, 309, 310, 311, 317, 331, 338, 341, 342, 345, 349, 352], "thei": [6, 10, 18, 25, 29, 38, 67, 70, 75, 82, 87, 88, 89, 90, 96, 97, 99, 100, 106, 107, 110, 111, 112, 113, 114, 117, 118, 120, 123, 125, 128, 132, 137, 143, 152, 154, 155, 157, 158, 160, 162, 166, 167, 170, 178, 180, 182, 185, 209, 213, 222, 224, 233, 234, 235, 236, 238, 241, 262, 271, 272, 273, 274, 275, 276, 289, 293, 295, 297, 298, 299, 301, 306, 307, 310, 318, 327, 328, 331, 337, 338, 340, 341, 342, 343, 349, 354, 360, 361, 363, 368, 369], "aztec": 6, "diamond": [6, 178, 180, 184, 185, 349], "asm_compatible_bigg": 6, "greater": [6, 10, 18, 25, 29, 33, 53, 76, 81, 88, 99, 102, 106, 118, 128, 158, 167, 170, 178, 184, 185, 208, 229, 234, 239, 270, 273, 286, 298, 299, 303, 306, 309, 310, 341, 347, 350, 352, 354, 364, 366], "than": [6, 9, 10, 16, 18, 22, 25, 29, 33, 38, 40, 52, 53, 56, 58, 64, 69, 70, 71, 73, 76, 78, 80, 81, 83, 88, 89, 90, 91, 95, 96, 97, 99, 101, 102, 105, 106, 107, 108, 112, 117, 120, 122, 128, 130, 132, 139, 142, 143, 144, 145, 149, 152, 154, 155, 157, 158, 159, 160, 167, 169, 170, 171, 174, 178, 184, 185, 195, 208, 212, 214, 222, 229, 234, 235, 237, 239, 240, 269, 270, 271, 272, 273, 274, 275, 276, 281, 286, 287, 289, 292, 296, 297, 298, 299, 301, 303, 305, 306, 309, 310, 311, 312, 328, 331, 334, 338, 339, 341, 342, 343, 345, 347, 349, 350, 352, 354, 356, 357, 358, 366, 369], "rais": [6, 9, 18, 25, 29, 38, 50, 58, 75, 76, 77, 81, 83, 89, 97, 99, 105, 106, 122, 127, 128, 130, 136, 144, 145, 148, 152, 156, 158, 161, 170, 178, 180, 185, 189, 190, 219, 226, 238, 239, 261, 292, 298, 299, 309, 340, 342, 349, 354, 356, 357, 363, 364], "len": [6, 10, 11, 18, 21, 25, 26, 27, 29, 30, 32, 38, 45, 54, 61, 69, 75, 78, 84, 85, 87, 89, 97, 99, 100, 105, 106, 112, 113, 114, 115, 118, 122, 124, 125, 128, 130, 132, 135, 137, 139, 141, 143, 144, 150, 151, 156, 158, 159, 162, 168, 170, 178, 180, 182, 184, 185, 189, 193, 213, 215, 221, 228, 236, 239, 275, 287, 293, 298, 299, 303, 308, 309, 310, 311, 327, 331, 335, 336, 338, 341, 344, 345, 349, 354, 356, 357, 358, 360, 361, 362, 364, 365], "asm_compatible_smal": 6, "smaller": [6, 10, 16, 22, 69, 71, 83, 93, 97, 99, 102, 105, 112, 118, 120, 122, 128, 130, 144, 158, 170, 174, 178, 180, 185, 234, 239, 270, 275, 287, 338, 341, 345, 354, 357], "corner_sum_matrix": 6, "go": [6, 10, 16, 18, 21, 24, 52, 55, 76, 81, 89, 90, 106, 122, 158, 170, 209, 212, 215, 222, 233, 237, 239, 271, 273, 298, 299, 309, 310, 338, 343, 345], "those": [6, 11, 18, 28, 38, 45, 57, 71, 78, 82, 89, 90, 94, 96, 106, 125, 130, 132, 137, 139, 143, 144, 149, 156, 158, 170, 171, 178, 180, 185, 213, 222, 224, 233, 234, 235, 238, 239, 262, 268, 269, 275, 286, 287, 306, 311, 333, 338, 341, 345, 349, 350, 352], "even": [6, 16, 18, 21, 25, 29, 55, 65, 71, 76, 81, 83, 94, 95, 96, 99, 106, 107, 112, 113, 118, 120, 122, 130, 143, 144, 158, 169, 170, 180, 185, 223, 224, 231, 233, 235, 267, 270, 273, 292, 294, 298, 299, 300, 309, 311, 336, 340, 341, 343, 349, 354, 364], "odd": [6, 10, 18, 54, 55, 65, 76, 81, 95, 99, 118, 136, 143, 158, 170, 185, 213, 228, 267, 273, 282, 299, 301, 303, 311, 340, 341, 349, 364, 369], "increment": [6, 84, 116, 170, 185, 345, 354], "decrement": [6, 29, 170], "wherev": [6, 29], "possibl": [6, 10, 16, 18, 22, 27, 32, 53, 60, 67, 70, 71, 72, 75, 76, 78, 80, 81, 82, 83, 87, 89, 90, 91, 94, 95, 96, 97, 99, 100, 106, 107, 108, 109, 111, 112, 117, 118, 122, 125, 128, 130, 134, 143, 144, 145, 148, 152, 154, 156, 158, 162, 170, 178, 180, 181, 185, 186, 190, 202, 223, 224, 226, 228, 239, 266, 272, 273, 280, 287, 292, 298, 304, 306, 331, 332, 340, 341, 343, 349, 350, 354, 357, 362], "still": [6, 50, 58, 67, 94, 106, 120, 122, 144, 158, 160, 185, 189, 215, 220, 222, 234, 273, 292, 296, 310, 349, 357], "wie2000": [6, 113], "m": [6, 9, 10, 16, 18, 20, 21, 22, 24, 25, 27, 29, 31, 32, 37, 40, 47, 50, 54, 57, 59, 61, 64, 65, 66, 67, 73, 76, 77, 78, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 105, 106, 108, 112, 113, 114, 116, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 148, 149, 153, 157, 158, 161, 162, 169, 170, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 213, 223, 224, 226, 228, 229, 232, 233, 235, 238, 239, 260, 263, 264, 267, 273, 275, 276, 278, 280, 282, 285, 286, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 308, 311, 335, 337, 338, 341, 342, 343, 344, 347, 349, 350, 353, 354, 357, 361, 364, 367], "a0": [6, 189, 233, 311, 357], "20": [6, 7, 10, 22, 25, 40, 67, 75, 78, 81, 82, 83, 86, 87, 88, 89, 91, 93, 97, 110, 113, 122, 125, 129, 132, 136, 137, 158, 162, 170, 178, 180, 184, 185, 189, 190, 194, 219, 229, 232, 233, 235, 236, 239, 268, 271, 272, 273, 286, 304, 309, 311, 318, 345, 347, 349, 352, 354, 355, 357, 358, 361, 362, 365, 369], "includ": [6, 9, 10, 18, 22, 24, 25, 29, 38, 67, 70, 76, 77, 79, 87, 96, 99, 100, 106, 107, 115, 121, 129, 134, 145, 152, 154, 156, 158, 161, 162, 165, 170, 175, 184, 185, 190, 222, 224, 226, 238, 239, 268, 269, 270, 272, 285, 289, 293, 298, 299, 311, 328, 338, 341, 343, 345, 349, 352, 354, 358, 364, 367], "height_funct": 6, "adjac": [6, 8, 32, 36, 49, 71, 87, 106, 107, 128, 130, 136, 158, 160, 170, 171, 185, 219, 234, 235, 239, 275, 310, 334, 345, 368], "inversion_numb": [6, 341], "denot": [6, 9, 10, 15, 16, 24, 25, 45, 59, 60, 61, 64, 68, 73, 89, 97, 105, 106, 107, 108, 112, 120, 125, 128, 137, 142, 143, 144, 145, 147, 149, 158, 170, 181, 185, 186, 209, 212, 213, 216, 222, 226, 229, 230, 232, 236, 237, 238, 239, 263, 268, 269, 275, 276, 280, 281, 284, 290, 296, 297, 298, 299, 301, 306, 311, 318, 338, 341, 349, 354], "sum_": [6, 8, 16, 24, 25, 30, 38, 50, 56, 58, 59, 60, 61, 64, 67, 71, 73, 89, 91, 96, 97, 99, 106, 114, 119, 125, 126, 136, 143, 144, 145, 148, 149, 150, 158, 160, 162, 170, 179, 183, 185, 186, 208, 212, 213, 232, 263, 270, 272, 283, 284, 289, 294, 298, 299, 300, 301, 304, 306, 308, 318, 338, 340, 342, 343, 347, 349, 354, 369], "when": [6, 8, 9, 10, 16, 18, 21, 25, 27, 29, 32, 36, 38, 45, 47, 52, 57, 58, 61, 67, 71, 73, 75, 77, 80, 81, 82, 87, 88, 89, 90, 94, 99, 105, 106, 107, 109, 111, 112, 113, 117, 118, 120, 121, 122, 125, 127, 128, 129, 130, 132, 134, 136, 139, 143, 144, 147, 148, 158, 160, 161, 162, 170, 171, 178, 179, 180, 181, 184, 185, 186, 189, 190, 202, 209, 211, 212, 213, 222, 223, 224, 229, 235, 236, 238, 241, 273, 274, 275, 278, 281, 284, 286, 289, 290, 292, 296, 297, 298, 299, 301, 308, 309, 310, 311, 314, 317, 324, 328, 330, 334, 338, 340, 341, 342, 343, 344, 345, 347, 349, 352, 354, 357, 358, 359, 360, 361, 363, 364, 368, 369], "give": [6, 10, 11, 22, 25, 29, 33, 35, 38, 52, 55, 61, 62, 77, 78, 87, 89, 90, 92, 93, 95, 97, 99, 106, 107, 111, 113, 117, 118, 121, 125, 127, 130, 134, 137, 139, 142, 143, 144, 153, 156, 157, 158, 160, 162, 168, 169, 170, 178, 180, 185, 187, 189, 212, 213, 215, 218, 222, 223, 224, 226, 229, 232, 233, 235, 238, 239, 261, 263, 270, 271, 272, 273, 275, 280, 283, 286, 289, 292, 296, 297, 299, 308, 309, 310, 333, 341, 343, 344, 347, 349, 350, 353, 357, 358, 363, 364], "usual": [6, 45, 53, 57, 60, 90, 97, 106, 107, 108, 109, 111, 112, 114, 128, 142, 143, 145, 149, 153, 158, 161, 162, 167, 168, 170, 184, 185, 187, 189, 209, 212, 215, 218, 222, 224, 229, 231, 233, 234, 235, 236, 238, 239, 241, 261, 262, 269, 270, 273, 280, 281, 284, 294, 296, 297, 298, 299, 300, 309, 331, 338, 341, 343, 344, 349, 354, 357, 364], "number_of_invers": [6, 170, 276, 354], "to_matrix": [6, 24, 118, 170, 179, 236, 237, 271, 273, 339], "otherwis": [6, 8, 9, 10, 18, 21, 22, 24, 25, 29, 31, 32, 33, 38, 49, 50, 51, 57, 58, 59, 67, 68, 69, 75, 76, 81, 82, 84, 87, 90, 91, 95, 97, 99, 106, 107, 112, 113, 118, 120, 125, 130, 134, 136, 139, 142, 143, 144, 147, 148, 149, 154, 157, 158, 159, 162, 166, 169, 170, 178, 180, 181, 184, 185, 186, 187, 208, 209, 223, 224, 226, 229, 235, 236, 238, 239, 240, 241, 262, 263, 266, 268, 270, 273, 275, 276, 281, 286, 287, 292, 296, 297, 298, 299, 301, 310, 335, 338, 339, 340, 341, 342, 343, 349, 352, 353, 354, 356, 357, 358, 360, 362, 364, 368], "left_kei": 6, "kei": [6, 10, 11, 15, 16, 18, 20, 25, 47, 51, 54, 55, 58, 59, 69, 87, 97, 100, 106, 108, 109, 110, 111, 117, 118, 130, 132, 134, 137, 139, 143, 145, 149, 156, 164, 170, 175, 177, 178, 180, 181, 182, 184, 185, 219, 222, 231, 233, 234, 236, 238, 239, 241, 263, 269, 270, 271, 275, 276, 290, 298, 299, 305, 306, 327, 331, 335, 341, 342, 345, 349, 354, 360, 361, 364, 368], "lascoux": [6, 141, 144, 145, 160, 238, 288, 289, 299, 339, 341, 354], "lasc": 6, "success": [6, 50, 60, 106, 137, 160, 168, 224, 239, 265, 310, 341, 343, 349, 354, 358, 364], "remov": [6, 10, 18, 25, 26, 29, 33, 36, 49, 50, 53, 55, 56, 64, 71, 73, 76, 78, 84, 87, 89, 90, 95, 96, 97, 99, 106, 112, 116, 118, 120, 125, 130, 137, 142, 143, 154, 158, 159, 160, 162, 167, 170, 180, 185, 209, 211, 212, 214, 222, 230, 232, 234, 235, 263, 275, 276, 299, 303, 309, 310, 337, 338, 341, 343, 345, 349, 353, 354, 358, 360], "until": [6, 31, 67, 97, 99, 105, 106, 107, 122, 152, 158, 159, 162, 170, 273, 311, 341, 349, 354, 357, 360], "what": [6, 10, 15, 16, 18, 25, 73, 76, 88, 89, 91, 98, 99, 106, 107, 108, 120, 122, 125, 152, 154, 161, 171, 185, 222, 224, 233, 235, 238, 239, 252, 254, 272, 273, 299, 301, 309, 314, 317, 324, 330, 341, 349, 354, 357], "remain": [6, 10, 28, 76, 89, 97, 99, 105, 107, 108, 112, 118, 120, 122, 129, 143, 144, 155, 157, 158, 160, 162, 181, 185, 220, 222, 224, 228, 269, 273, 275, 341, 349, 354], "so": [6, 9, 10, 11, 16, 18, 25, 28, 29, 50, 55, 57, 67, 70, 71, 76, 81, 83, 89, 90, 93, 94, 96, 97, 98, 105, 106, 112, 113, 117, 118, 120, 122, 123, 125, 129, 130, 132, 135, 136, 137, 139, 142, 143, 144, 149, 154, 157, 158, 161, 162, 164, 168, 170, 171, 178, 179, 180, 181, 183, 184, 185, 196, 208, 209, 215, 218, 222, 224, 232, 233, 235, 236, 241, 244, 261, 262, 268, 269, 270, 271, 272, 273, 275, 276, 298, 299, 309, 310, 311, 313, 318, 326, 327, 328, 331, 332, 338, 341, 342, 343, 349, 354, 357, 358, 360, 364, 367, 369], "our": [6, 10, 16, 18, 21, 24, 25, 38, 53, 54, 81, 99, 106, 118, 120, 143, 144, 149, 161, 170, 171, 178, 180, 183, 185, 209, 233, 235, 265, 273, 275, 281, 284, 285, 286, 290, 296, 297, 298, 299, 308, 311, 318, 328, 338, 341, 349], "proce": [6, 10, 120, 122, 125, 154, 224, 233, 273, 275, 311, 341], "view": [6, 10, 16, 38, 45, 50, 58, 99, 100, 106, 107, 127, 128, 130, 132, 139, 152, 154, 156, 170, 181, 208, 212, 224, 229, 230, 233, 234, 292, 301, 306, 338, 349], "ava2007": [6, 341], "left_key_as_permut": 6, "link_pattern": [6, 113], "extract": [6, 10, 106, 113, 129, 271, 292, 349], "cross": [6, 25, 38, 97, 99, 113, 156, 169, 239, 262, 268, 275, 308, 341, 349], "rotate_ccw": 6, "counterclockwis": [6, 130], "quarter": [6, 311], "turn": [6, 25, 28, 33, 45, 73, 90, 96, 99, 106, 118, 136, 139, 156, 185, 236, 339, 342, 349, 357], "rotat": [6, 10, 23, 106, 113, 118, 132, 137, 156, 158, 165, 234, 235, 341, 345, 356, 364], "rotate_cw": 6, "clockwis": [6, 22, 132], "to_dyck_word": [6, 10, 99, 151, 154, 156, 157, 158], "last_diagon": 6, "diagon": [6, 10, 22, 23, 63, 99, 118, 122, 130, 132, 136, 144, 152, 157, 158, 166, 172, 193, 212, 222, 223, 224, 226, 233, 298, 303, 306, 309, 310, 338, 341, 347], "typeerror": [6, 25, 73, 85, 87, 106, 115, 138, 144, 145, 166, 185, 239, 268, 280, 286, 289, 292, 298, 310, 311, 349, 354, 357, 358, 360, 364, 367, 369], "argument": [6, 12, 16, 25, 28, 29, 31, 46, 81, 83, 87, 96, 97, 99, 100, 106, 107, 109, 111, 112, 117, 118, 122, 126, 127, 129, 130, 132, 134, 136, 138, 139, 143, 144, 148, 149, 156, 158, 162, 169, 170, 171, 174, 178, 180, 184, 185, 186, 187, 189, 190, 208, 209, 212, 224, 228, 229, 231, 239, 252, 254, 263, 271, 272, 273, 275, 276, 285, 289, 299, 302, 303, 305, 334, 341, 343, 345, 349, 353, 354, 358, 361, 363, 367], "notamethod": 6, "unknown": [6, 18, 21, 75, 81, 82, 86, 88, 89, 92, 136, 158, 223, 224, 226, 264, 266, 352, 354, 361, 365], "to_fully_packed_loop": [6, 113], "fullypackedloop": [6, 113], "fpl": [6, 113], "to_monotone_triangl": 6, "to_permut": [6, 72, 99, 271, 275, 310, 343], "to_semistandard_tableau": 6, "to_six_vertex_model": 6, "six_vertex_model": [6, 113, 308], "from_alternating_sign_matrix": [6, 113, 308], "transpos": [6, 54, 76, 87, 106, 118, 120, 129, 158, 170, 172, 190, 223, 224, 235, 236, 237, 262, 273, 280, 299, 338, 339, 347], "contretableaux": 6, "ct4": 6, "contretableaux_n": 6, "gelfandtsetlinpatternstoprow": [6, 114], "_": [6, 8, 9, 15, 16, 18, 23, 25, 28, 29, 41, 47, 50, 53, 56, 58, 59, 61, 67, 68, 71, 73, 75, 76, 78, 80, 81, 82, 87, 89, 90, 91, 97, 99, 106, 108, 110, 116, 117, 119, 120, 122, 130, 137, 139, 142, 143, 144, 147, 148, 149, 151, 152, 157, 158, 160, 161, 163, 172, 178, 180, 185, 186, 221, 223, 226, 228, 230, 231, 232, 233, 234, 239, 240, 268, 269, 271, 274, 275, 283, 285, 289, 292, 294, 298, 299, 300, 304, 327, 331, 341, 345, 347, 349, 352, 353, 354, 357, 358, 362, 364, 367, 369], "leq": [6, 10, 16, 24, 25, 31, 38, 53, 55, 57, 67, 68, 71, 73, 75, 77, 80, 81, 89, 90, 91, 94, 96, 99, 120, 121, 125, 128, 129, 132, 142, 143, 144, 149, 151, 157, 158, 160, 162, 170, 174, 178, 179, 180, 183, 184, 185, 186, 209, 213, 223, 226, 239, 241, 263, 273, 299, 304, 305, 309, 332, 338, 341, 343, 347, 349, 354, 357, 359, 364], "dot": [6, 25, 29, 32, 45, 59, 60, 75, 89, 90, 100, 102, 107, 110, 112, 113, 114, 118, 124, 127, 137, 151, 170, 181, 184, 185, 218, 231, 233, 235, 238, 239, 281, 284, 290, 296, 297, 299, 331, 335, 343, 349, 354, 357, 368], "bottom": [6, 18, 31, 50, 67, 73, 96, 97, 99, 118, 124, 125, 137, 142, 156, 158, 159, 160, 162, 178, 180, 184, 185, 193, 194, 209, 215, 273, 296, 308, 310, 341, 343, 354], "strict": [6, 10, 47, 64, 66, 114, 130, 139, 149, 158, 185, 212, 215, 239, 267, 271, 273, 275, 282, 298, 301, 337, 341, 343], "truncatedstaircas": 6, "truncat": [6, 56, 64, 75, 78, 89, 90, 91, 107, 184, 341, 347, 352, 366], "staircas": [6, 184], "last_column": 6, "t4": [6, 180], "truncatedstaircases_nlastcolumn": 6, "librari": [7, 25, 45, 76, 84, 101, 131, 235, 282, 319, 349, 358], "lazi": [7, 15, 84, 97, 108, 110, 122, 143, 230, 231, 233, 271, 298, 299, 311, 318, 349, 353, 357, 368], "genericbacktrack": [7, 31, 45, 99, 101, 170, 293], "prune": [7, 10, 224, 349], "mostli": [7, 35, 170, 185, 235, 239], "supersed": [7, 129, 190], "recursivelyenumeratedset": [7, 101, 235], "initial_data": 7, "initial_st": [7, 106, 107], "organ": [7, 78, 106, 178, 333, 349], "recursivelyenumeratedset_forest": [7, 127, 185, 333], "handl": [7, 10, 27, 29, 67, 68, 78, 84, 94, 106, 107, 110, 158, 170, 185, 222, 228, 235, 239, 240, 276, 279, 280, 298, 299, 354, 362], "special": [7, 22, 24, 38, 81, 96, 97, 106, 114, 118, 119, 121, 122, 125, 153, 158, 160, 161, 162, 180, 185, 209, 212, 214, 222, 224, 229, 230, 231, 233, 236, 239, 261, 262, 263, 264, 266, 269, 271, 281, 282, 283, 284, 289, 290, 296, 297, 298, 299, 307, 311, 338, 342, 343, 344, 349, 354, 360, 362], "positiveintegersemigroup": 7, "semigroup": [7, 97], "la": [7, 38, 47, 50, 51, 54, 55, 56, 58, 59, 61, 67, 68, 73, 75, 77, 78, 79, 118, 119, 144, 148, 149, 169, 186, 210, 212, 213, 229, 230, 233, 239, 267, 268, 278, 286, 292, 296, 298, 299, 306, 337, 338, 339], "peano": 7, "endow": [7, 10, 16, 45, 59, 109, 111, 117, 143, 144, 145, 154, 170, 185, 222, 224, 239, 241, 261, 268, 272, 298, 318, 347], "natur": [7, 9, 11, 15, 22, 24, 45, 54, 64, 67, 70, 73, 96, 97, 108, 110, 113, 125, 127, 128, 139, 143, 144, 149, 160, 162, 172, 179, 183, 185, 209, 212, 215, 222, 224, 235, 239, 241, 273, 275, 276, 298, 299, 311, 343, 349, 352, 353, 361, 364, 367, 369], "pp": [7, 31, 35, 36, 50, 53, 55, 65, 68, 76, 78, 87, 90, 91, 96, 97, 99, 100, 106, 114, 118, 120, 130, 132, 144, 152, 156, 157, 158, 162, 163, 167, 170, 172, 180, 186, 193, 194, 209, 215, 216, 229, 233, 273, 288, 289, 292, 298, 299, 301, 303, 306, 309, 310, 336, 341, 343, 352, 353], "join": [7, 10, 15, 16, 22, 29, 32, 81, 92, 97, 106, 108, 113, 122, 127, 132, 143, 144, 156, 159, 170, 178, 180, 183, 184, 185, 225, 231, 232, 233, 272, 286, 292, 298, 299, 304], "monoid": [7, 29, 49, 67, 97, 110, 128, 143, 144, 151, 158, 170, 190, 273, 298, 304, 338, 341, 352, 354, 361, 364], "some_el": [7, 15, 16, 108, 109, 111, 117, 179, 190, 229, 230, 238, 239, 270, 274], "17": [7, 9, 25, 75, 77, 78, 81, 82, 83, 85, 86, 88, 89, 90, 92, 97, 99, 100, 106, 129, 136, 137, 147, 152, 154, 162, 170, 180, 184, 185, 188, 222, 235, 236, 261, 271, 299, 302, 303, 306, 307, 310, 311, 341, 345, 349, 352, 353, 354, 355, 357, 360, 361, 364, 365, 367, 368], "21": [7, 24, 25, 75, 76, 78, 81, 82, 86, 87, 88, 89, 91, 100, 106, 107, 118, 122, 125, 128, 129, 132, 136, 137, 143, 144, 162, 185, 199, 200, 201, 202, 203, 207, 222, 231, 232, 233, 234, 235, 236, 241, 270, 285, 286, 296, 297, 311, 318, 335, 341, 345, 349, 352, 354, 355, 357, 361, 362, 365, 367, 369], "22": [7, 8, 10, 25, 55, 75, 76, 77, 78, 81, 82, 86, 88, 89, 91, 92, 105, 106, 118, 120, 129, 132, 136, 137, 158, 162, 170, 180, 185, 222, 223, 228, 232, 233, 236, 293, 311, 318, 335, 341, 345, 349, 352, 354, 355, 360, 361, 365], "23": [7, 38, 75, 76, 81, 82, 86, 87, 88, 89, 90, 91, 99, 129, 137, 139, 144, 149, 158, 170, 180, 184, 213, 232, 233, 236, 237, 252, 285, 286, 289, 299, 302, 311, 334, 336, 339, 341, 345, 349, 352, 354, 355, 357, 360, 361, 365, 368], "24": [7, 12, 15, 25, 32, 52, 67, 73, 75, 76, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 130, 137, 139, 147, 149, 153, 157, 158, 162, 166, 170, 178, 184, 185, 186, 215, 233, 235, 236, 239, 271, 273, 285, 296, 299, 302, 303, 306, 308, 309, 310, 311, 318, 319, 327, 331, 343, 345, 349, 352, 354, 355, 361, 364, 365, 369], "26": [7, 25, 75, 78, 80, 82, 85, 86, 88, 90, 91, 106, 129, 132, 136, 137, 143, 148, 152, 158, 210, 212, 213, 214, 215, 216, 222, 232, 233, 236, 241, 288, 299, 311, 319, 335, 345, 349, 352, 355, 358, 361, 365], "27": [7, 9, 51, 55, 57, 75, 78, 80, 81, 82, 83, 86, 89, 90, 91, 99, 106, 113, 125, 129, 136, 137, 139, 143, 158, 172, 185, 213, 222, 235, 236, 241, 285, 288, 289, 299, 301, 302, 311, 345, 352, 355, 361, 364, 365, 368], "29": [7, 12, 25, 29, 78, 81, 82, 86, 91, 107, 129, 136, 137, 142, 143, 158, 186, 189, 232, 236, 275, 281, 284, 285, 290, 296, 297, 299, 311, 345, 349, 352, 354, 355, 358, 361, 365], "30": [7, 9, 25, 72, 75, 78, 81, 82, 86, 88, 89, 91, 93, 97, 99, 122, 126, 129, 137, 139, 150, 158, 180, 185, 222, 232, 233, 235, 236, 239, 252, 258, 298, 299, 308, 311, 318, 341, 345, 349, 352, 354, 355, 356, 357, 358, 361, 363, 365], "31": [7, 9, 25, 29, 49, 76, 78, 81, 83, 86, 88, 91, 92, 106, 107, 129, 137, 232, 236, 273, 306, 311, 341, 345, 352, 354, 355, 357, 358, 361, 364, 365], "32": [7, 9, 75, 77, 78, 81, 82, 83, 86, 91, 137, 147, 148, 171, 184, 231, 232, 233, 285, 299, 303, 308, 311, 335, 340, 341, 349, 352, 354, 355, 358, 361, 363, 365, 369], "33": [7, 78, 81, 86, 91, 137, 157, 180, 184, 190, 285, 299, 302, 311, 349, 352, 354, 355, 361, 362, 365], "34": [7, 15, 25, 75, 78, 81, 86, 91, 97, 100, 127, 137, 144, 184, 222, 233, 273, 299, 302, 307, 311, 319, 345, 349, 352, 354, 355, 361, 362, 365, 369], "35": [7, 15, 18, 25, 67, 78, 81, 86, 91, 118, 137, 143, 232, 285, 310, 311, 345, 349, 352, 354, 355, 358, 361, 365], "37": [7, 78, 80, 81, 83, 86, 91, 115, 137, 158, 209, 215, 233, 235, 237, 311, 349, 352, 354, 355, 361, 364, 365], "38": [7, 75, 78, 80, 81, 83, 86, 91, 93, 118, 137, 222, 288, 296, 349, 352, 354, 355, 360, 361, 365], "39": [7, 75, 78, 80, 81, 86, 90, 91, 106, 137, 144, 185, 190, 222, 299, 311, 352, 354, 355, 361, 365], "40": [7, 11, 75, 76, 78, 80, 81, 83, 86, 88, 89, 91, 114, 118, 129, 137, 153, 158, 185, 239, 271, 311, 319, 343, 345, 354, 365, 366], "41": [7, 8, 78, 81, 83, 89, 90, 129, 137, 185, 232, 233, 239, 311, 341, 349, 354, 358], "43": [7, 25, 75, 78, 80, 81, 106, 122, 136, 137, 232, 288, 311, 349, 354, 358, 360, 365, 369], "44": [7, 47, 72, 78, 81, 137, 232, 281, 311, 354, 365], "45": [7, 25, 47, 50, 75, 78, 81, 106, 129, 132, 136, 137, 186, 233, 275, 282, 285, 318, 345, 352, 357, 364], "46": [7, 47, 78, 81, 88, 89, 137, 170, 222, 311, 349, 352, 354], "47": [7, 25, 47, 78, 81, 89, 90, 136, 137, 184, 185, 186, 234, 279, 286, 311, 344, 349], "48": [7, 26, 47, 67, 75, 78, 81, 83, 88, 129, 158, 184, 187, 188, 232, 236, 239, 241, 272, 285, 311, 319, 354, 358, 362, 364], "49": [7, 25, 47, 78, 81, 83, 106, 118, 185, 186, 311, 349, 354, 362, 369], "50": [7, 25, 78, 81, 88, 89, 90, 91, 94, 99, 103, 129, 158, 159, 170, 180, 185, 239, 311, 336, 345, 349, 354, 357, 358], "51": [7, 25, 78, 81, 106, 122, 129, 285, 298, 311, 364], "52": [7, 45, 75, 78, 81, 88, 103, 134, 136, 159, 232, 241, 275, 311, 335, 349, 354], "53": [7, 78, 81, 91, 97, 122, 139, 145, 222, 225, 232, 270, 311, 354, 357, 358], "54": [7, 76, 78, 81, 89, 180, 232, 236, 299, 311, 349, 354, 357, 362], "55": [7, 25, 38, 78, 81, 89, 106, 148, 232, 311, 349, 362, 369], "56": [7, 51, 75, 78, 81, 91, 106, 222, 232, 311, 332, 349, 354], "57": [7, 76, 78, 81, 83, 87, 100, 106, 224, 311], "58": [7, 75, 78, 88, 89, 91, 144, 222, 232, 298, 299, 349], "59": [7, 76, 78, 81, 83, 222, 354], "60": [7, 10, 25, 61, 76, 78, 81, 87, 88, 90, 99, 129, 132, 139, 149, 180, 232, 236, 289, 299, 311, 341, 343, 345, 364], "61": [7, 25, 78, 81, 83, 99, 106, 129, 139, 181, 281, 296, 297, 299, 301, 311, 319, 335, 354, 358], "62": [7, 78, 81, 106, 139, 232, 298, 349], "63": [7, 25, 78, 81, 88, 273, 285, 301, 311, 358], "64": [7, 9, 25, 67, 75, 76, 78, 81, 83, 88, 90, 94, 136, 184, 222, 285, 303, 311, 319, 349], "65": [7, 25, 75, 78, 81, 85, 100, 139, 185, 275, 345], "66": [7, 25, 75, 78, 81, 88, 91, 106, 129, 139, 232, 236, 299, 357], "67": [7, 72, 78, 81, 136, 139, 183, 213, 318, 354], "68": [7, 21, 78, 81, 85, 128, 139, 185, 354], "69": [7, 75, 78, 81, 83, 106, 139, 144, 285, 354], "70": [7, 11, 25, 76, 78, 81, 88, 95, 129, 136, 163, 232, 275, 298, 299, 311, 343, 349], "71": [7, 78, 81, 83, 89, 114, 129, 229, 311], "72": [7, 78, 83, 88, 136, 139, 180, 222, 232, 236, 239, 307, 311, 331, 345, 364], "73": [7, 9, 76, 78, 81, 83, 139, 183, 222, 358, 364], "74": [7, 78, 157, 298, 301], "75": [7, 78, 81, 95, 100, 139, 157, 232, 276, 285, 299, 311, 341, 345, 358], "76": [7, 25, 78, 81, 136, 139, 170, 187, 222, 236, 311], "77": [7, 82, 129, 139, 232, 319, 354], "78": [7, 51, 78, 81, 88, 90, 91, 139, 186, 241], "79": [7, 75, 78, 81, 90, 91, 184, 302], "80": [7, 38, 78, 81, 88, 91, 306], "81": [7, 9, 25, 76, 78, 81, 106, 292, 298, 307, 311, 349, 367], "82": [7, 88, 349], "83": [7, 78, 81, 83, 100, 122, 139, 229, 311, 357, 364], "84": [7, 18, 58, 91, 186, 222, 232, 311, 349], "85": [7, 75, 76, 78, 81, 95, 213, 235, 299, 311, 345], "86": [7, 78, 81, 185, 232], "87": [7, 83, 186, 232, 273, 309], "88": [7, 81, 82, 88, 139, 170, 311, 358, 362], "89": [7, 25, 78, 81, 83, 238, 299, 307, 311, 349, 354, 362, 369], "90": [7, 22, 25, 78, 81, 90, 106, 184, 232, 289, 302, 306, 311, 341, 364], "91": [7, 25, 76, 78, 81, 90, 92, 311, 332], "92": [7, 8, 10, 25, 78, 92, 106, 130, 136, 311], "93": [7, 78, 81, 186], "94": [7, 232, 238, 270, 311], "95": [7, 88, 90, 91], "96": [7, 54, 78, 81, 83, 88, 91, 106, 215, 303, 318, 354, 364, 368], "97": [7, 78, 81, 83, 87, 311, 354, 368], "98": [7, 78, 81, 91, 130, 354], "99": [7, 78, 81, 83, 232, 238, 273, 311, 349, 354], "100": [7, 22, 25, 75, 78, 81, 88, 89, 91, 99, 107, 118, 136, 158, 185, 190, 226, 232, 233, 235, 299, 311, 334, 343, 349, 352, 354, 357, 358, 361, 364, 365], "singl": [7, 10, 12, 22, 32, 45, 47, 53, 55, 56, 58, 72, 89, 96, 97, 100, 106, 111, 117, 122, 127, 132, 137, 144, 158, 170, 180, 185, 209, 212, 213, 222, 233, 235, 239, 272, 273, 274, 285, 288, 289, 298, 310, 327, 341, 343, 349, 358], "baxter_permut": 8, "baxterpermut": 8, "avoid": [8, 10, 25, 57, 70, 99, 106, 128, 134, 170, 171, 184, 185, 212, 238, 261, 310, 341, 349], "sigma": [8, 10, 24, 32, 35, 55, 72, 97, 99, 100, 108, 143, 144, 170, 224, 263, 274, 293, 299, 306, 311, 318, 338, 341, 354, 357, 364], "u_1u_2u_3u_4": 8, "u_2": [8, 9, 16, 108, 222, 273], "u_3": [8, 9, 95], "neither": [8, 18, 99, 106, 114, 152, 170, 178, 180, 218, 239, 310], "2413": 8, "nor": [8, 10, 18, 53, 99, 106, 114, 128, 144, 152, 158, 170, 178, 180, 218, 239, 309, 310], "3142": [8, 341, 359], "gir2012": 8, "studi": [8, 47, 112, 114, 128, 143, 145, 148, 153, 184, 185, 213, 273, 298, 299, 344, 349, 352, 354, 357], "nonneg": [8, 16, 25, 29, 31, 36, 56, 59, 73, 81, 99, 117, 120, 121, 122, 126, 127, 129, 130, 139, 142, 143, 144, 154, 158, 165, 166, 170, 184, 186, 187, 190, 193, 213, 224, 232, 239, 240, 241, 267, 270, 272, 273, 275, 276, 280, 281, 284, 290, 296, 297, 298, 299, 301, 304, 309, 310, 311, 338, 341, 344, 345, 367, 369], "baxterpermutations_al": 8, "disjointunionenumeratedset": [8, 10, 31, 46, 101, 122, 126, 128, 154, 156, 188, 272, 336, 341, 343, 349], "to_pair_of_twin_binary_tre": 8, "_n": [8, 18, 25, 54, 143, 144, 170, 186, 209, 224, 229, 281, 296, 297, 299, 301], "twin": 8, "t_l": 8, "t_r": 8, "resp": [8, 10, 33, 45, 57, 110, 125, 156, 170, 181, 185, 229, 239, 241, 265, 268, 354], "symbol": [8, 60, 89, 90, 97, 99, 106, 107, 108, 109, 118, 129, 136, 137, 152, 158, 186, 225, 235, 275, 280, 281, 299, 339, 349, 354, 360, 364, 369], "terminologi": [8, 25, 80, 81, 128, 136, 275], "conflict": 8, "baxterpermutations_s": 8, "dfrac": 8, "binom": [8, 10, 16, 25, 30, 76, 93, 95, 99, 119, 128, 150, 158, 170, 186, 208, 222, 275, 281, 284, 290, 304, 311, 341, 343, 349, 359], "oei": [8, 10, 34, 122, 128, 185, 188, 232, 272, 276, 311, 349, 358], "a001181": [8, 10], "422": [8, 10, 78], "2074": 8, "10754": 8, "58202": 8, "326240": 8, "1882960": 8, "11140560": 8, "3r": 8, "binaryrecurrencesequ": [9, 369], "fibonacci": [9, 25, 118, 184, 311, 349, 354, 357, 358, 362, 364, 369], "137": [9, 81, 83, 89, 99, 369], "137th": [9, 369], "term": [9, 10, 15, 16, 25, 36, 38, 45, 48, 54, 55, 58, 59, 61, 62, 81, 97, 99, 106, 108, 109, 110, 122, 125, 128, 130, 137, 143, 144, 145, 148, 165, 166, 167, 170, 185, 222, 226, 231, 232, 233, 237, 238, 240, 273, 274, 286, 289, 292, 298, 299, 301, 309, 311, 346, 349, 363, 364, 369], "19134702400093278081449423917": [9, 369], "period": [9, 60, 81, 99, 106, 152, 233, 235, 311, 352, 354, 355, 357, 364], "pthpower": 9, "long": [9, 10, 16, 18, 21, 26, 32, 38, 48, 50, 53, 58, 59, 61, 62, 63, 66, 75, 78, 83, 85, 88, 90, 91, 97, 112, 120, 136, 142, 143, 144, 184, 185, 197, 208, 212, 213, 214, 219, 220, 222, 231, 232, 233, 235, 236, 238, 239, 271, 273, 279, 280, 282, 285, 299, 301, 307, 336, 338, 341, 345, 349, 357, 358, 364, 366, 369], "second": [9, 10, 16, 25, 26, 33, 38, 52, 53, 75, 78, 81, 87, 88, 90, 97, 106, 112, 117, 118, 127, 129, 134, 136, 143, 144, 148, 157, 158, 169, 170, 180, 185, 186, 187, 194, 212, 222, 237, 263, 273, 275, 276, 285, 298, 299, 310, 311, 331, 341, 343, 345, 349, 357], "fact": [9, 10, 16, 53, 77, 78, 97, 99, 106, 107, 110, 112, 118, 122, 128, 143, 144, 154, 158, 161, 170, 214, 222, 233, 234, 235, 238, 239, 240, 241, 261, 269, 270, 292, 298, 299, 301, 333, 338, 341, 343, 349, 352, 354], "bms06": 9, "luca": [9, 25, 50, 311, 352, 369], "148": [9, 88, 106], "provabl": [9, 209, 215], "128": [9, 78, 106, 285, 311, 318, 349, 358], "256": [9, 81, 88, 89, 125, 232, 311, 331, 349], "512": [9, 311], "is_degener": 9, "is_geometr": [9, 180], "degener": [9, 95, 118, 162, 224, 235, 261, 343], "geometr": [9, 32, 132, 158, 180, 183, 184, 235, 302, 309, 349, 358], "quasigeometr": 9, "pth": 9, "isabel": 9, "vogt": 9, "sv2013": 9, "bms2006": 9, "ss1983": 9, "binary_recurrence_sequ": [9, 129, 190], "u0": 9, "u1": [9, 89, 137], "sageobject": [9, 18, 21, 22, 25, 77, 100, 106, 118, 131, 167, 214, 222, 224, 227, 231, 241, 263, 265, 303, 307, 311, 327, 345, 347, 352, 357, 358, 360, 368], "condit": [9, 18, 25, 29, 32, 41, 45, 50, 53, 59, 87, 89, 95, 99, 105, 107, 108, 109, 113, 118, 119, 120, 121, 122, 125, 127, 128, 130, 132, 137, 139, 144, 158, 170, 180, 194, 211, 212, 222, 234, 239, 268, 308, 341, 344, 345, 349], "u_0": [9, 354], "u_1": [9, 16, 89, 108, 184, 222, 273, 354, 360], "u_": [9, 16, 47, 56, 64, 66, 89, 108, 299, 354], "u_n": [9, 16, 108, 184, 364], "partial": [9, 10, 15, 16, 29, 55, 71, 94, 97, 99, 102, 103, 105, 110, 112, 118, 129, 130, 132, 137, 158, 170, 183, 184, 185, 218, 224, 236, 270, 299, 311, 341, 345, 349, 352, 364], "0th": [9, 134], "lucas_number1": [9, 25], "lucas_number2": [9, 25], "With": [9, 25, 29, 59, 67, 71, 76, 86, 90, 99, 106, 109, 111, 117, 118, 122, 125, 139, 157, 160, 169, 170, 180, 185, 189, 224, 233, 239, 276, 285, 289, 296, 298, 303, 311, 338, 341, 345, 354, 357, 358, 369], "is_arithmet": 9, "arithmet": [9, 25, 180, 299, 349], "nondiagonaliz": 9, "beta": [9, 29, 38, 89, 137, 141, 143, 156, 158, 162, 179, 212, 229, 237, 239, 241, 299, 308, 342, 352, 354, 357, 364], "let": [9, 10, 15, 16, 18, 23, 24, 25, 29, 37, 38, 41, 45, 47, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 67, 73, 75, 76, 78, 80, 81, 83, 86, 87, 89, 90, 91, 97, 99, 100, 102, 106, 108, 110, 112, 113, 114, 117, 118, 119, 120, 122, 125, 129, 136, 139, 141, 142, 143, 144, 145, 149, 152, 156, 158, 160, 161, 162, 164, 170, 178, 179, 180, 183, 184, 185, 186, 187, 190, 209, 212, 213, 216, 222, 224, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 268, 270, 271, 272, 273, 275, 276, 280, 281, 283, 292, 293, 296, 297, 298, 299, 301, 304, 310, 311, 318, 335, 338, 341, 343, 345, 347, 349, 354, 355, 357, 359, 364], "bx": 9, "Then": [9, 10, 16, 24, 29, 45, 50, 53, 59, 60, 62, 67, 89, 90, 99, 106, 108, 112, 118, 120, 122, 128, 129, 142, 143, 144, 145, 153, 154, 157, 158, 161, 170, 185, 186, 189, 190, 209, 212, 224, 229, 232, 236, 239, 263, 268, 269, 272, 275, 276, 281, 293, 296, 297, 299, 301, 303, 304, 310, 311, 318, 340, 341, 344, 349, 354, 357, 364], "sai": [9, 10, 24, 29, 47, 53, 78, 93, 96, 97, 99, 100, 105, 106, 113, 114, 122, 127, 129, 136, 143, 148, 149, 151, 154, 158, 160, 162, 170, 185, 212, 215, 224, 233, 235, 263, 270, 272, 273, 276, 298, 299, 306, 309, 341, 349, 354, 357, 360, 364], "nondegener": 9, "neq": [9, 24, 31, 37, 47, 59, 61, 62, 64, 72, 81, 89, 90, 92, 94, 102, 107, 112, 119, 137, 144, 158, 178, 180, 186, 209, 223, 228, 232, 275, 276, 281, 284, 290, 292, 296, 297, 299, 364], "uniti": [9, 24, 81, 108, 118, 144, 186, 236, 292, 296, 299, 342, 357], "concret": [9, 97, 143, 158, 224, 309], "degeneraci": 9, "formul": [9, 130, 180], "singular": [9, 95, 185, 202, 212, 214, 269, 349, 357], "after": [9, 10, 18, 21, 28, 32, 71, 87, 89, 99, 106, 107, 110, 129, 130, 134, 138, 139, 141, 143, 144, 152, 157, 158, 160, 170, 178, 180, 184, 185, 190, 224, 229, 231, 233, 235, 263, 268, 270, 276, 299, 306, 310, 333, 335, 341, 349, 352, 354, 358, 363], "eigenvector": [9, 231, 233, 236, 238, 289, 299, 357], "point": [9, 18, 22, 24, 25, 26, 32, 36, 58, 67, 72, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 99, 101, 105, 106, 107, 108, 112, 113, 119, 121, 122, 137, 139, 144, 152, 156, 157, 158, 166, 169, 170, 171, 180, 185, 188, 195, 224, 228, 229, 231, 235, 236, 237, 241, 246, 263, 273, 275, 276, 298, 299, 308, 311, 312, 318, 333, 335, 338, 341, 345, 354, 357, 358, 360, 364], "wise": [9, 107, 137, 174, 190, 338], "scaler": 9, "th": [9, 10, 16, 18, 24, 25, 33, 36, 38, 49, 50, 53, 55, 58, 60, 65, 66, 67, 73, 81, 84, 89, 90, 97, 99, 102, 103, 107, 108, 109, 110, 111, 114, 117, 118, 120, 125, 129, 130, 134, 137, 142, 143, 144, 149, 151, 157, 158, 161, 162, 165, 166, 167, 168, 170, 181, 184, 185, 189, 209, 212, 214, 218, 222, 223, 228, 229, 230, 232, 233, 236, 238, 239, 242, 254, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 281, 284, 292, 296, 297, 298, 299, 301, 303, 304, 307, 308, 309, 310, 311, 314, 318, 322, 324, 327, 328, 335, 338, 340, 341, 342, 343, 344, 345, 349, 350, 354, 359, 364, 367, 368, 369], "union": [9, 10, 16, 25, 29, 81, 87, 90, 97, 100, 106, 108, 110, 117, 122, 134, 139, 148, 156, 159, 169, 170, 185, 239, 272, 275, 276, 304, 345, 349, 353, 357], "again": [9, 10, 75, 89, 90, 99, 106, 107, 110, 122, 125, 143, 170, 181, 185, 235, 237, 299, 342, 349, 358], "is_quasigeometr": 9, "ie": 9, "subcas": [9, 134, 273], "ab": [9, 21, 87, 90, 106, 107, 110, 117, 144, 158, 170, 185, 188, 299, 310, 334, 341, 352, 353, 354, 355, 357, 358, 359, 360, 361, 364, 367], "necessarili": [9, 16, 53, 71, 81, 89, 106, 122, 143, 178, 184, 186, 215, 235, 239, 261, 298, 299, 332, 334, 349, 354], "diagonaliz": 9, "mod": [9, 25, 55, 69, 75, 78, 89, 90, 95, 106, 107, 113, 136, 137, 144, 162, 332, 349, 352, 354, 361, 364], "impli": [9, 25, 31, 96, 97, 106, 114, 128, 148, 166, 180, 239, 299, 341, 349, 357], "243": [9, 78, 311], "729": [9, 78, 289, 311], "2187": [9, 311], "6561": [9, 311], "n_1": [9, 81, 89, 90, 91, 139, 170, 232, 308, 309], "congruent": [9, 10, 75, 78, 107, 136], "n_2": [9, 81, 89, 90, 91, 139, 232, 309], "pm": [9, 55, 57, 65, 81, 100, 130, 161, 209, 231], "lemma": [9, 55, 56, 64, 78, 86, 88, 89, 90, 91, 92, 97, 99, 105, 106, 118, 136, 142, 143, 158, 231, 306], "answer": [9, 20, 21, 29, 32, 80, 81, 83, 87, 89, 92, 125, 231, 239, 292, 311, 332, 349], "cach": [9, 55, 57, 75, 94, 106, 110, 121, 131, 134, 178, 186, 224, 228, 235, 236, 239, 268, 271, 298, 301, 311, 321, 339, 361, 365], "proveabl": 9, "solut": [9, 25, 81, 92, 98, 122, 125, 132, 134, 135, 170, 273, 298, 311, 345, 349, 364], "ration": [9, 10, 15, 16, 18, 21, 25, 46, 58, 73, 96, 97, 99, 106, 107, 108, 109, 110, 111, 114, 117, 142, 143, 144, 145, 147, 148, 149, 157, 161, 170, 179, 180, 183, 185, 187, 218, 223, 231, 232, 233, 235, 236, 238, 239, 240, 241, 248, 256, 261, 268, 271, 280, 281, 282, 284, 285, 286, 288, 289, 290, 292, 295, 296, 297, 298, 299, 306, 314, 317, 318, 324, 325, 327, 330, 335, 338, 339, 347, 349, 354, 357, 369], "maximum": [9, 16, 31, 71, 75, 82, 87, 88, 94, 97, 99, 112, 114, 127, 137, 139, 142, 158, 170, 178, 180, 184, 185, 214, 232, 273, 275, 276, 303, 310, 311, 332, 341, 352, 354, 358], "primarili": [9, 194, 310], "optim": [9, 15, 25, 87, 105, 110, 118, 121, 158, 178, 233, 238, 335, 349], "much": [9, 24, 78, 81, 83, 94, 95, 105, 106, 110, 122, 162, 170, 178, 185, 224, 343, 349, 352, 354], "larger": [9, 18, 50, 52, 71, 81, 94, 106, 121, 158, 170, 171, 185, 212, 213, 235, 239, 261, 270, 271, 275, 292, 341, 345, 354, 357], "deal": [10, 106, 122, 331], "mathemat": [10, 76, 78, 81, 89, 92, 106, 122, 125, 137, 144, 145, 151, 161, 180, 183, 184, 185, 186, 213, 218, 224, 233, 238, 239, 273, 298, 299, 318, 344, 349, 364], "you": [10, 18, 21, 25, 28, 29, 38, 58, 75, 76, 82, 83, 86, 87, 88, 89, 90, 92, 94, 96, 106, 107, 110, 113, 118, 122, 125, 127, 128, 131, 134, 136, 138, 143, 145, 151, 153, 154, 156, 158, 160, 161, 162, 170, 173, 174, 178, 185, 219, 222, 232, 235, 237, 241, 268, 270, 271, 272, 273, 275, 298, 311, 314, 317, 324, 328, 330, 332, 341, 344, 349, 352, 353, 354, 358, 361, 363], "need": [10, 16, 18, 24, 25, 28, 35, 55, 57, 58, 59, 67, 71, 80, 81, 87, 90, 94, 97, 106, 110, 113, 118, 120, 122, 127, 129, 130, 136, 145, 154, 156, 159, 170, 178, 185, 190, 208, 209, 211, 212, 222, 231, 232, 233, 234, 235, 236, 238, 252, 262, 268, 271, 272, 273, 286, 298, 303, 310, 321, 334, 338, 341, 342, 343, 349, 353, 354, 357, 360, 368], "hash": [10, 25, 100], "avl": 10, "look": [10, 15, 18, 20, 22, 76, 81, 88, 91, 96, 97, 100, 106, 107, 136, 144, 158, 161, 170, 173, 185, 224, 235, 236, 239, 262, 264, 266, 271, 273, 341, 343, 349, 360], "misc": [10, 75, 82, 86, 89, 92, 100, 106, 129, 136, 138, 189, 190, 321, 364], "sagex_d": 10, "adrien": 10, "boussicault": [10, 154, 156], "2015": [10, 18, 25, 61, 62, 63, 76, 95, 97, 106, 107, 113, 122, 144, 174, 197, 236, 237, 335, 345, 367], "hook": [10, 28, 33, 40, 53, 96, 120, 158, 162, 175, 181, 292, 297, 338, 339, 341, 343], "statist": [10, 49, 50, 53, 88, 99, 106, 130, 139, 158, 162, 212, 213, 224, 293, 306, 349, 354], "binary_tre": [10, 128], "mean": [10, 16, 22, 25, 48, 75, 82, 86, 87, 89, 92, 94, 97, 99, 102, 105, 106, 107, 108, 111, 117, 120, 127, 128, 130, 136, 137, 142, 143, 144, 145, 154, 157, 158, 170, 178, 180, 185, 222, 224, 229, 230, 270, 272, 273, 275, 280, 284, 291, 296, 298, 299, 301, 304, 309, 310, 318, 327, 332, 335, 338, 341, 342, 344, 345, 347, 349, 358, 367], "alwai": [10, 16, 18, 25, 29, 38, 47, 59, 71, 75, 81, 89, 96, 99, 106, 116, 118, 120, 121, 128, 130, 136, 154, 158, 160, 178, 180, 181, 184, 185, 190, 224, 228, 230, 234, 236, 265, 272, 280, 292, 298, 299, 304, 309, 331, 335, 338, 341, 342, 344, 349, 354, 357, 360, 365, 369], "plu": [10, 24, 29, 50, 55, 57, 63, 65, 78, 90, 99, 106, 128, 130, 158, 162, 166, 170, 239, 267, 272, 299, 341], "out": [10, 16, 18, 47, 50, 60, 91, 99, 105, 106, 107, 112, 118, 125, 136, 137, 139, 147, 170, 185, 194, 235, 261, 273, 309, 310, 311, 331, 338, 341, 343, 349, 354, 357], "outermost": 10, "constructor": [10, 76, 78, 79, 90, 107, 109, 110, 111, 112, 122, 128, 132, 154, 161, 174, 184, 185, 219, 273, 357, 364], "shorten": [10, 106, 158, 180, 302], "abbrevi": [10, 229], "perform": [10, 16, 32, 87, 89, 94, 103, 112, 116, 125, 147, 149, 170, 174, 190, 194, 196, 204, 209, 212, 216, 272, 273, 280, 282, 299, 306, 310, 332, 335, 341, 344, 347, 349, 354, 363], "as_ordered_tre": 10, "with_leav": 10, "seen": [10, 21, 22, 71, 80, 81, 88, 117, 128, 143, 144, 180, 181, 184, 185, 233, 235, 301, 302, 338, 347, 349], "By": [10, 28, 45, 50, 56, 60, 64, 73, 75, 76, 78, 83, 87, 88, 89, 90, 106, 107, 111, 116, 136, 139, 142, 143, 154, 158, 160, 162, 170, 180, 185, 186, 224, 226, 231, 233, 235, 239, 242, 256, 261, 265, 268, 269, 272, 275, 276, 280, 281, 282, 284, 289, 290, 294, 296, 297, 298, 299, 300, 311, 327, 339, 340, 341, 342, 343, 345, 349, 354, 357, 360, 367], "certain": [10, 18, 21, 22, 25, 47, 50, 70, 96, 97, 99, 110, 112, 118, 122, 123, 125, 127, 130, 139, 185, 213, 229, 234, 270, 276, 298, 299, 304, 306, 310, 318, 331, 338, 341, 345, 349, 359], "canope": [10, 128], "along": [10, 22, 57, 58, 63, 68, 87, 97, 99, 118, 120, 122, 124, 130, 132, 152, 157, 158, 159, 162, 170, 185, 222, 224, 231, 235, 236, 237, 239, 271, 273, 298, 303, 306, 313, 315, 320, 322, 323, 326, 329, 336, 338, 341, 343, 354, 360, 363, 364, 368], "except": [10, 16, 18, 20, 21, 22, 29, 55, 58, 59, 71, 75, 89, 90, 100, 106, 118, 122, 128, 137, 158, 161, 165, 168, 170, 178, 180, 184, 207, 209, 211, 212, 213, 222, 224, 226, 227, 233, 234, 237, 238, 239, 241, 261, 270, 273, 349, 350, 354, 357, 360], "extrem": [10, 29, 78, 110, 139, 180, 276, 307, 311], "ones": [10, 18, 29, 70, 98, 102, 106, 125, 136, 158, 170, 178, 185, 190, 213, 224, 226, 230, 262, 265, 299, 306, 338, 349, 352, 354], "write": [10, 16, 29, 45, 67, 73, 84, 90, 106, 107, 108, 118, 119, 120, 128, 136, 142, 143, 145, 170, 222, 235, 275, 281, 292, 296, 297, 299, 301, 309, 341, 360, 364], "t_1": [10, 24, 117, 128, 136, 137, 224, 231, 233, 238, 338, 340, 349], "t_2": [10, 117, 128, 136, 137, 224, 231, 233, 338, 340, 349], "complementari": [10, 16, 136, 158, 172, 184, 340, 354], "dg1994": 10, "trivial": [10, 33, 52, 77, 81, 87, 89, 106, 110, 115, 121, 178, 180, 181, 185, 186, 190, 209, 218, 222, 224, 230, 231, 239, 264, 268, 270, 278, 298, 306, 310, 311, 320, 338, 339, 349, 364], "finite_set_map_ci": 10, "fiber": [10, 335], "def": [10, 18, 25, 28, 29, 52, 53, 54, 69, 81, 92, 99, 106, 118, 122, 129, 138, 142, 143, 144, 145, 155, 156, 161, 170, 174, 185, 212, 222, 231, 233, 238, 270, 298, 299, 302, 306, 321, 332, 333, 338, 341, 349, 355, 364, 368], "comb": [10, 27, 141], "over_decomposit": 10, "under_decomposit": 10, "________o________": 10, "__o__": 10, "__o___": 10, "_o_": [10, 118], "dendriform_shuffl": 10, "henc": [10, 25, 38, 67, 71, 102, 110, 119, 122, 130, 139, 149, 178, 180, 185, 222, 224, 229, 262, 268, 286, 292, 298, 306, 337, 343, 347, 349, 357, 364], "never": [10, 18, 106, 122, 137, 196, 333, 341, 346, 352], "keyword": [10, 22, 31, 96, 99, 110, 129, 139, 143, 156, 158, 170, 174, 178, 184, 222, 223, 275, 276, 296, 298, 299, 301, 303, 309, 310, 311, 339, 341, 343, 349, 368], "displai": [10, 16, 18, 21, 50, 80, 88, 89, 97, 99, 112, 122, 130, 131, 132, 143, 152, 154, 155, 156, 157, 158, 162, 170, 185, 193, 194, 196, 202, 204, 206, 208, 210, 211, 212, 213, 235, 239, 271, 295, 299, 303, 309, 310, 336, 337, 341, 343, 345, 347, 349, 358, 360, 366], "correctli": [10, 12, 27, 106, 110, 130, 154, 158, 239, 267, 311, 361], "edg": [10, 18, 20, 21, 22, 38, 45, 55, 57, 61, 75, 87, 94, 97, 99, 100, 106, 111, 115, 117, 118, 128, 132, 152, 154, 157, 158, 159, 167, 169, 170, 178, 180, 181, 185, 194, 208, 212, 219, 223, 224, 227, 228, 235, 237, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 265, 266, 267, 272, 302, 309, 327, 332, 341, 345, 346, 349, 354, 360, 364, 368], "hook_numb": 10, "recal": [10, 15, 16, 25, 67, 118, 149, 158, 170, 208, 209, 238, 262, 268, 306, 341, 343, 349, 357], "processu": 10, "in_order_travers": 10, "node_act": 10, "leaf_act": 10, "infix": [10, 144], "execut": [10, 106, 349], "whenev": [10, 18, 73, 75, 76, 82, 86, 87, 88, 89, 90, 92, 99, 105, 136, 139, 170, 178, 180, 181, 185, 190, 209, 224, 231, 240, 273, 275, 281, 284, 290, 292, 296, 297, 299, 338, 341, 349, 356], "els": [10, 29, 70, 77, 81, 89, 97, 98, 106, 113, 118, 122, 134, 139, 143, 144, 161, 208, 224, 226, 231, 232, 235, 263, 275, 299, 311, 331, 338, 341, 345, 346, 349, 355, 361, 363, 364], "____3____": 10, "__7__": 10, "_5_": 10, "in_order_traversal_it": 10, "rather": [10, 29, 35, 38, 58, 65, 73, 89, 97, 101, 108, 117, 120, 125, 128, 143, 154, 155, 170, 185, 195, 235, 270, 272, 273, 274, 289, 296, 298, 299, 303, 309, 310, 312, 328, 331, 334, 338, 341, 342, 343, 349], "them": [10, 16, 29, 71, 76, 78, 80, 81, 83, 87, 90, 93, 96, 97, 99, 106, 108, 110, 118, 120, 132, 134, 136, 137, 138, 139, 143, 144, 149, 156, 157, 158, 170, 178, 180, 185, 214, 229, 233, 235, 236, 237, 239, 269, 270, 271, 272, 273, 275, 276, 299, 304, 318, 327, 328, 333, 338, 340, 341, 343, 347, 349, 353, 354, 360, 363, 364], "alik": 10, "is_complet": [10, 99, 106, 132, 137], "nutshel": 10, "possibli": [10, 25, 35, 57, 78, 99, 101, 106, 107, 118, 122, 130, 136, 139, 143, 154, 170, 212, 218, 224, 234, 270, 273, 303, 310, 331, 337, 338, 341, 347, 367], "level": [10, 35, 50, 55, 56, 58, 75, 87, 98, 107, 112, 118, 129, 158, 160, 162, 171, 178, 180, 185, 224, 229, 232, 233, 235, 238, 239, 241, 261, 268, 270, 288, 298, 321, 341, 342, 343, 349, 354], "flush": [10, 106, 114, 341, 349, 365], "heap": [10, 112], "deepest": [10, 96], "fill": [10, 18, 31, 55, 57, 61, 89, 96, 97, 99, 100, 105, 113, 118, 125, 130, 132, 136, 137, 158, 171, 184, 194, 209, 215, 216, 233, 239, 273, 275, 293, 303, 310, 341, 345, 349, 358], "far": [10, 136, 143, 152, 160, 162, 215, 218, 232, 235, 310, 349], "___o___": 10, "is_empti": [10, 32, 154, 158, 272, 352, 354, 357, 361, 362], "emploi": 10, "precis": [10, 21, 25, 47, 53, 58, 97, 99, 106, 114, 116, 118, 121, 130, 137, 143, 144, 145, 151, 154, 157, 158, 170, 185, 225, 230, 233, 270, 273, 274, 275, 281, 284, 290, 296, 297, 299, 301, 304, 332, 338, 341, 342, 349, 354, 357, 358, 369], "is_ful": [10, 354], "known": [10, 11, 15, 16, 22, 24, 28, 52, 58, 61, 64, 71, 77, 95, 99, 108, 112, 113, 114, 118, 128, 137, 143, 144, 145, 158, 160, 170, 182, 184, 185, 186, 213, 222, 226, 229, 273, 275, 276, 280, 281, 284, 289, 296, 297, 298, 299, 301, 308, 311, 332, 337, 338, 342, 343, 349, 352, 354, 357, 358, 364, 369], "proper": [10, 18, 23, 50, 87, 122, 128, 170, 180, 185, 190, 219, 223, 234, 235, 263, 268, 298, 311, 353, 354, 369], "is_perfect": [10, 58], "left_border_symmetri": [10, 99], "symmetri": [10, 83, 119, 170, 185, 222, 229, 235, 270, 299, 338, 341, 345, 347, 349, 354], "border": [10, 132, 158, 170, 185, 239, 354, 361], "three": [10, 65, 73, 75, 78, 90, 91, 93, 96, 99, 100, 107, 113, 118, 128, 130, 132, 137, 144, 157, 158, 165, 166, 167, 170, 178, 185, 233, 235, 238, 270, 273, 275, 299, 309, 311, 327, 343, 344, 345, 349, 354, 357, 358, 364], "t_3": [10, 136, 340], "becom": [10, 16, 71, 73, 75, 86, 87, 92, 112, 113, 122, 143, 144, 147, 154, 158, 160, 178, 185, 235, 262, 270, 299, 304, 306, 338, 341, 343, 349, 360, 367], "left_children_node_numb": 10, "total": [10, 18, 21, 22, 29, 33, 38, 49, 50, 53, 70, 81, 89, 90, 96, 99, 117, 126, 139, 144, 152, 154, 158, 162, 169, 172, 178, 181, 184, 185, 190, 194, 239, 241, 272, 275, 276, 303, 306, 307, 327, 341, 349, 354, 360], "left_right_symmetri": [10, 99, 128, 154], "left_rot": 10, "keep": [10, 16, 18, 26, 78, 87, 90, 109, 127, 128, 130, 136, 139, 142, 158, 181, 184, 185, 212, 237, 271, 334, 338, 343, 345, 349, 361], "mind": [10, 16, 134, 185, 233, 349], "consist": [10, 11, 15, 18, 21, 22, 24, 25, 26, 29, 45, 61, 67, 71, 77, 78, 83, 90, 93, 95, 96, 97, 99, 100, 106, 107, 112, 113, 118, 128, 129, 130, 132, 137, 144, 152, 154, 155, 156, 157, 158, 159, 161, 165, 166, 167, 170, 172, 178, 180, 184, 185, 189, 208, 222, 223, 224, 230, 233, 235, 239, 241, 270, 272, 273, 275, 303, 306, 307, 309, 310, 335, 337, 338, 341, 345, 349, 350, 354, 357, 358, 360, 364, 368], "descend": [10, 95, 99, 136, 139, 184, 272, 302, 306], "wherea": [10, 12, 16, 25, 38, 58, 76, 97, 99, 108, 109, 118, 128, 130, 136, 152, 157, 159, 183, 190, 218, 233, 268, 269, 273, 275, 301, 303, 343, 354, 360], "pictur": [10, 22, 45, 100, 128, 158, 184, 219, 224, 239, 268, 275, 309, 357, 358], "asterisk": 10, "signifi": [10, 170], "might": [10, 18, 21, 25, 28, 56, 64, 83, 106, 123, 134, 154, 158, 185, 222, 269, 272, 293, 298, 310, 338, 341, 367], "blanklin": 10, "oper": [10, 16, 18, 21, 23, 35, 36, 38, 45, 48, 49, 50, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 71, 81, 84, 94, 99, 107, 108, 109, 111, 112, 118, 121, 123, 128, 129, 137, 138, 139, 142, 143, 144, 145, 147, 149, 158, 160, 161, 162, 166, 167, 168, 170, 178, 180, 181, 185, 190, 209, 210, 212, 213, 218, 231, 233, 236, 237, 238, 239, 264, 266, 270, 273, 274, 281, 282, 284, 286, 289, 290, 292, 293, 296, 297, 298, 299, 301, 303, 309, 327, 338, 341, 343, 347, 352, 354, 357, 368], "right_rot": 10, "make_leaf": 10, "make_nod": 10, "child_list": 10, "t3": [10, 107, 137, 159, 296, 341, 343], "written": [10, 29, 58, 59, 60, 76, 84, 87, 94, 99, 106, 107, 112, 113, 114, 118, 122, 132, 142, 143, 144, 148, 149, 152, 158, 162, 170, 180, 185, 186, 229, 233, 273, 283, 290, 298, 299, 301, 309, 311, 343, 349, 352, 354], "graft": [10, 109, 111, 117, 128, 154, 272], "hnt2005": [10, 170], "goe": [10, 25, 29, 87, 93, 105, 106, 125, 137, 143, 144, 149, 158, 178, 179, 181, 185, 224, 235, 239, 299, 357, 358, 364], "lodai": [10, 170], "ronco": [10, 170], "lr0102066": [10, 170], "backslash": [10, 75, 76, 81, 109, 170], "contrari": 10, "grow": [10, 18, 50, 106, 235, 349, 357, 358], "upward": [10, 16, 105, 180, 184, 208], "swap": [10, 127, 162, 171, 274, 339, 341, 342, 343, 344, 354, 368], "graphic": [10, 18, 21, 45, 61, 71, 99, 100, 106, 112, 113, 128, 152, 154, 156, 166, 172, 185, 208, 235, 239, 241, 275, 307, 309, 335, 341, 345, 349, 354, 357, 358, 360, 368], "show": [10, 18, 21, 22, 25, 29, 36, 59, 61, 75, 76, 90, 96, 99, 106, 107, 122, 125, 128, 134, 139, 144, 145, 152, 160, 170, 172, 175, 178, 180, 185, 222, 232, 233, 234, 235, 239, 244, 265, 270, 275, 292, 299, 309, 310, 335, 340, 341, 345, 349, 354, 357, 358, 360], "b1": [10, 51, 56, 68, 78, 137, 245, 247, 270], "b2": [10, 53, 56, 59, 68, 137, 170, 180, 185, 222, 223, 224, 226, 228, 233, 236, 237, 238, 247, 265, 270, 271, 357], "cut": [10, 36, 47, 50, 99, 122, 128, 144, 145, 180, 185, 302, 311, 354], "bewar": [10, 87, 111, 117, 128, 144, 185, 218, 239, 341], "delet": [10, 18, 21, 33, 90, 96, 98, 106, 118, 158, 160, 178, 214, 279, 334, 349, 365], "attach": [10, 50, 114, 154, 162, 180, 184, 235, 270, 272, 302, 349], "That": [10, 47, 50, 67, 95, 99, 102, 106, 128, 129, 148, 155, 158, 162, 178, 184, 209, 215, 228, 229, 235, 272, 304, 341, 342, 343, 353, 354], "to_ful": 10, "relationship": [10, 176, 318, 347], "q_hook_length_fract": 10, "q_factor": 10, "fraction": [10, 99, 149, 157, 190, 218, 233, 281, 282, 284, 285, 286, 288, 289, 290, 296, 297, 298, 299, 311, 327, 349, 352, 364, 369], "indetermin": [10, 16, 106, 108, 119, 131, 143, 149, 185, 186, 187, 306], "h_": [10, 50, 89, 143, 149, 158, 178, 185, 235, 270, 280, 281, 284, 289, 291, 296, 297, 298, 299, 301, 354], "lvert": [10, 119, 142, 143, 158, 162, 212], "rvert": [10, 119, 142, 143, 158, 162, 212], "_q": [10, 16, 25, 54, 76, 119, 186, 213, 281, 284, 290, 296, 297, 299], "t_t": 10, "easi": [10, 71, 89, 106, 118, 122, 125, 143, 145, 164, 224, 233, 239, 273, 298, 299, 301, 306, 311, 349, 357], "explicitli": [10, 52, 57, 61, 90, 96, 118, 120, 142, 144, 145, 170, 180, 212, 223, 231, 233, 235, 238, 244, 262, 281, 296, 297, 298, 299, 301, 331, 338, 349, 357, 358, 360], "formula": [10, 16, 18, 22, 25, 32, 58, 70, 73, 81, 96, 114, 128, 132, 136, 137, 141, 142, 143, 144, 145, 149, 150, 158, 175, 178, 181, 182, 183, 186, 213, 231, 233, 234, 238, 241, 263, 270, 272, 281, 283, 284, 289, 290, 293, 296, 297, 299, 301, 306, 309, 310, 338, 341, 343, 349, 352, 369], "binomi": [10, 25, 76, 141, 144, 170, 186, 281, 284, 299, 304, 311, 349, 354], "coeffici": [10, 16, 18, 22, 25, 38, 55, 58, 72, 76, 106, 110, 114, 119, 129, 132, 141, 142, 143, 144, 145, 148, 149, 158, 166, 170, 178, 185, 186, 187, 188, 190, 208, 222, 224, 231, 232, 233, 235, 236, 238, 241, 248, 256, 261, 269, 270, 278, 280, 281, 282, 284, 285, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 306, 309, 311, 318, 327, 335, 338, 347, 349, 354, 369], "variat": [10, 36, 118, 158, 163], "f_": [10, 15, 25, 35, 38, 45, 54, 55, 57, 68, 87, 95, 96, 108, 136, 143, 144, 157, 209, 231, 299, 318, 338, 341], "t_": [10, 24, 33, 47, 130, 231, 238, 283, 338], "mathrm": [10, 29, 35, 37, 38, 41, 47, 50, 53, 56, 58, 59, 60, 64, 66, 67, 106, 107, 114, 144, 145, 158, 170, 178, 180, 209, 216, 222, 273, 295, 296, 298, 299, 306, 310, 338, 341, 349], "drop": [10, 158, 170, 318, 354, 369], "bw1988": 10, "theorem": [10, 36, 47, 50, 64, 66, 72, 73, 75, 76, 78, 81, 83, 89, 90, 106, 108, 125, 129, 136, 143, 144, 149, 158, 160, 162, 170, 185, 219, 222, 273, 297, 299, 311, 337, 338, 340, 341, 352, 369], "easiest": [10, 106, 170, 235, 281, 284, 290, 296, 297, 299], "interest": [10, 88, 101, 106, 107, 121, 145, 157, 170, 184, 238, 270, 349, 354, 357], "465": [10, 311], "3720": 10, "polynomialr": [10, 97, 106, 131, 138, 144, 158, 187, 188, 236, 270, 274, 287, 290, 298, 299], "gen": [10, 24, 25, 76, 81, 97, 99, 106, 109, 111, 137, 138, 144, 149, 157, 158, 185, 186, 187, 194, 213, 231, 233, 236, 238, 271, 280, 282, 283, 285, 287, 288, 289, 290, 292, 298, 299, 306, 311, 324, 327, 330, 331, 349, 368, 369], "q_hook_length_fraction_2": 10, "re": [10, 97, 105, 106, 118, 120, 143, 144, 180, 185, 194, 208, 238, 299, 318, 342, 343, 354], "sylvester_class": [10, 170], "test_genfun": 10, "cp2012": 10, "without": [10, 11, 18, 21, 22, 25, 45, 50, 52, 67, 77, 78, 83, 97, 106, 113, 118, 122, 125, 128, 129, 136, 137, 139, 142, 162, 170, 178, 180, 185, 190, 209, 212, 235, 236, 237, 269, 270, 271, 298, 301, 305, 311, 341, 345, 349, 352, 354, 357, 358], "_latex_": [10, 99, 128, 152, 154, 275], "_ascii_art_": [10, 154], "pretty_print": [10, 99, 152, 154, 157, 349], "faith": [10, 154, 158, 239, 269], "single_edge_cut_shap": 10, "interval_poset": [10, 128], "tamariintervalposet": [10, 99, 128], "is_new": [10, 128], "tripl": [10, 22, 58, 69, 75, 76, 79, 81, 86, 87, 92, 95, 97, 106, 113, 118, 128, 137, 172, 178, 190, 222, 237, 307, 343, 357], "inner": [10, 29, 55, 97, 99, 100, 106, 130, 138, 142, 143, 144, 158, 168, 193, 194, 222, 232, 235, 236, 261, 270, 298, 299, 303, 309, 310, 341, 349, 354], "connect": [10, 15, 16, 18, 21, 23, 32, 38, 45, 58, 59, 87, 95, 97, 106, 108, 113, 117, 128, 130, 143, 144, 156, 158, 162, 170, 178, 180, 185, 194, 197, 209, 223, 224, 226, 229, 234, 263, 270, 275, 296, 298, 299, 309, 318, 345, 349], "compon": [10, 18, 21, 22, 25, 26, 32, 42, 45, 47, 55, 57, 58, 59, 95, 97, 106, 107, 108, 117, 118, 125, 128, 129, 130, 134, 143, 149, 151, 155, 156, 157, 158, 159, 160, 162, 170, 174, 178, 180, 185, 208, 209, 222, 224, 227, 229, 234, 236, 241, 263, 265, 280, 282, 296, 298, 299, 301, 303, 341, 342, 343, 354, 360], "sub": [10, 52, 97, 106, 107, 110, 118, 128, 139, 183, 186, 233, 236, 271, 272, 275, 289, 331, 338, 349, 354, 363, 369], "assign": [10, 25, 87, 94, 99, 100, 106, 110, 113, 118, 130, 145, 152, 189, 232, 237, 327, 354, 358], "origin": [10, 25, 29, 47, 58, 62, 77, 78, 84, 87, 92, 93, 94, 98, 99, 100, 106, 109, 114, 118, 120, 122, 125, 129, 134, 137, 139, 143, 152, 158, 166, 170, 180, 181, 183, 187, 210, 211, 213, 216, 229, 239, 262, 264, 266, 335, 337, 341, 343, 345, 349, 357, 358], "left_to_right": [10, 128, 170], "sylvest": [10, 118, 128, 136, 170], "forget": [10, 24, 96, 106, 154, 170, 272, 349], "congruenc": [10, 78, 170, 178, 180, 302], "uacvbw": [10, 170], "ucavbw": [10, 170], "drawn": [10, 97, 99, 106, 112, 113, 152, 155, 156, 158, 235, 239, 275, 309, 349], "rsk": [10, 15, 52, 118, 120, 158, 170, 273, 341, 354, 361], "exist": [10, 16, 18, 22, 25, 35, 50, 55, 56, 58, 59, 60, 64, 70, 71, 75, 76, 78, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 106, 112, 122, 125, 128, 132, 136, 144, 158, 160, 162, 170, 178, 180, 184, 185, 190, 193, 194, 212, 213, 218, 224, 232, 239, 263, 273, 275, 280, 292, 298, 299, 306, 309, 310, 311, 338, 340, 341, 342, 343, 349, 354, 357, 362, 364], "binary_search_insert": [10, 128, 170], "binary_search_tre": [10, 118, 128, 170], "higher": [10, 99, 100, 107, 130, 132, 144, 158, 160, 162, 170, 299, 338, 342, 357], "permutohedron": [10, 128, 170, 184, 235, 239], "permutohedron_lequ": [10, 128, 170, 184], "312": [10, 78, 88, 99, 128, 354], "to_312_avoiding_permut": [10, 99], "132": [10, 22, 25, 78, 81, 83, 97, 99, 122, 128, 151, 159, 310, 311, 319, 349, 354], "to_132_avoiding_permut": [10, 99], "raw": [10, 352], "verifi": [10, 25, 29, 38, 76, 106, 118, 127, 130, 139, 152, 158, 161, 170, 190, 299, 311, 338, 339, 345, 349], "claim": [10, 136, 144, 158, 170, 233], "test_bst_of_sc": 10, "p_per": 10, "to_poset": [10, 154, 181], "linear_extens": [10, 128, 158, 178, 180, 181, 182, 184, 185, 188], "tamari_great": 10, "filter": [10, 16, 18, 25, 118, 178, 183, 185, 194, 292, 294, 298, 299, 300, 306], "tamari_lequ": [10, 99], "tamari_smal": 10, "tamari_interv": [10, 99, 128], "ip": [10, 87, 99, 128], "lower_binary_tre": [10, 128], "upper_binary_tre": [10, 128], "interval_cardin": [10, 99, 128], "number_of_tamari_invers": [10, 99, 128], "tamari_join": 10, "s_n": [10, 24, 25, 68, 73, 81, 108, 125, 127, 128, 141, 143, 144, 149, 158, 170, 180, 229, 236, 274, 278, 296, 298, 299, 311, 318, 338, 341, 343, 364], "binary_search_tree_shap": [10, 170], "homomorph": [10, 15, 16, 108, 143, 144, 147, 158, 161, 222, 229, 281, 284, 290, 296, 297, 299], "rea2004": 10, "tamari_meet": 10, "vivian": [10, 128, 170, 238], "pon": [10, 128, 170], "darij": [10, 16, 29, 108, 120, 128, 143, 144, 170, 185, 273, 299, 310, 341], "grinberg": [10, 16, 29, 108, 120, 128, 143, 144, 170, 185, 273, 299, 310], "june": [10, 99, 170, 345], "2014": [10, 52, 57, 67, 68, 76, 87, 94, 106, 107, 128, 131, 143, 170, 185, 205, 207, 220, 307, 369], "januari": [10, 233], "2018": [10, 15, 16, 26, 68, 97, 120, 139, 158, 160, 161, 165, 167, 186, 223, 273, 341], "b3": [10, 68, 97, 131, 159, 178, 180, 181, 185, 222, 223, 228, 230, 232, 236, 237, 245, 247, 270], "univers": [10, 18, 81, 87, 92, 99, 111, 112, 117, 157, 169, 170, 208, 227, 229, 230, 232, 285, 298, 299, 300, 302, 349, 357, 364], "meet": [10, 29, 76, 127, 143, 152, 156, 170, 178, 180, 183, 184, 185, 344, 349], "test_uni_join": [10, 170], "equip": [10, 16, 161, 162, 185, 241, 349], "statement": [10, 138, 158, 170, 207, 338], "tamari_pr": 10, "tamari_succ": 10, "test_uni_meet": [10, 170], "predecessor": [10, 45, 106, 118, 239], "tamari_sorting_tupl": 10, "among": [10, 29, 75, 76, 78, 93, 99, 158, 170, 185, 231, 236, 306, 311, 327, 349, 353], "componentwis": [10, 99, 184, 350], "essenti": [10, 45, 106, 121, 144, 145, 168, 189, 224, 231, 233, 235, 309, 342, 349], "ht1972": [10, 128], "refer": [10, 11, 16, 18, 21, 22, 23, 24, 25, 26, 33, 37, 47, 50, 54, 55, 58, 60, 61, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 85, 87, 88, 89, 90, 91, 92, 97, 99, 100, 106, 108, 109, 111, 113, 114, 117, 120, 125, 128, 130, 132, 136, 137, 139, 141, 143, 144, 145, 148, 149, 157, 158, 160, 161, 162, 163, 167, 169, 170, 178, 179, 180, 183, 184, 185, 186, 187, 194, 197, 208, 209, 210, 213, 215, 222, 223, 224, 229, 231, 232, 233, 234, 236, 237, 238, 239, 262, 263, 272, 273, 275, 276, 278, 283, 285, 286, 288, 289, 292, 293, 294, 296, 298, 299, 300, 301, 302, 304, 306, 307, 308, 311, 318, 335, 336, 337, 339, 341, 343, 344, 345, 349, 352, 353, 354, 357, 358, 360, 364, 367, 369], "successor": [10, 45, 106, 118, 239, 368], "minim": [10, 23, 24, 36, 45, 58, 60, 78, 87, 106, 107, 118, 128, 129, 158, 170, 178, 180, 184, 185, 190, 224, 236, 273, 275, 276, 332, 341, 343, 345, 349, 354, 357, 364, 369], "usemap": [10, 99], "1l0r": [10, 99], "1r0l": [10, 99], "l1r0": [10, 99], "r1l0": [10, 99], "r10l": [10, 99], "to_dyck_word_tamari": [10, 99], "to_ordered_tree_left_branch": [10, 128], "brother": [10, 128, 154], "to_ordered_tree_right_branch": [10, 128], "root_to_leaf": [10, 154], "interpret": [10, 18, 25, 31, 33, 48, 57, 65, 87, 88, 99, 106, 107, 118, 154, 158, 162, 166, 180, 181, 232, 233, 238, 239, 242, 268, 270, 273, 298, 299, 306, 311, 318, 341, 343, 369], "orient": [10, 18, 21, 22, 45, 106, 128, 132, 154, 158, 170, 184, 233, 235, 309, 345, 349], "pass": [10, 18, 21, 24, 25, 28, 61, 62, 75, 76, 81, 96, 99, 106, 118, 122, 129, 130, 139, 144, 154, 158, 170, 174, 178, 180, 185, 189, 196, 208, 209, 212, 215, 224, 228, 233, 235, 238, 239, 241, 263, 273, 275, 276, 298, 299, 301, 338, 340, 345, 349, 358], "ignor": [10, 16, 18, 21, 45, 76, 78, 106, 124, 125, 130, 134, 154, 158, 170, 185, 273, 310, 328, 349, 361, 367], "p1": [10, 15, 32, 125, 170, 182, 184, 185, 248, 250, 252, 254, 274, 285, 289, 299, 338], "maximal_el": [10, 128, 158, 178, 184, 185, 234, 309, 344], "minimal_el": [10, 158, 178, 185, 309], "p2": [10, 15, 32, 76, 97, 106, 125, 158, 170, 182, 184, 185, 248, 250, 252, 254, 274, 285, 289, 317, 318, 327, 338], "to_tilt": 10, "tilt": [10, 22, 99], "depict": [10, 100, 132, 158, 309], "abov": [10, 12, 15, 16, 23, 29, 32, 38, 47, 50, 52, 55, 61, 69, 75, 81, 87, 89, 90, 91, 96, 97, 99, 106, 107, 108, 112, 120, 121, 122, 129, 130, 132, 134, 136, 138, 139, 143, 144, 145, 152, 153, 156, 158, 162, 170, 180, 182, 184, 185, 186, 190, 209, 222, 229, 230, 231, 235, 237, 238, 246, 262, 263, 270, 276, 280, 298, 299, 301, 306, 310, 318, 338, 341, 342, 343, 344, 349, 358, 364, 368], "regularli": 10, "line": [10, 24, 34, 38, 58, 76, 78, 80, 81, 85, 90, 96, 97, 99, 100, 105, 108, 128, 136, 143, 152, 155, 156, 158, 166, 170, 181, 184, 185, 235, 270, 273, 274, 275, 298, 311, 341, 343, 345, 349, 354, 360], "horizont": [10, 18, 55, 99, 105, 114, 118, 128, 130, 151, 152, 156, 158, 170, 208, 209, 210, 211, 275, 308, 337, 341, 344], "coordin": [10, 22, 55, 76, 89, 90, 99, 105, 106, 114, 118, 128, 130, 132, 137, 152, 156, 158, 162, 235, 239, 275, 293, 301, 303, 309, 310, 335, 341, 343, 345, 349, 354, 357, 358], "convent": [10, 22, 45, 47, 53, 57, 67, 73, 77, 89, 96, 100, 111, 113, 118, 128, 130, 144, 145, 155, 157, 158, 160, 161, 162, 169, 170, 185, 193, 194, 209, 210, 211, 213, 218, 223, 224, 228, 230, 233, 235, 238, 239, 241, 273, 275, 303, 309, 310, 318, 336, 338, 339, 341, 343, 349, 354], "son": 10, "share": [10, 29, 67, 78, 90, 106, 121, 128, 142, 185, 235, 262, 299, 309, 349], "2020222002000": 10, "dyckword": [10, 99, 122, 128, 152, 154, 156, 157, 165, 188], "to_binary_tre": [10, 99, 156, 188], "to_undirected_graph": [10, 154], "undirect": [10, 21, 22, 154, 185], "twisting_numb": 10, "compos": [10, 97, 106, 136, 170, 171, 222, 270, 273, 292, 340, 349, 352, 354, 357], "longer": [10, 25, 50, 78, 106, 130, 158, 161, 170, 228, 272, 273, 336, 341, 343, 349], "planar": [10, 97, 109, 128, 154, 156, 159, 180, 184, 185, 272, 349], "futur": [10, 70, 121, 151, 154, 156, 157, 184, 229, 233, 367], "reli": [10, 16, 18, 106, 122, 154, 170, 252, 310, 338, 341], "binarytrees_al": 10, "binarytrees_s": 10, "catalan": [10, 25, 97, 99, 128, 151, 154, 156, 157, 186, 311, 349], "probabl": [10, 28, 29, 87, 96, 99, 106, 137, 139, 152, 154, 155, 157, 158, 162, 184, 185, 235, 238, 281, 296, 297, 299, 301, 309, 341], "fullbinarytrees_al": 10, "fullbinarytrees_s": 10, "fullbinarytre": 10, "disregard": 10, "variou": [10, 18, 20, 21, 28, 51, 94, 97, 100, 106, 118, 125, 130, 132, 154, 158, 161, 164, 170, 180, 185, 224, 233, 235, 238, 241, 270, 294, 298, 300, 301, 309, 331, 341, 343, 361], "iron": 10, "below": [10, 12, 15, 16, 18, 25, 28, 29, 45, 83, 87, 96, 98, 99, 106, 118, 121, 122, 124, 125, 129, 132, 135, 136, 137, 139, 145, 149, 152, 158, 161, 162, 170, 180, 182, 184, 185, 186, 209, 224, 229, 233, 234, 235, 237, 241, 263, 273, 275, 289, 292, 293, 299, 309, 338, 341, 343, 349, 357, 360, 364, 366, 369], "shorthand": [10, 97, 132, 144, 145, 149, 160, 161, 224, 230, 231, 298, 338, 361, 368], "imposs": [10, 349], "anywai": [10, 90, 106, 122, 235], "put": [10, 16, 53, 72, 90, 118, 130, 138, 158, 185, 239, 299, 311, 328, 349], "analogi": [10, 143, 281, 283, 284, 290, 296, 297, 299], "syntax": [10, 16, 35, 73, 87, 106, 143, 149, 154, 170, 185, 235, 298, 299, 349], "ae": [10, 22, 106], "support": [10, 11, 21, 25, 64, 70, 81, 96, 97, 99, 106, 107, 118, 120, 122, 123, 129, 132, 145, 155, 157, 159, 160, 161, 162, 166, 190, 208, 218, 224, 233, 234, 238, 241, 273, 284, 290, 296, 297, 298, 299, 321, 338, 342, 347, 361, 367], "suppos": [10, 25, 29, 36, 62, 85, 106, 118, 123, 141, 158, 170, 185, 196, 209, 222, 231, 239, 263, 273, 298, 309, 311, 338, 341, 343], "own": [10, 16, 76, 95, 97, 106, 158, 185, 222, 235, 239, 271, 345, 349], "too": [10, 25, 78, 81, 83, 90, 91, 94, 106, 122, 142, 185, 238, 282, 285, 290, 299, 310, 349, 369], "assum": [10, 16, 18, 25, 26, 29, 32, 35, 45, 46, 48, 55, 58, 76, 80, 81, 89, 90, 94, 97, 99, 100, 105, 106, 118, 120, 122, 125, 128, 129, 137, 142, 144, 145, 158, 166, 170, 171, 178, 180, 185, 218, 222, 223, 224, 225, 231, 232, 233, 239, 240, 252, 254, 263, 270, 271, 273, 275, 276, 281, 284, 290, 296, 297, 299, 310, 331, 338, 341, 343, 345, 354, 357, 361, 369], "Ins": 10, "oppos": [10, 136, 209], "involv": [10, 71, 87, 89, 94, 99, 108, 128, 190, 222, 229, 233, 234, 270, 274, 341, 347, 349], "bump": [10, 114, 131, 229, 233, 270, 271, 273, 341], "fig": 10, "heap_insert": 10, "max": [10, 31, 56, 59, 67, 94, 120, 129, 134, 137, 139, 158, 170, 180, 185, 202, 212, 213, 224, 263, 273, 275, 276, 293, 299, 304, 310, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 341], "wikipedia": [10, 22, 24, 25, 27, 70, 72, 75, 76, 80, 81, 85, 87, 88, 89, 106, 107, 122, 129, 137, 145, 158, 170, 175, 179, 180, 184, 185, 186, 219, 224, 228, 235, 236, 237, 239, 263, 274, 275, 276, 308, 311, 341, 349, 354, 356, 357, 358, 364], "articl": [10, 22, 24, 25, 27, 70, 72, 73, 75, 76, 77, 80, 81, 85, 87, 89, 90, 100, 106, 107, 118, 122, 129, 141, 144, 145, 158, 170, 175, 179, 180, 184, 185, 186, 213, 219, 224, 228, 235, 236, 237, 239, 263, 274, 275, 276, 301, 306, 308, 311, 339, 341, 349, 354, 356, 357, 358, 364], "binary_heap": 10, "No": [10, 75, 76, 77, 106, 120, 135, 178, 186, 233, 234, 239, 299, 341, 354], "furthermor": [10, 24, 48, 61, 80, 81, 87, 89, 97, 106, 107, 110, 121, 122, 262, 273, 280, 281, 284, 290, 296, 297, 299, 301, 340], "semistandard_insert": 10, "geq": [10, 16, 25, 31, 55, 58, 61, 67, 71, 78, 89, 90, 94, 97, 108, 114, 119, 120, 128, 129, 143, 144, 157, 158, 160, 161, 162, 170, 183, 185, 186, 208, 232, 274, 276, 299, 306, 311, 318, 338, 341, 344, 354, 364], "nov": 10, "stub": [10, 104, 154, 272], "serv": [10, 97, 99, 106, 154, 234, 272, 280, 347], "from_tamari_sorting_tupl": 10, "2020": [11, 27, 49, 67, 85, 105, 112, 152, 155, 168, 175, 177, 273, 354], "05": [11, 29, 52, 61, 62, 63, 72, 99, 100, 106, 107, 125, 136, 158, 160, 170, 185, 208, 222, 235, 310, 311], "blob_algebra": 11, "blobalgebra": 11, "q1": [11, 137, 231, 233, 238], "q2": [11, 21, 76, 137, 231, 233, 238], "q3": [11, 21, 286], "base_r": [11, 15, 97, 106, 110, 142, 144, 145, 149, 161, 170, 178, 218, 219, 224, 225, 231, 239, 240, 241, 242, 245, 248, 250, 254, 256, 261, 262, 264, 265, 266, 267, 268, 269, 270, 282, 285, 288, 289, 292, 298, 299, 318, 327, 338, 342, 369], "combinatorialfreemodul": [11, 15, 16, 73, 97, 108, 109, 110, 111, 117, 143, 144, 147, 159, 161, 170, 179, 183, 218, 240, 261, 269, 270, 274, 286, 292, 298, 299, 338], "temperlei": [11, 97], "lieb": [11, 97], "ilz2018": 11, "graham1985": 11, "ms1994": 11, "noncross": [11, 25, 99, 165, 169, 184, 239, 275, 302], "strand": [11, 97], "deform": [11, 97, 111, 149, 180, 233, 269, 299, 300, 338], "touch": [11, 87, 90, 99, 157, 158], "think": [11, 45, 99, 117, 158, 222, 239, 341, 347], "frozen": [11, 18, 21], "pole": 11, "paramet": [11, 21, 24, 29, 55, 70, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 99, 106, 107, 110, 118, 125, 128, 129, 130, 136, 137, 144, 149, 152, 153, 156, 157, 158, 162, 180, 184, 185, 186, 222, 229, 231, 232, 233, 238, 239, 242, 273, 280, 282, 283, 285, 287, 288, 289, 296, 298, 299, 303, 310, 321, 331, 338, 341, 342, 344, 347, 350, 354, 357, 364, 366, 367], "idempot": [11, 73, 89, 90, 143, 183, 338], "b4": [11, 59, 112, 180, 222, 224, 245, 246, 247, 264, 266], "one_basi": [11, 15, 16, 73, 97, 108, 109, 117, 142, 147, 159, 161, 179, 270, 274, 286, 292, 299, 338], "half": [11, 18, 48, 63, 66, 67, 97, 99, 118, 144, 145, 156, 157, 158, 166, 169, 209, 212, 222, 238, 239, 275, 303, 341, 345, 358], "product_on_basi": [11, 15, 16, 73, 97, 108, 109, 111, 117, 143, 144, 147, 148, 149, 159, 161, 179, 183, 270, 274, 291, 292, 297, 338], "bot": [11, 180], "bd": [11, 21, 22, 76, 87, 97, 357], "blobdiagram": 11, "unmark": [11, 130], "sqcup": [11, 50, 89, 139], "divid": [11, 16, 77, 81, 83, 99, 105, 106, 122, 130, 139, 143, 144, 158, 178, 180, 184, 185, 237, 238, 261, 274, 275, 281, 285, 296, 297, 299, 301, 307, 311, 327, 338, 341, 354, 369], "blobe": 11, "propag": [11, 97, 159], "nest": [11, 149, 169, 180, 275, 343, 364], "temperley_lieb_diagram": [11, 97], "bd4": 11, "base_set": [11, 26, 169, 275, 276], "cartesian_product": [12, 81, 106, 110, 174, 188, 235, 349], "cartesianproduct_it": 12, "enumeratedsetfromiter": 12, "soon": [12, 25, 160, 299], "deprec": [12, 25, 67, 97, 122, 158, 170, 223, 275, 328, 354], "18411": 12, "19195": 12, "main": [12, 22, 25, 67, 83, 84, 86, 88, 91, 92, 93, 99, 101, 106, 118, 122, 134, 136, 157, 158, 160, 170, 195, 222, 235, 268, 273, 303, 309, 312, 327, 349, 351], "behavior": [12, 96, 105, 106, 139, 230, 239, 363], "cartesianproduct": [12, 110, 174], "plain": [12, 76, 122, 170, 171, 178, 180, 185, 338, 358], "python": [12, 25, 28, 29, 73, 103, 106, 107, 110, 123, 125, 134, 143, 145, 149, 158, 162, 185, 219, 273, 298, 349, 354, 357, 361, 363, 367, 369], "versu": [12, 268, 311], "custom": [12, 28, 106, 110, 143, 224, 231, 310, 341], "membership": 12, "illustr": [12, 16, 28, 67, 106, 107, 110, 118, 129, 158, 161, 165, 184, 224, 328, 338, 349, 354, 358, 364], "f1": [12, 106, 109, 110, 111, 270, 299, 369], "f2": [12, 108, 110, 270, 299, 369], "f3": [12, 110, 286, 298], "cartesianproduct_with_categori": 12, "element_class": [12, 25, 55, 57, 65, 68, 72, 110, 112, 122, 128, 130, 147, 154, 158, 162, 170, 178, 183, 185, 209, 231, 233, 271, 272, 331, 333, 342, 349, 353], "elt": [12, 15, 38, 52, 54, 55, 56, 59, 64, 67, 72, 73, 97, 111, 114, 125, 127, 143, 147, 148, 149, 170, 209, 210, 211, 212, 213, 215, 216, 229, 236, 239, 285, 299, 301], "everyth": [12, 23, 75, 81, 86, 90, 92, 100, 106, 143, 144, 152, 224, 235, 299, 349], "qq": [12, 15, 16, 25, 54, 57, 61, 73, 81, 97, 99, 106, 107, 108, 109, 110, 111, 117, 122, 129, 130, 131, 138, 141, 142, 143, 144, 145, 147, 148, 149, 157, 158, 159, 161, 166, 170, 179, 180, 183, 185, 186, 187, 188, 213, 218, 219, 224, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 268, 270, 274, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 318, 324, 327, 330, 335, 338, 341, 349, 357, 369], "is_finit": [12, 18, 21, 22, 25, 106, 139, 217, 223, 224, 226, 227, 228, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 265, 267, 352, 354], "unabl": [12, 18, 89, 214, 286, 289, 298, 369], "dog": 12, "cat": [12, 72, 276, 298], "unrank": [12, 25, 27, 170, 188, 189, 239, 331, 349], "constitu": [12, 106], "238792368": 12, "238": [12, 88, 208], "792": 12, "368": [12, 78, 92, 311], "15919": [12, 189], "ff": [12, 15, 229], "integermodr": [12, 158, 162, 189], "franco": [15, 68, 100, 124, 132, 142, 144, 339, 352, 353, 354, 355, 361, 364, 367, 368], "saliola": [15, 68, 100, 124, 132, 142, 143, 144, 338, 339, 352, 353, 354, 355, 361, 364, 367, 368], "04": [15, 16, 106, 107, 125, 147, 148, 149, 151, 157, 170, 185, 196, 198, 204, 206, 207, 211, 223, 228, 311, 339, 368], "miss": [15, 36, 78, 80, 89, 90, 106, 185, 285, 354], "reorgan": 15, "cha": [15, 16], "fsym": [15, 16, 143], "fsymbas": 15, "parent_with_r": [15, 142, 143, 144, 147, 183, 229, 299], "category_realization_of_par": [15, 16, 73, 108, 142, 143, 144, 147, 183, 229, 286, 292, 299], "elementmethod": [15, 16, 73, 108, 142, 143, 144, 147, 183, 229, 233, 234, 238, 239, 268, 286, 292, 299], "duality_pair": [15, 142, 143, 144, 145, 147, 148, 149], "dual_basi": [15, 147, 148, 149, 280, 298, 299], "parentmethod": [15, 16, 73, 108, 110, 142, 143, 144, 147, 183, 229, 233, 234, 235, 238, 239, 242, 256, 261, 268, 270, 286, 292, 299], "tg": 15, "123": [15, 25, 81, 97, 143, 231, 233, 234, 311, 334, 341, 345, 352, 354, 356, 357, 358, 364], "degree_on_basi": [15, 16, 108, 109, 111, 117, 142, 286, 292, 299], "standardtableau": [15, 188, 310, 341, 342, 343], "coproduct": [15, 16, 108, 109, 117, 139, 142, 143, 144, 145, 147, 148, 149, 278, 281, 283, 284, 285, 286, 291, 292, 294, 296, 297, 298, 299, 300, 301], "duality_pairing_matrix": [15, 142, 143, 144, 145, 147], "scalar": [15, 58, 130, 141, 142, 147, 218, 224, 228, 231, 233, 235, 236, 238, 239, 240, 241, 261, 267, 268, 269, 274, 280, 281, 282, 285, 289, 292, 295, 296, 297, 298, 299, 301, 338, 339], "super_categori": [15, 16, 73, 108, 142, 143, 144, 147, 183, 229, 239, 268, 286, 292, 299], "coalgebra": [15, 16, 108, 143, 144, 179, 292, 298, 299], "fsymbasis_abstract": 15, "alg": [15, 16, 73, 97, 108, 288], "bindableclass": [15, 16, 73, 108, 143, 144, 147, 183, 229], "_prefix": [15, 16, 108, 298], "freesymmetricfunct": [15, 143], "fqsym": [15, 16, 108, 143], "freequasisymmetricfunct": [15, 108, 143], "f_w": [15, 108, 231], "g_w": [15, 108], "s_1": [15, 24, 25, 57, 67, 68, 81, 87, 89, 91, 127, 143, 170, 180, 185, 186, 235, 236, 275, 299, 338, 341, 364], "s_2": [15, 24, 25, 57, 68, 81, 87, 89, 91, 94, 170, 185, 186, 235, 275, 338, 341], "_t": [15, 233], "span": [15, 16, 45, 56, 89, 108, 170, 229, 231, 233, 235, 240, 241, 269, 292, 298], "subalgebra": [15, 54, 55, 66, 73, 97, 143, 144, 179, 222, 232, 234, 270, 298], "poireu95": 15, "ast": [15, 16, 53, 108, 143, 144, 158, 162, 179, 209, 216, 273, 299, 309], "delta": [15, 16, 23, 37, 38, 50, 51, 56, 58, 59, 60, 66, 71, 73, 81, 83, 95, 132, 136, 139, 142, 143, 144, 145, 149, 160, 179, 183, 211, 212, 229, 231, 232, 233, 238, 239, 261, 268, 269, 283, 299, 338, 352, 354, 361, 364], "explain": [15, 38, 78, 81, 89, 91, 92, 106, 128, 129, 144, 145, 156, 185, 222, 235, 268, 349], "to_fqsym": [15, 16, 108, 143], "standardtableaux": [15, 338, 341, 342, 343, 349], "tensor_squar": 15, "onto": [15, 38, 110, 113, 117, 144, 222, 229, 235, 239, 241, 261, 263, 270], "to_symmetric_funct": [15, 142, 143, 144, 145, 147, 148, 149, 157, 299], "indexedfreemoduleel": [15, 16, 97, 108, 110, 111, 143, 144, 148, 149, 159, 161, 179, 218, 240, 261, 269, 270, 274, 299], "inclus": [15, 55, 99, 108, 128, 143, 147, 170, 184, 302, 333], "project": [15, 16, 25, 28, 38, 55, 58, 61, 75, 76, 77, 78, 80, 81, 87, 89, 90, 95, 100, 106, 108, 110, 112, 142, 143, 144, 147, 149, 166, 172, 174, 218, 222, 224, 229, 233, 235, 238, 239, 241, 242, 256, 261, 311, 338, 357, 358], "sym": [15, 32, 143, 144, 145, 147, 148, 149, 161, 186, 188, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301], "surject": [15, 47, 108, 113, 304], "coproduct_on_basi": [15, 16, 108, 109, 117, 144, 148, 149, 291, 297], "125": [15, 75, 83, 143, 157, 170, 180, 185, 232, 285, 311, 349], "124": [15, 81, 88, 213], "134": [15, 139, 311], "fundamentaldu": 15, "12456": 15, "1256": 15, "126": [15, 78, 88, 170, 232, 239, 311, 341, 349], "a_real": [15, 16, 73, 108, 142, 143, 144, 148, 149, 183, 229, 286, 298], "freesymmetricfunctions_du": 15, "tf": [15, 130, 364], "coercion": [15, 108, 110, 143, 148, 170, 229, 279, 280, 282, 285, 289, 290, 298, 299, 301, 314, 317, 324, 330, 338], "135": [15, 78, 95, 139, 213, 357], "to_quasisymmetric_funct": [15, 16], "qsym": [15, 16, 108, 140, 142, 143, 144, 185, 299], "adjoint": [15, 142, 143, 144, 145, 222, 229, 270, 280, 281, 296, 297, 298, 299, 301], "inject": [15, 25, 52, 87, 94, 108, 143, 147, 212, 357], "nsym": [15, 73, 108, 142, 143, 338], "to_fsym": [15, 143], "1234": [15, 185, 358, 359], "t0": [15, 106, 132, 236, 238, 264, 266, 296, 341], "ascent_set": 15, "ascent": [15, 99, 139], "appear": [15, 16, 22, 25, 27, 31, 38, 50, 53, 57, 60, 67, 71, 73, 75, 78, 80, 81, 82, 86, 87, 89, 90, 96, 97, 100, 105, 106, 111, 112, 114, 120, 122, 125, 127, 132, 136, 137, 139, 141, 143, 144, 158, 159, 160, 169, 170, 185, 232, 234, 235, 280, 285, 289, 299, 307, 309, 310, 327, 328, 329, 331, 333, 334, 338, 341, 342, 343, 352, 354, 358, 361, 362, 364], "descent_composit": [15, 31], "descent_set": [15, 28, 31, 341], "133": [15, 51, 78], "09": [16, 25, 29, 99, 100, 106, 107, 118, 152, 157, 158, 170, 185, 205, 207, 210, 212, 213, 214, 215, 216, 306, 311, 343, 357], "ami": [16, 354, 361, 364], "pang": 16, "further": [16, 28, 29, 33, 45, 87, 97, 99, 105, 106, 108, 110, 112, 120, 122, 125, 129, 139, 143, 144, 157, 158, 160, 170, 180, 184, 190, 224, 233, 235, 236, 239, 271, 298, 299, 309, 338, 341, 343, 349, 358], "wqsym": [16, 108, 147], "wqsymbas": 16, "algebraic_compl": 16, "complement": [16, 23, 28, 29, 87, 90, 95, 99, 106, 128, 143, 144, 170, 172, 178, 180, 185, 190, 212, 229, 234, 236, 276, 329, 335, 341, 354], "involut": [16, 26, 55, 61, 66, 97, 99, 108, 114, 120, 128, 143, 144, 147, 149, 158, 168, 169, 180, 209, 212, 216, 222, 270, 275, 280, 281, 284, 296, 297, 298, 299, 309, 310, 311, 339, 341, 347, 352, 354, 357], "overlin": [16, 53, 54, 56, 93, 106, 143, 208, 212, 213, 238, 299, 338], "mathbf": [16, 18, 61, 73, 106, 108, 143, 144, 147, 148, 149, 185, 281, 296, 297, 299, 301], "_u": [16, 108], "anti": [16, 56, 58, 64, 67, 108, 136, 142, 143, 144, 185, 233, 239, 298, 337], "qquad": [16, 25, 41, 50, 108, 274, 280, 281, 284, 296, 297, 299], "x_u": [16, 58], "x_": [16, 25, 55, 58, 110, 117, 144, 148, 149, 161, 179, 180, 181, 185, 212, 274, 299, 301, 340, 354], "restat": 16, "r_1": [16, 91, 119, 186, 299, 342], "r_2": [16, 91, 119, 186, 299], "r_k": [16, 159, 186], "r_": [16, 47, 53, 94, 119, 143, 160, 161, 354], "_a": [16, 143, 147, 148, 149, 208], "x_a": 16, "wordquasisymmetricfunct": [16, 108, 147], "stronglycoars": 16, "complic": [16, 25, 71, 142, 186, 233, 349, 357], "strongli": [16, 87, 106, 136, 276, 311], "finer": [16, 29, 139, 142, 143, 144, 170, 178, 275, 276], "is_strongly_fin": [16, 276], "ell": [16, 24, 29, 31, 50, 53, 58, 60, 87, 96, 97, 100, 112, 126, 129, 130, 139, 141, 143, 144, 149, 150, 158, 161, 162, 170, 212, 229, 240, 273, 276, 280, 281, 283, 284, 290, 296, 297, 298, 299, 301, 341, 349, 354], "shall": [16, 106, 119, 120, 270, 273, 341], "q_a": [16, 307], "sum_p": 16, "c_": [16, 25, 59, 89, 129, 148, 154, 156, 158, 170, 222, 224, 236, 276, 289, 349, 354, 364, 369], "q_p": 16, "phi": [16, 35, 36, 37, 38, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 99, 106, 110, 139, 143, 144, 145, 150, 160, 161, 170, 180, 209, 212, 231, 232, 233, 239, 241, 298, 311, 335, 338, 354, 357], "stronglyfin": 16, "abelian": [16, 75, 80, 81, 89, 100, 107, 137, 158, 168, 186, 306, 354, 358], "m_i": [16, 50, 86, 90, 142, 144, 148, 149, 158, 170, 208, 212, 213, 214, 280, 299], "omega": [16, 62, 89, 96, 108, 143, 144, 147, 149, 158, 233, 235, 238, 268, 276, 280, 281, 284, 292, 296, 297, 298, 299, 311, 318, 354, 357, 364], "preserv": [16, 29, 53, 95, 106, 120, 143, 147, 149, 154, 185, 241, 268, 272, 275, 299, 306, 338, 345, 354, 357], "endomorph": [16, 109, 111, 119, 142, 143, 144, 145, 186, 231, 233, 280, 281, 284, 296, 297, 299, 301, 357, 364], "m_": [16, 21, 22, 60, 61, 89, 119, 120, 124, 130, 136, 144, 145, 147, 149, 179, 226, 232, 290, 296, 299], "f_i": [16, 35, 36, 37, 38, 41, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 87, 139, 143, 144, 160, 209, 231, 274, 303], "m_j": [16, 144, 212, 299], "sum_j": [16, 53, 89, 139, 143], "substack": [16, 58, 60, 144, 185], "mu": [16, 21, 33, 45, 54, 56, 78, 80, 89, 96, 100, 118, 119, 120, 129, 130, 132, 147, 148, 149, 158, 160, 162, 179, 185, 186, 190, 231, 232, 233, 239, 269, 270, 276, 278, 280, 281, 282, 283, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 309, 310, 311, 338, 341, 343, 355, 357, 364], "f_j": [16, 45, 47, 61, 62, 143, 236], "particularli": [16, 98, 129, 135, 170, 342, 349], "situat": [16, 106, 185, 338, 343, 349], "opposit": [16, 24, 47, 67, 117, 118, 128, 143, 144, 178, 185, 224, 228, 239, 261, 298, 338, 358], "q_i": [16, 335], "phi_i": [16, 144], "star_involut": [16, 108, 143, 144], "mapsto": [16, 47, 55, 56, 58, 61, 64, 66, 67, 73, 83, 87, 94, 108, 118, 129, 143, 147, 149, 212, 222, 224, 229, 231, 232, 233, 234, 238, 263, 280, 281, 284, 290, 296, 297, 298, 299, 341, 355, 364], "pi": [16, 24, 25, 28, 41, 58, 97, 99, 100, 106, 108, 118, 120, 143, 144, 154, 166, 170, 181, 185, 222, 226, 229, 230, 235, 236, 238, 239, 252, 275, 293, 304, 311, 314, 335, 341, 349, 364], "coalgebraic_compl": 16, "translat": [16, 38, 56, 58, 61, 64, 75, 81, 83, 100, 106, 108, 118, 130, 156, 178, 185, 208, 224, 229, 230, 233, 235, 238, 239, 263, 268, 275, 345, 349, 357], "languag": [16, 106, 185, 309, 311, 349, 357, 367], "p_1": [16, 75, 86, 90, 94, 125, 170, 184, 185, 273, 276, 281, 284, 290, 296, 297, 299, 309, 354, 368], "p_2": [16, 75, 86, 90, 125, 170, 184, 185, 276, 309, 349, 354, 368], "p_k": [16, 94, 159, 184, 185, 270, 276, 280, 281, 284, 296, 297, 299, 354, 368], "p_": [16, 61, 90, 93, 94, 106, 125, 149, 183, 185, 212, 273, 276, 280, 281, 282, 284, 285, 292, 295, 296, 297, 298, 299, 301, 318], "practic": [16, 45, 118, 122, 231, 233, 241, 268, 298, 349], "intertwin": [16, 108, 212, 231, 233, 275, 293], "antipod": [16, 108, 117, 143, 144, 145, 148, 149, 278, 286, 290, 292, 294, 296, 298, 299, 300, 301, 338], "orderedsetpartit": [16, 142, 275, 276, 349], "subr": [16, 108, 144, 145, 186, 239, 268, 292, 298], "noncommut": [16, 108, 112, 141, 142, 143, 144, 145, 149, 299], "countabl": [16, 108, 144, 145, 149, 223], "obviou": [16, 106, 120, 122, 128, 145, 222, 299, 301, 341, 343], "continu": [16, 18, 99, 118, 144, 152, 158, 162, 209, 238, 268, 273, 311, 349, 352, 354, 357, 364], "x_i": [16, 18, 134, 138, 144, 161, 180, 181, 185, 236, 272, 274, 275, 281, 284, 290, 296, 297, 299, 318, 340, 354], "i_1": [16, 29, 31, 38, 45, 47, 50, 53, 55, 59, 61, 62, 73, 88, 96, 97, 107, 112, 120, 142, 143, 144, 149, 170, 186, 209, 231, 268, 274, 275, 335, 338, 341, 342, 349], "i_2": [16, 29, 38, 47, 50, 55, 73, 88, 96, 97, 112, 120, 142, 143, 144, 149, 170, 186, 209, 231, 259, 274, 275, 338, 341, 342, 349], "i_n": [16, 29, 47, 62, 107, 120, 136, 224, 268, 335, 341, 342], "i_": [16, 29, 31, 47, 50, 53, 73, 107, 119, 120, 143, 144, 170, 338, 341, 349], "simpli": [16, 22, 45, 60, 97, 99, 106, 113, 123, 134, 143, 158, 162, 185, 208, 209, 210, 211, 212, 213, 215, 222, 223, 224, 226, 227, 229, 233, 239, 243, 244, 260, 262, 263, 265, 268, 270, 273, 275, 298, 342, 343, 349, 354, 364, 367], "stand": [16, 29, 105, 108, 143, 144, 158, 214, 280, 281, 284, 296, 297, 299, 302, 309, 338, 341], "q_": [16, 73, 80, 89, 99, 120, 144, 158, 273, 291, 299, 301, 335, 341, 357], "phi_a": 16, "phi_": [16, 120, 143, 341], "enter": [16, 49, 106, 107, 122, 130, 157, 158, 162, 170, 272, 298, 343], "ncsf": [16, 140, 141, 142, 143, 144, 145], "noncommutativesymmetricfunct": [16, 73, 108, 142, 143, 144, 338], "to_wqsym": [16, 108, 147], "_p": [16, 147, 160, 185], "m_c": [16, 145], "c2": [16, 27, 32, 38, 53, 106, 128, 137, 144, 160, 180, 185, 222, 224, 228, 230, 233, 285, 289, 354], "gf": [16, 25, 76, 78, 80, 81, 83, 87, 89, 107, 108, 109, 110, 111, 119, 158, 166, 170, 178, 186, 187, 189, 306, 331, 338, 348, 349], "is_commut": [16, 73, 108, 299], "is_field": [16, 73, 108, 299], "proof": [16, 73, 78, 90, 92, 93, 108, 112, 129, 143, 144, 170, 175, 185, 297, 299, 301, 349], "wqsymbasis_abstract": 16, "_basis_nam": [16, 108], "normal": [16, 21, 76, 97, 112, 136, 142, 154, 158, 160, 170, 178, 180, 185, 229, 231, 233, 235, 236, 239, 272, 282, 285, 289, 295, 296, 335, 369], "langl": [16, 38, 41, 45, 47, 50, 53, 54, 56, 58, 59, 60, 61, 64, 66, 67, 108, 142, 149, 236, 239, 240, 261, 268, 280, 282, 285, 295, 296, 299], "x_1": [16, 18, 25, 62, 72, 81, 89, 91, 108, 134, 136, 144, 145, 149, 158, 161, 180, 185, 222, 236, 272, 274, 281, 284, 290, 296, 297, 299, 340, 354, 360, 364], "x_2": [16, 18, 62, 72, 108, 134, 136, 144, 145, 149, 158, 161, 180, 185, 222, 272, 274, 281, 284, 290, 296, 297, 299, 340, 354], "x_3": [16, 108, 134, 136, 144, 149, 161, 222, 281, 284, 290, 296, 297, 299], "rangl": [16, 38, 41, 45, 47, 50, 53, 54, 56, 58, 59, 60, 61, 64, 66, 67, 108, 142, 149, 236, 239, 240, 261, 268, 280, 282, 285, 295, 296, 299], "operatornam": [16, 21, 35, 45, 66, 68, 96, 106, 108, 142, 144, 149, 183, 185, 232, 236, 237, 299, 318, 349], "smallest": [16, 18, 24, 25, 38, 45, 70, 77, 99, 122, 128, 130, 132, 144, 150, 154, 156, 158, 170, 172, 178, 180, 185, 212, 218, 224, 239, 241, 242, 261, 263, 267, 273, 275, 276, 310, 311, 334, 341, 342, 349, 354, 359], "4112774": 16, "3112443": 16, "said": [16, 25, 29, 57, 71, 86, 87, 89, 92, 102, 114, 127, 136, 143, 144, 156, 158, 160, 178, 180, 181, 185, 262, 268, 272, 273, 275, 276, 292, 299, 306, 309, 341, 346, 354, 364], "p_i": [16, 90, 106, 158, 184, 185, 208, 212, 213, 296, 299, 318, 354], "u_j": [16, 89], "cone": [16, 21, 132, 184, 235, 237, 240, 269, 302, 335, 347], "aka": [16, 158, 185, 229, 261, 269, 310], "access": [16, 36, 49, 70, 74, 86, 89, 110, 118, 120, 123, 128, 129, 130, 143, 144, 160, 164, 173, 184, 190, 214, 229, 271, 298, 311, 342, 343, 351, 369], "especi": [16, 112, 121, 128, 349, 354], "ambigu": [16, 18, 202, 244, 276], "nothwi08": 16, "foimal14": 16, "menoth11": 16, "st": [16, 25, 65, 75, 80, 112, 114, 130, 165, 166, 167, 168, 194, 236, 278, 298, 310, 336, 341, 349, 354], "otim": [16, 47, 53, 54, 56, 58, 61, 64, 66, 67, 68, 110, 117, 142, 143, 144, 145, 147, 148, 149, 209, 212, 222, 283, 284, 299], "q_1": [16, 184, 231, 233, 238, 273, 335], "q_k": [16, 184, 335], "multipli": [16, 18, 21, 25, 78, 89, 106, 110, 121, 129, 143, 144, 158, 170, 190, 222, 229, 231, 270, 274, 282, 285, 289, 292, 298, 314, 317, 324, 338, 341, 343], "box": [16, 31, 33, 50, 53, 55, 105, 114, 120, 130, 152, 156, 158, 172, 184, 194, 209, 212, 235, 239, 273, 293, 310, 311, 318, 341, 343, 345], "shuffleproduct_overlap": [16, 304], "overlap": [16, 29, 107, 139, 144, 235, 302, 304, 309, 352, 354, 357], "_r": [16, 38, 144, 162, 283], "sometim": [16, 64, 87, 89, 93, 96, 106, 111, 114, 120, 121, 122, 125, 136, 137, 170, 184, 185, 275, 276, 281, 299, 311, 334, 357], "ncqsym": 16, "berzab05": 16, "express": [16, 23, 46, 54, 56, 61, 62, 67, 81, 106, 112, 136, 139, 143, 144, 145, 148, 149, 170, 184, 187, 210, 211, 220, 229, 230, 270, 274, 285, 289, 292, 299, 301, 335, 338, 341, 343, 349, 354, 369], "achiev": [16, 33, 45, 90, 99, 106, 122, 125, 139, 185, 213, 224, 231, 233, 268, 281, 296, 297, 299, 301, 327, 338, 349], "global": [16, 67, 71, 99, 128, 156, 170, 210, 211, 236, 275, 332, 338, 366], "compact": [16, 57, 223, 226, 229, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 270, 335], "122": [16, 232, 354, 356, 357], "112": [16, 78, 83, 85, 88, 106, 118, 141, 232, 318, 354], "111": [16, 70, 78, 81, 90, 91, 118, 190, 232, 311, 354, 357], "reset": [16, 18, 106, 110, 210, 211, 236], "_reset": [16, 67, 128, 155, 158, 162, 210, 211, 309, 341, 343], "counit": [16, 117, 142, 143, 144, 147, 278, 286, 292, 294, 298, 299, 300], "aris": [16, 18, 158, 162, 202, 209, 215, 218, 224, 342, 343, 349], "dictionari": [16, 18, 21, 55, 84, 87, 99, 100, 106, 118, 128, 129, 130, 132, 137, 139, 152, 156, 158, 160, 162, 170, 175, 178, 180, 184, 185, 189, 214, 224, 226, 232, 236, 263, 267, 268, 270, 275, 280, 287, 290, 306, 331, 335, 342, 345, 354, 357, 358, 360, 366, 368], "referenc": [16, 360], "receiv": [16, 87, 215, 349], "varieti": [16, 55, 132, 139, 158, 273, 274, 288, 338], "treat": [16, 97, 98, 135, 158, 222, 223, 276, 299, 306, 307, 318, 341, 349], "x_p": [16, 185, 272], "_1": [16, 25, 68, 106, 186], "_k": [16, 107, 170, 331, 338], "i_0": [16, 56, 107, 112, 212, 229, 230], "i_k": [16, 29, 38, 45, 55, 61, 73, 107, 112, 120, 142, 143, 144, 149, 159, 170, 186, 209, 231, 268, 274, 338, 341, 342, 359], "min": [16, 59, 71, 96, 105, 106, 118, 120, 122, 134, 158, 170, 185, 212, 275, 276, 306, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 341, 349, 350, 354], "i_j": [16, 53, 62, 144], "p_a": [16, 106, 158, 184, 307], "_j": [16, 112, 122, 158, 212, 223, 228, 283], "c_p": 16, "sum_q": 16, "x_q": 16, "_2": [16, 25, 60, 68, 106, 107], "early2017": 16, "experi": [16, 144, 145, 241, 357], "suggest": [16, 76, 96, 224, 226, 227, 333, 349], "seem": [16, 71, 94, 143, 158, 170, 185, 299, 301, 349, 354], "_w": [16, 108, 299], "phi_p": 16, "novelli": [16, 144, 148, 341], "thibon": [16, 141, 144, 145, 148, 160, 288, 298, 299], "novthi06": 16, "reappear": 16, "phi_x": 16, "phi_z": 16, "merg": [16, 58, 67, 99, 106, 109, 111, 152, 269, 276, 353, 357, 364, 367], "middl": [16, 26, 97, 99, 159], "minimum": [16, 32, 87, 97, 100, 106, 121, 139, 158, 159, 178, 185, 208, 229, 275, 298, 303, 309, 358], "don": [16, 75, 88, 89, 90, 144, 158, 170, 212, 238, 266, 275, 280, 304, 309, 331, 338, 364], "bar": [16, 57, 64, 107, 185, 209, 238, 276, 283, 298, 328, 337], "consecut": [16, 29, 58, 60, 78, 86, 99, 106, 116, 122, 125, 139, 158, 180, 184, 185, 193, 275, 276, 309, 310, 311, 341, 345, 349, 352, 354, 364], "setminu": [16, 29, 81, 95, 106, 137, 158, 178, 180, 185, 230, 237, 275, 298, 359], "now": [16, 24, 25, 28, 38, 52, 53, 55, 67, 78, 81, 90, 96, 97, 106, 107, 108, 109, 110, 111, 118, 119, 121, 122, 129, 130, 142, 143, 145, 154, 157, 158, 160, 162, 170, 185, 202, 209, 222, 224, 225, 231, 233, 235, 238, 239, 269, 271, 273, 298, 299, 306, 310, 338, 341, 349, 354], "come": [16, 45, 52, 55, 78, 81, 90, 97, 106, 108, 109, 118, 120, 127, 137, 139, 141, 143, 150, 154, 158, 161, 162, 170, 185, 212, 213, 214, 224, 233, 234, 235, 241, 273, 299, 306, 337, 349], "had": [16, 106, 136, 157, 202, 235, 349], "separ": [16, 35, 67, 84, 90, 91, 101, 106, 109, 113, 130, 139, 155, 229, 235, 273, 337, 353, 357, 363, 366], "compendium": [17, 18, 19, 20, 21, 22], "packag": [17, 18, 19, 20, 21, 22, 76, 84, 87, 99, 106, 128, 131, 145, 152, 225, 236, 237, 275, 287, 298, 349], "ms2011": [17, 18, 19, 20, 21, 22], "seed": [18, 20, 21, 231, 233, 235], "symmetriz": [18, 21, 22, 210, 223, 224], "independ": [18, 53, 75, 91, 106, 130, 134, 143, 170, 185, 235, 236, 269, 275, 280, 299, 306, 332, 333, 335, 338, 345, 354], "gregg": [18, 19, 20, 21, 22], "musik": [18, 19, 20, 21, 22], "christian": [18, 19, 20, 21, 22, 23, 69, 99, 151, 152, 219, 223, 228, 236, 237, 299, 335], "stump": [18, 19, 20, 21, 22, 23, 69, 99, 151, 152, 219, 223, 228, 236, 237, 335], "aram": [18, 152], "dermenjian": [18, 152], "07": [18, 25, 38, 73, 85, 99, 106, 107, 158, 163, 170, 186, 197, 223, 273, 305, 306, 307, 311, 336, 342, 357, 367], "01": [18, 25, 77, 79, 96, 99, 106, 107, 158, 162, 170, 171, 190, 197, 209, 236, 263, 271, 286, 311, 342, 352, 354, 357, 358, 360, 362, 364], "abil": [18, 170], "jess": 18, "levitt": 18, "fz2007": 18, "bdp2013": 18, "cluster_algebra_quiv": [18, 20, 21, 22], "quiver_mutation_typ": [18, 22], "quivermutationtyp": [18, 20, 21, 22], "close": [18, 21, 38, 84, 97, 99, 106, 113, 136, 143, 152, 158, 178, 180, 185, 190, 235, 302, 341, 342, 349, 358, 369], "clusterquiv": [18, 20, 21], "cluster_se": 18, "is_princip": 18, "user_label": [18, 21], "user_labels_prefix": 18, "exchang": [18, 21, 32, 58, 94, 99, 126, 275, 354, 357], "str": [18, 21, 25, 47, 51, 54, 55, 58, 59, 81, 88, 97, 106, 132, 136, 139, 152, 185, 231, 232, 233, 234, 239, 241, 270, 276, 305, 327, 357, 358, 361, 363, 364], "_m": [18, 21, 54], "_digraph": [18, 21], "gr": [18, 21, 22, 55, 299], "_use_fpoli": 18, "_use_d_vec": 18, "_use_g_vec": 18, "_use_c_vec": 18, "use_fpoli": 18, "llm_gen_set": 18, "size_limit": 18, "x1": [18, 25, 109, 111, 114, 117, 136, 138, 143, 144, 145, 147, 149, 154, 158, 181, 185, 188, 233, 236, 270, 273, 274, 280, 281, 282, 284, 290, 292, 293, 296, 297, 298, 299, 338, 353], "x3": [18, 25, 114, 136, 143, 144, 145, 149, 181, 185, 188, 233, 274, 296, 297, 299, 338], "x0": [18, 25, 138, 143, 144, 145, 147, 149, 158, 181, 188, 233, 236, 270, 274, 280, 281, 282, 284, 290, 292, 293, 296, 297, 298, 299, 338, 353], "x4": [18, 25, 136, 274, 338], "x2": [18, 25, 109, 111, 114, 117, 136, 143, 144, 145, 147, 149, 154, 158, 181, 185, 188, 233, 270, 274, 281, 284, 290, 293, 296, 297, 298, 299, 328, 353], "x5": 18, "b_matrix": [18, 20, 21, 22], "b_matrix_class": 18, "up_to_equival": [18, 21], "distanc": [18, 21, 38, 58, 99, 106, 130, 152, 193, 235, 239, 354], "b_matrix_class_it": 18, "266": [18, 25, 78, 90, 149, 358], "arbitrarili": [18, 53, 90, 106, 343, 364], "dg": [18, 20, 21, 185], "format": [18, 21, 48, 55, 58, 81, 82, 83, 84, 91, 92, 106, 107, 128, 130, 170, 178, 180, 181, 185, 189, 190, 232, 235, 236, 237, 238, 239, 240, 273, 309, 310, 321, 335, 337, 340, 349, 354, 357, 360, 362, 364], "list_of_edg": [18, 21, 128], "c_matrix": 18, "show_warn": 18, "warn": [18, 21, 22, 25, 59, 122, 129, 190, 235, 311, 354], "coher": 18, "conjectur": [18, 22, 25, 58, 132, 136, 157, 160, 170, 213, 234, 286, 289, 292, 298, 301, 338, 344, 354], "error": [18, 25, 81, 89, 97, 99, 105, 106, 113, 122, 130, 136, 139, 144, 145, 148, 152, 156, 158, 169, 170, 178, 180, 185, 189, 224, 226, 238, 239, 292, 298, 340, 341, 343, 354, 356, 358, 361, 363, 364], "principal_extens": [18, 21], "use_g_vector": 18, "use_c_vector": 18, "use_d_vector": 18, "track_mut": 18, "c_vector": 18, "bot_is_c": 18, "cluster_class": 18, "show_depth": [18, 21], "return_depth": 18, "cluster_class_it": 18, "s2": [18, 24, 36, 38, 58, 81, 87, 106, 129, 130, 131, 229, 230, 232, 270, 271, 295, 311, 331, 334, 338, 354], "cluster_index": 18, "cluster_str": 18, "cluster_vari": 18, "y0": [18, 143, 144, 149, 231, 233, 238, 280, 281, 282, 284, 297], "y2": [18, 132, 143, 144, 149, 231, 233, 281], "y1": [18, 132, 143, 144, 149, 231, 233, 238, 280, 281, 282, 284, 297], "d_matrix": 18, "d_vector": 18, "expon": [18, 97, 106, 122, 144, 158, 162, 233, 236, 289, 290, 311, 347, 354, 364], "denomin": [18, 270, 285, 289, 311, 349, 369], "exchangeable_part": [18, 21], "princip": [18, 21, 178, 180, 183, 184, 185, 223, 281, 284, 290, 296, 297, 299, 306, 349, 358], "f_polynomi": [18, 185], "find_upper_bound": 18, "quotient_r": 18, "laurent": [18, 161, 180, 183, 233, 238, 349, 369], "neighbor": [18, 106, 113, 114, 128, 185, 235, 309, 310, 341, 345], "mm2015": 18, "coprim": [18, 21, 180, 344], "unfrozen": 18, "bfz2005": 18, "rapidli": [18, 349], "step": [18, 58, 83, 90, 96, 99, 102, 105, 106, 107, 116, 120, 122, 125, 129, 132, 137, 151, 152, 153, 156, 157, 158, 170, 184, 196, 202, 204, 206, 209, 212, 216, 231, 238, 239, 268, 273, 309, 341, 344, 349, 354, 358], "infeas": 18, "amount": [18, 125, 171, 185, 347, 354], "addition": [18, 56, 64, 90, 96, 106, 108, 118, 128, 139, 184, 190, 223, 224, 273], "forev": [18, 122, 345, 352, 361], "termin": [18, 270, 273, 361], "spe2013": 18, "multivari": [18, 99, 109, 111, 157, 231, 233, 289, 298, 299, 327], "x0p": 18, "x1p": 18, "x2p": 18, "z0": [18, 290, 349], "markov": [18, 106, 137, 181], "first_green_vertex": 18, "green": [18, 21, 36, 45, 61, 100, 106, 118, 128, 132, 158, 181, 183, 184, 185, 224, 235, 239, 273, 306, 308, 341, 345], "first_red_vertex": 18, "red": [18, 45, 96, 100, 113, 118, 128, 132, 152, 156, 158, 181, 184, 224, 234, 235, 239, 308, 345, 357, 358], "first_urban_renew": 18, "urban": 18, "renew": 18, "arrow": [18, 22, 35, 38, 45, 50, 55, 106, 185, 224, 228, 235, 262, 263, 308, 358, 360, 368], "toward": [18, 94, 229, 235, 239, 263, 349], "awai": [18, 263], "free_vertic": [18, 21], "frozen_vertic": [18, 21], "g_matrix": 18, "y_i": [18, 59, 89, 231, 233], "g_vector": 18, "get_upper_cluster_algebra_el": 18, "llm2014": 18, "vd": 18, "irreduc": [18, 22, 45, 57, 59, 106, 158, 160, 162, 175, 178, 180, 222, 224, 225, 226, 227, 228, 229, 232, 236, 237, 239, 241, 250, 260, 265, 267, 270, 271, 278, 298, 299, 306, 335, 338, 339, 342, 343, 357], "greedi": [18, 112, 137, 178, 181, 185, 335], "a1": [18, 48, 106, 222, 224, 228, 232, 236, 243, 252, 265, 267, 270, 311, 357], "a2": [18, 36, 47, 48, 59, 62, 63, 66, 75, 97, 106, 112, 131, 185, 189, 218, 222, 223, 224, 226, 228, 232, 233, 236, 237, 252, 265, 270, 311, 335, 357], "by_recurs": 18, "a_1": [18, 25, 55, 72, 89, 99, 106, 127, 144, 149, 157, 158, 161, 170, 180, 185, 222, 224, 233, 243, 265, 270, 273, 275, 310, 340, 341, 343, 345], "a_2": [18, 25, 38, 48, 49, 67, 72, 99, 106, 112, 127, 144, 149, 158, 161, 170, 180, 185, 222, 231, 233, 235, 239, 270, 273, 275, 310, 340, 341, 343, 345], "third": [18, 29, 75, 81, 97, 106, 136, 137, 143, 158, 161, 185, 186, 222, 241, 273, 299, 311], "by_combinator": 18, "just_numb": 18, "llz2014": 18, "r2": [18, 22, 38, 81, 91, 137, 229, 270], "green_vertic": 18, "ground_field": 18, "ground": [18, 56, 64, 73, 76, 80, 87, 89, 90, 92, 95, 97, 116, 128, 144, 158, 166, 169, 170, 218, 233, 238, 275, 290, 309, 335, 338], "highest_degree_denomin": 18, "interact": [18, 21, 190], "fig_siz": [18, 21], "circular": [18, 21, 22, 157, 275], "jupyt": [18, 21], "notebook": [18, 21, 106], "mode": [18, 21, 106, 222], "plot": [18, 21, 22, 38, 45, 61, 67, 99, 100, 106, 113, 128, 132, 152, 154, 156, 166, 172, 185, 188, 208, 219, 224, 239, 241, 242, 256, 275, 307, 308, 335, 341, 349, 354, 357, 358, 360, 368], "spring": [18, 21, 22, 75], "is_acycl": [18, 21], "iff": [18, 87, 105, 128, 178, 185, 239, 241, 354, 364], "is_bipartit": [18, 21], "return_bipartit": [18, 21], "bipartit": [18, 21, 87, 185, 224, 237, 239, 349], "is_mutation_finit": [18, 20, 21, 22], "nr_of_check": [18, 20, 21], "return_path": [18, 21], "500": [18, 20, 21, 81, 88, 158, 185, 341, 354, 358], "b_": [18, 25, 47, 53, 55, 58, 64, 67, 73, 89, 90, 107, 110, 125, 139, 161, 180, 222, 224, 226, 239, 273, 289, 338, 364], "ij": [18, 41, 59, 80, 89, 130, 136, 148, 161, 223, 226, 236, 239], "ji": [18, 59, 61, 180, 184, 223, 306], "determinist": [18, 20, 21, 45, 106, 107, 360], "wrong": [18, 20, 21, 29, 89, 93, 97, 106, 122, 125, 136, 159, 171, 272, 298, 341, 369], "_mutation_typ": [18, 21], "most_decreased_denominator_after_mut": 18, "most_decreased_edge_after_mut": 18, "inplac": [18, 21, 86, 87, 106, 154, 178, 228, 368], "input_typ": 18, "first_sourc": [18, 21], "sourc": [18, 21, 28, 84, 115, 170, 181, 185, 222, 298, 299, 341], "first_sink": [18, 21], "sink": [18, 21, 45, 106, 170, 185], "urban_renew": 18, "all_urban_renew": 18, "all_urban": 18, "cluster_var": 18, "select": [18, 25, 27, 89, 106, 107, 156, 158, 170, 185, 208, 222, 275, 287, 343, 348, 349], "last_vertex": 18, "x_1_2": 18, "x_2_3": 18, "x_4_5": 18, "x_5_6": 18, "p_1_2": 18, "p_2_3": 18, "p_4_5": 18, "p_5_6": 18, "_c": [18, 148, 149], "_g": 18, "_f": 18, "_mut_path": 18, "xneg1": 18, "mutation_analysi": 18, "analysi": [18, 88, 106, 111, 299, 349], "potenti": [18, 99, 112, 121], "edge_diff": 18, "green_vertices_diff": 18, "red_vertic": 18, "red_vertices_diff": 18, "urban_renewals_diff": 18, "sources_diff": 18, "sinks_diff": 18, "itself": [18, 57, 71, 84, 87, 94, 96, 107, 118, 123, 132, 137, 143, 144, 151, 154, 158, 170, 185, 189, 229, 235, 261, 263, 268, 272, 273, 285, 296, 297, 298, 299, 302, 303, 310, 331, 332, 338, 341, 343, 349, 354, 360, 363, 367], "only_sink_sourc": 18, "track": [18, 26, 90, 106, 139, 185, 237, 271, 343], "mutation_class_it": [18, 21], "shortest": [18, 21, 58, 70, 122, 130, 158, 170, 236, 239, 240, 354], "sink_sourc": [18, 21], "simultan": [18, 53, 86, 93, 97, 106, 169, 170, 233, 241, 298, 306, 338, 349], "record": [18, 21, 28, 36, 38, 50, 63, 139, 141, 157, 158, 170, 273], "14638": 18, "mc": [18, 25, 160, 170, 287], "534": 18, "mutation_sequ": [18, 21], "show_sequ": [18, 21], "return_output": 18, "png": [18, 21, 235], "var": [18, 97, 106, 107, 109, 111, 129, 158, 169, 185, 233, 281, 284, 290, 293, 296, 297, 299, 328, 349, 369], "mutation_typ": [18, 20, 21], "detect": [18, 20, 21, 71, 122, 134, 332, 345], "yet": [18, 21, 22, 106, 122, 158, 178, 180, 185, 189, 190, 222, 224, 233, 239, 262, 269, 275, 309, 331, 333, 349, 358, 367], "fail": [18, 38, 75, 81, 96, 99, 118, 137, 154, 178, 190, 235, 236, 241, 246, 262, 266, 335, 338, 342, 354], "within": [18, 87, 99, 106, 122, 139, 144, 145, 170, 236, 298, 303, 341, 349, 354, 360, 363], "process": [18, 50, 84, 90, 106, 160, 170, 185, 273, 310, 341, 358, 360, 364], "_quiver": 18, "todo": [18, 21, 57, 110, 178, 285, 316, 333, 354, 357, 358], "undetermin": [18, 21], "undergon": 18, "oriented_exchange_graph": 18, "out_degree_sequ": 18, "save_po": [18, 21], "force_c": 18, "with_green": 18, "add_label": 18, "highlight": [18, 21, 235], "save": [18, 21, 22, 106, 158, 235, 358], "primit": [18, 21, 45, 61, 89, 99, 100, 112, 113, 117, 128, 143, 147, 149, 152, 154, 156, 158, 166, 172, 185, 208, 235, 236, 239, 241, 275, 296, 298, 306, 307, 335, 341, 345, 349, 354, 357, 358, 360, 368], "add": [18, 28, 31, 50, 71, 78, 81, 89, 90, 102, 106, 107, 116, 117, 130, 132, 134, 137, 156, 158, 162, 170, 178, 180, 185, 189, 190, 212, 224, 226, 227, 231, 233, 235, 236, 238, 239, 241, 263, 268, 270, 272, 273, 275, 299, 303, 304, 309, 314, 317, 324, 330, 341, 349, 352, 354, 355, 361], "previous": [18, 21, 71, 106, 167, 180, 185], "y3": [18, 132, 143, 144, 281], "reorient": [18, 21], "reset_clust": 18, "p_3_4": 18, "reset_coeffici": 18, "command": [18, 25, 106, 144, 145, 156, 222, 270, 271, 298, 349], "phase": 18, "effect": [18, 87, 106, 121, 134, 170, 184, 185, 222, 239, 269, 331, 345], "save_imag": [18, 21], "filenam": [18, 21, 136], "tempfil": [18, 21], "namedtemporaryfil": [18, 21], "set_c_matrix": 18, "Will": [18, 21, 158], "forc": [18, 28, 110, 158, 180, 185], "set_clust": 18, "lead": [18, 89, 106, 145, 170, 233, 349, 354], "inconsist": [18, 110], "cluster2": 18, "smallest_c_vector": 18, "begin": [18, 25, 37, 38, 47, 50, 54, 56, 58, 59, 60, 61, 63, 64, 67, 68, 76, 81, 87, 97, 98, 99, 100, 106, 113, 114, 118, 119, 136, 137, 144, 145, 149, 155, 164, 179, 186, 211, 213, 222, 224, 226, 228, 229, 263, 275, 298, 311, 338, 340, 349, 354, 357, 360, 364, 368], "ensur": [18, 29, 81, 91, 162, 170, 178, 268, 273, 310, 311, 360], "agre": [18, 22, 25, 33, 53, 99, 106, 114, 118, 130, 143, 158, 167, 209, 212, 224, 233, 268, 273, 298, 299, 341, 354], "universal_extens": 18, "almost": [18, 23, 94, 110, 122, 231, 233, 237, 239, 240, 311], "coroot": [18, 38, 45, 47, 50, 53, 58, 59, 60, 66, 218, 222, 224, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 256, 261, 262, 264, 266, 267, 268, 269, 270], "consequ": [18, 81, 90, 106, 118, 130, 143, 162, 185, 186, 272, 275, 301, 338, 341, 349], "return_first": 18, "reconstruct": [18, 224, 262], "usabl": [18, 295], "know": [18, 25, 75, 76, 81, 82, 86, 88, 89, 91, 92, 94, 96, 99, 118, 122, 125, 136, 143, 144, 145, 178, 185, 219, 239, 268, 270, 286, 292, 298, 299, 321, 332, 341, 349, 354, 361], "try": [18, 71, 82, 84, 94, 106, 122, 158, 170, 178, 185, 219, 222, 223, 235, 270, 338, 340, 345, 349, 354, 358], "recomput": [18, 25, 178, 212, 352], "overwrit": [18, 341], "_cluster": 18, "variable_class": 18, "ignore_bipartite_belt": 18, "belt": [18, 158, 162], "variable_class_it": 18, "restart": 18, "counter": [18, 22, 106, 349], "manual": [18, 87, 96, 106, 107, 129, 154, 185, 236, 292, 298, 338, 357], "it2": 18, "clustervari": 18, "numer": [18, 25, 106, 111, 128, 134, 222, 270, 272, 274, 275, 285, 289, 311, 349, 357, 369], "coerc": [18, 25, 46, 67, 97, 107, 110, 147, 166, 170, 190, 218, 224, 229, 299, 338, 354, 369], "variable_typ": 18, "xdim": 18, "fractionfieldel": 18, "thin": [18, 25], "featur": [18, 45, 94, 100, 106, 110, 122, 181, 185, 224, 233, 235, 239, 269, 271, 306, 338, 367], "store": [18, 20, 71, 83, 87, 94, 103, 106, 128, 130, 139, 178, 196, 214, 237, 271, 272, 302, 340, 360], "almost_positive_root": [18, 237, 239], "pathsubset": 18, "settopath": 18, "rearrang": [18, 157], "coeff_recur": 18, "expans": [18, 72, 106, 107, 141, 142, 143, 144, 145, 147, 148, 185, 232, 280, 281, 284, 286, 288, 290, 292, 293, 295, 296, 297, 299, 301, 311, 364], "get_green_vertic": 18, "get_red_vertic": 18, "is_leelizel_allow": 18, "lee": [18, 53], "paper": [18, 77, 78, 93, 97, 105, 141, 143, 144, 170, 185, 275, 299, 303, 338, 339, 343], "19495": 20, "add_vertex": 20, "load_data": 20, "load": [20, 25, 28, 137, 159, 170, 191, 274, 293, 313, 317, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 338, 358, 359, 368], "dict": [20, 100, 106, 110, 134, 139, 156, 170, 178, 185, 189, 270, 345, 352, 354, 357, 358, 364], "dig6": [20, 21, 22], "unless": [20, 21, 99, 106, 117, 121, 122, 144, 145, 149, 154, 158, 170, 185, 186, 239, 272, 275, 296, 298, 306, 310, 338], "instal": [20, 45, 76, 87, 185, 236, 237, 311, 358], "database_mutation_class": 20, "ao": [20, 360], "ba": [21, 97, 352, 354, 355, 357, 358, 364, 367], "mt": [21, 22, 89, 91, 347], "standard_quiv": [21, 22], "dg2": 21, "is_isomorph": [21, 32, 36, 38, 47, 50, 52, 53, 55, 58, 59, 60, 76, 78, 85, 87, 158, 160, 170, 180, 181, 184, 185, 210, 211, 213, 302, 303, 328, 360], "edge_label": [21, 36, 38, 47, 50, 52, 53, 55, 58, 59, 60, 106, 132, 160, 208, 210, 211, 213, 235, 239, 303, 360, 368], "tr": [21, 22, 107, 349], "certif": [21, 87, 180, 185], "generic_graph": 21, "genericgraph": [21, 185], "iso": [21, 179], "d_vector_fan": 21, "simplici": [21, 23, 185, 335, 347], "smooth": [21, 354, 364], "fd": 21, "ngenerating_con": 21, "is_smooth": 21, "subquiv": 21, "g_vector_fan": 21, "fg": [21, 110], "add_vertic": [21, 55, 224], "add_edg": [21, 55, 87, 224, 228], "data_typ": 21, "togeth": [21, 28, 29, 41, 50, 55, 60, 69, 76, 94, 118, 130, 132, 139, 156, 158, 178, 180, 213, 232, 233, 235, 239, 276, 307, 310, 340, 341, 349, 360], "expand": [21, 97, 143, 144, 145, 147, 148, 149, 158, 185, 233, 238, 270, 274, 280, 281, 282, 284, 285, 288, 289, 290, 292, 293, 296, 297, 298, 299, 301, 341, 349], "seq": [21, 64, 70, 71, 99, 136, 158, 161, 186, 306, 340, 354], "recognit": 21, "save_quiver_data": [21, 22], "ke2008": 21, "number_of_edg": 21, "taken": [21, 22, 29, 32, 71, 73, 81, 94, 100, 106, 108, 111, 112, 117, 128, 132, 134, 136, 139, 143, 154, 157, 158, 170, 185, 224, 229, 231, 235, 294, 299, 300, 309, 340, 341], "center": [21, 99, 180, 222, 224, 229, 235, 239, 275, 345, 354], "poincare_semist": 21, "theta": [21, 147, 178, 180, 212, 232, 270, 299, 354], "poincar\u00e9": [21, 299], "moduli": 21, "dimens": [21, 24, 76, 81, 89, 100, 107, 110, 125, 129, 136, 149, 158, 170, 184, 185, 190, 208, 215, 218, 219, 222, 232, 233, 236, 239, 241, 242, 245, 248, 250, 252, 254, 256, 261, 262, 264, 265, 266, 267, 268, 270, 302, 306, 335, 345, 349, 357, 358], "stabil": [21, 58, 66, 73, 81, 229, 235, 236, 239, 299, 338, 341, 343], "slope": [21, 29, 99, 121, 122, 158, 184, 344, 354, 364], "dim": [21, 24, 129, 185, 186, 213, 214], "rei2002": 21, "k2": [21, 25, 55, 84, 99, 106, 152, 213, 215, 239, 268], "k3": [21, 58, 215], "marku": 21, "reinek": 21, "harder": [21, 71], "narasimhan": 21, "quantum": [21, 38, 58, 145, 158, 160, 162, 180, 183, 208, 213, 233, 240, 268, 288, 300, 338, 341, 342, 343], "cohomologi": [21, 132, 274], "arxiv": [21, 90, 99, 106, 118, 132, 137, 141, 144, 148, 149, 157, 169, 197, 208, 209, 213, 215, 224, 233, 239, 263, 268, 273, 275, 278, 288, 289, 293, 296, 298, 299, 300, 301, 306, 307, 344, 345], "math": [21, 76, 78, 79, 81, 90, 99, 100, 106, 114, 125, 132, 141, 144, 145, 149, 157, 163, 169, 170, 178, 184, 185, 187, 208, 213, 215, 222, 224, 229, 232, 233, 238, 239, 268, 270, 271, 273, 280, 282, 285, 286, 287, 288, 289, 292, 293, 296, 298, 299, 300, 301, 302, 306, 307, 335, 357, 364], "0204059": 21, "outgo": [21, 106, 115, 185, 239, 308, 354, 360], "qmu_sav": 21, "qmu": 21, "open": [21, 45, 63, 84, 99, 113, 152, 158, 181, 185, 275, 298, 341], "bernhard": 21, "keller": 21, "applet": 21, "http": [21, 25, 28, 75, 76, 77, 78, 79, 84, 87, 89, 90, 99, 105, 106, 136, 141, 144, 157, 158, 163, 170, 171, 178, 185, 186, 194, 222, 270, 273, 275, 287, 298, 299, 306, 311, 318, 327, 339, 341, 349, 354, 357, 364], "webus": 21, "imj": 21, "prg": 21, "fr": [21, 144, 194, 339, 364], "quivermut": 21, "from_sag": 21, "directori": 21, "sure": [21, 58, 75, 78, 89, 90, 106, 110, 122, 123, 125, 134, 150, 159, 185, 212, 235, 298, 310, 341, 356, 357], "14851": 21, "around": [21, 25, 77, 103, 128, 185, 196, 224, 282, 292, 298, 299, 311, 328, 349, 354], "duplic": [21, 25, 27, 106, 185, 189], "revert": [21, 143, 341, 354], "hugh": [22, 76, 180, 349], "thoma": [22, 112, 145, 180, 298, 299, 349], "arg": [22, 25, 29, 72, 89, 91, 106, 122, 123, 129, 137, 138, 142, 158, 170, 180, 190, 194, 224, 228, 235, 237, 238, 239, 292, 321, 327, 335, 341, 342, 358, 360, 367, 368], "slight": [22, 108, 224, 239, 244, 261, 268, 269, 354], "background": [22, 145, 158, 184, 185, 233, 344], "generalized_cartan_matrix": 22, "invert": [22, 83, 118, 144, 212, 216, 238, 262, 281, 284, 290, 296, 297, 299, 306, 338, 347, 349], "dm": [22, 82, 224], "twist": [22, 55, 58, 76, 136, 160, 224, 229, 231, 232, 233, 238, 246, 261, 262, 264, 266], "naiv": [22, 25, 83, 144, 170, 186, 233, 275, 349, 354], "bb": [22, 61, 97, 136, 328, 354, 357, 363, 367], "cc": [22, 25, 32, 136, 145, 163, 212, 213, 218, 242, 270, 349, 357, 367], "cd": [22, 57, 106, 265, 354, 357, 359, 364], "peopl": [22, 144, 318, 327, 349], "enough": [22, 28, 83, 121, 129, 170, 180, 231, 239, 241, 275, 299, 342, 349, 369], "accept": [22, 25, 68, 106, 122, 144, 154, 170, 181, 185, 186, 187, 223, 261, 262, 268, 269, 273, 299, 349, 354, 358, 361, 369], "ellipt": 22, "saito": 22, "grid": [22, 99, 113, 118, 152, 275, 308, 354, 358], "derksen": 22, "owen": 22, "BE": 22, "ce": [22, 106, 190], "antenna": 22, "slightli": [22, 54, 71, 78, 87, 99, 122, 154, 170, 185, 244, 269, 341, 343, 349], "exercis": [22, 99, 170, 185, 224, 262, 273, 281, 296, 297, 298, 299, 301, 311], "book": [22, 70, 180, 270, 282, 289, 309, 311, 339, 349, 354], "dimension": [22, 51, 55, 58, 61, 73, 76, 81, 96, 100, 110, 114, 155, 160, 170, 183, 185, 208, 209, 213, 222, 224, 232, 233, 235, 236, 237, 239, 268, 270, 299, 306, 335, 338, 345, 349, 357], "good": [22, 28, 76, 94, 121, 127, 144, 160, 162, 233, 235, 238, 272, 298, 332, 333, 349, 358], "dynkin_diagram": [22, 217, 223, 224, 228, 230, 232, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 270], "unfold": [22, 38], "felikson": 22, "shapiro": 22, "tumarkin": 22, "fst2012": 22, "mainli": [22, 83, 118, 143, 158, 222, 282, 289, 310, 341, 349, 357], "quivermutationtypefactori": 22, "sampl": [22, 224, 226, 227, 238, 239, 261], "mutation_finit": 22, "quivermutationtype_irreduc": 22, "quivermutationtype_abstract": 22, "class_siz": 22, "notimpl": 22, "torkildsen": 22, "bastian": 22, "prellberg": 22, "rubei": [22, 26, 118, 169, 275, 318, 327], "widetild": [22, 53, 59, 60, 68, 142, 143, 149, 170, 224, 273], "proven": [22, 185, 209, 212, 213, 215, 216, 234, 275, 299, 301, 341], "publish": [22, 78, 106, 275], "lace": [22, 45, 208, 209, 210, 211, 212, 213, 215, 223, 224, 226, 227, 233, 239, 243, 244, 260, 262, 263, 265, 268], "hardcod": [22, 57, 78, 136, 236, 271], "mut_typ": 22, "142120": 22, "504": 22, "14048": 22, "irreducible_compon": [22, 236], "quivermutationtype_reduc": 22, "mut_type1": 22, "mut_type2": 22, "mut_type3": 22, "fomin": [22, 118, 167, 234, 298], "reorder": [22, 50, 90, 125, 144, 185, 209, 272, 299], "elsewher": [22, 97, 136], "fulton": [22, 228, 270, 341], "harri": [22, 228, 270], "disagre": 22, "bourbaki": [22, 224, 228, 229, 241, 252, 254], "alpha_i": [22, 41, 45, 47, 50, 53, 58, 67, 158, 160, 162, 224, 229, 232, 235, 237, 238, 239, 240, 241, 261, 270, 271, 299, 341, 342], "alpha_j": [22, 61, 230, 237, 239], "is_affin": [22, 223, 224, 226, 227, 228, 243, 244, 245, 246, 247, 249, 251, 252, 253, 255, 257, 258, 259, 262, 265, 267], "is_ellipt": 22, "is_irreduc": [22, 224, 226, 227, 228, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 267, 270], "is_simply_lac": [22, 223, 224, 226, 227, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265], "is_skew_symmetr": 22, "classif": [22, 99, 112, 222, 236, 237, 302], "qmt": 22, "pl": [22, 97, 158, 170], "scheme": [22, 100, 137, 139, 144, 224, 301], "up_to": 22, "classicalexcept": 22, "dot_sag": 22, "mutation_classes_n": 22, "exactli": [22, 25, 53, 75, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 93, 94, 95, 98, 99, 106, 118, 128, 135, 137, 139, 144, 158, 170, 180, 185, 193, 212, 223, 238, 276, 299, 309, 310, 311, 313, 336, 338, 340, 341, 343, 349, 354, 360], "clustercomplex": [23, 347], "facet": [23, 128, 132, 185, 235, 239, 335, 347], "Its": [23, 66, 76, 83, 100, 106, 108, 110, 128, 144, 158, 185, 218, 229, 230, 269, 270, 276, 281, 296, 297, 299, 301, 318], "minimal_nonfac": 23, "homologi": [23, 185, 299], "cluster_complex": 23, "coxeter_el": [23, 224, 236], "subwordcomplex": [23, 335], "convex": [23, 61, 156, 170, 178, 180, 185, 235, 237, 275, 335], "gon": [23, 99], "triangul": [23, 99, 128, 166, 307], "cls2014": 23, "bf": [23, 71, 318], "circ": [23, 45, 55, 64, 76, 97, 108, 143, 149, 154, 170, 209, 212, 216, 231, 233, 268, 274, 296, 299, 306, 318, 357, 364], "longest": [23, 24, 50, 68, 99, 108, 112, 122, 128, 158, 170, 178, 180, 185, 193, 224, 235, 240, 274, 349, 352, 354, 360, 362], "w_": [23, 58, 60, 61, 76, 106, 139, 170, 268, 299, 301, 354], "multi": [23, 32, 81, 99, 106, 115, 139, 170, 181, 185, 194, 327, 354], "clustercomplexfacet": 23, "cyclic_rot": 23, "facet_test": [23, 335], "subwordcomplexfacet": [23, 335], "product_of_upper_clust": 23, "upper_clust": 23, "wr": 24, "colored_permut": 24, "coloredpermut": 24, "perm": [24, 32, 87, 97, 128, 170, 194, 228, 313, 314, 315, 320, 321, 322, 323, 324, 326, 328, 329, 338, 341], "multiplicativegroupel": [24, 230], "s1": [24, 36, 38, 58, 81, 106, 130, 131, 229, 230, 232, 270, 271, 334, 338, 349, 354], "sigma_i": [24, 97, 144, 341], "sigma_": [24, 58, 97, 144], "s3": [24, 36, 38, 58, 81, 97, 106, 129, 130, 131, 159, 229, 232, 241, 271, 331, 338, 354, 368], "s4": [24, 81, 130, 271, 354], "one_line_form": 24, "zeta4": 24, "c_m": 24, "p_n": [24, 158, 170, 185, 281, 284, 290, 296, 297, 299, 301, 349], "t_n": [24, 231, 233, 238, 276, 299], "tau": [24, 97, 144, 162, 181, 229, 239, 306, 311, 357], "lift": [24, 35, 55, 56, 57, 97, 111, 127, 130, 143, 144, 149, 163, 179, 212, 213, 222, 231, 233, 261, 270, 286, 292, 298, 299, 349, 354], "generalized_symmetric_group": 24, "complex_reflection_group": [24, 236, 237], "as_permutation_group": [24, 170], "384": [24, 299, 303, 311], "codegre": [24, 170, 236, 341, 343], "d_1": [24, 71, 81, 96, 97, 99, 114, 180, 364], "d_2": [24, 71, 72, 81, 96, 97, 99, 114, 180, 222, 224, 250, 265, 364], "d_i": [24, 71, 81, 96, 114], "det": [24, 136, 158, 222, 242, 299], "coxeter_matrix": [24, 185, 223, 224, 226, 227, 237, 258, 259], "invari": [24, 95, 118, 122, 127, 128, 132, 149, 170, 185, 222, 232, 236, 270, 306], "2m": [24, 93, 136, 311], "nm": [24, 90, 136, 143], "fixed_point_polynomi": 24, "f_g": 24, "subspac": [24, 76, 110, 144, 218, 286, 292, 298, 306, 356, 357], "131": [24, 232, 354], "231": [24, 99, 106, 310, 311, 352], "signedpermut": 24, "is_well_gener": [24, 236], "matrix_group": 24, "cyclotom": [24, 81, 89, 160, 162, 186, 227, 342, 343], "number_of_reflection_hyperplan": [24, 236], "hyperplan": [24, 38, 76, 81, 89, 218, 224, 229, 235, 236, 237, 239, 240, 267, 268, 270, 271], "276": [24, 78, 81, 88, 232, 311, 335], "simple_reflect": [24, 33, 131, 170, 217, 229, 232, 233, 236, 237, 239, 241, 270, 271], "to_cycl": [24, 137, 170], "singleton": [24, 97, 117, 138, 161, 170, 275, 313, 319, 324, 325, 327, 328, 341], "use_min": [24, 170], "negative_singleton": 24, "disjoint": [24, 25, 78, 87, 89, 97, 106, 108, 110, 117, 118, 122, 134, 137, 139, 159, 170, 178, 185, 239, 272, 275, 276, 304, 349, 354, 357], "largest": [24, 71, 82, 88, 89, 90, 118, 121, 122, 125, 128, 130, 139, 144, 158, 170, 180, 184, 185, 212, 229, 273, 310, 311, 341, 354, 357], "m1": [24, 82, 88, 181, 364], "m2": [24, 82, 88, 144, 182, 347, 364], "m3": [24, 88, 180, 182, 286, 298, 364], "m4": [24, 364], "hyperoctahedr": [24, 169, 170], "wreath": [24, 162, 343], "group_gener": [24, 229, 230], "canonical_represent": 24, "414213562373095": [24, 112], "long_el": [24, 36, 231, 238, 271], "hyperoctahedral_group": 24, "parabol": [24, 58, 112, 158, 162, 233, 237, 239, 271], "subgroup": [24, 81, 87, 112, 125, 127, 136, 137, 158, 162, 186, 218, 222, 229, 230, 236, 237, 239, 270, 271, 306, 341, 343, 345], "relev": [25, 105, 130, 137, 222, 224, 229, 235, 318, 327, 338, 341], "docstr": [25, 106, 107, 154, 170, 272, 338], "bell_numb": 25, "catalan_numb": [25, 99, 349], "confus": [25, 97, 128, 139, 149, 170, 180, 241, 309, 334, 341, 343], "constant": [25, 29, 57, 58, 99, 100, 106, 122, 136, 138, 152, 158, 170, 189, 231, 235, 278, 286, 292, 299, 308, 369], "narayana": 25, "narayana_numb": 25, "euler": [25, 32, 137, 150, 158, 185, 311, 349], "euler_numb": 25, "maxima": [25, 170], "eulerian": [25, 143, 144, 170, 185, 187, 299], "eulerian_numb": 25, "eulerian_polynomi": 25, "pari": [25, 78, 158, 162, 185, 188, 311, 369], "fibonacci_numb": 25, "gap": [25, 27, 76, 87, 103, 137, 158, 185, 236, 271], "better": [25, 38, 58, 77, 96, 121, 158, 170, 224, 234, 235, 244, 271, 281, 299, 349], "stirl": [25, 26, 186, 275, 276, 311], "stirling_number1": [25, 186], "stirling_number2": [25, 186, 275], "polygon": [25, 99, 166, 224, 235, 307, 311, 358], "polygonal_numb": 25, "theoret": [25, 45, 150, 169, 273, 299, 318, 349, 352], "number_of_derang": 25, "number_of_tupl": 25, "repetit": [25, 118, 143, 170, 273, 334, 348, 357], "unordered_tupl": 25, "number_of_unordered_tupl": 25, "permutations_iter": 25, "number_of_permut": 25, "bernoulli_polynomi": [25, 187], "arith": [25, 364], "wrap": [25, 27, 28, 57, 76, 77, 84, 107, 134, 138, 158, 162, 171, 174, 185, 229, 298, 354, 363], "cookbook": 25, "number_of_partit": [25, 158], "falling_factori": 25, "ge": [25, 50, 59, 60, 66, 81, 106, 112, 128, 144, 145, 178, 180, 184, 185, 311, 340, 342, 354, 357], "gamma": [25, 33, 61, 95, 106, 137, 141, 143, 149, 161, 185, 208, 212, 239, 275, 299, 347], "rising_factori": 25, "gaussian_binomi": [25, 186], "gaussian": [25, 186, 281, 284], "perm_gp": 25, "permgroup_el": 25, "permutationgroupel": [25, 137, 158, 170, 313, 314, 315, 320, 321, 322, 323, 324, 326, 328, 329, 339, 341, 343, 354], "guava": 25, "vandermondemat": 25, "graymat": 25, "rencontr": [25, 311], "rencontres_numb": 25, "twelvefold_wai": 25, "david": [25, 50, 76, 87, 125, 136, 144, 186], "joyner": [25, 76, 87, 125, 136, 186], "2006": [25, 77, 148, 149, 180, 186, 213, 222, 233, 238, 298, 300, 306, 311, 352], "william": [25, 106, 163, 186, 301, 311, 364], "stein": [25, 163, 186, 311], "edit": [25, 28, 75, 77, 81, 106, 169, 213, 219, 289, 298], "doc": [25, 75, 105, 125, 160, 185, 222, 268, 270, 273, 311, 331, 334, 357, 358], "refin": [25, 29, 73, 99, 112, 141, 178, 180, 184, 185, 275, 299, 302], "bug": [25, 27, 158, 178, 185, 279, 282, 334], "combinations_iter": 25, "hadamard_matrix": [25, 136], "2009": [25, 99, 100, 110, 125, 136, 151, 157, 158, 170, 224, 311, 331, 334, 339, 357, 358, 364, 367, 368], "02": [25, 29, 99, 105, 106, 107, 125, 155, 170, 185, 208, 236, 275, 276, 286, 309, 310, 311, 331, 334, 357, 362], "cleanup": [25, 106, 107, 126, 275], "fredrik": [25, 26], "johansson": [25, 26], "punarbasu": 25, "purkayastha": 25, "arrang": [25, 97, 101, 170, 222, 235, 275, 299, 311, 335, 349], "old": [25, 106, 158, 185, 189], "combinatorialclass": [25, 28, 29, 99, 170, 275, 276, 309, 310, 328, 339], "disappear": [25, 349, 367], "enumeratedset": [25, 45, 101], "finiteenumeratedset": [25, 97, 101, 122, 349, 353], "infiniteenumeratedset": 25, "appropri": [25, 45, 57, 97, 106, 110, 112, 136, 152, 158, 162, 181, 213, 218, 224, 227, 229, 231, 233, 235, 238, 241, 261, 265, 268, 273, 299, 338, 341, 343, 349, 369], "combinatorialobject": [25, 55, 293, 328], "__iter__": [25, 230], "temporari": [25, 84, 156, 298], "permutations_cc": 25, "is_inject": [25, 357], "text": [25, 47, 50, 59, 60, 61, 67, 68, 71, 76, 80, 81, 84, 87, 89, 90, 94, 102, 106, 127, 129, 136, 137, 144, 158, 160, 162, 185, 186, 222, 226, 235, 274, 275, 299, 318, 338, 343, 349, 364], "attrcal": [25, 35, 178, 180, 185, 235, 261], "obj": [25, 99], "previou": [25, 29, 38, 71, 89, 105, 106, 107, 112, 121, 122, 137, 185, 194, 209, 224, 233, 235, 282, 349, 367], "right_cc": 25, "combinatorialel": [25, 29, 31, 33, 50, 72, 99, 152, 158, 162, 170, 194, 306, 309, 343, 350], "kwd": [25, 29, 31, 61, 72, 75, 86, 89, 99, 110, 122, 123, 128, 129, 147, 152, 158, 162, 183, 185, 190, 194, 219, 228, 237, 307, 321, 327, 335, 336, 338, 341, 358, 360, 367, 368], "__classcall__": 25, "mechan": [25, 213, 241, 298, 364], "slowli": [25, 131], "dump": [25, 84, 134, 137, 159, 170, 191, 274, 293, 313, 317, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 338, 358, 359, 368], "classcal": 25, "foo": [25, 138, 185, 298], "staticmethod": 25, "cl": [25, 28, 58, 87, 174, 180, 238], "__setitem__": 25, "disabl": [25, 75, 76, 82, 86, 87, 88, 89, 90, 92, 122, 136, 170, 185, 223, 235, 299], "shallowli": 25, "intent": [25, 106, 171], "semant": [25, 28, 110, 144, 145, 170, 233, 318, 338], "__hash__": 25, "_list": [25, 55, 365], "_hash": [25, 363], "effici": [25, 35, 38, 58, 71, 80, 91, 94, 97, 105, 106, 120, 122, 170, 184, 185, 224, 239, 268, 270, 286, 298, 335, 341, 343, 349, 352], "filteredcombinatorialclass": 25, "combinatorial_class": 25, "infiniteabstractcombinatorialclass": 25, "_infinite_cclass_slic": 25, "notimplementederror": [25, 75, 76, 81, 86, 88, 89, 106, 127, 218, 224, 239, 240, 327, 352, 354, 357, 367], "deprecationwarn": [25, 354], "sagemath": [25, 185, 190, 222, 270, 349, 354], "org": [25, 28, 76, 77, 78, 79, 84, 87, 90, 105, 170, 185, 186, 222, 270, 273, 311, 349, 354, 357, 358], "31545": 25, "mapcombinatorialclass": 25, "imagesubobject": 25, "3628800": 25, "14772": 25, "unioncombinatorialclass": 25, "left_cc": 25, "flint": [25, 158], "dobinski": 25, "arith_bell_numb": 25, "mpmath": 25, "prec": [25, 53, 108, 109, 112, 144, 185, 237, 275, 357], "incorrect": [25, 87, 268], "low": [25, 222, 235], "k_0": [25, 273], "induct": [25, 125, 170, 272, 298, 301, 304, 335, 338, 339, 354], "c_k": [25, 38, 99, 124, 125, 139, 154, 185], "inequ": [25, 71, 144, 168, 219, 229, 273, 349], "e_1": [25, 55, 100, 118, 178, 180, 181, 185, 299, 357], "e_2": [25, 100, 178, 180, 181, 185], "lfloor": [25, 106, 129, 158, 311, 341, 364], "rfloor": [25, 106, 129, 158, 311, 341, 364], "e_3": [25, 100], "e_4": 25, "align": [25, 37, 47, 56, 59, 61, 64, 67, 68, 106, 119, 136, 155, 213, 222, 229, 263, 340], "e_5": 25, "lceil": [25, 77, 364], "rceil": [25, 77, 364], "costli": 25, "collect": [25, 29, 50, 75, 78, 80, 81, 86, 87, 89, 93, 96, 97, 99, 100, 106, 107, 113, 118, 129, 132, 139, 142, 170, 184, 185, 189, 235, 236, 239, 273, 311], "sqrt": [25, 106, 136, 194, 235, 311, 339, 349, 354, 364, 369], "log_2": 25, "round": [25, 152, 292], "down": [25, 50, 99, 118, 122, 132, 157, 158, 160, 162, 170, 178, 180, 184, 185, 222, 235, 239, 280, 308, 336, 341, 343], "absolut": [25, 106, 107, 130, 170, 184, 311, 357], "rel": [25, 29, 58, 81, 112, 170, 180, 181, 184, 185, 221, 229, 275, 302, 311, 333, 338, 354, 364], "115975": 25, "arithmeticerror": 25, "upon": [25, 28, 75, 107, 112, 121, 122, 142, 143, 144, 158, 170, 213, 229, 235, 242, 263, 267, 272, 306, 342], "deem": [25, 76], "guess": [25, 75, 80, 84, 86, 87, 100, 143, 310, 345, 349, 358, 361, 369], "temporarili": 25, "846749014511809332450147": 25, "necessari": [25, 50, 71, 89, 97, 130, 184, 230, 273, 281, 296, 297, 299, 301, 305, 343, 345, 349, 354, 363], "befor": [25, 28, 32, 51, 67, 71, 75, 76, 81, 82, 86, 87, 88, 89, 90, 92, 93, 99, 118, 136, 139, 170, 190, 214, 224, 233, 235, 241, 266, 272, 275, 302, 309, 310, 340, 343, 349, 354, 360, 363, 369], "846749014511809388871680": 25, "robert": [25, 76, 81, 170, 275], "gerbicz": 25, "jeroen": 25, "demey": 25, "accur": 25, "estim": [25, 349], "17157": 25, "blogspot": 25, "com": [25, 78, 89, 90, 106, 136, 141, 158, 170, 274, 341], "html": [25, 76, 77, 78, 79, 89, 158, 170, 185, 222, 270, 287, 306, 318, 327, 341, 349, 357], "mathworld": [25, 89, 158, 170, 341], "wolfram": [25, 89, 158, 170, 341], "dobinskisformula": 25, "bell_polynomi": 25, "x_0": [25, 134, 185, 222], "j_i": [25, 99, 213, 273], "j_0": [25, 188, 273], "j_1": [25, 29, 64, 88, 96, 99, 120, 139, 144, 273, 341], "j_": [25, 64, 120, 142, 144, 273, 341], "bel1927": 25, "blair": 25, "sutton": 25, "thierri": [25, 349, 354, 358], "monteil": [25, 354, 358], "evalu": [25, 28, 107, 110, 129, 149, 150, 158, 170, 178, 185, 187, 190, 194, 287, 289, 296, 298, 299, 310, 318, 338, 341, 349, 354, 356, 360], "xt": 25, "zeta": [25, 99, 179, 185, 306], "hurwitz": [25, 32, 236], "199870": 25, "univari": [25, 97, 149, 161, 180, 183, 186, 239, 282, 285, 286, 288, 289, 292, 298, 299, 324, 327, 330, 338, 349, 369], "power_sum": 25, "quad": [25, 47, 57, 67, 68, 81, 136, 143, 144, 149, 222, 281, 296, 297, 299, 301, 349, 369], "belong": [25, 75, 78, 82, 86, 87, 89, 90, 108, 111, 112, 117, 118, 149, 154, 158, 162, 170, 185, 236, 238, 239, 272, 275, 286, 304, 341, 342, 343, 359], "axbi": 25, "www": [25, 75, 77, 78, 87, 90, 99, 141, 144, 157, 170, 178, 185, 186, 287, 311, 318, 327, 341, 349, 357, 358, 364], "histori": [25, 122], "andrew": [25, 155, 158, 160, 162, 341, 342, 343], "ac": [25, 87, 106, 318, 327, 334, 349, 354, 357, 360, 364, 367], "uk": [25, 89], "catalannumb": 25, "arith_euler_numb": 25, "1385": 25, "powerseriesr": [25, 158], "exp": [25, 106, 143, 144, 158, 236, 290], "720": [25, 284, 311, 318, 319], "277": [25, 78], "8064": 25, "50521": 25, "coeff": [25, 110, 129, 142, 170, 241, 293, 298, 299], "f_n": [25, 90, 110, 112, 144, 236, 318], "f_1": [25, 55, 87, 106, 110, 143, 236], "f_2": [25, 106, 143], "fibo": [25, 357, 369], "ten": [25, 45], "hundr": [25, 349], "354224848179261915075": 25, "fibonacci_sequ": 25, "stop": [25, 88, 106, 122, 178, 273, 299, 345, 354, 363], "fib": [25, 311, 364], "144": [25, 78, 136, 186, 311, 349, 362, 369], "233": [25, 78, 349, 354, 362], "377": [25, 311, 349, 362, 369], "610": [25, 349, 362], "987": [25, 187, 311, 349, 357], "1597": [25, 78], "2584": [25, 311], "4181": 25, "110": [25, 118, 185, 190, 311, 354, 357], "69919376923075308730013": 25, "fibonacci_xrang": 25, "bobbi": 25, "moretti": 25, "fibs_in_some_rang": 25, "14930352": 25, "24157817": 25, "39088169": 25, "63245986": 25, "is_even": [25, 118, 170], "1089154": 25, "229": [25, 78, 106, 292], "l_n": [25, 119, 124, 180, 299, 354], "l_": [25, 97, 99, 119, 180, 299], "l_1": [25, 97, 119, 124, 137, 180, 213, 299, 304, 354, 359], "l_2": [25, 119, 137, 299, 304, 359], "is_prim": [25, 303, 349], "199": [25, 78, 311], "322": [25, 311], "521": [25, 78, 298, 311], "843": [25, 233], "1364": 25, "counterexampl": 25, "418": [25, 88, 298], "brualdi": 25, "introductori": [25, 106], "4th": [25, 157], "ed": [25, 35, 128, 132, 285, 358], "prentic": 25, "2004": [25, 69, 78, 88, 99, 188, 298, 335], "sum_k": [25, 143], "n_": [25, 306, 354], "unlik": [25, 84, 113, 170, 194, 218, 235, 272, 292], "redund": [25, 118, 310], "nrtupl": 25, "nrunorderedtupl": 25, "gonal": 25, "famou": [25, 349, 354, 364], "pascal": [25, 311, 349], "pentagon": [25, 180, 184, 311], "117": [25, 83, 178, 311], "hexagon": [25, 180, 358], "120": [25, 75, 78, 81, 87, 88, 89, 124, 132, 178, 224, 232, 235, 271, 311, 318, 319], "153": [25, 78, 81, 299], "attempt": [25, 106, 112, 122, 162, 202, 292, 349, 354, 369], "realnumb": 25, "stirling_numbers_of_the_first_kind": 25, "stirling1": 25, "arith_stirling_number_1u": 25, "269325": 25, "stirling_numbers_of_the_second_kind": 25, "nativ": [25, 174, 349], "arith_stirling_number_2": 25, "stirling2": 25, "rjust": 25, "301": [25, 78, 144, 150], "350": [25, 78, 170, 187, 232], "140": [25, 81, 88, 90, 130, 145, 178, 181, 311, 354], "127": [25, 81, 83, 88, 122, 311, 361], "966": 25, "1701": 25, "1050": 25, "255": [25, 78, 88, 89, 90, 91, 311, 361, 362], "3025": 25, "7770": 25, "6951": 25, "2646": 25, "462": [25, 88, 222, 311], "ks_2": 25, "42525": 25, "mset": [25, 27, 170, 348], "lastli": [25, 55], "jon": 25, "hank": 25, "08": [25, 29, 49, 96, 100, 106, 107, 147, 148, 149, 155, 170, 223, 273, 283, 303, 309, 310, 311, 341, 343], "often": [25, 32, 71, 94, 97, 106, 108, 118, 158, 162, 170, 180, 185, 231, 261, 311, 331, 338, 341, 349], "combinations_with_replac": 25, "unorderedtupl": [25, 348], "unshuffle_iter": 25, "unshuffl": [25, 338], "bigl": [25, 37, 47, 53, 59, 67, 158, 270], "bigr": [25, 37, 47, 53, 59, 67, 158, 270], "conjug": [26, 29, 32, 118, 120, 125, 128, 137, 142, 143, 144, 145, 158, 160, 162, 185, 186, 229, 236, 238, 239, 270, 271, 273, 275, 280, 281, 284, 287, 289, 292, 296, 297, 298, 299, 309, 310, 337, 341, 343, 354, 357, 361], "martin": [26, 118, 125, 169, 275, 305, 318, 327], "combinat_cython": 26, "linear_extension_iter": 26, "_le": 26, "is_plu": 26, "_hasse_diagram": [26, 175, 178], "booleanlattic": [26, 178, 179, 180, 181, 183, 184, 185], "antichainposet": [26, 184, 185], "lyndon_word_iter": 26, "fkm": 26, "rus2003": 26, "perfect_matchings_iter": 26, "walsh": 26, "wal2001": 26, "set_partition_composit": [26, 159], "sp1": [26, 97, 159, 275], "sp2": [26, 97, 159, 275, 354], "setpartit": [26, 97, 147, 148, 149, 159, 169, 178, 180, 184, 185, 275, 349], "set_partition_iter": 26, "set_partition_iterator_block": 26, "antoin": [27, 163], "genitrini": 27, "choosenk": 27, "combinations_setk": 27, "combinations_mset": 27, "combinations_msetk": 27, "nrcombin": 27, "combinations_set": 27, "16000": 27, "8732673194560003200": 27, "from_rank": [27, 170], "factorad": [27, 170], "present": [27, 58, 71, 75, 90, 96, 106, 117, 123, 137, 156, 170, 190, 218, 233, 236, 237, 298, 299, 338, 349, 352, 354, 357], "dgh2020": 27, "literatur": [27, 56, 64, 73, 118, 125, 143, 158, 160, 162, 170, 180, 222, 238, 261, 269, 299, 338, 341, 343, 349, 354], "combinad": 27, "jame": [27, 99, 113, 157, 301, 338], "mccaffrei": 27, "msdn": 27, "decor": [28, 109, 111, 114, 117, 118, 156, 190, 214, 224, 321, 332, 360], "combinatorial_map": 28, "mypermut": 28, "op": [28, 97, 161, 368], "combinatorial_map_wrapp": 28, "welcom": [28, 122, 224, 241, 333, 341], "local": [28, 32, 45, 118, 121, 128, 156, 166, 167, 168, 180, 185, 196, 236, 306, 310, 311, 338, 341], "instrument": 28, "exploit": [28, 349], "popul": 28, "life": [28, 157], "applic": [28, 33, 50, 76, 81, 90, 99, 100, 106, 143, 144, 170, 233, 293, 306, 311, 318, 327, 349, 357, 358, 364, 368], "findstat": 28, "variant": [28, 90, 106, 118, 122, 143, 238, 261, 349], "combinatorial_maps_in_class": 28, "queri": [28, 75, 79, 88, 90, 91, 136, 185], "thereof": [28, 122, 174, 185, 224, 231, 239], "resort": 28, "reload": [28, 361], "fragil": 28, "best": [28, 70, 77, 83, 94, 112, 137, 145, 170, 235, 342, 349, 357], "static": [28, 29, 89, 128, 130, 156, 184, 228, 276, 337], "combinatorialmap": 28, "map1": 28, "to_self_1": 28, "to_self_2": 28, "unbounded_map": 28, "unbound": 28, "domain": [28, 32, 52, 100, 142, 169, 231, 233, 270, 271, 298, 299, 308, 338, 341, 343, 349, 354, 357, 358, 361, 367], "importlib": 28, "nicer": [28, 106, 354], "unchang": [28, 29, 47, 55, 106, 139, 158, 162, 170, 232, 273, 276], "combinatorial_map_trivi": 28, "major_index": [28, 29, 99, 139, 170, 341, 354], "major": [28, 29, 87, 99, 139, 144, 170, 293, 341, 349, 354], "But": [28, 83, 89, 106, 144, 181, 222, 229, 231, 238, 299, 352, 354], "cmap": [28, 100, 354], "left_tableau": [28, 170], "right_tableau": [28, 170], "nicola": [29, 38, 67, 68, 126, 223, 224, 228, 229, 233, 271, 298, 299, 349, 357], "thi\u00e9ri": [29, 38, 233, 271, 349], "mupad": [29, 45, 122, 126, 158, 170, 194, 223, 224, 239, 275, 276, 280, 298, 310, 349], "develop": [29, 89, 275, 276], "inspir": [29, 106, 275, 276, 298, 354], "simplest": [29, 106, 139, 165], "to_cod": 29, "i_3": [29, 73, 144, 170], "to_subset": 29, "from_subset": 29, "regard": [29, 55, 97, 108, 128, 143, 144, 149, 158, 170, 185, 222, 229, 238, 270, 272, 275, 338, 357], "abc": [29, 87, 106, 111, 137, 185, 188, 189, 304, 311, 334, 352, 353, 354, 357, 358, 360, 361, 364], "isinst": [29, 120, 152, 169, 273, 331, 365], "issubclass": [29, 328], "__class__": [29, 154, 185, 265, 272, 311], "testsuit": [29, 32, 38, 48, 51, 53, 59, 67, 68, 72, 127, 159, 166, 175, 178, 180, 185, 190, 191, 213, 224, 230, 241, 242, 261, 262, 264, 266, 271, 274, 280, 282, 285, 286, 291, 292, 338, 342, 359], "to_skew_partit": 29, "final_desc": [29, 170, 354], "fewer": 29, "maintain": [29, 184], "backward": [29, 96, 104, 118, 129, 134, 224, 269, 273, 310, 311], "broken": [29, 239], "gave": [29, 77, 143], "partial_sum": [29, 129, 352], "fatten": [29, 139, 276], "fatter": [29, 139, 142, 143, 170, 276], "coarsest": [29, 275, 276], "coarser": [29, 97, 142, 143, 144, 149, 276], "memori": [29, 45, 48, 57, 71, 77, 94, 122, 158, 171, 185, 237, 306, 331, 332, 349], "inf": [29, 47, 121, 275], "finest": 29, "is_fin": [29, 106, 139, 276], "test_meet": 29, "co2": [29, 276], "i_m": [29, 61, 62, 97, 98, 135, 144, 275, 342], "bullet": [29, 239, 318], "ribbon_decomposit": 29, "near_concaten": 29, "odot": [29, 149], "j_2": [29, 64, 88, 96, 99, 120, 139, 144, 341], "j_3": 29, "j_m": [29, 64], "peak": [29, 99, 170], "immedi": [29, 50, 89, 106, 107, 118, 158, 239, 349], "refinement_split": 29, "split": [29, 58, 106, 108, 117, 118, 134, 139, 156, 158, 180, 209, 212, 216, 275, 292, 298, 306, 356, 360, 363, 364], "j_p": 29, "refinement_splitting_length": 29, "nonzero": [29, 80, 89, 90, 106, 118, 120, 144, 190, 232, 269, 270, 299, 310, 340, 341], "j_k": [29, 64, 120, 338, 341], "choic": [29, 59, 97, 100, 106, 108, 120, 130, 139, 158, 170, 184, 185, 224, 229, 233, 235, 274, 338, 341, 349, 354, 357], "__add__": 29, "ncsf1": [29, 142, 143, 144], "compose_back": 29, "shuffle_product": [29, 139, 359], "j_l": [29, 359], "subsequ": [29, 70, 81, 99, 107, 129, 170, 184, 262, 269, 311, 342, 343, 354], "permit": [29, 67, 156, 182, 241, 349], "alph": 29, "w1": [29, 235, 239, 304, 349, 354, 359, 364], "gracefulli": [29, 276], "sup": [29, 275], "to_partit": [29, 33, 99, 144, 158, 275, 337], "lowermost": [29, 341], "cell": [29, 33, 57, 88, 96, 99, 106, 118, 120, 130, 137, 152, 156, 158, 160, 162, 170, 172, 184, 193, 214, 275, 297, 299, 303, 309, 310, 311, 337, 338, 341, 342, 343], "wll_gt": 29, "wll": 29, "short": [29, 58, 75, 87, 110, 120, 143, 144, 185, 222, 224, 233, 239, 289, 294, 300, 301, 312, 341, 342, 349, 369], "is_infinit": [29, 158, 309, 337], "integervector": [29, 101, 122, 125, 126, 127, 188, 233, 349], "similarli": [29, 56, 57, 60, 64, 87, 94, 107, 108, 118, 122, 125, 144, 145, 147, 148, 158, 180, 214, 222, 229, 234, 235, 238, 241, 261, 280, 292, 298, 303, 309, 310, 349, 357], "max_slop": [29, 118, 121, 122, 138, 158, 349], "incompat": [29, 84, 106, 139, 309], "min_part": [29, 121, 122, 125, 138, 158, 349], "min_length": [29, 121, 122, 138, 139, 158, 234, 349, 367], "max_length": [29, 106, 121, 122, 125, 138, 139, 158, 234, 238, 349, 352], "outer": [29, 55, 67, 97, 106, 125, 130, 138, 158, 159, 193, 222, 270, 278, 296, 299, 303, 309, 310, 337, 341], "clear": [29, 90, 93, 99, 143, 144, 158, 224, 273, 285, 299, 310, 341], "oo": [29, 88, 122, 158, 224, 226, 244, 341, 352, 353, 357], "min_slop": [29, 121, 122, 138, 158], "weakli": [29, 31, 99, 118, 120, 123, 126, 144, 152, 153, 158, 167, 168, 185, 213, 234, 273, 281, 286, 296, 297, 299, 301, 303, 309, 336, 337, 341, 354], "strang": [29, 170, 357], "themselv": [29, 36, 49, 106, 110, 125, 128, 154, 170, 174, 239, 241, 252, 272, 299, 306, 311, 338, 353], "amort": [29, 45], "integerlistslex": [29, 101, 121, 122, 123, 125, 158, 349], "from_cod": [29, 78], "from_desc": 29, "np": [29, 87, 94, 185], "compositions_al": 29, "compositions_constraint": 29, "compositions_n": [29, 30], "composition_iterator_fast": 29, "composition_sign": 30, "signedcomposit": [30, 101], "sc3": 30, "sc4": 30, "chri": [31, 142, 144, 286], "berg": [31, 87, 142, 143, 144, 286], "jeff": 31, "ferreira": 31, "composition_tableau": 31, "compositiontableau": [31, 143], "i_i": [31, 143, 183], "rectangular": [31, 68, 118, 167, 172, 209, 213, 215, 308, 341, 345], "is_standard": [31, 303, 310, 336, 341, 343], "pretti": [31, 35, 50, 55, 65, 68, 99, 114, 130, 151, 157, 162, 167, 172, 209, 216, 303, 309, 310, 336, 341, 343], "shape_composit": 31, "shape_partit": [31, 275], "compositiontableaux": [31, 141, 143], "max_entri": [31, 303, 310, 341], "compositiontableauxbacktrack": 31, "get_next_po": [31, 293], "ii": [31, 59, 78, 81, 90, 132, 136, 144, 185, 222, 223, 293, 309], "jj": [31, 107, 285, 293, 298], "compositiontableaux_al": 31, "compositiontableaux_shap": 31, "compositiontableaux_s": 31, "g_0": [32, 299], "g_1": [32, 299, 349], "g_k": 32, "lz2004": 32, "sphere": [32, 335], "ramifi": 32, "g0": 32, "g1": [32, 38, 81, 82, 106, 224, 318], "g2": [32, 38, 52, 53, 59, 66, 68, 81, 82, 106, 222, 224, 229, 256, 257, 264, 266, 270, 318], "426": 32, "is_connect": [32, 87, 106, 128, 185, 309], "euler_characterist": 32, "omit": [32, 59, 87, 97, 118, 158, 180, 222, 232, 310, 341], "constellation_class": 32, "braid_group_act": 32, "c13": 32, "c31": 32, "d13": 32, "d31": 32, "c121": 32, "c212": 32, "d121": 32, "d212": 32, "braid_group_orbit": 32, "num_vert": 32, "num_edg": 32, "connected_compon": [32, 58, 185], "surfac": 32, "g_i": [32, 78, 299], "genu": [32, 137, 171], "connected": 32, "return_map": [32, 228], "conjugaci": [32, 158, 170, 236, 298, 306, 357], "is_mut": 32, "mutable_copi": 32, "passport": 32, "profil": 32, "renumerot": 32, "c3": [32, 59, 185, 222, 228, 230, 248, 249, 271], "s5": [32, 170], "set_immut": [32, 137, 170], "switch": [32, 95, 116, 118, 122, 128, 156, 158, 170, 190, 207, 262, 272, 274, 310, 341], "j0": [32, 338], "j1": [32, 96, 273], "g_": [32, 108, 114], "_check": [32, 313, 317, 319, 320, 322, 323, 324, 326, 329, 330], "constellations_ld": 32, "trial": 32, "reject": 32, "const": 32, "constellations_p": 32, "frobeniu": [32, 143, 144, 158, 270, 281, 283, 289, 296, 297, 299, 301, 309], "p3": [32, 76, 97, 137, 159, 184, 185, 252, 254, 289, 299], "i1": [32, 89, 96, 252], "i2": [32, 52, 87, 96, 143, 237, 252, 299], "i3": [32, 159, 252], "irreducible_charact": [32, 236], "c1": [32, 38, 46, 106, 128, 137, 144, 222, 248, 285, 289, 354], "conjugacy_class_s": [32, 158, 299], "And": [32, 36, 79, 96, 128, 130, 144, 145, 178, 235, 236, 238, 239, 241, 264, 269, 273, 298, 299, 306, 331, 335, 349], "isomorphism_repres": 32, "240": [32, 83, 88, 122, 132, 239], "ir": [32, 273, 358], "perm_conjug": 32, "perm_invert": 32, "perm_sym_domain": 32, "perms_are_connect": 32, "perms_canonical_label": 32, "renumb": [32, 157, 178], "l0": [32, 185, 232, 233, 238, 268], "perms_canonical_labels_from": 32, "perms_sym_init": 32, "gg": [32, 38, 58, 78], "rim": [33, 158, 162], "ferrer": [33, 96, 118, 158, 162, 309, 341, 349], "ann": [33, 38, 49, 58, 67, 68, 81, 114, 130, 132, 139, 185, 208, 209, 213, 215, 229, 233, 271, 273, 298, 299, 357], "schill": [33, 38, 49, 58, 67, 68, 122, 130, 132, 139, 185, 208, 209, 213, 215, 224, 229, 233, 263, 271, 273, 286, 292, 298, 299], "zabrocki": [33, 97, 99, 130, 143, 144, 149, 152, 157, 278, 286, 298, 299, 300, 337], "latex": [33, 45, 50, 54, 61, 67, 97, 99, 100, 110, 118, 128, 130, 132, 137, 152, 155, 156, 158, 162, 170, 185, 193, 194, 208, 224, 233, 235, 239, 275, 303, 309, 310, 341, 343, 357], "affine_symmetric_group_act": 33, "w_1": [33, 55, 99, 106, 170, 276, 299, 301, 349, 354], "w_m": 33, "le": [33, 50, 53, 55, 58, 59, 81, 87, 93, 99, 106, 112, 128, 174, 178, 180, 184, 185, 186, 292, 298, 311, 340, 341, 343, 363], "w_j": [33, 58, 106, 112, 139, 354], "w_0": [33, 61, 62, 68, 108, 170, 224, 229, 231, 238, 274, 335], "_transposition_to_reduced_word": 33, "affine_symmetric_group_simple_act": 33, "a_k": [33, 72, 130, 143, 158, 159, 180, 185, 275, 310, 311, 341, 343, 354, 364], "outsid": [33, 78, 105, 158, 170, 235, 239, 272, 299, 309, 310, 345], "insid": [33, 57, 61, 89, 102, 127, 149, 156, 158, 162, 172, 184, 222, 224, 233, 272, 275, 292, 299, 309, 343, 345, 354, 358], "to_grassmannian": 33, "strong_cov": 33, "strong_down_list": 33, "strong_l": 33, "bruhat": [33, 38, 58, 61, 130, 170, 184, 185, 229, 233, 234, 237, 240, 341], "comparison": [33, 48, 57, 65, 88, 99, 102, 105, 106, 110, 128, 158, 170, 174, 184, 223, 233, 238, 299, 353], "from_kbounded_to_reduced_word": [33, 158], "from_kbounded_to_grassmannian": [33, 158], "weak_cov": [33, 118], "weak_l": 33, "kwarg": [33, 106, 138, 158, 174, 275, 276, 292, 366], "cores_length": 33, "from_partit": [33, 96], "cores_s": 33, "encyclopedia": [34, 81, 185, 311, 318, 349, 357, 364], "mention": [34, 118, 122, 222, 345], "degree_sequ": [34, 71], "affinecrystalfromclass": [35, 41, 55], "classical_cryst": [35, 270], "virtual": [35, 36, 55, 208, 210, 211, 212, 213, 263, 270, 318], "kirillovreshetikhincryst": [35, 55, 213, 215], "pr": [35, 239], "pr_invers": 35, "promotion_invers": [35, 55, 68, 341], "affinefromclassicalandpromot": 35, "classical_weight": [35, 209, 212, 216], "affinecrystalfromclassicalel": [35, 55], "affine_elt": 35, "retract": [35, 55, 57, 97, 127, 170, 231, 233, 270, 286, 292, 338], "classical_elt": 35, "affinecrystalfromclassicalandpromot": [35, 41, 55], "p_automorph": 35, "p_inverse_automorph": 35, "dynkin_nod": 35, "pmod": [35, 75, 78, 86, 90, 92, 93, 136, 158, 162], "f_0": [35, 37, 55, 143, 209, 212], "inverse_automorph": 35, "affinecrystalfromclassicalandpromotionel": [35, 55], "__call__": [35, 106, 121, 357], "govern": 35, "e0": [35, 55, 302], "f0": [35, 55], "epsilon0": [35, 55], "phi0": [35, 55], "_repr_": [35, 38, 57, 156, 231, 233, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "e_0": [35, 37, 54, 55, 209, 212], "e_": [35, 51, 55, 57, 68, 73, 118, 149, 178, 180, 181, 183, 185, 209, 222, 231, 233, 270, 280, 281, 284, 296, 297, 298, 299, 301, 338], "epsilon_0": [35, 209, 308], "phi_0": [35, 56, 209], "elementwrapp": [35, 36, 38, 46, 52, 54, 57, 58, 60, 66, 139], "e_i": [35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 97, 100, 118, 139, 143, 144, 160, 178, 180, 181, 183, 185, 209, 236, 299, 303], "epsilon": [35, 37, 38, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 106, 136, 160, 209, 212, 233, 239, 270, 273, 308, 338], "varepsilon_0": [35, 55, 209], "varphi_0": [35, 38, 55, 209], "kirillovreshetikhin": [35, 37, 38, 41, 45, 55, 56, 58, 209, 212, 213, 215, 233], "affine_factor": 36, "affinefactorizationcryst": 36, "ms2015": 36, "affinefactor": [36, 41], "hw": [36, 49, 50, 55, 58, 61, 62, 180, 212, 215], "is_highest_weight": [36, 49, 55, 58, 303], "gc": [36, 47, 60, 118, 137, 160], "gb": [36, 59, 160], "occur": [36, 50, 63, 75, 89, 106, 107, 113, 114, 122, 129, 137, 139, 144, 158, 170, 184, 185, 233, 236, 270, 273, 275, 276, 299, 306, 327, 334, 352, 354, 360], "s0": [36, 130, 229, 230, 232, 271, 338, 349], "bracket": [36, 49, 110, 111, 118, 154, 208, 299, 349, 356], "to_tableau": [36, 52, 55, 68, 114, 165, 168, 172, 209, 310, 341], "minor": [36, 223, 335, 341], "edelman": [36, 273], "factorizationtotableaux": 36, "scaling_factor": [36, 212, 263], "crystalmorph": [36, 55], "is_embed": [36, 55], "_tableaux_isomorph": 36, "is_surject": [36, 55], "w0": [36, 170, 229, 231, 237, 238, 271, 274, 335, 364], "affinizationofcryst": 37, "mathfrak": [37, 40, 54, 56, 57, 58, 60, 64, 66, 67, 68, 143, 160, 185, 186, 212, 213, 232, 274], "moodi": [37, 56, 58, 64, 158, 162, 213, 232, 238, 262], "u_q": [37, 54, 56, 58, 66, 160, 212, 213], "aff": [37, 55], "mid": [37, 56, 61, 106, 137, 143, 149, 158, 178, 180, 183, 208, 212, 213, 281, 296, 297, 299, 301], "wt": [37, 38, 41, 45, 47, 50, 51, 53, 56, 58, 59, 60, 64, 66, 67, 68, 114, 210, 211, 230, 270, 341, 343], "kt": [37, 75, 92, 208, 338], "tensorproductofkirillovreshetikhintableaux": [37, 196, 198, 202, 204, 206, 209, 213, 215, 216], "affinizationof": [37, 41], "hk2002": [37, 56, 64], "chapter": [37, 77, 81, 83, 106, 108, 128, 144, 169, 170, 190, 224, 232, 239, 268, 273, 285, 298, 309, 349, 354], "mg": [37, 38, 47, 50, 53, 54, 55, 56, 58, 59, 60, 64, 66, 160, 209, 210, 211, 212], "module_gener": [37, 38, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 66, 67, 68, 197, 209, 212, 213, 215, 216, 303], "varepsilon_i": [37, 38, 41, 45, 47, 50, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 160, 209], "f_string": [37, 38, 47, 50, 53, 54, 55, 56, 58, 59, 61, 62, 64, 66, 68, 160, 209, 210, 211, 212, 239], "varphi_i": [37, 38, 41, 45, 47, 50, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 160, 209], "null": [37, 98, 231, 233, 238, 239, 261, 269], "brant": 38, "jone": 38, "2008": [38, 76, 77, 87, 99, 131, 137, 149, 157, 170, 185, 233, 268, 271, 273, 286, 318, 353, 357, 358, 364, 367], "arthur": [38, 59, 310], "lubovski": [38, 59, 310], "rewritten": [38, 106, 122, 170, 299], "2016": [38, 58, 63, 75, 118, 129, 172, 190, 341, 342, 343], "06": [38, 63, 105, 158, 162, 175, 177, 185, 186, 220, 228, 239, 273, 298, 299, 306, 331, 334, 357], "thank": [38, 76, 90, 99, 112, 185, 233, 349], "bori": 38, "alcove_path": 38, "crystalofalcovepath": 38, "starting_weight": [38, 58], "highest_weight_cryst": [38, 51], "straight": [38, 58, 97, 130, 158, 299, 341, 349], "ll": [38, 129, 325], "pseudo": [38, 178, 180, 354], "demazur": [38, 224, 233, 238, 270, 335], "c_1": [38, 124, 125, 128, 139, 154, 170, 185, 222, 224, 238, 275, 306, 349, 354], "c_2": [38, 48, 61, 81, 128, 154, 170, 185, 222, 224, 228, 232, 233, 270, 275, 306], "c_i": [38, 158, 160, 170, 224, 263, 276, 354, 369], "omega_i": [38, 96, 230, 237], "stembridg": [38, 45, 112, 224, 235, 282, 287], "axiom": [38, 45, 108, 109], "figur": [38, 100, 105, 118, 132, 156, 224, 235, 273, 275, 307, 349], "lp2008": 38, "alcovepath": [38, 41, 43, 46, 51], "integer_sequ": 38, "lspath": [38, 41, 43, 44, 46, 50, 51, 55, 58, 59, 160, 213, 239], "explicit": [38, 87, 89, 109, 111, 117, 137, 142, 144, 145, 301, 349, 360], "rootsystem": [38, 46, 47, 50, 51, 56, 58, 59, 61, 67, 68, 188, 208, 209, 210, 212, 217, 218, 224, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 245, 248, 250, 252, 254, 256, 261, 265, 267, 268, 269, 270, 271], "weight_lattic": [38, 46, 47, 50, 51, 55, 56, 58, 59, 61, 67, 68, 188, 208, 210, 212, 217, 230, 232, 233, 235, 238, 239, 241, 261, 268, 269], "fundamental_weight": [38, 46, 47, 50, 51, 55, 56, 58, 59, 61, 67, 68, 209, 210, 212, 213, 218, 222, 224, 232, 233, 235, 237, 238, 239, 241, 242, 245, 248, 250, 252, 254, 256, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271], "lambda_chain": 38, "a_o": 38, "omega_1": [38, 224], "chain": [38, 63, 106, 112, 118, 128, 130, 137, 168, 178, 180, 181, 184, 185, 220, 222, 303, 310, 341, 343, 358, 361, 364], "pdf": [38, 75, 77, 78, 89, 99, 132, 144, 157, 178, 194, 273, 311], "is_admiss": 38, "14143": 38, "minu": [38, 49, 55, 65, 99, 106, 130, 158, 170, 185, 231, 234, 272, 292, 299, 341, 343, 354, 358, 369], "tensorproduct": [38, 41, 45, 47, 48, 52, 53, 58, 67, 68, 213, 215, 233], "delete_edg": 38, "crystalofalcovepathsel": 38, "admiss": [38, 50, 87, 129, 208], "reach": [38, 79, 99, 105, 106, 122, 158, 160, 209, 268, 273, 309, 341, 352, 360], "slower": [38, 171, 185], "reachabl": [38, 106, 346], "rootswithheight": 38, "root_system": [38, 51, 54, 55, 58, 63, 110, 112, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "incorpor": [38, 70], "diagnost": 38, "beta_1": [38, 137, 141, 281, 296, 297, 299, 301], "beta_2": [38, 137, 141, 281, 296, 297, 299, 301], "beta_k": 38, "rightarrow": [38, 128, 137, 222, 238, 289, 298, 332, 354, 355, 357, 364], "_root_lattic": 38, "positive_root": [38, 235, 237, 239, 240, 242, 245, 248, 250, 252, 254, 256, 265, 267, 270, 271], "r1": [38, 91, 137, 229, 270], "r3": [38, 229], "highest_weight_vector": [38, 40, 45, 47, 53, 54, 56, 58, 59, 60, 61, 62, 66, 67, 68, 160, 210, 211, 239], "overrid": [38, 58, 107, 110, 122, 128, 154, 170, 185, 218, 224, 227, 231, 269, 272, 298, 354], "b_2": [38, 48, 64, 68, 75, 83, 89, 128, 139, 157, 180, 222, 235, 236, 238, 270, 273, 275, 276], "infinitycrystalofalcovepath": 38, "h_i": [38, 41, 47, 50, 53, 58, 59, 60, 64, 66, 89, 229, 267, 284, 292, 298, 299, 340], "rho": [38, 53, 58, 97, 114, 118, 143, 144, 147, 149, 185, 231, 232, 233, 235, 239, 240, 252, 254, 268, 270, 271, 275, 296, 298, 299, 339, 364], "fstr": 38, "al": [38, 58, 68, 139, 141, 144, 149, 211, 218, 239, 267, 268, 311, 339], "weight_lattice_r": [38, 46, 47, 53, 56, 58, 60, 61, 67, 210, 211, 213, 233, 235, 261, 268], "simple_root": [38, 53, 58, 211, 218, 224, 231, 233, 235, 236, 238, 239, 240, 241, 242, 245, 248, 250, 252, 254, 256, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271], "from_vector": [38, 110, 239, 240, 268], "rootswithheightel": 38, "vee": [38, 41, 45, 47, 58, 64, 67, 149, 170, 178, 180, 183, 212, 224, 229, 230, 231, 232, 233, 235, 238, 239, 240, 261, 268], "rl": [38, 239], "root_lattic": [38, 50, 208, 229, 232, 235, 238, 239, 240, 241, 268, 271], "compare_graph": 38, "node1": [38, 327], "node2": [38, 327], "themat": [39, 217, 222, 268, 270, 349], "highestweightcryst": [39, 51, 53], "finitecryst": 39, "classicalcryst": [39, 270], "regularcryst": 39, "regularsupercryst": 39, "bkk_crystal": [40, 68], "crystalofbkktableaux": 40, "crystalofword": [40, 53, 67, 209], "bkk2000": [40, 57, 67, 68], "gl": [40, 54, 57, 58, 67, 76, 110, 132, 218, 222, 229, 230, 236, 237, 242, 268, 270, 299, 349], "width": [40, 55, 88, 99, 112, 114, 128, 152, 154, 155, 156, 158, 166, 184, 185, 193, 202, 208, 209, 213, 214, 294, 307, 354, 358], "crystalofbkktableauxel": [40, 68], "genuine_highest_weight_vector": 40, "genuin": 40, "fake": [40, 57, 117, 236], "annihil": [40, 224, 261], "bigger": [40, 113, 128, 130, 136, 170, 301, 341, 343], "datum": [41, 59, 61, 62, 63, 112, 224], "colon": [41, 47, 50, 53, 58, 64, 66, 149, 179, 222, 270], "cup": [41, 45, 71, 75, 78, 81, 86, 87, 89, 90, 97, 99, 137, 139, 148, 149, 185, 223, 275, 304, 354, 357], "e_ib": 41, "f_ib": 41, "fastranktwo": [41, 45, 48], "fullycommutativestablegrothendieck": [41, 49], "generalizedyoungwal": [41, 43, 50, 51, 59, 60, 66, 67, 68], "highestweight": [41, 51, 55], "kacmodul": [41, 54], "kleshchevpartit": [41, 160], "kyotopathmodel": [41, 56], "nakajimamonomi": [41, 43, 51, 59, 66], "oddnegativeroot": [41, 54], "projectedlevelzerolspath": [41, 58, 233], "riggedconfigur": [41, 43, 44, 51, 55, 66, 196, 197, 198, 202, 204, 206, 210, 211, 212, 213, 214, 215], "shiftedprimedtableaux": [41, 303], "spinsplu": [41, 65], "spinsminu": [41, 65], "subcatalog": 41, "directsum": [41, 46], "elementary_cryst": [42, 47], "mvpolytop": [43, 61, 239], "polyhedralr": [43, 64], "kashiwaranakashimatableaux": [44, 55, 209], "kirillovreshetikhintableaux": [44, 55, 209, 213, 215, 216], "emptyset": [45, 57, 81, 94, 155, 185, 209, 212, 299, 301, 338, 349], "automaton": [45, 107, 360], "context": [45, 143, 144, 156, 158, 185, 268, 272, 306, 332, 343, 349], "_i": [45, 56, 57, 60, 66, 68, 80, 81, 82, 142, 143, 144, 149, 158, 186, 223, 224, 228, 238, 263, 299], "ste2003": 45, "a_5": [45, 56, 222], "lambda_1": [45, 56, 57, 82, 96, 110, 143, 158, 161, 186, 209, 224, 232, 235, 238, 268, 269, 270, 281, 291, 292, 296, 297, 298, 299, 301, 306, 309, 310, 341], "elabor": 45, "tab": [45, 67, 74, 78, 79, 86, 92, 107, 118, 164, 173, 184, 188, 298, 303, 311, 338, 341, 343, 351, 361, 364], "crude": 45, "dot2tex": [45, 158, 181, 185], "nice": [45, 78, 94, 100, 106, 143, 235, 239, 264, 311, 357], "pdflatex": 45, "graphviz": [45, 181, 185], "set_latex_opt": [45, 61, 99, 128, 152, 275], "color_by_label": [45, 235, 271], "black": [45, 61, 99, 100, 113, 118, 128, 137, 152, 156, 158, 185, 224, 235, 239, 275, 307, 308, 345, 357], "blue": [45, 93, 96, 99, 100, 106, 118, 128, 132, 152, 156, 158, 181, 184, 185, 224, 235, 239, 275, 307, 308, 345, 358], "metapost": [45, 48], "overview": [45, 217, 235, 241], "vocabulari": 45, "layout": [45, 185, 235, 357, 360], "instruct": [45, 78, 131, 229], "restrictionofcryst": 45, "grew": 45, "lib": 45, "crystalbacktrack": 45, "nf": 45, "cost": [45, 86, 103, 185, 332, 349], "principl": [45, 118, 122, 139, 155, 224, 233, 349], "simplic": [45, 58, 106, 210, 211, 235, 357], "ancestor": [45, 360], "moral": 45, "walk": [45, 99, 229, 235, 239, 268], "e_j": [45, 47, 178, 236], "cb": [45, 357, 367], "1617": 45, "direct_sum": 46, "directsumofcryst": 46, "keepkei": 46, "b_0": [46, 55, 56, 66, 89, 90, 107, 304, 364], "b_k": [46, 67, 83, 139, 143, 158, 159, 180, 273, 276, 311], "oplu": [46, 50, 54, 306], "b_i": [46, 47, 55, 64, 66, 75, 83, 89, 90, 97, 139, 157, 158, 180, 239, 273], "laz": 46, "laq": 46, "weight_spac": [46, 58, 59, 110, 209, 224, 233, 234, 235, 238, 239, 241, 261, 268, 269], "t_0": [47, 224, 233, 238], "neutral": [47, 178, 180, 235, 316], "cong": [47, 54, 55, 67, 95, 136, 178, 180, 209, 229], "verma": 47, "longrightarrow": [47, 50, 53, 66], "psi_": [47, 64, 142, 143], "psi_i": [47, 64, 66, 144], "infinitycrystaloftableaux": [47, 53], "tensorproductofcryst": [47, 51, 56, 64, 67], "ben": [47, 50, 53, 59, 66, 67, 68, 197, 223, 233, 301], "salisburi": [47, 50, 53, 59, 66, 67, 68, 197, 223], "ka1993": [47, 64, 66], "nz1997": [47, 64], "abstractsinglecrystalel": 47, "componentcryst": 47, "c5": [47, 59, 349], "f4": [47, 110, 112, 222, 223, 224, 226, 228, 232, 236, 237, 254, 255, 262, 270], "e6": [47, 218, 222, 224, 230, 252, 253, 270], "elementarycryst": [47, 64, 66], "varphi_j": 47, "varepsilon_j": 47, "assert": [47, 78, 81, 87, 89, 90, 91, 114, 125, 137, 158, 174, 212, 224, 231, 233, 238, 261, 275, 334], "hookrightarrow": [47, 204, 208, 209, 224, 263], "foundat": [47, 235], "172": [47, 88, 232], "e_str": [47, 53, 54, 55, 62], "171": [47, 78, 311], "343": [47, 186, 311, 349, 352], "385": [47, 78, 311], "rcrystal": 47, "subcryst": [47, 50, 51, 55, 57, 59, 60, 67, 160, 197, 211, 303], "gt": [47, 58, 114, 128, 168, 185, 347], "cartanmatrix": [47, 212, 217, 223, 224, 228, 236, 237, 271], "tcrystal": 47, "ambient_spac": [47, 54, 61, 218, 224, 230, 233, 235, 238, 239, 241, 242, 245, 248, 250, 252, 254, 256, 261, 262, 264, 265, 266, 267, 268, 270, 271], "tla": 47, "tp": [47, 53, 67, 130, 209, 215], "fast_cryst": 48, "fastcryst": 48, "lookup": [48, 189, 280], "crystalsoftableaux": 48, "slow": [48, 77, 83, 87, 143, 158, 170, 171, 185, 229, 235, 299, 307, 357], "l1": [48, 63, 105, 137, 180, 181, 304, 332, 364], "l2": [48, 63, 137, 154, 170, 180, 181, 304, 332, 364], "theberenstein": 48, "bzl": 48, "dual_str": [48, 224], "cmp_element": 48, "jianp": [49, 273], "pan": [49, 273], "wencin": [49, 273], "poh": [49, 273], "fully_commutative_stable_grothendieck": [49, 273], "decreasingheckefactor": [49, 273], "max_valu": 49, "excess": [49, 311], "to_increasing_hecke_biword": 49, "biword": [49, 118, 273], "to_word": [49, 118, 165, 194, 310, 341, 343], "fullycommutativestablegrothendieckcryst": 49, "mpps2020": [49, 273], "a_3": [49, 106, 112, 127, 185, 222, 224, 231, 232, 235, 310, 341], "account": [49, 94, 100, 106, 231, 233, 261], "roesler": 50, "ks2010": 50, "klrs2016": 50, "generalized_young_wal": 50, "crystalofgeneralizedyoungwal": 50, "infinitycrystalofgeneralizedyoungwal": 50, "in_highest_weight_cryst": 50, "yla": 50, "yy": [50, 357, 367], "yyi": 50, "max_depth": [50, 51, 59, 60, 160, 197, 211], "yw": 50, "cw": 50, "gw": 50, "crystalofgeneralizedyoungwallsel": 50, "hwy": 50, "gyw": 50, "bigoplus_": [50, 55], "lambda_i": [50, 53, 55, 56, 59, 61, 67, 96, 143, 149, 158, 218, 232, 241, 261, 263, 267, 268, 269, 281, 284, 296, 297, 299, 301, 309, 310, 341], "a_i": [50, 55, 60, 67, 72, 81, 89, 97, 99, 136, 138, 158, 161, 180, 209, 224, 239, 273, 275, 305, 341, 343, 345, 354], "site": 50, "generate_signatur": 50, "whitespac": [50, 106], "cancel": [50, 60, 67], "unreduc": 50, "lambda_": [50, 53, 55, 56, 61, 65, 96, 143, 158, 160, 161, 162, 281, 296, 297, 298, 299, 301, 310, 318, 341, 343], "a_j": [50, 89, 99, 106, 136, 149, 275, 305, 306], "equiv": [50, 75, 78, 86, 89, 90, 92, 93], "i_p": [50, 73, 142, 170, 179], "bmod": 50, "h_0": [50, 229, 299, 301, 309], "h_1": [50, 87, 94, 289, 299, 340], "h_n": [50, 112, 170, 281, 283, 284, 290, 296, 297, 298, 299, 301, 340], "latex_larg": 50, "tikz": [50, 97, 99, 100, 106, 128, 132, 152, 156, 275, 358], "tikzpictur": [50, 61, 97, 100, 106], "baselin": [50, 97], "scale": [50, 97, 99, 100, 128, 142, 148, 152, 156, 214, 233, 235, 263, 270, 275, 289, 299, 335], "foreach": 50, "font": [50, 335], "scriptsiz": 50, "draw": [50, 61, 97, 99, 100, 113, 120, 122, 151, 155, 156, 169, 170, 180, 184, 185, 239, 275, 311, 341, 346, 349, 357, 358], "thick": [50, 97, 100, 235, 307, 335, 345, 354, 358], "number_of_part": 50, "mathscr": 50, "kostant": 50, "raw_signatur": 50, "slot": 50, "legal": [50, 132, 156], "sum_of_weighted_row_length": 50, "_0": [50, 56, 107, 186, 283], "stack": [50, 98, 170, 172], "board": [50, 275], "locat": [50, 130, 156, 170, 185, 214, 235, 236, 273, 337, 341, 349, 350, 360], "yinf": 50, "finitedimensionalhighestweightcrystal_type": 51, "dominant_weight": 51, "setup": 51, "column_cryst": 51, "__init__": [51, 68, 99, 122, 128, 152, 298], "tensorproductofregularcrystalsel": [51, 56, 67, 68, 209, 216], "finitedimensionalhighestweightcrystal_typee6": 51, "e_6": [51, 55, 57, 208, 222, 224, 233, 263, 270], "b6": [51, 84], "finitedimensionalhighestweightcrystal_typee7": 51, "e_7": [51, 55, 57, 208, 222, 224, 270], "b7": [51, 112], "kn": [51, 55, 89, 91, 209, 215], "2925": 51, "351": [51, 241], "912": 51, "8645": 51, "365750": 51, "27664": 51, "1539": [51, 232, 299], "induced_structur": 52, "inducedcryst": 52, "from_cryst": 52, "partitionsinbox": [52, 158], "phi_inv": [52, 354], "d2": [52, 72, 81, 96, 97, 222, 224, 250], "phi2": 52, "phi2_inv": 52, "codomain": [52, 100, 142, 143, 144, 145, 161, 298, 357, 367], "although": [52, 87, 89, 95, 106, 118, 136, 143, 144, 222, 252, 273, 298, 342, 349], "rsk_invers": [52, 118, 273], "realli": [52, 97, 99, 110, 118, 222, 224, 233, 235, 240, 241, 261, 269, 271, 290, 338, 341, 349, 364], "inducedfromcryst": 52, "psi": [52, 60, 64, 108, 142, 143, 144, 145, 170, 197, 275, 281, 296, 297, 299, 301], "ret": [52, 81, 211, 212, 213, 216, 273], "psi_inv": 52, "infinity_cryst": 53, "dualinfinityqueercrystaloftableaux": 53, "infinityqueercrystaloftableauxel": [53, 68], "hong": [53, 228], "hl2008": 53, "nakashima": [53, 55, 65, 67, 209, 215], "kn1994": [53, 57, 67], "misra": [53, 343], "km1994": 53, "english": [53, 96, 118, 120, 130, 155, 158, 162, 170, 193, 194, 209, 210, 211, 213, 215, 303, 309, 310, 336, 341, 343], "preceq": [53, 125, 144], "few": [53, 81, 97, 136, 137, 149, 209, 294, 299, 300, 301, 332, 349, 357], "emb": [53, 108, 128, 209, 222, 239, 268], "crystal_test": 53, "crystal_morph": [53, 197], "infinitycrystaloftableauxel": [53, 68], "imath": [53, 209], "d5": [53, 96, 180, 222, 224, 228, 230, 250, 270], "a3": [53, 59, 63, 68, 75, 112, 131, 159, 222, 228, 229, 230, 231, 236, 237, 241, 242, 243, 252, 268, 270, 311], "reduced_form": 53, "placehold": 53, "bn2010": 53, "ls2012": 53, "seg": [53, 341], "segment": [53, 58, 60, 96, 99, 100, 170, 341], "vari": [53, 100, 338], "alpha_": [53, 61, 150, 158, 162, 224, 235, 268, 299, 335], "advantag": [53, 67, 68, 118, 145, 270, 354], "therefor": [53, 56, 57, 64, 106, 107, 112, 118, 122, 143, 144, 154, 158, 162, 209, 215, 224, 229, 230, 232, 235, 239, 241, 261, 269, 272, 290, 298, 301, 309, 343, 349, 354], "lambda_n": [53, 55, 56, 65, 143, 209, 309], "c7": [53, 222], "d4": [53, 59, 62, 66, 68, 96, 180, 222, 224, 230, 250, 251, 270], "infinitycrystaloftableauxtyp": 53, "infinitycrystaloftableauxelementtyp": [53, 68], "kac_modul": 54, "crystalofkacmodul": 54, "otimes_l": 54, "admit": [54, 102, 122, 143, 175, 178, 180, 185, 213, 222, 229, 231, 233, 241, 268, 299, 303, 349], "crystalofoddnegativeroot": 54, "kwon2012": 54, "576": [54, 81, 88], "positive_odd_root": [54, 267], "genuine_lowest_weight_vector": 54, "lowest_weight_vector": [54, 59], "is_domin": [54, 239, 267, 269], "latex_du": 54, "lr": [54, 155, 168, 294, 300, 302, 308], "multicolumn": [54, 155], "hspace": [54, 128, 155, 208], "6ex": [54, 155], "raisebox": [54, 155], "3ex": [54, 106, 155], "cline": [54, 155], "to_dual_tableau": 54, "kirillov_reshetikhin": [55, 58, 213, 215], "ambientretractmap": 55, "pdict_inv": 55, "similarity_factor_domain": 55, "tild": [55, 112, 131, 208, 229, 230, 239, 289, 354], "crystaldiagramautomorph": 55, "on_hw": 55, "interchang": [55, 118, 181, 239, 241, 311], "is_strict": [55, 114], "crystaloftableaux_e7": 55, "crystaloftableaux": [55, 67, 188, 270], "lambda_7": [55, 57], "kr_type_e7": 55, "kr_type_a": 55, "kirillovreshetikhincrystalfrompromot": 55, "classical_decomposit": [55, 209], "dynkin_diagram_automorph": 55, "kr_type_a2": 55, "kirillovreshetikhingenericcryst": 55, "kr_type_box": 55, "a_4": [55, 106, 222, 224], "kdual": 55, "gdual": 55, "gnew": 55, "kr_type_a2el": 55, "ambient_cryst": 55, "ambient_dict_pm_diagram": 55, "ambient_highest_weight_dict": 55, "subdiagram": [55, 223], "rectangl": [55, 99, 118, 158, 167, 184, 208, 209, 213, 215, 344, 345, 354], "domino": [55, 118, 209], "from_ambient_cryst": 55, "to_ambient_cryst": 55, "highest_weight_dict": 55, "lambda_r": [55, 58, 143, 161, 209, 341, 342], "kirillovreshetikhingenericcrystalel": 55, "kr_type_a2_with_categori": 55, "pull": [55, 112, 136, 148, 209, 212], "varepsilon_1": 55, "varphi_1": [55, 357], "kr_type_bn": 55, "kr_type_bnel": 55, "similarity_factor": 55, "kr_type_bn_with_categori": 55, "kr_type_c": 55, "kr_type_cel": 55, "kr_type_c_with_categori": 55, "kr_type_cn": 55, "kr_type_cnel": 55, "from_highest_weight_vector_to_pm_diagram": 55, "from_pm_diagram_to_highest_weight_vector": 55, "pmdiagram": 55, "kr_type_cn_with_categori": 55, "kr_type_d_tri1": 55, "kmoy2007": 55, "from_coordin": 55, "coord": [55, 345], "kr_type_dn_twist": 55, "kr_type_dn_twistedel": 55, "kr_type_dn_twisted_with_categori": 55, "kr_type_e6": 55, "kr_type_e6_with_categori": 55, "affine_weight": 55, "ka1990": [55, 229, 232], "automorphism_on_affine_weight": 55, "item": [55, 110, 116, 132, 137, 142, 171, 185, 208, 235, 287, 321, 345, 358, 360, 368], "highest_weight_dict_inv": 55, "hw_auxiliari": 55, "twice": [55, 81, 83, 90, 136, 139, 157, 180, 185, 234, 335], "p_inv": 55, "promotion_on_highest_weight_vector": 55, "dic": 55, "promotion_on_highest_weight_vectors_funct": 55, "a7_decomposit": 55, "a_7": [55, 222, 239, 268], "m_4": 55, "m_5": 55, "m_6": 55, "m_7": 55, "lambda_6": [55, 57], "lambda_4": 55, "lambda_2": [55, 82, 143, 158, 161, 224, 232, 235, 270, 281, 291, 296, 297, 298, 299, 301, 306, 309, 310, 341], "from_a7_cryst": 55, "defn": [55, 143], "to_a7_cryst": 55, "decompos": [55, 81, 99, 108, 109, 128, 156, 178, 180, 222, 270, 312, 341, 342, 353], "kr_type_boxel": 55, "kr_type_box_with_categori": 55, "kr_type_spin": 55, "w_n": [55, 99, 106, 143, 170, 276, 299, 301, 354], "w_2": [55, 106, 170, 276, 299, 301, 349, 354], "vice": [55, 128, 129, 142, 158, 180, 185, 234, 299], "versa": [55, 128, 129, 142, 158, 180, 185, 234, 299], "promotion_on_highest_weight_vectors_invers": 55, "prom": 55, "prom_inv": 55, "kr_type_vert": 55, "omega_r": 55, "shi2002": 55, "sch2008": 55, "js2010": 55, "fos2009": [55, 263], "kirillovreshetkihintableaux": 55, "reshetkihin": 55, "rc": [55, 66, 196, 197, 198, 202, 204, 206, 210, 211, 212, 213, 214, 215, 216], "kr_type_vertical_with_categori": 55, "los2012": 55, "kirillovreshetikhincrystalfromlspath": 55, "crystaloflspath": [55, 58], "kirillovreshetikhincrystalfrompromotionel": 55, "classically_highest_weight_vector": [55, 58, 213], "kirillov_reshetikhin_tableaux": 55, "krc": [55, 209, 212], "lusztig_involut": [55, 212, 216], "to_kirillov_reshetikhin_tableau": 55, "kirillovreshetikhintableauxel": [55, 209, 216], "tableaux_all_with_categori": [55, 68, 209], "pm_diagram": 55, "from_shap": 55, "x_n": [55, 106, 144, 149, 185, 224, 236, 244, 246, 262, 264, 266, 274, 340, 354, 360, 364], "a_0": [55, 99, 185, 233, 261, 269, 304, 311, 364], "b_1": [55, 62, 64, 67, 68, 75, 83, 89, 90, 106, 128, 139, 157, 158, 180, 222, 224, 238, 273, 275, 276], "intermedi": [55, 83, 95, 96, 106, 107, 130, 131, 222, 236, 349], "heights_of_addable_plu": 55, "addabl": [55, 160, 299, 337, 341, 343], "heights_of_minu": 55, "inner_shap": [55, 130, 194, 310], "intermediate_shap": [55, 130], "pluss": 55, "outer_shap": [55, 130, 194, 310], "horizontal_dominoes_remov": 55, "partitions_in_box": 55, "vertical_dominoes_remov": 55, "kyoto_path_model": 56, "_l": 56, "central": [56, 97, 106, 158, 180, 229, 230, 261, 296, 298, 299, 306, 311, 337, 338, 349], "lambda_0": [56, 96, 143, 158, 160, 224, 238, 261, 268, 269], "varphi": [56, 58, 106, 357, 364], "varepsilon": [56, 58, 106, 160], "phi_n": [56, 143, 144], "bigotimes_": [56, 64], "d_3": [56, 72, 96, 222, 224, 364], "finite_tensor_product": [56, 64], "bkkletter": 57, "classicalcrystaloflett": 57, "element_print_styl": 57, "intens": [57, 362], "cmp": 57, "lt_element": [57, 65], "classicalcrystalofletterswrap": 57, "e_8": [57, 208, 222, 224, 235], "f_4": [57, 208, 222, 224, 254, 262, 263, 270], "auxiliari": [57, 67, 171, 185, 270, 360], "248": [57, 78, 81], "crystalofbkklett": 57, "supercryst": [57, 67], "crystaloflett": [57, 65], "crystalofspin": [57, 65], "fit": [57, 118, 158, 178, 185, 235, 349, 353], "abcdefghijklmnopqrstuvwxyz": 57, "crystalofqueerlett": 57, "queer": [57, 67, 68], "w_i": [57, 60, 68, 99, 126, 139, 170, 276, 299, 301, 354], "gjk": [57, 67, 68], "queerletter_el": 57, "crystal_of_letters_type_a_el": 57, "crystal_of_letters_type_b_el": 57, "crystal_of_letters_type_c_el": 57, "crystal_of_letters_type_d_el": 57, "crystal_of_letters_type_e6_el": 57, "lettertupl": 57, "crystal_of_letters_type_e6_element_du": 57, "crystal_of_letters_type_e7_el": 57, "crystal_of_letters_type_g_el": 57, "emptylett": 57, "thought": [57, 75, 99, 114, 158, 235, 298, 343], "deleg": 57, "__lt__": [57, 178], "parent1": 57, "parent2": 57, "l11": 57, "l12": 57, "l21": 57, "l22": 57, "letterwrap": 57, "shimozono": [58, 96, 208, 213, 224, 229, 230, 233, 238, 263, 273, 286, 292, 299, 300], "crystalofprojectedlevelzerolspath": 58, "infinitycrystaloflspath": 58, "littelmann_path": 58, "starting_weight_par": 58, "piecewis": [58, 158, 239], "your": [58, 75, 86, 87, 106, 138, 154, 160, 162, 185, 222, 235, 298, 338, 349], "compress": [58, 84], "parallel": [58, 78, 90, 92, 101, 134, 170, 185, 235, 332, 345], "dualiz": 58, "to_string_end": 58, "length_onli": 58, "endpoint": [58, 61, 113, 239, 344], "reflect_step": 58, "which_step": 58, "split_step": 58, "kirillovreshetikhinfromlspath": 58, "k1": [58, 99, 107, 152, 213, 215, 239, 268], "energy_funct": 58, "energi": [58, 233, 308], "mathbb": [58, 90, 106, 143, 158, 180, 349, 355], "sigma_0": [58, 311, 364], "sigma_1": [58, 143, 311, 341, 364], "dotsm": 58, "stackrel": 58, "beta_": [58, 141, 281, 296, 297, 299, 301], "leftarrow": [58, 128, 273, 289], "w_k": [58, 61, 139, 268, 299], "lnsss2013": 58, "role": [58, 158, 162, 262, 342, 349], "doubl": [58, 65, 106, 143, 169, 170, 178, 180, 184, 185, 204, 209, 212, 222, 231, 233, 238, 303, 311, 335, 354], "scalar_factor": 58, "nu_": [58, 338], "sigma_2": [58, 311, 341], "weyl_group_represent": 58, "nu_u": 58, "zz_": [58, 59, 60, 213, 223, 276], "maximal_vector": 58, "one_dimensional_configuration_sum": [58, 233], "group_compon": 58, "chamber": [58, 208, 231, 239, 270], "lz2011": 58, "f_seq": 58, "pi_": [58, 99, 120, 141, 144, 181, 185, 338, 341], "positively_parallel_weight": 58, "y_": [59, 110, 231, 233, 238, 268], "boldsymbol": 59, "widehat": [59, 60, 160, 338], "ge0": [59, 369], "k_f": 59, "k_e": 59, "e_im": 59, "f_im": 59, "kks2007": 59, "ka2003": 59, "monomial_cryst": 59, "crystalofnakajimamonomi": 59, "infinitycrystalofnakajimamonomi": 59, "gm": 59, "sm": [59, 149], "sb": [59, 83, 129, 354], "crystalofnakajimamonomialsel": 59, "monomial_crystalsnakajimamonomi": 59, "e8": [59, 112, 218, 222, 235, 252, 253, 270], "set_vari": 59, "yg": 59, "bg": 59, "get_vari": 59, "lw": [59, 61, 212, 356], "k_1": [59, 81, 86, 99, 125, 142, 170, 186, 239, 268, 273, 310, 341], "y_1": [59, 185], "i_t": 59, "k_t": [59, 273], "y_t": 59, "weight_in_root_lattic": 59, "infinitycrystalofmultiseg": 60, "bz": 60, "jl2009": 60, "head": [60, 130, 138, 158], "simplifi": [60, 63, 71, 106, 126, 349, 357], "tail": [60, 122, 184], "formal": [60, 89, 94, 96, 107, 118, 129, 144, 145, 157, 161, 190, 224, 233, 240, 269, 272, 298, 299, 301, 306, 318, 338, 349], "Such": [60, 89, 90, 96, 102, 106, 127, 166, 223, 235, 241, 342, 345, 349], "aperiod": [60, 106, 354], "varnoth": [60, 120, 341], "ell_f": 60, "attain": [60, 113], "min_": [60, 178], "ell_": [60, 141], "ajl2011": 60, "ra": 60, "r_i": [60, 80, 82, 94, 119, 125, 143, 158, 160, 212, 216, 342, 369], "sl": [60, 160, 218, 222, 232, 268, 270, 357], "against": [60, 178, 213, 223, 233], "ltv1999": 60, "dinakar": [61, 62, 63, 220], "muthiah": [61, 62, 63, 220], "mv_polytop": [61, 239], "lusztig_datum": [61, 62, 63], "long_word": [61, 62, 63], "pbwcrystalel": [61, 62], "anim": [61, 357, 358], "reflection_hyperplan": [61, 235, 236, 239], "bounding_box": [61, 235, 239, 345], "frame": [61, 235, 345, 358], "plot_mv_polytop": [61, 239], "circle_s": [61, 239], "wirefram": [61, 235, 239], "purpl": [61, 158, 235, 357, 358], "ax": [61, 83, 100, 179, 235, 307, 345, 357, 358], "delai": [61, 345, 354, 357, 358], "imagemagick": [61, 345, 358], "polyhedron": [61, 184, 185, 219, 235, 237, 239, 335], "hull": [61, 185, 235, 237, 275, 335], "pbwcrystal": [61, 62], "rr": [61, 97, 100, 110, 129, 136, 170, 185, 222, 225, 241, 357, 358], "tropic": [61, 62, 63], "pl\u00fccker": [61, 62, 63], "proposit": [61, 63, 92, 112, 118, 142, 143, 170, 183, 190, 232, 233, 268, 281, 284, 289, 290, 292, 296, 297, 299], "bz01": [61, 63], "mu_w": 61, "ggm": 61, "mu_e": 61, "mu_": [61, 97, 158], "n_k": [61, 139], "lambda_j": [61, 263], "s_j": [61, 112, 224, 226, 236, 237], "negat": [61, 118, 142, 143, 239, 299], "default_long_word": [61, 62], "set_default_long_word": [61, 62], "to_highest_weight": [61, 62, 212], "subseteq": [61, 73, 87, 90, 94, 114, 130, 137, 144, 148, 149, 180, 185, 275, 332, 357], "sit": [61, 299], "to_lowest_weight": [61, 212], "kam2007": 61, "kam2010": 61, "latex_opt": [61, 99, 106, 128, 152, 208, 275], "mark_endpoint": [61, 239], "circl": [61, 97, 100, 106, 113, 114, 122, 156, 157, 170, 185, 239, 275, 307, 311, 337], "float": [61, 100, 275, 357], "pbw_crystal": 62, "x_m": [62, 145], "pbw_datum": 63, "pbwdata": 63, "convert_to_new_long_word": 63, "new_long_word": 63, "pbwdatum": 63, "new_datum": 63, "convert_to_long_word_with_first_lett": 63, "is_equivalent_to": 63, "other_pbw_datum": 63, "compute_new_lusztig_datum": 63, "enhanced_braid_chain": 63, "initial_lusztig_datum": 63, "braid_move_calcul": [63, 220], "braidmovecalcul": [63, 220], "enhance_braid_move_chain": 63, "chain_of_reduced_word": [63, 220], "braid_move_chain": 63, "off": [63, 96, 106, 118, 128, 151, 152, 222, 224, 233, 275, 309, 328, 339, 341, 343, 369], "submatric": [63, 223], "interval_of_chang": 63, "cartan_sub_matrix": 63, "submatrix": 63, "tropical_plucker_rel": 63, "polyhedral_r": 64, "infinitycrystalaspolyhedralr": 64, "b_j": [64, 67, 83, 87, 106, 129], "though": [64, 88, 93, 94, 98, 158, 222, 232, 298, 335, 341, 343, 349], "target": [64, 108, 115, 222, 280, 292], "zz_j": 64, "psi_j": [64, 144], "j_n": [64, 120, 144, 341], "analog": [64, 141, 144, 158, 239, 270, 309, 341, 343, 347], "n_j": [64, 170], "max_": [64, 67, 102, 127, 158], "tensorproductofcrystalsel": [64, 67, 68], "journal": [65, 69, 75, 76, 78, 88, 90, 91, 97, 99, 106, 137, 145, 149, 157, 170, 183, 289, 299, 300, 301, 306, 357, 364], "165": [65, 311], "1994": [65, 169, 298, 299], "crystalofspinsplu": 65, "crystalofspinsminu": 65, "genericcrystalofspin": 65, "spin_crystal_type_b_el": 65, "spin_crystal_type_d_el": 65, "star_cryst": 66, "starcryst": 66, "binf": 66, "antiautomorph": 66, "chevallei": [66, 170, 237], "mb_i": 66, "catalog_infinity_cryst": 66, "bstar": 66, "rcstar": 66, "nuj": 66, "mstar": 66, "ystar": 66, "tstar": 66, "jump": [66, 157, 178, 181, 185], "nu0star": 66, "nustar": 66, "thieri": [67, 68, 122, 126, 223, 224, 228, 229, 233, 298, 299], "refactor": [67, 68, 125, 186, 233, 273, 299], "tensor_product": 67, "crystalofqueertableaux": 67, "queersupercrystalsmixin": 67, "tensorproductofqueersupercrystalsel": [67, 68], "d_r": [67, 222], "s_r": [67, 143], "2r": [67, 97, 118, 222], "b_r": [67, 139, 222], "plactic": 67, "french": [67, 96, 130, 155, 158, 162, 309, 341, 343, 349], "fixm": [67, 110, 224], "increasingli": 67, "decreasingli": [67, 122], "1392": 67, "crystaloftableauxel": [67, 68], "294": [67, 232, 354], "fulltensorproductofcryst": 67, "fulltensorproductofqueersupercryst": 67, "fulltensorproductofregularcryst": [67, 215], "fulltensorproductofsupercryst": 67, "tensorproductofsupercrystalsel": [67, 68], "mixin": [67, 97, 160], "enlarg": [67, 235], "arbitrari": [67, 88, 96, 99, 100, 106, 112, 118, 120, 128, 154, 155, 158, 162, 170, 186, 223, 228, 238, 271, 273, 284, 286, 298, 341, 343, 345, 357, 358], "big": [67, 94, 100, 186, 207, 238], "underbrac": [67, 143, 158], "columnwis": 67, "did": [67, 157, 224, 246, 311], "14402": 67, "antikashiwara": 67, "tensorproductofcrystalswithgener": 67, "favor": 67, "tensorproductofregularcrystalswithgener": 67, "tensor_product_el": 68, "crystalofbkktableaux_with_categori": 68, "int": [68, 81, 85, 94, 103, 106, 137, 149, 158, 170, 171, 185, 189, 235, 311, 349, 362], "immutablelistwithpar": 68, "grantcharov": 68, "et": [68, 139, 144, 149, 169, 252, 254, 311, 338, 349, 354, 357, 358, 364], "position_of_first_unmatched_plu": 68, "unmatch": [68, 341], "position_of_last_unmatched_minu": 68, "positions_of_unmatched_minu": 68, "positions_of_unmatched_plu": 68, "reiner": [69, 96, 239, 273, 338], "stanton": 69, "white": [69, 132, 137, 172, 185, 275, 363], "rsw2004": 69, "cyclicsievingpolynomi": 69, "cyc_act": 69, "exhibit": [69, 299], "108": [69, 83, 88, 236, 311], "cyclic_sieving_phenomenon": 69, "cyclicsievingcheck": 69, "q_analogu": [69, 186], "q_binomi": [69, 186], "s42": 69, "get_ord": [69, 110], "orbit_decomposit": 69, "orb": 69, "substr": [70, 170, 356], "debruijnsequ": 70, "string_rep": [70, 352, 367], "00010111": 70, "000": [70, 100, 113, 190, 354, 357, 358, 360], "001": [70, 134, 190, 354, 357, 362, 364], "010": [70, 152, 190, 352, 354, 357, 362, 364], "101": [70, 78, 81, 107, 118, 186, 190, 263, 349, 352, 354, 357], "011": [70, 190, 354], "00": [70, 77, 79, 106, 113, 190, 349, 354, 357, 358, 360, 364], "ari": [70, 349], "de_bruijn_sequ": 70, "eviatar": 70, "bach": 70, "nathann": [70, 71, 93, 94, 125, 136, 349], "cohen": [70, 71, 93, 94, 125, 136, 349], "__contain__": 70, "debruijn_sequ": 70, "ariti": 70, "frank": [70, 185], "ruskei": 70, "rubi": 70, "jona": 70, "elfstr\u00f6m": 70, "joe": [70, 150], "sadawa": 70, "2048": [70, 318], "ros2002": 70, "creation": [70, 106, 127, 143, 174, 190, 223, 228, 233, 272, 282, 289, 292, 299, 345, 357, 358], "significantli": [70, 76, 87, 106], "is_debruijn_sequ": 70, "degreesequ": 71, "erdo": 71, "gallai": 71, "sum_i": [71, 89, 119, 129, 142, 149, 158, 160, 232, 239, 297, 299], "foral": [71, 86, 125, 158, 185], "d_j": 71, "havel": 71, "hakimi": 71, "Or": [71, 75, 79, 81, 83, 87, 89, 106, 125, 144, 233, 238, 270, 311, 349], "bi": [71, 289, 344], "cours": [71, 75, 97, 106, 118, 144, 158, 184, 185, 224, 232, 239, 268, 309, 343], "criterion": 71, "rces1994": 71, "reduct": [71, 134, 302, 346], "xrightarrow": 71, "perfectli": [71, 235], "pick": [71, 90, 94, 120, 154, 341], "genfrac": [71, 170], "0pt": [71, 100, 170], "underlin": 71, "d_k": 71, "cubic": [71, 128], "alloc": [71, 214, 349], "obvious": [71, 170, 180, 345], "perman": [71, 311], "enum": [71, 99, 185, 298], "current_box": 71, "_box": 71, "moment": [71, 81, 106, 169, 185, 265, 349, 358], "bad": [71, 80, 96, 170, 349], "uselessli": 71, "minut": [71, 271], "alasdair": 72, "mcandrew": 72, "framework": [72, 118, 158, 170, 311], "standardpermutations_all_with_categori": 72, "bv2004": 72, "discard": [72, 87, 158], "d1": [72, 81, 96, 97], "macmahon": [72, 145], "x_k": [72, 81, 158, 185], "918": 72, "254": [72, 78, 358], "AT": 72, "cart": 72, "uncopyright": 72, "481066515734": 72, "satta": 72, "mpp2008": 72, "caret": 72, "essenc": 72, "descent_algebra": 73, "descentalgebra": [73, 143], "solomon": [73, 144, 183, 299], "sigma_n": [73, 158, 299], "pq": [73, 137, 170, 185, 273, 338], "b_p": 73, "gr1989": 73, "apart": [73, 342], "schocker": 73, "exposit": [73, 114, 161], "sch2004": 73, "at1992": 73, "mr1995": 73, "da": [73, 97, 143], "basis_b": 73, "d_t": 73, "xi": [73, 274, 281, 296, 297, 299, 301], "b_q": 73, "summand": [73, 106, 110, 142, 185, 299, 330, 335], "b_c": 73, "commonli": [73, 106, 143, 144, 158, 232, 299, 349], "mackei": 73, "per": [73, 77, 78, 83, 89, 90, 94, 299, 311, 354], "algebraswithbasi": [73, 110, 299], "to_d_basi": 73, "to_i_basi": 73, "i_q": 73, "to_nsym": 73, "s_p": 73, "occasion": [73, 144, 170], "ow": [73, 178, 301], "to_b_basi": 73, "to_symmetric_group_algebra_on_basi": 73, "straightforward": [73, 83, 171, 268, 360], "e2": [73, 83, 90, 128, 136, 252, 317, 318, 327], "descentalgebrabas": 73, "to_symmetric_group_algebra": [73, 108, 143, 338], "technic": [74, 106, 117, 137, 162, 185, 235, 268, 292, 299, 302, 349], "gather": [75, 79, 81, 82, 86, 89, 352, 367], "balanced_incomplete_block_design": [75, 78, 79, 87, 92], "bibd_from_td": 75, "td": [75, 78, 80, 86, 87, 89, 90, 97, 224], "bibd_from_difference_famili": [75, 81], "bibd_from_pbd": 75, "pbd": [75, 78, 80, 86, 89, 90, 92], "pbd_from_td": 75, "steiner_triple_system": [75, 79, 80, 87], "v_5_1_bibd": 75, "v_4_1_bibd": 75, "pbd_4_5_8_9_12": 75, "bibd_5q_5_for_q_prime_pow": 75, "5q": 75, "k_v": 75, "k_4": 75, "dougla": [75, 77, 88], "stinson": [75, 77, 88, 92], "stinson2004": [75, 81, 88, 89], "167": [75, 81, 92, 99, 106, 157], "clayton": 75, "smith": [75, 78, 185], "claytonsmith": 75, "argilo": 75, "net": [75, 275, 298, 299], "balancedincompleteblockdesign": [75, 78, 87], "145": [75, 78, 81, 83, 311], "185": [75, 78, 106, 162, 311], "205": [75, 78, 213, 311], "305": [75, 81, 311], "405": [75, 78], "605": 75, "base_cas": 75, "useless": [75, 76, 82, 86, 87, 88, 89, 90, 92, 136], "cautiou": [75, 76, 82, 86, 87, 88, 89, 90, 92, 136], "gui": [75, 76, 82, 86, 87, 88, 89, 90, 92, 136], "speed": [75, 76, 81, 82, 86, 87, 88, 89, 90, 92, 106, 131, 136, 158, 163, 171, 185, 228, 236, 298, 301], "is_pairwise_balanced_design": [75, 78, 80], "kv": 75, "v_1": [75, 87, 89, 102, 110, 118, 126, 139, 170, 184, 185, 273, 354], "v_k": [75, 89, 110, 170, 185, 354], "infty_1": [75, 89], "infty_k": 75, "blockdesign": [75, 76, 84, 87], "idea": [75, 81, 84, 106, 145, 158, 160, 298, 349, 360], "bibd_from_arc_in_desarguesian_projective_plan": 75, "arc": [75, 97, 113, 149, 275, 307], "denniston": 75, "denniston69": 75, "who": [75, 77, 118, 349], "desarguesian": [75, 76, 90], "mere": [75, 122, 136, 273, 296, 303, 310, 341, 358, 360], "request": [75, 91, 185, 239, 311], "232": [75, 81, 88, 149, 311, 362], "456": [75, 88, 354], "904": 75, "496": [75, 311], "976": 75, "1936": 75, "4000": 75, "8128": [75, 311], "1969": 75, "317": 75, "319": [75, 78, 81, 163], "doi": [75, 78, 81, 92, 106, 144, 149, 150, 163, 183, 185, 186, 187, 263, 273, 298, 299, 301, 306], "1016": [75, 78, 81, 92, 106, 150, 183, 185, 186, 232, 273], "s0021": [75, 183], "9800": [75, 183], "80095": 75, "lambd": [75, 78, 80, 81, 86], "b_b": [75, 275], "zmod": [75, 81, 83, 299], "pairwisebalanceddesign": [75, 80, 86], "caution": [75, 86, 87, 299], "integrality_toler": [75, 87, 89, 90, 125, 134, 185], "trace": [75, 87, 94, 131, 236, 339, 341, 358, 364], "arc_": 75, "projective_geometri": 75, "milp": [75, 87, 89, 90, 125, 134, 185], "solv": [75, 81, 87, 89, 90, 94, 98, 119, 122, 125, 132, 134, 135, 137, 185, 281, 296, 297, 299, 301, 345, 349, 357, 358], "mixedintegerlinearprogram": [75, 87, 89, 90, 125, 134, 185], "quiet": [75, 87], "inexact": [75, 87, 89, 90, 125, 185], "get_valu": [75, 87, 89, 90, 125, 156, 185], "a4": [75, 97, 222, 224, 225, 228, 239, 243, 252, 264, 266, 267, 311, 341], "is_t_design": [75, 76, 78, 80, 84, 87, 92, 93], "return_paramet": [75, 76, 78, 81, 84, 87, 92], "sa2": 75, "sa3": 75, "bruckryserchowla_check": 75, "bruck": [75, 76], "ryser": [75, 76, 125], "chowla": 75, "precondit": 75, "met": 75, "nonexist": [75, 76], "211": [75, 78, 81, 118, 184, 188, 354, 357], "168": [75, 78, 81, 87, 88, 311, 358], "16476": 75, "groupdivisibledesign": [75, 80, 86, 89], "besid": [75, 86, 89, 222, 235], "use_ljcr": 75, "jolla": [75, 77, 78, 79], "repositori": [75, 77, 78, 79], "best_known_covering_design_www": [75, 77], "internet": [75, 77, 79, 84, 95, 122, 136, 188, 232, 349, 358], "handbook": [75, 77, 78, 81, 88, 89, 106], "216": [75, 78, 235, 311], "biplan": [75, 79], "k_n": [75, 81], "bose": [75, 81], "skolem": 75, "andhonk97": 75, "invalid": [75, 106, 107, 110, 113, 145, 152, 158, 161, 202, 212, 226, 273, 281, 284, 290, 296, 297, 299, 341], "emptyseterror": [75, 76, 81, 83, 88, 89, 127, 154, 331], "ian": [75, 78, 298], "anderson": 75, "iiro": 75, "honkala": 75, "1997": [75, 145, 208, 239, 288], "utu": 75, "fi": 75, "200": [75, 83, 88, 130, 171, 180, 185, 311, 349, 357, 358], "member": [76, 93, 137], "block_design": [76, 84, 87], "designtheori": [76, 84, 87], "extrep": [76, 84], "node4": 76, "peter": [76, 84, 87, 90, 137, 296], "cameron": 76, "dobcsanyi": [76, 84, 87], "john": [76, 144, 235, 282, 287, 299], "morgan": 76, "leonard": [76, 87, 187], "soicher": [76, 87], "hu57": 76, "daniel": [76, 77, 106, 107, 129, 131, 174, 190, 229, 271], "canadian": 76, "1957": [76, 125], "cm": [76, 100, 169, 223, 226, 228, 271, 299, 354], "ca": [76, 78, 144, 232, 306, 360, 367], "cjm": 76, "v9": 76, "p378": 76, "we07": 76, "charl": [76, 77, 78, 88, 90], "weibel": 76, "survei": [76, 88, 92, 222], "notic": [76, 108, 143, 158, 160, 170, 208, 213, 235, 272, 273, 281, 296, 297, 298, 299, 301, 304, 318, 341, 354], "am": [76, 99, 157, 170, 187, 229], "vol": [76, 78, 81, 90, 91, 99, 106, 114, 163, 178, 185, 186, 224, 232, 233, 288, 298, 299, 318, 364], "num": [76, 90], "1294": 76, "1303": [76, 78], "quentin": 76, "honor\u00e9": 76, "18527": 76, "rewrit": [76, 87, 106, 229, 301], "16281": 76, "miller": [76, 170, 185, 275, 335], "desarguesian_plan": 76, "affinegeometrydesign": [76, 79, 87], "point_coordin": 76, "geometri": [76, 90, 156, 219, 358], "ag_d": 76, "projectivegeometrydesign": [76, 79], "euclidean": [76, 158, 224, 241, 358], "cremonarichmondconfigur": [76, 79, 87], "cremona": 76, "richmond": [76, 132], "tuttecoxetergraph": 76, "richmond_configur": 76, "incidence_graph": [76, 87], "desarguesianprojectiveplanedesign": [76, 79, 87], "projective_plan": [76, 79, 80, 87, 90, 94], "hadamard3design": [76, 79], "hadamarddesign": [76, 79], "cvl": 76, "incidence_matrix": [76, 87, 95, 357], "van": [76, 78, 89, 91, 141, 144, 194], "lint": 76, "london": [76, 299], "soc": [76, 100, 114, 145, 149, 170, 187, 222, 229, 238, 270, 285, 286, 299, 306, 307], "1991": [76, 92, 299], "nj": 76, "5j": 76, "hughesplan": [76, 79], "subfield": 76, "sim": [76, 78, 349], "rest": [76, 144, 154, 184, 194, 252, 254, 272, 280, 333, 354], "hughes_plan": 76, "cap": [76, 78, 81, 83, 87, 94, 95, 97], "concurr": 76, "b_0_1": 76, "b_1_10": 76, "b_10_0": 76, "b_57_70": 76, "b_70_59": 76, "b_59_57": 76, "b_0_57": 76, "b_1_70": 76, "b_10_59": 76, "pg_d": 76, "pgpointflatblockdesign": 76, "gap_packag": [76, 78, 79, 87, 95, 185], "spkg": [76, 87], "pg": [76, 78, 90, 170], "155": [76, 78, 81, 99, 193, 239, 288, 311], "wittdesign": [76, 78, 79, 87], "are_hyperplanes_in_projective_geometry_paramet": 76, "lmbda": [76, 80, 81, 82], "normalize_hughes_plane_point": 76, "xk": 76, "yk": 76, "zk": 76, "nearfield": 76, "finitefield": [76, 142, 299], "finite_projective_plan": 76, "lam": [76, 78, 143, 144, 162, 184, 232, 281, 286, 289, 292, 296, 298, 299, 301, 309, 338], "thiel": 76, "swiercz": 76, "1989": [76, 364], "canad": [76, 90, 149], "projective_plane_to_oa": 76, "pplane": 76, "pt": [76, 160, 168, 239, 306], "transvers": [76, 89, 90], "q3_minus_one_matrix": 76, "companion": 76, "multiplicative_ord": 76, "tdesign_param": 76, "person": 77, "date": 77, "ljcr": [77, 79], "dmgordon": 77, "colbourn": [77, 78, 88, 89, 90], "jeffrei": [77, 78, 88, 90, 357], "dinitz": [77, 78, 88, 90], "hcd": 77, "covering_design": 77, "coveringdesign": 77, "low_bd": 77, "creator": 77, "timestamp": 77, "submit": [77, 79], "gino": 77, "fano": [77, 78, 87], "incidence_structur": [77, 79, 87, 89], "ground_set": [77, 87, 95], "is_cov": 77, "wast": [77, 235], "alter": [77, 125, 152, 275], "schonheim": 77, "1892": 77, "onlin": [77, 79, 311, 349], "messag": [77, 87, 239, 358], "lex": [77, 79, 102, 127, 158, 171, 174, 299], "1996": [77, 79, 97, 137, 232, 301], "930": 77, "trivial_covering_design": 77, "2k": [77, 89, 97, 99, 113, 159, 180, 232], "anyth": [77, 99, 106, 113, 138, 155, 158, 162, 170, 171, 223, 232, 236, 273, 328, 332, 352, 358], "designhandbook": [78, 88, 89, 90], "dream": 78, "knowledg": [78, 341], "julian": [78, 90, 91], "abel": [78, 90, 91], "160": [78, 88, 235], "176": [78, 81, 99, 311, 335], "208": [78, 90, 129, 232], "224": [78, 81], "352": [78, 88, 289], "416": 78, "469": 78, "520": [78, 88, 345], "522": [78, 88, 100, 232], "524": 78, "544": 78, "560": [78, 88], "640": 78, "796": 78, "896": [78, 341], "1078": 78, "1262": 78, "1612": [78, 232], "1620": 78, "103": [78, 81, 307, 364], "181": [78, 81, 83, 100, 311], "187": [78, 92, 106, 208, 319], "259": [78, 162, 286], "273": [78, 81, 241, 311], "391": 78, "409": [78, 311], "102": [78, 81, 88, 139, 307, 357], "116": [78, 81, 222, 224, 232, 341], "146": [78, 292], "162": [78, 81, 88, 139], "170": [78, 190], "182": [78, 97], "188": 78, "192": [78, 88, 139, 184, 232, 263, 271, 285], "198": [78, 81, 88], "206": [78, 100, 357], "210": [78, 88, 139, 190, 311], "212": [78, 81, 231, 311, 345, 354], "218": [78, 141, 349], "230": [78, 81], "242": [78, 88], "246": [78, 81, 311], "260": [78, 88, 358], "270": [78, 88], "288": [78, 88, 190], "290": 78, "296": [78, 149], "300": [78, 88, 132, 311, 352, 354], "302": [78, 311], "308": 78, "318": 78, "330": [78, 88], "336": [78, 83, 88], "338": 78, "356": [78, 311, 352], "366": [78, 88, 144], "372": [78, 88, 232], "378": [78, 88, 232], "396": [78, 88], "402": [78, 306], "420": [78, 87, 88, 232, 289, 311], "450": [78, 232], "452": 78, "115": [78, 81, 89, 272, 358], "119": [78, 81, 132], "121": [78, 81, 83, 118, 231, 311, 352, 354], "129": 78, "139": [78, 92], "141": [78, 81, 311], "149": [78, 81, 232, 311, 357], "161": [78, 81, 232, 335], "169": [78, 81, 83, 92, 311, 358], "189": [78, 90], "191": [78, 81, 122], "195": [78, 232], "203": [78, 81, 92, 97, 103, 159, 191, 311], "213": [78, 186, 311, 354, 357], "223": [78, 81], "253": [78, 81], "265": [78, 81, 311], "269": [78, 180], "271": [78, 81], "275": [78, 81], "281": [78, 81, 286, 357], "289": [78, 144], "293": [78, 81, 232, 311, 364], "295": [78, 81], "303": [78, 106], "309": [78, 224, 311], "311": [78, 364], "321": [78, 81, 99, 234, 352, 354], "323": [78, 289, 311, 363], "335": [78, 81], "341": [78, 90, 311], "355": [78, 106, 311], "363": [78, 289], "379": [78, 81, 106], "383": [78, 233], "399": [78, 81, 128, 311], "401": [78, 81], "411": 78, "413": 78, "106": [78, 81, 88, 307], "136": [78, 88, 232], "196": [78, 88, 90, 91, 136, 162, 232, 311], "201": [78, 81, 106, 208, 299, 311], "175": [78, 106, 114, 285, 299], "217": [78, 81], "221": [78, 132, 184, 357], "901": 78, "225": [78, 81, 285, 311], "993": [78, 82], "109": [78, 81, 83, 139, 299, 357], "157": [78, 81, 83], "193": [78, 81, 83, 311, 319], "241": [78, 81, 311, 358], "313": 78, "337": [78, 81, 238, 270], "349": [78, 222], "361": [78, 81], "373": [78, 311], "397": 78, "421": [78, 81], "433": [78, 81], "457": 78, "529": 78, "541": [78, 276, 311], "577": [78, 311], "601": [78, 81, 107], "613": 78, "625": [78, 83, 92, 311], "661": [78, 81], "673": [78, 81, 89], "709": [78, 273], "733": 78, "757": [78, 81], "769": 78, "829": [78, 236], "841": [78, 81], "853": [78, 318], "877": [78, 97, 103, 311], "937": 78, "961": 78, "997": 78, "1009": [78, 81], "1021": 78, "1033": 78, "1069": 78, "1093": 78, "1117": 78, "1129": 78, "1153": [78, 81, 356], "1201": [78, 81], "1213": [78, 354, 356], "1237": 78, "1249": 78, "1297": 78, "1321": [78, 81], "1369": 78, "1381": [78, 81], "1429": 78, "1453": 78, "1489": 78, "1549": 78, "1609": 78, "1621": 78, "1657": 78, "1669": 78, "1681": [78, 81], "1693": 78, "1741": 78, "1753": 78, "1777": 78, "1789": 78, "1801": [78, 81], "1849": 78, "1861": [78, 81, 311], "1873": [78, 81, 298], "1933": 78, "1993": [78, 90, 144], "2029": 78, "2053": 78, "2089": 78, "2113": [78, 354], "2137": 78, "2161": 78, "2197": 78, "2209": 78, "2221": 78, "2269": [78, 81], "2281": 78, "2293": 78, "2341": [78, 271], "2377": 78, "2389": 78, "2401": [78, 311], "2437": [78, 81], "2473": 78, "2521": [78, 81], "2557": 78, "2593": 78, "2617": 78, "2677": 78, "2689": 78, "2713": 78, "2749": 78, "2797": 78, "2809": 78, "461": 78, "641": [78, 81], "701": [78, 81], "761": [78, 81, 145], "821": [78, 81], "881": [78, 81], "941": 78, "1061": 78, "1181": [78, 81], "1301": [78, 81], "1361": [78, 81], "1481": [78, 81], "1601": [78, 81, 222], "1721": 78, "1901": [78, 81], "151": [78, 81, 83], "331": [78, 81], "571": [78, 209, 215, 235], "631": [78, 81], "691": [78, 81], "751": [78, 232], "811": [78, 292], "991": 78, "1051": 78, "1171": [78, 145], "1231": [78, 231, 233, 354], "1291": 78, "1471": 78, "1531": [78, 81], "1831": [78, 81], "1951": 78, "463": [78, 81, 141], "547": [78, 81], "883": [78, 81], "967": [78, 81, 144], "1723": [78, 81], "449": [78, 81, 222], "617": 78, "953": 78, "1289": 78, "2ed": [78, 88, 92], "chapman": [78, 106], "crc": [78, 106], "aschbacher71": 78, "aschbach": 78, "collin": [78, 169], "ser": [78, 141, 342], "1971": 78, "272": [78, 213], "hall71": 78, "jr": [78, 287], "du": [78, 89, 93, 118, 363], "congr\u00e8": 78, "math\u00e9maticien": 78, "1970": [78, 273, 358], "222": [78, 81, 88], "gauthier": 78, "villar": 78, "bibd_106_6_1": 78, "bibd_111_6_1": 78, "bibd_126_6_1": 78, "vi": [78, 81, 89, 90, 222, 285], "bibd_136_6_1": 78, "bibd_141_6_1": 78, "bibd_171_6_1": 78, "bibd_196_6_1": 78, "bibd_201_6_1": 78, "bibd_45_9_8": 78, "codeword": 78, "extendedquadraticresiduecod": 78, "vii": [78, 83, 86, 90, 92, 169, 170, 222, 252, 285], "cite": 78, "ht95": 78, "huffman": 78, "tonchev": 78, "cryptographi": [78, 90], "septemb": [78, 105, 157, 298], "1995": [78, 81, 90, 141, 144, 145, 169, 238, 270, 285, 298, 357], "volum": [78, 88, 92, 99, 150, 213, 273, 289, 292, 298, 345], "issu": [78, 88, 92, 99, 105, 112, 150, 189, 220, 261, 273, 289, 292], "bibd_56_11_2": 78, "incidencestructur": [78, 85, 86, 87, 89, 92, 94, 95], "bibd_66_6_1": 78, "ccrwest": [78, 79], "colin": 78, "barker": 78, "bibd_76_6_1": 78, "bibd_79_13_2": 78, "typo": [78, 118, 136, 275, 341], "bibd_96_6_1": 78, "dm_12_6_1": 78, "hanani75": 78, "designs_pyx": [78, 80, 89, 90, 91], "is_difference_matrix": [78, 80, 82], "difference_matrix": [78, 79, 82], "haim": [78, 89, 93], "hanani": [78, 89, 93], "0012": [78, 92], "365x": [78, 92], "90040": 78, "1975": [78, 89, 222], "369": [78, 89], "dm_21_6_1": 78, "iii": [78, 90, 99, 222, 233, 270], "dm_24_8_1": 78, "dm_273_17_1": 78, "dm_28_6_1": 78, "dm_33_6_1": 78, "dm_35_6_1": 78, "dm_36_9_1": 78, "dm_39_6_1": 78, "dm_44_6_1": 78, "dm_45_7_1": 78, "deadli": 78, "kindli": 78, "dm_48_9_1": 78, "dm_51_6_1": 78, "dm_52_6_1": 78, "dm_55_7_1": 78, "dm_56_8_1": 78, "dm_57_8_1": 78, "dm_60_6_1": 78, "julianabel13": 78, "five": [78, 96, 185, 349], "onlinelibrari": 78, "wilei": 78, "1002": [78, 106, 354], "jcd": 78, "21384": 78, "dm_75_8_1": 78, "dm_993_32_1": 78, "higmansimsdesign": [78, 79], "higman": 78, "w_a": [78, 229], "w_b": 78, "ky04": 78, "bl1984": [78, 95], "higmansimsgraph": 78, "gh": [78, 144, 364], "automorphism_group": [78, 87, 313, 315, 319, 320, 322, 323, 324, 326, 329], "klee": 78, "yate": 78, "tight": 78, "subdesign": [78, 90], "rose": 78, "hulman": 78, "undergradu": 78, "edu": [78, 89, 99, 144, 157, 163, 170, 178, 185, 287], "mathjourn": 78, "archiv": [78, 150, 235], "vol5": [78, 357], "n2": [78, 81, 89, 90, 94, 208], "paper9": 78, "v5n2": 78, "9pd": 78, "mols_10_2": 78, "cecm": 78, "sfu": 78, "pols10": 78, "latin_squar": [78, 88], "are_mutually_orthogonal_latin_squar": [78, 88], "orthogonal_arrai": [78, 79, 80, 88, 89, 90, 91], "is_avail": [78, 88, 89], "mols_12_5": 78, "brendan": 78, "mckai": [78, 222], "mols_14_4": 78, "wanless": 78, "todorov12": 78, "todorov": 78, "367": 78, "mols_15_4": 78, "mols_18_3": 78, "oa_10_1620": 78, "brouwer": [78, 89, 90, 91], "ree": [78, 89, 90, 91, 185], "find_brouwer_van_rees_with_one_truncated_column": [78, 91], "incomplete_orthogonal_arrai": [78, 79, 89, 91], "is_orthogonal_arrai": [78, 80, 89, 90, 91], "oa_10_205": 78, "greig99": [78, 90], "coldin01": [78, 88], "baer": [78, 87, 90], "subplan": [78, 87, 90], "252": [78, 311], "204": [78, 81, 83, 139, 311], "oa_from_pbd": [78, 89, 90], "oa_10_469": 78, "brouwer80": [78, 90], "techniqu": [78, 122, 306, 349], "brouwer_separable_design": [78, 90, 91], "1407": 78, "oa_10_520": 78, "oa_520_plus_x": 78, "oa_10_796": 78, "ac07": [78, 90, 91], "hole": [78, 89, 137, 318, 341], "oa_11_160": [78, 89], "ab1995": [78, 89], "oa_n_times_2_pow_c_from_matrix": [78, 89], "oa_11_185": 78, "greig": [78, 90], "oa_11_254": 78, "oa_11_640": [78, 89], "oa_11_80": [78, 89], "oa_12_522": 78, "oa_14_524": 78, "oa_15_112": [78, 89], "oa_15_224": [78, 89], "oa_15_896": [78, 89], "2min": 78, "oa_16_176": [78, 89], "oa_16_208": [78, 89], "oa_17_560": 78, "corollari": [78, 81, 118, 120, 129, 136, 219, 232, 233, 297, 341], "thwart": [78, 90, 91], "oa_20_352": [78, 89], "oa_20_416": [78, 89], "oa_20_544": [78, 89], "1mn": 78, "oa_25_1262": 78, "1893": 78, "b_9": 78, "oa_7_18": 78, "oa_from_quasi_difference_matrix": [78, 89], "oa_7_66": 78, "oa_7_68": 78, "oa_7_74": 78, "oa_8_69": 78, "oa_8_76": 78, "oa_9_1078": 78, "oa_9_120": 78, "i_8": 78, "rbibd_120_8_1": 78, "oa_9_135": 78, "difference_famili": [78, 79, 81, 83, 136], "oa_9_1612": 78, "oa_9_40": [78, 89], "qdm_19_6_1_1_1": 78, "is_quasi_difference_matrix": [78, 80], "qdm_21_5_1_1_1": 78, "qdm_21_6_1_1_5": 78, "qdm_25_6_1_1_5": 78, "qdm_33_6_1_1_1": 78, "qdm_35_7_1_1_7": 78, "qdm_37_6_1_1_1": 78, "qdm_45_7_1_1_9": 78, "qdm_54_7_1_1_8": 78, "qdm_57_9_1_1_8": 78, "seiden": 78, "hyperov": 78, "dualis": 78, "slice": [78, 139, 235, 311, 342, 361, 369], "cyclic_shift": 78, "759": 79, "frequent": [79, 106, 184, 343], "best_known_covering_design_from_ljcr": 79, "resolvable_balanced_incomplete_block_design": [79, 92], "kirkman_triple_system": [79, 92], "mutually_orthogonal_latin_squar": [79, 88, 89], "transversal_design": [79, 80, 86, 87, 89, 92], "steiner_quadruple_system": [79, 87, 93], "gen_quadrangles_with_spread": [79, 85], "deriveddesign": 79, "complementarydesign": 79, "somewhat": [80, 106, 107, 185, 235, 318], "zip": [80, 92, 178, 185, 190], "append": [80, 81, 89, 106, 113, 118, 122, 170, 171, 273, 341, 345, 360, 364], "2u": [80, 89], "is_group_divisible_design": 80, "guessed_group": 80, "phrase": 80, "is_projective_plan": 80, "qdm": [80, 89], "lj": [80, 89], "are_hadamard_difference_set_paramet": 81, "4n": [81, 93, 128, 129, 136, 349], "are_mcfarland_1973_paramet": 81, "mcf1973": 81, "block_stabil": 81, "df_q_6_1": 81, "group_law": 81, "hadamard_difference_set_product": 81, "is_difference_famili": [81, 83], "is_relative_difference_set": 81, "is_supplementary_difference_set": 81, "supplementari": [81, 136, 349], "mcfarland_1973_construct": 81, "one_cyclic_til": 81, "nz": [81, 230], "one_radical_difference_famili": 81, "radic": [81, 83, 106, 233, 349], "radical_difference_famili": [81, 83], "radical_difference_set": 81, "coset": [81, 83, 112, 137, 169, 170, 229, 230, 237, 341, 343, 345], "relative_difference_set_from_homomorph": 81, "nd": [81, 152], "relative_difference_set_from_m_sequ": 81, "singer_difference_set": 81, "skew_supplementary_difference_set": [81, 136], "n_3": [81, 90, 139], "n_4": 81, "supplementary_difference_set": [81, 136], "2v": 81, "turyn_1965_3x3xk": 81, "c_3": [81, 185, 222, 241], "c_4": [81, 222], "twin_prime_powers_difference_set": 81, "bjl99": [81, 83, 86, 92], "beth": [81, 92, 213], "jungnickel": [81, 92], "lenz": [81, 92], "cambridg": [81, 92, 99, 232, 298, 318, 357, 364], "press": [81, 92, 99, 114, 164, 169, 232, 285, 298, 318, 357, 358, 364], "1999": [81, 90, 92, 99, 194, 289, 298, 358], "blj99": 81, "bo39": 81, "eugen": 81, "1939": 81, "353": 81, "bu95": 81, "buratti": 81, "tu1965": 81, "turyn": [81, 136, 340], "pacif": [81, 125, 273], "1965": [81, 229, 364], "346": [81, 88], "tu1984": 81, "williamson": [81, 136], "1984": [81, 144, 145, 185, 232, 299], "wi72": [81, 83], "cyclotomi": 81, "1972": 81, "98125": 81, "19500": 81, "3875": 81, "z8": 81, "prime_pow": 81, "is_prime_pow": [81, 83], "df": [81, 83, 311], "zhen": 81, "wu": 81, "explain_construct": [81, 89, 90], "d_b": 81, "difference_set": 81, "troolean": [81, 89], "singer": 81, "mcfarland": 81, "1973": [81, 99, 183], "n1": [81, 89, 90, 91, 94, 129], "prime_power_mod": 81, "islic": [81, 106, 129, 190, 349, 361], "l6": 81, "3061": 81, "3121": [81, 354], "3181": 81, "l7": 81, "4621": 81, "4957": 81, "5167": 81, "2143": [81, 359], "2311": 81, "2647": 81, "4999": 81, "5041": [81, 232], "5209": 81, "2d": [81, 96, 100, 235, 239, 357, 358], "1998": [81, 99, 183, 208, 289, 318], "1978": 81, "mul": [81, 338, 354], "inv": [81, 170, 236, 293, 354], "vectorspac": 81, "g11": 81, "d11": 81, "g12": 81, "d12": [81, 180, 185], "hadamard_difference_set_product_paramet": 81, "n_i": [81, 139, 147, 149, 232, 308], "2n_i": 81, "additiveabeliangroup": 81, "dihedralgroup": [81, 137, 349], "param": 81, "eb1966": 81, "diffeenc": 81, "mn": [81, 88, 136, 144], "submodul": [81, 144], "contraint": [81, 340], "_get_submodule_of_ord": 81, "why": [81, 88, 93, 224, 229, 238], "spe1975": [81, 136], "k_i": [81, 86, 139, 170, 186, 273, 275], "0097": 81, "3165": 81, "90031": 81, "print_til": 81, "xxx": [81, 136, 354], "xx": [81, 332, 354, 357, 367], "dlx": [81, 98, 134, 345], "observ": [81, 232, 236, 237, 349, 354], "llll": 81, "324": [81, 136, 289], "359": [81, 170, 233, 273], "444": 81, "237": 81, "404": [81, 224], "357": [81, 222], "394": [81, 311], "249": [81, 180], "388": [81, 88], "441": [81, 126], "327": [81, 139], "197": [81, 90, 159, 311], "362": [81, 311, 352], "403": 81, "435": [81, 232], "382": [81, 88, 273], "285": [81, 213, 311], "371": [81, 92], "390": 81, "392": 81, "219": [81, 307], "228": [81, 88, 239], "247": [81, 357], "261": [81, 90, 91], "118": [81, 106, 141], "138": [81, 88], "263": [81, 311], "279": [81, 95], "267": [81, 103, 311], "156": [81, 88, 136, 311], "209": [81, 208, 311], "264": [81, 232], "list_q": 81, "2000": [81, 90, 122, 288, 311, 345, 352], "divisor": [81, 180, 184, 185, 285, 299, 306, 311], "820": 81, "djo1994": 81, "113": [81, 356], "163": [81, 263, 357], "djo1992": [81, 136], "dafault": 81, "consider": [81, 83, 106, 349], "satifi": 81, "difference_matric": 82, "k_max": [82, 91], "difference_matrix_product": 82, "lmbda1": 82, "lmbda2": 82, "find_product_decomposit": [82, 91], "616": 82, "evenlydistributedsetsbacktrack": 83, "evenly_distributed_set": 83, "hit": [83, 87, 99, 107, 361, 364], "he": [83, 106, 144, 342, 349], "dirichlet": [83, 114, 233], "to_difference_famili": 83, "approach": [83, 106, 127, 157, 298, 299, 349], "somehow": 83, "behaviour": [83, 88, 106, 157, 184, 185], "up_to_isomorph": 83, "intend": [83, 106, 161, 166, 298, 306, 343], "debug": [83, 222, 231, 270], "114": 83, "e1": [83, 90, 128, 136, 252], "precaut": 83, "xb": 83, "timeit": 83, "\u00b5": 83, "ext_rep": 84, "api": [84, 185], "xml": 84, "ext": [84, 306], "rep": [84, 270], "pars": [84, 105, 107, 129, 209, 271, 310], "expat": 84, "do2009": 84, "wealth": 84, "xtree": 84, "servic": 84, "_name": [84, 87, 97], "util": [84, 121, 167, 189], "pyrxp": 84, "robin": 84, "becker": 84, "reportlab": 84, "xtreeprocessor": 84, "event": [84, 106], "driven": 84, "parser": [84, 129], "stage": [84, 341, 343], "list_of_design": 84, "list_of_designs_proc": 84, "list_definit": 84, "list_definition_proc": 84, "info": [84, 156, 185], "info_proc": 84, "block_design_proc": 84, "finish": [84, 106, 122, 202, 349], "xml_sourc": 84, "file_loc": 84, "dump_to_tmpfil": 84, "v2_b2_k2_icgsa": 84, "proc": [84, 145, 222, 229, 238, 270, 285, 289], "save_design": 84, "open_extrep_fil": 84, "check_dtrs_protocol": 84, "input_nam": 84, "input_pv": 84, "runtimeerror": [84, 89, 106, 190], "dtrs_protocol": 84, "designs_from_xml": 84, "fname": 84, "designs_from_xml_url": 84, "url": 84, "v3": [84, 102, 106], "icgsa": 84, "txt": [84, 136, 311], "bz2": 84, "boo": 84, "open_extrep_url": 84, "uncompress": 84, "generalised_quadrangle_with_spread": 85, "325": [85, 232], "1105": 85, "gq2": 85, "generalised_quadrangle_hermitian_with_ovoid": 85, "gq3": 85, "_point": 85, "pt2009": [85, 87], "tp1994": 85, "generalized_quadrangl": [85, 87], "ivo": 85, "maffei": 85, "dual_gq_ovoid": 85, "is_generalized_quadrangl": [85, 87], "ovoid": 85, "constitut": 85, "intersection_graph": [85, 87], "is_strongly_regular": [85, 87, 95], "block_siz": [85, 87], "280": [85, 88, 95, 232], "is_gq_with_spread": 85, "group_divisible_design": 86, "gdd_4_2": 86, "2q": 86, "495": 86, "k_l": 86, "m_1": [86, 90, 116, 119, 143, 144, 170, 290, 299, 343], "m_l": [86, 183, 343], "trigger": [86, 91, 338], "abcdefghiklm": 86, "bigcup": 86, "edge_color": [87, 132], "induced_substructur": 87, "substructur": 87, "is_berge_cycl": 87, "is_regular": [87, 158, 160, 180, 236, 306], "is_resolv": [87, 89, 92], "is_simpl": [87, 128, 180, 358], "is_spread": 87, "is_uniform": [87, 180, 357], "isomorphic_substructures_iter": [87, 94], "h2": [87, 273], "num_block": 87, "num_point": 87, "assmu": 87, "1992": [87, 99, 106, 222, 349], "hashabl": [87, 106, 110, 169, 185, 189, 272, 276], "matter": [87, 105, 271, 272, 298, 301], "11333": 87, "_block": 87, "pgl": 87, "fano1": 87, "fano2": 87, "monochromat": 87, "chromat": [87, 185, 299], "architectur": [87, 185, 224], "petersengraph": [87, 95, 332], "s13": 87, "pkg": [87, 236], "htm": 87, "chap003": 87, "rare": [87, 270, 349], "occas": 87, "block_matrix": 87, "h_x": 87, "critic": [87, 121, 137, 185, 354, 364], "conveni": [87, 106, 165, 190, 218, 219, 222, 224, 235, 241, 349], "positiveinteg": 87, "claud": [87, 106], "v_": [87, 118, 126, 139, 232, 299, 354], "v_i": [87, 89, 118, 126, 170, 354], "fag1983": 87, "bh2012": [87, 95, 136], "explan": [87, 90, 106, 129, 233], "glpk": [87, 134], "lp": [87, 113, 134, 143, 170, 171, 354], "report": [87, 99, 224, 239, 265, 267, 282], "cplex": [87, 134, 185], "gurobi": [87, 134, 185], "ag": [87, 90, 132, 178], "Their": [87, 108, 117, 170, 233, 299], "doesn": [87, 125, 143, 170, 230, 272, 349, 357, 358], "boolean_answ": 87, "fano_block": 87, "s3_9": 87, "s4_8": 87, "s4_14": 87, "w12": [87, 126], "h_2": [87, 94, 136, 299, 340], "subhypergraph_search": [87, 94], "c_5": [87, 349], "petersen": [87, 302], "cyclegraph": 87, "ic": [87, 113, 308], "subgraph": [87, 95, 178, 180, 185, 332, 349], "has_edg": [87, 115, 185], "5616": 87, "packing_in_a_hypergraph": 87, "chr": [87, 180], "min_siz": 87, "p4": [87, 184, 185, 252, 254, 296, 297, 299], "break": [87, 139, 170, 184, 233, 239, 341, 354], "latin_square_product": 88, "mols_tabl": 88, "600": [88, 129, 186], "________________________________________________________________________________": 88, "130": [88, 232, 233, 364], "150": [88, 91, 95, 213, 354], "166": 88, "178": 88, "180": [88, 106, 118, 132, 156, 341, 345], "190": [88, 232], "220": [88, 129, 288, 299, 311, 358], "226": [88, 178], "250": [88, 180, 185, 213], "262": [88, 169], "268": [88, 358], "282": [88, 124, 352], "292": [88, 213], "306": [88, 186], "310": [88, 232], "316": 88, "320": [88, 232, 234, 354], "340": [88, 129, 273], "342": [88, 136, 238, 270, 301], "348": [88, 141], "358": [88, 149], "360": [88, 106, 311, 345], "380": [88, 285], "400": [88, 185], "408": [88, 90, 91, 311], "430": [88, 232], "432": [88, 100, 144, 357], "438": 88, "440": 88, "442": 88, "448": 88, "460": 88, "466": [88, 300], "478": [88, 311], "480": 88, "486": 88, "490": [88, 141, 172, 299], "498": [88, 100], "502": 88, "508": 88, "511": [88, 300, 311], "528": 88, "540": 88, "546": 88, "556": 88, "562": 88, "568": 88, "570": 88, "580": [88, 232], "586": 88, "592": [88, 232], "598": 88, "springer": [88, 144, 178, 224, 298], "brief": [88, 156], "plan": [88, 311, 349], "infer": [88, 118], "2001": [88, 99, 100, 170, 299, 357], "____________________________________________________________________________________________________": 88, "spars": [88, 98, 110, 135, 178, 185, 223, 301, 318], "largest_available_k": [88, 89, 91], "abl": [88, 89, 118, 136, 170, 171, 174, 232, 236, 299, 343, 349], "ask": [88, 89, 130, 156, 169, 236, 298, 299, 314, 317, 324, 330, 338, 349, 358, 364], "consol": 89, "orthogonal_arrays_build_recurs": [89, 90, 91], "orthogonal_arrays_find_recurs": [89, 90, 91], "is_transversal_design": 89, "wilson_construct": [89, 91], "rm": [89, 91, 296], "td_product": 89, "oa_find_disjoint_block": 89, "oa_relabel": 89, "oa_from_vmt": 89, "vert": 89, "oa_from_wider_oa": 89, "qdm_from_vmt": 89, "cd1996": 89, "oamainfunct": 89, "strength": [89, 349], "oa_7_50": 89, "statu": [89, 106], "565": 89, "master": 89, "154": [89, 232], "add_col": 89, "fill_hol": 89, "itd_": 89, "infty_u": 89, "infty_i": 89, "2nu": 89, "web": 89, "petr": 89, "milehigh": 89, "x_g": 89, "ac1994": 89, "y_j": 89, "implicitli": [89, 106, 107, 343], "subscript": 89, "mx": 89, "my": [89, 110, 331, 341, 363], "td1": 89, "td2": 89, "td_1": 89, "td_2": 89, "1_1": 89, "1_k": 89, "2_1": 89, "2_k": 89, "td6_84": 89, "transversaldesign": 89, "s_x": 89, "rise": [89, 95, 99, 128, 185, 188, 213, 233, 272], "ioa": 89, "missing_block": 89, "td_4_10": 89, "674": [89, 364], "u_i": [89, 91, 360], "b_t": [89, 90], "hananibibd": 89, "bvr1982": 89, "untrunc": 89, "i0": [89, 229], "ip_i": 89, "find_wilson_decomposition_with_one_truncated_group": [89, 91], "oab": 89, "counterpart": [90, 170, 224, 235, 238], "construction_3_3": [90, 91], "construction_3_4": [90, 91], "construction_3_5": [90, 91], "construction_3_6": [90, 91], "construction_q_x": [90, 91], "oa_and_ov": 90, "thwart_lemma_3_5": [90, 91], "thwart_lemma_4_1": [90, 91], "three_factor_product": [90, 91], "n_1n_2n_3": [90, 91], "oval": 90, "colinear": 90, "systemat": [90, 185, 224, 233, 238, 261, 299], "comment": [90, 106, 122, 136, 158, 241], "doubt": 90, "find_brouwer_separable_design": [90, 91], "andri": 90, "european": [90, 106, 183], "1980": 90, "sciencedirect": [90, 141, 341], "scienc": [90, 106, 107, 129, 141, 150, 190, 285, 298, 341], "pii": [90, 141, 341], "s0195669880800199": 90, "e3": [90, 136, 252], "iv": [90, 125, 145, 170, 222, 229, 270, 301], "e4": [90, 136, 252], "find_construction_3_3": [90, 91], "177": [90, 91, 144, 239], "nichola": [90, 91], "cavenagh": [90, 91], "concern": [90, 91, 270, 275], "eight": [90, 91, 235], "find_construction_3_4": [90, 91], "164": [90, 232], "find_construction_3_5": [90, 91], "find_construction_3_6": [90, 91], "756": 90, "AND": 90, "find_q_x": [90, 91], "158": [90, 91, 106, 299, 311], "malcolm": 90, "374": 90, "n3": 90, "dukesling14": [90, 91], "rees93": 90, "rees00": 90, "sn_1": 90, "n_1n_2": [90, 91], "1_i": [90, 139], "promis": 90, "n_1n_3": 90, "smoothli": [90, 235], "find_three_factor_product": [90, 91], "648": [90, 91], "duke": [90, 132, 187], "alan": [90, 131, 180], "ling": 90, "1401": 90, "1466": 90, "rolf": 90, "257": [90, 92, 331], "enrich": 90, "m_x": 90, "accordingli": [90, 105, 125, 136, 139, 144, 180, 185, 193, 204, 268, 273, 357], "find_thwart_lemma_3_5": [90, 91], "mieczyslaw": 90, "wojta": 90, "1046": [90, 91], "os64": 90, "find_thwart_lemma_4_1": [90, 91], "ostrom": 90, "sherk": 90, "bull": [90, 100], "vol7": 90, "1964": [90, 106, 311], "find_recursive_construct": 91, "find_": 91, "find_wilson_decomposition_with_two_truncated_group": 91, "x_c": 91, "hypothes": 91, "stronger": [91, 180, 185], "1048": 91, "1059": 91, "1524": 91, "2164": 91, "3362": 91, "3992": 91, "3994": 91, "207": [91, 100, 106, 352], "int_as_sum": 91, "s_k": [91, 108, 143, 159, 186, 338], "kirkman": 92, "v_4_1_rbibd": 92, "pbd_4_7": 92, "pbd_4_7_from_i": 92, "3v": 92, "nn": [92, 112, 118, 122, 142, 143, 186, 189, 224, 244, 349, 353, 354, 357, 367], "stinson91": 92, "novemb": [92, 94, 144], "393": 92, "90294": 92, "rcw71": 92, "rai": [92, 96, 235, 237, 335], "chaudhuri": 92, "schoolgirl": 92, "proceed": [92, 142, 178, 186, 233], "symposia": 92, "pure": [92, 229, 288, 335, 347, 349, 357], "resolvable_bibd": 92, "ix": [92, 178], "kirkmman": 92, "0123456789abcd": 92, "to_nam": 92, "r_s_t": 92, "dai": [92, 106, 132, 178, 180], "07e": 92, "18e": 92, "29e": 92, "3ae": 92, "4be": 92, "5ce": 92, "6de": 92, "24a": 92, "35b": 92, "46c": 92, "05d": 92, "028": 92, "26b": 92, "03c": 92, "14d": 92, "049": 92, "15a": 92, "458": 92, "569": 92, "06a": 92, "01b": 92, "12c": 92, "23d": 92, "347": [92, 232], "acd": 92, "7bd": 92, "78c": 92, "89d": 92, "79a": 92, "8ab": 92, "9bc": 92, "kts15": 92, "3q": 92, "sqs_n": 93, "understand": [93, 105, 235, 364], "han1960": 93, "horan": 93, "hurlbert": 93, "hh2012": 93, "listen": 93, "pauvr": 93, "delahay": 93, "redistribut": 93, "two_n": 93, "three_n_minus_two": 93, "three_n_minus_eight": 93, "three_n_minus_four": 93, "four_n_minus_six": 93, "twelve_n_minus_ten": 93, "12n": 93, "sqs_": 93, "barp": 93, "ep": [93, 182, 212, 235, 349], "barp_system": 93, "k_": [93, 142, 273, 287, 289, 298, 364], "sq": [93, 282], "relabel_system": 93, "upl": 93, "sqs8": 93, "sqs4": 93, "aut": [94, 106, 158, 306], "bitset": 94, "struct": [94, 171], "limb": 94, "set_spac": 94, "uint64_t": 94, "address": [94, 112], "sizeof": 94, "void": 94, "induced_hypergraph": 94, "h1": [94, 106, 273], "tmp1": 94, "trace_hypergraph64": 94, "subsetneq": 94, "r_0": [94, 119, 229], "rememb": [94, 222, 306], "qsort": 94, "qsort_r": 94, "slowdown": 94, "huge": [94, 106], "influenc": [94, 106], "heurist": [94, 122, 158], "relabel_heurist": 94, "airport": 94, "chennai": 94, "subhypergraphsearch": 94, "hard": [94, 134, 241, 299, 349], "cliqu": 94, "ti": [94, 125, 128, 237, 238], "seidel": [95, 136], "isol": [95, 354], "cf": [95, 106, 107, 119, 136, 184, 186, 236, 311, 349, 364], "dima": 95, "pasechnik": 95, "aug": 95, "is_regular_twograph": 95, "taylor_twograph": 95, "taylor": [95, 235, 318, 349], "is_twograph": 95, "twograph_descend": 95, "twograph": 95, "completegraph": [95, 185], "line_graph": 95, "pc": [95, 180, 185], "1260": 95, "pathgraph": 95, "hermitean": 95, "7e": 95, "strongly_regular_graph": 95, "northwest": [96, 114, 132, 158, 309, 347], "northwestdiagram": 96, "roth": [96, 170], "rothediagram": 96, "trevor": [96, 170, 309, 310], "karn": [96, 170, 309, 310], "2022": [96, 170, 306, 309, 310, 340, 350], "n_row": 96, "n_col": 96, "arbirtrari": 96, "absenc": [96, 349], "n_cell": 96, "number_of_cel": 96, "ncol": [96, 134, 137, 223, 235], "number_of_col": 96, "nrow": [96, 134, 137, 223, 235], "number_of_row": 96, "dgm": 96, "from_composit": 96, "vdash": [96, 143, 158, 283, 299, 301, 318], "from_polyomino": 96, "from_zero_one_matrix": 96, "presenc": [96, 170], "j2": [96, 285, 338], "notn": 96, "implicit": [96, 354, 360], "peelable_tableaux": 96, "peelabl": 96, "plai": [96, 158, 162, 235, 241, 331, 342, 349, 357], "jeu": [96, 167, 168, 310, 341], "taquin": [96, 167, 168, 310, 341], "rs1995": 96, "nwd": 96, "251643": 96, "64817235": 96, "d_5": [96, 222], "d3": [96, 222, 250, 251], "remark": [96, 125, 143, 144, 219, 235, 239, 289, 349], "confid": 96, "live": [96, 102, 106, 127, 209, 233, 235, 239, 261, 268, 282, 285, 289, 292, 298, 335], "nwdgm": 96, "protyp": 96, "omega_j": 96, "rothe_diagram": [96, 170], "partiton": 96, "ferrers_diagram": [96, 158, 162, 309, 349], "altough": 96, "subtl": 96, "axi": [96, 99, 172, 180, 224, 354, 358], "from_skew_partit": 96, "from_parallelogram_polyomino": 96, "parallelogrampolyomino": [96, 156], "from_permut": [96, 193], "death": 96, "across": [96, 99, 118, 139, 229, 235, 239, 240, 273, 338, 341, 343], "stephen": 97, "doti": 97, "aaron": [97, 139], "lauv": [97, 139], "georg": [97, 161], "seeling": [97, 161], "brauer": [97, 270], "individu": [97, 122, 158, 162, 216, 232, 237, 298, 311, 327, 343, 364], "diagram_algebra": [97, 275], "abstractpartitiondiagram": 97, "abstractsetpartit": [97, 275], "pd": [97, 166, 275], "pd1": 97, "pd2": 97, "pd3": 97, "pd4": 97, "base_diagram": 97, "count_blocks_of_s": 97, "partitiondiagram": [97, 275], "flip": [97, 99, 293, 335, 341], "is_planar": [97, 159, 180, 349], "brauerdiagram": 97, "propagating_numb": [97, 159], "set_partit": [97, 178, 180, 275], "primari": [97, 137, 157, 306], "_diagram_func": 97, "elm": [97, 149, 161, 178, 180, 181, 185], "braueralgebra": 97, "subpartitionalgebra": 97, "unitdiagrammixin": 97, "jucys_murphi": [97, 338], "juci": [97, 338, 342], "murphi": [97, 338, 342], "naz96": 97, "nazarov": 97, "664": 97, "693": 97, "bd1": 97, "bd2": 97, "bijection_on_free_nod": 97, "two_lin": 97, "elm2": 97, "involution_permutation_tripl": 97, "curt": 97, "graham": [97, 311], "lehrer": [97, 299], "honest": [97, 309], "is_elementary_symmetr": 97, "from_involution_permutation_tripl": 97, "d1_d2_pi": 97, "gl1996": 97, "cellular": [97, 170, 338], "invention": 97, "mathematica": [97, 106, 185, 188, 213], "symmetric_diagram": 97, "placement": [97, 273, 275], "diagramalgebra": 97, "pa": [97, 159, 307], "diagrambasi": 97, "idealdiagram": 97, "orbitbasi": 97, "equat": [97, 107, 112, 118, 119, 129, 143, 144, 148, 161, 170, 233, 239, 268, 285, 288, 289, 299, 301, 327, 349, 354, 369], "bh2017": 97, "moebiu": [97, 179, 180, 183, 311], "o2": [97, 139], "orbit_basi": 97, "ob": 97, "contrast": [97, 106, 107, 118, 299], "to_diagram_basi": 97, "to_orbit_basi": 97, "diagram_basi": 97, "sp": [97, 143, 149, 159, 194, 222, 275, 282, 298, 299, 300, 327, 337, 339, 354], "o1": [97, 139], "o3": 97, "o4": 97, "nevertheless": [97, 106], "vivid": 97, "speak": [97, 118, 122, 137, 224, 265, 306, 342, 349, 357], "predefin": [97, 106, 222, 308], "excel": [97, 235, 298], "hr2005": 97, "Be": [97, 106, 154, 170, 353, 361, 364], "wish": [97, 139, 235, 272], "00000000000000": [97, 113, 166, 241, 357, 358], "temperleyliebalgebra": 97, "sr": [97, 129, 158, 225, 233, 358], "fractionfield": [97, 282, 285, 286, 288, 289, 292, 298, 299], "l_i": [97, 99, 124, 180, 212, 213, 354], "eny2012": 97, "2i": [97, 136, 347], "cre2020": 97, "eny2013": 97, "jucys_murphy_el": 97, "v1": [97, 102, 106, 107, 354], "lsum": 97, "floor": [97, 121, 122, 156, 311, 349], "ceil": [97, 121, 122, 311, 341], "p2h": 97, "generator_a": 97, "generator_": 97, "borrow": 97, "leading_term": 97, "planaralgebra": 97, "planardiagram": 97, "pld": 97, "propagatingid": 97, "tl_diagram_ascii_art": 97, "use_unicod": [97, 155], "ascii": [97, 99, 155, 156, 224, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 264, 265, 266, 267], "art": [97, 99, 105, 155, 224, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 264, 265, 266, 267, 298], "unicod": [97, 99, 155], "tl": 97, "temperleyliebdiagram": 97, "identity_set_partit": 97, "brauer_diagram": 97, "diagram_latex": 97, "edge_opt": 97, "edge_addit": 97, "1ex": 97, "tikzstyl": 97, "7pt": 97, "sep": [97, 100, 363], "1pt": 97, "control": [97, 110, 122, 190, 349], "ideal_diagram": 97, "all_diagram": 97, "partition_diagram": 97, "to_set_partit": [97, 159], "pair_to_graph": [97, 159], "15958": [97, 159], "sp3": [97, 159, 170], "sp4": [97, 159], "planar_diagram": 97, "da2": 97, "da5o2": 97, "planar_partitions_rec": 97, "rho_1": [97, 296, 299], "rho_k": 97, "loss": [97, 125], "to_brauer_partit": 97, "to_graph": [97, 159, 169], "allexactcov": [98, 135], "ajanki": 98, "dlxmatrix": 98, "initialsolut": 98, "i_11": [98, 135], "i_12": [98, 135], "i_1r": [98, 135], "i_m1": [98, 135], "i_m2": [98, 135], "i_jk": [98, 135], "1110": [98, 135], "1010": [98, 107, 135, 152, 190, 354, 360], "0100": [98, 135, 352, 362, 364], "0001": [98, 135, 183, 190, 273, 354], "dlxm": 98, "reserv": [98, 106, 118], "header": 98, "apologi": 98, "heartach": 98, "caus": [98, 154, 180, 218, 235, 272, 310, 338, 341, 343, 349, 361], "blame": 98, "yourself": 98, "permiss": 98, "highli": [98, 349], "sudoku": 98, "beautifulli": 98, "cur": 98, "best_column": 98, "uncov": 98, "oneexactcov": [98, 135], "sta": [99, 128, 144, 158, 273, 281, 296, 297, 298, 299, 301, 310, 341], "ec2": [99, 128, 144, 158, 273, 299, 310, 341], "stacat98": 99, "dan": [99, 152, 158, 170, 233], "drake": [99, 152, 158, 170], "dyckwordbacktrack": 99, "nondecreasingparkingfunct": [99, 151, 157], "area": [99, 121, 156, 157, 158, 343, 358], "dinv": [99, 157], "bounc": [99, 156], "jean": [99, 152, 236, 237, 288, 298, 299, 304, 357], "baptist": [99, 152, 304], "priez": [99, 152, 304], "richard": [99, 118, 185, 296, 298], "stanlei": [99, 118, 120, 145, 181, 185, 234, 281, 286, 296, 297, 298, 299, 301, 341], "excerpt": 99, "mit": 99, "rstan": 99, "ec": [99, 364], "hag2008": 99, "haglund": [99, 141, 145, 157, 233, 293], "harmon": [99, 144, 157, 236], "appendix": [99, 157, 233, 298], "pennsylvania": [99, 157], "philadelphia": [99, 157], "bk2001": 99, "bandlow": [99, 142, 144, 298, 341, 343], "killpatrick": 99, "to_inv": 99, "electron": [99, 106, 149, 298, 358], "ep2004": 99, "elizald": 99, "pak": [99, 120, 341], "jcta": [99, 301], "105": [99, 159, 162, 169, 185, 232, 299, 307, 311], "ck2008": 99, "claesson": 99, "kitaev": 99, "s\u00e9minair": 99, "lotharingien": 99, "combinatoir": [99, 357, 358], "0805": 99, "1325": 99, "knu1973": 99, "addison": 99, "weslei": 99, "ma": 99, "kra2001": 99, "krattenthal": 99, "adv": [99, 141, 169, 232, 288, 292, 298, 299, 335], "appl": [99, 106, 169, 289, 352, 357, 364], "510": 99, "530": [99, 302], "ds1992": 99, "denis": 99, "simion": [99, 170], "dyck_word": [99, 122, 128, 158, 349, 358], "completedyckword": 99, "dyckword_complet": 99, "from_catalan_cod": 99, "from_area_sequ": 99, "to_area_sequ": [99, 157], "from_non_decreasing_parking_funct": 99, "pf": [99, 151, 157, 234], "from_noncrossing_partit": 99, "ncp": [99, 113], "noncrossing_partit": 99, "dw": [99, 128, 151, 152], "to_noncrossing_partit": 99, "dws2": 99, "completedyckwords_al": 99, "dyckwords_al": 99, "height_poset": 99, "dw1": [99, 128], "dw2": [99, 128], "completedyckwords_s": 99, "dyckwords_s": 99, "semilength": 99, "ascend": 99, "lowest": [99, 128, 170, 171, 180, 232, 341, 358], "preced": [99, 106, 128, 222, 287, 289], "north": [99, 106, 132, 152, 153, 156, 158, 302, 341, 358], "east": [99, 132, 152, 153, 156, 158, 309, 358], "ne": [99, 153, 157, 158, 231, 233, 309, 358], "se": [99, 149, 158, 309, 354], "area_sequ": [99, 157], "heights_sequ": 99, "to_path_str": 99, "___": [99, 151, 152, 157], "ascent_prime_decomposit": 99, "associated_parenthesi": 99, "po": [99, 128, 156, 178, 180, 184, 235, 334, 354, 357], "parenthesi": [99, 341], "catalan_factor": 99, "cc1982": 99, "lot2005": 99, "quadrant": [99, 152], "from_height": 99, "min_from_height": 99, "closer": [99, 231, 275], "tikz_scal": [99, 128, 152, 275], "vallei": 99, "number_of_close_symbol": 99, "number_of_double_ris": 99, "number_of_initial_ris": [99, 128], "number_of_open_symbol": 99, "number_of_peak": [99, 170], "number_of_vallei": 99, "number_of_touch_point": [99, 128], "position_of_first_return": 99, "positions_of_double_ris": 99, "underpath": [99, 152, 157], "south": [99, 106, 132, 156, 158, 309, 358], "_____": [99, 152, 157], "3x": [99, 157], "_______": [99, 157], "returns_to_zero": 99, "exclud": [99, 156, 178, 180, 185, 299, 311, 349], "rise_composit": 99, "lower_dyck_word": [99, 128], "upper_dyck_word": [99, 128], "pad": [99, 106, 143, 158, 161, 235, 299], "region": [99, 118, 158, 238, 345, 358], "subdivid": [99, 265], "ordin": [99, 180, 185], "l_0": [99, 180, 233], "hopefulli": [99, 238], "to_binary_tree_tamari": 99, "to_standard_tableau": [99, 130], "to_tamari_sorting_tupl": 99, "to_catalan_cod": 99, "touch_composit": [99, 157], "touch_point": [99, 157], "abscissa": 99, "compris": [99, 156, 272], "parenthes": [99, 111, 170, 328, 341, 349], "dwb": 99, "shouldn": 99, "saniti": [99, 194], "_rec": 99, "dyckwords_class": 99, "area_dinv_to_bounce_area_map": 99, "bounce_area_to_area_dinv_map": 99, "trail": [99, 106, 122, 125, 158, 161, 281, 296, 297, 299, 301, 310, 341, 354, 369], "billiard": 99, "ball": [99, 328, 335], "shot": 99, "west": [99, 132, 158, 358], "strike": 99, "j_r": [99, 139, 144], "bounce_path": [99, 156], "travel": 99, "characteristic_symmetric_funct": 99, "fraction_field": [99, 130, 144, 145, 149, 157, 231, 233, 238, 280, 282, 283, 285, 286, 288, 289, 292, 293, 298, 299, 349, 369], "nabla": [99, 132, 157, 289, 299], "decomposition_revers": 99, "haiman": [99, 118, 145, 181, 233, 238, 289, 293], "first_return_decomposit": 99, "list_parking_funct": 99, "number_of_parking_funct": 99, "pi_i": [99, 181, 185, 229, 230, 233, 238], "number_of_tunnel": 99, "tunnel_typ": 99, "tunnel": 99, "pyramid_weight": 99, "pyramid": [99, 311], "reading_permut": 99, "furthest": 99, "to_321_avoiding_permut": 99, "exced": [99, 144, 275, 299], "number_of_fixed_point": [99, 170], "weak_exced": [99, 170], "longest_increasing_subsequence_length": [99, 170], "to_alternating_sign_matrix": [99, 113, 170, 308], "to_non_decreasing_parking_funct": 99, "bian": 99, "stu2008": 99, "to_noncrossing_permut": 99, "mathieu": 99, "dutour": 99, "maj": [99, 139, 170, 293], "peal": 99, "to_ordered_tre": [99, 156], "to_pair_of_standard_tableaux": 99, "to_triangul": 99, "stai": 99, "co": [99, 139, 144, 145, 178, 180, 226, 233, 293, 309, 311], "chop": [99, 369], "recov": [99, 118, 120, 130, 134, 139, 161, 185, 187, 189, 212, 216, 219, 231, 232, 233, 235, 238, 241, 269, 349], "cha2005": 99, "to_triangulation_as_graph": 99, "perimet": [99, 113, 118, 156, 358], "adw": 99, "dw32": 99, "surpass": [99, 310], "understood": [99, 105, 120, 144, 158, 185, 222, 273, 298, 299, 341, 359], "diagram_styl": [99, 152], "latex_bounce_path": 99, "latex_color": [99, 152], "latex_diagon": 99, "latex_line_width_scalar": [99, 128, 152], "latex_peak": 99, "latex_tikz_scal": [99, 128, 152], "latex_vallei": 99, "k_2": [99, 125, 142, 170, 186, 239, 268, 310, 341], "is_a": [99, 151, 157], "is_area_sequ": 99, "return_touch": 99, "replace_paren": 99, "open_symbol": 99, "close_symbol": 99, "replace_symbol": 99, "patch": [100, 106], "e1star": [100, 357], "ccc": 100, "bigcup_": [100, 349], "timo": [100, 357], "jolivet": [100, 357], "stepan": [100, 353, 357], "starosta": [100, 353, 357], "sebastien": [100, 355, 357, 358, 367], "labb": [100, 355, 357, 358, 367], "redesign": 100, "ai": [100, 360], "arnoux": [100, 357], "ito": [100, 357], "pisot": [100, 357], "belg": 100, "sano": [100, 357], "anal": [100, 289], "183": [100, 357], "e_one_star": [100, 357], "wordmorph": [100, 188, 351, 352, 354, 355, 357, 358, 361, 364, 367], "preimag": [100, 128, 148, 328, 335], "repaint": 100, "sequenti": 100, "yellow": [100, 132, 158, 181, 184, 345], "matplotlib": [100, 113, 185, 235, 354], "datad": [100, 354], "summer": 100, "hsv": [100, 354, 357], "3d": [100, 172, 235, 239, 349, 357, 358], "plot3d": [100, 172, 188, 235, 349], "plot_tikz": 100, "216506cm": 100, "125000cm": 100, "000000cm": 100, "250000cm": 100, "definecolor": 100, "facecolor": 100, "rgb": [100, 113, 235], "unimodular": [100, 114, 357], "enabl": [100, 170, 190, 332, 349], "inverse_matrix": 100, "face_contour": 100, "contour": [100, 354], "faces_of_color": 100, "faces_of_typ": 100, "faces_of_vector": 100, "occurrences_of": 100, "projmat": 100, "opac": [100, 239, 357], "isometr": [100, 345], "print_tikz_env": 100, "edgecolor": 100, "drawzero": 100, "extra_code_befor": 100, "extra_code_aft": 100, "environ": [100, 155, 156], "602": [100, 232], "add_to_preambl": 100, "usepackag": [100, 106, 132], "shade": [100, 307], "7071": 100, "986": [100, 362], "433013cm": 100, "500000cm": 100, "50000000000000": [100, 168, 358], "80000000000000": [100, 114], "5mm": 100, "set1": 100, "colormap": [100, 357], "shortcut": [100, 143, 224, 270, 349, 353], "proofread": [101, 195, 312], "weightedintegervector": [101, 126, 349], "integervectorsmodpermutationgroup": [101, 102, 127], "permutationgroup": [101, 102, 127, 137, 341, 343], "finitesetmap": 101, "pairwisecompatiblesubset": [101, 185, 333], "orderedmultisetpartitionsintoset": [101, 139], "orderedmultisetpartitionintoset": [101, 139], "proemin": 101, "map_reduc": 101, "latticepolytop": [101, 188, 349], "enumeration_mod_permgroup": 102, "all_children": 102, "max_part": [102, 121, 122, 125, 127, 130, 138, 158, 188, 292, 349], "clonableintarrai": [102, 125, 127], "list_clone_demo": [102, 275], "increasingintarrai": 102, "canonical_children": 102, "sg": [102, 127], "is_canon": [102, 127], "strong_generating_system": 102, "ia": 102, "canonical_representative_of_orbit_of": 102, "lex_cmp": 102, "v2": [102, 106, 354], "v_2": [102, 139, 170, 185, 273, 354], "lex_cmp_parti": 102, "nick": [103, 311], "alexand": [103, 311], "expnum": 103, "aa": [103, 136, 138, 354, 357, 358, 363, 367], "exponenti": [103, 106, 158, 233, 276, 281, 284, 290, 296, 297, 299, 311, 318, 327, 349, 354, 357], "4140": [103, 311], "21147": [103, 311], "expnums2": 103, "vanilla": 103, "compil": [103, 156], "monad": 105, "reader": [105, 145, 224, 298], "wiki": [105, 235, 364], "haskel": 105, "the_monad": 105, "previous_issu": 105, "sunko": 105, "shorter": [105, 143, 158, 228, 239, 298, 354], "tweak": [105, 241, 357], "fast_vector_partit": 105, "min_val": 105, "older": [105, 343], "impress": 105, "fastvpart": 105, "vpart": 105, "vectorpartit": [105, 350], "686": [105, 311], "dickson": 105, "recursive_vector_partit": 105, "vl": 105, "recursive_within_from_to": 105, "use": 105, "flag": [105, 106, 132, 178, 185, 186, 236, 274, 340, 347], "ineffici": 105, "cumul": 105, "accumul": [105, 121, 311], "within_from_to": 105, "clip": [105, 235], "signific": [105, 106, 107, 185, 299, 349], "captur": 105, "transpar": [105, 185, 235, 239], "protect": 105, "preconstruct": 106, "iter_st": [106, 107], "iter_initial_st": 106, "final_st": [106, 107, 360], "iter_final_st": [106, 107], "iter_transit": 106, "induced_sub_finite_state_machin": 106, "accessible_compon": 106, "coaccessible_compon": 106, "coaccess": 106, "final_compon": 106, "empty_copi": 106, "deep": 106, "deepcopi": 106, "with_output": [106, 107], "add_stat": 106, "delete_st": 106, "add_transit": 106, "add_transitions_from_funct": 106, "input_alphabet": [106, 107], "output_alphabet": [106, 107], "on_duplicate_transit": 106, "add_from_transition_funct": 106, "delete_transit": 106, "remove_epsilon_transit": 106, "split_transit": 106, "determine_alphabet": 106, "determine_input_alphabet": 106, "determine_output_alphabet": 106, "construct_final_word_out": 106, "with_final_word_out": 106, "has_stat": 106, "has_initial_st": 106, "has_final_st": 106, "has_transit": 106, "is_determinist": 106, "is_equival": [106, 107], "is_markov_chain": 106, "is_monochromat": 106, "number_of_word": 106, "asymptotic_mo": 106, "varianc": 106, "moments_waiting_tim": 106, "wait": [106, 107, 235], "epsilon_successor": 106, "shannon_parry_markov_chain": 106, "parri": 106, "measur": [106, 158, 184, 345], "disjoint_union": [106, 185], "kleene_star": [106, 107], "kleen": 106, "product_finitestatemachin": 106, "input_project": 106, "output_project": 106, "determinis": 106, "iter_process": 106, "prepone_output": 106, "prepon": 106, "equivalence_class": 106, "merged_transit": 106, "markov_chain_simplif": 106, "adjacency_matrix": [106, 167, 360], "set_coordin": 106, "default_format_transition_label": 106, "format_letter_neg": 106, "format_transition_label_revers": 106, "final_word_out": [106, 107], "is_initi": 106, "initial_prob": 106, "fully_equ": 106, "from_stat": 106, "to_stat": 106, "word_in": 106, "word_out": [106, 107], "tape": 106, "preview_word": 106, "full_group_bi": 106, "startswith": [106, 311], "fsmlettersymbol": 106, "fsmwordsymbol": 106, "is_fsmstat": 106, "is_fsmtransit": 106, "is_finitestatemachin": 106, "duplicate_transition_ignor": 106, "duplicate_transition_raise_error": 106, "duplicate_transition_add_input": 106, "fsm": 106, "night": 106, "sunris": 106, "sunset": 106, "anyhow": 106, "got": [106, 233], "digit": [106, 107, 190, 311, 340, 349, 352, 354, 355, 361, 364], "arriv": [106, 170], "forbid": 106, "forbidden": [106, 132, 188, 349, 363], "containsword": [106, 107], "naf_neg": 106, "emptyword": [106, 107], "naf_posit": 106, "typeset": 106, "pgf": 106, "tol": 106, "1e": 106, "auto": [106, 186, 280, 285], "v0": [106, 107], "000000": [106, 113, 156], "texttt": 106, "anchor": [106, 181, 182, 184], "initial_wher": 106, "format_lett": 106, "format_state_label": 106, "usetikzlibrari": 106, "preambl": 106, "land": [106, 107, 310], "feed": 106, "1101": [106, 118, 364], "0010": [106, 190], "automatic_output_typ": 106, "tm": [106, 352, 354, 357, 364], "thuemorseword": [106, 352, 354, 364, 365], "0110100110010110100101100110100110010110": [106, 352, 355, 361, 364], "1001011001101001011010011001011001101001": 106, "remaind": [106, 125, 129, 281, 296, 297, 298, 299, 301, 332, 341], "state_from": 106, "state_to": 106, "gray_cod": [106, 107, 116], "bitwis": 106, "xor": 106, "easier": [106, 112, 196, 321], "shift_right_transit": 106, "shift_right_transduc": 106, "weird": 106, "enforc": [106, 185], "xor_transit": 106, "__xor__": 106, "xor_transduc": 106, "fed": 106, "product_transduc": 106, "gray_transduc": 106, "prepackag": 106, "graycod": [106, 107], "srang": [106, 107, 129, 174], "state_hook": 106, "finite_state_machin": 106, "transition_hook": 106, "rerun": 106, "check_epsilon_transit": 106, "serious": 106, "cleaner": [106, 235], "16538": 106, "usag": [106, 122, 185, 306, 349, 362], "update_count": 106, "stopiter": [106, 137, 169, 275, 345, 349, 354], "next_stat": [106, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "elif": 106, "hkp2015": [106, 107], "clemen": [106, 107], "heuberg": [106, 107], "sara": [106, 107], "kropf": [106, 107], "helmut": 106, "proding": 106, "fluctuat": 106, "hkw2015": 106, "stephan": [106, 369], "wagner": 106, "covari": 106, "ejc": 106, "004": 106, "krenn": [106, 107, 129, 174, 190], "releas": 106, "candid": [106, 121], "15078": 106, "bunch": [106, 158], "15841": 106, "15847": 106, "15848": 106, "15849": 106, "15850": 106, "15922": 106, "15923": 106, "15924": 106, "15925": 106, "15928": 106, "15960": 106, "15961": 106, "15962": 106, "15963": 106, "15975": 106, "16016": 106, "16024": 106, "16061": 106, "16128": 106, "16132": 106, "16138": 106, "16139": 106, "16140": 106, "16143": [106, 107], "16144": 106, "16145": 106, "16146": 106, "16191": 106, "16200": 106, "16205": 106, "16206": 106, "16207": 106, "16229": 106, "16253": 106, "16254": 106, "16255": 106, "16266": 106, "16355": 106, "16357": [106, 232], "16387": 106, "16425": 106, "16539": 106, "16555": 106, "16557": 106, "16588": 106, "16589": 106, "16666": 106, "16668": 106, "16674": 106, "16675": 106, "16677": 106, "18227": [106, 107], "acknowledg": [106, 107, 129, 190, 233, 298], "austrian": [106, 107, 129, 190], "fund": [106, 107, 129, 190], "fwf": [106, 107, 129, 190], "24644": [106, 107, 129, 190], "n26": [106, 107, 129, 190], "only_accessible_compon": 106, "pipe": [106, 147, 149, 275], "new_input_alphabet": 106, "aut1": 106, "aut2": 106, "frozenset": [106, 139, 180, 185, 276, 345], "unhash": 106, "19199": 106, "moor": [106, 341, 354], "brzozowski": 106, "b_tran": 106, "c_tran": 106, "input_tap": 106, "use_multitape_input": 106, "list_of_output": 106, "only_accept": 106, "full_output": 106, "always_include_output": 106, "format_output": 106, "readabl": [106, 235, 349], "write_final_word_out": 106, "activ": [106, 349, 360], "process_all_prefixes_of_input": 106, "process_iterator_class": 106, "coincid": [106, 112, 118, 144, 160, 224, 231, 233, 238, 269, 341, 357], "experiment": [106, 129, 190, 236, 237], "condens": [106, 347], "exit": 106, "stationari": 106, "s1948": 106, "p1964": 106, "p_naf": 106, "hkp2015a": 106, "carri": [106, 112, 118, 147, 241, 272, 360], "1503": 106, "08816": 106, "intrins": 106, "transact": 106, "american": [106, 186, 299, 364], "societi": [106, 186], "1090": [106, 186, 187, 306], "s0002": [106, 170, 186, 187, 306], "9947": [106, 170, 187, 306], "0161372": 106, "shannon": 106, "commun": [106, 208, 357], "1948": [106, 186, 187], "423": [106, 238], "1538": 106, "7305": 106, "tb01338": 106, "word_out_funct": 106, "fsmemptywordsymbol": 106, "thrown": [106, 129, 190], "visit": [106, 360], "invok": [106, 158, 239, 270], "abcd": [106, 185, 275, 304, 354, 357, 358, 359, 364, 367], "tape_cach": 106, "finishedbranch": 106, "encapsul": [106, 162], "track_numb": 106, "return_word": [106, 354], "allow_label_non": 106, "distinguish": [106, 119, 128, 143, 181, 184, 185, 229, 230, 233, 236, 272, 299, 311, 347, 349], "subsequenti": 106, "shallow": 106, "memo": 106, "compare_color": 106, "store_states_dict": 106, "pendant": 106, "occurr": [106, 107, 112, 158, 184, 234, 352, 354, 360, 363], "skip": [106, 122, 125, 129, 178, 180, 185, 190, 191, 213, 262, 282, 285, 338, 342, 349, 354], "lookuperror": 106, "emul": [106, 233], "iterator_typ": 106, "binary_invert": 106, "100100": 106, "fibonacciword": [106, 352, 354, 362, 364], "0100101001001010010100100101001001010010": [106, 352, 364], "1011010110110101101011011010110110101101": 106, "explore_existing_st": 106, "new_stat": 106, "output_word": 106, "transition_funct": [106, 360], "labels_as_input": 106, "label_as_input": 106, "state1": 106, "state2": 106, "suitabl": [106, 144, 180, 222, 229, 261, 345, 357, 364], "equidistribut": [106, 170], "en": [106, 152, 222, 270, 357, 358], "vn": 106, "cn": [106, 300], "degrad": 106, "rescal": [106, 144, 235], "trivari": 106, "ham": [106, 107], "adjacent_form": [106, 107], "hp2007": 106, "binary_27": 106, "naf_27": 106, "weight_transduc": 106, "nafweight": 106, "asymptot": [106, 349], "aim": 106, "vanish": [106, 119, 186, 303], "block10": 106, "countsubblockoccurr": [106, 107], "block11": 106, "correl": [106, 136], "block01": 106, "product_01x10": 106, "block_differ": 106, "periodica": 106, "hungarica": 106, "1007": 106, "s10998": 106, "007": 106, "3081": 106, "hd": 106, "awar": [106, 185, 241, 270], "w_1w_2": 106, "is_automaton": 106, "is_transduc": 106, "allow_non_fin": 106, "default_format_lett": 106, "blank": 106, "emptywordlatex": 106, "perhap": [106, 118, 130, 184, 214, 289], "restor": [106, 143], "format_transition_label": 106, "custom_format_transition_label": 106, "eras": [106, 170, 349, 357, 367], "words_in_out": 106, "18989": 106, "new_class": 106, "fe": [106, 233], "p_b": [106, 184], "mathit": [106, 190], "fc": [106, 112], "customari": [106, 268], "sub_fsm": 106, "is_zero": [106, 107, 238], "sophist": 106, "trick": [106, 224, 235], "del": 106, "is_zero_polynomi": 106, "18556": 106, "simpler": [106, 129], "4r": 106, "multilett": 106, "undesir": 106, "loop_wher": 106, "accepting_styl": 106, "accepting_dist": 106, "accepting_wher": 106, "accepting_show_empti": 106, "equidistantli": 106, "radiu": [106, 275, 307, 345], "7ex": 106, "angl": [106, 235, 275, 345], "format_label": 106, "outlin": [106, 158, 275], "scriptstyl": 106, "10ex": 106, "v4": 106, "333": 106, "328": [106, 345], "298": 106, "style": [106, 132, 152, 185, 218, 222, 229, 232, 239, 270, 299], "merger": 106, "expectation_onli": 106, "affect": [106, 110, 269, 301], "probabilist": 106, "fgt1992": 106, "eqn": 106, "fhp2015": 106, "unexpect": 106, "p_j": [106, 185], "frac1": 106, "displaystyl": 106, "biggl": 106, "2h": [106, 232], "biggr": 106, "s1986": 106, "theory_expect": 106, "theory_vari": 106, "all_count": 106, "adder": 106, "number_of_operand": [106, 107], "p_0": [106, 185, 273], "threshold": [106, 107], "r_v": 106, "alphabet_set": 106, "philipp": 106, "flajolet": 106, "dani\u00e8l": 106, "gardi": 106, "lo\u00ff": 106, "thimoni": 106, "birthdai": [106, 289], "paradox": 106, "coupon": 106, "collector": 106, "0166": [106, 185], "218x": [106, 185], "90177": 106, "uta": 106, "freiberg": 106, "smirnov": [106, 299], "08096": 106, "g\u00e1bor": 106, "sz\u00e9keli": 106, "reidel": 106, "compani": 106, "qqbar": [106, 299, 357], "eigenvalu": [106, 222, 223, 231, 233, 236, 238, 270, 289, 296, 298, 299, 338, 342, 357], "nafpm": 106, "nafp": 106, "170820393249937": 106, "618033988749895": 106, "1708203932499369": 106, "characteristic_polynomi": [106, 184, 185, 302], "numberfield": [106, 166], "golden_ratio": [106, 364], "jordan": [106, 119, 186, 306], "j3": [106, 338], "new_transit": 106, "old_transit": 106, "valid_input": 106, "earliest": 106, "inbound": 106, "routin": [106, 194], "outbound": 106, "inconsequenti": 106, "suppress": [106, 265, 338], "cdcd": 106, "ced": 106, "cdc": 106, "adcd": 106, "aed": 106, "adc": [106, 357], "final_funct": 106, "a_d": 106, "b_d": 106, "transition1": 106, "transition2": 106, "t_a": [106, 212, 341], "t_b": [106, 341], "fsmq": 106, "fsmq1": 106, "assertionerror": [106, 127, 233, 238, 241], "fsm1": 106, "fsm2": 106, "fsm3": 106, "fsm4": 106, "xyz": [106, 109, 111, 117, 185, 357, 367], "reverse_output_label": 106, "discuss": [106, 114, 132, 170, 180, 222, 224, 228, 261, 269, 298, 299, 309, 349], "path_word_out": 106, "respons": [106, 273], "realist": 106, "binary_transit": 106, "advertis": 106, "superflu": 106, "anymor": [106, 170, 235], "bcdbcdbe": 106, "cdbe": 106, "dbe": 106, "transducer1": 106, "transducer2": 106, "count_11": 106, "count_10": 106, "count_11x10": 106, "aut11": 106, "bawo2012": 106, "javier": 106, "baliosian": 106, "dina": 106, "wonsev": 106, "jiacun": 106, "wang": [106, 341, 343], "010011": 106, "101100": 106, "fsm_simplifi": 106, "identif": [106, 298], "stackoverflow": 106, "3844832": 106, "1052778": 106, "0x7ff2e74e90d0": 106, "groupbi": 106, "prior": [106, 180, 185, 271, 367], "sortabl": [106, 170, 272, 357], "propos": [106, 360, 364], "15250161": 106, "suit": [106, 349], "is_fsmprocessiter": 106, "setup_latex_preambl": 106, "list_": 106, "tupleofwords_to_wordoftupl": 106, "tupleofword": 106, "wordoftuples_to_tupleofword": 106, "wordoftupl": 106, "anylett": 107, "recogn": [107, 229, 306, 349], "anyword": 107, "logic": [107, 126, 235], "subtract": [107, 118, 120, 128, 143, 161, 208, 269, 299, 311, 341], "subblock": 107, "transducergener": 107, "review": [107, 128], "16141": 107, "16142": 107, "16186": 107, "finite_state_machine_gener": 107, "automatongener": 107, "unari": 107, "i_l": 107, "o_0": 107, "o_l": 107, "o_j": 107, "word_funct": 107, "output_r": 107, "recursionrul": 107, "arg1": 107, "argn": 107, "symbolicr": [107, 129], "pose": [107, 349], "whatev": [107, 122, 282], "ternari": 107, "ternary_expans": 107, "weight_sequ": 107, "naf": 107, "binary_expans": 107, "announc": 107, "contradict": [107, 122, 143], "bypass": 107, "artifici": [107, 171], "paperfold": 107, "question": [107, 122, 222, 233, 234, 275, 299, 349, 358], "kappa": [107, 119, 143, 158, 178, 335, 338, 342], "posed": 107, "0d": 107, "kd": 107, "operand": [107, 185, 292, 314, 317, 324, 330], "lor": 107, "hamming_weight": 107, "unary_weight": 107, "joint": [107, 233], "fqsymbas": 108, "omega_involut": [108, 143, 144, 280, 281, 284, 296, 297, 299], "f_u": 108, "g_u": 108, "abus": [108, 118, 143, 185, 224, 239, 244, 261, 263, 268, 269, 298], "psi_involut": [108, 143, 144], "iota": [108, 143, 212], "dualiti": [108, 118, 142, 143, 144, 145, 180, 241, 245, 248, 299], "to_qsym": 108, "descents_composit": [108, 157, 170, 299], "quasisymmetricfunct": [108, 142, 143, 144, 145, 299], "from_symmetric_group_algebra": 108, "sga4": 108, "f_x": 108, "f_y": 108, "f_z": 108, "succ": [108, 109, 144, 235, 239], "prec_by_coercion": 108, "succ_by_coercion": 108, "fqsymbasis_abstract": 108, "piec": [108, 132, 235, 311, 345, 357], "mr": [108, 144, 145], "grirei18": [108, 144, 299, 301], "treatment": [108, 349], "modern": [108, 128, 136], "s_l": [108, 186], "f_v": 108, "f_e": 108, "agusot05": 108, "aguiar": [108, 149], "sottil": 108, "sum_v": 108, "_v": 108, "unitriangular": [108, 294, 300], "mobiu": 108, "viewpoint": 108, "standard_permut": [108, 170, 310, 341, 354], "richer": [108, 349], "malvenuto": [108, 144, 181], "malvenutoreutenau": 108, "lr1998": [108, 109], "prec_product_on_basi": [108, 109], "succ_product_on_basi": [108, 109], "free_dendriform_algebra": 109, "dendriformfunctor": 109, "constructionfunctor": [109, 111], "freedendriform": 109, "hom": [109, 111, 149, 298], "functor": [109, 110, 111, 229, 328], "zt": [109, 111], "freedendriformalgebra": 109, "glue": 109, "operad": [109, 111], "algebra_gener": [109, 110, 111, 143, 338], "fgh": [109, 110, 111, 117], "xy": [109, 111, 117, 136, 172, 179, 183, 311, 347, 354, 357, 364, 367], "change_r": [109, 111, 117, 166, 357], "rt": [109, 111, 117, 154, 194, 272], "indexerror": [109, 111, 117, 125, 311, 331, 341, 343, 354], "variable_nam": [109, 111, 117, 238], "free_modul": 110, "cartesianproductwithflatten": 110, "flatten": [110, 170, 272, 341, 356], "basis_kei": [110, 147, 183], "indexedgener": 110, "subcategori": [110, 174, 185], "moduleswithbasi": 110, "print_opt": [110, 143, 229], "commutative_additive_semigroup": 110, "commutativeadditivesemigroup": 110, "summat": [110, 349], "NOT": [110, 307, 343], "declar": [110, 112, 137, 229], "withbasi": [110, 298], "algebras_with_basi": 110, "hopf_algebras_with_basi": 110, "weightspac": [110, 239, 241, 261, 268, 269], "original_print_opt": 110, "iterate_kei": 110, "latex_bracket": 110, "latex_nam": 110, "latex_prefix": 110, "latex_scalar_mult": 110, "scalar_mult": 110, "sorting_kei": 110, "sorting_revers": 110, "string_quot": 110, "tensor_symbol": 110, "combinatorialfreemodule_cartesianproduct": 110, "combinatorialfreemodule_tensor": 110, "vectorfunctor": 110, "synonym": [110, 144, 158, 270, 280, 281, 284, 296, 297, 299, 310], "symmetricfunct": [110, 130, 142, 143, 144, 145, 147, 148, 149, 157, 158, 161, 186, 188, 233, 238, 270, 274, 278, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 318, 341], "_mul_": [110, 231], "magma": [110, 143, 185, 229], "__init_extra__": 110, "mro": [110, 154, 265], "freealgebra_with_categori": 110, "with_basi": 110, "indexed_el": 110, "_vector_": 110, "qs3": [110, 338], "qs2": [110, 338], "get_order_kei": 110, "finitedimensionalalgebraswithbasi": 110, "set_ord": 110, "akei": 110, "is_exact": 110, "groupalgebra": 110, "padicr": 110, "fault": 110, "linear_combin": 110, "iter_of_elements_coeff": 110, "factor_on_left": 110, "lambda_k": [110, 143, 158, 209], "iter_of_el": 110, "sum_of_term": [110, 208, 209, 233, 298, 299], "renam": [110, 122, 143, 178, 240, 289, 298, 311], "cartesian_embed": 110, "cartesian_factor": 110, "cartesian_project": 110, "summand_embed": 110, "summand_project": 110, "preexist": [110, 235, 262], "tensor_constructor": 110, "multilinear": 110, "phi_fg": 110, "phi_fgh": 110, "phi_fg_h": 110, "tensor_factor": 110, "free_prelie_algebra": 111, "freepreliealgebra": 111, "preli": 111, "properli": [111, 121, 130, 212, 231, 233, 235, 236, 269, 286, 298, 310, 318, 354], "freepreli": 111, "nap": [111, 272], "liv2006": 111, "nap_product": 111, "envelop": [111, 117, 121, 122, 299], "build_alphabet": [111, 117, 353], "rootedtre": [111, 117, 272], "meaning": [111, 117, 162, 239], "chaff": [111, 117], "chli": 111, "bracket_on_basi": 111, "pre_lie_product_on_basi": 111, "preliefunctor": 111, "nap_product_on_basi": 111, "pre_lie_product": 111, "ste1996": 112, "chase": 112, "meador": 112, "tianyuan": 112, "xu": 112, "draft": [112, 139], "reu": 112, "colorado": 112, "boulder": 112, "rachel": 112, "castro": [112, 298], "joel": 112, "courtnei": 112, "magnuson": 112, "natali": 112, "schoenhal": 112, "fully_commutative_el": 112, "normalizedclonablelist": [112, 272], "cartier": 112, "foata": [112, 169, 170, 354], "gre2006": 112, "coset_decomposit": 112, "greedili": 112, "sw": [112, 157, 158, 309], "find_desc": 112, "group_el": 112, "has_desc": [112, 229, 239, 267, 271], "karg": 112, "gx2020": 112, "one_index": 112, "display_label": 112, "contigu": [112, 170, 310, 341], "n_valu": 112, "antichain": [112, 178, 180, 184, 185], "b_5": 112, "repeatedli": [112, 118, 158, 275, 276, 360], "plot_heap": 112, "render": [112, 185], "graphicsobject": 112, "star_oper": 112, "kl1979": 112, "lus1985": 112, "paragraph": 112, "b_6": 112, "classfi": 112, "fall": [112, 117, 354], "seven": [112, 222], "e_n": [112, 178, 180, 181, 185, 301], "coxetermatrix": [112, 226, 227], "aforement": 112, "regardless": 112, "unnecessari": [112, 178, 181, 298, 349], "light": [112, 338], "b_3": [112, 222, 235, 241], "throw": [112, 137, 139, 224, 268], "fca3": 112, "b_8": 112, "fcb8": 112, "14299": 112, "fcaffinea2": 112, "iterate_to_length": 112, "xe8": 112, "knight": 113, "campbel": 113, "kevin": 113, "dilk": 113, "emili": 113, "gunawan": 113, "enhanc": 113, "fully_packed_loop": 113, "boundari": [113, 118, 128, 132, 156, 158, 166, 308, 341, 345, 358], "pro2001": 113, "fplb": 113, "sixvertexmodel": [113, 308], "boundary_condit": [113, 308], "rotated_ncp": 113, "perfectmatch": [113, 165, 169, 275], "mat": [113, 144, 222], "svm": 113, "str2015": 113, "nxn": 113, "loop_fil": 113, "curv": [113, 354], "link_": 113, "loop_": 113, "link_color": 113, "loop_color": 113, "color_map": 113, "link_color_map": 113, "loop_color_map": 113, "link_color_random": 113, "interior": [113, 144, 158], "pmatrix": [113, 136], "rainbow": [113, 354], "winter": 113, "graphics_arrai": 113, "00000000000": [113, 352], "0000000000000000": 113, "00000": [113, 354, 358], "0000": [113, 190, 354, 364], "00000000": 113, "0000000": 113, "0000000000": 113, "000000000000000": [113, 166, 354, 357, 358], "3x3": 113, "bbf": 114, "brubak": [114, 233], "friedberg": 114, "stud": [114, 288], "princeton": 114, "univ": [114, 144, 194, 318, 339, 357], "jersei": 114, "gc50": 114, "cetlin": 114, "dokl": 114, "akad": 114, "nauk": 114, "sssr": 114, "825": 114, "828": 114, "1950": 114, "tok88": 114, "tokuyama": 114, "japan": 114, "671": 114, "685": 114, "1988": 114, "gelfand_tsetlin_pattern": 114, "zetlin": 114, "ccccccccc": 114, "ddot": 114, "strip": [114, 130, 132, 158, 337, 341, 343], "bmatrix": [114, 144, 213, 224, 228], "vdot": [114, 119], "tokuyama_coeffici": 114, "z_1": [114, 143], "z_2": [114, 143], "z_": [114, 143, 282, 285, 298, 299, 318], "z_j": 114, "tz_i": 114, "bender_knuth_involut": [114, 168, 310, 341], "bender": [114, 168, 310, 341], "toggl": [114, 120, 168, 341], "berenstein": [114, 341], "boxed_entri": 114, "circled_entri": 114, "northeast": [114, 132, 158, 309, 341], "number_of_box": 114, "number_of_circl": 114, "number_of_special_entri": 114, "special_entri": 114, "row_sum": [114, 124], "coin": [114, 134, 137, 213, 311], "top_row": 114, "tokuyama_formula": 114, "graph_path": 115, "graphpath": 115, "multiedg": [115, 178, 185], "graphpaths_al": 115, "graphpaths_common": 115, "incoming_edg": 115, "incom": [115, 185, 354, 360], "incoming_path": 115, "gp": [115, 273], "outgoing_edg": 115, "outgoing_path": 115, "paths_from_source_to_target": 115, "graphpaths_": 115, "graphpaths_st": 115, "graphpaths_t": 115, "revolv": 116, "door": 116, "knu2011": [116, 170], "m_0": 116, "m_k": [116, 119, 162, 212, 343], "loopless": 116, "radix": 116, "grossman_larson_algebra": 117, "grossmanlarsonalgebra": 117, "pana2002": 117, "grolar1": 117, "grossmanlarson": 117, "single_vertex_al": 117, "__": [117, 152, 172], "antipode_on_basi": [117, 143, 144, 148, 149, 296], "delta_xi": 117, "counit_on_basi": [117, 142, 147], "uv": [117, 185, 354], "tu": 117, "tv": 117, "single_vertex": 117, "freeli": [117, 229], "rulersk": [118, 273], "ruleburg": 118, "growthdiagram": 118, "llmssz2013": [118, 130, 158], "ls2007": 118, "accommod": 118, "invent": [118, 238], "sergei": [118, 298], "fom1994": 118, "fom1995": 118, "vast": 118, "forward": [118, 129, 137, 170, 178, 185, 273], "fourth": [118, 136, 161, 311, 354], "forward_rul": [118, 273], "out_label": 118, "p_symbol": 118, "q_symbol": 118, "alon": [118, 214], "backward_rul": [118, 273], "ruledomino": 118, "tradition": 118, "skewpartit": [118, 158, 194, 299, 309], "sundaram": [118, 299], "oscil": 118, "great": [118, 332], "reproduc": [118, 127, 136, 184, 185, 273], "bruce": [118, 165, 166, 167, 168], "sagan": [118, 149, 339], "tom": [118, 120, 185, 270], "robi": [118, 120], "thesi": [118, 144, 302, 358], "rob1991": 118, "skewtableau": [118, 130, 165, 168, 193, 194, 310], "to_chain": [118, 303, 310, 341, 343], "conclud": [118, 224, 235, 338], "neighbour": [118, 349], "in_label": 118, "burg": 118, "viennot": [118, 154, 156, 169], "rulebinaryword": 118, "barbasch": 118, "vogan": 118, "ruleshiftedshap": 118, "worlei": 118, "rulesylvest": 118, "ruleyoungfibonacci": 118, "llm": 118, "rulellm": 118, "heart": [118, 349], "ud": [118, 308], "ri": 118, "research": [118, 213, 273, 298, 349], "toler": 118, "deviat": 118, "rulepasc": 118, "attributeerror": 118, "is_p_edg": 118, "is_q_edg": 118, "_check_dual": 118, "zero_edg": 118, "clariti": 118, "has_multiple_edg": 118, "colour": [118, 303, 354], "v_n": [118, 170], "col": [118, 158, 162, 241], "p_chain": 118, "binaryword": 118, "1011": 118, "25631": 118, "q_chain": 118, "half_perimet": 118, "is_rectangular": [118, 341], "evacu": [118, 167, 168, 181, 185, 341], "to_biword": 118, "bw": 118, "semistandardtableau": [118, 168, 273, 310, 341], "normalize_vertex": 118, "mandatori": 118, "fine": 118, "myrul": 118, "my_fil": 118, "my_label": 118, "my_shap": 118, "deduc": [118, 144, 170, 185, 349], "quit": [118, 235, 349, 357], "bloom": 118, "saracino": 118, "bs2012": 118, "p_graph": 118, "mutati": 118, "mutandi": 118, "q_graph": 118, "upper_cov": [118, 158, 180, 184, 185, 309], "hello": 118, "kleitman": [118, 185], "vie1983": 118, "rulepartit": 118, "mu_1": [118, 158, 186, 283, 299, 309], "mu_n": [118, 309], "mu_i": [118, 158, 162, 276, 282, 283, 289], "kra2006": 118, "lam2004": 118, "llms3": 118, "strongtableau": [118, 130], "weaktableau": [118, 130], "llms4": 118, "sag1987": 118, "wor1984": 118, "hai1989": 118, "shiftedshap": 118, "ss1990": 118, "shiftedprimedtableau": [118, 303], "nze2007": 118, "__3__": 118, "__1__": 118, "increasing_tre": [118, 170], "_2_": 118, "__1___": 118, "_1_": 118, "_none_": 118, "yf": 118, "youngfibonacci": [118, 184], "1111": [118, 152, 190, 311, 354], "21211": [118, 354], "1121": [118, 242, 256], "2121": [118, 231], "11121": 118, "hall_polynomi": 119, "nilpot": [119, 186, 306], "subobject": [119, 292], "kappa_i": [119, 158], "richardson": [119, 132, 213, 288, 294, 300], "sch2006": 119, "r_n": [119, 311, 342], "2r_1": 119, "2r_2": 119, "r_3": [119, 186], "2r_": 119, "m_n": [119, 170, 306], "m_2": [119, 143, 144, 170, 290, 299], "l_k": 119, "sulzgrub": [120, 341], "rpp": [120, 341], "enumcomb2": [120, 281, 284, 290, 296, 297, 299], "sulzgr2017": [120, 341], "hilgra1976": 120, "hillman_grassl": [120, 341], "hillman_grassl_invers": [120, 341], "xi_": [120, 186, 296, 299, 341], "pak2002": [120, 341], "hopkins2017": [120, 341], "sulzgruber_correspond": [120, 341], "pak_correspond": [120, 341], "weakreverseplanepartit": [120, 341], "hgp": 120, "undon": 120, "standalon": [120, 341], "hgp_bare": 120, "gans1981": [120, 341], "northward": 120, "eastward": 120, "bottommost": [120, 273, 303, 310, 341], "aic": 120, "immateri": [120, 274, 341], "acc": 120, "integerlistsbackend": [121, 122, 123], "integer_list": [121, 122, 123, 125], "approxim": [121, 271, 349, 352], "consult": 121, "pointwis": [121, 236, 237, 298], "lookahead": [121, 122], "evolv": [121, 345], "adapt": [121, 170], "impos": [121, 123, 128, 134, 194], "room": [121, 122, 158], "tend": [121, 235, 357], "limit_start": 121, "loos": [121, 224, 357], "earli": 121, "stone": [121, 178, 180, 184], "_contain": 121, "_iter": 121, "max_sum": [121, 122], "min_sum": [121, 122], "integerlistsbackend_invlex": 122, "port": [122, 126, 349], "gillespi": 122, "lack": [122, 233], "robust": [122, 236, 269, 299], "invlex": [122, 125], "integerlist": [122, 123], "engin": 122, "motzkin": [122, 311], "recommend": [122, 158, 235, 269, 276, 338], "element_constructor": [122, 185, 304, 334], "eventu": [122, 158, 185, 239, 349, 354], "discontinu": [122, 229], "worth": [122, 143, 222], "motzkin_numb": 122, "motzkin_word": 122, "a001006": [122, 311], "nonintersect": [122, 311], "chord": [122, 170, 311], "waiver": 122, "caveat": [122, 218, 235, 239, 241, 271, 309, 338], "undecid": 122, "improp": [122, 137], "ultim": [122, 354, 357], "hang": [122, 182, 184], "tip": [122, 128, 235], "flexibl": [122, 235, 349], "price": 122, "pai": 122, "semir": [122, 190, 244, 367], "3y": 122, "1z": 122, "dead": [122, 349], "roughli": [122, 184, 190, 306, 349], "proport": [122, 289, 349], "neglig": [122, 349], "18055": 122, "18056": 122, "17979": 122, "spec": [122, 298], "389": 122, "backend_class": [122, 123], "integerlistslexit": 122, "backend": [122, 123, 178, 219, 235, 237], "_current_list": 122, "_current_sum": 122, "_search_rang": 122, "push": [122, 232], "deeper": 122, "me": 122, "ye": [122, 261], "_next_stat": 122, "prescrib": [124, 139], "integer_matric": 124, "integermatric": 124, "column_sum": 124, "c_j": [124, 129], "im": 124, "to_composit": [124, 276, 337], "integer_matrices_gener": 124, "gale": 125, "stuff": 125, "bugfix": 125, "misnom": 125, "federico": 125, "poloni": 125, "integer_vector": 125, "34510": 125, "iv3": 125, "ivk3": 125, "iv33": 125, "trim": [125, 180], "iv53": 125, "essai": 125, "integervectorsconstraint": 125, "integervectors_al": 125, "integervectors_k": 125, "integervectors_n": 125, "integervectors_nk": 125, "albrecht": 125, "integervectors_nnondesc": 125, "bloc": 125, "gale_ryser_theorem": 125, "ryser63": 125, "gale57": 125, "justifi": [125, 158, 161, 349], "ahead": 125, "caru": 125, "monograph": [125, 298], "maa": 125, "1963": 125, "flow": [125, 185, 308], "network": [125, 185], "1073": 125, "1082": 125, "integer_vectors_nk_fast_it": 125, "is_gale_rys": 125, "sound": 125, "list2func": 125, "integer_vector_weight": 126, "weightedintegervectors_al": 126, "graded_compon": [126, 151, 157, 170], "iterator_fast": 126, "20491": 126, "integer_vectors_mod_permgroup": 127, "bla": [127, 235], "subquoti": 127, "integervectorsmodpermutationgroup_al": 127, "permutation_group": 127, "integervectorsmodpermutationgroup_with_constraint": 127, "transitivegroup": 127, "cp2015": 128, "pons2013": 128, "tam1962": 128, "cha2008": 128, "sent": [128, 143, 345], "is_initial_interv": 128, "is_final_interv": 128, "contains_binary_tre": 128, "contains_dyck_word": 128, "contains_interv": 128, "ip1": 128, "ip2": 128, "ip3": 128, "ip4": 128, "cubical_coordin": 128, "com2019": 128, "decomposition_to_tripl": 128, "recomposition_from_tripl": 128, "decreasing_children": 128, "decreasing_cover_rel": 128, "final_forest": 128, "decreasing_par": 128, "decreasing_root": 128, "initial_forest": 128, "grafting_tre": 128, "from_grafting_tre": 128, "pons2018": 128, "increasing_children": 128, "increasing_cover_rel": 128, "increasing_par": 128, "increasing_root": 128, "is_indecompos": [128, 223], "is_dext": 128, "dexter": [128, 184, 344], "exclus": [128, 158, 180, 185], "is_except": 128, "indecompos": [128, 223, 338], "is_infinitely_modern": 128, "is_modern": 128, "rog2018": 128, "is_linear_extens": [128, 178, 185], "tip4": 128, "tip3": 128, "is_synchron": 128, "synchron": 128, "fpr2015": 128, "a000139": 128, "line_width": 128, "color_decreas": 128, "color_increas": 128, "vspace": [128, 208], "left_branch_involut": 128, "rise_contact_involut": 128, "from_binary_tre": 128, "lower_contained_interv": 128, "lower_contains_interv": 128, "from_dyck_word": [128, 151, 156], "max_linear_extens": 128, "maximal_chain_binary_tre": 128, "maximal_chain_dyck_word": 128, "maximal_chain_tamari_interv": 128, "min_linear_extens": 128, "new_decomposit": 128, "number_of_new_compon": 128, "ex": [128, 156, 281, 284, 290, 296, 297, 299], "nb": 128, "maximal_chain": [128, 184, 185, 344], "is_lattic": [128, 185], "contact": 128, "latex_color_decreas": 128, "sub_poset": 128, "renorm": 128, "subposet": [128, 178, 180, 185], "tamari_invers": 128, "tamari_inversions_it": 128, "upper_contains_interv": 128, "check_poset": 128, "tree1": 128, "tree2": 128, "tree3": 128, "dw3": 128, "from_minimal_schnyder_wood": 128, "schnyder": [128, 185], "wood": 128, "bernardi": 128, "bonichon": 128, "bebo2009": 128, "exterior": [128, 222, 241, 270], "unori": 128, "set_embed": 128, "c0": 128, "data_emb": 128, "el1": 128, "el2": 128, "latex_color_increas": 128, "latex_hspac": 128, "latex_vspac": 128, "recompos": 128, "tamariintervalposets_al": 128, "tamariintervalposets_s": 128, "regular_sequ": 129, "as2003": 129, "session": [129, 190], "seq2": [129, 190], "kregularsequencespac": [129, 190], "cached_funct": 129, "cfinite_sequ": [129, 190, 369], "2021": [129, 190], "gabriel": 129, "lipnik": 129, "1230": [129, 232, 354], "k_regular_sequ": 129, "recurrencepars": 129, "coefficient_r": [129, 190], "from_recurr": [129, 369], "kregularsequ": 129, "ind": [129, 299, 303], "uu": 129, "hkl2021": 129, "rp": [129, 170, 171, 214], "recurrence_rul": 129, "namedtupl": 129, "rrd": 129, "recurrence_rules_dim": 129, "inhomogen": [129, 311], "one_hadamard": [129, 190], "rem": 129, "correct_offset": 129, "offset": [129, 137, 158, 162, 311, 341, 343, 369], "initial_valu": 129, "parse_recurr": 129, "stern": 129, "brocot": 129, "sb_rule": 129, "unbord": 129, "thue": [129, 311, 352, 357, 364], "mors": [129, 286, 289, 292, 311, 341, 352, 357, 364], "ub_rul": 129, "high": [129, 178, 306, 357], "g_r": 129, "472": 129, "parse_direct_argu": 129, "shifted_inhomogen": 129, "coroallari": 129, "si": 129, "v_eval_n": 129, "last_value_need": 129, "recognizableseri": [129, 190], "backward_differ": 129, "minimize_result": [129, 190], "forward_differ": 129, "include_n": 129, "shift_left": 129, "shift_right": 129, "s31": 129, "linear_represent": [129, 190], "sbd": 129, "recognizableseriesspac": [129, 190], "fulfil": 129, "ub": [129, 354], "is_trivial_zero": [129, 190], "lrs2017": 129, "satur": 130, "llms2006": 130, "k_tableau": 130, "avi": 130, "dalal": [130, 132], "nate": 130, "gallup": 130, "charg": [130, 212, 341, 343, 354], "southeast": [130, 132, 158, 309, 347], "to_standard_list": 130, "cell_of_highest_head": 130, "cell_of_marked_head": 130, "cells_head_dictionari": 130, "cells_of_head": 130, "cells_of_marked_ribbon": 130, "portion": 130, "content_of_highest_head": 130, "content_of_marked_head": 130, "contents_of_head": 130, "entries_by_cont": [130, 310], "diag": 130, "entries_by_content_standard": 130, "follows_tableau": 130, "height_of_ribbon": 130, "occupi": [130, 341], "subtableau": [130, 343], "is_column_strict_with_weight": 130, "left_act": 130, "tij": 130, "number_of_connected_compon": 130, "ribbons_above_mark": 130, "set_weight": 130, "cores_length_with_categori": [130, 158], "sum_t": [130, 236], "ks3": [130, 292, 298], "kschur": [130, 292, 298], "realization_of": [130, 142, 143, 144, 145, 229, 286, 299, 301], "myks221": 130, "strongtableaux": 130, "spin_of_ribbon": 130, "to_list": [130, 158, 162, 309, 310, 337, 341, 343], "to_transposition_sequ": 130, "to_unmarked_list": 130, "to_unmarked_standard_list": 130, "classmethod": [130, 151, 190, 218, 224, 226, 227, 242, 261, 267], "add_mark": 130, "unmarkedt": 130, "follows_tableau_unsigned_standard": 130, "tlist": 130, "marked_cst_to_transposition_sequ": 130, "cst_to_tran": 130, "marked_given_unmarked_and_weight_iter": 130, "repr": [130, 136, 181, 193, 194, 219, 235, 303, 310, 341, 343], "standard_marked_iter": 130, "standard_unmarked_iter": 130, "transpositions_to_standard_strong": 130, "transeq": 130, "emptytableau": 130, "dispatch": 130, "subtableaux": 130, "factorized_permut": 130, "weaktableaux_core_with_categori": 130, "weaktableaux_bounded_with_categori": 130, "to_core_tableau": 130, "to_bounded_tableau": 130, "weaktableaux_factorized_permutation_with_categori": 130, "_represent": 130, "is_k_tableau": [130, 310, 341], "weaktableau_abstract": 130, "weaktableau_bound": 130, "from_core_tableau": 130, "k_charg": 130, "shape_bound": 130, "shape_cor": 130, "weaktableau_cor": 130, "dictionary_of_coordinates_at_residu": 130, "k_charge_i": 130, "k_charge_j": 130, "list_of_standard_cel": 130, "residues_of_entri": 130, "to_factorized_permutation_tableau": 130, "_inner_shap": 130, "weaktableau_factorized_permut": 130, "straighten_input": 130, "straighten": [130, 158, 162, 231], "weaktableaux": 130, "weaktableaux_abstract": 130, "_shape": 130, "weaktableaux_bound": 130, "weaktableaux_cor": 130, "circular_dist": 130, "cr": [130, 185], "weaktableaux_factorized_permut": 130, "nab": 130, "guo": 131, "r_tild": 131, "kazhdan_lusztig": [131, 183], "fun": 131, "laurentpolynomialr": [131, 238, 369], "kl": [131, 183, 233, 238], "coxeter3": [131, 225], "kazhdan_lusztig_polynomi": [131, 185], "fokko": 131, "ducloux": 131, "dy1993": 131, "icerm": [132, 233], "avinash": 132, "allen": [132, 144], "afterward": [132, 160, 170, 171], "liz": 132, "beazlei": 132, "bk": [132, 168], "p22": 132, "0610538": 132, "vakil": 132, "0302294": 132, "purbhoo": 132, "mosaic": 132, "0705": 132, "1184": 132, "knutson_tao_puzzl": 132, "bk_piec": 132, "max_lett": [132, 139], "belkal": 132, "kumar": [132, 238], "rhombu": 132, "knutsonpurbhoo10": 132, "gl_n": [132, 229, 230, 239, 261, 262, 278, 298, 299, 306, 349], "1008": [132, 311], "4979": 132, "deltapiec": 132, "north_west": 132, "north_east": [132, 358], "puzzlepiec": 132, "clockwise_rot": 132, "half_turn_rot": 132, "ht_grassmannian_piec": 132, "toru": [132, 231], "equivari": [132, 231, 233, 238, 270, 299], "kt2003": 132, "terenc": 132, "2003": [132, 150, 208, 213, 238, 263, 311, 357, 364], "ht_two_step_piec": 132, "coskunvakil06": 132, "coskun": 132, "calculu": [132, 286, 292, 349], "t10": 132, "h_grassmannian_piec": 132, "ktw": 132, "christoph": [132, 289], "woodward": 132, "honeycomb": 132, "0107011": 132, "h_two_step_piec": 132, "buchkreschtamvakis03": 132, "buch": [132, 273], "kresch": [132, 273], "tamvaki": [132, 273], "gromov": 132, "witten": 132, "0306388": 132, "k_grassmannian_piec": 132, "buch00": 132, "0004137": 132, "puzzle_piec": 132, "ht": [132, 144, 145, 278, 289, 293, 298, 299, 347], "h2step": 132, "ht2step": 132, "0101": [132, 152, 354, 360], "soln": [132, 135], "glu": [132, 180], "rhombi": 132, "1001": [132, 152, 311, 354, 357, 360, 364], "extra_preambl": 132, "viewer": [132, 345], "01201": 132, "01021": 132, "10212": 132, "12012": 132, "12132": 132, "23112": 132, "south_label": 132, "lamda": 132, "structure_const": 132, "cp": [132, 147, 149, 170, 174, 216], "001001": 132, "001010": 132, "010100": 132, "01122": 132, "y4": 132, "nablapiec": 132, "south_east": 132, "south_west": 132, "southwest": [132, 158, 309, 341], "puzzlefil": 132, "north_west_label": 132, "north_east_label": 132, "add_piec": 132, "is_in_south_edg": 132, "kink": 132, "kink_coordin": 132, "north_east_label_of_kink": 132, "north_west_label_of_kink": 132, "orang": [132, 158, 184, 235, 239, 345], "forbidden_border_label": 132, "rhombus_piec": 132, "add_t_piec": 132, "label1": 132, "label2": 132, "_forbidden_border_label": 132, "add_forbidden_label": 132, "boundary_delta": 132, "delta_piec": 132, "nabla_piec": 132, "rhombuspiec": 132, "north_piec": 132, "south_piec": 132, "dancing_link": [134, 137], "dlx_solver": [134, 345], "number_of_solut": [134, 345], "solutions_iter": 134, "all_solut": 134, "one_solut": 134, "ncpu": [134, 332, 345], "x_using_row_2": 134, "get_solut": 134, "reiniti": 134, "dancing_linkswrapp": 134, "carlo": [134, 137, 298], "hamalainen": [134, 137], "subprocess": [134, 345], "cpu": [134, 332, 345, 349], "subproblem": 134, "serial": [134, 345], "one_solution_using_milp_solv": 134, "cvxopt": 134, "ppl": [134, 219, 235], "interactivelp": 134, "sage_numerical_backends_gurobi": 134, "one_solution_using_sat_solv": 134, "sat": 134, "picosat": 134, "cryptominisat": 134, "glucos": 134, "syrup": 134, "recreat": [134, 235], "exhaust": [134, 349], "d_using_0": 134, "to_milp": 134, "mip": 134, "mipvari": 134, "to_sat_solv": 134, "\u00ec": 134, "satsolv": 134, "pycryptosat": 134, "claus": [134, 349], "make_dlxwrapp": 134, "histor": 134, "unpickl": [134, 158, 170, 193, 194, 310, 341], "kept": [134, 170, 262, 363], "dlxcpp": 135, "palei": 136, "hora": 136, "sloahada": 136, "hadawiki": 136, "gs_skew_hadamard_smallcas": 136, "goethal": 136, "circul": [136, 137], "williamson_goethals_seidel_skew_hadamard_matrix": 136, "gs70": 136, "wall71": 136, "rshcd_324": 136, "324x324": 136, "jankokharaghanitonchevgraph": 136, "hx2010": 136, "162x162": 136, "rshcd": 136, "loc": [136, 341], "cit": 136, "interestingli": 136, "152": [136, 186], "2592": 136, "intransit": 136, "cp2016": 136, "construction_four_symbol_delta_code_i": 136, "n_x": [136, 340], "n_y": 136, "n_z": 136, "n_w": 136, "n_a": [136, 307, 340], "nonperiod": [136, 340], "a_ia_": 136, "tur1974": 136, "t_4": [136, 340], "construction_four_symbol_delta_code_ii": 136, "four_symbol_delta_code_smallcas": 136, "symobl": 136, "2985984": 136, "normalis": 136, "hadamard_matrix_156": 136, "bh1965": 136, "hadamard_matrix_cooper_wallis_construct": 136, "contruct": 136, "cw1972": 136, "x_4": 136, "entrywis": 136, "x_ix_i": 136, "ni_n": 136, "dd": [136, 228, 265, 357], "4mi_n": 136, "4nm": 136, "retur": 136, "t_sequenc": [136, 340], "t_sequences_smallcas": [136, 340], "hadamard_matrix_cooper_wallis_smallcas": 136, "cooper": [136, 143], "walli": 136, "williamson_type_quadruples_smallcas": 136, "saw1985": 136, "hadamard_matrix_paleyi": 136, "identity_matrix": [136, 339], "hadamard_matrix_paleyii": 136, "hadamard_matrix_spence_construct": 136, "spenc": 136, "bolean": 136, "hadamard_matrix_turyn_typ": 136, "4ni": 136, "baumert": 136, "4t": 136, "4tn": 136, "_get_baumert_hall_unit": 136, "hadamard_matrix_williamson_typ": 136, "ha83": 136, "hadamard_matrix_www": 136, "url_fil": 136, "webpag": 136, "neilsloan": 136, "49152": 136, "is_hadamard_matrix": 136, "skew_hadamard_matrix": 136, "normalise_hadamard": 136, "regular_symmetric_hadamard_matrix_with_constant_diagon": 136, "confer": [136, 178, 238], "676": 136, "rshcd_from_close_prime_pow": 136, "gs1970": 136, "sww1972": 136, "rshcd_from_prime_power_and_conference_matrix": 136, "ww1972": 136, "sz1969": 136, "szekeres_difference_set_pair": 136, "symmetric_conference_matrix": 136, "36x36": 136, "skew_norm": 136, "exot": [136, 222], "adjust": 136, "sec": 136, "szeker": 136, "4m": 136, "quadrat": [136, 233, 238, 270, 283, 298, 338, 354, 357, 360], "turyn_type_hadamard_matrix_smallcas": 136, "typei_matrix_difference_set": 136, "wg": [136, 169], "kost08": 136, "williamson_hadamard_matrix_smallcas": 136, "bitrad": 137, "intuit": [137, 235], "latinsquar": 137, "is_partial_latin_squar": 137, "is_latin_squar": 137, "tau_i": [137, 181, 185, 233], "hypermap": 137, "jacobson": 137, "matthew": [137, 158, 161, 273, 336], "interfac": [137, 235, 349], "back_circul": 137, "alternating_group_bitrade_gener": 137, "bitrade_from_group": 137, "nr_filled_cel": 137, "isotop": 137, "nauti": [137, 349], "actual_row_col_sym_s": 137, "unus": 137, "apply_isotop": 137, "row_perm": 137, "col_perm": 137, "sym_perm": 137, "clear_cel": 137, "contained_in": 137, "elementary_abelian_2group": 137, "disjoint_mate_dlxcpp_rows_and_map": 137, "allow_subtrad": 137, "find_disjoint_m": 137, "dlxcpp_has_unique_complet": 137, "privat": [137, 268], "filled_cells_map": 137, "cells_map": 137, "nr_to_find": 137, "b0": [137, 357], "is_bitrad": 137, "manner": [137, 158, 354], "nowher": 137, "is_empty_column": 137, "is_empty_row": 137, "forward_circul": 137, "is_uniquely_complet": 137, "spyx": 137, "hline": 137, "nr_distinct_symbol": 137, "permissable_valu": 137, "random_empty_cel": 137, "top_left_empty_cel": 137, "vals_in_col": 137, "vals_in_row": 137, "latinsquare_gener": 137, "l_start": 137, "check_assert": 137, "bibtex": 137, "jacmat96": 137, "3m": 137, "caylei": [137, 235, 271, 354, 364, 368], "z_n": [137, 143], "beta1": 137, "rce": 137, "beta2": 137, "beta3": 137, "cells_map_as_squar": 137, "check_bitrade_gener": 137, "p3_group_bitrade_gener": 137, "simul": [137, 349], "fair": 137, "column_containing_sym": 137, "direct_product": 137, "l3": [137, 154, 288], "l4": 137, "subsquar": 137, "dlxcpp_find_complet": 137, "dlxcpp_rows_and_map": 137, "tau_1": [137, 181, 185], "tau_2": 137, "tau_3": 137, "geometria": 137, "dedicata": 137, "0710": 137, "0938": 137, "pq_group_bitrade_gener": 137, "group_to_latinsquar": 137, "is_disjoint": 137, "is_primary_bitrad": 137, "is_row_and_col_balanc": 137, "is_same_shap": 137, "next_conjug": 137, "row_containing_sym": 137, "tau1": [137, 306], "beta_3": 137, "beta_i": [137, 158, 162, 281, 296, 297, 299, 301, 342], "tau123": 137, "tau2": 137, "tau3": 137, "fixed_point": [137, 170, 188, 354, 355, 357, 358, 361], "tau_to_bitrad": 137, "u2": 137, "doublylinkedlist": 138, "doubli": [138, 180], "hide": [138, 349], "unhid": 138, "dll": 138, "prev": [138, 170], "iterablefunctioncal": 138, "needn": 138, "enclos": 138, "bbb": [138, 354, 367], "check_integer_list_constraint": 138, "cilc": 138, "umbral_oper": 138, "poli": [138, 299, 347, 357], "umbral": [138, 158], "downarrow": [138, 149, 158, 178, 275], "bchopsy2017": 139, "minimajcryst": 139, "hrw2015": 139, "hrs2016": 139, "lm2018": 139, "multiset_partition_into_sets_ord": 139, "stem": [139, 224], "to_tableaux_word": 139, "from_tableau": 139, "val": [139, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 349], "val_": 139, "c_r": [139, 222], "omp": 139, "deconcaten": [139, 144], "split_block": 139, "violat": [139, 178], "issubset": [139, 149, 185], "v_0": 139, "v_j": 139, "minimaj_word": 139, "minimaj_block": 139, "vu": [139, 185], "_multiset": 139, "as_dict": 139, "shape_from_cardin": 139, "shape_from_s": 139, "excis": 139, "therein": 139, "as_weak_comp": 139, "frequenc": [139, 306], "focu": 139, "min_ord": 139, "max_ord": 139, "chanc": 139, "allud": 139, "orderedmultisetpartitionsintosets_x": 139, "fat": 139, "239": [139, 232, 311], "orderedmultisetpartitionsintosets_x_constraint": 139, "orderedmultisetpartitionsintosets_all_constraint": 139, "orderedmultisetpartitionsintosets_alph_d": 139, "_order": 139, "_alphabet": 139, "orderedmultisetpartitionsintosets_alph_d_constraint": 139, "orderedmultisetpartitionsintosets_n": 139, "1100": 139, "orderedmultisetpartitionsintosets_n_constraint": 139, "krob": [141, 144, 145, 299], "leclerc": [141, 144, 145, 160, 288, 299], "retakh": [141, 144, 145, 299], "qschur": [141, 143, 144], "luoto": [141, 144], "mason": [141, 144], "willigenburg": [141, 144], "s0097316509001745": 141, "0810": [141, 263], "2489v2": 141, "tev2007": [141, 143], "lenni": 141, "tevlin": [141, 143], "cauchi": [141, 299], "0712": 141, "2201v1": 141, "ncsf_qsym": [141, 142, 143, 144, 299], "coeff_dab": 141, "coeff_el": [141, 143], "coeff_lp": [141, 143], "lp_": 141, "coeff_pi": [141, 143], "coeff_sp": [141, 143], "sp_": [141, 144, 300], "compositions_ord": 141, "rhd": 141, "m_to_s_stat": 141, "number_of_ssrct": 141, "shape_comp": 141, "dqs_": [141, 143], "ssrct": 141, "content_comp": 141, "number_of_fct": 141, "immacul": [141, 143, 144], "bbssz2012": [141, 143, 144, 299], "jason": [142, 144, 298, 341, 343], "generic_basis_cod": 142, "algebramorph": 142, "on_gener": [142, 143], "modulemorphismbylinear": 142, "basesofqsymorncsf": 142, "homogeneous_degre": [142, 299], "degree_neg": [142, 299], "di": [142, 144, 145, 228], "dualimmacul": [142, 143, 144, 145], "skew_bi": [142, 143, 144, 145, 289, 298, 299], "alternating_sum_of_composit": 142, "alternating_sum_of_finer_composit": 142, "alternating_sum_of_fatter_composit": 142, "realizations_of": 142, "duality_pairing_by_coercion": 142, "elementary_with_categori": 142, "sum_of_fatter_composit": 142, "sum_of_finer_composit": 142, "sum_of_partition_rearrang": 142, "par": [142, 306], "gradedmoduleswithinternalproduct": 142, "category_over_base_r": [142, 239, 268], "internal_product": [142, 143, 298, 299], "ncsf2": [142, 143, 144], "plainli": [142, 304], "gamma_k": 142, "k_3": 142, "j_a": 142, "notin": [142, 170], "gamma_": [142, 149, 283, 347], "k_p": 142, "k_k": 142, "alias": [142, 143], "itensor": [142, 298, 299], "kronecker_product": [142, 278, 298, 299], "tensor_incopr": [142, 299], "h_parent": 142, "partition_pair": [142, 299], "internal_coproduct": [142, 144, 147, 149, 299], "monomial_coeffici": [142, 143, 145, 301], "testal": 142, "int_pr_of_s_in_": 142, "bilinear": [142, 143, 144, 222, 226, 227, 299], "internal_product_on_basi": [142, 143], "bilinearli": [142, 239], "internal_product_by_coercion": 142, "realizationscategori": 142, "cocommut": [143, 144, 298], "idiom": [143, 185, 189, 235, 269, 298], "cumbersom": [143, 235, 298, 349], "unfortun": [143, 160, 299, 349], "everywher": [143, 298, 341, 345, 350, 357], "bialgebra": [143, 144, 149, 298], "apply_multilinear_morph": [143, 144, 145, 148, 149, 298], "ga": [143, 178, 180, 278], "pi_u": 143, "prod_i": [143, 147, 148, 149, 158, 281, 284, 296], "fetch": [143, 237], "coerce_map_from": [143, 338], "homset": 143, "dualquasisymmetric_schur": 143, "quasisymmetric_schur": [143, 144], "forgotten": [143, 145, 147, 272, 280, 298, 299], "hs_n": 143, "bernstein_creation_oper": [143, 299], "perp": [143, 144, 145, 289, 299], "alpha_1": [143, 150, 224, 231, 232, 233, 235, 236, 254, 299, 341], "alpha_2": [143, 224, 231, 235, 239, 254, 299], "alpha_m": 143, "immaculate_funct": 143, "immaculate_by_bernstein": 143, "chi": [143, 147, 148, 149, 158, 222, 234, 236, 270, 283, 298, 339], "mayb": [143, 144, 170, 333], "left_padded_kronecker_product": [143, 299], "kroneck": [143, 144, 179, 183, 278, 298, 299, 338], "mar": 143, "mults1": [143, 299], "mults2": 143, "i2k": 143, "testpi": 143, "antihomomorph": [143, 144], "adjunct": [143, 144, 180, 280], "lmvw13": [143, 144], "to_descent_algebra": 143, "omega_n": 143, "descent_test": 143, "dad": 143, "to_ncsym": 143, "brrz08": [143, 149], "complianc": 143, "unexpectedli": [143, 144], "verschiebung": [143, 281, 296, 297, 299, 301], "psi_r": 143, "phi_r": 143, "nmid": [143, 281, 296, 297, 299, 301], "satisf": [143, 281, 296, 297, 299, 301], "Being": [143, 144, 299], "s_m": [143, 170, 298, 338], "test_comp": 143, "test_allcomp": 143, "to_symmetric_function_on_basi": 143, "tailor": [143, 144, 318, 338, 363], "thorough": 143, "bergeron": [143, 144, 149, 289, 318, 354, 358, 361, 364, 367], "sensu": 143, "lato": 143, "garbag": [143, 170], "multiplicativebas": 143, "algebra_morph": 143, "endset": 143, "gradedhopfalgebraswithbasi": 143, "composition1": 143, "composition2": 143, "to_symmetric_function_on_gener": 143, "multiplicativebasesongrouplikeel": 143, "grouplik": 143, "f_3": 143, "coproduct_on_gener": [143, 281, 283, 284, 296], "multiplicativebasesonprimitiveel": 143, "antipode_on_gener": 143, "phi_k": 143, "log": [143, 170, 354, 369], "psi_n": [143, 144], "dt": 143, "psi_k": 143, "test_psi": [143, 144], "internal_product_on_basis_by_bracket": 143, "zl": 143, "zassenhaus_left": 143, "zr": 143, "zassenhaus_right": 143, "zassenhau": 143, "hlnt09": [143, 144], "ncsf_n": 143, "m_3": [143, 144, 170, 299], "lambda_3": [143, 158, 232, 268, 296, 299, 301, 306], "z_3": 143, "dq": 143, "dyq": 143, "dualyoungquasisymmetric_schur": 143, "qs_": 143, "youngquasisymmetric_schur": 143, "gessel": [144, 145, 299], "multipartit": [144, 160], "contemp": [144, 299], "brandei": 144, "homepag": 144, "982": 144, "uniroma1": 144, "mal1993": 144, "claudia": 144, "produit": 144, "coproduit": 144, "fonction": [144, 186], "sym\u00e9triqu": 144, "alg\u00e8br": [144, 252, 254], "www1": 144, "haz2004": 144, "michiel": [144, 301], "hazewinkel": [144, 301], "0410366v1": 144, "rad1979": 144, "radford": 144, "1979": 144, "454": [144, 311], "israel": 144, "alain": [144, 238, 288, 339], "hep": [144, 299], "9407124v1": 144, "igm": 144, "mlv": [144, 339], "jyt": 144, "luqu": 144, "0912": [144, 299], "0184v2": 144, "kurt": 144, "stefan": [144, 175, 177], "mykytiuk": 144, "stephani": 144, "ubc": 144, "7esteph": 144, "quasischurbook": 144, "nantel": 144, "1208": [144, 157], "5191v3": 144, "hoff2015": 144, "michael": [144, 208, 300], "hoffman": 144, "kyushu": 144, "345": [144, 354], "2206": 144, "kyushujm": 144, "0401319v3": 144, "bdhmn2017": 144, "cristina": 144, "ballantin": 144, "zajj": 144, "daugherti": 144, "angela": 144, "hick": 144, "sarah": 144, "elizabeth": 144, "nies": 144, "1710": 144, "11613": 144, "ahm2018": 144, "edward": 144, "joshua": 144, "hallam": 144, "1606": 144, "03519": 144, "sw2010": [144, 299], "shareshian": [144, 299], "michel": [144, 236, 237, 299], "wach": [144, 275, 299], "0812": 144, "0764v2": 144, "a_m": 144, "hazwitt1": [144, 301], "devot": 144, "linear_morph": [144, 145], "is_symmetr": [144, 145, 148, 158, 340, 354, 361], "qp": [144, 145, 185, 282, 285, 292, 298, 299], "hall_littlewood": [144, 145, 282, 286, 289, 292, 298, 299], "qsymt": [144, 145], "ft": [144, 145, 347], "fqt": [144, 145], "mcdht": [144, 145, 289], "dendriform_leq": 144, "x_j": [144, 161, 170], "dendriform_less": 144, "ni_1": 144, "ni_2": 144, "ni_3": 144, "adam": [144, 270, 296, 299], "plethysm": [144, 145, 222, 282, 296, 298, 299], "comultipl": [144, 291, 297, 298, 299, 301, 338], "topmost": [144, 156, 158, 310, 341], "hbox": 144, "appar": [144, 185, 343], "kronecker_coproduct": [144, 299], "confirm": [144, 222, 270], "incident": 144, "naive_internal_coproduct_on_m": 144, "m_list": 144, "row_m": 144, "col_m": 144, "first_zero": 144, "pain": 144, "from_polynomi": [144, 233, 238, 290, 298, 299], "compo": 144, "stuffl": 144, "ibidem": 144, "dex": 144, "hazewinkellambda": 144, "albeit": [144, 239], "unproven": 144, "gcd": [144, 150, 299, 333], "lambda_of_monomi": 144, "hwl": 144, "chen": [144, 186, 299], "fox": 144, "lyndon_factor": [144, 299, 354], "g_j": 144, "j_j": 144, "nonincreas": [144, 275, 303], "overshadow": 144, "ni_": 144, "cyclotomicfield": [144, 299], "mistak": [144, 299, 311, 341], "unrel": [144, 185, 341, 343], "yq": [144, 145], "young_quasisymmetric_schur": 144, "phi_j": 144, "z_i": 144, "delta_": [144, 179, 183, 213, 237, 238, 274, 299, 338], "test_phi": 144, "centralizer_s": [144, 158, 280, 282], "briefli": [145, 298], "familiar": [145, 161, 298], "aros": [145, 213], "krewera": 145, "gl\u00e2nffrwd": 145, "hhl05": 145, "lw12": 145, "quasisymmetric_funct": 145, "chose": 145, "capit": 145, "lowercas": 145, "inject_shorthand": [145, 188, 298], "syntaxerror": 145, "powersum": [145, 147, 149, 279, 280, 281, 284, 290, 291, 296, 297, 298, 299, 301], "loehr": [145, 233, 293], "amer": [145, 149, 170, 222, 229, 233, 238, 270, 286, 306, 307, 364], "2005": [145, 149, 213, 222, 232, 352, 357], "735": 145, "warrington": 145, "1159": 145, "kt97": 145, "339": [145, 289], "376": [145, 362], "multiplicativencsymbas": 147, "_b": [147, 148, 149], "symmetricfunctionsnoncommutingvari": [147, 148, 149], "ncsymbas": 147, "bz05": [147, 148, 149], "from_symmetric_funct": [147, 149], "sum_of_partit": [147, 148, 149], "elem": 147, "pow": [147, 149], "internal_coproduct_on_basi": [147, 149], "internal_coproduct_by_coercion": 147, "ncsymbasis_abstract": [147, 148, 149], "ncsymdualbas": 147, "dncsym": [147, 148], "ncsymorncsymdualbas": 147, "symmetricfunctionsnoncommutingvariablesdu": 148, "ncsymd": 148, "ik": 148, "hnt06": 148, "0605262v1": 148, "x02": 148, "x11": 148, "x20": 148, "x03": 148, "x30": 148, "x22": 148, "x13": 148, "x31": 148, "y02": 148, "y11": 148, "y20": 148, "uparrow_": 148, "a_r": [149, 161, 222], "sim_a": 149, "i_c": 149, "i_d": 149, "cofre": 149, "0509265v3": 149, "bhrz06": 149, "hohlweg": 149, "rosa": [149, 299], "rs06": 149, "tran": [149, 170, 187, 222, 306, 307, 358], "215": [149, 232, 352], "0208168": 149, "coinvari": [149, 236, 274], "0502082": 149, "bt13": 149, "thiem": 149, "supercharact": 149, "763": [149, 311], "1142": [149, 242, 256], "s0218196713400171": 149, "1112": [149, 356], "4901": 149, "eltm": 149, "elth": 149, "eltp": 149, "sh": [149, 310, 338], "coarse_powersum": 149, "leq_": [149, 185], "coarsen": [149, 275], "deformed_coarse_powersum": 149, "rho_a": 149, "nst": 149, "rnode": 149, "dimv": 149, "mon": [149, 299, 364], "wedg": [149, 170, 178, 180, 183], "infimum": [149, 275], "sum_a": 149, "lm2011": [149, 275], "gamma_1": 149, "ordered_set_partition_act": [149, 275], "atom": [149, 158, 178, 180, 237, 250, 275, 341, 349], "is_atom": [149, 180, 224, 250, 275], "chi_a": 149, "sum_b": 149, "superclass": [149, 154, 194, 272], "mu_b": 149, "chi2": 149, "x_basi": 149, "sawada": 150, "s0304": 150, "3975": 150, "00049": 150, "lyndonword": [150, 356], "necklaces_evalu": 150, "non_decreasing_parking_funct": 151, "ndpf": 151, "pf3": [151, 157, 234], "nondecreasingparkingfunctions_al": 151, "nondecreasingparkingfunctions_n": 151, "1430": [151, 311, 319, 349], "4862": [151, 349], "prv2017": [152, 153], "nu_dyck_word": 152, "nudyckword": 152, "nene": 152, "update_ndw_symbol": 152, "0101001": 152, "0110010": 152, "can_mut": 152, "ndw": 152, "10010100": 152, "00000111": 152, "1101110011010010001101111000110000": 152, "1010101010101010101010101010101010": 152, "110100": 152, "101010": [152, 190], "horizontal_dist": 152, "00001011": 152, "10011001000": 152, "00100101001": 152, "nu_opt": 152, "points_color": [152, 307], "show_grid": 152, "show_nu": 152, "show_point": 152, "110111001101001000110111100011000": 152, "101010101010101010101010101010101": 152, "_path": 152, "____": 152, "______": [152, 172], "________": 152, "1010010": 152, "100100100": 152, "pretty_output": 152, "latex_nu_opt": 152, "latex_points_color": 152, "latex_show_grid": 152, "latex_show_nu": 152, "latex_show_point": 152, "path_weakly_above_oth": 152, "weali": 152, "0110": [152, 354], "111100": 152, "replace_dyck_char": 152, "ndw_open_symbol": 152, "ndw_close_symbol": 152, "replace_dyck_symbol": 152, "open_char": 152, "close_char": 152, "to_word_path": 152, "wordpath": [152, 351, 357, 358], "finitewordpath_north_east": [152, 358], "wp": [152, 273, 301, 317, 318, 327], "neenenen": 152, "10010101": 152, "010010": [152, 352, 354], "1010110": 152, "1001101": 152, "nu_tamari_lattic": 153, "nutamarilattic": 153, "tamari_lattic": [153, 344], "tamarilattic": [153, 180, 184, 185, 344], "generalizedtamarilattic": [153, 344], "bmfpr": [153, 184, 344], "ordered_tre": [154, 272], "resolut": [154, 357], "t23": 154, "t223": 154, "sort_kei": [154, 272], "circumst": [154, 272], "t32": 154, "t23322": 154, "tt1": 154, "tt2": 154, "ot": [154, 165, 244], "ta": [154, 354], "_1__": 154, "edgecoloredorderedtre": 154, "balancedtre": 154, "balancedlabelledorderedtre": 154, "balancedorderedtre": 154, "former": [154, 158, 185, 301], "to_binary_tree_left_branch": 154, "to_binary_tree_right_branch": 154, "to_parallelogram_polyomino": 154, "socci": [154, 156], "delest": [154, 156], "orderedtrees_al": 154, "orderedtrees_s": 154, "matha": [155, 158, 160, 162, 341, 342, 343], "ascii_art_t": 155, "tex_from_arrai": 155, "with_lin": 155, "tex_from_array_tupl": 155, "a_tupl": 155, "tex_from_skew_arrai": 155, "goal": [156, 345, 349], "parallelogram_polyomino": 156, "localopt": 156, "checker": 156, "delim": 156, "_repr_b": 156, "_repr_p": 156, "__repr__": 156, "_dispatch": 156, "global_opt": 156, "globalopt": 156, "tikz_opt": 156, "toto": 156, "set_opt": 156, "drawing_compon": 156, "bounce_0": 156, "bounce_1": 156, "box_is_nod": 156, "aval": 156, "box_is_root": 156, "cell_is_insid": 156, "degree_convex": 156, "get_bs_nod": 156, "get_arrai": 156, "get_left_bs_nod": 156, "get_node_position_from_box": 156, "box_posit": 156, "nb_crossed_nod": 156, "statr": 156, "get_opt": 156, "parallelogrampolyominoes_s": 156, "bounce_valu": 156, "color_bounce_0": 156, "color_bounce_1": 156, "color_lin": 156, "color_point": 156, "line_s": 156, "mirror": 156, "point_siz": [156, 357], "get_right_bs_nod": 156, "get_tikz_opt": 156, "is_flat": 156, "is_k_direct": 156, "lower_height": 156, "lower_path": 156, "upper_path": 156, "lower_width": 156, "upper_height": 156, "set_valu": 156, "_to_dyck_delest_viennot": 156, "derzak1980": 156, "brs2015": 156, "to_tikz": 156, "filldraw": 156, "5pt": 156, "upper_width": 156, "polici": 156, "parallelogrampolyominoesfactori": 156, "setfactori": 156, "parallelogrampolyominoesopt": 156, "opt": 156, "parallelogrampolyominoes_al": 156, "parentwithsetfactori": 156, "check_el": [156, 272, 342], "el": [156, 185, 272], "default_tikz_opt": 156, "beck": 157, "imagin": 157, "cul": 157, "sac": 157, "spot": [157, 235, 360], "car": 157, "street": 157, "narrow": 157, "stanford": 157, "octob": 157, "parkingbeck": 157, "hag08": 157, "shin": 157, "slide": [157, 158, 310, 354], "talk": 157, "emi": 157, "slc": 157, "wpaper": 157, "s61vortrag": 157, "gxz": 157, "garsia": [157, 289, 299], "xin": 157, "5796v1": 157, "decreasing_parking_funct": 157, "dorota": 157, "mazur": 157, "parking_funct": 157, "parkingfunct": 157, "labelled_dyck_word": 157, "to_labelled_dyck_word": 157, "cars_permut": 157, "characteristic_quasisymmetric_funct": 157, "ides_composit": 157, "cqf": 157, "diagonal_composit": 157, "diagonal_reading_word": 157, "diagonal_word": 157, "dinversion_pair": 157, "dinvers": 157, "secondari": 157, "divers": 157, "20555": 157, "6th": 157, "jump_list": 157, "displac": 157, "farther": [157, 158], "luck": 157, "lucky_car": 157, "parking_permut": 157, "1x": 157, "7x": 157, "5x": [157, 237, 271], "4x": 157, "6x": 157, "2x": [157, 303], "_________": 157, "primary_dinversion_pair": 157, "secondary_dinversion_pair": 157, "to_nondecreasingparkingfunct": 157, "to_labelling_area_sequence_pair": 157, "to_labelling_dyck_word_pair": 157, "to_labelling_permut": 157, "parkingfunctions_al": 157, "parkingfunctions_n": 157, "1296": [157, 311], "from_labelled_dyck_word": 157, "ldw": 157, "from_labelling_and_area_sequ": 157, "throughout": 158, "restrictedpartit": 158, "partitions_parts_in": 158, "partition_class": 158, "partitions_n": 158, "partitiontupl": [158, 160, 162, 342, 343], "13072": 158, "partitionsrestrict": 158, "lancellotti": [158, 161, 273, 336], "get_part": 158, "forth": [158, 298], "to_exp": [158, 162, 290, 306], "from_zero_on": 158, "zero_one_sequ": 158, "frobenius_coordin": 158, "ql": 158, "orderedpartit": 158, "16384": [158, 311], "russian": 158, "removable_cel": [158, 162, 299], "down_list": [158, 162, 289, 299, 341], "addable_cel": [158, 162, 299], "up_list": [158, 162, 299, 341], "add_cel": [158, 162], "add_horizontal_border_strip": 158, "add_vertical_border_strip": 158, "cocorn": [158, 341], "sag2001": [158, 309, 310], "outside_corn": [158, 162, 309, 310], "addable_cells_residu": 158, "outside_corners_residu": 158, "arm_cel": 158, "arm": [158, 162, 293, 341], "northwesternmost": [158, 341], "arm_length": [158, 162], "flat": [158, 235], "arms_legs_coeff": 158, "leg": [158, 162, 293, 341], "attacking_pair": [158, 341], "attack": [158, 275, 293, 341], "ke1991": 158, "beta_numb": 158, "multicharg": [158, 160, 162, 341, 342, 343], "quantum_characterist": [158, 162, 342, 343], "djm1998": [158, 162, 342, 343], "bk2009": [158, 160, 162, 342, 343], "specht": [158, 162, 339, 341, 342, 343], "northeasternmost": 158, "k_rim": 158, "k_boundari": 158, "cell_poset": [158, 309, 338], "nw": [158, 309], "standard_tableaux": [158, 162, 342, 343], "is_chain": [158, 178, 184, 185], "character_polynomi": 158, "ix_i": 158, "contents_tableau": 158, "behind": [158, 252, 254, 310], "corners_residu": 158, "crank": 158, "dyson": 158, "ag1988": 158, "defect": [158, 162, 354, 364], "tfrac12": [158, 162], "sum_r": [158, 162], "kappa_r": [158, 162, 342], "kappa_1": [158, 162, 342], "kappa_": [158, 162, 338], "phi_e": [158, 162], "gram": [158, 162], "semisimpl": [158, 162, 218, 229, 241, 270, 306, 338, 342], "iwahori": [158, 160, 229, 238, 270, 342], "phi_2": [158, 162], "phi_3": [158, 162], "phi_4": [158, 162], "phi_5": [158, 162], "prime_degre": [158, 162], "simplif": [158, 357, 367], "orv": 158, "paul": [158, 273, 349, 357], "olivi": 158, "dehay": 158, "dominated_partit": 158, "11435": 158, "dual_equivalence_graph": [158, 167], "inbetween": [158, 170], "brown": [158, 345], "as2008b": 158, "parikh": 158, "diagram_str": [158, 162, 309], "frobenius_rank": [158, 309], "nilcoxet": 158, "lm2006b": 158, "garnir_tableau": [158, 162], "garnir": [158, 162], "clearer": [158, 162], "_garnir_cel": [158, 162], "is_row_strict": [158, 341, 343], "is_column_strict": [158, 341, 343], "top_garnir_tableau": [158, 162], "generalized_pochhammer_symbol": 158, "pochhamm": [158, 186], "has_k_rectangl": 158, "is_k_reduc": 158, "is_k_irreduc": 158, "has_rectangl": 158, "hook_length": [158, 162], "hooklengthformula": [158, 341], "hook_polynomi": 158, "hook_product": [158, 175, 285], "horizontal_border_strip_cel": 158, "initial_column_tableau": [158, 162, 343], "initial_tableau": [158, 162, 341, 343], "inside_corn": 158, "inside_corners_residu": 158, "is_cor": 158, "is_k_bound": 158, "is_restrict": [158, 160], "jacobi_trudi": [158, 309], "jacobi": [158, 161, 299, 309], "trudi": [158, 161, 299, 309], "jt": 158, "k_atom": 158, "k_interior": 158, "k_column_length": 158, "k_row_length": 158, "row_length": [158, 309], "column_length": [158, 309], "k_conjug": [158, 292, 309], "k_irreduc": 158, "hm2011": 158, "bold": 158, "llms2013": 158, "k_size": 158, "k_skew": 158, "exceed": 158, "lm2004": 158, "k_split": 158, "larger_lex": 158, "rh": [158, 338, 349], "leg_cel": 158, "leg_length": [158, 162], "lower_hook": 158, "prime_j": 158, "lower_hook_length": 158, "next_within_bound": 158, "partition_typ": 158, "outer_rim": 158, "plancherel_measur": 158, "plancherel": 158, "random_element_plancherel": 158, "1440": [158, 297], "powermap": 158, "powerpartit": 158, "s_8": 158, "r_j": [158, 342], "jk1981": [158, 338], "reading_tableau": 158, "removable_cells_residu": 158, "remove_cel": [158, 162, 214], "remove_horizontal_border_strip": 158, "partitions_with_constraint": 158, "subpartit": 158, "row_standard_tableaux": [158, 162, 342, 343], "kernel": [158, 369], "zolotarev": 158, "legendr": 158, "modular": [158, 160, 162, 178, 180, 232], "multiplicative_gener": 158, "plist": 158, "kronecker_symbol": 158, "27s_lemma": 158, "stretch": 158, "suter_diagonal_slid": 158, "y_n": 158, "suter": 158, "sut2002": 158, "northwestern": 158, "lambda_m": 158, "dihedr": [158, 235, 239, 349], "p7": [158, 252, 349], "p5": [158, 252, 299, 349], "t_complet": [158, 299], "bor2009": [158, 299], "bdvo2012": [158, 299], "co2010": [158, 299], "northeastern": 158, "demarc": 158, "to_exp_dict": 158, "kmr2012": [158, 162], "brick": [158, 162, 335], "upper_hook": 158, "upper_hook_length": 158, "vertical_border_strip_cel": 158, "weighted_s": [158, 289], "young_subgroup": [158, 162], "young_subgroup_gener": [158, 162], "maya": 158, "comet": 158, "parts_in": 158, "15467": 158, "roger": 158, "ramanujan": [158, 232], "13605": 158, "brute": 158, "young_diagram": [158, 162, 309], "latex_diagram_str": [158, 162, 309], "partitionsgreatesteq": 158, "greatest": [158, 178, 180, 185, 285, 299], "partitionsgreatestl": 158, "partitions_al": 158, "from_beta_numb": 158, "mu_k": 158, "from_core_and_quoti": 158, "from_exp": 158, "from_frobenius_coordin": 158, "partitions_all_bound": 158, "partitions_constraint": 158, "partitions_end": 158, "ending_partit": 158, "fastest": [158, 237, 271], "thousand": [158, 349], "37338": 158, "190569292": 158, "reciproc": [158, 188], "default_prec": 158, "partition_": [158, 349], "number_theori": [158, 349], "random_element_uniform": 158, "ln": 158, "randpar": 158, "nw1978": 158, "aocp4": 158, "certainli": [158, 184, 224], "partitions_nk": 158, "hybrid": 158, "indirectli": [158, 235], "nrrestrictedpartit": 158, "partitions_start": 158, "starting_partit": 158, "regularpartit": 158, "regularpartitions_al": 158, "regularpartitions_bound": 158, "regularpartitions_n": 158, "regularpartitions_trunc": 158, "max_len": 158, "restrictedpartitions_al": 158, "restrictedpartitions_gener": 158, "restrictedpartitions_n": 158, "favour": 158, "100000": [158, 349, 357], "27493510569775696512677516320986352688173429315980054758203125984302147328114964173055050741660736621590157844774296248940493063070200461792764493033510116079342457190155718943509725312466108452006369558934464248716828789832182345009262853831404597021307130674510624419227311238999702284408609370935531629697851569569892196108480158600569421098519": [158, 349], "number_of_partitions_length": 158, "nrpartit": 158, "partition_algebra": 159, "partitionalgebraelement_ak": 159, "partitionalgebraelement_gener": 159, "partitionalgebraelement_bk": 159, "partitionalgebraelement_pk": 159, "partitionalgebraelement_prk": 159, "partitionalgebraelement_rk": 159, "partitionalgebraelement_sk": 159, "partitionalgebraelement_tk": 159, "partitionalgebra_ak": 159, "partitionalgebra_gener": 159, "partitionalgebra_bk": 159, "cclass": 159, "partitionalgebra_sk": 159, "t12": [159, 231], "partitionalgebra_pk": 159, "partitionalgebra_prk": 159, "partitionalgebra_rk": 159, "partitionalgebra_tk": 159, "setpartitionsak": 159, "a2p5": 159, "setpartitionsak_k": 159, "setpartitions_set": [159, 169, 275], "setpartitionsxkel": 159, "setpartitionsakhalf_k": 159, "setpartitionsbk": 159, "b2p5": 159, "setpartitionsbk_k": 159, "945": [159, 311], "setpartitionsbkhalf_k": 159, "setpartitionsik": 159, "i2p5": 159, "setpartitionsik_k": 159, "setpartitionsikhalf_k": 159, "setpartitionsprk": 159, "pr_k": 159, "setpartitionsprk_k": 159, "setpartitionsrk_k": 159, "setpartitionsprkhalf_k": 159, "setpartitionsrkhalf_k": 159, "setpartitionspk": 159, "p2p5": 159, "setpartitionspk_k": 159, "setpartitionspkhalf_k": 159, "setpartitionsrk": 159, "setpartitionssk": 159, "s3p5": 159, "setpartitionssk_k": 159, "setpartitionsskhalf_k": 159, "setpartitionstk": 159, "t_k": [159, 273, 338], "t2p5": 159, "setpartitionstk_k": 159, "setpartitionstkhalf_k": 159, "setpartitionxk": 159, "_e": [160, 342], "ariki": [160, 162, 342], "am2000": 160, "ak1994": 160, "ariki2001": 160, "brundan": [160, 341, 343], "categorif": [160, 162], "ariki1996": 160, "categorifi": [160, 162, 343], "klr": [160, 342], "kle1995": 160, "good_cel": 160, "llt1996": 160, "celebr": 160, "iwahori_hecke_algebra": 160, "lg": 160, "rg": [160, 287], "kplg": 160, "kpl": 160, "partition_kleshchev": 160, "kleshchevcrystalmixin": 160, "cogood_cel": 160, "cogood": [160, 162], "conorm": 160, "kp": 160, "conormal_cel": 160, "good_cell_sequ": 160, "kp3": 160, "kp4": 160, "good_residue_sequ": 160, "mullineux_conjug": 160, "mullineux": 160, "mat2015": 160, "sgn": [160, 339], "normal_cel": 160, "kleshchevpartitioncryst": 160, "kleshchevpartitiontupl": 160, "kle1996": 160, "bru1998": 160, "kleshchevpartitiontuplecryst": 160, "kle2009": 160, "kleshchevpartitions_al": 160, "r_t": 160, "_x": 160, "mg2": 160, "gc2": 160, "tingley2007": 160, "tingleyln": 160, "vazirani2002": 160, "kleshchevpartitions_s": 160, "partition_shifting_algebra": 161, "shiftingoperatoralgebra": 161, "x_r": 161, "expens": [161, 270, 282, 285, 349], "surround": [161, 345, 358], "bmps2018": 161, "regist": [161, 298, 301], "build_and_register_convers": 161, "support_map": 161, "zero_map": 161, "supp_map": 161, "gsort": 161, "shiftingsequencespac": 161, "500000000000000": [161, 235], "ordinari": [162, 303, 318, 343, 369], "koik": [162, 300, 342], "fock": 162, "quantiz": 162, "varagnolo": 162, "vasserot": 162, "stroppel": 162, "webster": 162, "khovanov": 162, "lauda": 162, "rouquier": 162, "partitions_all_with_categori": 162, "partition_tupl": 162, "content_tableau": 162, "kappa_l": [162, 342], "532": 162, "phi_6": 162, "standardtableautupl": [162, 341, 342, 343], "728": 162, "ell_1": [162, 349], "ell_k": [162, 349], "ell_i": 162, "partitiontuples_al": 162, "partitiontuples_level": 162, "partitiontuples_level_s": 162, "eta": 162, "partitiontuples_s": 162, "regularpartitiontupl": 162, "regularpartitiontuples_al": 162, "regularpartitiontuples_level": 162, "rpt": 162, "regularpartitiontuples_level_s": 162, "regularpartitiontuples_s": 162, "jonathan": 163, "bober": 163, "wrote": 163, "partitions_c": 163, "heavi": 163, "zs1_iter": 163, "zs1": 163, "zs98": 163, "zoghbi": 163, "ivan": 163, "stojmenov": 163, "332": [163, 170, 187], "citeseerx": 163, "ist": 163, "psu": 163, "viewdoc": 163, "summari": 163, "1287": 163, "zs1_iterator_nk": 163, "mild": 163, "vow": 163, "path_tableaux": [164, 165, 166, 167, 168], "discov": 164, "quickli": 164, "cylindricaldiagram": [164, 166, 167, 168], "dyckpath": [164, 165, 167, 358], "friezepattern": [164, 166, 167], "semistandardpathtableau": [164, 168], "semistandardpathtableaux": [164, 168], "path_tableau": [165, 166, 167, 168], "pathtableau": [165, 166, 167, 168], "pedagog": 165, "westburi": [165, 166, 167, 168], "dyck_path": 165, "slogan": 165, "to_perfect_match": 165, "is_skew": [165, 166, 168, 340], "local_rul": [165, 166, 167, 168], "to_dyckword": 165, "pathtableaux": [165, 166, 167, 168], "conwai": 166, "coco1": 166, "coco2": 166, "2019": [166, 273, 303, 336], "fp": [166, 185, 357, 364], "hj18": 166, "sqrt3": [166, 358], "sqrt2": 166, "realfield": [166, 358], "is_integr": [166, 168], "is_posit": 166, "uhp": 166, "hyperbol": [166, 223, 224, 226], "isometri": [166, 345], "poincar": 166, "disk": [166, 307], "km": [166, 286, 298], "klein": 166, "hyperboloid": 166, "notanumb": 166, "undefin": [166, 170, 212, 349], "rectif": [167, 168], "cactu": 167, "wes2017": 167, "henriqu": 167, "kamnitz": 167, "cylindr": 167, "commutor": [167, 168], "final_shap": 167, "initial_shap": 167, "coboundari": 167, "pt2": 168, "pt1": 168, "interleav": [168, 304], "rectifi": [168, 310], "to_pattern": 168, "semistandardskewtableau": 168, "fixpoint": 169, "hyperoctaedr": 169, "mcd": [169, 289, 298, 299], "valentin": 169, "ferai": 169, "number_of_cross": [169, 275], "medici": 169, "polyn\u00f4m": 169, "laguerr": 169, "zeilberg": [169, 349], "304": [169, 232, 364], "zonal": [169, 285, 298], "oxford": [169, 285, 298], "benoit": 169, "sho": 169, "matsumoto": 169, "weingarten": 169, "0903": 169, "5143": 169, "perfect_match": 169, "is_noncross": [169, 275], "weingarten_funct": 169, "o_n": 169, "loop_typ": 169, "loops_iter": 169, "number_of_loop": 169, "partner": [169, 170], "to_noncrossing_set_partit": 169, "weingarten_matrix": 169, "apply_map": 169, "base_set_cardin": [169, 275, 276], "despit": [170, 243, 250], "13742": 170, "danger": 170, "_left_to_right_multiply_on_right": 170, "trust": 170, "left_action_product": [170, 171, 338], "right_action_product": [170, 171, 338], "cycle_str": 170, "to_tableau_by_shap": 170, "forget_cycl": 170, "to_permutation_group_el": [170, 293], "sef": 170, "to_inversion_vector": 170, "stack_sort": 170, "to_digraph": [170, 360], "noninvers": [170, 338], "number_of_noninvers": [170, 338], "ishift": 170, "iswitch": 170, "longest_increasing_subsequ": 170, "longest_increasing_subsequences_numb": 170, "cycle_typ": [170, 299, 349], "foata_biject": [170, 354], "foata_bijection_invers": 170, "fundamental_transform": 170, "renyi": 170, "schuetzenberg": [170, 341], "fundamental_transformation_invers": 170, "destandard": 170, "ordered_alphabet": 170, "to_lehmer_cocod": 170, "cocod": 170, "reduced_words_iter": 170, "reduced_word_lexmin": 170, "recoil": 170, "number_of_recoil": 170, "recoils_composit": 170, "idesc": 170, "idescents_signatur": 170, "number_of_desc": 170, "number_of_idesc": 170, "descent_polynomi": 170, "imajor_index": 170, "to_major_cod": 170, "salianc": 170, "number_of_sali": 170, "bruhat_lequ": [170, 185], "bruhat_invers": 170, "bruhat_inversions_iter": 170, "bruhat_succ": 170, "bruhat_succ_iter": 170, "bruhat_pr": 170, "bruhat_pred_iter": 170, "bruhat_smal": 170, "bruhat_great": 170, "permutohedron_succ": 170, "permutohedron_pr": 170, "permutohedron_smal": 170, "permutohedron_great": 170, "right_permutohedron_interval_iter": 170, "right_permutohedron_interv": 170, "has_pattern": [170, 184, 349], "pattern_posit": 170, "patt": 170, "permutation_poset": 170, "robinson_schenst": [170, 188, 354], "increasing_tree_shap": 170, "rs_partit": 170, "remove_extra_fixed_point": 170, "retract_plain": [170, 338], "retract_direct_product": [170, 338], "retract_okounkov_vershik": [170, 338], "okounkov": [170, 338], "vershik": [170, 338], "hyperoctahedral_double_coset_typ": 170, "shifted_concaten": 170, "shifted_shuffl": [170, 354], "permutations_nk": 170, "permutations_mset": [170, 299], "permutations_set": 170, "permutations_msetk": 170, "permutations_setk": 170, "arrangements_msetk": 170, "arrangements_setk": 170, "standardpermutations_al": 170, "standardpermutations_n_abstract": 170, "standardpermutations_n": 170, "standardpermutations_desc": 170, "standardpermutations_recoilsfin": 170, "standardpermutations_recoilsfatt": 170, "standardpermutations_recoil": 170, "standardpermutations_bruhat_smal": 170, "standardpermutations_bruhat_great": 170, "cyclicpermut": 170, "cyclicpermutationsofpartit": 170, "standardpermutations_avoiding_12": 170, "standardpermutations_avoiding_21": 170, "standardpermutations_avoiding_132": 170, "standardpermutations_avoiding_123": 170, "standardpermutations_avoiding_321": 170, "standardpermutations_avoiding_231": 170, "standardpermutations_avoiding_312": 170, "standardpermutations_avoiding_213": 170, "standardpermutations_avoiding_gener": 170, "patternavoid": 170, "from_major_cod": 170, "from_permutation_group_el": 170, "pge": 170, "from_inversion_vector": 170, "from_cycl": 170, "rw": [170, 229, 239], "bistochastic_as_sum_of_permut": 170, "bistochast": 170, "bounded_affine_permut": 170, "descents_composition_list": 170, "descents_composition_first": 170, "descents_composition_last": 170, "to_standard": 170, "s\u00e9bastien": [170, 345, 352, 354, 357, 361, 364], "labb\u00e9": [170, 345, 352, 354, 357, 361, 364], "robinson_schensted_invers": 170, "amelior": 170, "14885": [170, 338], "expos": 170, "n_reduced_word": 170, "amrutha": 170, "shriya": [170, 350], "divya": 170, "aggarw": 170, "multimajor": 170, "0x": 170, "check_input": [170, 310], "certainti": 170, "asap": 170, "law": [170, 331, 334], "runtim": [170, 338], "standardpermutations_n_with_categori": 170, "absolute_length": 170, "cycle_tupl": 170, "decreasing_run": [170, 302], "as_tupl": 170, "gs1984": 170, "z1": [170, 290, 349], "z2": [170, 290], "z3": 170, "from_zero": 170, "113132": 170, "412": 170, "4125": 170, "45123": 170, "fs1978": [170, 354], "enumcomb1": [170, 180, 185], "k_m": [170, 186], "k_j": [170, 186], "s_6": 170, "rank_funct": [170, 178, 185], "cc2013": 170, "mac1995": [170, 282, 289, 309, 354], "is_derang": 170, "sch1961": 170, "31451": 170, "120770": 170, "multi_major_index": 170, "js2000": 170, "permutationinvers": 170, "noninv": [170, 338], "rsw2011": [170, 338], "number_of_reduced_word": 170, "greene_shap": [170, 185], "permutohedron_join": 170, "permutohedron_meet": 170, "markowski": 170, "mar1994": 170, "mistaken": 170, "schubert_polynomi": [170, 274], "finitari": 170, "vo2005": 170, "cst2010": 170, "check_standard": [170, 273], "permutationrun": 170, "admittedli": 170, "toi": 170, "landscap": 170, "portrait": 170, "subcal": 170, "simion_schmidt": 170, "schmidt": 170, "sortable_permut": 170, "s_5": [170, 274, 298], "s_3": [170, 235, 239, 338, 341], "is_cycl": 170, "strongly_connected_components_subgraph": 170, "carlitz": [170, 187, 299], "1954": [170, 187], "076": 170, "0060538": [170, 187], "skandera": 170, "s\u00e9m": 170, "lothar": [170, 298], "b46d": 170, "lehigh": 170, "mas906": 170, "mult": [170, 232, 338], "r2l": [170, 338], "l2r": [170, 338], "reading_word_permut": [170, 341], "recoils_fin": 170, "recoils_fatt": 170, "nonstandard": [170, 229, 318], "generator_nam": 170, "latex_empty_str": 170, "permutationsnk": 170, "multinomi": [170, 186], "n_t": 170, "30991": 170, "standardpermutations_all_avoid": 170, "vie1979": 170, "conjugacy_class": [170, 236], "conjugacy_classes_iter": 170, "conjugacy_classes_repres": [170, 236], "element_in_conjugacy_class": 170, "sp0": 170, "__contains__": 170, "stochast": 170, "birkhoff": [170, 186, 299], "von": 170, "neumann": 170, "glad": 170, "learn": [170, 332], "as_sum_of_permut": 170, "decomp": 170, "kls2013": 170, "dc": [170, 354, 364], "from_lehmer_cocod": 170, "lcc": 170, "lc": [170, 354], "illeg": 170, "sem": [170, 298], "nearli": [171, 222, 349], "taocp": 171, "inher": 171, "pointer": [171, 235, 349], "ugli": [171, 235, 299], "willing": 171, "sacrific": 171, "permutation_cython": 171, "left_action_same_n": 171, "map_to_list": 171, "crash": 171, "next_perm": 171, "marknelson": 171, "2002": [171, 213, 224, 357, 364], "permutation_iterator_transposition_list": 171, "overflow": [171, 349], "encourag": 171, "4gb": 171, "cowardli": 171, "refus": 171, "right_action_same_n": 171, "jang": 172, "soo": 172, "kim": 172, "plane_partit": 172, "planepartit": 172, "orthant": 172, "box_siz": 172, "tableau_onli": 172, "is_cspp": 172, "is_csscpp": 172, "is_cstcpp": 172, "is_scpp": 172, "is_spp": 172, "is_sscpp": 172, "is_tcpp": 172, "is_tspp": 172, "is_tsscpp": 172, "show_box": 172, "visibl": 172, "yz": [172, 367], "zx": [172, 367], "lightgrai": [172, 185, 307], "darkgrai": 172, "graphics3d": [172, 219, 235, 239, 345, 358], "x_tableau": 172, "y_tableau": 172, "z_tableau": 172, "116424": 172, "random_order_id": [172, 185], "finiteposet": [173, 177, 180, 181, 182, 184, 185], "finitelatticeposet": [173, 180, 185], "cartesianproductposet": [174, 185], "le_sum": 174, "chainposet": [174, 180, 181, 182, 184, 185], "le_lex": 174, "le_n": 174, "le_product": 174, "grosser": [175, 177], "d_complet": [175, 185], "dcompleteposet": 175, "hasse_diagram": [175, 177, 178, 180, 182, 185], "finitejoinsemilattic": [175, 180, 185], "proctor": 175, "proc1999": 175, "pdynk1999": 175, "proc2014": 175, "hook_length_formula": 175, "ky2019": 175, "poset_exampl": [175, 178, 181, 184, 185], "doubletaileddiamond": [175, 181, 182, 184, 185], "get_hook": 175, "elmt": [175, 185], "youngdiagramposet": [175, 178, 181, 182, 184, 185], "joinsemilatticeel": [176, 180], "posetel": [176, 185], "latticeposetel": [176, 180], "meetsemilatticeel": [176, 180], "establish": [176, 338], "forestposet": [177, 181], "antichains_iter": [178, 185], "are_compar": 178, "are_incompar": 178, "incompar": [178, 185], "atoms_of_congruence_lattic": 178, "closed_interv": [178, 185], "common_lower_cov": [178, 185], "common_upper_cov": [178, 185], "congruences_iter": 178, "cover_relations_iter": [178, 185], "find_nonsemidistributive_el": 178, "semidistribut": [178, 180], "find_nonsemimodular_pair": 178, "find_nontrivial_congru": 178, "frattini_sublattic": [178, 180, 185], "frattini": [178, 180, 185], "sublattic": [178, 180, 229], "greedy_linear_extensions_iter": 178, "has_bottom": [178, 185], "has_top": [178, 185], "interval_iter": 178, "is_antichain_of_poset": [178, 185], "is_bound": [178, 185], "is_compl": [178, 180], "is_congruence_norm": 178, "is_convex_subset": 178, "is_gequ": [178, 185], "is_greater_than": [178, 185], "is_join_semilattic": [178, 185], "is_lequ": [178, 185], "is_less_than": [178, 185, 275], "is_linear_interv": [178, 185], "t_min": 178, "t_max": 178, "is_meet_semilattic": [178, 185], "is_rank": [178, 185], "join_matrix": [178, 180], "kappa_du": 178, "lequal_matrix": [178, 185], "redefin": [178, 349], "lower_covers_iter": [178, 185], "maximal_sublattic": [178, 180], "meet_matrix": [178, 180], "moebius_funct": [178, 184, 185], "moebius_function_matrix": [178, 185], "neutral_el": [178, 180], "open_interv": [178, 185], "order_filt": [178, 185], "order_id": [178, 185], "order_ideal_cardin": [178, 185], "orthocomplementations_iter": 178, "orthocomplement": [178, 180], "prime_el": 178, "principal_congruences_poset": 178, "principal_order_filt": [178, 185], "principal_order_id": [178, 185], "pseudocompl": [178, 180], "skeleton": [178, 180], "sublattices_iter": 178, "supergreedy_linear_extensions_iter": 178, "supergreedi": 178, "upper_covers_iter": [178, 185], "vertical_decomposit": [178, 180], "hassediagram": 178, "data_structur": [178, 299], "vertex_label": [178, 235], "convert_empty_dict_labels_to_non": 178, "topolog": [178, 354], "pentagonposet": [178, 180, 181, 184, 185], "frees": 178, "jezek": 178, "nation": 178, "n5": [178, 180, 185], "hex": [178, 180], "con": [178, 180], "_precompute_interv": 178, "uc": [178, 185], "dag": [178, 185, 309], "stop_pair": 178, "disjoint_set": 178, "disjointset_class": 178, "quadrilater": 178, "dav1997": 178, "gy": 178, "oq": 178, "number_of_subset": 178, "coxeter_transform": [178, 185, 239], "ausland": [178, 185], "reiten": [178, 185], "__dict__": 178, "clear_cach": 178, "hi": [178, 233, 299, 309, 349], "integerpartit": [178, 180, 184, 185], "meet_or_join": 178, "OR": [178, 180], "semimodular": [178, 180], "hawaii": 178, "ralph": 178, "preprint": [178, 197, 233], "conlat": 178, "whichev": 178, "_leq_storag": 178, "precomput": [178, 301], "municip": 178, "og": [178, 180], "oqc": [178, 180], "g_c": [178, 180], "bo": [178, 180], "jb": 178, "inflat": 178, "_alternate_is_lequ": 178, "lin_ext": 178, "is_grad": [178, 180, 185], "p217": 178, "gec81": 178, "_join": 178, "uparrow": 178, "diamondposet": [178, 180, 184, 185], "_meet": 178, "gecseg": 178, "1981": [178, 222, 232], "fct": [178, 263], "szege": 178, "hungaria": 178, "august": 178, "verlag": [178, 298], "_moebius_function_matrix": 178, "bird": 178, "orthocompl": 178, "coatom": [178, 180, 237], "dualli": [178, 180, 241, 261], "disjointset": [178, 275], "e_k": [178, 270, 280, 281, 284, 296, 297, 299, 357], "withdraw": 178, "g_ext": 178, "sg_ext": 178, "return_list": 178, "latticeerror": [178, 180], "incidence_algebra": [179, 185], "incidencealgebra": [179, 185], "convolut": 179, "is_unit": [179, 299], "reduced_subalgebra": 179, "ielt": 179, "reducedincidencealgebra": 179, "r_p": 179, "meetsemilattic": [180, 185], "joinsemilattic": [180, 185], "finitemeetsemilattic": [180, 185], "is_distribut": 180, "is_modular": 180, "is_lower_semimodular": 180, "is_upper_semimodular": 180, "is_semidistribut": 180, "is_join_semidistribut": 180, "is_meet_semidistribut": 180, "is_join_distribut": 180, "is_meet_distribut": 180, "is_coatom": 180, "is_extrem": 180, "is_sectionally_compl": 180, "is_cosectionally_compl": 180, "is_relatively_compl": 180, "is_pseudocompl": 180, "is_join_pseudocompl": 180, "is_orthocompl": 180, "is_supersolv": 180, "supersolv": 180, "is_dismantl": [180, 184], "dismantl": [180, 184], "is_interval_dismantl": 180, "is_sublattice_dismantl": 180, "is_ston": 180, "is_trim": 180, "is_vertically_decompos": 180, "nontrivi": [180, 327, 338], "is_isoform": 180, "isoform": 180, "is_subdirectly_reduc": 180, "is_constructible_by_doubl": 180, "double_irreduc": [180, 185], "join_prim": 180, "meet_prim": 180, "is_modular_el": 180, "is_left_modular_el": 180, "canonical_joinand": 180, "joinand": 180, "canonical_meetand": 180, "meetand": 180, "submeetsemilattic": 180, "subsemilattic": 180, "subjoinsemilattic": 180, "is_sublattic": 180, "sublattices_lattic": 180, "isomorphic_sublattices_iter": [180, 185], "moebius_algebra": [180, 183], "quantum_moebius_algebra": [180, 183], "vertical_composit": [180, 185], "unifi": 180, "day_doubl": 180, "subdirect_decomposit": 180, "subdirect": 180, "congruences_lattic": 180, "divisorlattic": [180, 184, 185], "pnum": 180, "palp": [180, 349], "ord": 180, "d10": 180, "c4": [180, 222, 224, 248, 249, 270], "meet_irreduc": 180, "join_irreduc": 180, "holm2016": 180, "mi": 180, "cosection": 180, "myi": 180, "weaker": [180, 185], "supset": [180, 299], "crown": [180, 184], "lessdot": [180, 185], "dl12": 180, "symmetricgroupweakorderposet": [180, 184, 185], "mark1992": 180, "subdivis": [180, 265], "distmantl": 180, "isotyp": [180, 318, 324, 327, 328, 349], "dilworth": [180, 185], "dil1940": 180, "semimodular_lattic": 180, "aaoe_": 180, "modular_lattic": 180, "d6": [180, 222, 251], "is_self_du": [180, 184, 185, 302], "scientif": [180, 213], "gw2014": 180, "platt1976": 180, "cover_relations_graph": [180, 185], "ordinal_product": [180, 185], "cha92": 180, "implic": [180, 184, 302], "hyogc": 180, "selfdual": 180, "d72": 180, "subdirectli": 180, "cert": 180, "n5_": 180, "is_induced_subposet": [180, 185], "with_bound": [180, 185], "adjoin": [180, 185], "thom2006": 180, "ungrad": 180, "n6": 180, "n5_in_l": 180, "has_isomorphic_subposet": [180, 185], "isomorphic_subposets_iter": [180, 185], "subgraph_search_iter": [180, 185], "moebiusalgebra": [180, 183], "quantummoebiusalgebra": [180, 183], "theta_1": 180, "theta_2": 180, "theta_3": 180, "pseudocomplement": 180, "ldecomp": 180, "fac": 180, "sublat": 180, "sll": 180, "ordinal_sum": [180, 185], "elements_onli": 180, "lat": 180, "hat": [180, 185, 212, 263], "finitejoinsemilattice_with_categori": 180, "finitelatticeposet_with_categori": 180, "_test_an_el": [180, 185, 191], "is_parent_of": [180, 185], "finitemeetsemilattice_with_categori": 180, "linearextensionofposet": 181, "linearextensionsofposet": [181, 185], "linearextensionsofposetwithhook": 181, "linearextensionsofforest": 181, "pi_0": [181, 185], "pi_1": [181, 185, 299], "pi_j": [181, 185, 299], "sch\u00fctzenberg": [181, 185, 354], "stan2009": [181, 185, 341], "tau_": [181, 185, 239], "is_greedi": [181, 185], "jump_count": 181, "jump_numb": [181, 185], "partial_i": 181, "atkinson": [181, 185], "linearextensionsofmobil": 181, "mobileposet": [181, 182, 184], "1098": 181, "ribbonposet": [181, 182, 184, 185], "361628701868606400": 181, "markov_chain_digraph": 181, "markov_chain_transition_matrix": 181, "ggmm2020": 182, "_ribbon": 182, "_anchor": 182, "_element_to_vertex": 182, "21399440939": 182, "basisabstract": 183, "solomon67": 183, "e_x": 183, "i_x": [183, 185], "mu_l": 183, "greene73": 183, "etienne98": 183, "loui": 183, "burnsid": [183, 306], "1967": 183, "80064": 183, "curti": [183, 273], "advanc": [183, 235, 273, 298, 299, 349], "8708": [183, 273], "90106": 183, "gwihen": 183, "etienn": 183, "1006": [183, 298, 301], "eujc": 183, "0227": 183, "moebiusalgebrabas": 183, "crk": 183, "e_z": 183, "corank": 183, "c_x": 183, "e_a": [183, 212], "b_x": 183, "epw14": [183, 185], "characteristic_basi": 183, "is_series_parallel": [184, 185], "dextersemilattic": [184, 344], "integercomposit": 184, "integerpartitionsdominanceord": 184, "hanger": 184, "noncrossingpartit": [184, 347], "permutationpattern": 184, "permutationpatterninterv": 184, "permutationpatternoccurrenceinterv": 184, "powerposet": 184, "productofchain": 184, "randomlattic": 184, "randomposet": 184, "restrictedintegerpartit": 184, "shardposet": [184, 302], "sstposet": 184, "standardexampl": 184, "symmetricgroupabsoluteorderposet": 184, "symmetricgroupbruhatintervalposet": 184, "symmetricgroupbruhatorderposet": [184, 185], "tetrahedralposet": 184, "tetrahedr": [184, 311], "layer": 184, "updownposet": 184, "youngslattic": 184, "youngslatticeprincipalorderid": 184, "face_lattic": [184, 185], "facade_set": 184, "use_subset": 184, "coxetergroupabsoluteorderposet": 184, "use_reduced_word": 184, "chain_polynomi": [184, 185, 302, 344], "cha18": [184, 344], "p_l": 184, "q_2": [184, 231, 233, 238], "q_m": [184, 335], "q_j": 184, "ribbon_elmt": 184, "anchor_elmt": 184, "anchor_poset": 184, "v_m": 184, "permutation_pattern": 184, "st2010": 184, "bru1994": 184, "chain_length": 184, "littl": [184, 233, 338, 349], "set_random_se": [184, 185, 323], "995": 184, "shard_preorder_graph": [184, 302], "zeta_polynomi": [184, 185, 302], "gar2015": 184, "ros1999": 184, "ranks1": 184, "ranks2": 184, "silver": 184, "striker2011": 184, "join_irreducibles_poset": 184, "tet": 184, "zig": 184, "zag": 184, "fenc": 184, "somewher": 184, "y5": 184, "1211": [184, 233], "2111": 184, "namespac": 184, "finiteposets_n": 185, "is_poset": 185, "compare_el": 185, "relations_iter": 185, "relations_numb": 185, "magnitud": 185, "is_rank_symmetr": 185, "is_jump_crit": 185, "is_eulerian": 185, "is_incomparable_chain_fre": 185, "is_slend": 185, "slender": 185, "is_spern": 185, "sperner": 185, "rees_product": 185, "lexicographic_sum": 185, "star_product": 185, "without_bound": 185, "completion_by_cut": 185, "dedekind": 185, "macneil": 185, "intervals_poset": 185, "ordinal_summand": 185, "random_subposet": 185, "slant_sum": 185, "slant": 185, "is_chain_of_poset": 185, "maximal_antichain": 185, "maximal_chains_iter": 185, "maximal_chain_length": 185, "random_maximal_chain": 185, "random_maximal_antichain": 185, "linear_intervals_count": 185, "graphviz_str": 185, "readi": [185, 349], "flag_f_polynomi": 185, "h_polynomi": 185, "flag_h_polynomi": 185, "order_polynomi": 185, "m_triangl": [185, 347], "coxeter_polynomi": 185, "degree_polynomi": 185, "p_partition_enumer": 185, "chain_polytop": 185, "order_polytop": 185, "comparability_graph": 185, "incomparability_graph": 185, "frank_network": 185, "linear_extensions_graph": 185, "with_linear_extens": 185, "random_linear_extens": 185, "coxeter_smith_form": 185, "isomorphic_subposet": 185, "dilworth_decomposit": 185, "is_el_label": 185, "level_set": 185, "order_complex": 185, "unwrap": 185, "spectrum": [185, 357], "finiteposet_with_categori": 185, "softwar": [185, 274, 298], "libgap": [185, 271], "macaulay2": 185, "needspackag": 185, "_dual_class": 185, "elements_of_depth_iter": 185, "subsets_pairwis": [185, 333], "inlin": 185, "infrastructur": 185, "overhead": 185, "362880": 185, "at1990": 185, "ml": 185, "st1986": 185, "trafficsign": 185, "irreducibles_poset": 185, "mapl": [185, 188, 233, 287, 349], "frica": 185, "geq_p": 185, "jrj94": 185, "27s_theorem": 185, "v_3": 185, "dushnik": 185, "leq_p": 185, "order_dimens": 185, "greatli": 185, "25588": 185, "ft00": 185, "inc": 185, "completebipartitegraph": 185, "liter": [185, 299, 310], "untouch": 185, "fpolynomi": 185, "topologi": 185, "cell_complex": 185, "genericcellcomplex": 185, "f_vector": 185, "feig1986": 185, "joan": 185, "feigenbaum": 185, "1986": 185, "90023": 185, "fl": 185, "polygen": [185, 186, 347], "bf1999": 185, "capac": [185, 349], "y_p": 185, "graph_str": 185, "edge_str": 185, "c_0": [185, 349], "deg": [185, 306, 349], "hpolynomi": 185, "order_ideals_lattic": 185, "simplicial_complex": 185, "simplicialcomplex": [185, 335], "h_vector": 185, "intervals_numb": 185, "y_2": 185, "return_raising_chain": 185, "bj1980": 185, "is_d_complet": 185, "eulerian_poset": 185, "mww": 185, "compet": 185, "graded_poset": 185, "tier": 185, "semiord": 185, "ip6": 185, "chains_1_2": 185, "incomp": 185, "eric": [185, 275], "rowland": 185, "le_p": 185, "le_q": 185, "va": 185, "big_n": 185, "eponym": 185, "graetzer": 185, "kelli": 185, "bruhat_poset": [185, 188], "sperner_property_of_a_partially_ordered_set": 185, "eat": 185, "sys1987": 185, "suffic": [185, 273], "chi_g": 185, "p_g": 185, "chi_": 185, "2314": 185, "3421": [185, 354], "leqm": 185, "p_t": [185, 273], "linearextensionsofposet_with_categori": 185, "risk": 185, "chevron": 185, "lein2008": 185, "leinster": 185, "documenta": 185, "uni": [185, 285, 299, 318, 327], "bielefeld": 185, "golem": 185, "ph": [185, 208, 212, 302], "utexa": 185, "the_magnitude_of_an_enriched_c": 185, "noncrossing_partition_lattic": 185, "on_int": 185, "contract": 185, "upset": 185, "downset": 185, "order_ideal_plot": 185, "omega_p": 185, "284": 185, "jl": 185, "tup": 185, "sum_f": 185, "grinb2016a": 185, "dictat": [185, 252], "label_el": 185, "element_label": 185, "cover_label": 185, "element_color": 185, "element_shap": 185, "markers_api": 185, "element_s": 185, "cover_color": 185, "cover_styl": 185, "solid": [185, 235], "dash": 185, "dashdot": 185, "cover_labels_background": 185, "overal": [185, 224, 233, 273], "figsiz": [185, 235, 239, 357], "titl": 185, "fontsiz": [185, 335], "emphas": 185, "f_intern": 185, "nsublattic": 185, "randomli": [185, 341, 343, 349], "propp1997": 185, "is_order_filt": 185, "is_order_id": 185, "1243": [185, 359], "4312": 185, "4321": 185, "rk": [185, 307], "bj\u00f6rner": 185, "welker": [185, 338], "bjwe2005": 185, "mbre2011": 185, "lsw2012": 185, "b3t": 185, "rob": 185, "beezer": 185, "elm_lab": 185, "p_element": 185, "ss": [185, 338, 341], "allow_incompar": 185, "remove_dupl": 185, "top_p": 185, "bot_q": 185, "max_achain": 185, "dbinom": 185, "from_iter": 185, "a000112": 185, "fcn": 185, "dig": 185, "allows_multiple_edg": 185, "allows_loop": 185, "transitive_reduct": 185, "popular": 185, "surpris": [185, 239], "my_el": 185, "annoi": 185, "unsupport": [185, 292], "whatsoev": 185, "data1": 185, "data2": 185, "gaussian_multinomi": 186, "binomial_algorithm": 186, "q_multinomi": 186, "gaussian_binomial_coeffici": 186, "ch2006": 186, "030056160000": 186, "qing": 186, "hu": 186, "hou": 186, "1446": 186, "1449": 186, "disc": 186, "031": 186, "q_catalan_numb": 186, "11411": 186, "q_factori": 186, "q_int": 186, "q_jordan": 186, "f_t": 186, "ker": 186, "9765": 186, "1029": 186, "615195": 186, "40635": 186, "5643": 186, "2331": [186, 232], "1491": 186, "515": [186, 238, 270], "147": 186, "xavier": [186, 358], "caruso": 186, "q_pochhamm": 186, "aq": 186, "pochhammer_symbol": 186, "q_stirling_number1": 186, "ca1948": [186, 187], "ca1954": [186, 187], "q_stirling_number2": 186, "mil1978": 186, "q_subgroups_of_abelian_group": 186, "bu87": 186, "delsart": 186, "delsarte48": 186, "lambda_l": 186, "xi_1": 186, "xi_k": 186, "xi_2": 186, "butler": 186, "lynn": 186, "unimod": 186, "1987": [186, 238, 273, 300], "771": 186, "775": 186, "9939": 186, "0911049": 186, "sur": 186, "abelien": 186, "fini": 186, "annal": 186, "jul": [186, 299], "609": [186, 362], "jstor": 186, "1969047": 186, "amritanshu": [186, 306, 350], "prasad": [186, 306, 350], "tomer": 186, "bauer": 186, "qt_catalan_numb": 186, "q_bernoulli": 187, "beta_m": 187, "b_m": [187, 276, 304], "1215": 187, "s0012": 187, "7094": 187, "01588": 187, "q_bernoulli_polynomi": 187, "a000275": 188, "bessel": 188, "polcoeff": 188, "besselj": 188, "_michael": 188, "somos_": 188, "10000": [188, 349, 354, 357, 364], "3616": 188, "315650422081868605887952568754066420592310556052906916435144": 188, "schuetzenberger_involut": [188, 341, 354], "nonnegativeinteg": [188, 349], "aaaa": 188, "cccc": 188, "aabcacbaa": 188, "is_palindrom": [188, 354, 358, 361], "abaababaabaababaababaabaababaabaababaaba": [188, 357, 361, 364], "random_matrix": [188, 349], "npoint": [188, 349], "some_flashy_featur": 188, "from_list": 189, "on_fli": 189, "fly": 189, "rank_from_list": 189, "blah": 189, "callabledict": 189, "callable_dict": 189, "__getitem__": [189, 224, 342, 357], "beyond": 189, "unrank_from_list": 189, "recognizable_seri": 190, "prefixclosedset": 190, "create_by_alphabet": 190, "iterate_possible_addit": 190, "0011": [190, 354], "iterate_by_length": [190, 358, 367], "prefix_set": 190, "br2010a": 190, "moduleel": 190, "rec": 190, "coefficient_of_word": 190, "multiply_left": 190, "multiply_right": 190, "hadamard_product": 190, "totallyorderedfiniteset": [190, 353], "rec1": 190, "rec2": 190, "rec3": 190, "11111": [190, 311], "111111": [190, 311], "10101": 190, "2210": 190, "restricted_growth": 191, "restrictedgrowtharrai": 191, "_test_enumerated_set_contain": 191, "_test_some_el": 191, "ribbon_shaped_tableau": 193, "ribbonshapedtableau": [193, 310], "ribbonshapedtableaux": 193, "skewtableaux": [193, 310], "from_shape_and_word": [193, 310, 341], "ribbon_class": 193, "standardribbonshapedtableaux": 193, "standardskewtableaux": [193, 310, 341], "standardribbonshapedtableaux_shap": 193, "ribbon_tableau": 194, "multiskewtableau": 194, "inversion_pair": 194, "semistandardskewtableaux": [194, 310], "multiskewtableaux": 194, "multiskew": 194, "ribbontableau": 194, "expr": [194, 310], "2041100030": 194, "ribbontableau_class": 194, "ribbontableaux": 194, "vanleeuwen91": 194, "marc": [194, 349], "leeuwen": 194, "europ": 194, "wwwmathlabo": 194, "poitier": 194, "maavl": 194, "edgeseq": 194, "from_expr": [194, 310], "ribbontableaux_shape_weight_length": 194, "semistandardmultiskewtableaux": 194, "cospin_polynomi": 194, "cospin": [194, 288, 298, 299], "count_rec": 194, "graph_implementation_rec": 194, "skp": [194, 288, 309, 310], "insertion_tableau": 194, "list_rec": 194, "spin_polynomi": 194, "spin_polynomial_squar": 194, "spin_rec": 194, "constantli": 196, "_element": 196, "rigged_configur": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "bij_abstract_class": 196, "krttorcbijectionabstract": [196, 198], "tp_krt": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 215], "krt": [196, 198, 202, 204, 206, 209, 212, 215, 216], "bij_type_a": [196, 198], "krttorcbijectiontypea": [196, 198, 201, 203, 204, 205], "pathlist": [196, 198, 202, 204, 206, 215, 216], "rctokrtbijectionabstract": [196, 198], "rc_element": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "build_graph": [196, 202, 204, 206, 212], "partition_list": [196, 198, 202, 204, 206, 210, 211, 212, 213, 214], "rctokrtbijectiontypea": [196, 198, 201, 203, 204, 205], "bij": [196, 202, 204, 206], "_graph": [196, 202, 204, 206], "mlt": 197, "1505": 197, "07040": 197, "bij_infin": 197, "fromrcisomorph": 197, "fromtableauisomorph": 197, "mlttorcbijectiontypeb": 197, "krttorcbijectiontypeb": [197, 202], "vct": [197, 210, 211, 212], "as_fold": [197, 210, 211, 212, 224, 263], "mlttorcbijectiontyp": 197, "krttorcbijectiontyp": [197, 204, 206], "rctomltbijectiontypeb": 197, "rctokrtbijectiontypeb": [197, 202], "rctomltbijectiontyp": 197, "rctokrtbijectiontyp": [197, 204, 206], "cur_path": 198, "cur_dim": 198, "bij_type_a2_du": 199, "krttorcbijectiontypea2du": 199, "krttorcbijectiontypec": [199, 200, 202, 203], "rctokrtbijectiontypea2du": 199, "rctokrtbijectiontypec": [199, 200, 202, 203], "bij_type_a2_even": 200, "krttorcbijectiontypea2even": [200, 206], "rctokrtbijectiontypea2even": [200, 206], "bij_type_a2_odd": 201, "krttorcbijectiontypea2odd": 201, "rctokrtbijectiontypea2odd": 201, "bij_type_b": 202, "other_outcom": 202, "pos_val": 202, "width_n": 202, "to_tensor_product_of_kirillov_reshetikhin_tableaux": [202, 212, 213, 216], "to_rigged_configur": [202, 212, 213, 215, 216], "bij_type_c": 203, "bij_type_d": 204, "doubling_map": 204, "vacanc": [204, 212, 213, 214], "halving_map": 204, "halv": [204, 212], "bij_type_d_tri": 205, "krttorcbijectiontypedtri": 205, "rctokrtbijectiontypedtri": 205, "bij_type_d_twist": 206, "krttorcbijectiontypedtwist": 206, "rctokrtbijectiontypedtwist": 206, "krttorcbiject": 207, "rctokrtbiject": 207, "rigged_configuration_elt": 207, "kleber1": 208, "kleber_tre": [208, 213], "klebertre": [208, 213], "classical_ct": 208, "virtualklebertre": [208, 213], "yangian": 208, "internat": 208, "kleber2": 208, "dissert": 208, "california": [208, 232], "berkelei": [208, 232], "qa": [208, 213, 215, 233, 307], "9809087": 208, "16876": 208, "klebertreenod": 208, "breadth_first_it": 208, "depth_first_it": 208, "75n": 208, "use_vector_not": 208, "parent_obj": 208, "node_weight": 208, "dominant_root": 208, "parent_nod": 208, "up_root": 208, "alpha_a": [208, 212, 213], "l_j": [208, 212], "klebertreetypea2even": 208, "gamma_a": 208, "all_nod": 208, "oss03": [208, 212, 213], "masato": [208, 209, 213, 215], "okado": [208, 209, 213, 215, 263], "phy": [208, 213, 222, 288, 299, 357], "0209082": 208, "base_tre": 208, "rigconbiject": [209, 212, 213, 216], "oss13": 209, "ss2015": [209, 210], "reiho": [209, 213, 215], "sakamoto": [209, 213, 215], "599": [209, 215], "1109": [209, 215], "3523": [209, 215], "kr_tableaux": 209, "krtableauxbn": 209, "krtableauxtypehorizon": 209, "reshetkhin": 209, "krtableauxspinel": 209, "from_kirillov_reshetikhin_cryst": 209, "krtableauxdtwistedspin": 209, "krtableauxrectangl": 209, "krtableauxspin": 209, "spinor": [209, 212, 216, 222], "left_split": [209, 212, 216], "to_arrai": 209, "krtableauxtypebox": 209, "krtableauxtypevert": 209, "krtableauxtypefromrc": 209, "krtableauxtypefromrcel": 209, "reshetkihn": 209, "oss2011": [209, 213, 215], "bijectiondn": [209, 212, 213, 216], "classifi": [209, 222, 224, 237], "column_shap": 209, "wsc": 209, "krcry": 209, "krtab": 209, "kirillov_reshetikhin_cryst": 209, "omega_k": 209, "right_split": [209, 212, 216], "to_classical_highest_weight": 209, "f_str": 209, "to_kirillov_reshetikhin_cryst": 209, "rc_crystal": 210, "crystalofnonsimplylacedrc": 210, "wlr": 210, "crystalofriggedconfigur": 210, "rchwnonsimplylacedel": [210, 212], "from_virtu": [210, 211, 213], "vrc": [210, 211, 213], "to_virtu": [210, 211, 213], "crysstructschilling06": [210, 212, 213], "ss2015ii": 210, "ss2017": 210, "rchighestweightel": [210, 212], "element_ascii_art": [210, 211, 213], "half_width_boxes_type_b": [210, 211, 213], "rc_infin": 211, "infinitycrystalofnonsimplylacedrc": 211, "infinitycrystalofriggedconfigur": 211, "rigged_partit": [211, 212, 214], "rcnonsimplylacedel": [211, 212], "rigging_list": [211, 212, 213], "vrc_elt": [211, 213], "velt": [211, 213], "f_a": [211, 212], "vg": 211, "riggedconfigurationel": [211, 212], "riggedpartit": [212, 214], "rigged_configuration_el": 212, "krrcnonsimplylacedel": [212, 213], "krriggedconfigurationel": 212, "cocharg": [212, 213, 341, 343, 354], "gamma_0": 212, "v_a": 212, "gamma_j": [212, 263], "krrcsimplylacedel": [212, 213], "alpha_b": 212, "krrctypea2dualel": [212, 213], "sc": [212, 335], "to_virtual_configur": 212, "varepsilon_a": 212, "varepsilon_n": 212, "varphi_a": 212, "varphi_n": 212, "rc_elt": [212, 215], "tp_krtab": 212, "tp_krcry": 212, "to_tensor_product_of_kirillov_reshetikhin_cryst": [212, 213, 215, 216], "lambda_a": [212, 213], "complement_rig": 212, "reverse_factor": 212, "corig": 212, "hwc": 212, "return_b": 212, "precompos": 212, "left_box": 212, "appeal": 212, "left_column_box": 212, "right_column_box": 212, "display_step": [212, 216], "bijectionlrt": [212, 213, 216], "bigotimes_i": [212, 216], "nonposit": 212, "colabel": 212, "use_vacancy_numb": 212, "rc2": [212, 213], "borcherd": [212, 223], "ss2018": 212, "imaginari": [212, 232, 239, 349], "nu0": 212, "partition_rigging_list": 212, "vacancy_numb": [212, 214], "rcnonsimplylac": 213, "rctypea2du": 213, "rctypea2even": 213, "750": 213, "kerov": 213, "ansatz": 213, "hkott2002": 213, "hatayama": 213, "kuniba": 213, "takagi": 213, "tsuboi": 213, "fermion": [213, 263, 337], "prog": 213, "97376": 213, "jing": [213, 292, 299], "world": 213, "334": 213, "anatol": 213, "selecta": 213, "mathscinet": 213, "mr1890195": 213, "tp_krc": [213, 215, 216], "kr1": [213, 215], "kr2": [213, 215], "fermionic_formula": 213, "only_highest_weight": 213, "subsum": 213, "sakamoto13": 213, "oss2003": 213, "0105017": 213, "1302": 213, "4562v1": 213, "tensor_product_of_kirillov_reshetikhin_cryst": [213, 215], "tensor_product_of_kirillov_reshetikhin_tableaux": 213, "get_num_cells_to_column": 214, "end_column": 214, "insert_cel": 214, "max_width": 214, "prepar": [214, 223], "num_cel": 214, "newli": 214, "riggedpartitiontypeb": 214, "tensor_product_kr_tableaux": 215, "highestweighttensorkrt": 215, "obei": 215, "eastern": 215, "eltlong": 215, "tensorproductofkirillovreshetikhintableauxel": [215, 216], "tensor_product_kr_tableaux_el": 216, "tpkrt": 216, "dynkindiagram": [217, 224, 228, 243], "weylcharact": [217, 222, 232, 270], "complexreflectiongroup": [217, 236, 237], "fusion": [217, 270], "ambientspac": [218, 224, 239, 241, 242, 245, 248, 250, 252, 254, 256, 261, 262, 264, 265, 266, 267, 268], "smallest_base_r": [218, 242, 248, 256, 261, 267], "safe": 218, "ambient_lattic": [218, 233, 238, 239, 241, 242, 261, 267, 268], "type_a": [218, 224, 242], "type_b": [218, 245], "type_c": [218, 248], "type_d": [218, 250], "type_": [218, 252], "type_f": [218, 254], "type_g": [218, 256], "type_du": [218, 262], "type_affin": [218, 261], "ambientspaceel": [218, 267], "coroot_lattic": [218, 239, 240, 241, 261], "from_vector_not": 218, "codimens": [218, 219, 236], "e7": [218, 222, 252, 253, 270], "s_a": [218, 341], "simple_coroot": [218, 233, 235, 236, 238, 239, 240, 241, 256, 261, 262, 264, 265, 266, 267, 269, 270], "to_ambient_space_morph": [218, 239, 240, 269], "associated_coroot": [218, 239, 240, 261, 267], "coerce_to_e6": 218, "coerce_to_e7": 218, "coerce_to_sl": 218, "fw": [218, 222, 229, 270, 271, 349], "a2xa3": 218, "dot_product": [218, 267], "lambdacheck": [218, 229, 231, 232, 239, 240, 267, 269], "inner_product": [218, 261, 267, 270], "is_positive_root": [218, 240], "to_ambi": [218, 239, 240, 269], "associahedra": [219, 335], "ambient_dim": 219, "associahedra_bas": 219, "polyhedra": [219, 239], "associahedra_ppl_with_categori": 219, "importantli": [219, 236], "associahedra_cdd": 219, "polyhedra_qq_cdd": 219, "associahedron_class_cdd": 219, "associahedra_field": 219, "polyhedra_field": 219, "associahedron_class_field": 219, "associahedra_normaliz": 219, "polyhedra_qq_normaliz": 219, "associahedron_class_normaliz": 219, "associahedra_polymak": 219, "polyhedra_polymak": 219, "associahedron_class_polymak": 219, "associahedra_ppl": 219, "polyhedra_qq_ppl": 219, "associahedron_class_ppl": 219, "cfz2002": [219, 239], "cartantypefactori": [219, 224, 235], "asso": 219, "hrepresent": 219, "vrepresent": 219, "associahedron_class_bas": 219, "vrep": 219, "hrep": 219, "vertices_in_root_spac": 219, "polyhedron_qq_cdd": 219, "polyhedron_field": 219, "polyhedron_qq_normaliz": 219, "polyhedron_polymak": 219, "polyhedron_qq_ppl": 219, "start_word": 220, "end_word": 220, "stard_word": 220, "put_in_front": 220, "input_word": 220, "braid_orbit": 221, "braidorbit": 221, "branching_rul": [222, 270], "branchingrul": 222, "intermediate_typ": 222, "intermediate_nam": 222, "rtype": 222, "levi": [222, 270], "stype": 222, "maximal_subgroup": [222, 270], "no_r": 222, "branch_weyl_charact": [222, 270], "king": [222, 299, 349], "tan": 222, "willenbr": 222, "1626": 222, "patera": [222, 232], "marcel": 222, "dekker": 222, "fauser": 222, "jarvi": 222, "wybourn": 222, "2611": 222, "2655": 222, "orthogonal_sum": 222, "trialiti": [222, 270], "sbornik": 222, "1952": [222, 299], "br": 222, "a6": 222, "a7": 222, "try_default_rul": 222, "cue": 222, "e_r": [222, 281, 296, 297, 299, 301], "preprogram": 222, "a_8": 222, "a5": [222, 311], "a3xa3xa1": 222, "d7": 222, "a1xa1": [222, 224, 228], "hwv": [222, 241, 270], "a1xb1": 222, "isotropi": 222, "involutori": 222, "d_6": 222, "d_8": 222, "b_4": [222, 264], "a2xa2xa2": [222, 270], "a5xa1": 222, "a3xa1": 222, "a2xa2": [222, 227], "a1xc3": [222, 232], "d6xa1": 222, "a5xa2": 222, "d8": 222, "a8": 222, "d2xd2": 222, "a1xa1xa1xa1": 222, "2a": [222, 271, 311], "2b": [222, 271], "2c": [222, 311], "d_7": 222, "a2xa1": 222, "b1xb1": 222, "c2xc1": 222, "b1xc1": 222, "symmetric_pow": [222, 270], "irreducibli": 222, "thematic_tutori": [222, 270], "fw1": [222, 270], "fw2": [222, 270], "fw3": [222, 349], "g2xa1": 222, "a2xg2": [222, 270], "g2xc3": 222, "f4xa1": 222, "g2xf4": 222, "a1xa2": [222, 265], "tabul": [222, 232], "testerman": 222, "635": 222, "644": 222, "roman": 222, "her": 222, "branching_rule_from_plethysm": 222, "ingredi": 222, "fifth": 222, "frobenius_schur_ind": [222, 270], "sym5rul": 222, "pullback": 222, "accident": 222, "ve": [222, 235], "proj1": 222, "proj2": 222, "proj13": 222, "a2xa2xg2": 222, "accomplish": [222, 349], "a3xa2": 222, "g2xg2": 222, "homemad": 222, "return_matrix": 222, "adjoint_represent": [222, 270], "get_branching_rul": 222, "print_rul": 222, "a1xc2": [222, 270], "c1xc2": 222, "matrix_integer_spars": 223, "cartantype_abstract": [223, 224, 228, 250, 264, 265, 266], "is_symmetriz": 223, "cartan_type_check": 223, "row_with_indic": 223, "column_with_indic": 223, "coxeter_diagram": [223, 224, 228, 237, 258, 259, 265, 266], "indecomposable_block": 223, "principal_submatric": 223, "is_hyperbol": 223, "is_indefinit": 223, "indefinit": [223, 310], "is_lorentzian": 223, "lorentzian": 223, "reflection_group": 223, "root_spac": [223, 235, 239, 240, 241], "subtyp": [223, 224, 228], "symmetrized_matrix": 223, "find_cartan_type_from_matrix": 223, "is_borcherds_cartan_matrix": 223, "is_generalized_cartan_matrix": 223, "sphinx": 224, "complain": 224, "sl_": 224, "bc_": [224, 364], "isbn": [224, 298], "978": 224, "3540426509": 224, "scratch": 224, "fairli": 224, "strive": 224, "rough": 224, "oop": 224, "cached_method": 224, "set_mut": 224, "delattr": 224, "a2xb2": [224, 241, 265], "is_reduc": [224, 227], "affinis": 224, "nonreduc": 224, "bc4": [224, 246], "bc1": [224, 246], "b5": 224, "bc5": 224, "a9": 224, "a10": 224, "differenti": [224, 244, 349, 357], "aoo": 224, "cartantype_crystallograph": [224, 245, 248, 254, 256, 262, 265], "cartantype_simply_lac": [224, 242, 250, 251, 252, 253], "cartantype_simpl": [224, 242, 244, 245, 248, 252, 254, 256, 258, 259], "cartantype_finit": [224, 262, 264, 265, 266], "cartantype_affin": [224, 233, 262, 264, 266], "cartantype_standard": [224, 244], "cartantype_standard_finit": [224, 242, 245, 248, 250, 252, 254, 256, 258, 259, 260], "cartantype_standard_affin": [224, 246], "cartantype_standard_untwisted_affin": [224, 243, 247, 249, 251, 253, 255, 257], "dual_latex": 224, "latex_mark": 224, "latex_relabel": 224, "mark_special_nod": 224, "marked_node_str": 224, "special_node_str": 224, "folding_of": [224, 263], "ccl": [224, 263], "type_fold": [224, 263], "cartantypefold": [224, 263], "coxeter_typ": [224, 226, 227], "is_compound": 224, "is_impl": 224, "a2xb3": [224, 228], "marked_nod": [224, 264], "bc3": [224, 228, 246, 264, 266], "vee_0": [224, 231, 239, 261], "col_annihil": [224, 261, 269], "acheck": 224, "alpha_0": [224, 231, 232, 233, 236, 239, 261, 268, 269], "alpha_n": [224, 231, 299, 341], "row_annihil": 224, "basic_untwist": [224, 246, 262, 264, 266], "vee_i": [224, 233, 235, 236, 239], "fss07": 224, "fourier": [224, 232, 338], "386": [224, 311], "0605451": 224, "special_nod": [224, 229, 230, 246, 262, 264, 266], "delete_vertex": 224, "is_untwisted_affin": [224, 243, 244, 247, 249, 251, 253, 255, 257, 264, 266], "other_affin": [224, 233], "translation_factor": [224, 268], "t_i": [224, 231, 233, 238, 270, 283, 298, 338], "coweight": [224, 229, 230, 233, 239, 241, 248, 261, 262, 268, 269], "alphacheck": [224, 231, 233, 235, 238, 239, 240, 241, 269], "coroot_spac": [224, 239, 241], "omega_2": 224, "omega1": [224, 268], "omega2": [224, 268], "hst09": 224, "jct": 224, "844": 224, "863": 224, "0804": [224, 301], "3781": 224, "index_set_bipartit": 224, "neat": 224, "norm": [224, 235, 239, 280, 299, 339], "cartantype_decor": [224, 262, 264, 266], "cartantype_simple_finit": 224, "coxeter_numb": [224, 232, 236, 242, 245, 248, 250, 252, 254, 256, 258, 259], "dual_coxeter_numb": [224, 232, 242, 245, 248, 250, 252, 254, 256], "type_i": [224, 244, 259], "opposition_automorph": 224, "supercartantype_standard": [224, 267], "coercibl": 225, "coxetermatrixgroup": 225, "236067977499790": 225, "gap3": [225, 236, 237, 335], "chevi": [225, 236, 237], "coxetertyp": [226, 227], "bilinear_form": [226, 227], "coxeter_graph": [226, 227], "higher_rank": 226, "check_coxeter_matrix": 226, "coxeter_matrix_as_funct": 226, "recognize_coxeter_type_from_matrix": 226, "coxetertypefromcartantyp": 227, "component_typ": [227, 265], "a4xb3": 227, "b3xb3": 227, "a_ij": 228, "a2xb2xf4": [228, 265], "ci": [228, 318], "cii": 228, "dii": 228, "dynkindiagram_class": 228, "odd_isotropic_root": 228, "an_inst": 228, "isotrop": 228, "dp": 228, "precheck": 228, "n_ge": 228, "orr": [229, 233], "extended_affine_weyl_group": 229, "extendedaffineweylgroup": 229, "general_linear": [229, 230], "mnemon": 229, "pv": 229, "pw0": 229, "w0p": 229, "wf": [229, 354], "pvw0": 229, "w0pv": 229, "semidirect": [229, 268], "print_tupl": 229, "tit": 229, "adic": [229, 364], "1966": [229, 364], "symp": 229, "bour": 229, "subsystem": [229, 239], "bc_n": 229, "rtime": 229, "ltime": 229, "from_endomorph": 229, "extendedaffineweylgroup_class_with_categori": 229, "fundamental_group": [229, 230], "lattice_basi": 229, "lv": 229, "dual_lattic": 229, "bv": [229, 354], "dual_lattice_basi": 229, "classical_weyl": 229, "affine_weyl": 229, "w0v": 229, "dual_classical_weyl": 229, "sx": 229, "pix": 229, "sx2": 229, "sx1": 229, "group_exp": 229, "groupexp": 229, "sl_n": [229, 230, 239, 261, 262], "w_e": 229, "from_fundament": 229, "extendedaffineweylgroup_class": 229, "extendedaffineweylgroupfw": 229, "groupsemidirectproduct": 229, "extendedaffineweylgroupfwel": 229, "from_affine_weyl": 229, "groupsemidirectproductel": 229, "action_on_affine_root": 229, "to_affine_weyl_right": 229, "from_transl": 229, "to_fundamental_group": 229, "extendedaffineweylgrouppw0": 229, "extendedaffineweylgrouppw0el": 229, "from_classical_weyl": 229, "to_classical_weyl": 229, "to_translation_left": 229, "extendedaffineweylgrouppvw0": 229, "extendedaffineweylgrouppvw0el": 229, "from_dual_classical_weyl": 229, "from_dual_transl": 229, "dual_act": 229, "to_dual_classical_weyl": 229, "to_dual_translation_left": 229, "extendedaffineweylgroupw0p": 229, "extendedaffineweylgroupw0pel": 229, "to_translation_right": 229, "extendedaffineweylgroupw0pv": 229, "extendedaffineweylgroupw0pvel": 229, "to_dual_translation_right": 229, "extendedaffineweylgroupwf": 229, "extendedaffineweylgroupwfel": 229, "r0": 229, "bruhat_l": 229, "vv": [229, 354, 355], "ww": 229, "to_affine_weyl_left": 229, "pw0_to_wf_func": 229, "alcove_walk_sign": 229, "nonextend": 229, "apply_simple_project": 229, "length_increas": 229, "vx": 229, "wx": 229, "coset_repres": 229, "face_data": 229, "first_desc": [229, 231, 239], "is_affine_grassmannian": 229, "is_grassmannian": 229, "is_transl": 229, "to_affine_grassmannian": 229, "wf_to_pw0_func": 229, "classical_weyl_to_affin": 229, "dual_classical_weyl_to_affin": 229, "exp_dual_lattic": 229, "exp_lattic": 229, "fundamentalgroupel": 230, "fundamentalgroupofextendedaffineweylgroup": 230, "act_on_affine_lattic": 230, "act_on_affine_weyl": 230, "fundamentalgroupgl": 230, "fundamentalgroupofextendedaffineweylgroup_class": 230, "privileg": 230, "fundamentalgroupglel": 230, "dual_nod": 230, "fam": 230, "act_on_classical_ambi": 230, "omega_0": 230, "cominuscul": 230, "minuscul": [230, 231, 233], "hecke_algebra_represent": [231, 233], "cherednikoperatorseigenvector": [231, 233], "t_y": 231, "cherednik": [231, 233, 238, 270], "kw": [231, 233], "demazure_lusztig_eigenvector": 231, "affine_lift": [231, 233], "affine_retract": [231, 233], "nonsymmetricmacdonaldpolynomi": [231, 233, 238, 293], "tent": 231, "y_index_set": 231, "e_w": 231, "hst2008": 231, "pcheck": 231, "wcheck": 231, "p0check": 231, "hecke_paramet": 231, "demazure_lusztig_oper": [231, 233, 238], "y_eigenvector": [231, 233], "123121": 231, "heckealgebrarepresent": [231, 233], "on_basi": [231, 238], "withequalitybyid": 231, "t_w": [231, 338], "tw": [231, 233, 238], "ti_inverse_on_basi": 231, "ti_on_basi": 231, "straighten_word": 231, "epsilon_1": [231, 254, 308], "epsilon_k": 231, "epsilon_i": [231, 308], "tw_invers": [231, 233, 238], "12312": [231, 354], "12321": [231, 354], "1232": [231, 356], "y_lambdacheck": [231, 233], "integrable_represent": 232, "integrablerepresent": 232, "categoryobject": 232, "kmp": 232, "kass": 232, "slanski": 232, "1990": [232, 311], "kacpeterson": 232, "peterson": 232, "carter": 232, "supp": 232, "paraboloid": 232, "nullroot": 232, "print_str": 232, "665": 232, "2380": 232, "7658": 232, "22721": 232, "63120": 232, "166085": 232, "417295": 232, "1007601": 232, "2349655": 232, "1593": 232, "5274": 232, "16005": 232, "45324": 232, "121200": 232, "308829": 232, "754884": 232, "1779570": 232, "274": 232, "1056": 232, "3601": 232, "11199": 232, "32354": 232, "88009": 232, "227555": 232, "563390": 232, "1343178": 232, "107": [232, 300, 311], "1638": 232, "5367": 232, "16194": 232, "45687": 232, "121876": 232, "310056": 232, "757056": 232, "1783324": 232, "1165": 232, "4097": 232, "13120": 232, "38997": 232, "109036": 232, "289575": 232, "735870": 232, "1799620": 232, "590": 232, "2205": [232, 306], "7391": 232, "22780": 232, "65613": 232, "178660": 232, "463842": 232, "1155717": 232, "2777795": 232, "n_0": [232, 308], "to_weight": 232, "from_weight": 232, "null_root": [232, 233, 238, 239, 261, 269], "354": [232, 298], "561": 232, "889": 232, "1368": 232, "2097": 232, "3153": 232, "4712": 232, "6936": 232, "10151": 232, "14677": 232, "501": 232, "788": [232, 311], "1880": [232, 302], "2850": 232, "4256": 232, "6303": 232, "9222": 232, "13396": 232, "19262": 232, "878": [232, 311], "2082": 232, "4690": 232, "10121": 232, "21055": 232, "194": [232, 310], "477": 232, "1084": 232, "2387": 232, "5010": 232, "10227": 232, "20198": 232, "872": [232, 233], "1941": 232, "4141": 232, "8523": 232, "17005": 232, "33019": 232, "721": 232, "3469": 232, "7176": 232, "14414": 232, "28124": 232, "467": 232, "2367": 232, "10191": 232, "38907": 232, "944": 232, "2460": 232, "6064": 232, "14300": 232, "31968": 232, "69020": 232, "144676": 232, "293916": 232, "588": 232, "1568": [232, 345], "3952": 232, "9520": 232, "21644": 232, "47456": 232, "100906": 232, "207536": 232, "800": 232, "2124": 232, "5288": 232, "12470": 232, "28116": 232, "61056": 232, "128304": 232, "261972": 232, "deltacheck": [232, 233, 238, 261], "980": 232, "2576": 232, "6244": 232, "14498": 232, "32480": 232, "69776": 232, "145528": 232, "832": 232, "2184": 232, "5388": 232, "12634": 232, "28390": 232, "61488": 232, "128976": 232, "492": 232, "1344": 232, "3428": 232, "8256": 232, "18960": 232, "41844": 232, "89208": 232, "184512": 232, "1584": 232, "4032": 232, "9552": 232, "21728": 232, "47776": 232, "101068": 232, "207888": 232, "2508": 232, "13707": 232, "64650": 232, "272211": 232, "1045470": 232, "3721815": 232, "12425064": 232, "39254163": 232, "118191378": 232, "234": [232, 234, 354, 357], "1690": 232, "9689": 232, "47313": 232, "204247": 232, "800029": 232, "2893198": 232, "9786257": 232, "31262198": 232, "95035357": 232, "1160": 232, "6920": 232, "34756": 232, "153523": 232, "612354": 232, "2248318": 232, "7702198": 232, "24875351": 232, "76341630": 232, "4779": 232, "25060": 232, "113971": 232, "464842": 232, "1736620": 232, "6034717": 232, "19723537": 232, "61152367": 232, "181068152": 232, "499": 232, "3349": 232, "18166": 232, "84836": 232, "353092": 232, "1341250": 232, "4725259": 232, "15625727": 232, "48938396": 232, "146190544": 232, "9186": 232, "45804": 232, "200073": 232, "789201": 232, "2866560": 232, "9723582": 232, "31120281": 232, "94724550": 232, "275919741": 232, "weyl_character_r": [232, 270], "a1xa1xa1": 232, "174": [232, 357], "a029552": 232, "dominant_maximal_weight": 232, "highest_weight": [232, 268, 270], "modular_characterist": 232, "236": [232, 299], "722": 232, "1431": 232, "2741": 232, "3740": 232, "5096": 232, "6868": 232, "9233": 232, "12306": 232, "287": 232, "858": 232, "1206": 232, "1687": 232, "3206": 232, "4368": 232, "5922": 232, "7967": 232, "10670": 232, "14193": 232, "18803": 232, "_index_set": 232, "max_weight": 232, "1045": 232, "3736": 232, "6780": 232, "365": 232, "740": 232, "1445": 232, "2736": 232, "root_lattice_realization_algebra": [233, 238], "semest": 233, "bogdan": [233, 238], "ion": [233, 238], "arun": 233, "ram": [233, 268, 306], "siddhartha": 233, "sahi": 233, "patient": [233, 364], "non_symmetric_macdonald_polynomi": 233, "koornwind": 233, "hhl06": 233, "sf": [233, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "ns_macdonald": [233, 293], "kl0": [233, 238], "interpol": [233, 238], "root_lattice_r": [233, 235, 239, 242, 256], "rootlatticer": [233, 235, 239, 240, 241, 242, 256, 268], "_test_rel": [233, 238], "lcheck": 233, "coweight_lattic": [233, 239, 241, 268], "reduced_word_of_transl": [233, 235, 268], "signs_of_alcovewalk": [233, 268], "weightlatticer": [233, 239, 241, 261, 268, 269], "embed_at_level": [233, 238, 268], "q_project": [233, 238], "demazure_lusztig_operators_on_class": [233, 238], "compens": [233, 269, 349], "t0_check_on_basi": [233, 238], "twisted_demazure_lusztig_oper": [233, 238], "l_prime": 233, "coambient": [233, 241], "haimanicm": 233, "congress": [233, 298], "mathematician": 233, "madrid": 233, "lnsss12": 233, "lenart": 233, "naito": 233, "sagaki": 233, "2042": 233, "augment": [233, 349], "eig": [233, 357], "ee": 233, "weyl_act": [233, 239], "map_coeffici": [233, 298], "weight0": 233, "_t_y": 233, "ye1": 233, "ye2": 233, "yalpha0": 233, "yalpha1": 233, "yalpha2": 233, "e10": 233, "t0check": 233, "t0check_on_basi": 233, "e11": 233, "e1m1": 233, "to_sr": 233, "null_coroot": [233, 239, 261, 268], "eomega1": 233, "tinv0": 233, "tinv1": 233, "tinv2": 233, "l_check": 233, "q_to_qcheck": 233, "reindex": 233, "eigenvalue_experiment": 233, "haiman06": [233, 238], "rho_prim": 233, "checkm": 233, "symmetric_macdonald_polynomi": 233, "nonintegr": 233, "om": 233, "pieri_factor": 234, "pierifactor": [234, 242, 243, 245, 247, 249, 251], "stanley_symmetric_funct": [234, 286], "waff": 234, "pfaff": 234, "generating_seri": [234, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331], "fosta1994": 234, "bh1994": 234, "lam1996": 234, "lam2008": 234, "lss2009": 234, "pon2010": 234, "default_weight": 234, "recursivelyenumeratedset_gener": 234, "pierifactors_affine_typ": 234, "maximal_elements_combinatori": 234, "_test_maximal_el": 234, "pierifactors_finite_typ": 234, "pierifactors_type_a": [234, 242], "stanley_symm_poly_weight": 234, "pierifactors_type_a_affin": [234, 243], "min_support": 234, "max_support": 234, "pierifactors_type_b": [234, 245], "pierifactors_type_b_affin": [234, 247], "3210": [234, 364], "023": 234, "pretend": 234, "pierifactors_type_c_affin": [234, 249], "pierifactors_type_d_affin": [234, 251], "2102": 234, "intimid": 235, "gadget": 235, "vizual": 235, "guid": 235, "subroutin": 235, "barycentr": [235, 239, 242, 256], "delimit": [235, 363], "crowd": 235, "556793440452": 235, "19694925177": 235, "0805477263944": 235, "385290876171": 235, "180913155536": 235, "160212955043": 235, "0990170516545": 235, "766360424875": 235, "338261212718": 235, "672816364803": 235, "171502564281": 235, "rational": 235, "cdd": [235, 237], "alcove_label": [235, 239], "4d": 235, "kill": [235, 236, 237, 239, 261], "bore": [235, 238, 239], "aspect_ratio": [235, 345], "vs_i": 235, "food": 235, "pred": [235, 239], "first_positive_root": 235, "sandwich": 235, "polish": 235, "positive_coroot": 235, "first_positive_coroot": 235, "fundamental_chamb": [235, 239], "simplex": [235, 335], "quicker": 235, "affine_grassmannian_elements_of_given_length": 235, "plot_fundamental_chamb": [235, 239], "plot_alcov": [235, 239], "plot_fundamental_weight": [235, 239], "wallpap": 235, "alcove_walk": [235, 239], "535": 235, "plot_root": [235, 239], "plot_reflection_hyperplan": [235, 239], "pollut": 235, "annoyingli": 235, "workaround": [235, 292], "plot_parse_opt": [235, 239], "plot_opt": 235, "w2": [235, 239, 304, 349, 354, 359, 364], "plot_alcove_walk": [235, 239], "family_of_vector": 235, "w3": [235, 354], "hint": [235, 349], "ever": [235, 352], "scrap": 235, "behold": 235, "bitmap": 235, "postscript": 235, "svg": 235, "c21paper": 235, "ridicul": 235, "12553": 235, "handi": 235, "cayley_graph": [235, 271], "vertex_s": [235, 271], "pos3d": 235, "e8_3d": 235, "superpos": 235, "laid": 235, "firmli": 235, "enjoi": 235, "plotopt": [235, 239], "arrows": [235, 358], "index_of_object": 235, "draw_degener": 235, "as_polyhedron": 235, "legend_color": 235, "legend_label": 235, "rgbcolor": [235, 358], "zorder": 235, "emit": 235, "86602451838": 235, "525": 235, "909325744308": 235, "aspect": 235, "ratio": [235, 364], "obsolet": 235, "won": [235, 261, 269, 271], "lost": 235, "plot_coroot": [235, 239], "graphics3dgroup": 235, "in_bounding_box": 235, "bottleneck": 235, "intersection_at_level_1": 235, "989": [235, 242, 256], "widget": 235, "coucou": 235, "x3d_str": 235, "materi": 235, "diffusecolor": 235, "shini": 235, "specularcolor": 235, "barycentric_projection_matrix": 235, "retriev": [235, 239, 309, 360], "reflectiongroup": [236, 237, 335], "h3": [236, 237, 258, 292, 338], "shephard": 236, "todd": [236, 237], "st4": [236, 237], "st31": 236, "download": [236, 237], "websit": [236, 237, 299], "drawback": 236, "hardli": 236, "reduced_word_in_reflect": 236, "is_shephard_group": 236, "is_generalized_coxeter_group": 236, "coexpon": 236, "torsten": 236, "hoge": 236, "distinguished_reflect": [236, 271], "matroid": 236, "invariant_form": 236, "reflection_group_r": [236, 237], "reflection_to_root": 236, "distinguished_reflection_to_positive_root": 236, "bmr": 236, "genericord": 236, "torusord": 236, "g_34": 236, "sagedir": 236, "jm5": 236, "tbl": 236, "discrimin": 236, "transfer": 236, "gap4": 236, "reflection_group_complex": 236, "w_type": [236, 237], "hyperplane_index_set": [236, 237], "permutationgroup_gener": [236, 271], "complexreflectiongroupel": 236, "conjugacy_class_repres": 236, "reflection_length": 236, "in_unitary_group": 236, "unitari": 236, "apply_vector_field": 236, "vf": 236, "primitive_vector_field": 236, "braid_rel": 236, "is_integ": 236, "prod_h": 236, "alpha_h": 236, "e_h": 236, "discriminant_in_invariant_r": 236, "1658": 236, "213700": 236, "427400": 236, "22233750": 236, "44467500": 236, "438750": 236, "877500": 236, "1162187500": 236, "2324375000": 236, "74250000": 236, "148500000": 236, "28369140625": 236, "56738281250": 236, "1371093750": 236, "2742187500": 236, "1191796875": 236, "2383593750": 236, "175781250000": 236, "351562500000": 236, "131835937500": 236, "263671875000": 236, "100195312500": 236, "200390625000": 236, "395507812500": 236, "791015625000": 236, "fake_degre": 236, "hilbert": 236, "irredubile_charact": 236, "14400": 236, "fdeg": 236, "fundamental_invari": 236, "asdf": 236, "independent_root": [236, 271], "brute_forc": 236, "reynold": 236, "badli": 236, "st7": 236, "invariant_form_standard": 236, "hermitian": 236, "jacobian_of_fundamental_invari": 236, "partial_": 236, "number_of_irreducible_compon": 236, "jacobian": 236, "reflection_charact": 236, "reflection_eigenvalu": 236, "is_class_repres": 236, "reflection_eigenvalues_famili": 236, "zeta_n": 236, "as_linear_funct": 236, "with_ord": 236, "complx": 236, "set_reflection_represent": 236, "refl_repr": 236, "irreduciblecomplexreflectiongroup": [236, 237], "is_coxeter_el": 236, "which_primit": 236, "is_h_regular": 236, "25478": 236, "multi_partit": 236, "irreduciblerealreflectiongroup": 237, "realreflectiongroup": 237, "realreflectiongroupel": [237, 271], "left_coset_repres": 237, "right_coset_repres": 237, "lcr": 237, "rcr": 237, "bipartite_index_set": 237, "bruhat_con": 237, "dy1994": 237, "js2021": 237, "a3xb3": 237, "tracking_word": [237, 271], "_reduced_word": [237, 271], "reflection_to_positive_root": 237, "root_to_reflect": 237, "simple_root_index": [237, 271], "h4": [237, 298], "shepard": 237, "is_chevie_avail": 237, "algebrascategori": 238, "acted_upon": 238, "investig": [238, 299, 349], "sum_of_monomi": [238, 270, 298, 299], "antidomin": [238, 239], "icm": [238, 298], "nonsens": 238, "some_weight": 238, "demazure_lusztig_operator_on_basi": 238, "isobar": 238, "demazure_lusztig_operator_on_classical_on_basi": 238, "isobaric_divided_difference_on_basi": 238, "lusztig1985": 238, "1985": [238, 270], "cherednik1995": 238, "imrn": [238, 270], "483": [238, 270, 302], "tbar": 238, "tdomin": 238, "tinv": 238, "is_extend": [238, 261, 268, 269], "ydelta": 238, "demazure_oper": 238, "lascoux2003": 238, "kumar1987": 238, "395": 238, "pi0": 238, "divided_difference_on_basi": 238, "cbm": 238, "q_project_on_basi": 238, "twisted_demazure_lusztig_operator_on_basi": 238, "q_1q_2": 238, "tester": 238, "asserttru": 238, "t0c": 238, "rootspac": [239, 240, 241], "alpha_6": 239, "affine_orbit": 239, "dot_orbit": 239, "associated_reflect": 239, "dot_act": 239, "affine_act": 239, "extraspecial_pair": 239, "extraspeci": 239, "positive_roots_by_height": 239, "highest_root": [239, 240, 242, 267, 270], "subrootsystem": [239, 271], "is_dominant_weight": [239, 267], "is_imaginary_root": 239, "is_long_root": 239, "is_parabolic_root": 239, "is_real_root": 239, "is_short_root": 239, "norm_squar": 239, "qc": 239, "alphac": 239, "eltc": 239, "use_coroot": 239, "alphave": [239, 240], "symmetric_form": [239, 268], "to_class": 239, "alb": 239, "to_dominant_chamb": 239, "wl": 239, "to_dual_type_cospac": 239, "cospac": 239, "to_simple_root": 239, "caught": 239, "seemingli": [239, 357], "unnatur": 239, "mudom": 239, "weyl_stabil": 239, "a_long_simple_root": 239, "nodes_by_length": 239, "almost_positive_root_decomposit": 239, "tau_plus_minu": 239, "almost_positive_roots_decomposit": 239, "basic_imaginary_root": 239, "cohighest_root": 239, "dual_type_cospac": 239, "fundamental_weights_from_simple_root": 239, "catch": [239, 262], "generalized_nonnesting_partition_lattic": 239, "nonnest": [239, 275], "athanasiadi": 239, "arm06": 239, "nonnesting_partition_lattic": 239, "long_root": 239, "negative_root": [239, 242, 245, 248, 250, 252, 254, 256, 265, 267], "postnikov": 239, "reiner97": 239, "root_poset": [239, 241], "victor": [239, 273], "drew": 239, "armstrong": 239, "0611106": 239, "nonparabolic_positive_root_sum": 239, "nonparabolic_positive_root": 239, "plot_ls_path": 239, "plot_cryst": 239, "375": [239, 362], "pic": 239, "plot_bounding_box": 239, "plot_label": 239, "label_color": 239, "circle_thick": 239, "plot_hedron": 239, "colored_label": 239, "positive_imaginary_root": 239, "pir": 239, "positive_real_root": 239, "prr": 239, "positive_roots_nonparabol": 239, "positive_roots_nonparabolic_sum": 239, "positive_roots_parabol": 239, "to_neg": 239, "short_root": 239, "simple_project": 239, "simple_roots_tild": 239, "tau_epsilon_operator_on_almost_positive_root": 239, "eq": 239, "taup": 239, "taum": 239, "bigoplus_i": [240, 241, 269], "rootspaceel": 240, "to_coroot_space_morph": 240, "max_coroot_l": 240, "max_quantum_el": 240, "qvee": 240, "quantum_root": 240, "is_quantum_root": 240, "as_dual_of": 241, "abstractli": [241, 341], "game": [241, 332, 345, 349], "fire": 241, "failur": [241, 262, 354, 363], "_test_root_lattice_r": 241, "coambient_spac": 241, "coweight_spac": [241, 269], "weyldim": 241, "1274": 241, "650": 241, "_plot_project": [242, 256], "1189": [242, 256, 311], "0x7ff2e6fae9d0": 242, "type_a_affin": 243, "0x7ff2e6fa7ee0": 243, "type_a_infin": 244, "0x7ff2e6fc79d0": 244, "0x7ff2e6faa280": 245, "type_bc_affin": 246, "0x7ff2e6fdd430": 246, "bc2": 246, "type_b_affin": 247, "0x7ff2e6fa54c0": 247, "0x7ff2e6fde0d0": 248, "type_c_affin": 249, "0x7ff2e6fa5940": 249, "0x7ff2e6fdeaf0": 250, "type_d_affin": 251, "0x7ff2e6fa5dc0": 251, "baser": 252, "planch": [252, 254], "i4": 252, "i5": [252, 259], "i6": 252, "i7": 252, "i8": 252, "p6": 252, "p8": 252, "caller": 252, "le6": 252, "0x7ff2e63554c0": 252, "type_e_affin": 253, "0x7ff2e6355940": 253, "viii": 254, "epsilon_2": 254, "epsilon_3": 254, "epsilon_4": 254, "sadli": 254, "alpha_3": 254, "alpha_4": 254, "0x7ff2e63244c0": 254, "type_f_affin": 255, "0x7ff2e63249d0": 255, "0x7ff2e6330310": 256, "type_g_affin": 257, "0x7ff2e63308b0": 257, "type_h": 258, "type_q": 260, "q_n": 260, "colevel": 261, "altogeth": 261, "canonical_inner_product": 261, "straightforwardli": 261, "pickl": [262, 298, 361], "_test_el": 262, "_test_pickl": [262, 342], "worri": [262, 268, 349], "cartantypedu": 262, "f4d": 262, "g21d": 262, "0x7ff2e633d3a0": 262, "hack": [262, 298, 299], "gamma_i": 263, "osshimo03": 263, "bond": 263, "folding_orbit": 263, "2095": 263, "5067": 263, "type_mark": 264, "honour": 264, "0x7ff2e68db940": 264, "type_reduc": 265, "inject_weight": 265, "a1xb2": 265, "_add_abstract_superclass": 265, "cartantype_with_superclass": 265, "sage_object": 265, "a4xbc5": 265, "xc3": 265, "0x7ff2e6c6de50": 265, "f4xa2": 265, "a1xh3": 265, "a2xc2": 265, "ct1": [265, 271], "ct2": 265, "type_relabel": 266, "0x7ff2e6c78ca0": 266, "a41": 266, "reus": [266, 345], "13724": 266, "inadvert": 266, "type_super_a": 267, "negative_even_root": 267, "negative_odd_root": 267, "positive_even_root": 267, "0x7ff2e6fc7670": 267, "alq": 268, "to_weight_spac": [268, 269], "dynkin_diagram_automorphism_of_alcove_morph": 268, "reduced_word_of_alcove_morph": 268, "irrelev": [268, 269, 349], "faithfulli": 268, "bring": 268, "nota": 268, "bene": 268, "_test_reduced_word_of_transl": 268, "rho_class": 268, "y_0": 268, "y_k": 268, "rho_0": 268, "vee_": 268, "0601343v1": 268, "job": [268, 269], "parent_class": 268, "harmless": 268, "artefact": 268, "weyl_dimens": 268, "glitch": 269, "basis_extens": 269, "weightspaceel": 269, "with_apply_multi_module_morph": 269, "weightspacer": 269, "weyl_charact": 270, "weightr": 270, "conduct": 270, "wd": 270, "weyl_group_act": 270, "partial_w": 270, "demazure_lusztig": 270, "wt_repr": 270, "cyclotomic_ord": 270, "fusion_label": 270, "inject_vari": 270, "complexifi": 270, "analyt": [270, 349], "parametr": [270, 272], "lectur": 270, "broecker": 270, "dieck": 270, "goodman": 270, "wallach": 270, "humphrei": 270, "procesi": 270, "samelson": 270, "varadarajan": 270, "zhelobenko": 270, "su": 270, "ubiquit": 270, "adams_oper": [270, 296], "contragredi": 270, "exterior_pow": 270, "exterior_squar": 270, "quaternion": 270, "haar": 270, "orthonorm": [270, 298], "invariant_degre": 270, "h_k": [270, 280, 281, 284, 296, 297, 299], "symmetric_squar": 270, "weight_multipl": 270, "affine_reflect": 270, "b22": 270, "fusionr": 270, "char_from_weight": 270, "mdict": 270, "_space": 270, "demazure_charact": 270, "dot_reduc": 270, "extended_dynkin_diagram": 270, "irr_repr": 270, "lift_on_basi": 270, "irr": [270, 306], "a1xa5": 270, "nonmaxim": 270, "believ": 270, "spin_plu": 270, "spin_minu": 270, "klimyk": 270, "irreducible_character_freudenth": 270, "freudenth": 270, "volker": 271, "braun": 271, "show3d": [271, 345], "edge_s": 271, "classicalweylsubgroup": 271, "weylgroup_gen": 271, "1152": 271, "weylgroupel": 271, "matrixgroupelement_gap": 271, "beuargl": 271, "to_permutation_str": 271, "finitelygeneratedmatrixgroup_gap": 271, "character_t": [271, 298], "prefac": 271, "sizescreen": 271, "widen": 271, "screen": 271, "1a": 271, "4a": 271, "3a": [271, 311], "from_morph": 271, "long_element_hardcod": 271, "morphism_matrix": 271, "20027": 271, "refdict": 271, "weylgroup_permut": 271, "number_of_reflect": 271, "rooted_tre": 272, "xyy2": 272, "yxy2": 272, "yxy2crud": 272, "manag": 272, "rootedorderedtre": 272, "lb": 272, "labelledrootedtrees_al": 272, "32001010": 272, "graft_list": 272, "graft_on_root": 272, "rt1": 272, "rt2": 272, "_get_list": 272, "single_graft": 272, "grafting_funct": 272, "path_prefix": 272, "pitfal": 272, "rootedtrees_al": 272, "labelledrootedtrees_all_with_categori": 272, "rootedtrees_s": 272, "rt3": 272, "number_of_rooted_tre": 272, "sl000081": 272, "286": [272, 311], "a000081": 272, "chaman": [273, 303, 336], "agraw": [273, 303, 336], "rulestar": 273, "ruleeg": 273, "eg1987": 273, "ruleheck": 273, "bksty06": 273, "ruledualrsk": 273, "corsk": 273, "rulecorsk": 273, "gr2018v5sol": 273, "rulesuperrsk": 273, "muth2019": [273, 336], "reverse_insert": 273, "knu1970": 273, "donald": [273, 311], "727": 273, "projecteuclid": 273, "euclid": 273, "pjm": 273, "1102971948": 273, "90063": 273, "yong": 273, "0601514v1": 273, "1409": 273, "8356v5": 273, "anc": 273, "hopfcomb": 273, "v73": 273, "insertionrul": 273, "dualrsk": 273, "superrsk": 273, "obj1": 273, "obj2": 273, "q_0": [273, 291], "j_t": 273, "q_t": 273, "_rsk_iter": 273, "cobiword": 273, "typecast": 273, "14532": 273, "1322": [273, 356, 361], "_backward_format_output": 273, "_forward_format_output": 273, "to_pair": 273, "interpert": 273, "ful1997": [273, 310, 341], "1d": [273, 357], "1522": 273, "rook": [273, 275], "1212": [273, 306, 307, 354], "qr": 273, "0801": 273, "1319v2": 273, "bisect": [273, 311], "bisect_right": 273, "bisect_left": 273, "line1": 273, "line2": 273, "check_braid": 273, "pariti": [273, 336, 354], "3p": [273, 303], "2p": [273, 303, 336], "1p": [273, 303, 336], "semistandardsupertableau": [273, 336], "reversel": 273, "4p": 273, "y_po": 273, "superbiword": 273, "robinson_schensted_knuth": 273, "robinson_schensted_knuth_invers": 273, "schubertpolynomialr": 274, "54321": [274, 311], "sw0": 274, "ws_i": 274, "divided_differ": 274, "partial_2": 274, "schubertpolynomialring_xbasi": 274, "schubertpolynomial_class": 274, "symmetrica": [274, 282, 298, 299, 341], "delta_i": 274, "multiply_vari": 274, "scalar_product": [274, 339], "cal2005": 275, "max_block_s": 275, "standard_form": 275, "supremum": [275, 354], "__mul__": 275, "14140": [275, 276], "apply_permut": 275, "increasingarrai": 275, "crossings_iter": 275, "is_nonnest": 275, "1cm": 275, "show_label": 275, "nestings_iter": 275, "number_of_nest": 275, "s_q": 275, "c_c": 275, "base_set_dict": 275, "radii": [275, 307], "41421356237": 275, "sector": [275, 337], "785398163397": 275, "35619449019": 275, "70710678118": 275, "1213203435": 275, "3334523779": 275, "4142135623": 275, "strict_coarsen": 275, "reflex": [275, 333, 354], "maximis": 275, "to_restricted_growth_word": 275, "to_restricted_growth_word_block": 275, "to_restricted_growth_word_intertwin": 275, "from_restricted_growth_word": 275, "to_rook_plac": 275, "to_rook_placement_gamma": 275, "to_rook_placement_rho": 275, "to_rook_placement_psi": 275, "from_rook_plac": 275, "ww1991": 275, "from_rook_placement_gamma": 275, "yip": 275, "from_rook_placement_psi": 275, "yip2018": 275, "rs_j": 275, "from_rook_placement_rho": 275, "honor": [275, 289], "templ": 275, "aabcd": 275, "partition_of_a_set": 275, "from_arc": 275, "from_restricted_growth_word_intertwin": 275, "from_restricted_growth_word_block": 275, "is_strict_refin": 275, "setpartitions_al": 275, "f3b": 275, "setpartitions_setn": 275, "number_of_block": 275, "mathoverflow": [275, 299], "141999": 275, "setpartitions_setpart": 275, "600600": 275, "cyclic_permutations_of_set_partit": 275, "set_part": 275, "cyclic_permutations_of_set_partition_iter": 275, "set_partition_ord": 276, "fubini": 276, "sum_n": 276, "a000670": [276, 311], "bdab": 276, "ordered_partition_of_a_set": 276, "bottom_up_osp": 276, "buo": 276, "b_l": 276, "wilson2016": 276, "strongly_fatt": 276, "strongly_fin": 276, "osp": 276, "to_packed_word": 276, "to_ordered_set_partit": [276, 354], "321313": 276, "12121": [276, 352, 354], "from_finite_word": 276, "abcabcabd": 276, "orderedsetpartitions_al": 276, "orderedsetpartitions_": 276, "orderedsetpartitions_scomp": 276, "orderedsetpartitions_sn": 276, "splitnk": 276, "multiset_permutation_next_lex": 276, "multiset_permutation_to_ordered_set_partit": 276, "oz2015": [278, 298], "orellana": [278, 299], "1510": 278, "00438": 278, "generic_charact": 278, "basis_nam": [278, 279, 280, 291, 295, 298, 299], "symmetricfunctionalgebra_gener": [278, 279, 282, 285, 288, 289, 294, 295, 298, 299, 300], "induced_trivial_character_basi": 278, "pfix": 278, "character_to_frobenius_imag": [278, 298, 299], "irreducible_character_basi": 278, "symmetricfunctionalgebra_class": [279, 280, 290, 291, 297], "symmetricfunctionalgebra_generic_el": [279, 282, 285, 288, 289, 295, 298, 299], "init": 279, "conversion_funct": 279, "t_schur_powsym_symmetrica": 279, "15312": 279, "hidem": 279, "symmetricfunctionalgebra_du": 280, "scalar_nam": [280, 299], "zee": [280, 282, 292, 295, 296, 297, 299, 337], "sfa": [280, 282, 295, 298, 299], "stripe": 280, "zee_hl": 280, "hh": [280, 347], "d_m": 280, "scalar_hl": [280, 282, 299], "transition_matrix": [280, 282, 283, 289, 292, 299], "symmetricfunctionalgebra_elementari": 281, "symmetricfunctionalgebra_multipl": [281, 283, 284, 291, 296, 301], "exponential_speci": [281, 284, 290, 296, 297, 299], "ex_q": [281, 284, 290, 296, 297, 299], "ps_q": [281, 284, 290, 296, 297, 299], "principal_speci": [281, 284, 290, 296, 297, 299], "ps_": [281, 284, 290, 296, 297, 299], "converg": [281, 284, 290, 296, 297, 299, 311, 349], "h_r": [281, 284, 289, 296, 297, 299, 301], "p_r": [281, 296, 297, 299, 301], "german": [281, 296, 297, 299, 301], "clumsier": [281, 296, 297, 299, 301], "stabli": [281, 296, 297, 299, 301], "halllittlewood": 282, "hl": 282, "hlp": [282, 286, 289, 298], "hlq": [282, 298], "hlqp": [282, 298, 299], "symmetric_function_r": [282, 285, 288, 289, 298, 299], "hl_creation_oper": [282, 292, 299], "hly": 282, "hlz": 282, "qpy": 282, "qpz": 282, "qy": 282, "qz": 282, "pz": [282, 298], "hall_littlewood_famili": 282, "halllittlewood_gener": 282, "halllittlewood_p": 282, "halllittlewood_q": 282, "_test_associ": [282, 285], "_test_distribut": [282, 285], "_test_prod": [282, 285], "halllittlewood_qp": 282, "_to_": 282, "_test_passoci": 282, "12969": 282, "heckecharact": 283, "mu_2": [283, 299, 309], "qbar": [283, 298], "hecke_charact": [283, 298], "ram1991": 283, "rr1997": 283, "symmetricfunctionalgebra_homogen": 284, "ma1995": 285, "jack1970": 285, "edinburgh": 285, "clarendon": [285, 298], "york": [285, 298, 358], "public": [285, 298], "jp": [285, 298], "jackj": [285, 298], "jackp": [285, 299], "jacka": 285, "jackb": 285, "jpa": 285, "jpb": 285, "jq": [285, 298, 299], "jackq": 285, "jqp": [285, 298], "_normal": 285, "jackpolynomials_gener": 285, "scalar_jack": [285, 299], "coproduct_by_coercion": [285, 299], "jack_famili": 285, "jackpolynomials_j": 285, "jackpolynomials_p": 285, "triangularli": [285, 289, 295, 297], "scalar_jack_basi": 285, "part1": [285, 289], "part2": [285, 289], "mc1995": 285, "_normalize_coeffici": 285, "jackpolynomials_q": 285, "jackpolynomials_qp": 285, "jackqp": 285, "symmetricfunctionalgebra_zon": 285, "scalar_zon": 285, "normalize_coeffici": 285, "part_scalar_jack": 285, "k_dual": [286, 298], "affineschurfunct": 286, "kboundedr": [286, 292], "kboundedquotientbasi": 286, "lam2006": 286, "dualkschurfunct": 286, "llmssz": [286, 292, 298], "lapoint": [286, 289, 341], "kboundedquoti": [286, 292, 298], "affineschur": [286, 298], "hlpk": 286, "khalllittlewoodp": [286, 298], "hlp3": [286, 298], "dk": [286, 292, 298], "dual_k_schur": [286, 298], "dks3": [286, 292, 298], "affinegrothendieckpolynomi": 286, "_affinegrothendieckpolynomi": 286, "khlp": [286, 298], "kmonomi": [286, 298], "kq": [286, 298], "rzn": 286, "kboundedquotientbas": 286, "khp": 286, "q3t": 286, "kqb": 286, "kbounded_halllittlewoodp": 286, "lsa": 287, "umich": 287, "kfpoli": 287, "kostkafoulkespolynomi": 287, "koskta": [287, 289], "dom": 287, "mup": 287, "snu": 287, "schur_to_hl": 287, "llt1997": 288, "bernard": 288, "yve": [288, 298, 299], "unipot": 288, "1041": 288, "1068": 288, "9512031v1": 288, "lt2000": 288, "kinokuniya": 288, "tokyo": 288, "9809122v3": 288, "llt_class": 288, "hc3": 288, "hcospin": [288, 298], "symxt": 288, "llt3x": 288, "llt3": [288, 298], "hs3x": 288, "hspin": [288, 298], "hs3t": 288, "hsp3": 288, "llt3t2": 288, "hc3t2": 288, "hcosp3": 288, "spin_squar": 288, "llt_cospin": 288, "llt_gener": 288, "qqz": 288, "llt_famili": 288, "llt_spin": 288, "gh1993": 289, "nat": 289, "acad": 289, "3607": 289, "3610": 289, "bght1999": 289, "tesler": 289, "llm1998": 289, "determinant": 289, "irmn": 289, "9808050": 289, "bh2013": 289, "833": 289, "852": [289, 292], "plethyst": [289, 298, 299, 301], "qt": [289, 299], "mcdh": [289, 299], "qt_kostka": 289, "mcdp": [289, 298], "mcdq": 289, "mcdj": [289, 298], "scalar_qt": [289, 298, 299], "macxi": 289, "macyz": 289, "maczx": 289, "mac": [289, 292, 298, 299, 304], "macdonaldpolynomials_gener": 289, "eigenfunct": 289, "macdonald_famili": 289, "macp": 289, "macdonaldpolynomials_h": 289, "macdonaldpolynomials_ht": 289, "macdonaldpolynomials_j": 289, "macdonaldpolynomials_p": 289, "scalar_qt_basi": 289, "macdonaldpolynomials_q": 289, "macdonaldpolynomials_": 289, "misnam": 289, "cmunu": 289, "bmu": 289, "cmunu1": 289, "symmetricfunctionalgebra_monomi": 290, "antipode_by_coercion": [290, 299], "difficult": [290, 299, 301, 318, 342], "from_polynomial_exp": 290, "qqx": [290, 291, 299], "silenc": 291, "coverag": 291, "new_kschur": [292, 298], "kboundedsubspac": [292, 298], "kb": [292, 298], "k_kschur": 292, "morse11": 292, "lamschillingshimozono10": 292, "2950": 292, "2984": 292, "compositio": 292, "khomogen": [292, 298], "kh3": 292, "ksplit": [292, 298], "ksp3": [292, 298], "kboundedsubspacebas": 292, "sz2001": [292, 299], "ks4": 292, "is_schur_posit": [292, 299], "omega_t_invers": 292, "kh": [292, 298], "ks3t": 292, "kbb": 292, "morse2011": 292, "lamschillingshimozono2010": 292, "k_k_schur_non_commutative_vari": 292, "homogeneous_basis_noncommutative_variables_zero_heck": 292, "_homogeneous_basi": 292, "kks3": 292, "cast": 292, "ks2": 292, "ks5": 292, "rid": [292, 298, 307], "_product_on_basis_via_rectangl": 292, "ksp": [292, 298], "symt": 292, "kbs3": 292, "kbs4": 292, "ksp4": 292, "augmentedlatticediagramfil": 293, "are_attack": 293, "attacking_box": 293, "basement": 293, "hhl": 293, "coeff_integr": 293, "coinv": 293, "is_non_attack": 293, "permuted_fil": 293, "reading_ord": 293, "reading_word": [293, 303], "25465321": 293, "0601693v3": 293, "e_integr": 293, "hht": 293, "latticediagram": 293, "arm_left": 293, "arm_right": 293, "boxes_same_and_lower_right": 293, "nonattackingbacktrack": 293, "_ending_posit": 293, "_initial_st": 293, "nonattackingfil": 293, "nonattack": 293, "nonattackingfillings_shap": 293, "symmetricfunctionalgebra_orthogon": [294, 298], "charikleber2000": [294, 300], "koiketerada1987": [294, 300], "shimozonozabrocki2006": [294, 300], "symmetricfunctionalgebra_orthotriang": 295, "orthotriang": 295, "leading_coeff": 295, "orthotriangular": 295, "symmetricfunctionalgebra_pow": 296, "nr": [296, 299, 307, 311, 334], "eval_at_permutation_root": [296, 298, 299], "rho_2": [296, 299], "rho_": [296, 299], "zeta_m": [296, 299], "bottom_schur_funct": 296, "unavoid": [296, 349], "noninteg": 296, "clst03": 296, "clifford": 296, "0311382v2": 296, "eval_at_permutation_roots_on_gener": 296, "xi_m": 296, "symmetricfunctionalgebra_schur": 297, "ex_": 297, "categor": 298, "nonincreasingli": 298, "predict": [298, 349], "inner_tensor": [298, 299], "inner_plethysm": [298, 299], "gl_m": [298, 299], "st94": 298, "conj": 298, "map_support": 298, "map_item": 298, "sz": 298, "w_d": [298, 301], "syms3": 298, "ks6": 298, "symq3": 298, "sfa_gener": 298, "_self_to_": 298, "_s_to_self": 298, "setmorph": 298, "sfa_st": 298, "hopfalgebra": 298, "register_coercion": 298, "_from_dict": 298, "theta_qt": [298, 299], "_monomial_coeffici": 298, "cmu": 298, "qqqt": [298, 299], "ht04": 298, "fd06": 298, "francoi": 298, "descouen": 298, "andr": 298, "iglesia": 298, "nobuki": 298, "takayama": 298, "editor": 298, "4151": 298, "lnc": [298, 364], "407": 298, "urdial": 298, "spain": 298, "0806": 298, "b51z": 298, "475": 298, "853489": 298, "foreword": 298, "gian": 298, "rota": 298, "xii": 298, "581": 298, "56069": 298, "78987": 298, "scharf": [298, 299], "104": [298, 299, 307, 311], "aima": 298, "1019": 298, "devis": 298, "coerce_h": [298, 301], "coerce_": [298, 301], "coerce_p": [298, 301], "induced_trivial_charact": 298, "irreducible_symmetric_group_charact": 298, "hzq": 298, "h1z": 298, "register_isomorph": 298, "only_convers": 298, "stupid": 298, "2p_": 298, "zorglub": 298, "module_morph": 298, "d_p": 298, "symmetricfunctionalgebra_symplect": [298, 300], "symmetricaconversiononbasi": 298, "quick": 298, "comprehens": 299, "get_print_styl": 299, "set_print_styl": 299, "maximal_part": 299, "filteredsymmetricfunctionsbas": 299, "gradedsymmetricfunctionsbas": 299, "degree_zero_coeffici": 299, "product_by_coercion": 299, "arithmetic_product": 299, "boxdot": 299, "limits_": 299, "lcm": [299, 311], "mu_j": 299, "mu_3": 299, "torsion": [299, 301], "138148": 299, "unsatisfactori": 299, "isn": [299, 301], "corresponding_basis_ov": 299, "clearli": [299, 306, 349, 357], "bernstein_creation_by_def": 299, "max_degre": 299, "derivative_with_respect_to_p1": 299, "qqt": 299, "errata": 299, "h_m": 299, "quickest": [299, 309], "quot": 299, "duncan": 299, "235": [299, 319], "remmel": 299, "axiomat": 299, "partition_pow": 299, "sensibl": 299, "schathi1994": 299, "258": [299, 311], "1974": 299, "1063": 299, "1666632": 299, "ftp": 299, "mathe2": 299, "bayreuth": 299, "axel": 299, "a_hopf_algebra_approach_to_inner_plethysm": 299, "gz": [299, 339], "quantit": 299, "pertain": 299, "mq": 299, "mh": 299, "9407124": 299, "tensor_copr": 299, "briand": 299, "0907": 299, "4652": 299, "_is_posit": 299, "reduced_kronecker_product": 299, "omega_qt": 299, "2976": 299, "h3h2": 299, "p3s21": 299, "lazysymmetricfunct": [299, 318], "fog": 299, "stream": 299, "stream_plethysm": 299, "murnaghan": 299, "gutschwag": 299, "4411v3": 299, "1938": [299, 364], "painfulli": 299, "restrict_degre": 299, "restrict_partition_length": 299, "restrict_part": 299, "scalar_t": 299, "rn": [299, 334], "_sym": 299, "symmetricfunctionsbas": 299, "carlitz_shareshian_wach": 299, "x_w": 299, "shawach2014": 299, "1405": 299, "4629v2": 299, "mj": 299, "foot": 299, "formal_series_r": 299, "lazili": 299, "gessel_reutenau": 299, "gr1993": 299, "sch2003b": 299, "cfl": 299, "p_d": 299, "l_3": 299, "subsect": 299, "afford": 299, "thrall": 299, "higher_lie_charact": 299, "gr_def2": 299, "gr_def1": 299, "permus_mset": 299, "coeff_of_m_mu_in_result": 299, "words_to_check": 299, "is_integral_domain": 299, "pend": 299, "15475": 299, "lehrer_solomon": 299, "whitnei": 299, "ls1986": 299, "hr2017": 299, "sun1994": 299, "pi_2": 299, "orlik": 299, "chu2012": 299, "sharp": 299, "whitney_homology_charact": 299, "skew_schur": 299, "ess": [299, 338], "is_symmetricfunct": 299, "is_symmetricfunctionalgebra": 299, "vyjayanthi": 300, "chari": 300, "0011161v1": 300, "terada": 300, "diagrammat": 300, "bn": 300, "dn": 300, "299": 300, "0404288": 300, "symmetricfunctionalgebra_witt": 301, "doraniv1996": 301, "w_3": 301, "ghost": 301, "borwi2004": 301, "3888v1": 301, "doran": 301, "344": [301, 354], "0056": 301, "borger": 301, "wieland": 301, "0407227v1": 301, "underscor": [301, 353], "wh": 301, "from_other_uncach": 301, "verif": [301, 349, 356], "fouc": 301, "w_r": 301, "shard_ord": 302, "shardposetel": 302, "p0": 302, "shard_poset": 302, "banc2011": 302, "bancroft": 302, "cambrian": 302, "carolina": 302, "pete2013": 302, "kyle": 302, "siam": 302, "1912": 302, "read2011": 302, "run_indic": 302, "dpg": 302, "preorder": 302, "spg": 302, "transitivetourna": 302, "kiril": 303, "paramonov": 303, "shifted_primed_tableau": 303, "crystalelementshiftedprimedtableau": 303, "preprocess": [303, 336], "hps2017": 303, "ao2018": 303, "spt": 303, "unprim": [303, 336], "primedentri": 303, "decrease_half": 303, "decrease_on": 303, "increase_half": 303, "increase_on": 303, "is_unprim": 303, "primed_diagon": 303, "11p": 303, "restriction_outer_shap": [303, 310], "restriction_shap": [303, 310, 341], "interlac": 303, "shiftedprimedtableaux_al": 303, "shiftedprimedtableaux_shap": 303, "sptc": 303, "tableau_cryst": 303, "tableau_digraph": 303, "tensor_cryst": 303, "tensor_digraph": 303, "3072": 303, "shiftedprimedtableaux_weight": 303, "shiftedprimedtableaux_weight_shap": 303, "geqslant": 304, "eilenberg": 304, "lane": 304, "1953": 304, "eillan53": 304, "shuffleproduct": 304, "samuel": 304, "saunder": 304, "setshuffleproduct": 304, "shuffleproduct_abstract": 304, "adbc": 304, "dabc": [304, 354], "abdc": [304, 357], "adebc": 304, "daebc": 304, "deabc": [304, 357], "adbec": 304, "dabec": 304, "abdec": 304, "mid_a": 304, "mid_b": 304, "addend": [304, 338], "shuffleproduct_w1w2": [304, 359], "shuffleproduct_overlapping_r": 304, "939": 304, "raum": 305, "sidon_set": 305, "sid": 305, "sidon_sets_rec": 305, "green55": 306, "qualit": 306, "monic": 306, "similarityclasstyp": 306, "class_card": 306, "centralizer_algebra_dim": 306, "centralizer_group_card": 306, "number_of_class": 306, "number_of_matric": 306, "matrices_with_rcf": 306, "rcf": 306, "similarity_class_typ": 306, "order_of_general_linear_group": 306, "simultaneous_similarity_class": 306, "kung": 306, "stong": 306, "morrison": 306, "morrison06": 306, "eleg": 306, "ramar\u00e9": 306, "r17": 306, "pr22": 306, "pss13": 306, "selftranspos": 306, "matrix_centralizer_cardinalities_length_two": 306, "1955": 306, "447": 306, "0072878": 306, "kent": 306, "uwaterloo": 306, "vol9": 306, "morrison37": 306, "singla": 306, "spallon": 306, "6157": 306, "touchard": 306, "riordan": 306, "11076": 306, "publ": 306, "debrecen": 306, "5486": 306, "pmd": 306, "7466": 306, "primarysimilarityclasstyp": 306, "dotsb": 306, "invariant_subspace_generating_funct": 306, "indermin": 306, "func": 306, "ptc": 306, "as_partition_dictionari": 306, "dimensiona": 306, "is_semisimpl": 306, "fq": 306, "stat": 306, "sumov": 306, "bursid": 306, "centralizer_group_cardin": 306, "dictionary_from_gener": 306, "ext_orbit_centr": 306, "input_data": 306, "input_pars": 306, "ext_orbit": 306, "matrix_centralizer_cardin": 306, "matrix_similarity_class": 306, "matrix_similarity_classes_length_two": 306, "salvator": 307, "stella": 307, "sinegordonysystem": 307, "nakanishi": 307, "wonder": [307, 349], "6853": 307, "sine_gordon": 307, "na": 307, "nl": [307, 311], "points_siz": 307, "triangulation_color": 307, "triangulation_thick": 307, "shading_color": 307, "neuter": 307, "reflections_color": 307, "reflections_thick": 307, "sixvertexconfigur": 308, "n_5": 308, "epsilon_5": 308, "lu": 308, "ld": 308, "ur": 308, "rd": 308, "type_model": 308, "kdp": 308, "ry": 308, "to_signed_matrix": 308, "outward": [308, 310], "inward": [308, 310], "vertex_model": 308, "partition_funct": 308, "temperatur": 308, "k_b": 308, "boltzmann": 308, "partition_function_": 308, "statistical_mechan": 308, "squareicemodel": 308, "outer_corn": [309, 310], "inner_corn": [309, 310], "skew_partit": 309, "columns_intersection_set": 309, "sta2002": 309, "is_overlap": [309, 354], "is_ribbon": [309, 310], "pieri_macdonald_coeff": 309, "rows_intersection_set": 309, "to_dag": 309, "from_row_and_column_length": 309, "rowl": 309, "coll": 309, "mismatch": 309, "unambigu": 309, "skp1": 309, "skp2": 309, "latex_marking_str": 309, "skewpartitions_al": 309, "skewpartitions_n": 309, "skewpartitions_rowlength": 309, "row_lengths_aux": 309, "backward_slid": 310, "skew_tableau": 310, "nameless": 310, "semistandardskewtableaux_al": 310, "semistandardskewtableaux_shap": 310, "semistandardskewtableaux_shape_weight": 310, "semistandardskewtableaux_s": 310, "semistandardskewtableaux_size_weight": 310, "reverse_slid": 310, "666": [310, 341], "cells_by_cont": 310, "cells_contain": [310, 341, 343], "liber": 310, "inner_s": 310, "is_semistandard": [310, 341], "outer_s": 310, "jdt": 310, "spaghetti": 310, "t2_new": 310, "t1_new": 310, "vacat": 310, "return_vac": 310, "p12": 310, "st2": [310, 341], "to_expr": 310, "stlist": 310, "to_word_by_row": [310, 341, 343], "to_ribbon": 310, "1324": [310, 359], "to_word_by_column": [310, 341, 343], "4231": 310, "skewtableau_class": 310, "from_chain": [310, 341], "standardskewtableaux_al": 310, "standardskewtableaux_shap": 310, "aitken": 310, "cor": 310, "standardskewtableaux_s": 310, "a000005": 311, "_eval": 311, "reset_nam": 311, "sloaneencyclopedia": 311, "jaap": 311, "spi": 311, "sloane_funct": 311, "a000001": 311, "sloanesequ": 311, "a000004": 311, "a000007": 311, "a000008": 311, "cent": 311, "gaski": 311, "a000009": 311, "a000010": 311, "totient": 311, "tot": 311, "euler_phi": 311, "a000012": 311, "a000015": 311, "307": 311, "a000016": 311, "251859545753048193000": 311, "a000027": 311, "a000030": 311, "a000032": 311, "627376215338105766356982006981782561278127": 311, "a000035": 311, "a000040": 311, "a000041": 311, "3972999029388": 311, "a000043": 311, "mersenn": [311, 349], "13466917": 311, "a000045": [311, 349], "plouff": 311, "gutenberg": 311, "ibiblio": 311, "pub": 311, "etext01": 311, "fbncc10": 311, "a000069": 311, "odiou": 311, "a000073": 311, "tribonacci": [311, 357, 358, 364], "a000079": 311, "1267650600228229401496703205376": 311, "a000085": 311, "140152": 311, "764": 311, "2620": 311, "9496": 311, "35696": 311, "a000100": 311, "a000108": [311, 349], "segner": 311, "2622127042276492108820": 311, "a000110": 311, "exponentialnumb": 311, "indistinguish": 311, "47585391276764833658790768841387207826363669686825611466616334637559114497892442622672724044217756306953557882560751": 311, "a000120": 311, "a000124": 311, "cater": 311, "pancak": 311, "a000129": 311, "recurrencesequence2": 311, "pell": 311, "a001333": 311, "13860": 311, "985": [311, 358, 362], "2378": 311, "5741": [311, 358], "a000142": 311, "40320": 311, "815915283247897734345611269596115894272000000000": 311, "5040": 311, "a000153": 311, "extremesofpermanentssequ": 311, "seok": 311, "zun": 311, "song": 311, "202": 311, "82508": 311, "10315043624498196944": 311, "1214": 311, "9403": 311, "a000165": 311, "10321920": 311, "2551082656125828464640000": 311, "3840": 311, "46080": 311, "645120": 311, "a000166": 311, "subfactori": 311, "14833": 311, "895014631192902121": 311, "1854": 311, "a000169": 311, "1000000000": 311, "7776": 311, "117649": 311, "2097152": [311, 318, 319], "43046721": 311, "25937424601": 311, "a000203": 311, "sigma_k": [311, 364], "a000204": 311, "a000213": 311, "a000217": 311, "2001000": 311, "a000225": 311, "4095": 311, "1023": 311, "2047": 311, "a000244": 311, "177147": 311, "19683": 311, "59049": 311, "a000255": 311, "148329": 311, "9923922230666898717143": 311, "2119": 311, "16687": 311, "a000261": 311, "lin": 311, "30637": 311, "1801366114380914335441": 311, "3539": 311, "296967": 311, "a000272": 311, "100000000": 311, "16807": 311, "262144": 311, "4782969": 311, "2357947691": 311, "a000290": 311, "a000292": 311, "a000302": 311, "1048576": [311, 349], "1024": [311, 319], "4096": 311, "65536": 311, "4194304": 311, "a000312": 311, "endofunct": 311, "387420489": 311, "3125": 311, "46656": 311, "823543": 311, "16777216": 311, "10000000000": 311, "a000326": 311, "a000330": 311, "506": 311, "a000396": 311, "137438691328": 311, "33550336": 311, "8589869056": 311, "a000578": 311, "1331": 311, "a000583": 311, "a000587": 311, "imbal": 311, "397577026456518507969762382254187048845620355238545130875069912944235105204434466095862371032124545552161": 311, "a000668": 311, "053": 311, "946": 311, "170141183460469231731687303715884105727": 311, "8191": 311, "131071": 311, "524287": 311, "2147483647": 311, "preferenti": 311, "7087261": 311, "4683": 311, "47293": 311, "545835": 311, "a000720": 311, "primepi": 311, "a000796": 311, "decim": [311, 353], "lambert": 311, "meerten": 311, "a000961": 311, "a000984": 311, "12870": 311, "924": 311, "3432": 311, "15511": 311, "835": 311, "2188": 311, "5798": 311, "a001045": 311, "jacobsth": 311, "683": 311, "a001055": 311, "nwf": 311, "a001109": 311, "235416": 311, "1515330104844857898115857393785728383101709300": 311, "6930": 311, "40391": 311, "a001110": 311, "recurrencesequ": 311, "34a": 311, "55420693056": 311, "4446390382511295358038307980025": 311, "1225": 311, "41616": 311, "1413721": 311, "48024900": 311, "1631432881": 311, "a001147": 311, "2027025": 311, "319830986772877770815625": 311, "10395": 311, "135135": 311, "a001157": 311, "a001189": 311, "140151": 311, "2619": 311, "9495": 311, "35695": 311, "568503": 311, "a001221": 311, "84792": 311, "a001222": 311, "bigomega": 311, "a001227": 311, "8119": 311, "1393": 311, "3363": 311, "a001358": 311, "semiprim": 311, "biprim": 311, "669": 311, "a001405": 311, "a001477": 311, "3382789": 311, "a001694": 311, "squareful": 311, "3136": 311, "7225": 311, "is_pow": 311, "2500": 311, "a001836": 311, "17798": 311, "578": 311, "743": 311, "893": 311, "a001906": 311, "701408733": 311, "6765": 311, "17711": 311, "a001909": 311, "8544": 311, "470033715095287415734": 311, "81901": 311, "870274": 311, "a001910": 311, "1909": 311, "98125321641110663023": 311, "227": 311, "18089": 311, "190435": 311, "2203319": 311, "a001969": 311, "evil": 311, "a002110": 311, "primori": 311, "9699690": 311, "1922760350154212639070": 311, "2310": 311, "30030": 311, "510510": 311, "a002113": 311, "palindrom": [311, 352, 354, 357, 364], "a002275": 311, "repunit": 311, "11111111": 311, "11111111111111111111": 311, "1111111": [311, 354], "a002378": 311, "oblong": 311, "pronic": 311, "heteromec": 311, "a002620": 311, "a002808": 311, "a003418": 311, "360360": 311, "840": 311, "2520": 311, "27720": 311, "a004086": 311, "3333": [311, 352], "12345": 311, "a004526": 311, "a005100": 311, "defici": 311, "a005101": 311, "abund": [311, 349], "exce": [311, 369], "a005117": 311, "a005408": 311, "a005843": 311, "a006318": 311, "schroeder": 311, "206098": 311, "1806": 311, "8558": 311, "41586": 311, "a006530": 311, "a006882": 311, "3715891200": 311, "a007318": 311, "715": 311, "nonn": 311, "a008275": 311, "a008277": 311, "a008683": 311, "a010060": 311, "a015521": 311, "13107": 311, "967140655691703339764941": 311, "819": 311, "3277": 311, "52429": 311, "209715": 311, "838861": 311, "a015523": 311, "17727": 311, "6173719566474529739091481": 311, "4229": 311, "74326": 311, "311613": 311, "1306469": 311, "a015530": 311, "41008": 311, "1900": 311, "8827": 311, "a015531": 311, "65104": 311, "144560289664733924534327040115992228190104": 311, "2604": 311, "13021": 311, "a015551": 311, "570216": 311, "7110606606530059736761484557155863822531970573036": 311, "12546": 311, "84581": 311, "a018252": 311, "nonprim": 311, "a020639": 311, "a046660": 311, "a049310": 311, "chebyshev": 311, "a051959": 311, "9969": 311, "42834431872413650": 311, "1688": 311, "4112": 311, "24114": 311, "58268": 311, "140728": 311, "a055790": 311, "extremesofpermanentssequence2": 311, "165016": 311, "10356214297533070441564": 311, "2428": 311, "18806": 311, "a061084": 311, "24476": 311, "a064553": 311, "a079922": 311, "school": 311, "girl": 311, "boi": 311, "nieuw": 311, "archief": 311, "voor": 311, "wiskund": 311, "decemb": 311, "2227": 311, "1044": 311, "a079923": 311, "15458": 311, "738": 311, "2108": 311, "5794": 311, "a082411": 311, "407389224418": 311, "76343678551": 311, "483732902969": 311, "560076581520": 311, "2219759332689173": 311, "a083103": 311, "1786772701928802632268715130455793": 311, "1059683225053915111058165141686995": 311, "2846455926982717743326880272142788": 311, "3906139152036632854385045413829783": 311, "45481392851206651551714764671352204": 311, "14639253684254059531823985143948191708": 311, "a083104": 311, "331635635998274737472200656430763": 311, "1510028911088401971189590305498785": 311, "ronald": 311, "3351693458175078679851381267428333": 311, "36021870400834012982120004949074404": 311, "11601914177621826012468849361236300628": 311, "a083105": 311, "62638280004239857": 311, "49463435743205655": 311, "112101715747445512": 311, "161565151490651167": 311, "1853029790662436896": 311, "596510791500513098192": 311, "a083216": 311, "20615674205555510": 311, "3794765361567513": 311, "herbert": 311, "wilf": [311, 341], "347693837265139403": 311, "2738025383211084205003383": 311, "24410439567123023": 311, "28205204928690536": 311, "a090010": 311, "67741129": 311, "192416593029158989003270143": 311, "34754": 311, "398959": 311, "4996032": 311, "988344062": 311, "a090012": 311, "890901": 311, "129020386652297208795129": 311, "1395": 311, "10617": 311, "91911": 311, "9552387": 311, "a090013": 311, "3481096": 311, "1112998577171142607670336": 311, "536": 311, "4004": 311, "34176": 311, "327604": 311, "40585284": 311, "a090014": 311, "11016595": 311, "7469733600354446865509725": 311, "1135": [311, 356], "9545": 311, "90445": 311, "952175": 311, "138864365": 311, "a090015": 311, "29976192": 311, "41552258517692116794936876": 311, "2136": 311, "19998": 311, "208524": 311, "2393754": 311, "406446774": 311, "a090016": 311, "72737161": 311, "199341969448774341802426289": 311, "3689": 311, "38087": 311, "433713": 311, "5394991": 311, "1056085191": 311, "a109814": 311, "polite_numb": 311, "sheet": 311, "a111774": 311, "jaapspi": 311, "mathfil": 311, "problem2005": 311, "is_number_of_the_third_kind": 311, "a111775": 311, "a111787": 311, "2542": 311, "23799": 311, "inspect": 311, "__dir__": 311, "incorrectli": 311, "perm_mh": 311, "a079908": 311, "a079928": 311, "recur_gen2": 311, "recur_gen2b": 311, "recur_gen3": 311, "blurb": 312, "characteristic_speci": 313, "characteristicspeci": [313, 316], "genericcombinatorialspeci": [313, 314, 315, 316, 317, 320, 322, 323, 324, 325, 326, 327, 329, 330], "isotype_generating_seri": [313, 316, 317, 318, 319, 322, 323, 326, 327, 329, 349], "cycle_index_seri": [313, 316, 318, 319, 327], "characteristicspeciesstructur": 313, "genericspeciesstructur": [313, 314, 315, 317, 320, 322, 323, 324, 326, 328, 329], "transport": [313, 314, 315, 320, 322, 323, 324, 326, 328, 329], "characteristicspecies_class": 313, "emptysetspeci": [313, 325, 328, 349], "emptysetspecies_class": 313, "singletonspeci": [313, 318, 324, 325, 327, 328, 349], "singletonspecies_class": 313, "composition_speci": 314, "compositionspeci": 314, "setspeci": [314, 317, 318, 321, 324, 326, 327, 328, 330], "cyclespeci": [314, 315, 318, 327], "weight_r": [314, 317, 324, 325, 327, 330], "compositionspeciesstructur": 314, "change_label": [314, 322, 324, 328], "compositionspecies_class": 314, "cycle_speci": 315, "cyclespeciesstructur": 315, "permutation_group_el": [315, 323], "cyclespecies_class": 315, "empty_speci": 316, "emptyspeci": 316, "empt": 316, "emptyspecies_class": 316, "functorial_composition_speci": 317, "functorialcompositionspeci": 317, "subsetspeci": [317, 318, 327, 328, 329], "functorial_composit": [317, 318, 327], "simplegraphspeci": [317, 318, 319], "functorialcompositionspecies_class": 317, "functorialcompositionstructur": 317, "ralf": [318, 327, 369], "hemmeck": [318, 327], "aldor": [318, 327], "risc": [318, 327], "linz": [318, 327], "aldorcombinat": [318, 327], "combinatse10": 318, "bll": 318, "leroux": 318, "intro": 318, "fran\u00e7oi": [318, 349], "gilbert": 318, "march": [318, 354], "cycleindexseri": 318, "coeff_stream": 318, "coefficient_cycle_typ": 318, "cycleindexseriesr": 318, "linearorderspeci": [318, 320, 325, 327, 328], "exponentialcycleindexseri": 318, "binarytreespeci": [318, 319, 327], "binaryforestspeci": [318, 319], "partitionspeci": [318, 322, 328], "permutationspeci": [318, 323, 324, 327, 330], "logarithm": 318, "logarithmcycleindexseri": 318, "cg": 318, "hous": 318, "equigrad": 318, "lazypowerseriesr": [318, 349], "exponentialgeneratingseri": 318, "lazypowerseri": 318, "ordinarygeneratingseriesr": 318, "exponentialgeneratingseriesr": 318, "g_n": [318, 354], "131072": 318, "315": 318, "536870912": 318, "2835": 318, "thoroughli": 318, "labelle2008": 318, "eplu": 318, "set_speci": [318, 326], "ordinarygeneratingseri": 318, "2721": 319, "49171": 319, "1084483": 319, "28245729": 319, "848456353": 319, "758": 319, "2504": 319, "907": 319, "1680": 319, "30240": 319, "665280": 319, "17297280": 319, "518918400": 319, "32768": 319, "268435456": 319, "68719476736": 319, "linear_order_speci": 320, "linearorderspeciesstructur": 320, "linearorderspecies_class": 320, "accept_s": 321, "change_support": 321, "change_perm": 321, "partition_speci": 322, "partitionspeciesstructur": 322, "partitionspecies_class": 322, "permutation_speci": 323, "permutationspeciesstructur": 323, "permutationspecies_class": 323, "product_speci": 324, "productspeci": 324, "left_factor": 324, "right_factor": 324, "productspeciesstructur": 324, "productspecies_class": 324, "recursive_speci": 325, "combinatorialspeci": [325, 327, 328, 349], "combinatorialspeciesstructur": 325, "speciesstructurewrapp": [325, 328, 330], "setspeciesstructur": 326, "setspecies_class": 326, "combinatse8": 327, "internal_nod": 327, "algebraic_equation_system": 327, "node3": 327, "vertex_iter": 327, "node0": 327, "is_weight": 327, "structure_class": [327, 328], "oooooo": 328, "isotypeswrapp": 328, "specieswrapp": 328, "simpleisotypeswrapp": 328, "simplestructureswrapp": 328, "speciesstructur": 328, "structureswrapp": 328, "_structur": 328, "subset_speci": 329, "subsetspeciesstructur": 329, "label_subset": 329, "subsetspecies_class": 329, "sum_speci": 330, "sumspeci": 330, "left_summand": 330, "right_summand": 330, "sumspeciesstructur": 330, "sumspecies_class": 330, "submultiset_": 331, "submultiset": 331, "submultiset_sk": 331, "619": 331, "subsetssort": 331, "115792089237316195423570985008687907853269984665640564039457584007913129639936": 331, "14123091480": 331, "278826214642518400": 331, "1441231049": 331, "subsets_": 331, "lightweight": 331, "cliffordalgebra": 331, "3149254230": 331, "set_object_enumer": [331, 333], "aren": 331, "underlying_set": 331, "subsets_sk": 331, "dict_to_list": 331, "list_to_dict": 331, "subsets_hereditari": 332, "subsets_with_hereditary_properti": 332, "max_obstruction_s": 332, "inclusionwis": 332, "win": 332, "coalit": 332, "dramat": 332, "thread": 332, "obstruct": 332, "num_cal": 332, "is_independent_set": 332, "suboptim": 333, "apparit": 333, "subset_rest": 333, "post_process": 333, "bnjr": 334, "bonjour": 334, "njo": 334, "nnu": 334, "enumeratedmultiset": 334, "subwords_w": 334, "subwords_wk": 334, "smallest_posit": 334, "shellabl": 335, "coxeter_sorting_word": 335, "root_configur": 335, "increasing_flip_poset": 335, "extended_weight_configur": 335, "brick_polytop": 335, "runtimewarn": 335, "pilaud": 335, "knumil": 335, "184": 335, "pilstu": 335, "spheric": 335, "subword_complex": 335, "barycent": 335, "brick_fan": 335, "weight_con": 335, "brick_vector": 335, "greedy_facet": [335, 347], "increasing_flip_graph": 335, "is_bal": 335, "is_double_root_fre": 335, "is_pur": 335, "is_root_independ": 335, "is_spher": 335, "kappa_preimag": 335, "minkowski_summand": 335, "minkowski": 335, "extended_root_configur": 335, "mathsf": 335, "smallsetminu": 335, "omega_": 335, "return_posit": 335, "is_vertex": 335, "root_con": 335, "list_color": 335, "pseudolin": 335, "upper_root_configur": 335, "weight_configur": 335, "wc": 335, "super_tableau": 336, "oddd": 336, "semistandardsupertableaux": 336, "semistandardtableaux": [336, 341], "sst": [336, 341], "semistandardsupertableaux_al": 336, "standardsupertableau": 336, "standardsupertableaux": 336, "standardsupertableaux_al": 336, "standardsupertableaux_shap": 336, "standardtableaux_shap": [336, 341], "6651216": [336, 341], "standardsupertableaux_s": 336, "standardtableaux_s": [336, 341], "27886995605342342839104615869259776": 336, "boson": 337, "semicolon": 337, "superpartit": 337, "jl2016": 337, "fermionic_degre": 337, "bosonic_degre": 337, "a_part": 337, "antisymmetr": [337, 338], "antisymmetric_part": 337, "add_horizontal_border_strip_star": 337, "add_horizontal_border_strip_star_bar": 337, "bi_degre": 337, "bidegre": 337, "bosonic_length": 337, "fermionic_sector": 337, "from_circled_diagram": 337, "from_cd": 337, "to_circled_diagram": 337, "s_part": 337, "symmetric_part": 337, "shape_circled_diagram": 337, "superpartitions_al": 337, "superpartitions_n": 337, "superpartitions_n_m": 337, "symmetric_group_algebra": 338, "heckealgebrasymmetricgroupt": 338, "t_j": [338, 341], "go1993": 338, "heckealgebrasymmetricgroup_gener": 338, "heckealgebrasymmetricgroup_t": 338, "perm1": 338, "perm2": 338, "t_action": 338, "t_action_on_basi": 338, "brave": 338, "sga": 338, "qs4": 338, "qs0": 338, "qs1": 338, "awkward": 338, "_test_construct": 338, "symmetricgroupalgebra_n": 338, "groupalgebra_class": 338, "zs3": 338, "binary_unshuffle_sum": 338, "rsw": 338, "semi_rsw_el": 338, "rsw_shuffling_el": 338, "test_rsw": 338, "zsn": 338, "test_rsw_ncsf": 338, "canonical_embed": 338, "zs2": 338, "qs4g": 338, "zs2g": 338, "cell_modul": 338, "cell_module_indic": 338, "central_orthogonal_idempot": 338, "mur1983": 338, "idem": 338, "nakayama": 338, "dft": 338, "seminorm": [338, 339], "epsilon_ik": 338, "itab": 338, "ktab": 338, "seminormal_basi": 338, "test_sn1": 338, "qsn": 338, "qsn1": 338, "ett": 338, "test_sn2": 338, "pit": 338, "test_sn3": 338, "lh": 338, "j4": 338, "qs5": 338, "monomial_from_smaller_permut": 338, "qs5g": 338, "dret": 338, "sga3": 338, "sga5": 338, "pret": 338, "test_rsw_comm": 338, "bitableau": 338, "ram1997": 338, "artin": 338, "wedderburn": 338, "eghlsvi": 338, "unnorm": 338, "whenc": 338, "e_hat": 338, "e_ik": 338, "herein": 338, "pi_ik": 338, "seminormal_test": 338, "kerber": 338, "symmetric_group_represent": 339, "spechtrepresent": 339, "symmetricgrouprepresentation_generic_class": 339, "representation_matrix": 339, "spc": 339, "scalar_product_matrix": 339, "cache_matric": 339, "symmetricgrouprepresentations_class": 339, "orth": 339, "verify_represent": 339, "_cache__representation_matrix": 339, "hasattr": 339, "phalanster": 339, "proccrac": 339, "to_charact": 339, "triv": 339, "def_rep": 339, "block_sum": 339, "snorm": 339, "youngrepresentation_orthogon": 339, "youngrepresentation_gener": 339, "youngrepresentation_seminorm": 339, "representation_matrix_for_simple_transposit": 339, "youngrepresentations_orthogon": 339, "youngrepresentations_seminorm": 339, "partition_to_vector_of_cont": 339, "autocorrel": 340, "seb2017": 340, "4l": 340, "2l": 340, "familii": 340, "matteo": 340, "cati": 340, "t_sequences_construction_from_base_sequ": 340, "base_sequ": 340, "ktr2005": 340, "0_": 340, "turyn_sequences_smallcas": 340, "t_sequences_construction_from_turyn_sequ": 340, "turyn_sequ": 340, "is_t_sequences_set": 340, "base_sequences_smallcas": 340, "crskky1989": 340, "base_sequences_construct": 340, "turyn_type_seq": 340, "is_base_sequences_tupl": 340, "turyn_type_sequences_smallcas": 340, "elemn": 340, "n_b": 340, "n_c": 340, "n_d": 340, "contiain": 340, "bdkr2013": 340, "begun": [341, 349], "katabol": 341, "catabol": 341, "oliv": 341, "pechenik": 341, "rowstandardtableau": [341, 343], "increasingtableau": 341, "rowstandardtableaux": 341, "increasingtableaux": 341, "tableaux_al": [341, 343], "tableaux_s": 341, "semistandardtableaux_al": 341, "semistandardtableaux_s": 341, "semistandardtableaux_size_inf": 341, "semistandardtableaux_size_weight": 341, "semistandardtableaux_shap": 341, "semistandardtableaux_shape_inf": 341, "semistandardtableaux_shape_weight": 341, "standardtableaux_al": [341, 343], "increasingtableaux_al": 341, "increasingtableaux_s": 341, "increasingtableaux_size_inf": 341, "increasingtableaux_size_weight": 341, "increasingtableaux_shap": 341, "increasingtableaux_shape_inf": 341, "increasingtableaux_shape_weight": 341, "rowstandardtableaux_al": [341, 343], "rowstandardtableaux_s": 341, "rowstandardtableaux_shap": 341, "tableaux_shap": 341, "IT": 341, "k_bender_knuth": 341, "dps2017": 341, "increasing": 341, "k_evacu": 341, "ty2009": 341, "k_promot": 341, "pec2014": 341, "k_promotion_invers": 341, "dual_k_evacu": 341, "1955457504": 341, "2352": 341, "208361017592001331200": 341, "kra1999": 341, "stoyanovskii": 341, "0012365x9290368p": 341, "kostka_numb": 341, "4225": 341, "hai1992": 341, "sag2011": 341, "speedup": 341, "bk_promotion_inverse7": 341, "standard_desc": 341, "standard_major_index": 341, "standard_number_of_desc": 341, "nijenhui": 341, "knuth_correspond": 341, "28273": 341, "423107565308608549951551753690": 341, "221285999236657443927937253376": 341, "syt": 341, "subinterv": 341, "add_entri": [341, 343], "anti_restrict": 341, "kb1995": 341, "bump_multipli": 341, "slide_multipli": 341, "catabolism_projector": 341, "catabolism_sequ": 341, "bkw2011": [341, 343], "column_stabil": [341, 343], "tableau_tupl": [341, 343], "first_column_desc": [341, 343], "first_row_desc": [341, 343], "sal2014": 341, "theta_i": 341, "southward": 341, "westward": 341, "insert_word": 341, "is_column_increas": 341, "is_increas": 341, "is_key_tableau": 341, "ls1990": 341, "wil2010": 341, "is_row_increas": 341, "k_weight": 341, "ive2012": 341, "lambda_catabol": 341, "last_letter_lequ": 341, "tab2": 341, "left_key_tableau": 341, "lesser": 341, "scan": 341, "secondtab": 341, "promotion_oper": 341, "sigma_m": 341, "symmetric_group_action_on_valu": 341, "llm2003": [341, 354], "raise_action_from_word": 341, "functool": 341, "14724": 341, "reduced_column_word": [341, 343], "reduced_lambda_catabol": 341, "reduced_row_word": [341, 343], "residue_sequ": [341, 342, 343], "tableau_residu": [341, 342, 343], "residuesequ": [341, 342, 343], "reverse_bump": 341, "right_key_tableau": 341, "rotate_180": 341, "row_stabil": [341, 343], "schensted_insert": 341, "socl": 341, "symmetric_group_action_on_entri": [341, 343], "loth02": [341, 364], "to_gelfand_tsetlin_pattern": 341, "to_sign_matrix": 341, "3412": [341, 359], "325146": 341, "321546": 341, "vertical_flip": 341, "tableau_class": 341, "4213": 341, "undergo": 341, "unmatched_plac": 341, "eigenspac": 342, "kappa_k": 342, "standardtableaux_residu": [342, 343], "standardtableaux_residue_shap": [342, 343], "rowstandardtableautuples_residu": [342, 343], "rowstandardtableautuples_residue_shap": [342, 343], "shadow": 342, "r_m": 342, "restrict_row": 342, "swap_residu": 342, "cell_residu": 342, "residuesequences_with_categori": 342, "criteria": 342, "multitableaux": 343, "rowstandardtableautupl": 343, "tableautuples_al": 343, "tableautuples_level": 343, "tableautuples_s": 343, "tableautuples_level_s": 343, "standardtableautuples_al": 343, "standardtableautuples_level": 343, "standardtableautuples_s": 343, "standardtableautuples_level_s": 343, "standardtableautuples_shap": 343, "rowstandardtableautuples_al": 343, "rowstandardtableautuples_level": 343, "rowstandardtableautuples_s": 343, "rowstandardtableautuples_level_s": 343, "rowstandardtableautuples_shap": 343, "motiv": [343, 347, 349], "rowtableau": 343, "rowtableaux": 343, "miwa": 343, "level_one_parent_class": 343, "stt": 343, "31936": 343, "std": 343, "36960": 343, "intim": 343, "a_l": 343, "catalogu": 344, "bousquet": 344, "melou": 344, "fusi": 344, "previl": 344, "ratel": 344, "1106": 344, "1498": 344, "paths_in_triangl": 344, "swap_dext": 344, "tilingsolv": 345, "knuth1": 345, "quantumino": 345, "juli": 345, "april": 345, "chessboard": 345, "vacant": 345, "magenta": [345, 358], "violet": 345, "pink": 345, "difference_upd": 345, "show2d": 345, "stick": 345, "cyan": 345, "tachyon": 345, "reusabl": [345, 357], "1696": 345, "0011047": 345, "deeppink": 345, "canonical_isometric_copi": 345, "orientation_preserv": 345, "mod_box_isometri": 345, "rbg": 345, "isometric_copi": 345, "sorted_list": 345, "isometric_copies_intersect": 345, "neighbor_edg": 345, "self_surround": 345, "remove_incomplete_copi": 345, "annulu": 345, "homotheti": 345, "translated_copi": 345, "translated_copies_intersect": 345, "common_prefix": 345, "hundredth": 345, "coord_to_int_dict": 345, "int_to_coord_dict": 345, "is_suit": 345, "nrows_per_piec": 345, "quantuminosolv": 345, "tiling_solv": 345, "672": 345, "_piec": 345, "row_to_polyomino": 345, "row_numb": 345, "rows_for_piec": 345, "starting_row": 345, "ncube_isometry_group": 345, "ncube_isometry_group_coset": 345, "parallelepip": 345, "transitive_id": 346, "halt": [346, 349], "unicode_art": 347, "f_triangl": 347, "triangles_fhm": 347, "h_triangl": 347, "gamma_triangl": 347, "flo": 347, "\u03b3": 347, "transmut": 347, "nc3": 347, "bare": 347, "dismiss": 347, "tuples_sk": 348, "unorderedtuples_sk": 348, "math\u00e9matiqu": [349, 357, 358], "avec": 349, "cms2012": 349, "physic": 349, "wider": 349, "offer": 349, "profus": 349, "fortiori": 349, "capabl": 349, "card": 349, "deck": 349, "spade": 349, "club": 349, "queen": 349, "mathrel": 349, "topic": 349, "player": 349, "2598960": 349, "thirteen": 349, "5148": 349, "16660": 349, "98079231692677": 349, "is_flush": 349, "nflush": 349, "poker_hand": 349, "grammar": 349, "autom": 349, "rigor": 349, "justif": 349, "parameter": 349, "valuabl": 349, "gold": 349, "mine": 349, "190000": 349, "fingerprint": 349, "biguplus_": 349, "approx": 349, "uplu": 349, "goldbach": 349, "1751": 349, "beauti": 349, "sy": 349, "sol": 349, "solution_dict": 349, "aberr": 349, "instantan": 349, "227508830794229349661819540395688853956041682601541047340": 349, "recalcul": 349, "lazy_series_r": 349, "valuat": [349, 364], "129013158064429114001222907669676675134349530552728882499810851598901419013348319045534580850847735528275750122188940": 349, "seek": 349, "60000": 349, "ndigit": 349, "60198": 349, "confin": 349, "gfun": 349, "combstruct": 349, "decomposableobject": 349, "diff": 349, "px": 349, "qx": 349, "qxy": 349, "quo": 349, "ybar": 349, "modulu": [349, 357], "dz": 349, "legibli": 349, "4z": 349, "equadiff": 349, "simplify_r": 349, "function_factori": 349, "substitute_funct": 349, "sought": 349, "z_0": 349, "saw": [349, 354], "wide": 349, "elimin": 349, "gr\u00f6bner": 349, "algebro": 349, "gosper": 349, "progress": [349, 354], "2003529930406846464979072351560255750447825475569751419265016973": 349, "19728": 349, "19729": 349, "237102124": 349, "237102123": 349, "particl": 349, "overflowerror": 349, "rademach": 349, "partitions_n_with_categori": 349, "introspect": 349, "dollar": 349, "bill": 349, "integerrang": 349, "16999": 349, "up_to_four_edg": 349, "24637809253125004524383007491432768": 349, "discoveri": 349, "stori": 349, "gl_3": 349, "benefit": 349, "pleasant": 349, "circuit": 349, "quantiti": 349, "destroi": 349, "is_odd": 349, "counter_exampl": 349, "999": 349, "x_y": 349, "econom": 349, "launch": 349, "interrupt": 349, "suspend": 349, "stupidest": 349, "narg": 349, "311411457046609920000": 349, "impract": 349, "prohibit": 349, "toolbox": 349, "strategi": 349, "magic": 349, "hood": 349, "ell_0": 349, "compromis": 349, "decis": 349, "problemat": 349, "barvinok": 349, "latt": 349, "ei": 349, "stereograph": 349, "perspect": 349, "stipul": 349, "bt5": 349, "substanti": 349, "chemist": 349, "molecul": 349, "alkan": 349, "carbon": 349, "hydrogen": 349, "nonetheless": 349, "12005168": 349, "father": 349, "142": 349, "fashion": 349, "alexandr": 349, "casamay": 349, "guillaum": 349, "connan": 349, "dumont": 349, "fouss": 349, "maltei": 349, "matthia": 349, "meulien": 349, "mezzarobba": 349, "cl\u00e9ment": 349, "pernet": 349, "zimmermann": 349, "sagebook": 349, "is_repeat": 350, "vector_partit": 350, "integervectorsiter": 350, "vect": 350, "elementwis": 350, "vecpar": 350, "partition_at_vertex": 350, "vec": 350, "vp": 350, "vec_par": 350, "find_min": 350, "finiteword": [351, 357, 358, 367], "infiniteword": [351, 355, 367], "wordopt": [351, 352, 354, 366], "618": [352, 364], "codingofrotationword": [352, 354, 364], "longest_common_prefix": [352, 354, 362], "abstract_word": 352, "word_class": [352, 354, 355, 361, 363], "apply_morph": 352, "abba": [352, 354, 366], "ababa": [352, 354, 358, 363], "abbaabbaab": [352, 354], "8998988998898998988989988998988998898998": 352, "complete_return_words_iter": 352, "unic": [352, 357], "01101001100101101": 352, "01101001011001101": 352, "011010011001011001101": 352, "0110100101101": 352, "justin": 352, "vuillon": 352, "sturmian": [352, 354, 364], "episturmian": [352, 364], "theor": [352, 364], "0123456789": [352, 354, 361], "22112122": [352, 354], "22112": [352, 354], "555008": [352, 354], "aabbabaa": [352, 354], "1211222112112112221122211222112112112221": 352, "factor_occurrences_iter": [352, 354], "121213211213": [352, 354], "finite_differ": [352, 361], "131313131": 352, "first_occurr": [352, 354, 361], "01234567890123456789": 352, "3456": 352, "1003": [352, 367], "iterated_right_palindromic_closur": [352, 361], "1213121": [352, 354], "abacaba": [352, 354], "aaa": [352, 357, 358, 367], "abbab": [352, 354, 357, 360, 363], "ababaabababaababa": 352, "abbaabbaababbaabbaabbaababbaabbaab": 352, "ababaabababaababaabababaababaabababaabab": 352, "abaab": [352, 354], "abaabaababaabaaba": 352, "randomword": [352, 364], "pseudopalindrom": [352, 354], "sci": [352, 364], "galoi": 352, "rairo": 352, "informat": 352, "lex_great": 352, "abbb": [352, 354], "lex_less": 352, "0110100110": 352, "longest_periodic_prefix": 352, "finiteword_iter_with_cach": [352, 361], "0000000000000000000000000000000000000000": 352, "palindrome_prefixes_iter": 352, "abaaba": [352, 354], "aba": [352, 354, 357, 358, 360, 367], "01001010010": [352, 354], "0100101001001010010": 352, "01367146024": 352, "01323102020": 352, "01101100000": 352, "prefixes_iter": 352, "abaa": 352, "01001": 352, "0100101": 352, "01001010": [352, 354], "return_words_iter": 352, "baccabccbacbca": 352, "bacca": [352, 357], "bcc": [352, 357], "bac": 352, "011010011001": [352, 354], "011010010110": 352, "0110100110010110": 352, "01101001": [352, 354, 361], "abbabaab": [352, 354, 361, 365], "letter_separ": [352, 366], "sum_digit": 352, "1001110100111010111011001011101110011011": 352, "2100002020002221222121022221022122111022": 352, "0111111111111111111111111111111111111111": 352, "2350241354435041006132432241353546006304": 352, "nth": 352, "to_integer_word": [352, 354], "_to_integer_iter": 352, "abbacabba": 352, "011020110": 352, "punctuat": 353, "printabl": 353, "octal": 353, "radix64": 353, "__name__": 353, "totallyorderedfiniteset_with_categori": 353, "Theses": 353, "totally_ordered_finite_set": 353, "arnaud": [354, 358, 361, 364, 367], "glen": [354, 361, 364], "julien": [354, 357], "leroi": 354, "reduced_rauzy_graph": 354, "a057b98": 354, "0120120120120": 354, "abbccdef": 354, "abcccabba": 354, "abcccabba04883": 354, "04883abcccabba": 354, "abcccabbaabcccabbaabcccabba04883048": 354, "10015": 354, "048830488304883": 354, "ababab": [354, 358], "4450": 354, "400040000554450": 354, "4000445044504450400044504450445044500550": 354, "010120": 354, "abaabbba": 354, "is_lyndon": [354, 361], "number_of_factor": [354, 360, 364], "critical_expon": [354, 364], "aabbb": 354, "crochemore_factor": [354, 358], "suffix_tre": [354, 360], "word_label": [354, 360], "abaabababbbbbb": 354, "abaababa": 354, "xyxxyxyyi": 354, "hardwar": 354, "factor_iter": [354, 360], "6456": 354, "5645": 354, "4564": 354, "factor_set": [354, 357, 361], "564": 354, "645": 354, "rauzy_graph": [354, 361], "bispeci": 354, "number_of_left_special_factor": 354, "bispecial_factor": 354, "finite_word": [354, 363, 367], "callablefromlistofword": 354, "finiteword_class": [354, 358, 361, 363], "bwt": 354, "burrow": 354, "wheeler": 354, "bw1994": 354, "abaccaaba": 354, "cbaabaaca": 354, "bbaaa": 354, "bbabbaca": 354, "cbbbbaaa": 354, "aabaab": [354, 358], "bbaaaa": 354, "lz_decomposit": [354, 360], "crochemor": 354, "lempel": [354, 360], "ziv": [354, 360], "cro1983": 354, "abababb": [354, 360], "abab": [354, 358], "abaababacabba": [354, 360], "abelian_complex": 354, "abelian_vector": 354, "evaluation_dict": 354, "aaabbbbb": 354, "aabaa": 354, "apply_permutation_to_lett": 354, "badc": [354, 357], "dcba": 354, "apply_permutation_to_posit": 354, "fv2002": 354, "lot2002": 354, "001010101011": 354, "0101010101": 354, "11112222": 354, "is_balanc": 354, "011001": 354, "100110": 354, "10010110": 354, "bispecial_factors_iter": 354, "121212": 354, "ev": 354, "ev_i": 354, "ev_j": 354, "signal": 354, "baab": 354, "colored_vector": 354, "autumn": 354, "commutes_with": 354, "complete_return_word": 354, "jv2000": 354, "21331233213231": 354, "2132": 354, "213312": 354, "2332": 354, "abadafd": 354, "abadafd53587": 354, "12223": 354, "1222353587": 354, "12112": 354, "21121": 354, "conjugate_posit": 354, "12113": 354, "31211": 354, "12131": 354, "012345": 354, "123450": 354, "234501": 354, "345012": 354, "450123": 354, "501234": 354, "cbbca": 354, "bbcac": 354, "bcacb": 354, "cacbb": 354, "acbbc": 354, "abcabc": [354, 358], "bcabca": 354, "cabcab": 354, "conjugates_iter": 354, "0123": [354, 358], "2301": 354, "3012": 354, "number_of_letter_occurr": [354, 363], "number_of_factor_occurr": [354, 363], "dej1972": 354, "aaba": 354, "aabaaba": 354, "djp2001": [354, 364], "g_f": 354, "pal_f": 354, "bhnr2004": [354, 364], "star2011": 354, "ara": 354, "abcacba": 354, "sa": 354, "bbgl2008": 354, "abbabaabbaababba": 354, "cabc": 354, "abcaab": 354, "000000000000": 354, "0101001010001": 354, "deg_inv_lex_less": 354, "deg_lex_less": 354, "baba": 354, "deg_rev_lex_less": 354, "aabba": 354, "delta_deriv": 354, "12211": 354, "2112": 354, "2211": 354, "11222": 354, "delta_derivate_left": 354, "delta_derivate_right": 354, "delta_inv": 354, "112212": 354, "badbcdb": 354, "evaluation_partit": 354, "acdabda": 354, "evaluation_spars": 354, "abcaccab": 354, "factor_complex": 354, "1312": 354, "2131": 354, "121312": 354, "13121": 354, "21312": 354, "213121": 354, "12123": 354, "2123": [354, 356], "factor_occurrences_in": 354, "30187": 354, "word_str": 354, "abac": 354, "first_pos_in": 354, "131231": 354, "415": 354, "5414": 354, "54412": 354, "5441": 354, "154422": 354, "5442": 354, "1254423": 354, "112221": 354, "2122212211": 354, "good_suffix_t": 354, "boyer": 354, "bm1977": 354, "121321": 354, "12412": 354, "has_period": 354, "has_prefix": [354, 362, 363], "abbabaabababa": [354, 363], "has_suffix": [354, 360, 363], "worddatatype_str": [354, 358, 361, 363], "implicit_suffix_tre": 354, "compactif": [354, 360], "trie": [354, 360], "implicitsuffixtre": [354, 360], "cacao": [354, 360], "01011": [354, 360], "inv_lex_less": 354, "abbaba": [354, 358], "cfz2000": 354, "1122": [354, 356], "121333121": 354, "121122121": 354, "is_cad": 354, "cadenc": 354, "121132123": 354, "is_christoffel": 354, "christoffel": [354, 364], "ber2007": 354, "blrs2009": 354, "00100101": 354, "aab": [354, 357, 367], "123123123": 354, "00100": 354, "is_conjugate_with": 354, "is_cub": [354, 361], "012012012": 354, "01010101": 354, "012012": 354, "is_cube_fre": 354, "32221": 354, "is_factor": 354, "pu": 354, "123121332131233121132123": 354, "1231241231312312312": 354, "rich": 354, "pest2011": 354, "2194": 354, "lot1983": 354, "123132133": 354, "122112": 354, "123123": 354, "1231231": 354, "lab2008": 354, "azz2005": 354, "esop": 354, "ici": 354, "repos": 354, "esoperesteicietserepos": 354, "abbcbba": 354, "abcbdba": 354, "aababb": [354, 358], "abacbacbab": 354, "keyerror": 354, "is_prefix": [354, 363], "is_primit": [354, 357], "is_proper_prefix": 354, "is_proper_suffix": 354, "is_quasiperiod": 354, "quasiperiod": 354, "superposit": 354, "ae1993": 354, "mar2004": 354, "glr2008": 354, "abaababaabaababaaba": 354, "is_rich": 354, "is_smooth_prefix": 354, "bl2003": 354, "bdlv2006": 354, "is_squar": [354, 361, 362], "is_square_fre": [354, 361], "31212": 354, "is_sturmian_factor": 354, "0111011011011101101": 354, "lowermechanicalword": [354, 364], "characteristicsturmianword": [354, 364], "aabb": [354, 360], "kolakoskiword": [354, 364], "arn2002": 354, "ser1985": 354, "su2009": 354, "is_subword_of": 354, "lot1997": 354, "3211333213233321": 354, "11122212112122133111222332": 354, "longest_common_subword": 354, "number_of_subword_occurr": 354, "is_suffix": [354, 363], "56789": 354, "579": 354, "deluca2006": 354, "abbabab": 354, "aababaabba": 354, "aabbbaababba": 354, "is_tang": [354, 358], "tangent": 354, "01110110110111011101": 354, "aaabb": 354, "mon2010": 354, "is_yamanouchi": 354, "yamanouchi": 354, "iterated_left_palindromic_closur": 354, "3231323": 354, "abbaab": 354, "lacuna": 354, "unioccurr": 354, "bmbl2008": 354, "last_position_dict": 354, "1231232": 354, "left_special_factor": 354, "au": 354, "bu": 354, "1415": 354, "left_special_factors_iter": 354, "01010": 354, "length_bord": 354, "length_maximal_palindrom": 354, "2j": 354, "0222220": 354, "abcdcbaxyzzyx": 354, "lengths_maximal_palindrom": 354, "lengths_unioccurrent_lp": 354, "h_w": 354, "bmbflr2008": 354, "lps_length": 354, "longest_backward_extens": 354, "0011001": [354, 360], "longest_common_subsequence_problem": 354, "1010101010101010101010101010101010101010": 354, "0011001100110011001100110011001100110011": 354, "00110011001100110011010101010": 354, "longest_common_suffix": [354, 362], "112345678": 354, "1115678": 354, "5678": 354, "549332345": 354, "longest_forward_extens": 354, "0111": 354, "011101": 354, "6667": 354, "33412321": 354, "pal": [354, 364], "bab": [354, 357, 367], "bbabaa": 354, "duv1983": 354, "010010010001000": 354, "10010010001000": 354, "abbababbaababba": 354, "abb": [354, 357, 363, 367], "ababb": [354, 357, 360], "bbababbaaba": 354, "bba": [354, 357, 364, 367], "minimal_conjug": 354, "lexicographically_minimal_string_rot": 354, "11212": 354, "211211211": 354, "112112112": 354, "minimal_period": [354, 361], "a_1a_2": 354, "ababaa": 354, "ababac": 354, "aaaaaa": 354, "nb_factor_occurrences_in": 354, "112332312313112332121123": 354, "11233231231311233221123": 354, "nb_subword_occurrences_in": 354, "lothair": [354, 357, 364], "sakarovitch": 354, "simon": [354, 357], "2604124996": 354, "20370432": 354, "mssy2001": 354, "blueberri": [354, 360], "number_of_right_special_factor": 354, "ua": 354, "ababaaba": 354, "overlap_partit": 354, "u_k": [354, 360], "v_0v_1": 354, "abc012345": 354, "01234": 354, "element_to_root_dict": 354, "56789567895678": 354, "01234567876543210": 354, "0110456654": 354, "palindrome_prefix": 354, "abbbbbbbbbb": 354, "palindromic_closur": 354, "1233": 354, "123321": 354, "12332": 354, "0110343": 354, "01103430110": 354, "3430110343": 354, "01105678": 354, "876501105678": 354, "abbababba": 354, "babaabbaba": 354, "palindromic_complex": 354, "palindromic_lacunas_studi": 354, "abbabaabbaab": 354, "baabbaab": 354, "aabbaa": 354, "divide_length": 354, "222222": 354, "212113": 354, "21215": 354, "aabbabaabaabba": 354, "a22222": 354, "2233": [354, 356], "prefix_function_t": 354, "1241245": 354, "primitive_length": 354, "abaababaaba": 354, "012": [354, 357], "567": 354, "678": [354, 357], "789": 354, "prolong": [354, 357, 364], "bdlgz2009": 354, "bps2008": 354, "3456789": 354, "01010010": 354, "abcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd": 354, "abcdc": 354, "cdcdc": 354, "dur1998": 354, "hz1999": 354, "21331": 354, "return_words_deriv": 354, "dangl": 354, "12131221312313122": 354, "123242": 354, "rev_lex_less": 354, "124563": 354, "365421": 354, "rfind": [354, 363], "right_special_factor": 354, "right_special_factors_iter": 354, "00101": 354, "11010": 354, "7849631": 354, "011233": 354, "012133": 354, "012313": 354, "012331": 354, "021133": 354, "021313": 354, "021331": 354, "023113": 354, "023131": 354, "023311": 354, "201133": 354, "201313": 354, "201331": 354, "203113": 354, "203131": 354, "203311": 354, "230113": 354, "230131": 354, "230311": 354, "233011": 354, "acbd": 354, "acdb": 354, "cabd": 354, "cadb": 354, "cdab": 354, "caca": [354, 360], "00110011010": [354, 360], "00110011": [354, 360], "01100110": [354, 360], "standard_factor": [354, 364], "cfl1958": 354, "0010110011": 354, "001011": 354, "1223312": 354, "12233": 354, "001011001": 354, "123221": 354, "112223": 354, "12322121": 354, "11122223": 354, "32222111": 354, "aaabbb": 354, "bbbaaa": 354, "sturmian_desubstitute_as_poss": 354, "desubstitut": 354, "acceler": 354, "10111101101110111": 354, "01100101": 354, "azaazaaazaaazaazaaaz": 354, "az": 354, "subword_complementari": 354, "tamtam": 354, "mta": 354, "tam": 354, "mtam": 354, "amtm": 354, "tamm": 354, "suffix_tri": 354, "suffixtri": [354, 360], "swap_decreas": 354, "swap_increas": 354, "to_integer_list": 354, "10102": 354, "to_monoid_el": 354, "aaaaa": [354, 360], "topological_entropi": 354, "entropi": 354, "rate": 354, "lim_": [354, 364], "log_d": 354, "p_u": 354, "fog2002": 354, "935784974019201": 354, "topo": 354, "71699": 354, "48074": 354, "36396": 354, "28774": 354, "23628": 354, "20075": 354, "17270": 354, "14827": 354, "ok": 354, "word_to_ordered_set_partit": 354, "noob": 354, "hell": 354, "0488304883048830488304883048830488304883": 355, "0120120120120120120120120120120120120120": 355, "liner": 355, "4444444444444444444444444444444444444444": 355, "abbabaabbaababbabaababbaabbabaabbaababba": [355, 357, 364, 365], "babababababababababababababababababababa": 355, "infinite_word": [355, 367], "infiniteword_class": [355, 361], "0123450123450123450123450123450123450123": 355, "lyndon_word": 356, "2333": 356, "1315": 356, "1123": 356, "1132": 356, "lyndonwords_class": 356, "lyndonwords_evalu": 356, "1223": 356, "lyndonwords_nk": 356, "1113": 356, "1333": 356, "2223": 356, "standardbracketedlyndonword": 356, "sblw33": 356, "standardbracketedlyndonwords_nk": 356, "standard_bracket": 356, "standard_unbracket": 356, "sblw": 356, "xyxsxss": 357, "xyss": 357, "0221": 357, "022122122102": 357, "0221221": 357, "22122102": 357, "xxxsy": 357, "xyxsxssxyxsxssxyxsxssxyssi": 357, "ysxyssxyxsxssysxyssxyss": 357, "xyxsxssysxyxsxssxyssxyxsxssxyssxyssysxi": 357, "is_ident": 357, "is_endomorph": 357, "periodicpointiter": 357, "periodic_point": 357, "cba": 357, "_cach": 357, "get_iter": 357, "666a": 357, "a6a": 357, "abelian_rotation_subspac": 357, "asd": 357, "bcdea": 357, "cdeab": 357, "zxy": 357, "dual_map": 357, "analys": 357, "extend_bi": 357, "varphi_2": 357, "abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb": 357, "abcc": 357, "cbc": 357, "bcbbcbcbbcbbcbcbbcbcbbcbbcbcbbcbbcbcbbcb": 357, "baababbaabbabaababbabaabbaababbaabbabaab": 357, "abcaababcabcaabcaababcaababcabcaababcabc": 357, "cab": 357, "abcabbccabcabcabbccbccabcabbccabcabbccab": 357, "13668": 357, "s7": 357, "12232342": 357, "s7r": 357, "321331332133133": 357, "133321331332133133": 357, "2133133133321331332133133": 357, "growing_lett": 357, "is_grow": 357, "has_conjugate_in_classp": 357, "q_b": 357, "pq_b": 357, "pq_": 357, "hof": 357, "knill": 357, "schr\u00f6dinger": 357, "159": 357, "propriet": 357, "memoir": 357, "maitris": 357, "mathematiqu": 357, "montreal": [357, 364], "uqam": [357, 358], "is_in_classp": 357, "has_left_conjug": 357, "has_right_conjug": 357, "immortal_lett": 357, "immort": 357, "cac": [357, 360], "abbccccabca": 357, "infinite_repetitions_primitive_root": 357, "allow_grow": 357, "sake": 357, "ks2015": 357, "inf_rep": 357, "_language_na": 357, "1b5": 357, "fcg": 357, "dae": 357, "1432f2143f3214f4321f": 357, "5678g8567g7856g6785g": 357, "wabc": 357, "8674": 357, "adab": 357, "cbcd": 357, "is_eras": 357, "cassnic10": 357, "cassaign": [357, 364], "8618": 357, "bbaba": 357, "acbcc": 357, "acbab": 357, "acbba": 357, "sardina": 357, "patterson_algorithm": 357, "averag": 357, "20001": 357, "is_involut": 357, "exercic": 357, "allouch": 357, "shallit": 357, "is_prolong": 357, "aac": 357, "8595": 357, "is_pushi": 357, "pushi": 357, "abca": 357, "bcb": 357, "is_repetit": 357, "morphic": [357, 361], "hanoi": 357, "cda": 357, "is_self_compos": 357, "is_unboundedly_repetit": 357, "unboundedli": 357, "dol": 357, "chacon": 357, "0001000101": 357, "0001010010": 357, "1010010001": 357, "1010010100": 357, "latex_layout": 357, "onelin": 357, "letter_growth_typ": 357, "mortal": 357, "perron": 357, "exponention": 357, "expo": 357, "cacd": 357, "debcd": 357, "list_of_conjug": 357, "triangleleft": 357, "bowti": 357, "babba": 357, "babab": 357, "baa": [357, 367], "partition_of_domain_alphabet": 357, "abbababbababbabababbababbabababbababbaba": 357, "31759": 357, "ababaaababaaabaabaababaaababaaabaabaabab": 357, "baaabaabaababaaabaababaaabaababaaababaaa": 357, "aababaaaababaababbabaababaababbabaababaa": 357, "8765432765432654325432432322176543265432": 357, "9876543287654327654326543254324323221876": 357, "6543254324323221543243232214323221322121": 357, "7654326543254324323221654325432432322154": 357, "31454": 357, "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb": 357, "pisot_eigenvector_left": 357, "irreduct": 357, "aaaabbc": 357, "aaabbc": 357, "aabc": 357, "8392867552141611": 357, "5436890126920763": 357, "pisot_eigenvector_right": [357, 358], "2955977425220848": 357, "rauzy_fractal_plot": 357, "plot_origin": 357, "plot_basi": 357, "million": 357, "finitewordpath_al": [357, 358], "plot_project": [357, 358], "50000": 357, "size_alphabet": 357, "hokkaido": 357, "scatter": 357, "2122": 357, "1122233": 357, "300000": 357, "150000": 357, "funni": 357, "bernat": 357, "replic": 357, "30000": 357, "valeri": 357, "berth": 357, "siegel": 357, "ejcnt": 357, "rauzy_fractal_point": 357, "rauzy_fractal_project": 357, "41964337760708": 357, "606290729207199": 357, "771844506346038": 357, "11514250803994": 357, "restrict_domain": 357, "dsa": 357, "simplify_alphabet_s": 357, "ko2000": 357, "aca": [357, 360], "acab": 357, "zy": [357, 367], "xz": [357, 367], "xxzx": 357, "xyxz": 357, "abdd": 357, "xyi": 357, "xzy": 357, "xzz": 357, "xyyxyz": 357, "yx": [357, 367], "simplify_until_inject": 357, "quadruplet": 357, "get_cycl": 357, "subdomain": 357, "inertia": 358, "freeman": 358, "hierarchi": 358, "letters_to_step": 358, "abaccba": 358, "trajectori": 358, "is_clos": 358, "finitewordpath_2d_str": 358, "finitewordpath_2d": 358, "herit": 358, "rrr": 358, "rsr": 358, "rss": 358, "srr": 358, "ssr": 358, "sss": 358, "square_grid": 358, "abcdef": [358, 361], "triangle_grid": 358, "babaddefadabcadefaadfafabacdefa": 358, "abcabcabcabcaabacabcababcacbabacacabcaccbcac": 358, "rstu": 358, "rtusuusususuturrsust": 358, "end_point": 358, "cubepath": 358, "cube_grid": 358, "abcabaabcabaaaaa": 358, "012321232": 358, "0123012301": 358, "0321": 358, "1961": 358, "lipkin": 358, "rosenfeld": 358, "psychopictor": 358, "academ": 358, "braquelair": 358, "vialard": 358, "regular_til": 358, "aaababbb": 358, "gif": 358, "abababababab": 358, "fibonacci_til": [358, 364], "aababaabbbaa": 358, "abbaa": 358, "abaabb": 358, "ababcaabc": 358, "59807621135332": 358, "height_vector": 358, "abbba": 358, "pathopt": 358, "fillopt": 358, "startpoint": 358, "startopt": 358, "pointsiz": 358, "endarrow": 358, "arrowopt": 358, "gridlin": 358, "gridopt": 358, "abababaabab": 358, "abababaababb": 358, "abcdedededefab": 358, "abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab": 358, "ababababab": 358, "plot_directive_vector": 358, "aaaccaccacacacaccccccbbdd": 358, "set_aspect_ratio": 358, "width_vector": 358, "xmax": 358, "0101013332": 358, "xmin": 358, "ymax": 358, "ymin": 358, "finitewordpath_2d_cal": 358, "worddatatype_cal": [358, 361, 365], "finitewordpath_2d_callable_with_cach": 358, "worddatatype_callable_with_cach": [358, 361, 365], "finitewordpath_2d_it": 358, "worddatatype_it": [358, 361, 365], "finitewordpath_2d_iter_with_cach": 358, "worddatatype_iter_with_cach": [358, 361, 365], "finitewordpath_2d_list": 358, "worddatatype_list": [358, 361, 363], "finitewordpath_2d_tupl": 358, "worddatatype_tupl": [358, 361, 363], "finitewordpath_3d": 358, "arrow_head": 358, "abcabcaabbc": 358, "finitewordpath_3d_cal": 358, "finitewordpath_3d_callable_with_cach": 358, "finitewordpath_3d_it": 358, "finitewordpath_3d_iter_with_cach": 358, "finitewordpath_3d_list": 358, "finitewordpath_3d_str": 358, "finitewordpath_3d_tupl": 358, "directive_vector": 358, "abababab": 358, "ababababcc": 358, "abcabababacaacccbbcac": 358, "aacacc": 358, "aabde": 358, "aabbabbab": 358, "include_last": 358, "projected_path": 358, "1213121121312121312112131213121121312121": 358, "projected_point_iter": 358, "526233343362516": 358, "220830337618112": 358, "477656250512816": 358, "305403005744404": 358, "100767309386062": 358, "400890564600664": 358, "425466033976454": 358, "78087": 358, "5617": 358, "93704": 358, "31235": 358, "0932": 358, "46852": 358, "15617": 358, "start_point": 358, "tikz_trajectori": 358, "866": [358, 364], "finitewordpath_all_cal": 358, "finitewordpath_all_callable_with_cach": 358, "finitewordpath_all_it": 358, "finitewordpath_all_iter_with_cach": 358, "finitewordpath_all_list": 358, "finitewordpath_all_str": 358, "finitewordpath_all_tupl": 358, "finitewordpath_cube_grid": 358, "finitewordpath_cube_grid_cal": 358, "finitewordpath_cube_grid_callable_with_cach": 358, "finitewordpath_cube_grid_it": 358, "finitewordpath_cube_grid_iter_with_cach": 358, "finitewordpath_cube_grid_list": 358, "finitewordpath_cube_grid_str": 358, "finitewordpath_cube_grid_tupl": 358, "finitewordpath_dyck": 358, "finitewordpath_dyck_cal": 358, "finitewordpath_dyck_callable_with_cach": 358, "finitewordpath_dyck_it": 358, "finitewordpath_dyck_iter_with_cach": 358, "finitewordpath_dyck_list": 358, "finitewordpath_dyck_str": 358, "finitewordpath_dyck_tupl": 358, "finitewordpath_hexagonal_grid": 358, "finitewordpath_triangle_grid": 358, "words_al": 358, "abstractword": 358, "aaabbbccddef": 358, "finitewordpath_hexagonal_grid_cal": 358, "finitewordpath_hexagonal_grid_callable_with_cach": 358, "finitewordpath_hexagonal_grid_it": 358, "finitewordpath_hexagonal_grid_iter_with_cach": 358, "finitewordpath_hexagonal_grid_list": 358, "finitewordpath_hexagonal_grid_str": 358, "finitewordpath_hexagonal_grid_tupl": 358, "finitewordpath_north_east_cal": 358, "finitewordpath_north_east_callable_with_cach": 358, "finitewordpath_north_east_it": 358, "finitewordpath_north_east_iter_with_cach": 358, "finitewordpath_north_east_list": 358, "finitewordpath_north_east_str": 358, "finitewordpath_north_east_tupl": 358, "finitewordpath_square_grid": 358, "aabbaabb": 358, "aabbabab": 358, "dual_fibonacci_til": [358, 364], "a001653": 358, "first_term": 358, "33461": 358, "195025": 358, "1136689": 358, "6625109": 358, "38613965": 358, "225058681": 358, "1311738121": 358, "7645370045": 358, "44560482149": 358, "259717522849": 358, "1513744654945": 358, "8822750406821": 358, "51422757785981": 358, "299713796309065": 358, "1746860020068409": 358, "10181446324101389": 358, "59341817924539925": 358, "ababaabb": 358, "aaabbbaabb": 358, "proven\u00e7": 358, "mot": 358, "g\u00e9ometri": 358, "discr\u00e8t": 358, "pavag": 358, "th\u00e8se": 358, "doctorat": 358, "montr\u00e9al": 358, "septembr": 358, "finitewordpath_square_grid_cal": 358, "finitewordpath_square_grid_callable_with_cach": 358, "finitewordpath_square_grid_it": 358, "finitewordpath_square_grid_iter_with_cach": 358, "finitewordpath_square_grid_list": 358, "finitewordpath_square_grid_str": 358, "finitewordpath_square_grid_tupl": 358, "abacacacababababcbcbac": 358, "66025403784439": 358, "866025403784439": 358, "finitewordpath_triangle_grid_cal": 358, "finitewordpath_triangle_grid_callable_with_cach": 358, "finitewordpath_triangle_grid_it": 358, "finitewordpath_triangle_grid_iter_with_cach": 358, "finitewordpath_triangle_grid_list": 358, "finitewordpath_triangle_grid_str": 358, "finitewordpath_triangle_grid_tupl": 358, "hexagonal_grid": 358, "cric": 358, "crac": 358, "croc": 358, "ruld": 358, "wordpaths_al": 358, "vector_spac": 358, "732050807568878": 358, "wordpaths_cube_grid": 358, "wordpaths_dyck": 358, "wordpaths_hexagonal_grid": 358, "wordpaths_triangle_grid": 358, "wordpaths_north_east": 358, "wordpaths_square_grid": 358, "shuffleproduct_shift": 359, "misbehav": 359, "1342": 359, "3124": 359, "1423": 359, "1432": 359, "143": [359, 362], "decoratedsuffixtre": 360, "ds2004": 360, "square_vocabulari": 360, "truli": 360, "ukkonen": 360, "ukko1995": 360, "dealt": 360, "closest": 360, "_active_st": 360, "storag": 360, "aco": 360, "factoris": 360, "ib": 360, "0000100101": 360, "active_st": 360, "edge_iter": 360, "acao": 360, "cao": 360, "leftmost_covering_set": 360, "abaabaabbaaabaaba": 360, "abaca": 360, "tree_root": 360, "tree_orient": 360, "vertex_color": 360, "process_lett": 360, "suffix_link": 360, "suffix_walk": 360, "aw": 360, "end_nod": 360, "00110111011": 360, "to_explicit_suffix_tre": 360, "transition_function_dictionari": 360, "trie_type_dict": 360, "uncompactifi": 360, "xa": 360, "node_to_word": 360, "abcba": 360, "abcb": 360, "ababba": 360, "ababbaa": 360, "_transition_funct": 360, "finiteword_cal": 361, "666666666333333333333333333333": 361, "finiteword_callable_with_cach": 361, "01201201201201201201201201201201": 361, "01201201201201201201201201201": 361, "finiteword_char": [361, 362], "worddatatype_char": [361, 362], "123456789123456789": 361, "randint": [361, 364], "finiteword_it": 361, "111111111": 361, "cdefab": 361, "finiteword_list": [361, 364], "0102010301020104010201030102010501020103": [361, 364], "finiteword_morph": 361, "worddatatype_morph": 361, "finiteword_str": 361, "finiteword_tupl": 361, "infiniteword_cal": 361, "braquet": 361, "infiniteword_callable_with_cach": 361, "infiniteword_it": 361, "letsgo": 361, "letsgoforeverforeverforeverforeverforev": 361, "infiniteword_iter_with_cach": 361, "9849849849849849849849849849849849849849": 361, "98498498498498498498498": 361, "infiniteword_morph": 361, "rsk_data": 361, "freemonoid": 361, "xxxyxzzx": 361, "word_it": 361, "1149114911491149114911491149114911491149": 361, "2112112112112112112112112112112112112112": 361, "word_iter_with_cach": 361, "1231231231231231231231231231231231231231": 361, "1101101101101101101101101101101101101101": 361, "word_char": 362, "worddatatyp": [362, 363, 365], "021000": 362, "5000": 362, "608": 362, "reversed_word_iter": 362, "__reversed__": 362, "word_datatyp": 363, "_parent": 363, "anywher": 363, "builtin": 363, "mytailorispoor": 363, "ispoor": 363, "3230301030323212323032321210121232121010": [363, 364], "0301030323212323032321210121232121010": 363, "papa": 363, "etait": 363, "un": 363, "petit": 363, "pioupiou": 363, "maxsplit": 363, "sentenc": 363, "poor": 363, "ababbabaaba": 363, "3230301030323212323032321": 363, "30301030": 363, "7543": 364, "ac03": 364, "adamczewski": 364, "transcend": 364, "bmbgl07": 364, "blondin": 364, "mass\u00e9": 364, "brlek": 364, "bmbgl09": 364, "garon": 364, "dgci": 364, "fogg": 364, "pythea": 364, "lirmm": 364, "pytheasfogg": 364, "adiqu": 364, "word_gener": 364, "lowerchristoffelword": 364, "00100100101": 364, "aabaabaabab": 364, "markoff_numb": 364, "markoff": 364, "m0": 364, "294685": 364, "7561": 364, "00100100100101": 364, "0101011010101101011": 364, "0101011010101101011010101101010110101101": 364, "wordgener": 364, "christoffelword": 364, "0010010100101": 364, "1311131221": 364, "1010110101101101011010110110101101101011": 364, "tmword": 364, "s_adic": 364, "abbaababbaabbaabbaababbaababbaabbaababba": 364, "baumsweetword": 364, "baum": 364, "sweet": 364, "submonoid": 364, "sweet_sequ": 364, "1101100101001001100100000100100101001001": 364, "bin": 364, "irrat": 364, "ac_": 364, "intercept": 364, "orderedalphabet": 364, "11110": 364, "01001001001001": 364, "0000001000000100000010000001000000100000": 364, "rsrrsrsrrsrrsrsrrsrsrrsrrsrsrrsrrsrsrrsr": 364, "0100100101001001001010010010010100100101": 364, "01001001": 364, "01001001010": 364, "010010010100100100101001001001": 364, "1101010101001010101011010101010010101010": 364, "yyxyxyxyxyxxyxyxyxyxyyxyxyxyxyxxyxyxyxyx": 364, "construction_method": 364, "golden": 364, "4144141441441414414144144141441441414414": 364, "fixedpointofmorph": 364, "first_lett": 364, "kolakoski": 364, "oldenburg": 364, "1221121221221121122121121221121121221221": 364, "2211212212211211221211212211211212212211": 364, "2255222225555522552255225555522222555552": 364, "kolakoski66": 364, "5304": 364, "monthli": 364, "necdet": 364, "\u00fc\u00e7oluk": 364, "681": 364, "0010010100100101001010010010100100101001": 364, "0000100001000010000100001000010000100001": 364, "0001001001001001001001000100100100100100": 364, "minimalsmoothprefix": 364, "bmp2007": 364, "1212212112": 364, "palindromicdefectword": 364, "hamel": 364, "nivat": 364, "abbbbbbbbbbabbbbbbbbbaabbbbbbbbbabbbbbbb": 364, "abbbabbaabbabbba": 364, "cdddcddccddcdddc": 364, "c333c33cc33c333c": 364, "0110100101": 364, "0322313320": 364, "2630644023642516442650025611300034413310": 364, "acebeaaccdbedbbbdeadeebbdeeebeaaacbadaac": 364, "dcacbbecbddebaadd": 364, "standardepisturmianword": 364, "directive_word": 364, "epistandard": 364, "x_1x_2x_3": 364, "jp2002": 364, "gj2007": 364, "abacabaabacababacabaabacabacabaabacababa": 364, "aabcabada": 364, "aabaacaabaaabaacaabaabaacaabaaabaacaabaa": 364, "abaabaababaabaabaababaabaababaabaabaabab": 364, "abaabaababaabaabaababaaba": 364, "abaabacabaabaabacabaababaabacabaabaabaca": 364, "brlek89": 364, "mh38": 364, "0112122012202001122020012001011212202001": 364, "0120112012201200120112012120122012001201": 364, "hedlund": 364, "815": 364, "upperchristoffelword": 364, "xui": 364, "yux": 364, "10100100100": 364, "uppermechanicalword": 364, "1010010100100101001010010010100100101001": 364, "1000010000100001000010000100001000010000": 364, "1001001001001001001001000100100100100100": 364, "32123032301030121012": 364, "3212303230103230321232101232123032123210": 364, "323030101212": 364, "hg": 364, "ef": 364, "ghhg": 364, "eca": 364, "ghhggh": 364, "ghghhg": 364, "hypothesi": 364, "ecb": 364, "versatil": 364, "tmwordtf": 364, "prandom": 364, "abbaabababbaababbaabbaababbaabababbaabba": 364, "abbaababbaabbaababbaababbaabbaababbaabba": 364, "abaaababaabaabaaababaabaaababaaababaabaa": 364, "cddc": 364, "cddcdccddccdcddcdccdcddccddcdccddccdcddc": 364, "bbba": 364, "bbbba": 364, "bbbbba": 364, "bbbbbba": 364, "bbbbbbba": 364, "x_h": 364, "3111": 364, "31111": 364, "3232232232322322322323223223232232232232": 364, "word_infinite_datatyp": 365, "_letter_cach": 365, "abbabaabbaababbabaababbaabbabaabbaababbaabbabaabab": 365, "abbabaababbabaababbabaababbabaababbabaab": 365, "_len": 365, "_last_index": 365, "word_opt": 366, "truncate_length": 366, "word_inheritance_howto": 367, "6571": 367, "19619": 367, "abstractlanguag": 367, "identity_morph": 367, "finiteorinfiniteword": 367, "iter_morph": 367, "transmit": 367, "5114325445423521544531411434451152142155": 367, "abbbabbaabbbabbabbaabaabbabbbbbbbbaabbbb": 367, "3333223322232233333223323223222233233233": 367, "words_n": 367, "96889010407": 367, "bbab": 367, "yang_baxter_graph": 368, "swapincreasingoper": 368, "swapoper": 368, "yangbaxtergraph": 368, "yangbaxtergraph_partit": 368, "yangbaxtergraph_gener": 368, "bubbl": 368, "bubbleswap": 368, "permutahedron": 368, "swapper": 368, "left_multiplication_bi": 368, "cyclicpermutationgroup": 368, "relabel_edg": 368, "edge_dict": 368, "relabel_op": 368, "relabel_vertic": 368, "relabel_oper": 368, "vertex_relabelling_dict": 368, "c_0a_n": 369, "c_1a_": 369, "cfinitesequ": 369, "gk1982": 369, "kp2011": 369, "sz1994": 369, "zei2011": 369, "ogf": 369, "fieldel": 369, "closed_form": 369, "binet": 369, "full_simplifi": 369, "recurrence_repr": 369, "laurent_series_ring_el": 369, "laurentseri": 369, "cfinitesequences_gener": 369, "polynomial_r": 369, "commutativ": 369, "lll": 369, "bm": 369, "berlekamp": 369, "massei": 369, "ngen": 369}, "objects": {"sage.combinat": [[2, 0, 0, "-", "abstract_tree"], [3, 0, 0, "-", "affine_permutation"], [4, 0, 0, "-", "algebraic_combinatorics"], [5, 0, 0, "-", "all"], [6, 0, 0, "-", "alternating_sign_matrix"], [7, 0, 0, "-", "backtrack"], [8, 0, 0, "-", "baxter_permutations"], [9, 0, 0, "-", "binary_recurrence_sequences"], [10, 0, 0, "-", "binary_tree"], [11, 0, 0, "-", "blob_algebra"], [12, 0, 0, "-", "cartesian_product"], [13, 0, 0, "-", "catalog_partitions"], [23, 0, 0, "-", "cluster_complex"], [24, 0, 0, "-", "colored_permutations"], [25, 0, 0, "-", "combinat"], [26, 0, 0, "-", "combinat_cython"], [27, 0, 0, "-", "combination"], [28, 0, 0, "-", "combinatorial_map"], [29, 0, 0, "-", "composition"], [30, 0, 0, "-", "composition_signed"], [31, 0, 0, "-", "composition_tableau"], [32, 0, 0, "-", "constellation"], [33, 0, 0, "-", "core"], [34, 0, 0, "-", "counting"], [69, 0, 0, "-", "cyclic_sieving_phenomenon"], [70, 0, 0, "-", "debruijn_sequence"], [71, 0, 0, "-", "degree_sequences"], [72, 0, 0, "-", "derangements"], [73, 0, 0, "-", "descent_algebra"], [96, 0, 0, "-", "diagram"], [97, 0, 0, "-", "diagram_algebras"], [98, 0, 0, "-", "dlx"], [99, 0, 0, "-", "dyck_word"], [100, 0, 0, "-", "e_one_star"], [101, 0, 0, "-", "enumerated_sets"], [102, 0, 0, "-", "enumeration_mod_permgroup"], [103, 0, 0, "-", "expnums"], [104, 0, 0, "-", "family"], [105, 0, 0, "-", "fast_vector_partitions"], [106, 0, 0, "-", "finite_state_machine"], [107, 0, 0, "-", "finite_state_machine_generators"], [108, 0, 0, "-", "fqsym"], [109, 0, 0, "-", "free_dendriform_algebra"], [110, 0, 0, "-", "free_module"], [111, 0, 0, "-", "free_prelie_algebra"], [112, 0, 0, "-", "fully_commutative_elements"], [113, 0, 0, "-", "fully_packed_loop"], [114, 0, 0, "-", "gelfand_tsetlin_patterns"], [115, 0, 0, "-", "graph_path"], [116, 0, 0, "-", "gray_codes"], [117, 0, 0, "-", "grossman_larson_algebras"], [118, 0, 0, "-", "growth"], [119, 0, 0, "-", "hall_polynomial"], [120, 0, 0, "-", "hillman_grassl"], [124, 0, 0, "-", "integer_matrices"], [125, 0, 0, "-", "integer_vector"], [126, 0, 0, "-", "integer_vector_weighted"], [127, 0, 0, "-", "integer_vectors_mod_permgroup"], [128, 0, 0, "-", "interval_posets"], [129, 0, 0, "-", "k_regular_sequence"], [130, 0, 0, "-", "k_tableau"], [131, 0, 0, "-", "kazhdan_lusztig"], [132, 0, 0, "-", "knutson_tao_puzzles"], [138, 0, 0, "-", "misc"], [139, 0, 0, "-", "multiset_partition_into_sets_ordered"], [150, 0, 0, "-", "necklace"], [151, 0, 0, "-", "non_decreasing_parking_function"], [152, 0, 0, "-", "nu_dyck_word"], [153, 0, 0, "-", "nu_tamari_lattice"], [154, 0, 0, "-", "ordered_tree"], [155, 0, 0, "-", "output"], [156, 0, 0, "-", "parallelogram_polyomino"], [157, 0, 0, "-", "parking_functions"], [158, 0, 0, "-", "partition"], [159, 0, 0, "-", "partition_algebra"], [160, 0, 0, "-", "partition_kleshchev"], [161, 0, 0, "-", "partition_shifting_algebras"], [162, 0, 0, "-", "partition_tuple"], [163, 0, 0, "-", "partitions"], [169, 0, 0, "-", "perfect_matching"], [170, 0, 0, "-", "permutation"], [171, 0, 0, "-", "permutation_cython"], [172, 0, 0, "-", "plane_partition"], [186, 0, 0, "-", "q_analogues"], [187, 0, 0, "-", "q_bernoulli"], [188, 0, 0, "-", "quickref"], [189, 0, 0, "-", "ranker"], [190, 0, 0, "-", "recognizable_series"], [191, 0, 0, "-", "restricted_growth"], [192, 0, 0, "-", "ribbon"], [193, 0, 0, "-", "ribbon_shaped_tableau"], [194, 0, 0, "-", "ribbon_tableau"], [272, 0, 0, "-", "rooted_tree"], [273, 0, 0, "-", "rsk"], [274, 0, 0, "-", "schubert_polynomial"], [275, 0, 0, "-", "set_partition"], [276, 0, 0, "-", "set_partition_ordered"], [302, 0, 0, "-", "shard_order"], [303, 0, 0, "-", "shifted_primed_tableau"], [304, 0, 0, "-", "shuffle"], [305, 0, 0, "-", "sidon_sets"], [306, 0, 0, "-", "similarity_class_type"], [307, 0, 0, "-", "sine_gordon"], [308, 0, 0, "-", "six_vertex_model"], [309, 0, 0, "-", "skew_partition"], [310, 0, 0, "-", "skew_tableau"], [311, 0, 0, "-", "sloane_functions"], [331, 0, 0, "-", "subset"], [332, 0, 0, "-", "subsets_hereditary"], [333, 0, 0, "-", "subsets_pairwise"], [334, 0, 0, "-", "subword"], [335, 0, 0, "-", "subword_complex"], [336, 0, 0, "-", "super_tableau"], [337, 0, 0, "-", "superpartition"], [338, 0, 0, "-", "symmetric_group_algebra"], [339, 0, 0, "-", "symmetric_group_representations"], [340, 0, 0, "-", "t_sequences"], [341, 0, 0, "-", "tableau"], [342, 0, 0, "-", "tableau_residues"], [343, 0, 0, "-", "tableau_tuple"], [344, 0, 0, "-", "tamari_lattices"], [345, 0, 0, "-", "tiling"], [346, 0, 0, "-", "tools"], [347, 0, 0, "-", "triangles_FHM"], [348, 0, 0, "-", "tuple"], [349, 0, 0, "-", "tutorial"], [350, 0, 0, "-", "vector_partition"], [351, 0, 0, "-", "words"], [368, 0, 0, "-", "yang_baxter_graph"]], "sage.combinat.abstract_tree": [[2, 1, 1, "", "AbstractClonableTree"], [2, 1, 1, "", "AbstractLabelledClonableTree"], [2, 1, 1, "", "AbstractLabelledTree"], [2, 1, 1, "", "AbstractTree"], [2, 3, 1, "", "from_hexacode"]], "sage.combinat.abstract_tree.AbstractClonableTree": [[2, 2, 1, "", "check"]], "sage.combinat.abstract_tree.AbstractLabelledClonableTree": [[2, 2, 1, "", "map_labels"], [2, 2, 1, "", "set_label"], [2, 2, 1, "", "set_root_label"]], "sage.combinat.abstract_tree.AbstractLabelledTree": [[2, 2, 1, "", "as_digraph"], [2, 2, 1, "", "label"], [2, 2, 1, "", "labels"], [2, 2, 1, "", "leaf_labels"], [2, 2, 1, "", "shape"]], "sage.combinat.abstract_tree.AbstractTree": [[2, 2, 1, "", "breadth_first_order_traversal"], [2, 2, 1, "", "canonical_labelling"], [2, 2, 1, "", "depth"], [2, 2, 1, "", "iterative_post_order_traversal"], [2, 2, 1, "", "iterative_pre_order_traversal"], [2, 2, 1, "", "node_number"], [2, 2, 1, "", "node_number_at_depth"], [2, 2, 1, "", "node_number_to_the_right"], [2, 2, 1, "", "paths"], [2, 2, 1, "", "paths_at_depth"], [2, 2, 1, "", "paths_to_the_right"], [2, 2, 1, "", "post_order_traversal"], [2, 2, 1, "", "post_order_traversal_iter"], [2, 2, 1, "", "pre_order_traversal"], [2, 2, 1, "", "pre_order_traversal_iter"], [2, 2, 1, "", "subtrees"], [2, 2, 1, "", "to_hexacode"], [2, 2, 1, "", "tree_factorial"]], "sage.combinat.affine_permutation": [[3, 1, 1, "", "AffinePermutation"], [3, 3, 1, "", "AffinePermutationGroup"], [3, 1, 1, "", "AffinePermutationGroupGeneric"], [3, 1, 1, "", "AffinePermutationGroupTypeA"], [3, 1, 1, "", "AffinePermutationGroupTypeB"], [3, 1, 1, "", "AffinePermutationGroupTypeC"], [3, 1, 1, "", "AffinePermutationGroupTypeD"], [3, 1, 1, "", "AffinePermutationGroupTypeG"], [3, 1, 1, "", "AffinePermutationTypeA"], [3, 1, 1, "", "AffinePermutationTypeB"], [3, 1, 1, "", "AffinePermutationTypeC"], [3, 1, 1, "", "AffinePermutationTypeD"], [3, 1, 1, "", "AffinePermutationTypeG"]], "sage.combinat.affine_permutation.AffinePermutation": [[3, 2, 1, "", "apply_simple_reflection"], [3, 2, 1, "", "grassmannian_quotient"], [3, 2, 1, "", "index_set"], [3, 2, 1, "", "is_i_grassmannian"], [3, 2, 1, "", "is_one"], [3, 2, 1, "", "lower_covers"], [3, 2, 1, "", "reduced_word"], [3, 2, 1, "", "signature"], [3, 2, 1, "", "to_weyl_group_element"]], "sage.combinat.affine_permutation.AffinePermutationGroupGeneric": [[3, 2, 1, "", "cartan_matrix"], [3, 2, 1, "", "cartan_type"], [3, 2, 1, "", "classical"], [3, 2, 1, "", "from_word"], [3, 2, 1, "", "index_set"], [3, 2, 1, "", "is_crystallographic"], [3, 2, 1, "", "random_element"], [3, 2, 1, "", "rank"], [3, 2, 1, "", "reflection_index_set"], [3, 2, 1, "", "weyl_group"]], "sage.combinat.affine_permutation.AffinePermutationGroupTypeA": [[3, 4, 1, "", "Element"], [3, 2, 1, "", "from_lehmer_code"], [3, 2, 1, "", "one"]], "sage.combinat.affine_permutation.AffinePermutationGroupTypeB": [[3, 4, 1, "", "Element"]], "sage.combinat.affine_permutation.AffinePermutationGroupTypeC": [[3, 4, 1, "", "Element"], [3, 2, 1, "", "one"]], "sage.combinat.affine_permutation.AffinePermutationGroupTypeD": [[3, 4, 1, "", "Element"]], "sage.combinat.affine_permutation.AffinePermutationGroupTypeG": [[3, 4, 1, "", "Element"], [3, 2, 1, "", "one"]], "sage.combinat.affine_permutation.AffinePermutationTypeA": [[3, 2, 1, "", "apply_simple_reflection_left"], [3, 2, 1, "", "apply_simple_reflection_right"], [3, 2, 1, "", "check"], [3, 2, 1, "", "flip_automorphism"], [3, 2, 1, "", "has_left_descent"], [3, 2, 1, "", "has_right_descent"], [3, 2, 1, "", "is_fully_commutative"], [3, 2, 1, "", "maximal_cyclic_decomposition"], [3, 2, 1, "", "maximal_cyclic_factor"], [3, 2, 1, "", "position"], [3, 2, 1, "", "promotion"], [3, 2, 1, "", "tableau_of_word"], [3, 2, 1, "", "to_bounded_partition"], [3, 2, 1, "", "to_core"], [3, 2, 1, "", "to_dominant"], [3, 2, 1, "", "to_lehmer_code"], [3, 2, 1, "", "to_type_a"], [3, 2, 1, "", "value"]], "sage.combinat.affine_permutation.AffinePermutationTypeB": [[3, 2, 1, "", "apply_simple_reflection_left"], [3, 2, 1, "", "apply_simple_reflection_right"], [3, 2, 1, "", "check"], [3, 2, 1, "", "has_left_descent"], [3, 2, 1, "", "has_right_descent"]], "sage.combinat.affine_permutation.AffinePermutationTypeC": [[3, 2, 1, "", "apply_simple_reflection_left"], [3, 2, 1, "", "apply_simple_reflection_right"], [3, 2, 1, "", "check"], [3, 2, 1, "", "has_left_descent"], [3, 2, 1, "", "has_right_descent"], [3, 2, 1, "", "position"], [3, 2, 1, "", "to_type_a"], [3, 2, 1, "", "value"]], "sage.combinat.affine_permutation.AffinePermutationTypeD": [[3, 2, 1, "", "apply_simple_reflection_left"], [3, 2, 1, "", "apply_simple_reflection_right"], [3, 2, 1, "", "check"], [3, 2, 1, "", "has_left_descent"], [3, 2, 1, "", "has_right_descent"]], "sage.combinat.affine_permutation.AffinePermutationTypeG": [[3, 2, 1, "", "apply_simple_reflection_left"], [3, 2, 1, "", "apply_simple_reflection_right"], [3, 2, 1, "", "check"], [3, 2, 1, "", "has_left_descent"], [3, 2, 1, "", "has_right_descent"], [3, 2, 1, "", "position"], [3, 2, 1, "", "to_type_a"], [3, 2, 1, "", "value"]], "sage.combinat.alternating_sign_matrix": [[6, 1, 1, "", "AlternatingSignMatrices"], [6, 1, 1, "", "AlternatingSignMatrix"], [6, 1, 1, "", "ContreTableaux"], [6, 1, 1, "", "ContreTableaux_n"], [6, 1, 1, "", "MonotoneTriangles"], [6, 1, 1, "", "TruncatedStaircases"], [6, 1, 1, "", "TruncatedStaircases_nlastcolumn"]], "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices": [[6, 4, 1, "", "Element"], [6, 2, 1, "", "cardinality"], [6, 2, 1, "", "cover_relations"], [6, 2, 1, "", "first"], [6, 2, 1, "", "from_contre_tableau"], [6, 2, 1, "", "from_corner_sum"], [6, 2, 1, "", "from_height_function"], [6, 2, 1, "", "from_monotone_triangle"], [6, 2, 1, "", "gyration_orbit_sizes"], [6, 2, 1, "", "gyration_orbits"], [6, 2, 1, "", "last"], [6, 2, 1, "", "lattice"], [6, 2, 1, "", "matrix_space"], [6, 2, 1, "", "random_element"], [6, 2, 1, "", "size"]], "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix": [[6, 2, 1, "", "ASM_compatible"], [6, 2, 1, "", "ASM_compatible_bigger"], [6, 2, 1, "", "ASM_compatible_smaller"], [6, 2, 1, "", "corner_sum_matrix"], [6, 2, 1, "", "gyration"], [6, 2, 1, "", "gyration_orbit"], [6, 2, 1, "", "height_function"], [6, 2, 1, "", "inversion_number"], [6, 2, 1, "", "is_permutation"], [6, 2, 1, "", "left_key"], [6, 2, 1, "", "left_key_as_permutation"], [6, 2, 1, "", "link_pattern"], [6, 2, 1, "", "number_negative_ones"], [6, 2, 1, "", "rotate_ccw"], [6, 2, 1, "", "rotate_cw"], [6, 2, 1, "", "to_dyck_word"], [6, 2, 1, "", "to_fully_packed_loop"], [6, 2, 1, "", "to_matrix"], [6, 2, 1, "", "to_monotone_triangle"], [6, 2, 1, "", "to_permutation"], [6, 2, 1, "", "to_semistandard_tableau"], [6, 2, 1, "", "to_six_vertex_model"], [6, 2, 1, "", "transpose"]], "sage.combinat.alternating_sign_matrix.ContreTableaux_n": [[6, 2, 1, "", "cardinality"]], "sage.combinat.alternating_sign_matrix.MonotoneTriangles": [[6, 2, 1, "", "cardinality"], [6, 2, 1, "", "cover_relations"], [6, 2, 1, "", "lattice"]], "sage.combinat.alternating_sign_matrix.TruncatedStaircases_nlastcolumn": [[6, 2, 1, "", "cardinality"]], "sage.combinat.backtrack": [[7, 1, 1, "", "GenericBacktracker"], [7, 1, 1, "", "PositiveIntegerSemigroup"]], "sage.combinat.backtrack.PositiveIntegerSemigroup": [[7, 2, 1, "", "children"], [7, 2, 1, "", "one"], [7, 2, 1, "", "roots"]], "sage.combinat.baxter_permutations": [[8, 1, 1, "", "BaxterPermutations"], [8, 1, 1, "", "BaxterPermutations_all"], [8, 1, 1, "", "BaxterPermutations_size"]], "sage.combinat.baxter_permutations.BaxterPermutations_all": [[8, 2, 1, "", "to_pair_of_twin_binary_trees"]], "sage.combinat.baxter_permutations.BaxterPermutations_size": [[8, 2, 1, "", "cardinality"]], "sage.combinat.binary_recurrence_sequences": [[9, 1, 1, "", "BinaryRecurrenceSequence"]], "sage.combinat.binary_recurrence_sequences.BinaryRecurrenceSequence": [[9, 2, 1, "", "is_arithmetic"], [9, 2, 1, "", "is_degenerate"], [9, 2, 1, "", "is_geometric"], [9, 2, 1, "", "is_quasigeometric"], [9, 2, 1, "", "period"], [9, 2, 1, "", "pthpowers"]], "sage.combinat.binary_tree": [[10, 1, 1, "", "BinaryTree"], [10, 1, 1, "", "BinaryTrees"], [10, 1, 1, "", "BinaryTrees_all"], [10, 1, 1, "", "BinaryTrees_size"], [10, 1, 1, "", "FullBinaryTrees_all"], [10, 1, 1, "", "FullBinaryTrees_size"], [10, 1, 1, "", "LabelledBinaryTree"], [10, 1, 1, "", "LabelledBinaryTrees"], [10, 3, 1, "", "binary_search_tree_shape"], [10, 3, 1, "", "from_tamari_sorting_tuple"]], "sage.combinat.binary_tree.BinaryTree": [[10, 2, 1, "", "as_ordered_tree"], [10, 2, 1, "", "canonical_labelling"], [10, 2, 1, "", "canopee"], [10, 2, 1, "", "check"], [10, 2, 1, "", "comb"], [10, 2, 1, "", "dendriform_shuffle"], [10, 2, 1, "", "graph"], [10, 2, 1, "", "hook_number"], [10, 2, 1, "", "in_order_traversal"], [10, 2, 1, "", "in_order_traversal_iter"], [10, 2, 1, "", "is_complete"], [10, 2, 1, "", "is_empty"], [10, 2, 1, "", "is_full"], [10, 2, 1, "", "is_perfect"], [10, 2, 1, "", "left_border_symmetry"], [10, 2, 1, "", "left_children_node_number"], [10, 2, 1, "", "left_right_symmetry"], [10, 2, 1, "", "left_rotate"], [10, 2, 1, "", "make_leaf"], [10, 2, 1, "", "make_node"], [10, 2, 1, "", "over"], [10, 2, 1, "", "over_decomposition"], [10, 2, 1, "", "prune"], [10, 2, 1, "", "q_hook_length_fraction"], [10, 2, 1, "", "right_rotate"], [10, 2, 1, "", "show"], [10, 2, 1, "", "single_edge_cut_shapes"], [10, 2, 1, "", "sylvester_class"], [10, 2, 1, "", "tamari_greater"], [10, 2, 1, "", "tamari_interval"], [10, 2, 1, "", "tamari_join"], [10, 2, 1, "", "tamari_lequal"], [10, 2, 1, "", "tamari_meet"], [10, 2, 1, "", "tamari_pred"], [10, 2, 1, "", "tamari_smaller"], [10, 2, 1, "", "tamari_sorting_tuple"], [10, 2, 1, "", "tamari_succ"], [10, 2, 1, "", "to_132_avoiding_permutation"], [10, 2, 1, "", "to_312_avoiding_permutation"], [10, 2, 1, "", "to_dyck_word"], [10, 2, 1, "", "to_dyck_word_tamari"], [10, 2, 1, "", "to_full"], [10, 2, 1, "", "to_ordered_tree_left_branch"], [10, 2, 1, "", "to_ordered_tree_right_branch"], [10, 2, 1, "", "to_poset"], [10, 2, 1, "", "to_tilting"], [10, 2, 1, "", "to_undirected_graph"], [10, 2, 1, "", "twisting_number"], [10, 2, 1, "", "under"], [10, 2, 1, "", "under_decomposition"]], "sage.combinat.binary_tree.BinaryTrees": [[10, 2, 1, "", "leaf"]], "sage.combinat.binary_tree.BinaryTrees_all": [[10, 4, 1, "", "Element"], [10, 2, 1, "", "labelled_trees"], [10, 2, 1, "", "unlabelled_trees"]], "sage.combinat.binary_tree.BinaryTrees_size": [[10, 2, 1, "", "cardinality"], [10, 2, 1, "", "random_element"]], "sage.combinat.binary_tree.FullBinaryTrees_size": [[10, 2, 1, "", "cardinality"], [10, 2, 1, "", "random_element"]], "sage.combinat.binary_tree.LabelledBinaryTree": [[10, 2, 1, "", "binary_search_insert"], [10, 2, 1, "", "heap_insert"], [10, 2, 1, "", "left_rotate"], [10, 2, 1, "", "right_rotate"], [10, 2, 1, "", "semistandard_insert"]], "sage.combinat.binary_tree.LabelledBinaryTrees": [[10, 4, 1, "", "Element"], [10, 2, 1, "", "labelled_trees"], [10, 2, 1, "", "unlabelled_trees"]], "sage.combinat.blob_algebra": [[11, 1, 1, "", "BlobAlgebra"], [11, 1, 1, "", "BlobDiagram"], [11, 1, 1, "", "BlobDiagrams"]], "sage.combinat.blob_algebra.BlobAlgebra": [[11, 2, 1, "", "one_basis"], [11, 2, 1, "", "order"], [11, 2, 1, "", "product_on_basis"]], "sage.combinat.blob_algebra.BlobDiagram": [[11, 2, 1, "", "temperley_lieb_diagram"]], "sage.combinat.blob_algebra.BlobDiagrams": [[11, 4, 1, "", "Element"], [11, 2, 1, "", "base_set"], [11, 2, 1, "", "cardinality"], [11, 2, 1, "", "order"]], "sage.combinat.cartesian_product": [[12, 1, 1, "", "CartesianProduct_iters"]], "sage.combinat.cartesian_product.CartesianProduct_iters": [[12, 2, 1, "", "cardinality"], [12, 2, 1, "", "is_finite"], [12, 2, 1, "", "list"], [12, 2, 1, "", "random_element"], [12, 2, 1, "", "unrank"]], "sage.combinat.chas": [[14, 0, 0, "-", "all"], [15, 0, 0, "-", "fsym"], [16, 0, 0, "-", "wqsym"]], "sage.combinat.chas.fsym": [[15, 1, 1, "", "FSymBases"], [15, 1, 1, "", "FSymBasis_abstract"], [15, 1, 1, "", "FreeSymmetricFunctions"], [15, 1, 1, "", "FreeSymmetricFunctions_Dual"], [15, 3, 1, "", "ascent_set"], [15, 3, 1, "", "descent_composition"], [15, 3, 1, "", "descent_set"], [15, 3, 1, "", "standardize"]], "sage.combinat.chas.fsym.FSymBases": [[15, 1, 1, "", "ElementMethods"], [15, 1, 1, "", "ParentMethods"], [15, 2, 1, "", "super_categories"]], "sage.combinat.chas.fsym.FSymBases.ElementMethods": [[15, 2, 1, "", "duality_pairing"]], "sage.combinat.chas.fsym.FSymBases.ParentMethods": [[15, 2, 1, "", "basis"], [15, 2, 1, "", "degree_on_basis"], [15, 2, 1, "", "duality_pairing"], [15, 2, 1, "", "duality_pairing_matrix"], [15, 2, 1, "", "one_basis"]], "sage.combinat.chas.fsym.FSymBasis_abstract": [[15, 2, 1, "", "some_elements"]], "sage.combinat.chas.fsym.FreeSymmetricFunctions": [[15, 1, 1, "", "Fundamental"], [15, 4, 1, "", "G"], [15, 2, 1, "", "a_realization"], [15, 2, 1, "", "dual"]], "sage.combinat.chas.fsym.FreeSymmetricFunctions.Fundamental": [[15, 1, 1, "", "Element"], [15, 2, 1, "", "coproduct_on_basis"], [15, 2, 1, "", "dual_basis"], [15, 2, 1, "", "product_on_basis"]], "sage.combinat.chas.fsym.FreeSymmetricFunctions.Fundamental.Element": [[15, 2, 1, "", "to_fqsym"], [15, 2, 1, "", "to_symmetric_function"]], "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual": [[15, 4, 1, "", "F"], [15, 1, 1, "", "FundamentalDual"], [15, 2, 1, "", "a_realization"], [15, 2, 1, "", "dual"]], "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.FundamentalDual": [[15, 1, 1, "", "Element"], [15, 2, 1, "", "coproduct_on_basis"], [15, 2, 1, "", "dual_basis"], [15, 2, 1, "", "product_on_basis"]], "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.FundamentalDual.Element": [[15, 2, 1, "", "to_quasisymmetric_function"]], "sage.combinat.chas.wqsym": [[16, 1, 1, "", "WQSymBases"], [16, 1, 1, "", "WQSymBasis_abstract"], [16, 1, 1, "", "WordQuasiSymmetricFunctions"]], "sage.combinat.chas.wqsym.WQSymBases": [[16, 1, 1, "", "ElementMethods"], [16, 1, 1, "", "ParentMethods"], [16, 2, 1, "", "super_categories"]], "sage.combinat.chas.wqsym.WQSymBases.ElementMethods": [[16, 2, 1, "", "algebraic_complement"], [16, 2, 1, "", "coalgebraic_complement"], [16, 2, 1, "", "star_involution"], [16, 2, 1, "", "to_quasisymmetric_function"]], "sage.combinat.chas.wqsym.WQSymBases.ParentMethods": [[16, 2, 1, "", "degree_on_basis"], [16, 2, 1, "", "is_commutative"], [16, 2, 1, "", "is_field"], [16, 2, 1, "", "one_basis"]], "sage.combinat.chas.wqsym.WQSymBasis_abstract": [[16, 2, 1, "", "an_element"], [16, 4, 1, "", "options"], [16, 2, 1, "", "some_elements"]], "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions": [[16, 4, 1, "", "C"], [16, 1, 1, "", "Characteristic"], [16, 1, 1, "", "Cone"], [16, 4, 1, "", "M"], [16, 1, 1, "", "Monomial"], [16, 4, 1, "", "Phi"], [16, 4, 1, "", "Q"], [16, 1, 1, "", "StronglyCoarser"], [16, 1, 1, "", "StronglyFiner"], [16, 4, 1, "", "X"], [16, 2, 1, "", "a_realization"], [16, 4, 1, "", "options"]], "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Characteristic": [[16, 1, 1, "", "Element"]], "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Characteristic.Element": [[16, 2, 1, "", "algebraic_complement"], [16, 2, 1, "", "coalgebraic_complement"], [16, 2, 1, "", "star_involution"]], "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Cone": [[16, 2, 1, "", "some_elements"]], "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Monomial": [[16, 2, 1, "", "coproduct_on_basis"], [16, 2, 1, "", "product_on_basis"]], "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyCoarser": [[16, 1, 1, "", "Element"], [16, 2, 1, "", "coproduct_on_basis"], [16, 2, 1, "", "product_on_basis"], [16, 2, 1, "", "some_elements"]], "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyCoarser.Element": [[16, 2, 1, "", "algebraic_complement"], [16, 2, 1, "", "coalgebraic_complement"], [16, 2, 1, "", "star_involution"]], "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyFiner": [[16, 1, 1, "", "Element"], [16, 2, 1, "", "coproduct_on_basis"], [16, 2, 1, "", "product_on_basis"], [16, 2, 1, "", "some_elements"]], "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyFiner.Element": [[16, 2, 1, "", "algebraic_complement"], [16, 2, 1, "", "coalgebraic_complement"], [16, 2, 1, "", "star_involution"]], "sage.combinat.cluster_algebra_quiver": [[17, 0, 0, "-", "all"], [18, 0, 0, "-", "cluster_seed"], [19, 0, 0, "-", "mutation_class"], [20, 0, 0, "-", "mutation_type"], [21, 0, 0, "-", "quiver"], [22, 0, 0, "-", "quiver_mutation_type"]], "sage.combinat.cluster_algebra_quiver.cluster_seed": [[18, 1, 1, "", "ClusterSeed"], [18, 1, 1, "", "ClusterVariable"], [18, 3, 1, "", "PathSubset"], [18, 3, 1, "", "SetToPath"], [18, 3, 1, "", "coeff_recurs"], [18, 3, 1, "", "get_green_vertices"], [18, 3, 1, "", "get_red_vertices"], [18, 3, 1, "", "is_LeeLiZel_allowable"]], "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed": [[18, 2, 1, "", "LLM_gen_set"], [18, 2, 1, "", "b_matrix"], [18, 2, 1, "", "b_matrix_class"], [18, 2, 1, "", "b_matrix_class_iter"], [18, 2, 1, "", "c_matrix"], [18, 2, 1, "", "c_vector"], [18, 2, 1, "", "cluster"], [18, 2, 1, "", "cluster_class"], [18, 2, 1, "", "cluster_class_iter"], [18, 2, 1, "", "cluster_index"], [18, 2, 1, "", "cluster_variable"], [18, 2, 1, "", "coefficient"], [18, 2, 1, "", "coefficients"], [18, 2, 1, "", "d_matrix"], [18, 2, 1, "", "d_vector"], [18, 2, 1, "", "exchangeable_part"], [18, 2, 1, "", "f_polynomial"], [18, 2, 1, "", "f_polynomials"], [18, 2, 1, "", "find_upper_bound"], [18, 2, 1, "", "first_green_vertex"], [18, 2, 1, "", "first_red_vertex"], [18, 2, 1, "", "first_urban_renewal"], [18, 2, 1, "", "free_vertices"], [18, 2, 1, "", "frozen_vertices"], [18, 2, 1, "", "g_matrix"], [18, 2, 1, "", "g_vector"], [18, 2, 1, "", "get_upper_cluster_algebra_element"], [18, 2, 1, "", "greedy"], [18, 2, 1, "", "green_vertices"], [18, 2, 1, "", "ground_field"], [18, 2, 1, "", "highest_degree_denominator"], [18, 2, 1, "", "interact"], [18, 2, 1, "", "is_acyclic"], [18, 2, 1, "", "is_bipartite"], [18, 2, 1, "", "is_finite"], [18, 2, 1, "", "is_mutation_finite"], [18, 2, 1, "", "m"], [18, 2, 1, "", "most_decreased_denominator_after_mutation"], [18, 2, 1, "", "most_decreased_edge_after_mutation"], [18, 2, 1, "", "mutate"], [18, 2, 1, "", "mutation_analysis"], [18, 2, 1, "", "mutation_class"], [18, 2, 1, "", "mutation_class_iter"], [18, 2, 1, "", "mutation_sequence"], [18, 2, 1, "", "mutation_type"], [18, 2, 1, "", "mutations"], [18, 2, 1, "", "n"], [18, 2, 1, "", "oriented_exchange_graph"], [18, 2, 1, "", "plot"], [18, 2, 1, "", "principal_extension"], [18, 2, 1, "", "quiver"], [18, 2, 1, "", "red_vertices"], [18, 2, 1, "", "reorient"], [18, 2, 1, "", "reset_cluster"], [18, 2, 1, "", "reset_coefficients"], [18, 2, 1, "", "save_image"], [18, 2, 1, "", "set_c_matrix"], [18, 2, 1, "", "set_cluster"], [18, 2, 1, "", "show"], [18, 2, 1, "", "smallest_c_vector"], [18, 2, 1, "", "track_mutations"], [18, 2, 1, "", "universal_extension"], [18, 2, 1, "", "urban_renewals"], [18, 2, 1, "", "use_c_vectors"], [18, 2, 1, "", "use_d_vectors"], [18, 2, 1, "", "use_fpolys"], [18, 2, 1, "", "use_g_vectors"], [18, 2, 1, "", "variable_class"], [18, 2, 1, "", "variable_class_iter"], [18, 2, 1, "", "x"], [18, 2, 1, "", "y"]], "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterVariable": [[18, 2, 1, "", "almost_positive_root"]], "sage.combinat.cluster_algebra_quiver.mutation_type": [[20, 3, 1, "", "is_mutation_finite"], [20, 3, 1, "", "load_data"]], "sage.combinat.cluster_algebra_quiver.quiver": [[21, 1, 1, "", "ClusterQuiver"]], "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver": [[21, 2, 1, "", "b_matrix"], [21, 2, 1, "", "canonical_label"], [21, 2, 1, "", "d_vector_fan"], [21, 2, 1, "", "digraph"], [21, 2, 1, "", "exchangeable_part"], [21, 2, 1, "", "first_sink"], [21, 2, 1, "", "first_source"], [21, 2, 1, "", "free_vertices"], [21, 2, 1, "", "frozen_vertices"], [21, 2, 1, "", "g_vector_fan"], [21, 2, 1, "", "interact"], [21, 2, 1, "", "is_acyclic"], [21, 2, 1, "", "is_bipartite"], [21, 2, 1, "", "is_finite"], [21, 2, 1, "", "is_mutation_finite"], [21, 2, 1, "", "m"], [21, 2, 1, "", "mutate"], [21, 2, 1, "", "mutation_class"], [21, 2, 1, "", "mutation_class_iter"], [21, 2, 1, "", "mutation_sequence"], [21, 2, 1, "", "mutation_type"], [21, 2, 1, "", "n"], [21, 2, 1, "", "number_of_edges"], [21, 2, 1, "", "plot"], [21, 2, 1, "", "poincare_semistable"], [21, 2, 1, "", "principal_extension"], [21, 2, 1, "", "qmu_save"], [21, 2, 1, "", "relabel"], [21, 2, 1, "", "reorient"], [21, 2, 1, "", "save_image"], [21, 2, 1, "", "show"], [21, 2, 1, "", "sinks"], [21, 2, 1, "", "sources"]], "sage.combinat.cluster_algebra_quiver.quiver_mutation_type": [[22, 3, 1, "", "QuiverMutationType"], [22, 1, 1, "", "QuiverMutationTypeFactory"], [22, 1, 1, "", "QuiverMutationType_Irreducible"], [22, 1, 1, "", "QuiverMutationType_Reducible"], [22, 1, 1, "", "QuiverMutationType_abstract"], [22, 3, 1, "", "save_quiver_data"]], "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationTypeFactory": [[22, 2, 1, "", "samples"]], "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_Irreducible": [[22, 2, 1, "", "class_size"], [22, 2, 1, "", "dual"], [22, 2, 1, "", "irreducible_components"]], "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_Reducible": [[22, 2, 1, "", "class_size"], [22, 2, 1, "", "dual"], [22, 2, 1, "", "irreducible_components"]], "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract": [[22, 2, 1, "", "b_matrix"], [22, 2, 1, "", "cartan_matrix"], [22, 2, 1, "", "is_affine"], [22, 2, 1, "", "is_elliptic"], [22, 2, 1, "", "is_finite"], [22, 2, 1, "", "is_irreducible"], [22, 2, 1, "", "is_mutation_finite"], [22, 2, 1, "", "is_simply_laced"], [22, 2, 1, "", "is_skew_symmetric"], [22, 2, 1, "", "letter"], [22, 2, 1, "", "plot"], [22, 2, 1, "", "properties"], [22, 2, 1, "", "rank"], [22, 2, 1, "", "show"], [22, 2, 1, "", "standard_quiver"]], "sage.combinat.cluster_complex": [[23, 1, 1, "", "ClusterComplex"], [23, 1, 1, "", "ClusterComplexFacet"]], "sage.combinat.cluster_complex.ClusterComplex": [[23, 4, 1, "", "Element"], [23, 2, 1, "", "cyclic_rotation"], [23, 2, 1, "", "k"], [23, 2, 1, "", "minimal_nonfaces"]], "sage.combinat.cluster_complex.ClusterComplexFacet": [[23, 2, 1, "", "cluster"], [23, 2, 1, "", "product_of_upper_cluster"], [23, 2, 1, "", "upper_cluster"]], "sage.combinat.colored_permutations": [[24, 1, 1, "", "ColoredPermutation"], [24, 1, 1, "", "ColoredPermutations"], [24, 1, 1, "", "SignedPermutation"], [24, 1, 1, "", "SignedPermutations"]], "sage.combinat.colored_permutations.ColoredPermutation": [[24, 2, 1, "", "colors"], [24, 2, 1, "", "has_left_descent"], [24, 2, 1, "", "length"], [24, 2, 1, "", "one_line_form"], [24, 2, 1, "", "permutation"], [24, 2, 1, "", "reduced_word"], [24, 2, 1, "", "to_matrix"]], "sage.combinat.colored_permutations.ColoredPermutations": [[24, 4, 1, "", "Element"], [24, 2, 1, "", "as_permutation_group"], [24, 2, 1, "", "cardinality"], [24, 2, 1, "", "codegrees"], [24, 2, 1, "", "coxeter_matrix"], [24, 2, 1, "", "degrees"], [24, 2, 1, "", "fixed_point_polynomial"], [24, 2, 1, "", "gens"], [24, 2, 1, "", "index_set"], [24, 2, 1, "", "is_well_generated"], [24, 2, 1, "", "matrix_group"], [24, 2, 1, "", "number_of_reflection_hyperplanes"], [24, 2, 1, "", "one"], [24, 2, 1, "", "order"], [24, 2, 1, "", "rank"], [24, 2, 1, "", "simple_reflection"]], "sage.combinat.colored_permutations.SignedPermutation": [[24, 2, 1, "", "has_left_descent"], [24, 2, 1, "", "order"], [24, 2, 1, "", "to_cycles"], [24, 2, 1, "", "to_matrix"]], "sage.combinat.colored_permutations.SignedPermutations": [[24, 4, 1, "", "Element"], [24, 2, 1, "", "long_element"], [24, 2, 1, "", "one"], [24, 2, 1, "", "simple_reflection"]], "sage.combinat.combinat": [[25, 1, 1, "", "CombinatorialClass"], [25, 1, 1, "", "CombinatorialElement"], [25, 1, 1, "", "CombinatorialObject"], [25, 1, 1, "", "FilteredCombinatorialClass"], [25, 1, 1, "", "InfiniteAbstractCombinatorialClass"], [25, 1, 1, "", "MapCombinatorialClass"], [25, 1, 1, "", "Permutations_CC"], [25, 1, 1, "", "UnionCombinatorialClass"], [25, 3, 1, "", "bell_number"], [25, 3, 1, "", "bell_polynomial"], [25, 3, 1, "", "bernoulli_polynomial"], [25, 3, 1, "", "catalan_number"], [25, 3, 1, "", "euler_number"], [25, 3, 1, "", "eulerian_number"], [25, 3, 1, "", "eulerian_polynomial"], [25, 3, 1, "", "fibonacci"], [25, 3, 1, "", "fibonacci_sequence"], [25, 3, 1, "", "fibonacci_xrange"], [25, 3, 1, "", "lucas_number1"], [25, 3, 1, "", "lucas_number2"], [25, 3, 1, "", "narayana_number"], [25, 3, 1, "", "number_of_tuples"], [25, 3, 1, "", "number_of_unordered_tuples"], [25, 3, 1, "", "polygonal_number"], [25, 3, 1, "", "stirling_number1"], [25, 3, 1, "", "stirling_number2"], [25, 3, 1, "", "tuples"], [25, 3, 1, "", "unordered_tuples"], [25, 3, 1, "", "unshuffle_iterator"]], "sage.combinat.combinat.CombinatorialClass": [[25, 4, 1, "", "Element"], [25, 2, 1, "", "cardinality"], [25, 2, 1, "", "element_class"], [25, 2, 1, "", "filter"], [25, 2, 1, "", "first"], [25, 2, 1, "", "is_finite"], [25, 2, 1, "", "last"], [25, 2, 1, "", "list"], [25, 2, 1, "", "map"], [25, 2, 1, "", "next"], [25, 2, 1, "", "previous"], [25, 2, 1, "", "random_element"], [25, 2, 1, "", "rank"], [25, 2, 1, "", "union"], [25, 2, 1, "", "unrank"]], "sage.combinat.combinat.CombinatorialObject": [[25, 2, 1, "", "index"]], "sage.combinat.combinat.FilteredCombinatorialClass": [[25, 2, 1, "", "cardinality"]], "sage.combinat.combinat.InfiniteAbstractCombinatorialClass": [[25, 2, 1, "", "cardinality"], [25, 2, 1, "", "list"]], "sage.combinat.combinat.UnionCombinatorialClass": [[25, 2, 1, "", "cardinality"], [25, 2, 1, "", "first"], [25, 2, 1, "", "last"], [25, 2, 1, "", "list"], [25, 2, 1, "", "rank"], [25, 2, 1, "", "unrank"]], "sage.combinat.combinat_cython": [[26, 3, 1, "", "conjugate"], [26, 3, 1, "", "linear_extension_iterator"], [26, 3, 1, "", "lyndon_word_iterator"], [26, 3, 1, "", "perfect_matchings_iterator"], [26, 3, 1, "", "set_partition_composition"], [26, 3, 1, "", "set_partition_iterator"], [26, 3, 1, "", "set_partition_iterator_blocks"]], "sage.combinat.combination": [[27, 1, 1, "", "ChooseNK"], [27, 3, 1, "", "Combinations"], [27, 1, 1, "", "Combinations_mset"], [27, 1, 1, "", "Combinations_msetk"], [27, 1, 1, "", "Combinations_set"], [27, 1, 1, "", "Combinations_setk"], [27, 3, 1, "", "from_rank"], [27, 3, 1, "", "rank"]], "sage.combinat.combination.Combinations_mset": [[27, 2, 1, "", "cardinality"]], "sage.combinat.combination.Combinations_msetk": [[27, 2, 1, "", "cardinality"]], "sage.combinat.combination.Combinations_set": [[27, 2, 1, "", "cardinality"], [27, 2, 1, "", "rank"], [27, 2, 1, "", "unrank"]], "sage.combinat.combination.Combinations_setk": [[27, 2, 1, "", "cardinality"], [27, 2, 1, "", "list"], [27, 2, 1, "", "rank"], [27, 2, 1, "", "unrank"]], "sage.combinat.combinatorial_map": [[28, 1, 1, "", "CombinatorialMap"], [28, 3, 1, "", "combinatorial_map"], [28, 3, 1, "", "combinatorial_map_trivial"], [28, 3, 1, "", "combinatorial_map_wrapper"], [28, 3, 1, "", "combinatorial_maps_in_class"]], "sage.combinat.combinatorial_map.CombinatorialMap": [[28, 2, 1, "", "name"], [28, 2, 1, "", "order"], [28, 2, 1, "", "unbounded_map"]], "sage.combinat.composition": [[29, 1, 1, "", "Composition"], [29, 1, 1, "", "Compositions"], [29, 1, 1, "", "Compositions_all"], [29, 1, 1, "", "Compositions_constraints"], [29, 1, 1, "", "Compositions_n"], [29, 3, 1, "", "composition_iterator_fast"]], "sage.combinat.composition.Composition": [[29, 2, 1, "", "complement"], [29, 2, 1, "", "conjugate"], [29, 2, 1, "", "count"], [29, 2, 1, "", "descents"], [29, 2, 1, "", "fatten"], [29, 2, 1, "", "fatter"], [29, 2, 1, "", "finer"], [29, 2, 1, "", "inf"], [29, 2, 1, "", "is_finer"], [29, 2, 1, "", "join"], [29, 2, 1, "", "major_index"], [29, 2, 1, "", "meet"], [29, 2, 1, "", "near_concatenation"], [29, 2, 1, "", "partial_sums"], [29, 2, 1, "", "peaks"], [29, 2, 1, "", "refinement_splitting"], [29, 2, 1, "", "refinement_splitting_lengths"], [29, 2, 1, "", "reversed"], [29, 2, 1, "", "ribbon_decomposition"], [29, 2, 1, "", "shuffle_product"], [29, 2, 1, "", "size"], [29, 2, 1, "", "sum"], [29, 2, 1, "", "sup"], [29, 2, 1, "", "to_code"], [29, 2, 1, "", "to_partition"], [29, 2, 1, "", "to_skew_partition"], [29, 2, 1, "", "to_subset"], [29, 2, 1, "", "wll_gt"]], "sage.combinat.composition.Compositions": [[29, 4, 1, "", "Element"], [29, 2, 1, "", "from_code"], [29, 2, 1, "", "from_descents"], [29, 2, 1, "", "from_subset"]], "sage.combinat.composition.Compositions_all": [[29, 2, 1, "", "subset"], [29, 2, 1, "", "zero"]], "sage.combinat.composition.Compositions_n": [[29, 2, 1, "", "cardinality"], [29, 2, 1, "", "random_element"]], "sage.combinat.composition_signed": [[30, 1, 1, "", "SignedCompositions"]], "sage.combinat.composition_signed.SignedCompositions": [[30, 2, 1, "", "cardinality"]], "sage.combinat.composition_tableau": [[31, 1, 1, "", "CompositionTableau"], [31, 1, 1, "", "CompositionTableaux"], [31, 1, 1, "", "CompositionTableauxBacktracker"], [31, 1, 1, "", "CompositionTableaux_all"], [31, 1, 1, "", "CompositionTableaux_shape"], [31, 1, 1, "", "CompositionTableaux_size"]], "sage.combinat.composition_tableau.CompositionTableau": [[31, 2, 1, "", "descent_composition"], [31, 2, 1, "", "descent_set"], [31, 2, 1, "", "is_standard"], [31, 2, 1, "", "pp"], [31, 2, 1, "", "shape_composition"], [31, 2, 1, "", "shape_partition"], [31, 2, 1, "", "size"], [31, 2, 1, "", "weight"]], "sage.combinat.composition_tableau.CompositionTableaux": [[31, 4, 1, "", "Element"]], "sage.combinat.composition_tableau.CompositionTableauxBacktracker": [[31, 2, 1, "", "get_next_pos"]], "sage.combinat.composition_tableau.CompositionTableaux_all": [[31, 2, 1, "", "an_element"]], "sage.combinat.composition_tableau.CompositionTableaux_shape": [[31, 2, 1, "", "an_element"]], "sage.combinat.constellation": [[32, 3, 1, "", "Constellation"], [32, 1, 1, "", "Constellation_class"], [32, 3, 1, "", "Constellations"], [32, 1, 1, "", "Constellations_ld"], [32, 1, 1, "", "Constellations_p"], [32, 3, 1, "", "perm_conjugate"], [32, 3, 1, "", "perm_invert"], [32, 3, 1, "", "perm_sym_domain"], [32, 3, 1, "", "perms_are_connected"], [32, 3, 1, "", "perms_canonical_labels"], [32, 3, 1, "", "perms_canonical_labels_from"], [32, 3, 1, "", "perms_sym_init"]], "sage.combinat.constellation.Constellation_class": [[32, 2, 1, "", "braid_group_action"], [32, 2, 1, "", "braid_group_orbit"], [32, 2, 1, "", "connected_components"], [32, 2, 1, "", "copy"], [32, 2, 1, "", "degree"], [32, 2, 1, "", "euler_characteristic"], [32, 2, 1, "", "g"], [32, 2, 1, "", "genus"], [32, 2, 1, "", "is_connected"], [32, 2, 1, "", "is_isomorphic"], [32, 2, 1, "", "is_mutable"], [32, 2, 1, "", "length"], [32, 2, 1, "", "mutable_copy"], [32, 2, 1, "", "passport"], [32, 2, 1, "", "profile"], [32, 2, 1, "", "relabel"], [32, 2, 1, "", "set_immutable"], [32, 2, 1, "", "switch"]], "sage.combinat.constellation.Constellations_ld": [[32, 4, 1, "", "Element"], [32, 2, 1, "", "braid_group_action"], [32, 2, 1, "", "braid_group_orbits"], [32, 2, 1, "", "is_empty"], [32, 2, 1, "", "random_element"]], "sage.combinat.constellation.Constellations_p": [[32, 2, 1, "", "isomorphism_representatives"]], "sage.combinat.core": [[33, 1, 1, "", "Core"], [33, 3, 1, "", "Cores"], [33, 1, 1, "", "Cores_length"], [33, 1, 1, "", "Cores_size"]], "sage.combinat.core.Core": [[33, 2, 1, "", "affine_symmetric_group_action"], [33, 2, 1, "", "affine_symmetric_group_simple_action"], [33, 2, 1, "", "contains"], [33, 2, 1, "", "k"], [33, 2, 1, "", "length"], [33, 2, 1, "", "size"], [33, 2, 1, "", "strong_covers"], [33, 2, 1, "", "strong_down_list"], [33, 2, 1, "", "strong_le"], [33, 2, 1, "", "to_bounded_partition"], [33, 2, 1, "", "to_grassmannian"], [33, 2, 1, "", "to_partition"], [33, 2, 1, "", "weak_covers"], [33, 2, 1, "", "weak_le"]], "sage.combinat.core.Cores_length": [[33, 4, 1, "", "Element"], [33, 2, 1, "", "from_partition"], [33, 2, 1, "", "list"]], "sage.combinat.core.Cores_size": [[33, 4, 1, "", "Element"], [33, 2, 1, "", "from_partition"], [33, 2, 1, "", "list"]], "sage.combinat.crystals": [[35, 0, 0, "-", "affine"], [36, 0, 0, "-", "affine_factorization"], [37, 0, 0, "-", "affinization"], [38, 0, 0, "-", "alcove_path"], [39, 0, 0, "-", "all"], [40, 0, 0, "-", "bkk_crystals"], [41, 0, 0, "-", "catalog"], [42, 0, 0, "-", "catalog_elementary_crystals"], [43, 0, 0, "-", "catalog_infinity_crystals"], [44, 0, 0, "-", "catalog_kirillov_reshetikhin"], [45, 0, 0, "-", "crystals"], [46, 0, 0, "-", "direct_sum"], [47, 0, 0, "-", "elementary_crystals"], [48, 0, 0, "-", "fast_crystals"], [49, 0, 0, "-", "fully_commutative_stable_grothendieck"], [50, 0, 0, "-", "generalized_young_walls"], [51, 0, 0, "-", "highest_weight_crystals"], [52, 0, 0, "-", "induced_structure"], [53, 0, 0, "-", "infinity_crystals"], [54, 0, 0, "-", "kac_modules"], [55, 0, 0, "-", "kirillov_reshetikhin"], [56, 0, 0, "-", "kyoto_path_model"], [57, 0, 0, "-", "letters"], [58, 0, 0, "-", "littelmann_path"], [59, 0, 0, "-", "monomial_crystals"], [60, 0, 0, "-", "multisegments"], [61, 0, 0, "-", "mv_polytopes"], [62, 0, 0, "-", "pbw_crystal"], [63, 0, 0, "-", "pbw_datum"], [64, 0, 0, "-", "polyhedral_realization"], [65, 0, 0, "-", "spins"], [66, 0, 0, "-", "star_crystal"], [67, 0, 0, "-", "tensor_product"], [68, 0, 0, "-", "tensor_product_element"]], "sage.combinat.crystals.affine": [[35, 1, 1, "", "AffineCrystalFromClassical"], [35, 1, 1, "", "AffineCrystalFromClassicalAndPromotion"], [35, 1, 1, "", "AffineCrystalFromClassicalAndPromotionElement"], [35, 1, 1, "", "AffineCrystalFromClassicalElement"]], "sage.combinat.crystals.affine.AffineCrystalFromClassical": [[35, 4, 1, "", "Element"], [35, 2, 1, "", "cardinality"], [35, 2, 1, "", "lift"], [35, 2, 1, "", "retract"]], "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotion": [[35, 4, 1, "", "Element"], [35, 2, 1, "", "automorphism"], [35, 2, 1, "", "inverse_automorphism"]], "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotionElement": [[35, 2, 1, "", "e0"], [35, 2, 1, "", "epsilon0"], [35, 2, 1, "", "f0"], [35, 2, 1, "", "phi0"]], "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement": [[35, 2, 1, "", "classical_weight"], [35, 2, 1, "", "e"], [35, 2, 1, "", "e0"], [35, 2, 1, "", "epsilon"], [35, 2, 1, "", "epsilon0"], [35, 2, 1, "", "f"], [35, 2, 1, "", "f0"], [35, 2, 1, "", "lift"], [35, 2, 1, "", "phi"], [35, 2, 1, "", "phi0"], [35, 2, 1, "", "pp"]], "sage.combinat.crystals.affine_factorization": [[36, 1, 1, "", "AffineFactorizationCrystal"], [36, 1, 1, "", "FactorizationToTableaux"], [36, 3, 1, "", "affine_factorizations"]], "sage.combinat.crystals.affine_factorization.AffineFactorizationCrystal": [[36, 1, 1, "", "Element"]], "sage.combinat.crystals.affine_factorization.AffineFactorizationCrystal.Element": [[36, 2, 1, "", "bracketing"], [36, 2, 1, "", "e"], [36, 2, 1, "", "f"], [36, 2, 1, "", "to_tableau"]], "sage.combinat.crystals.affine_factorization.FactorizationToTableaux": [[36, 2, 1, "", "is_embedding"], [36, 2, 1, "", "is_isomorphism"], [36, 2, 1, "", "is_surjective"]], "sage.combinat.crystals.affinization": [[37, 1, 1, "", "AffinizationOfCrystal"]], "sage.combinat.crystals.affinization.AffinizationOfCrystal": [[37, 1, 1, "", "Element"]], "sage.combinat.crystals.affinization.AffinizationOfCrystal.Element": [[37, 2, 1, "", "e"], [37, 2, 1, "", "epsilon"], [37, 2, 1, "", "f"], [37, 2, 1, "", "phi"], [37, 2, 1, "", "weight"]], "sage.combinat.crystals.alcove_path": [[38, 1, 1, "", "CrystalOfAlcovePaths"], [38, 1, 1, "", "CrystalOfAlcovePathsElement"], [38, 1, 1, "", "InfinityCrystalOfAlcovePaths"], [38, 1, 1, "", "RootsWithHeight"], [38, 1, 1, "", "RootsWithHeightElement"], [38, 3, 1, "", "compare_graphs"]], "sage.combinat.crystals.alcove_path.CrystalOfAlcovePaths": [[38, 4, 1, "", "Element"], [38, 2, 1, "", "vertices"]], "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement": [[38, 2, 1, "", "e"], [38, 2, 1, "", "epsilon"], [38, 2, 1, "", "f"], [38, 2, 1, "", "integer_sequence"], [38, 2, 1, "", "is_admissible"], [38, 2, 1, "", "path"], [38, 2, 1, "", "phi"], [38, 2, 1, "", "plot"], [38, 2, 1, "", "weight"]], "sage.combinat.crystals.alcove_path.InfinityCrystalOfAlcovePaths": [[38, 1, 1, "", "Element"]], "sage.combinat.crystals.alcove_path.InfinityCrystalOfAlcovePaths.Element": [[38, 2, 1, "", "e"], [38, 2, 1, "", "epsilon"], [38, 2, 1, "", "f"], [38, 2, 1, "", "phi"], [38, 2, 1, "", "projection"], [38, 2, 1, "", "weight"]], "sage.combinat.crystals.alcove_path.RootsWithHeight": [[38, 4, 1, "", "Element"], [38, 2, 1, "", "lambda_chain"], [38, 2, 1, "", "word"]], "sage.combinat.crystals.bkk_crystals": [[40, 1, 1, "", "CrystalOfBKKTableaux"]], "sage.combinat.crystals.bkk_crystals.CrystalOfBKKTableaux": [[40, 1, 1, "", "Element"], [40, 2, 1, "", "genuine_highest_weight_vectors"], [40, 2, 1, "", "shape"]], "sage.combinat.crystals.crystals": [[45, 1, 1, "", "CrystalBacktracker"]], "sage.combinat.crystals.direct_sum": [[46, 1, 1, "", "DirectSumOfCrystals"]], "sage.combinat.crystals.direct_sum.DirectSumOfCrystals": [[46, 1, 1, "", "Element"], [46, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.crystals.direct_sum.DirectSumOfCrystals.Element": [[46, 2, 1, "", "e"], [46, 2, 1, "", "epsilon"], [46, 2, 1, "", "f"], [46, 2, 1, "", "phi"], [46, 2, 1, "", "weight"]], "sage.combinat.crystals.elementary_crystals": [[47, 1, 1, "", "AbstractSingleCrystalElement"], [47, 1, 1, "", "ComponentCrystal"], [47, 1, 1, "", "ElementaryCrystal"], [47, 1, 1, "", "RCrystal"], [47, 1, 1, "", "TCrystal"]], "sage.combinat.crystals.elementary_crystals.AbstractSingleCrystalElement": [[47, 2, 1, "", "e"], [47, 2, 1, "", "f"]], "sage.combinat.crystals.elementary_crystals.ComponentCrystal": [[47, 1, 1, "", "Element"], [47, 2, 1, "", "cardinality"], [47, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.crystals.elementary_crystals.ComponentCrystal.Element": [[47, 2, 1, "", "epsilon"], [47, 2, 1, "", "phi"], [47, 2, 1, "", "weight"]], "sage.combinat.crystals.elementary_crystals.ElementaryCrystal": [[47, 1, 1, "", "Element"], [47, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.crystals.elementary_crystals.ElementaryCrystal.Element": [[47, 2, 1, "", "e"], [47, 2, 1, "", "epsilon"], [47, 2, 1, "", "f"], [47, 2, 1, "", "phi"], [47, 2, 1, "", "weight"]], "sage.combinat.crystals.elementary_crystals.RCrystal": [[47, 1, 1, "", "Element"], [47, 2, 1, "", "cardinality"], [47, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.crystals.elementary_crystals.RCrystal.Element": [[47, 2, 1, "", "epsilon"], [47, 2, 1, "", "phi"], [47, 2, 1, "", "weight"]], "sage.combinat.crystals.elementary_crystals.TCrystal": [[47, 1, 1, "", "Element"], [47, 2, 1, "", "cardinality"], [47, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.crystals.elementary_crystals.TCrystal.Element": [[47, 2, 1, "", "epsilon"], [47, 2, 1, "", "phi"], [47, 2, 1, "", "weight"]], "sage.combinat.crystals.fast_crystals": [[48, 1, 1, "", "FastCrystal"]], "sage.combinat.crystals.fast_crystals.FastCrystal": [[48, 1, 1, "", "Element"], [48, 2, 1, "", "cmp_elements"], [48, 2, 1, "", "digraph"]], "sage.combinat.crystals.fast_crystals.FastCrystal.Element": [[48, 2, 1, "", "e"], [48, 2, 1, "", "f"], [48, 2, 1, "", "weight"]], "sage.combinat.crystals.fully_commutative_stable_grothendieck": [[49, 1, 1, "", "DecreasingHeckeFactorization"], [49, 1, 1, "", "DecreasingHeckeFactorizations"], [49, 1, 1, "", "FullyCommutativeStableGrothendieckCrystal"]], "sage.combinat.crystals.fully_commutative_stable_grothendieck.DecreasingHeckeFactorization": [[49, 2, 1, "", "to_increasing_hecke_biword"], [49, 2, 1, "", "to_word"], [49, 2, 1, "", "weight"]], "sage.combinat.crystals.fully_commutative_stable_grothendieck.DecreasingHeckeFactorizations": [[49, 4, 1, "", "Element"], [49, 2, 1, "", "list"]], "sage.combinat.crystals.fully_commutative_stable_grothendieck.FullyCommutativeStableGrothendieckCrystal": [[49, 1, 1, "", "Element"], [49, 2, 1, "", "module_generators"]], "sage.combinat.crystals.fully_commutative_stable_grothendieck.FullyCommutativeStableGrothendieckCrystal.Element": [[49, 2, 1, "", "bracketing"], [49, 2, 1, "", "e"], [49, 2, 1, "", "f"]], "sage.combinat.crystals.generalized_young_walls": [[50, 1, 1, "", "CrystalOfGeneralizedYoungWalls"], [50, 1, 1, "", "CrystalOfGeneralizedYoungWallsElement"], [50, 1, 1, "", "GeneralizedYoungWall"], [50, 1, 1, "", "InfinityCrystalOfGeneralizedYoungWalls"]], "sage.combinat.crystals.generalized_young_walls.CrystalOfGeneralizedYoungWalls": [[50, 4, 1, "", "Element"]], "sage.combinat.crystals.generalized_young_walls.CrystalOfGeneralizedYoungWallsElement": [[50, 2, 1, "", "e"], [50, 2, 1, "", "f"], [50, 2, 1, "", "phi"], [50, 2, 1, "", "weight"]], "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall": [[50, 2, 1, "", "Epsilon"], [50, 2, 1, "", "Phi"], [50, 2, 1, "", "a"], [50, 2, 1, "", "column"], [50, 2, 1, "", "content"], [50, 2, 1, "", "e"], [50, 2, 1, "", "epsilon"], [50, 2, 1, "", "f"], [50, 2, 1, "", "generate_signature"], [50, 2, 1, "", "in_highest_weight_crystal"], [50, 2, 1, "", "latex_large"], [50, 2, 1, "", "number_of_parts"], [50, 2, 1, "", "phi"], [50, 2, 1, "", "pp"], [50, 2, 1, "", "raw_signature"], [50, 2, 1, "", "signature"], [50, 2, 1, "", "sum_of_weighted_row_lengths"], [50, 2, 1, "", "weight"]], "sage.combinat.crystals.generalized_young_walls.InfinityCrystalOfGeneralizedYoungWalls": [[50, 4, 1, "", "Element"]], "sage.combinat.crystals.highest_weight_crystals": [[51, 1, 1, "", "FiniteDimensionalHighestWeightCrystal_TypeE"], [51, 1, 1, "", "FiniteDimensionalHighestWeightCrystal_TypeE6"], [51, 1, 1, "", "FiniteDimensionalHighestWeightCrystal_TypeE7"], [51, 3, 1, "", "HighestWeightCrystal"]], "sage.combinat.crystals.highest_weight_crystals.FiniteDimensionalHighestWeightCrystal_TypeE": [[51, 4, 1, "", "Element"], [51, 2, 1, "", "module_generator"]], "sage.combinat.crystals.induced_structure": [[52, 1, 1, "", "InducedCrystal"], [52, 1, 1, "", "InducedFromCrystal"]], "sage.combinat.crystals.induced_structure.InducedCrystal": [[52, 1, 1, "", "Element"], [52, 2, 1, "", "cardinality"]], "sage.combinat.crystals.induced_structure.InducedCrystal.Element": [[52, 2, 1, "", "e"], [52, 2, 1, "", "epsilon"], [52, 2, 1, "", "f"], [52, 2, 1, "", "phi"], [52, 2, 1, "", "weight"]], "sage.combinat.crystals.induced_structure.InducedFromCrystal": [[52, 1, 1, "", "Element"], [52, 2, 1, "", "cardinality"]], "sage.combinat.crystals.induced_structure.InducedFromCrystal.Element": [[52, 2, 1, "", "e"], [52, 2, 1, "", "epsilon"], [52, 2, 1, "", "f"], [52, 2, 1, "", "phi"], [52, 2, 1, "", "weight"]], "sage.combinat.crystals.infinity_crystals": [[53, 1, 1, "", "DualInfinityQueerCrystalOfTableaux"], [53, 1, 1, "", "InfinityCrystalOfTableaux"], [53, 1, 1, "", "InfinityCrystalOfTableauxTypeD"]], "sage.combinat.crystals.infinity_crystals.DualInfinityQueerCrystalOfTableaux": [[53, 1, 1, "", "Element"], [53, 2, 1, "", "index_set"], [53, 2, 1, "", "module_generator"]], "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableaux": [[53, 1, 1, "", "Element"], [53, 2, 1, "", "module_generator"]], "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableaux.Element": [[53, 2, 1, "", "content"], [53, 2, 1, "", "phi"], [53, 2, 1, "", "reduced_form"], [53, 2, 1, "", "seg"], [53, 2, 1, "", "weight"]], "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableauxTypeD": [[53, 1, 1, "", "Element"], [53, 2, 1, "", "module_generator"]], "sage.combinat.crystals.kac_modules": [[54, 1, 1, "", "CrystalOfKacModule"], [54, 1, 1, "", "CrystalOfOddNegativeRoots"], [54, 3, 1, "", "latex_dual"], [54, 3, 1, "", "to_dual_tableau"]], "sage.combinat.crystals.kac_modules.CrystalOfKacModule": [[54, 1, 1, "", "Element"], [54, 2, 1, "", "module_generator"]], "sage.combinat.crystals.kac_modules.CrystalOfKacModule.Element": [[54, 2, 1, "", "e"], [54, 2, 1, "", "f"], [54, 2, 1, "", "weight"]], "sage.combinat.crystals.kac_modules.CrystalOfOddNegativeRoots": [[54, 1, 1, "", "Element"], [54, 2, 1, "", "module_generator"]], "sage.combinat.crystals.kac_modules.CrystalOfOddNegativeRoots.Element": [[54, 2, 1, "", "e"], [54, 2, 1, "", "epsilon"], [54, 2, 1, "", "f"], [54, 2, 1, "", "phi"], [54, 2, 1, "", "weight"]], "sage.combinat.crystals.kirillov_reshetikhin": [[55, 1, 1, "", "AmbientRetractMap"], [55, 1, 1, "", "CrystalDiagramAutomorphism"], [55, 1, 1, "", "CrystalOfTableaux_E7"], [55, 1, 1, "", "KR_type_A"], [55, 1, 1, "", "KR_type_A2"], [55, 1, 1, "", "KR_type_A2Element"], [55, 1, 1, "", "KR_type_Bn"], [55, 1, 1, "", "KR_type_BnElement"], [55, 1, 1, "", "KR_type_C"], [55, 1, 1, "", "KR_type_CElement"], [55, 1, 1, "", "KR_type_Cn"], [55, 1, 1, "", "KR_type_CnElement"], [55, 1, 1, "", "KR_type_D_tri1"], [55, 1, 1, "", "KR_type_Dn_twisted"], [55, 1, 1, "", "KR_type_Dn_twistedElement"], [55, 1, 1, "", "KR_type_E6"], [55, 1, 1, "", "KR_type_E7"], [55, 1, 1, "", "KR_type_box"], [55, 1, 1, "", "KR_type_boxElement"], [55, 1, 1, "", "KR_type_spin"], [55, 1, 1, "", "KR_type_vertical"], [55, 3, 1, "", "KashiwaraNakashimaTableaux"], [55, 3, 1, "", "KirillovReshetikhinCrystal"], [55, 3, 1, "", "KirillovReshetikhinCrystalFromLSPaths"], [55, 1, 1, "", "KirillovReshetikhinCrystalFromPromotion"], [55, 1, 1, "", "KirillovReshetikhinCrystalFromPromotionElement"], [55, 1, 1, "", "KirillovReshetikhinGenericCrystal"], [55, 1, 1, "", "KirillovReshetikhinGenericCrystalElement"], [55, 1, 1, "", "PMDiagram"], [55, 3, 1, "", "horizontal_dominoes_removed"], [55, 3, 1, "", "partitions_in_box"], [55, 3, 1, "", "vertical_dominoes_removed"]], "sage.combinat.crystals.kirillov_reshetikhin.CrystalDiagramAutomorphism": [[55, 2, 1, "", "is_embedding"], [55, 2, 1, "", "is_isomorphism"], [55, 2, 1, "", "is_strict"], [55, 2, 1, "", "is_surjective"]], "sage.combinat.crystals.kirillov_reshetikhin.CrystalOfTableaux_E7": [[55, 2, 1, "", "module_generator"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A": [[55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "dynkin_diagram_automorphism"], [55, 2, 1, "", "promotion"], [55, 2, 1, "", "promotion_inverse"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2": [[55, 4, 1, "", "Element"], [55, 2, 1, "", "ambient_crystal"], [55, 2, 1, "", "ambient_dict_pm_diagrams"], [55, 2, 1, "", "ambient_highest_weight_dict"], [55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "from_ambient_crystal"], [55, 2, 1, "", "highest_weight_dict"], [55, 2, 1, "", "module_generator"], [55, 2, 1, "", "to_ambient_crystal"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2Element": [[55, 2, 1, "", "e0"], [55, 2, 1, "", "epsilon0"], [55, 2, 1, "", "f0"], [55, 2, 1, "", "phi0"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Bn": [[55, 4, 1, "", "Element"], [55, 2, 1, "", "ambient_crystal"], [55, 2, 1, "", "ambient_highest_weight_dict"], [55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "from_ambient_crystal"], [55, 2, 1, "", "highest_weight_dict"], [55, 2, 1, "", "similarity_factor"], [55, 2, 1, "", "to_ambient_crystal"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_BnElement": [[55, 2, 1, "", "e0"], [55, 2, 1, "", "epsilon0"], [55, 2, 1, "", "f0"], [55, 2, 1, "", "phi0"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_C": [[55, 4, 1, "", "Element"], [55, 2, 1, "", "ambient_crystal"], [55, 2, 1, "", "ambient_dict_pm_diagrams"], [55, 2, 1, "", "ambient_highest_weight_dict"], [55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "from_ambient_crystal"], [55, 2, 1, "", "highest_weight_dict"], [55, 2, 1, "", "to_ambient_crystal"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CElement": [[55, 2, 1, "", "e0"], [55, 2, 1, "", "epsilon0"], [55, 2, 1, "", "f0"], [55, 2, 1, "", "phi0"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Cn": [[55, 4, 1, "", "Element"], [55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "from_highest_weight_vector_to_pm_diagram"], [55, 2, 1, "", "from_pm_diagram_to_highest_weight_vector"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CnElement": [[55, 2, 1, "", "e0"], [55, 2, 1, "", "epsilon0"], [55, 2, 1, "", "f0"], [55, 2, 1, "", "phi0"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1": [[55, 1, 1, "", "Element"], [55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "from_coordinates"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1.Element": [[55, 2, 1, "", "coordinates"], [55, 2, 1, "", "e0"], [55, 2, 1, "", "epsilon0"], [55, 2, 1, "", "f0"], [55, 2, 1, "", "phi0"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twisted": [[55, 4, 1, "", "Element"], [55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "from_highest_weight_vector_to_pm_diagram"], [55, 2, 1, "", "from_pm_diagram_to_highest_weight_vector"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twistedElement": [[55, 2, 1, "", "e0"], [55, 2, 1, "", "epsilon0"], [55, 2, 1, "", "f0"], [55, 2, 1, "", "phi0"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6": [[55, 2, 1, "", "affine_weight"], [55, 2, 1, "", "automorphism_on_affine_weight"], [55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "dynkin_diagram_automorphism"], [55, 2, 1, "", "highest_weight_dict"], [55, 2, 1, "", "highest_weight_dict_inv"], [55, 2, 1, "", "hw_auxiliary"], [55, 2, 1, "", "promotion"], [55, 2, 1, "", "promotion_inverse"], [55, 2, 1, "", "promotion_on_highest_weight_vectors"], [55, 2, 1, "", "promotion_on_highest_weight_vectors_function"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E7": [[55, 2, 1, "", "A7_decomposition"], [55, 1, 1, "", "Element"], [55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "from_A7_crystal"], [55, 2, 1, "", "to_A7_crystal"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E7.Element": [[55, 2, 1, "", "e0"], [55, 2, 1, "", "f0"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_box": [[55, 4, 1, "", "Element"], [55, 2, 1, "", "ambient_crystal"], [55, 2, 1, "", "ambient_highest_weight_dict"], [55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "from_ambient_crystal"], [55, 2, 1, "", "highest_weight_dict"], [55, 2, 1, "", "similarity_factor"], [55, 2, 1, "", "to_ambient_crystal"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_boxElement": [[55, 2, 1, "", "e0"], [55, 2, 1, "", "epsilon0"], [55, 2, 1, "", "f0"], [55, 2, 1, "", "phi0"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_spin": [[55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "dynkin_diagram_automorphism"], [55, 2, 1, "", "promotion"], [55, 2, 1, "", "promotion_inverse"], [55, 2, 1, "", "promotion_on_highest_weight_vectors"], [55, 2, 1, "", "promotion_on_highest_weight_vectors_inverse"]], "sage.combinat.crystals.kirillov_reshetikhin.KR_type_vertical": [[55, 2, 1, "", "classical_decomposition"], [55, 2, 1, "", "dynkin_diagram_automorphism"], [55, 2, 1, "", "from_highest_weight_vector_to_pm_diagram"], [55, 2, 1, "", "from_pm_diagram_to_highest_weight_vector"], [55, 2, 1, "", "promotion"], [55, 2, 1, "", "promotion_inverse"], [55, 2, 1, "", "promotion_on_highest_weight_vector"]], "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinCrystalFromPromotion": [[55, 4, 1, "", "Element"]], "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystal": [[55, 4, 1, "", "Element"], [55, 2, 1, "", "classically_highest_weight_vectors"], [55, 2, 1, "", "kirillov_reshetikhin_tableaux"], [55, 2, 1, "", "module_generator"], [55, 2, 1, "", "r"], [55, 2, 1, "", "s"]], "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystalElement": [[55, 2, 1, "", "lusztig_involution"], [55, 2, 1, "", "pp"], [55, 2, 1, "", "to_kirillov_reshetikhin_tableau"], [55, 2, 1, "", "to_tableau"]], "sage.combinat.crystals.kirillov_reshetikhin.PMDiagram": [[55, 2, 1, "", "heights_of_addable_plus"], [55, 2, 1, "", "heights_of_minus"], [55, 2, 1, "", "inner_shape"], [55, 2, 1, "", "intermediate_shape"], [55, 2, 1, "", "outer_shape"], [55, 2, 1, "", "pp"], [55, 2, 1, "", "sigma"]], "sage.combinat.crystals.kyoto_path_model": [[56, 1, 1, "", "KyotoPathModel"]], "sage.combinat.crystals.kyoto_path_model.KyotoPathModel": [[56, 1, 1, "", "Element"], [56, 2, 1, "", "finite_tensor_product"], [56, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.crystals.kyoto_path_model.KyotoPathModel.Element": [[56, 2, 1, "", "e"], [56, 2, 1, "", "epsilon"], [56, 2, 1, "", "f"], [56, 2, 1, "", "phi"], [56, 2, 1, "", "truncate"], [56, 2, 1, "", "weight"]], "sage.combinat.crystals.letters": [[57, 1, 1, "", "BKKLetter"], [57, 1, 1, "", "ClassicalCrystalOfLetters"], [57, 1, 1, "", "ClassicalCrystalOfLettersWrapped"], [57, 1, 1, "", "CrystalOfBKKLetters"], [57, 3, 1, "", "CrystalOfLetters"], [57, 1, 1, "", "CrystalOfQueerLetters"], [57, 1, 1, "", "Crystal_of_letters_type_A_element"], [57, 1, 1, "", "Crystal_of_letters_type_B_element"], [57, 1, 1, "", "Crystal_of_letters_type_C_element"], [57, 1, 1, "", "Crystal_of_letters_type_D_element"], [57, 1, 1, "", "Crystal_of_letters_type_E6_element"], [57, 1, 1, "", "Crystal_of_letters_type_E6_element_dual"], [57, 1, 1, "", "Crystal_of_letters_type_E7_element"], [57, 1, 1, "", "Crystal_of_letters_type_G_element"], [57, 1, 1, "", "EmptyLetter"], [57, 1, 1, "", "Letter"], [57, 1, 1, "", "LetterTuple"], [57, 1, 1, "", "LetterWrapped"], [57, 1, 1, "", "QueerLetter_element"]], "sage.combinat.crystals.letters.BKKLetter": [[57, 2, 1, "", "e"], [57, 2, 1, "", "f"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.letters.ClassicalCrystalOfLetters": [[57, 2, 1, "", "list"], [57, 2, 1, "", "lt_elements"]], "sage.combinat.crystals.letters.CrystalOfBKKLetters": [[57, 4, 1, "", "Element"]], "sage.combinat.crystals.letters.CrystalOfQueerLetters": [[57, 4, 1, "", "Element"], [57, 2, 1, "", "index_set"]], "sage.combinat.crystals.letters.Crystal_of_letters_type_A_element": [[57, 2, 1, "", "e"], [57, 2, 1, "", "epsilon"], [57, 2, 1, "", "f"], [57, 2, 1, "", "phi"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.letters.Crystal_of_letters_type_B_element": [[57, 2, 1, "", "e"], [57, 2, 1, "", "epsilon"], [57, 2, 1, "", "f"], [57, 2, 1, "", "phi"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.letters.Crystal_of_letters_type_C_element": [[57, 2, 1, "", "e"], [57, 2, 1, "", "epsilon"], [57, 2, 1, "", "f"], [57, 2, 1, "", "phi"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.letters.Crystal_of_letters_type_D_element": [[57, 2, 1, "", "e"], [57, 2, 1, "", "epsilon"], [57, 2, 1, "", "f"], [57, 2, 1, "", "phi"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element": [[57, 2, 1, "", "e"], [57, 2, 1, "", "f"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element_dual": [[57, 2, 1, "", "e"], [57, 2, 1, "", "f"], [57, 2, 1, "", "lift"], [57, 2, 1, "", "retract"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.letters.Crystal_of_letters_type_E7_element": [[57, 2, 1, "", "e"], [57, 2, 1, "", "f"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.letters.Crystal_of_letters_type_G_element": [[57, 2, 1, "", "e"], [57, 2, 1, "", "epsilon"], [57, 2, 1, "", "f"], [57, 2, 1, "", "phi"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.letters.EmptyLetter": [[57, 2, 1, "", "e"], [57, 2, 1, "", "epsilon"], [57, 2, 1, "", "f"], [57, 2, 1, "", "phi"], [57, 4, 1, "", "value"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.letters.Letter": [[57, 4, 1, "", "value"]], "sage.combinat.crystals.letters.LetterTuple": [[57, 2, 1, "", "epsilon"], [57, 2, 1, "", "phi"], [57, 4, 1, "", "value"]], "sage.combinat.crystals.letters.LetterWrapped": [[57, 2, 1, "", "e"], [57, 2, 1, "", "epsilon"], [57, 2, 1, "", "f"], [57, 2, 1, "", "phi"], [57, 4, 1, "", "value"]], "sage.combinat.crystals.letters.QueerLetter_element": [[57, 2, 1, "", "e"], [57, 2, 1, "", "epsilon"], [57, 2, 1, "", "f"], [57, 2, 1, "", "phi"], [57, 2, 1, "", "weight"]], "sage.combinat.crystals.littelmann_path": [[58, 1, 1, "", "CrystalOfLSPaths"], [58, 1, 1, "", "CrystalOfProjectedLevelZeroLSPaths"], [58, 1, 1, "", "InfinityCrystalOfLSPaths"], [58, 3, 1, "", "positively_parallel_weights"]], "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths": [[58, 1, 1, "", "Element"], [58, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element": [[58, 2, 1, "", "compress"], [58, 2, 1, "", "dualize"], [58, 2, 1, "", "e"], [58, 2, 1, "", "endpoint"], [58, 2, 1, "", "epsilon"], [58, 2, 1, "", "f"], [58, 2, 1, "", "phi"], [58, 2, 1, "", "reflect_step"], [58, 2, 1, "", "s"], [58, 2, 1, "", "split_step"], [58, 2, 1, "", "weight"]], "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths": [[58, 1, 1, "", "Element"], [58, 2, 1, "", "classically_highest_weight_vectors"], [58, 2, 1, "", "is_perfect"], [58, 2, 1, "", "maximal_vector"], [58, 2, 1, "", "one_dimensional_configuration_sum"]], "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths.Element": [[58, 2, 1, "", "energy_function"], [58, 2, 1, "", "scalar_factors"], [58, 2, 1, "", "weyl_group_representation"]], "sage.combinat.crystals.littelmann_path.InfinityCrystalOfLSPaths": [[58, 1, 1, "", "Element"], [58, 2, 1, "", "module_generator"], [58, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.crystals.littelmann_path.InfinityCrystalOfLSPaths.Element": [[58, 2, 1, "", "e"], [58, 2, 1, "", "f"], [58, 2, 1, "", "phi"], [58, 2, 1, "", "weight"]], "sage.combinat.crystals.monomial_crystals": [[59, 1, 1, "", "CrystalOfNakajimaMonomials"], [59, 1, 1, "", "CrystalOfNakajimaMonomialsElement"], [59, 1, 1, "", "InfinityCrystalOfNakajimaMonomials"], [59, 1, 1, "", "NakajimaMonomial"]], "sage.combinat.crystals.monomial_crystals.CrystalOfNakajimaMonomials": [[59, 4, 1, "", "Element"], [59, 2, 1, "", "cardinality"]], "sage.combinat.crystals.monomial_crystals.CrystalOfNakajimaMonomialsElement": [[59, 2, 1, "", "f"], [59, 2, 1, "", "weight"]], "sage.combinat.crystals.monomial_crystals.InfinityCrystalOfNakajimaMonomials": [[59, 4, 1, "", "Element"], [59, 2, 1, "", "c"], [59, 2, 1, "", "cardinality"], [59, 2, 1, "", "get_variables"], [59, 2, 1, "", "set_variables"]], "sage.combinat.crystals.monomial_crystals.NakajimaMonomial": [[59, 2, 1, "", "e"], [59, 2, 1, "", "epsilon"], [59, 2, 1, "", "f"], [59, 2, 1, "", "phi"], [59, 2, 1, "", "weight"], [59, 2, 1, "", "weight_in_root_lattice"]], "sage.combinat.crystals.multisegments": [[60, 1, 1, "", "InfinityCrystalOfMultisegments"]], "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments": [[60, 1, 1, "", "Element"], [60, 2, 1, "", "highest_weight_vector"], [60, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments.Element": [[60, 2, 1, "", "e"], [60, 2, 1, "", "epsilon"], [60, 2, 1, "", "f"], [60, 2, 1, "", "phi"], [60, 2, 1, "", "weight"]], "sage.combinat.crystals.mv_polytopes": [[61, 1, 1, "", "MVPolytope"], [61, 1, 1, "", "MVPolytopes"]], "sage.combinat.crystals.mv_polytopes.MVPolytope": [[61, 2, 1, "", "plot"], [61, 2, 1, "", "polytope"]], "sage.combinat.crystals.mv_polytopes.MVPolytopes": [[61, 4, 1, "", "Element"], [61, 2, 1, "", "latex_options"], [61, 2, 1, "", "set_latex_options"]], "sage.combinat.crystals.pbw_crystal": [[62, 1, 1, "", "PBWCrystal"], [62, 1, 1, "", "PBWCrystalElement"]], "sage.combinat.crystals.pbw_crystal.PBWCrystal": [[62, 4, 1, "", "Element"], [62, 2, 1, "", "default_long_word"], [62, 2, 1, "", "set_default_long_word"]], "sage.combinat.crystals.pbw_crystal.PBWCrystalElement": [[62, 2, 1, "", "e"], [62, 2, 1, "", "epsilon"], [62, 2, 1, "", "f"], [62, 2, 1, "", "lusztig_datum"], [62, 2, 1, "", "phi"], [62, 2, 1, "", "star"], [62, 2, 1, "", "weight"]], "sage.combinat.crystals.pbw_datum": [[63, 1, 1, "", "PBWData"], [63, 1, 1, "", "PBWDatum"], [63, 3, 1, "", "compute_new_lusztig_datum"], [63, 3, 1, "", "enhance_braid_move_chain"], [63, 3, 1, "", "tropical_plucker_relation"]], "sage.combinat.crystals.pbw_datum.PBWData": [[63, 2, 1, "", "convert_to_new_long_word"]], "sage.combinat.crystals.pbw_datum.PBWDatum": [[63, 2, 1, "", "convert_to_long_word_with_first_letter"], [63, 2, 1, "", "convert_to_new_long_word"], [63, 2, 1, "", "is_equivalent_to"], [63, 2, 1, "", "star"], [63, 2, 1, "", "weight"]], "sage.combinat.crystals.polyhedral_realization": [[64, 1, 1, "", "InfinityCrystalAsPolyhedralRealization"]], "sage.combinat.crystals.polyhedral_realization.InfinityCrystalAsPolyhedralRealization": [[64, 1, 1, "", "Element"], [64, 2, 1, "", "finite_tensor_product"]], "sage.combinat.crystals.polyhedral_realization.InfinityCrystalAsPolyhedralRealization.Element": [[64, 2, 1, "", "e"], [64, 2, 1, "", "epsilon"], [64, 2, 1, "", "f"], [64, 2, 1, "", "phi"], [64, 2, 1, "", "truncate"]], "sage.combinat.crystals.spins": [[65, 3, 1, "", "CrystalOfSpins"], [65, 3, 1, "", "CrystalOfSpinsMinus"], [65, 3, 1, "", "CrystalOfSpinsPlus"], [65, 1, 1, "", "GenericCrystalOfSpins"], [65, 1, 1, "", "Spin"], [65, 1, 1, "", "Spin_crystal_type_B_element"], [65, 1, 1, "", "Spin_crystal_type_D_element"]], "sage.combinat.crystals.spins.GenericCrystalOfSpins": [[65, 2, 1, "", "lt_elements"]], "sage.combinat.crystals.spins.Spin": [[65, 2, 1, "", "pp"], [65, 2, 1, "", "signature"], [65, 4, 1, "", "value"], [65, 2, 1, "", "weight"]], "sage.combinat.crystals.spins.Spin_crystal_type_B_element": [[65, 2, 1, "", "e"], [65, 2, 1, "", "epsilon"], [65, 2, 1, "", "f"], [65, 2, 1, "", "phi"]], "sage.combinat.crystals.spins.Spin_crystal_type_D_element": [[65, 2, 1, "", "e"], [65, 2, 1, "", "epsilon"], [65, 2, 1, "", "f"], [65, 2, 1, "", "phi"]], "sage.combinat.crystals.star_crystal": [[66, 1, 1, "", "StarCrystal"]], "sage.combinat.crystals.star_crystal.StarCrystal": [[66, 1, 1, "", "Element"]], "sage.combinat.crystals.star_crystal.StarCrystal.Element": [[66, 2, 1, "", "e"], [66, 2, 1, "", "epsilon"], [66, 2, 1, "", "f"], [66, 2, 1, "", "jump"], [66, 2, 1, "", "phi"], [66, 2, 1, "", "weight"]], "sage.combinat.crystals.tensor_product": [[67, 1, 1, "", "CrystalOfQueerTableaux"], [67, 1, 1, "", "CrystalOfTableaux"], [67, 1, 1, "", "CrystalOfWords"], [67, 1, 1, "", "FullTensorProductOfCrystals"], [67, 1, 1, "", "FullTensorProductOfQueerSuperCrystals"], [67, 1, 1, "", "FullTensorProductOfRegularCrystals"], [67, 1, 1, "", "FullTensorProductOfSuperCrystals"], [67, 1, 1, "", "QueerSuperCrystalsMixin"], [67, 1, 1, "", "TensorProductOfCrystals"], [67, 1, 1, "", "TensorProductOfCrystalsWithGenerators"], [67, 1, 1, "", "TensorProductOfRegularCrystalsWithGenerators"]], "sage.combinat.crystals.tensor_product.CrystalOfQueerTableaux": [[67, 1, 1, "", "Element"]], "sage.combinat.crystals.tensor_product.CrystalOfQueerTableaux.Element": [[67, 2, 1, "", "rows"]], "sage.combinat.crystals.tensor_product.CrystalOfTableaux": [[67, 1, 1, "", "Element"], [67, 2, 1, "", "cartan_type"], [67, 2, 1, "", "module_generator"]], "sage.combinat.crystals.tensor_product.CrystalOfWords": [[67, 1, 1, "", "Element"]], "sage.combinat.crystals.tensor_product.FullTensorProductOfCrystals": [[67, 2, 1, "", "cardinality"], [67, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.crystals.tensor_product.FullTensorProductOfQueerSuperCrystals": [[67, 1, 1, "", "Element"]], "sage.combinat.crystals.tensor_product.FullTensorProductOfRegularCrystals": [[67, 1, 1, "", "Element"]], "sage.combinat.crystals.tensor_product.FullTensorProductOfSuperCrystals": [[67, 1, 1, "", "Element"]], "sage.combinat.crystals.tensor_product.QueerSuperCrystalsMixin": [[67, 2, 1, "", "index_set"]], "sage.combinat.crystals.tensor_product.TensorProductOfCrystals": [[67, 4, 1, "", "options"]], "sage.combinat.crystals.tensor_product.TensorProductOfRegularCrystalsWithGenerators": [[67, 1, 1, "", "Element"]], "sage.combinat.crystals.tensor_product_element": [[68, 1, 1, "", "CrystalOfBKKTableauxElement"], [68, 1, 1, "", "CrystalOfTableauxElement"], [68, 1, 1, "", "ImmutableListWithParent"], [68, 1, 1, "", "InfinityCrystalOfTableauxElement"], [68, 1, 1, "", "InfinityCrystalOfTableauxElementTypeD"], [68, 1, 1, "", "InfinityQueerCrystalOfTableauxElement"], [68, 1, 1, "", "TensorProductOfCrystalsElement"], [68, 1, 1, "", "TensorProductOfQueerSuperCrystalsElement"], [68, 1, 1, "", "TensorProductOfRegularCrystalsElement"], [68, 1, 1, "", "TensorProductOfSuperCrystalsElement"]], "sage.combinat.crystals.tensor_product_element.CrystalOfBKKTableauxElement": [[68, 2, 1, "", "pp"], [68, 2, 1, "", "to_tableau"]], "sage.combinat.crystals.tensor_product_element.CrystalOfTableauxElement": [[68, 2, 1, "", "pp"], [68, 2, 1, "", "promotion"], [68, 2, 1, "", "promotion_inverse"], [68, 2, 1, "", "shape"], [68, 2, 1, "", "to_tableau"]], "sage.combinat.crystals.tensor_product_element.InfinityCrystalOfTableauxElement": [[68, 2, 1, "", "e"], [68, 2, 1, "", "f"]], "sage.combinat.crystals.tensor_product_element.InfinityCrystalOfTableauxElementTypeD": [[68, 2, 1, "", "e"], [68, 2, 1, "", "f"]], "sage.combinat.crystals.tensor_product_element.InfinityQueerCrystalOfTableauxElement": [[68, 2, 1, "", "e"], [68, 2, 1, "", "epsilon"], [68, 2, 1, "", "f"], [68, 2, 1, "", "rows"], [68, 2, 1, "", "weight"]], "sage.combinat.crystals.tensor_product_element.TensorProductOfCrystalsElement": [[68, 2, 1, "", "e"], [68, 2, 1, "", "epsilon"], [68, 2, 1, "", "f"], [68, 2, 1, "", "phi"], [68, 2, 1, "", "pp"], [68, 2, 1, "", "weight"]], "sage.combinat.crystals.tensor_product_element.TensorProductOfQueerSuperCrystalsElement": [[68, 2, 1, "", "e"], [68, 2, 1, "", "epsilon"], [68, 2, 1, "", "f"], [68, 2, 1, "", "phi"]], "sage.combinat.crystals.tensor_product_element.TensorProductOfRegularCrystalsElement": [[68, 2, 1, "", "e"], [68, 2, 1, "", "epsilon"], [68, 2, 1, "", "f"], [68, 2, 1, "", "phi"], [68, 2, 1, "", "position_of_first_unmatched_plus"], [68, 2, 1, "", "position_of_last_unmatched_minus"], [68, 2, 1, "", "positions_of_unmatched_minus"], [68, 2, 1, "", "positions_of_unmatched_plus"]], "sage.combinat.crystals.tensor_product_element.TensorProductOfSuperCrystalsElement": [[68, 2, 1, "", "e"], [68, 2, 1, "", "epsilon"], [68, 2, 1, "", "f"], [68, 2, 1, "", "phi"]], "sage.combinat.cyclic_sieving_phenomenon": [[69, 3, 1, "", "CyclicSievingCheck"], [69, 3, 1, "", "CyclicSievingPolynomial"], [69, 3, 1, "", "orbit_decomposition"]], "sage.combinat.debruijn_sequence": [[70, 1, 1, "", "DeBruijnSequences"], [70, 3, 1, "", "debruijn_sequence"], [70, 3, 1, "", "is_debruijn_sequence"]], "sage.combinat.debruijn_sequence.DeBruijnSequences": [[70, 2, 1, "", "an_element"], [70, 2, 1, "", "cardinality"]], "sage.combinat.degree_sequences": [[71, 1, 1, "", "DegreeSequences"]], "sage.combinat.derangements": [[72, 1, 1, "", "Derangement"], [72, 1, 1, "", "Derangements"]], "sage.combinat.derangements.Derangement": [[72, 2, 1, "", "to_permutation"]], "sage.combinat.derangements.Derangements": [[72, 4, 1, "", "Element"], [72, 2, 1, "", "cardinality"], [72, 2, 1, "", "random_element"]], "sage.combinat.descent_algebra": [[73, 1, 1, "", "DescentAlgebra"], [73, 1, 1, "", "DescentAlgebraBases"]], "sage.combinat.descent_algebra.DescentAlgebra": [[73, 1, 1, "", "B"], [73, 1, 1, "", "D"], [73, 1, 1, "", "I"], [73, 2, 1, "", "a_realization"], [73, 4, 1, "", "idempotent"], [73, 4, 1, "", "standard"], [73, 4, 1, "", "subset"]], "sage.combinat.descent_algebra.DescentAlgebra.B": [[73, 2, 1, "", "one_basis"], [73, 2, 1, "", "product_on_basis"], [73, 2, 1, "", "to_D_basis"], [73, 2, 1, "", "to_I_basis"], [73, 2, 1, "", "to_nsym"]], "sage.combinat.descent_algebra.DescentAlgebra.D": [[73, 2, 1, "", "one_basis"], [73, 2, 1, "", "product_on_basis"], [73, 2, 1, "", "to_B_basis"], [73, 2, 1, "", "to_symmetric_group_algebra_on_basis"]], "sage.combinat.descent_algebra.DescentAlgebra.I": [[73, 2, 1, "", "idempotent"], [73, 2, 1, "", "one"], [73, 2, 1, "", "one_basis"], [73, 2, 1, "", "product_on_basis"], [73, 2, 1, "", "to_B_basis"]], "sage.combinat.descent_algebra.DescentAlgebraBases": [[73, 1, 1, "", "ElementMethods"], [73, 1, 1, "", "ParentMethods"], [73, 2, 1, "", "super_categories"]], "sage.combinat.descent_algebra.DescentAlgebraBases.ElementMethods": [[73, 2, 1, "", "to_symmetric_group_algebra"]], "sage.combinat.descent_algebra.DescentAlgebraBases.ParentMethods": [[73, 2, 1, "", "is_commutative"], [73, 2, 1, "", "is_field"], [73, 2, 1, "", "to_symmetric_group_algebra"], [73, 2, 1, "", "to_symmetric_group_algebra_on_basis"]], "sage.combinat.designs": [[74, 0, 0, "-", "all"], [75, 0, 0, "-", "bibd"], [76, 0, 0, "-", "block_design"], [77, 0, 0, "-", "covering_design"], [78, 0, 0, "-", "database"], [79, 0, 0, "-", "design_catalog"], [80, 0, 0, "-", "designs_pyx"], [81, 0, 0, "-", "difference_family"], [82, 0, 0, "-", "difference_matrices"], [83, 0, 0, "-", "evenly_distributed_sets"], [84, 0, 0, "-", "ext_rep"], [85, 0, 0, "-", "gen_quadrangles_with_spread"], [86, 0, 0, "-", "group_divisible_designs"], [87, 0, 0, "-", "incidence_structures"], [88, 0, 0, "-", "latin_squares"], [89, 0, 0, "-", "orthogonal_arrays"], [90, 0, 0, "-", "orthogonal_arrays_build_recursive"], [91, 0, 0, "-", "orthogonal_arrays_find_recursive"], [92, 0, 0, "-", "resolvable_bibd"], [93, 0, 0, "-", "steiner_quadruple_systems"], [94, 0, 0, "-", "subhypergraph_search"], [95, 0, 0, "-", "twographs"]], "sage.combinat.designs.bibd": [[75, 4, 1, "", "BIBD"], [75, 3, 1, "", "BIBD_5q_5_for_q_prime_power"], [75, 3, 1, "", "BIBD_from_PBD"], [75, 3, 1, "", "BIBD_from_TD"], [75, 3, 1, "", "BIBD_from_arc_in_desarguesian_projective_plane"], [75, 3, 1, "", "BIBD_from_difference_family"], [75, 1, 1, "", "BalancedIncompleteBlockDesign"], [75, 3, 1, "", "BruckRyserChowla_check"], [75, 3, 1, "", "PBD_4_5_8_9_12"], [75, 3, 1, "", "PBD_from_TD"], [75, 1, 1, "", "PairwiseBalancedDesign"], [75, 3, 1, "", "balanced_incomplete_block_design"], [75, 3, 1, "", "biplane"], [75, 3, 1, "", "steiner_triple_system"], [75, 3, 1, "", "v_4_1_BIBD"], [75, 3, 1, "", "v_5_1_BIBD"]], "sage.combinat.designs.bibd.BalancedIncompleteBlockDesign": [[75, 2, 1, "", "arc"]], "sage.combinat.designs.block_design": [[76, 3, 1, "", "AffineGeometryDesign"], [76, 3, 1, "", "CremonaRichmondConfiguration"], [76, 3, 1, "", "DesarguesianProjectivePlaneDesign"], [76, 3, 1, "", "Hadamard3Design"], [76, 3, 1, "", "HadamardDesign"], [76, 3, 1, "", "HughesPlane"], [76, 3, 1, "", "ProjectiveGeometryDesign"], [76, 3, 1, "", "WittDesign"], [76, 3, 1, "", "are_hyperplanes_in_projective_geometry_parameters"], [76, 3, 1, "", "normalize_hughes_plane_point"], [76, 3, 1, "", "projective_plane"], [76, 3, 1, "", "projective_plane_to_OA"], [76, 3, 1, "", "q3_minus_one_matrix"], [76, 3, 1, "", "tdesign_params"]], "sage.combinat.designs.covering_design": [[77, 1, 1, "", "CoveringDesign"], [77, 3, 1, "", "best_known_covering_design_www"], [77, 3, 1, "", "schonheim"], [77, 3, 1, "", "trivial_covering_design"]], "sage.combinat.designs.covering_design.CoveringDesign": [[77, 2, 1, "", "creator"], [77, 2, 1, "", "incidence_structure"], [77, 2, 1, "", "is_covering"], [77, 2, 1, "", "k"], [77, 2, 1, "", "low_bd"], [77, 2, 1, "", "method"], [77, 2, 1, "", "size"], [77, 2, 1, "", "t"], [77, 2, 1, "", "timestamp"], [77, 2, 1, "", "v"]], "sage.combinat.designs.database": [[78, 3, 1, "", "BIBD_106_6_1"], [78, 3, 1, "", "BIBD_111_6_1"], [78, 3, 1, "", "BIBD_126_6_1"], [78, 3, 1, "", "BIBD_136_6_1"], [78, 3, 1, "", "BIBD_141_6_1"], [78, 3, 1, "", "BIBD_171_6_1"], [78, 3, 1, "", "BIBD_196_6_1"], [78, 3, 1, "", "BIBD_201_6_1"], [78, 3, 1, "", "BIBD_45_9_8"], [78, 3, 1, "", "BIBD_56_11_2"], [78, 3, 1, "", "BIBD_66_6_1"], [78, 3, 1, "", "BIBD_76_6_1"], [78, 3, 1, "", "BIBD_79_13_2"], [78, 3, 1, "", "BIBD_96_6_1"], [78, 3, 1, "", "DM_12_6_1"], [78, 3, 1, "", "DM_21_6_1"], [78, 3, 1, "", "DM_24_8_1"], [78, 3, 1, "", "DM_273_17_1"], [78, 3, 1, "", "DM_28_6_1"], [78, 3, 1, "", "DM_33_6_1"], [78, 3, 1, "", "DM_35_6_1"], [78, 3, 1, "", "DM_36_9_1"], [78, 3, 1, "", "DM_39_6_1"], [78, 3, 1, "", "DM_44_6_1"], [78, 3, 1, "", "DM_45_7_1"], [78, 3, 1, "", "DM_48_9_1"], [78, 3, 1, "", "DM_51_6_1"], [78, 3, 1, "", "DM_52_6_1"], [78, 3, 1, "", "DM_55_7_1"], [78, 3, 1, "", "DM_56_8_1"], [78, 3, 1, "", "DM_57_8_1"], [78, 3, 1, "", "DM_60_6_1"], [78, 3, 1, "", "DM_75_8_1"], [78, 3, 1, "", "DM_993_32_1"], [78, 3, 1, "", "HigmanSimsDesign"], [78, 3, 1, "", "MOLS_10_2"], [78, 3, 1, "", "MOLS_12_5"], [78, 3, 1, "", "MOLS_14_4"], [78, 3, 1, "", "MOLS_15_4"], [78, 3, 1, "", "MOLS_18_3"], [78, 3, 1, "", "OA_10_1620"], [78, 3, 1, "", "OA_10_205"], [78, 3, 1, "", "OA_10_469"], [78, 3, 1, "", "OA_10_520"], [78, 3, 1, "", "OA_10_796"], [78, 3, 1, "", "OA_11_160"], [78, 3, 1, "", "OA_11_185"], [78, 3, 1, "", "OA_11_254"], [78, 3, 1, "", "OA_11_640"], [78, 3, 1, "", "OA_11_80"], [78, 3, 1, "", "OA_12_522"], [78, 3, 1, "", "OA_14_524"], [78, 3, 1, "", "OA_15_112"], [78, 3, 1, "", "OA_15_224"], [78, 3, 1, "", "OA_15_896"], [78, 3, 1, "", "OA_16_176"], [78, 3, 1, "", "OA_16_208"], [78, 3, 1, "", "OA_17_560"], [78, 3, 1, "", "OA_20_352"], [78, 3, 1, "", "OA_20_416"], [78, 3, 1, "", "OA_20_544"], [78, 3, 1, "", "OA_25_1262"], [78, 3, 1, "", "OA_520_plus_x"], [78, 3, 1, "", "OA_7_18"], [78, 3, 1, "", "OA_7_66"], [78, 3, 1, "", "OA_7_68"], [78, 3, 1, "", "OA_7_74"], [78, 3, 1, "", "OA_8_69"], [78, 3, 1, "", "OA_8_76"], [78, 3, 1, "", "OA_9_1078"], [78, 3, 1, "", "OA_9_120"], [78, 3, 1, "", "OA_9_135"], [78, 3, 1, "", "OA_9_1612"], [78, 3, 1, "", "OA_9_40"], [78, 3, 1, "", "QDM_19_6_1_1_1"], [78, 3, 1, "", "QDM_21_5_1_1_1"], [78, 3, 1, "", "QDM_21_6_1_1_5"], [78, 3, 1, "", "QDM_25_6_1_1_5"], [78, 3, 1, "", "QDM_33_6_1_1_1"], [78, 3, 1, "", "QDM_35_7_1_1_7"], [78, 3, 1, "", "QDM_37_6_1_1_1"], [78, 3, 1, "", "QDM_45_7_1_1_9"], [78, 3, 1, "", "QDM_54_7_1_1_8"], [78, 3, 1, "", "QDM_57_9_1_1_8"], [78, 3, 1, "", "RBIBD_120_8_1"], [78, 3, 1, "", "cyclic_shift"], [78, 3, 1, "", "f"]], "sage.combinat.designs.designs_pyx": [[80, 3, 1, "", "is_difference_matrix"], [80, 3, 1, "", "is_group_divisible_design"], [80, 3, 1, "", "is_orthogonal_array"], [80, 3, 1, "", "is_pairwise_balanced_design"], [80, 3, 1, "", "is_projective_plane"], [80, 3, 1, "", "is_quasi_difference_matrix"]], "sage.combinat.designs.difference_family": [[81, 3, 1, "", "are_hadamard_difference_set_parameters"], [81, 3, 1, "", "are_mcfarland_1973_parameters"], [81, 3, 1, "", "block_stabilizer"], [81, 3, 1, "", "df_q_6_1"], [81, 3, 1, "", "difference_family"], [81, 3, 1, "", "group_law"], [81, 3, 1, "", "hadamard_difference_set_product"], [81, 3, 1, "", "hadamard_difference_set_product_parameters"], [81, 3, 1, "", "is_difference_family"], [81, 3, 1, "", "is_relative_difference_set"], [81, 3, 1, "", "is_supplementary_difference_set"], [81, 3, 1, "", "mcfarland_1973_construction"], [81, 3, 1, "", "one_cyclic_tiling"], [81, 3, 1, "", "one_radical_difference_family"], [81, 3, 1, "", "radical_difference_family"], [81, 3, 1, "", "radical_difference_set"], [81, 3, 1, "", "relative_difference_set_from_homomorphism"], [81, 3, 1, "", "relative_difference_set_from_m_sequence"], [81, 3, 1, "", "singer_difference_set"], [81, 3, 1, "", "skew_supplementary_difference_set"], [81, 3, 1, "", "supplementary_difference_set"], [81, 3, 1, "", "turyn_1965_3x3xK"], [81, 3, 1, "", "twin_prime_powers_difference_set"]], "sage.combinat.designs.difference_matrices": [[82, 3, 1, "", "difference_matrix"], [82, 3, 1, "", "difference_matrix_product"], [82, 3, 1, "", "find_product_decomposition"]], "sage.combinat.designs.evenly_distributed_sets": [[83, 1, 1, "", "EvenlyDistributedSetsBacktracker"]], "sage.combinat.designs.evenly_distributed_sets.EvenlyDistributedSetsBacktracker": [[83, 2, 1, "", "an_element"], [83, 2, 1, "", "cardinality"], [83, 2, 1, "", "to_difference_family"]], "sage.combinat.designs.ext_rep": [[84, 1, 1, "", "XTree"], [84, 1, 1, "", "XTreeProcessor"], [84, 3, 1, "", "check_dtrs_protocols"], [84, 3, 1, "", "designs_from_XML"], [84, 3, 1, "", "designs_from_XML_url"], [84, 3, 1, "", "dump_to_tmpfile"], [84, 3, 1, "", "open_extrep_file"], [84, 3, 1, "", "open_extrep_url"]], "sage.combinat.designs.ext_rep.XTreeProcessor": [[84, 2, 1, "", "parse"]], "sage.combinat.designs.gen_quadrangles_with_spread": [[85, 3, 1, "", "dual_GQ_ovoid"], [85, 3, 1, "", "generalised_quadrangle_hermitian_with_ovoid"], [85, 3, 1, "", "generalised_quadrangle_with_spread"], [85, 3, 1, "", "is_GQ_with_spread"]], "sage.combinat.designs.group_divisible_designs": [[86, 3, 1, "", "GDD_4_2"], [86, 1, 1, "", "GroupDivisibleDesign"], [86, 3, 1, "", "group_divisible_design"]], "sage.combinat.designs.group_divisible_designs.GroupDivisibleDesign": [[86, 2, 1, "", "groups"]], "sage.combinat.designs.incidence_structures": [[87, 1, 1, "", "IncidenceStructure"]], "sage.combinat.designs.incidence_structures.IncidenceStructure": [[87, 2, 1, "", "automorphism_group"], [87, 2, 1, "", "block_sizes"], [87, 2, 1, "", "blocks"], [87, 2, 1, "", "canonical_label"], [87, 2, 1, "", "coloring"], [87, 2, 1, "", "complement"], [87, 2, 1, "", "copy"], [87, 2, 1, "", "degree"], [87, 2, 1, "", "degrees"], [87, 2, 1, "", "dual"], [87, 2, 1, "", "edge_coloring"], [87, 2, 1, "", "ground_set"], [87, 2, 1, "", "incidence_graph"], [87, 2, 1, "", "incidence_matrix"], [87, 2, 1, "", "induced_substructure"], [87, 2, 1, "", "intersection_graph"], [87, 2, 1, "", "is_berge_cyclic"], [87, 2, 1, "", "is_connected"], [87, 2, 1, "", "is_generalized_quadrangle"], [87, 2, 1, "", "is_isomorphic"], [87, 2, 1, "", "is_regular"], [87, 2, 1, "", "is_resolvable"], [87, 2, 1, "", "is_simple"], [87, 2, 1, "", "is_spread"], [87, 2, 1, "", "is_t_design"], [87, 2, 1, "", "is_uniform"], [87, 2, 1, "", "isomorphic_substructures_iterator"], [87, 2, 1, "", "num_blocks"], [87, 2, 1, "", "num_points"], [87, 2, 1, "", "packing"], [87, 2, 1, "", "rank"], [87, 2, 1, "", "relabel"], [87, 2, 1, "", "trace"]], "sage.combinat.designs.latin_squares": [[88, 3, 1, "", "MOLS_table"], [88, 3, 1, "", "are_mutually_orthogonal_latin_squares"], [88, 3, 1, "", "latin_square_product"], [88, 3, 1, "", "mutually_orthogonal_latin_squares"]], "sage.combinat.designs.orthogonal_arrays": [[89, 1, 1, "", "OAMainFunctions"], [89, 3, 1, "", "OA_find_disjoint_blocks"], [89, 3, 1, "", "OA_from_PBD"], [89, 3, 1, "", "OA_from_Vmt"], [89, 3, 1, "", "OA_from_quasi_difference_matrix"], [89, 3, 1, "", "OA_from_wider_OA"], [89, 3, 1, "", "OA_n_times_2_pow_c_from_matrix"], [89, 3, 1, "", "OA_relabel"], [89, 3, 1, "", "QDM_from_Vmt"], [89, 3, 1, "", "TD_product"], [89, 1, 1, "", "TransversalDesign"], [89, 3, 1, "", "incomplete_orthogonal_array"], [89, 3, 1, "", "is_transversal_design"], [89, 3, 1, "", "largest_available_k"], [89, 3, 1, "", "orthogonal_array"], [89, 3, 1, "", "transversal_design"], [89, 3, 1, "", "wilson_construction"]], "sage.combinat.designs.orthogonal_arrays.OAMainFunctions": [[89, 2, 1, "", "build"], [89, 2, 1, "", "exists"], [89, 2, 1, "", "explain_construction"], [89, 2, 1, "", "is_available"], [89, 2, 1, "", "largest_available_k"]], "sage.combinat.designs.orthogonal_arrays_build_recursive": [[90, 3, 1, "", "OA_and_oval"], [90, 3, 1, "", "brouwer_separable_design"], [90, 3, 1, "", "construction_3_3"], [90, 3, 1, "", "construction_3_4"], [90, 3, 1, "", "construction_3_5"], [90, 3, 1, "", "construction_3_6"], [90, 3, 1, "", "construction_q_x"], [90, 3, 1, "", "three_factor_product"], [90, 3, 1, "", "thwart_lemma_3_5"], [90, 3, 1, "", "thwart_lemma_4_1"]], "sage.combinat.designs.orthogonal_arrays_find_recursive": [[91, 3, 1, "", "find_brouwer_separable_design"], [91, 3, 1, "", "find_brouwer_van_rees_with_one_truncated_column"], [91, 3, 1, "", "find_construction_3_3"], [91, 3, 1, "", "find_construction_3_4"], [91, 3, 1, "", "find_construction_3_5"], [91, 3, 1, "", "find_construction_3_6"], [91, 3, 1, "", "find_product_decomposition"], [91, 3, 1, "", "find_q_x"], [91, 3, 1, "", "find_recursive_construction"], [91, 3, 1, "", "find_three_factor_product"], [91, 3, 1, "", "find_thwart_lemma_3_5"], [91, 3, 1, "", "find_thwart_lemma_4_1"], [91, 3, 1, "", "find_wilson_decomposition_with_one_truncated_group"], [91, 3, 1, "", "find_wilson_decomposition_with_two_truncated_groups"], [91, 3, 1, "", "int_as_sum"]], "sage.combinat.designs.resolvable_bibd": [[92, 3, 1, "", "PBD_4_7"], [92, 3, 1, "", "PBD_4_7_from_Y"], [92, 3, 1, "", "kirkman_triple_system"], [92, 3, 1, "", "resolvable_balanced_incomplete_block_design"], [92, 3, 1, "", "v_4_1_rbibd"]], "sage.combinat.designs.steiner_quadruple_systems": [[93, 3, 1, "", "P"], [93, 3, 1, "", "barP"], [93, 3, 1, "", "barP_system"], [93, 3, 1, "", "four_n_minus_six"], [93, 3, 1, "", "relabel_system"], [93, 3, 1, "", "steiner_quadruple_system"], [93, 3, 1, "", "three_n_minus_eight"], [93, 3, 1, "", "three_n_minus_four"], [93, 3, 1, "", "three_n_minus_two"], [93, 3, 1, "", "twelve_n_minus_ten"], [93, 3, 1, "", "two_n"]], "sage.combinat.designs.subhypergraph_search": [[94, 1, 1, "", "SubHypergraphSearch"]], "sage.combinat.designs.subhypergraph_search.SubHypergraphSearch": [[94, 2, 1, "", "relabel_heuristic"]], "sage.combinat.designs.twographs": [[95, 1, 1, "", "TwoGraph"], [95, 3, 1, "", "is_twograph"], [95, 3, 1, "", "taylor_twograph"], [95, 3, 1, "", "twograph_descendant"]], "sage.combinat.designs.twographs.TwoGraph": [[95, 2, 1, "", "complement"], [95, 2, 1, "", "descendant"], [95, 2, 1, "", "is_regular_twograph"]], "sage.combinat.diagram": [[96, 1, 1, "", "Diagram"], [96, 1, 1, "", "Diagrams"], [96, 1, 1, "", "NorthwestDiagram"], [96, 1, 1, "", "NorthwestDiagrams"], [96, 3, 1, "", "RotheDiagram"]], "sage.combinat.diagram.Diagram": [[96, 2, 1, "", "cells"], [96, 2, 1, "", "check"], [96, 2, 1, "", "n_cells"], [96, 2, 1, "", "ncols"], [96, 2, 1, "", "nrows"], [96, 2, 1, "", "number_of_cells"], [96, 2, 1, "", "number_of_cols"], [96, 2, 1, "", "number_of_rows"], [96, 2, 1, "", "pp"], [96, 2, 1, "", "size"]], "sage.combinat.diagram.Diagrams": [[96, 4, 1, "", "Element"], [96, 2, 1, "", "from_composition"], [96, 2, 1, "", "from_polyomino"], [96, 2, 1, "", "from_zero_one_matrix"]], "sage.combinat.diagram.NorthwestDiagram": [[96, 2, 1, "", "check"], [96, 2, 1, "", "peelable_tableaux"]], "sage.combinat.diagram.NorthwestDiagrams": [[96, 4, 1, "", "Element"], [96, 2, 1, "", "from_parallelogram_polyomino"], [96, 2, 1, "", "from_partition"], [96, 2, 1, "", "from_permutation"], [96, 2, 1, "", "from_skew_partition"], [96, 2, 1, "", "rothe_diagram"]], "sage.combinat.diagram_algebras": [[97, 1, 1, "", "AbstractPartitionDiagram"], [97, 1, 1, "", "AbstractPartitionDiagrams"], [97, 1, 1, "", "BrauerAlgebra"], [97, 1, 1, "", "BrauerDiagram"], [97, 1, 1, "", "BrauerDiagrams"], [97, 1, 1, "", "DiagramAlgebra"], [97, 1, 1, "", "DiagramBasis"], [97, 1, 1, "", "IdealDiagram"], [97, 1, 1, "", "IdealDiagrams"], [97, 1, 1, "", "OrbitBasis"], [97, 1, 1, "", "PartitionAlgebra"], [97, 1, 1, "", "PartitionDiagram"], [97, 1, 1, "", "PartitionDiagrams"], [97, 1, 1, "", "PlanarAlgebra"], [97, 1, 1, "", "PlanarDiagram"], [97, 1, 1, "", "PlanarDiagrams"], [97, 1, 1, "", "PropagatingIdeal"], [97, 1, 1, "", "SubPartitionAlgebra"], [97, 3, 1, "", "TL_diagram_ascii_art"], [97, 1, 1, "", "TemperleyLiebAlgebra"], [97, 1, 1, "", "TemperleyLiebDiagram"], [97, 1, 1, "", "TemperleyLiebDiagrams"], [97, 1, 1, "", "UnitDiagramMixin"], [97, 3, 1, "", "brauer_diagrams"], [97, 3, 1, "", "diagram_latex"], [97, 3, 1, "", "ideal_diagrams"], [97, 3, 1, "", "identity_set_partition"], [97, 3, 1, "", "is_planar"], [97, 3, 1, "", "pair_to_graph"], [97, 3, 1, "", "partition_diagrams"], [97, 3, 1, "", "planar_diagrams"], [97, 3, 1, "", "planar_partitions_rec"], [97, 3, 1, "", "propagating_number"], [97, 3, 1, "", "temperley_lieb_diagrams"], [97, 3, 1, "", "to_Brauer_partition"], [97, 3, 1, "", "to_graph"], [97, 3, 1, "", "to_set_partition"]], "sage.combinat.diagram_algebras.AbstractPartitionDiagram": [[97, 2, 1, "", "base_diagram"], [97, 2, 1, "", "check"], [97, 2, 1, "", "compose"], [97, 2, 1, "", "count_blocks_of_size"], [97, 2, 1, "", "diagram"], [97, 2, 1, "", "dual"], [97, 2, 1, "", "is_planar"], [97, 2, 1, "", "order"], [97, 2, 1, "", "propagating_number"], [97, 2, 1, "", "set_partition"]], "sage.combinat.diagram_algebras.AbstractPartitionDiagrams": [[97, 4, 1, "", "Element"]], "sage.combinat.diagram_algebras.BrauerAlgebra": [[97, 2, 1, "", "jucys_murphy"], [97, 4, 1, "", "options"]], "sage.combinat.diagram_algebras.BrauerDiagram": [[97, 2, 1, "", "bijection_on_free_nodes"], [97, 2, 1, "", "check"], [97, 2, 1, "", "involution_permutation_triple"], [97, 2, 1, "", "is_elementary_symmetric"], [97, 4, 1, "", "options"], [97, 2, 1, "", "perm"]], "sage.combinat.diagram_algebras.BrauerDiagrams": [[97, 4, 1, "", "Element"], [97, 2, 1, "", "cardinality"], [97, 2, 1, "", "from_involution_permutation_triple"], [97, 4, 1, "", "options"], [97, 2, 1, "", "symmetric_diagrams"]], "sage.combinat.diagram_algebras.DiagramAlgebra": [[97, 1, 1, "", "Element"], [97, 2, 1, "", "order"], [97, 2, 1, "", "set_partitions"]], "sage.combinat.diagram_algebras.DiagramAlgebra.Element": [[97, 2, 1, "", "diagram"], [97, 2, 1, "", "diagrams"]], "sage.combinat.diagram_algebras.DiagramBasis": [[97, 2, 1, "", "product_on_basis"]], "sage.combinat.diagram_algebras.IdealDiagram": [[97, 2, 1, "", "check"]], "sage.combinat.diagram_algebras.IdealDiagrams": [[97, 4, 1, "", "Element"]], "sage.combinat.diagram_algebras.OrbitBasis": [[97, 1, 1, "", "Element"], [97, 2, 1, "", "diagram_basis"], [97, 2, 1, "", "one"], [97, 2, 1, "", "product_on_basis"]], "sage.combinat.diagram_algebras.OrbitBasis.Element": [[97, 2, 1, "", "to_diagram_basis"]], "sage.combinat.diagram_algebras.PartitionAlgebra": [[97, 1, 1, "", "Element"], [97, 2, 1, "", "L"], [97, 2, 1, "", "a"], [97, 2, 1, "", "e"], [97, 2, 1, "", "generator_a"], [97, 2, 1, "", "generator_e"], [97, 2, 1, "", "generator_s"], [97, 2, 1, "", "jucys_murphy_element"], [97, 2, 1, "", "orbit_basis"], [97, 2, 1, "", "s"], [97, 2, 1, "", "sigma"]], "sage.combinat.diagram_algebras.PartitionAlgebra.Element": [[97, 2, 1, "", "dual"], [97, 2, 1, "", "to_orbit_basis"]], "sage.combinat.diagram_algebras.PartitionDiagrams": [[97, 4, 1, "", "Element"], [97, 2, 1, "", "cardinality"]], "sage.combinat.diagram_algebras.PlanarDiagram": [[97, 2, 1, "", "check"]], "sage.combinat.diagram_algebras.PlanarDiagrams": [[97, 4, 1, "", "Element"], [97, 2, 1, "", "cardinality"]], "sage.combinat.diagram_algebras.PropagatingIdeal": [[97, 1, 1, "", "Element"]], "sage.combinat.diagram_algebras.SubPartitionAlgebra": [[97, 1, 1, "", "Element"], [97, 2, 1, "", "ambient"], [97, 2, 1, "", "lift"], [97, 2, 1, "", "retract"]], "sage.combinat.diagram_algebras.SubPartitionAlgebra.Element": [[97, 2, 1, "", "to_orbit_basis"]], "sage.combinat.diagram_algebras.TemperleyLiebDiagram": [[97, 2, 1, "", "check"]], "sage.combinat.diagram_algebras.TemperleyLiebDiagrams": [[97, 4, 1, "", "Element"], [97, 2, 1, "", "cardinality"]], "sage.combinat.diagram_algebras.UnitDiagramMixin": [[97, 2, 1, "", "one_basis"]], "sage.combinat.dlx": [[98, 3, 1, "", "AllExactCovers"], [98, 1, 1, "", "DLXMatrix"], [98, 3, 1, "", "OneExactCover"]], "sage.combinat.dlx.DLXMatrix": [[98, 2, 1, "", "next"]], "sage.combinat.dyck_word": [[99, 1, 1, "", "CompleteDyckWords"], [99, 1, 1, "", "CompleteDyckWords_all"], [99, 1, 1, "", "CompleteDyckWords_size"], [99, 1, 1, "", "DyckWord"], [99, 1, 1, "", "DyckWordBacktracker"], [99, 1, 1, "", "DyckWord_complete"], [99, 1, 1, "", "DyckWords"], [99, 1, 1, "", "DyckWords_all"], [99, 1, 1, "", "DyckWords_size"], [99, 3, 1, "", "is_a"], [99, 3, 1, "", "is_area_sequence"], [99, 3, 1, "", "pealing"], [99, 3, 1, "", "replace_parens"], [99, 3, 1, "", "replace_symbols"]], "sage.combinat.dyck_word.CompleteDyckWords": [[99, 4, 1, "", "Element"], [99, 2, 1, "", "from_Catalan_code"], [99, 2, 1, "", "from_area_sequence"], [99, 2, 1, "", "from_non_decreasing_parking_function"], [99, 2, 1, "", "from_noncrossing_partition"]], "sage.combinat.dyck_word.CompleteDyckWords_all": [[99, 1, 1, "", "height_poset"]], "sage.combinat.dyck_word.CompleteDyckWords_all.height_poset": [[99, 2, 1, "", "le"]], "sage.combinat.dyck_word.CompleteDyckWords_size": [[99, 2, 1, "", "cardinality"], [99, 2, 1, "", "random_element"]], "sage.combinat.dyck_word.DyckWord": [[99, 2, 1, "", "ascent_prime_decomposition"], [99, 2, 1, "", "associated_parenthesis"], [99, 2, 1, "", "catalan_factorization"], [99, 2, 1, "", "height"], [99, 2, 1, "", "heights"], [99, 2, 1, "", "is_complete"], [99, 2, 1, "", "latex_options"], [99, 2, 1, "", "length"], [99, 2, 1, "", "number_of_close_symbols"], [99, 2, 1, "", "number_of_double_rises"], [99, 2, 1, "", "number_of_initial_rises"], [99, 2, 1, "", "number_of_open_symbols"], [99, 2, 1, "", "number_of_peaks"], [99, 2, 1, "", "number_of_touch_points"], [99, 2, 1, "", "number_of_valleys"], [99, 2, 1, "", "peaks"], [99, 2, 1, "", "plot"], [99, 2, 1, "", "position_of_first_return"], [99, 2, 1, "", "positions_of_double_rises"], [99, 2, 1, "", "pp"], [99, 2, 1, "", "pretty_print"], [99, 2, 1, "", "returns_to_zero"], [99, 2, 1, "", "rise_composition"], [99, 2, 1, "", "set_latex_options"], [99, 2, 1, "", "tamari_interval"], [99, 2, 1, "", "to_area_sequence"], [99, 2, 1, "", "to_binary_tree"], [99, 2, 1, "", "to_binary_tree_tamari"], [99, 2, 1, "", "to_path_string"], [99, 2, 1, "", "to_standard_tableau"], [99, 2, 1, "", "to_tamari_sorting_tuple"], [99, 2, 1, "", "touch_composition"], [99, 2, 1, "", "touch_points"], [99, 2, 1, "", "valleys"]], "sage.combinat.dyck_word.DyckWord_complete": [[99, 2, 1, "", "area"], [99, 2, 1, "", "area_dinv_to_bounce_area_map"], [99, 2, 1, "", "bounce"], [99, 2, 1, "", "bounce_area_to_area_dinv_map"], [99, 2, 1, "", "bounce_path"], [99, 2, 1, "", "characteristic_symmetric_function"], [99, 2, 1, "", "decomposition_reverse"], [99, 2, 1, "", "dinv"], [99, 2, 1, "", "first_return_decomposition"], [99, 2, 1, "", "list_parking_functions"], [99, 2, 1, "", "major_index"], [99, 2, 1, "", "number_of_parking_functions"], [99, 2, 1, "", "number_of_tunnels"], [99, 2, 1, "", "pyramid_weight"], [99, 2, 1, "", "reading_permutation"], [99, 2, 1, "", "reverse"], [99, 2, 1, "", "semilength"], [99, 2, 1, "", "to_132_avoiding_permutation"], [99, 2, 1, "", "to_312_avoiding_permutation"], [99, 2, 1, "", "to_321_avoiding_permutation"], [99, 2, 1, "", "to_Catalan_code"], [99, 2, 1, "", "to_alternating_sign_matrix"], [99, 2, 1, "", "to_non_decreasing_parking_function"], [99, 2, 1, "", "to_noncrossing_partition"], [99, 2, 1, "", "to_noncrossing_permutation"], [99, 2, 1, "", "to_ordered_tree"], [99, 2, 1, "", "to_pair_of_standard_tableaux"], [99, 2, 1, "", "to_partition"], [99, 2, 1, "", "to_permutation"], [99, 2, 1, "", "to_triangulation"], [99, 2, 1, "", "to_triangulation_as_graph"], [99, 2, 1, "", "tunnels"]], "sage.combinat.dyck_word.DyckWords": [[99, 4, 1, "", "Element"], [99, 2, 1, "", "from_heights"], [99, 2, 1, "", "min_from_heights"], [99, 4, 1, "", "options"]], "sage.combinat.dyck_word.DyckWords_size": [[99, 2, 1, "", "cardinality"]], "sage.combinat.e_one_star": [[100, 1, 1, "", "E1Star"], [100, 1, 1, "", "Face"], [100, 1, 1, "", "Patch"]], "sage.combinat.e_one_star.E1Star": [[100, 2, 1, "", "inverse_matrix"], [100, 2, 1, "", "matrix"], [100, 2, 1, "", "sigma"]], "sage.combinat.e_one_star.Face": [[100, 2, 1, "", "color"], [100, 2, 1, "", "type"], [100, 2, 1, "", "vector"]], "sage.combinat.e_one_star.Patch": [[100, 2, 1, "", "difference"], [100, 2, 1, "", "dimension"], [100, 2, 1, "", "faces_of_color"], [100, 2, 1, "", "faces_of_type"], [100, 2, 1, "", "faces_of_vector"], [100, 2, 1, "", "occurrences_of"], [100, 2, 1, "", "plot"], [100, 2, 1, "", "plot3d"], [100, 2, 1, "", "plot_tikz"], [100, 2, 1, "", "repaint"], [100, 2, 1, "", "translate"], [100, 2, 1, "", "union"]], "sage.combinat.enumeration_mod_permgroup": [[102, 3, 1, "", "all_children"], [102, 3, 1, "", "canonical_children"], [102, 3, 1, "", "canonical_representative_of_orbit_of"], [102, 3, 1, "", "is_canonical"], [102, 3, 1, "", "lex_cmp"], [102, 3, 1, "", "lex_cmp_partial"], [102, 3, 1, "", "orbit"]], "sage.combinat.expnums": [[103, 3, 1, "", "expnums"], [103, 3, 1, "", "expnums2"]], "sage.combinat.fast_vector_partitions": [[105, 3, 1, "", "fast_vector_partitions"], [105, 3, 1, "", "recursive_vector_partitions"], [105, 3, 1, "", "recursive_within_from_to"], [105, 3, 1, "", "within_from_to"]], "sage.combinat.finite_state_machine": [[106, 1, 1, "", "Automaton"], [106, 3, 1, "", "FSMLetterSymbol"], [106, 1, 1, "", "FSMProcessIterator"], [106, 1, 1, "", "FSMState"], [106, 1, 1, "", "FSMTransition"], [106, 3, 1, "", "FSMWordSymbol"], [106, 1, 1, "", "FiniteStateMachine"], [106, 1, 1, "", "Transducer"], [106, 3, 1, "", "duplicate_transition_add_input"], [106, 3, 1, "", "duplicate_transition_ignore"], [106, 3, 1, "", "duplicate_transition_raise_error"], [106, 3, 1, "", "equal"], [106, 3, 1, "", "full_group_by"], [106, 3, 1, "", "is_Automaton"], [106, 3, 1, "", "is_FSMProcessIterator"], [106, 3, 1, "", "is_FSMState"], [106, 3, 1, "", "is_FSMTransition"], [106, 3, 1, "", "is_FiniteStateMachine"], [106, 3, 1, "", "is_Transducer"], [106, 3, 1, "", "setup_latex_preamble"], [106, 3, 1, "", "startswith"], [106, 3, 1, "", "tupleofwords_to_wordoftuples"], [106, 3, 1, "", "wordoftuples_to_tupleofwords"]], "sage.combinat.finite_state_machine.Automaton": [[106, 2, 1, "", "cartesian_product"], [106, 2, 1, "", "complement"], [106, 2, 1, "", "determinisation"], [106, 2, 1, "", "intersection"], [106, 2, 1, "", "is_equivalent"], [106, 2, 1, "", "language"], [106, 2, 1, "", "minimization"], [106, 2, 1, "", "process"], [106, 2, 1, "", "shannon_parry_markov_chain"], [106, 2, 1, "", "with_output"]], "sage.combinat.finite_state_machine.FSMProcessIterator": [[106, 1, 1, "", "Current"], [106, 1, 1, "", "FinishedBranch"], [106, 2, 1, "", "next"], [106, 2, 1, "", "preview_word"], [106, 2, 1, "", "result"]], "sage.combinat.finite_state_machine.FSMProcessIterator.FinishedBranch": [[106, 4, 1, "", "accept"], [106, 4, 1, "", "output"], [106, 4, 1, "", "state"]], "sage.combinat.finite_state_machine.FSMState": [[106, 2, 1, "", "copy"], [106, 2, 1, "", "deepcopy"], [106, 5, 1, "", "final_word_out"], [106, 2, 1, "", "fully_equal"], [106, 4, 1, "", "initial_probability"], [106, 5, 1, "", "is_final"], [106, 4, 1, "", "is_initial"], [106, 2, 1, "", "label"], [106, 2, 1, "", "relabeled"]], "sage.combinat.finite_state_machine.FSMTransition": [[106, 2, 1, "", "copy"], [106, 2, 1, "", "deepcopy"], [106, 4, 1, "", "from_state"], [106, 4, 1, "", "to_state"], [106, 4, 1, "", "word_in"], [106, 4, 1, "", "word_out"]], "sage.combinat.finite_state_machine.FiniteStateMachine": [[106, 2, 1, "", "__call__"], [106, 2, 1, "", "accessible_components"], [106, 2, 1, "", "add_from_transition_function"], [106, 2, 1, "", "add_state"], [106, 2, 1, "", "add_states"], [106, 2, 1, "", "add_transition"], [106, 2, 1, "", "add_transitions_from_function"], [106, 2, 1, "", "adjacency_matrix"], [106, 2, 1, "", "asymptotic_moments"], [106, 2, 1, "", "coaccessible_components"], [106, 2, 1, "", "completion"], [106, 2, 1, "", "composition"], [106, 2, 1, "", "concatenation"], [106, 2, 1, "", "construct_final_word_out"], [106, 2, 1, "", "copy"], [106, 2, 1, "", "deepcopy"], [106, 4, 1, "", "default_format_letter"], [106, 2, 1, "", "default_format_transition_label"], [106, 2, 1, "", "delete_state"], [106, 2, 1, "", "delete_transition"], [106, 2, 1, "", "determine_alphabets"], [106, 2, 1, "", "determine_input_alphabet"], [106, 2, 1, "", "determine_output_alphabet"], [106, 2, 1, "", "digraph"], [106, 2, 1, "", "disjoint_union"], [106, 2, 1, "", "empty_copy"], [106, 2, 1, "", "epsilon_successors"], [106, 2, 1, "", "equivalence_classes"], [106, 2, 1, "", "final_components"], [106, 2, 1, "", "final_states"], [106, 4, 1, "", "format_letter"], [106, 2, 1, "", "format_letter_negative"], [106, 2, 1, "", "format_transition_label"], [106, 2, 1, "", "format_transition_label_reversed"], [106, 2, 1, "", "graph"], [106, 2, 1, "", "has_final_state"], [106, 2, 1, "", "has_final_states"], [106, 2, 1, "", "has_initial_state"], [106, 2, 1, "", "has_initial_states"], [106, 2, 1, "", "has_state"], [106, 2, 1, "", "has_transition"], [106, 2, 1, "", "induced_sub_finite_state_machine"], [106, 2, 1, "", "initial_states"], [106, 4, 1, "", "input_alphabet"], [106, 2, 1, "", "input_projection"], [106, 2, 1, "", "intersection"], [106, 2, 1, "", "is_Markov_chain"], [106, 2, 1, "", "is_complete"], [106, 2, 1, "", "is_connected"], [106, 2, 1, "", "is_deterministic"], [106, 2, 1, "", "is_monochromatic"], [106, 2, 1, "", "iter_final_states"], [106, 2, 1, "", "iter_initial_states"], [106, 2, 1, "", "iter_process"], [106, 2, 1, "", "iter_states"], [106, 2, 1, "", "iter_transitions"], [106, 2, 1, "", "kleene_star"], [106, 2, 1, "", "language"], [106, 2, 1, "", "latex_options"], [106, 2, 1, "", "markov_chain_simplification"], [106, 2, 1, "", "merged_transitions"], [106, 2, 1, "", "moments_waiting_time"], [106, 2, 1, "", "number_of_words"], [106, 2, 1, "", "on_duplicate_transition"], [106, 4, 1, "", "output_alphabet"], [106, 2, 1, "", "output_projection"], [106, 2, 1, "", "plot"], [106, 2, 1, "", "predecessors"], [106, 2, 1, "", "prepone_output"], [106, 2, 1, "", "process"], [106, 2, 1, "", "product_FiniteStateMachine"], [106, 2, 1, "", "projection"], [106, 2, 1, "", "quotient"], [106, 2, 1, "", "relabeled"], [106, 2, 1, "", "remove_epsilon_transitions"], [106, 2, 1, "", "set_coordinates"], [106, 2, 1, "", "split_transitions"], [106, 2, 1, "", "state"], [106, 2, 1, "", "states"], [106, 2, 1, "", "transition"], [106, 2, 1, "", "transitions"], [106, 2, 1, "", "transposition"], [106, 2, 1, "", "with_final_word_out"]], "sage.combinat.finite_state_machine.Transducer": [[106, 2, 1, "", "cartesian_product"], [106, 2, 1, "", "intersection"], [106, 2, 1, "", "process"], [106, 2, 1, "", "simplification"]], "sage.combinat.finite_state_machine_generators": [[107, 1, 1, "", "AutomatonGenerators"], [107, 1, 1, "", "TransducerGenerators"]], "sage.combinat.finite_state_machine_generators.AutomatonGenerators": [[107, 2, 1, "", "AnyLetter"], [107, 2, 1, "", "AnyWord"], [107, 2, 1, "", "ContainsWord"], [107, 2, 1, "", "EmptyWord"], [107, 2, 1, "", "Word"]], "sage.combinat.finite_state_machine_generators.TransducerGenerators": [[107, 2, 1, "", "CountSubblockOccurrences"], [107, 2, 1, "", "GrayCode"], [107, 2, 1, "", "Identity"], [107, 2, 1, "", "Recursion"], [107, 1, 1, "", "RecursionRule"], [107, 2, 1, "", "Wait"], [107, 2, 1, "", "abs"], [107, 2, 1, "", "add"], [107, 2, 1, "", "all"], [107, 2, 1, "", "any"], [107, 2, 1, "", "map"], [107, 2, 1, "", "operator"], [107, 2, 1, "", "sub"], [107, 2, 1, "", "weight"]], "sage.combinat.finite_state_machine_generators.TransducerGenerators.RecursionRule": [[107, 4, 1, "", "K"], [107, 4, 1, "", "k"], [107, 4, 1, "", "r"], [107, 4, 1, "", "s"], [107, 4, 1, "", "t"]], "sage.combinat.fqsym": [[108, 1, 1, "", "FQSymBases"], [108, 1, 1, "", "FQSymBasis_abstract"], [108, 1, 1, "", "FreeQuasisymmetricFunctions"]], "sage.combinat.fqsym.FQSymBases": [[108, 1, 1, "", "ElementMethods"], [108, 1, 1, "", "ParentMethods"], [108, 2, 1, "", "super_categories"]], "sage.combinat.fqsym.FQSymBases.ElementMethods": [[108, 2, 1, "", "omega_involution"], [108, 2, 1, "", "psi_involution"], [108, 2, 1, "", "star_involution"], [108, 2, 1, "", "to_qsym"], [108, 2, 1, "", "to_symmetric_group_algebra"], [108, 2, 1, "", "to_wqsym"]], "sage.combinat.fqsym.FQSymBases.ParentMethods": [[108, 2, 1, "", "basis"], [108, 2, 1, "", "from_symmetric_group_algebra"], [108, 2, 1, "", "is_commutative"], [108, 2, 1, "", "is_field"], [108, 2, 1, "", "one_basis"], [108, 2, 1, "", "prec"], [108, 2, 1, "", "prec_by_coercion"], [108, 2, 1, "", "some_elements"], [108, 2, 1, "", "succ"], [108, 2, 1, "", "succ_by_coercion"]], "sage.combinat.fqsym.FQSymBasis_abstract": [[108, 2, 1, "", "an_element"]], "sage.combinat.fqsym.FreeQuasisymmetricFunctions": [[108, 1, 1, "", "F"], [108, 1, 1, "", "G"], [108, 1, 1, "", "M"], [108, 2, 1, "", "a_realization"]], "sage.combinat.fqsym.FreeQuasisymmetricFunctions.F": [[108, 1, 1, "", "Element"], [108, 2, 1, "", "coproduct_on_basis"], [108, 2, 1, "", "degree_on_basis"], [108, 2, 1, "", "prec_product_on_basis"], [108, 2, 1, "", "product_on_basis"], [108, 2, 1, "", "succ_product_on_basis"]], "sage.combinat.fqsym.FreeQuasisymmetricFunctions.F.Element": [[108, 2, 1, "", "to_symmetric_group_algebra"]], "sage.combinat.fqsym.FreeQuasisymmetricFunctions.G": [[108, 2, 1, "", "degree_on_basis"]], "sage.combinat.fqsym.FreeQuasisymmetricFunctions.M": [[108, 1, 1, "", "Element"], [108, 2, 1, "", "coproduct_on_basis"], [108, 2, 1, "", "degree_on_basis"]], "sage.combinat.fqsym.FreeQuasisymmetricFunctions.M.Element": [[108, 2, 1, "", "star_involution"]], "sage.combinat.free_dendriform_algebra": [[109, 1, 1, "", "DendriformFunctor"], [109, 1, 1, "", "FreeDendriformAlgebra"]], "sage.combinat.free_dendriform_algebra.DendriformFunctor": [[109, 2, 1, "", "merge"], [109, 4, 1, "", "rank"]], "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra": [[109, 2, 1, "", "algebra_generators"], [109, 2, 1, "", "an_element"], [109, 2, 1, "", "change_ring"], [109, 2, 1, "", "construction"], [109, 2, 1, "", "coproduct_on_basis"], [109, 2, 1, "", "degree_on_basis"], [109, 2, 1, "", "gen"], [109, 2, 1, "", "gens"], [109, 2, 1, "", "one_basis"], [109, 2, 1, "", "over"], [109, 2, 1, "", "prec"], [109, 2, 1, "", "prec_product_on_basis"], [109, 2, 1, "", "product_on_basis"], [109, 2, 1, "", "some_elements"], [109, 2, 1, "", "succ"], [109, 2, 1, "", "succ_product_on_basis"], [109, 2, 1, "", "under"], [109, 2, 1, "", "variable_names"]], "sage.combinat.free_module": [[110, 1, 1, "", "CartesianProductWithFlattening"], [110, 1, 1, "", "CombinatorialFreeModule"], [110, 1, 1, "", "CombinatorialFreeModule_CartesianProduct"], [110, 1, 1, "", "CombinatorialFreeModule_Tensor"]], "sage.combinat.free_module.CombinatorialFreeModule": [[110, 4, 1, "", "CartesianProduct"], [110, 4, 1, "", "Element"], [110, 4, 1, "", "Tensor"], [110, 2, 1, "", "construction"], [110, 2, 1, "", "dimension"], [110, 2, 1, "", "element_class"], [110, 2, 1, "", "from_vector"], [110, 2, 1, "", "get_order"], [110, 2, 1, "", "get_order_key"], [110, 2, 1, "", "is_exact"], [110, 2, 1, "", "linear_combination"], [110, 2, 1, "", "monomial"], [110, 2, 1, "", "rank"], [110, 2, 1, "", "set_order"], [110, 2, 1, "", "sum"], [110, 2, 1, "", "sum_of_terms"], [110, 2, 1, "", "term"], [110, 2, 1, "", "zero"]], "sage.combinat.free_module.CombinatorialFreeModule_CartesianProduct": [[110, 1, 1, "", "Element"], [110, 2, 1, "", "cartesian_embedding"], [110, 2, 1, "", "cartesian_factors"], [110, 2, 1, "", "cartesian_projection"], [110, 2, 1, "", "summand_embedding"], [110, 2, 1, "", "summand_projection"]], "sage.combinat.free_module.CombinatorialFreeModule_Tensor": [[110, 2, 1, "", "tensor_constructor"], [110, 2, 1, "", "tensor_factors"]], "sage.combinat.free_prelie_algebra": [[111, 1, 1, "", "FreePreLieAlgebra"], [111, 1, 1, "", "PreLieFunctor"]], "sage.combinat.free_prelie_algebra.FreePreLieAlgebra": [[111, 1, 1, "", "Element"], [111, 2, 1, "", "algebra_generators"], [111, 2, 1, "", "an_element"], [111, 2, 1, "", "bracket_on_basis"], [111, 2, 1, "", "change_ring"], [111, 2, 1, "", "construction"], [111, 2, 1, "", "degree_on_basis"], [111, 2, 1, "", "gen"], [111, 2, 1, "", "gens"], [111, 2, 1, "", "nap_product"], [111, 2, 1, "", "nap_product_on_basis"], [111, 2, 1, "", "pre_Lie_product"], [111, 2, 1, "", "pre_Lie_product_on_basis"], [111, 2, 1, "", "product_on_basis"], [111, 2, 1, "", "some_elements"], [111, 2, 1, "", "variable_names"]], "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.Element": [[111, 2, 1, "", "lift"]], "sage.combinat.free_prelie_algebra.PreLieFunctor": [[111, 2, 1, "", "merge"], [111, 4, 1, "", "rank"]], "sage.combinat.fully_commutative_elements": [[112, 1, 1, "", "FullyCommutativeElement"], [112, 1, 1, "", "FullyCommutativeElements"]], "sage.combinat.fully_commutative_elements.FullyCommutativeElement": [[112, 2, 1, "", "check"], [112, 2, 1, "", "coset_decomposition"], [112, 2, 1, "", "descents"], [112, 2, 1, "", "find_descent"], [112, 2, 1, "", "group_element"], [112, 2, 1, "", "has_descent"], [112, 2, 1, "", "heap"], [112, 2, 1, "", "is_fully_commutative"], [112, 2, 1, "", "n_value"], [112, 2, 1, "", "normalize"], [112, 2, 1, "", "plot_heap"], [112, 2, 1, "", "star_operation"]], "sage.combinat.fully_commutative_elements.FullyCommutativeElements": [[112, 4, 1, "", "Element"], [112, 2, 1, "", "coxeter_group"], [112, 2, 1, "", "iterate_to_length"]], "sage.combinat.fully_packed_loop": [[113, 1, 1, "", "FullyPackedLoop"], [113, 1, 1, "", "FullyPackedLoops"]], "sage.combinat.fully_packed_loop.FullyPackedLoop": [[113, 2, 1, "", "gyration"], [113, 2, 1, "", "link_pattern"], [113, 2, 1, "", "plot"], [113, 2, 1, "", "six_vertex_model"], [113, 2, 1, "", "to_alternating_sign_matrix"]], "sage.combinat.fully_packed_loop.FullyPackedLoops": [[113, 4, 1, "", "Element"], [113, 2, 1, "", "cardinality"], [113, 2, 1, "", "size"]], "sage.combinat.gelfand_tsetlin_patterns": [[114, 1, 1, "", "GelfandTsetlinPattern"], [114, 1, 1, "", "GelfandTsetlinPatterns"], [114, 1, 1, "", "GelfandTsetlinPatternsTopRow"]], "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern": [[114, 2, 1, "", "Tokuyama_coefficient"], [114, 2, 1, "", "bender_knuth_involution"], [114, 2, 1, "", "boxed_entries"], [114, 2, 1, "", "check"], [114, 2, 1, "", "circled_entries"], [114, 2, 1, "", "is_strict"], [114, 2, 1, "", "number_of_boxes"], [114, 2, 1, "", "number_of_circles"], [114, 2, 1, "", "number_of_special_entries"], [114, 2, 1, "", "pp"], [114, 2, 1, "", "row_sums"], [114, 2, 1, "", "special_entries"], [114, 2, 1, "", "to_tableau"], [114, 2, 1, "", "weight"]], "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPatterns": [[114, 4, 1, "", "Element"], [114, 2, 1, "", "random_element"]], "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPatternsTopRow": [[114, 2, 1, "", "Tokuyama_formula"], [114, 2, 1, "", "random_element"], [114, 2, 1, "", "top_row"]], "sage.combinat.graph_path": [[115, 3, 1, "", "GraphPaths"], [115, 1, 1, "", "GraphPaths_all"], [115, 1, 1, "", "GraphPaths_common"], [115, 1, 1, "", "GraphPaths_s"], [115, 1, 1, "", "GraphPaths_st"], [115, 1, 1, "", "GraphPaths_t"]], "sage.combinat.graph_path.GraphPaths_all": [[115, 2, 1, "", "list"]], "sage.combinat.graph_path.GraphPaths_common": [[115, 2, 1, "", "incoming_edges"], [115, 2, 1, "", "incoming_paths"], [115, 2, 1, "", "outgoing_edges"], [115, 2, 1, "", "outgoing_paths"], [115, 2, 1, "", "paths"], [115, 2, 1, "", "paths_from_source_to_target"]], "sage.combinat.graph_path.GraphPaths_s": [[115, 2, 1, "", "list"]], "sage.combinat.graph_path.GraphPaths_st": [[115, 2, 1, "", "list"]], "sage.combinat.graph_path.GraphPaths_t": [[115, 2, 1, "", "list"]], "sage.combinat.gray_codes": [[116, 3, 1, "", "combinations"], [116, 3, 1, "", "product"]], "sage.combinat.grossman_larson_algebras": [[117, 1, 1, "", "GrossmanLarsonAlgebra"]], "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra": [[117, 2, 1, "", "an_element"], [117, 2, 1, "", "antipode_on_basis"], [117, 2, 1, "", "change_ring"], [117, 2, 1, "", "coproduct_on_basis"], [117, 2, 1, "", "counit_on_basis"], [117, 2, 1, "", "degree_on_basis"], [117, 2, 1, "", "one_basis"], [117, 2, 1, "", "product_on_basis"], [117, 2, 1, "", "single_vertex"], [117, 2, 1, "", "single_vertex_all"], [117, 2, 1, "", "some_elements"], [117, 2, 1, "", "variable_names"]], "sage.combinat.growth": [[118, 1, 1, "", "GrowthDiagram"], [118, 1, 1, "", "Rule"], [118, 1, 1, "", "RuleBinaryWord"], [118, 1, 1, "", "RuleBurge"], [118, 1, 1, "", "RuleDomino"], [118, 1, 1, "", "RuleLLMS"], [118, 1, 1, "", "RulePartitions"], [118, 1, 1, "", "RuleRSK"], [118, 1, 1, "", "RuleShiftedShapes"], [118, 1, 1, "", "RuleSylvester"], [118, 1, 1, "", "RuleYoungFibonacci"], [118, 1, 1, "", "Rules"]], "sage.combinat.growth.GrowthDiagram": [[118, 2, 1, "", "P_chain"], [118, 2, 1, "", "P_symbol"], [118, 2, 1, "", "Q_chain"], [118, 2, 1, "", "Q_symbol"], [118, 2, 1, "", "conjugate"], [118, 2, 1, "", "filling"], [118, 2, 1, "", "half_perimeter"], [118, 2, 1, "", "in_labels"], [118, 2, 1, "", "is_rectangular"], [118, 2, 1, "", "out_labels"], [118, 2, 1, "", "rotate"], [118, 4, 1, "", "rules"], [118, 2, 1, "", "shape"], [118, 2, 1, "", "to_biword"], [118, 2, 1, "", "to_word"]], "sage.combinat.growth.Rule": [[118, 2, 1, "", "P_graph"], [118, 2, 1, "", "Q_graph"], [118, 4, 1, "", "has_multiple_edges"], [118, 2, 1, "", "normalize_vertex"], [118, 4, 1, "", "r"], [118, 4, 1, "", "zero_edge"]], "sage.combinat.growth.RuleBinaryWord": [[118, 2, 1, "", "backward_rule"], [118, 2, 1, "", "forward_rule"], [118, 2, 1, "", "is_P_edge"], [118, 2, 1, "", "is_Q_edge"], [118, 2, 1, "", "normalize_vertex"], [118, 2, 1, "", "rank"], [118, 2, 1, "", "vertices"], [118, 4, 1, "", "zero"]], "sage.combinat.growth.RuleBurge": [[118, 2, 1, "", "backward_rule"], [118, 2, 1, "", "forward_rule"]], "sage.combinat.growth.RuleDomino": [[118, 2, 1, "", "P_symbol"], [118, 2, 1, "", "Q_symbol"], [118, 2, 1, "", "forward_rule"], [118, 2, 1, "", "is_P_edge"], [118, 2, 1, "", "is_Q_edge"], [118, 2, 1, "", "normalize_vertex"], [118, 4, 1, "", "r"], [118, 2, 1, "", "rank"], [118, 2, 1, "", "vertices"], [118, 4, 1, "", "zero"]], "sage.combinat.growth.RuleLLMS": [[118, 2, 1, "", "P_symbol"], [118, 2, 1, "", "Q_symbol"], [118, 2, 1, "", "forward_rule"], [118, 4, 1, "", "has_multiple_edges"], [118, 2, 1, "", "is_P_edge"], [118, 2, 1, "", "is_Q_edge"], [118, 2, 1, "", "normalize_vertex"], [118, 2, 1, "", "rank"], [118, 2, 1, "", "vertices"], [118, 4, 1, "", "zero_edge"]], "sage.combinat.growth.RulePartitions": [[118, 2, 1, "", "P_symbol"], [118, 2, 1, "", "Q_symbol"], [118, 2, 1, "", "normalize_vertex"], [118, 2, 1, "", "rank"], [118, 2, 1, "", "vertices"], [118, 4, 1, "", "zero"]], "sage.combinat.growth.RuleRSK": [[118, 2, 1, "", "backward_rule"], [118, 2, 1, "", "forward_rule"]], "sage.combinat.growth.RuleShiftedShapes": [[118, 2, 1, "", "P_symbol"], [118, 2, 1, "", "Q_symbol"], [118, 2, 1, "", "backward_rule"], [118, 2, 1, "", "forward_rule"], [118, 4, 1, "", "has_multiple_edges"], [118, 2, 1, "", "is_P_edge"], [118, 2, 1, "", "is_Q_edge"], [118, 2, 1, "", "normalize_vertex"], [118, 2, 1, "", "rank"], [118, 2, 1, "", "vertices"], [118, 4, 1, "", "zero"]], "sage.combinat.growth.RuleSylvester": [[118, 2, 1, "", "P_symbol"], [118, 2, 1, "", "Q_symbol"], [118, 2, 1, "", "backward_rule"], [118, 2, 1, "", "forward_rule"], [118, 2, 1, "", "is_P_edge"], [118, 2, 1, "", "is_Q_edge"], [118, 2, 1, "", "normalize_vertex"], [118, 2, 1, "", "rank"], [118, 2, 1, "", "vertices"], [118, 4, 1, "", "zero"]], "sage.combinat.growth.RuleYoungFibonacci": [[118, 2, 1, "", "backward_rule"], [118, 2, 1, "", "forward_rule"], [118, 2, 1, "", "is_P_edge"], [118, 2, 1, "", "is_Q_edge"], [118, 2, 1, "", "normalize_vertex"], [118, 2, 1, "", "rank"], [118, 2, 1, "", "vertices"], [118, 4, 1, "", "zero"]], "sage.combinat.growth.Rules": [[118, 4, 1, "", "BinaryWord"], [118, 4, 1, "", "Burge"], [118, 4, 1, "", "Domino"], [118, 4, 1, "", "LLMS"], [118, 4, 1, "", "RSK"], [118, 4, 1, "", "ShiftedShapes"], [118, 4, 1, "", "Sylvester"], [118, 4, 1, "", "YoungFibonacci"]], "sage.combinat.hall_polynomial": [[119, 3, 1, "", "hall_polynomial"]], "sage.combinat.hillman_grassl": [[120, 1, 1, "", "WeakReversePlanePartition"], [120, 1, 1, "", "WeakReversePlanePartitions"], [120, 3, 1, "", "hillman_grassl"], [120, 3, 1, "", "hillman_grassl_inverse"], [120, 3, 1, "", "pak_correspondence"], [120, 3, 1, "", "sulzgruber_correspondence"], [120, 3, 1, "", "transpose"]], "sage.combinat.hillman_grassl.WeakReversePlanePartition": [[120, 2, 1, "", "conjugate"], [120, 2, 1, "", "hillman_grassl_inverse"], [120, 2, 1, "", "pak_correspondence"]], "sage.combinat.hillman_grassl.WeakReversePlanePartitions": [[120, 4, 1, "", "Element"], [120, 2, 1, "", "an_element"]], "sage.combinat.integer_lists": [[121, 0, 0, "-", "base"], [122, 0, 0, "-", "invlex"], [123, 0, 0, "-", "lists"]], "sage.combinat.integer_lists.base": [[121, 1, 1, "", "Envelope"], [121, 1, 1, "", "IntegerListsBackend"]], "sage.combinat.integer_lists.base.Envelope": [[121, 2, 1, "", "adapt"], [121, 2, 1, "", "limit"], [121, 2, 1, "", "limit_start"], [121, 4, 1, "", "max_part"], [121, 4, 1, "", "max_slope"], [121, 4, 1, "", "min_slope"], [121, 4, 1, "", "sign"]], "sage.combinat.integer_lists.base.IntegerListsBackend": [[121, 4, 1, "", "ceiling"], [121, 4, 1, "", "floor"], [121, 4, 1, "", "max_length"], [121, 4, 1, "", "max_part"], [121, 4, 1, "", "max_slope"], [121, 4, 1, "", "max_sum"], [121, 4, 1, "", "min_length"], [121, 4, 1, "", "min_part"], [121, 4, 1, "", "min_slope"], [121, 4, 1, "", "min_sum"]], "sage.combinat.integer_lists.invlex": [[122, 1, 1, "", "IntegerListsBackend_invlex"], [122, 1, 1, "", "IntegerListsLex"], [122, 1, 1, "", "IntegerListsLexIter"]], "sage.combinat.integer_lists.invlex.IntegerListsBackend_invlex": [[122, 4, 1, "", "check"]], "sage.combinat.integer_lists.invlex.IntegerListsLex": [[122, 4, 1, "", "backend_class"]], "sage.combinat.integer_lists.lists": [[123, 1, 1, "", "IntegerList"], [123, 1, 1, "", "IntegerLists"]], "sage.combinat.integer_lists.lists.IntegerList": [[123, 2, 1, "", "check"]], "sage.combinat.integer_lists.lists.IntegerLists": [[123, 4, 1, "", "Element"], [123, 4, 1, "", "backend"], [123, 4, 1, "", "backend_class"]], "sage.combinat.integer_matrices": [[124, 1, 1, "", "IntegerMatrices"], [124, 3, 1, "", "integer_matrices_generator"]], "sage.combinat.integer_matrices.IntegerMatrices": [[124, 2, 1, "", "cardinality"], [124, 2, 1, "", "column_sums"], [124, 2, 1, "", "row_sums"], [124, 2, 1, "", "to_composition"]], "sage.combinat.integer_vector": [[125, 1, 1, "", "IntegerVector"], [125, 1, 1, "", "IntegerVectors"], [125, 1, 1, "", "IntegerVectorsConstraints"], [125, 1, 1, "", "IntegerVectors_all"], [125, 1, 1, "", "IntegerVectors_k"], [125, 1, 1, "", "IntegerVectors_n"], [125, 1, 1, "", "IntegerVectors_nk"], [125, 1, 1, "", "IntegerVectors_nnondescents"], [125, 3, 1, "", "gale_ryser_theorem"], [125, 3, 1, "", "integer_vectors_nk_fast_iter"], [125, 3, 1, "", "is_gale_ryser"], [125, 3, 1, "", "list2func"]], "sage.combinat.integer_vector.IntegerVector": [[125, 2, 1, "", "check"], [125, 2, 1, "", "trim"]], "sage.combinat.integer_vector.IntegerVectors": [[125, 4, 1, "", "Element"]], "sage.combinat.integer_vector.IntegerVectorsConstraints": [[125, 2, 1, "", "cardinality"]], "sage.combinat.integer_vector.IntegerVectors_nk": [[125, 2, 1, "", "rank"]], "sage.combinat.integer_vector_weighted": [[126, 1, 1, "", "WeightedIntegerVectors"], [126, 1, 1, "", "WeightedIntegerVectors_all"], [126, 3, 1, "", "iterator_fast"]], "sage.combinat.integer_vector_weighted.WeightedIntegerVectors": [[126, 4, 1, "", "Element"]], "sage.combinat.integer_vector_weighted.WeightedIntegerVectors_all": [[126, 2, 1, "", "grading"], [126, 2, 1, "", "subset"]], "sage.combinat.integer_vectors_mod_permgroup": [[127, 1, 1, "", "IntegerVectorsModPermutationGroup"], [127, 1, 1, "", "IntegerVectorsModPermutationGroup_All"], [127, 1, 1, "", "IntegerVectorsModPermutationGroup_with_constraints"]], "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All": [[127, 1, 1, "", "Element"], [127, 2, 1, "", "ambient"], [127, 2, 1, "", "children"], [127, 2, 1, "", "is_canonical"], [127, 2, 1, "", "lift"], [127, 2, 1, "", "orbit"], [127, 2, 1, "", "permutation_group"], [127, 2, 1, "", "retract"], [127, 2, 1, "", "roots"], [127, 2, 1, "", "subset"]], "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.Element": [[127, 2, 1, "", "check"]], "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints": [[127, 1, 1, "", "Element"], [127, 2, 1, "", "ambient"], [127, 2, 1, "", "an_element"], [127, 2, 1, "", "children"], [127, 2, 1, "", "is_canonical"], [127, 2, 1, "", "lift"], [127, 2, 1, "", "orbit"], [127, 2, 1, "", "permutation_group"], [127, 2, 1, "", "retract"], [127, 2, 1, "", "roots"]], "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.Element": [[127, 2, 1, "", "check"]], "sage.combinat.interval_posets": [[128, 4, 1, "", "TIP"], [128, 1, 1, "", "TamariIntervalPoset"], [128, 1, 1, "", "TamariIntervalPosets"], [128, 1, 1, "", "TamariIntervalPosets_all"], [128, 1, 1, "", "TamariIntervalPosets_size"]], "sage.combinat.interval_posets.TamariIntervalPoset": [[128, 2, 1, "", "binary_trees"], [128, 2, 1, "", "complement"], [128, 2, 1, "", "contains_binary_tree"], [128, 2, 1, "", "contains_dyck_word"], [128, 2, 1, "", "contains_interval"], [128, 2, 1, "", "cubical_coordinates"], [128, 2, 1, "", "decomposition_to_triple"], [128, 2, 1, "", "decreasing_children"], [128, 2, 1, "", "decreasing_cover_relations"], [128, 2, 1, "", "decreasing_parent"], [128, 2, 1, "", "decreasing_roots"], [128, 2, 1, "", "dyck_words"], [128, 2, 1, "", "factor"], [128, 2, 1, "", "final_forest"], [128, 2, 1, "", "ge"], [128, 2, 1, "", "grafting_tree"], [128, 2, 1, "", "gt"], [128, 2, 1, "", "increasing_children"], [128, 2, 1, "", "increasing_cover_relations"], [128, 2, 1, "", "increasing_parent"], [128, 2, 1, "", "increasing_roots"], [128, 2, 1, "", "initial_forest"], [128, 2, 1, "", "insertion"], [128, 2, 1, "", "intersection"], [128, 2, 1, "", "interval_cardinality"], [128, 2, 1, "", "is_connected"], [128, 2, 1, "", "is_dexter"], [128, 2, 1, "", "is_exceptional"], [128, 2, 1, "", "is_final_interval"], [128, 2, 1, "", "is_indecomposable"], [128, 2, 1, "", "is_infinitely_modern"], [128, 2, 1, "", "is_initial_interval"], [128, 2, 1, "", "is_linear_extension"], [128, 2, 1, "", "is_modern"], [128, 2, 1, "", "is_new"], [128, 2, 1, "", "is_simple"], [128, 2, 1, "", "is_synchronized"], [128, 2, 1, "", "latex_options"], [128, 2, 1, "", "le"], [128, 2, 1, "", "left_branch_involution"], [128, 2, 1, "", "linear_extensions"], [128, 2, 1, "", "lower_binary_tree"], [128, 2, 1, "", "lower_contained_intervals"], [128, 2, 1, "", "lower_contains_interval"], [128, 2, 1, "", "lower_dyck_word"], [128, 2, 1, "", "lt"], [128, 2, 1, "", "max_linear_extension"], [128, 2, 1, "", "maximal_chain_binary_trees"], [128, 2, 1, "", "maximal_chain_dyck_words"], [128, 2, 1, "", "maximal_chain_tamari_intervals"], [128, 2, 1, "", "min_linear_extension"], [128, 2, 1, "", "new_decomposition"], [128, 2, 1, "", "number_of_new_components"], [128, 2, 1, "", "number_of_tamari_inversions"], [128, 2, 1, "", "plot"], [128, 2, 1, "", "poset"], [128, 2, 1, "", "rise_contact_involution"], [128, 2, 1, "", "set_latex_options"], [128, 2, 1, "", "size"], [128, 2, 1, "", "sub_poset"], [128, 2, 1, "", "subposet"], [128, 2, 1, "", "tamari_inversions"], [128, 2, 1, "", "tamari_inversions_iter"], [128, 2, 1, "", "upper_binary_tree"], [128, 2, 1, "", "upper_contains_interval"], [128, 2, 1, "", "upper_dyck_word"]], "sage.combinat.interval_posets.TamariIntervalPosets": [[128, 2, 1, "", "check_poset"], [128, 2, 1, "", "final_forest"], [128, 2, 1, "", "from_binary_trees"], [128, 2, 1, "", "from_dyck_words"], [128, 2, 1, "", "from_grafting_tree"], [128, 2, 1, "", "from_minimal_schnyder_wood"], [128, 2, 1, "", "initial_forest"], [128, 2, 1, "", "le"], [128, 4, 1, "", "options"], [128, 2, 1, "", "recomposition_from_triple"]], "sage.combinat.interval_posets.TamariIntervalPosets_all": [[128, 4, 1, "", "Element"], [128, 2, 1, "", "one"]], "sage.combinat.interval_posets.TamariIntervalPosets_size": [[128, 2, 1, "", "cardinality"], [128, 2, 1, "", "element_class"], [128, 2, 1, "", "random_element"]], "sage.combinat.k_regular_sequence": [[129, 1, 1, "", "RecurrenceParser"], [129, 1, 1, "", "kRegularSequence"], [129, 1, 1, "", "kRegularSequenceSpace"]], "sage.combinat.k_regular_sequence.RecurrenceParser": [[129, 2, 1, "", "ind"], [129, 2, 1, "", "left"], [129, 2, 1, "", "matrix"], [129, 2, 1, "", "parameters"], [129, 2, 1, "", "parse_direct_arguments"], [129, 2, 1, "", "parse_recurrence"], [129, 2, 1, "", "right"], [129, 2, 1, "", "shifted_inhomogeneities"], [129, 2, 1, "", "v_eval_n"], [129, 2, 1, "", "values"]], "sage.combinat.k_regular_sequence.kRegularSequence": [[129, 2, 1, "", "backward_differences"], [129, 2, 1, "", "forward_differences"], [129, 2, 1, "", "partial_sums"], [129, 2, 1, "", "shift_left"], [129, 2, 1, "", "shift_right"], [129, 2, 1, "", "subsequence"]], "sage.combinat.k_regular_sequence.kRegularSequenceSpace": [[129, 4, 1, "", "Element"], [129, 2, 1, "", "from_recurrence"]], "sage.combinat.k_tableau": [[130, 1, 1, "", "StrongTableau"], [130, 1, 1, "", "StrongTableaux"], [130, 3, 1, "", "WeakTableau"], [130, 1, 1, "", "WeakTableau_abstract"], [130, 1, 1, "", "WeakTableau_bounded"], [130, 1, 1, "", "WeakTableau_core"], [130, 1, 1, "", "WeakTableau_factorized_permutation"], [130, 3, 1, "", "WeakTableaux"], [130, 1, 1, "", "WeakTableaux_abstract"], [130, 1, 1, "", "WeakTableaux_bounded"], [130, 1, 1, "", "WeakTableaux_core"], [130, 1, 1, "", "WeakTableaux_factorized_permutation"], [130, 3, 1, "", "intermediate_shapes"], [130, 3, 1, "", "nabs"]], "sage.combinat.k_tableau.StrongTableau": [[130, 2, 1, "", "cell_of_highest_head"], [130, 2, 1, "", "cell_of_marked_head"], [130, 2, 1, "", "cells_head_dictionary"], [130, 2, 1, "", "cells_of_heads"], [130, 2, 1, "", "cells_of_marked_ribbon"], [130, 2, 1, "", "check"], [130, 2, 1, "", "content_of_highest_head"], [130, 2, 1, "", "content_of_marked_head"], [130, 2, 1, "", "contents_of_heads"], [130, 2, 1, "", "entries_by_content"], [130, 2, 1, "", "entries_by_content_standard"], [130, 2, 1, "", "follows_tableau"], [130, 2, 1, "", "height_of_ribbon"], [130, 2, 1, "", "inner_shape"], [130, 2, 1, "", "intermediate_shapes"], [130, 2, 1, "", "is_column_strict_with_weight"], [130, 2, 1, "", "left_action"], [130, 2, 1, "", "number_of_connected_components"], [130, 2, 1, "", "outer_shape"], [130, 2, 1, "", "pp"], [130, 2, 1, "", "restrict"], [130, 2, 1, "", "ribbons_above_marked"], [130, 2, 1, "", "set_weight"], [130, 2, 1, "", "shape"], [130, 2, 1, "", "size"], [130, 2, 1, "", "spin"], [130, 2, 1, "", "spin_of_ribbon"], [130, 2, 1, "", "to_list"], [130, 2, 1, "", "to_standard_list"], [130, 2, 1, "", "to_standard_tableau"], [130, 2, 1, "", "to_transposition_sequence"], [130, 2, 1, "", "to_unmarked_list"], [130, 2, 1, "", "to_unmarked_standard_list"], [130, 2, 1, "", "weight"]], "sage.combinat.k_tableau.StrongTableaux": [[130, 4, 1, "", "Element"], [130, 2, 1, "", "add_marking"], [130, 2, 1, "", "an_element"], [130, 2, 1, "", "cells_head_dictionary"], [130, 2, 1, "", "follows_tableau_unsigned_standard"], [130, 2, 1, "", "inner_shape"], [130, 2, 1, "", "marked_CST_to_transposition_sequence"], [130, 2, 1, "", "marked_given_unmarked_and_weight_iterator"], [130, 4, 1, "", "options"], [130, 2, 1, "", "outer_shape"], [130, 2, 1, "", "shape"], [130, 2, 1, "", "standard_marked_iterator"], [130, 2, 1, "", "standard_unmarked_iterator"], [130, 2, 1, "", "transpositions_to_standard_strong"]], "sage.combinat.k_tableau.WeakTableau_abstract": [[130, 2, 1, "", "intermediate_shapes"], [130, 2, 1, "", "pp"], [130, 2, 1, "", "representation"], [130, 2, 1, "", "shape"], [130, 2, 1, "", "size"], [130, 2, 1, "", "weight"]], "sage.combinat.k_tableau.WeakTableau_bounded": [[130, 2, 1, "", "check"], [130, 2, 1, "", "from_core_tableau"], [130, 2, 1, "", "k_charge"], [130, 2, 1, "", "shape_bounded"], [130, 2, 1, "", "shape_core"], [130, 2, 1, "", "to_core_tableau"]], "sage.combinat.k_tableau.WeakTableau_core": [[130, 2, 1, "", "check"], [130, 2, 1, "", "dictionary_of_coordinates_at_residues"], [130, 2, 1, "", "k_charge"], [130, 2, 1, "", "k_charge_I"], [130, 2, 1, "", "k_charge_J"], [130, 2, 1, "", "list_of_standard_cells"], [130, 2, 1, "", "residues_of_entries"], [130, 2, 1, "", "shape_bounded"], [130, 2, 1, "", "shape_core"], [130, 2, 1, "", "to_bounded_tableau"], [130, 2, 1, "", "to_factorized_permutation_tableau"]], "sage.combinat.k_tableau.WeakTableau_factorized_permutation": [[130, 2, 1, "", "check"], [130, 2, 1, "", "from_core_tableau"], [130, 2, 1, "", "k_charge"], [130, 2, 1, "", "shape_bounded"], [130, 2, 1, "", "shape_core"], [130, 2, 1, "", "straighten_input"], [130, 2, 1, "", "to_core_tableau"]], "sage.combinat.k_tableau.WeakTableaux_abstract": [[130, 2, 1, "", "representation"], [130, 2, 1, "", "shape"], [130, 2, 1, "", "size"]], "sage.combinat.k_tableau.WeakTableaux_bounded": [[130, 4, 1, "", "Element"]], "sage.combinat.k_tableau.WeakTableaux_core": [[130, 4, 1, "", "Element"], [130, 2, 1, "", "circular_distance"], [130, 2, 1, "", "diag"]], "sage.combinat.k_tableau.WeakTableaux_factorized_permutation": [[130, 4, 1, "", "Element"]], "sage.combinat.kazhdan_lusztig": [[131, 1, 1, "", "KazhdanLusztigPolynomial"]], "sage.combinat.kazhdan_lusztig.KazhdanLusztigPolynomial": [[131, 2, 1, "", "P"], [131, 2, 1, "", "R"], [131, 2, 1, "", "R_tilde"]], "sage.combinat.knutson_tao_puzzles": [[132, 3, 1, "", "BK_pieces"], [132, 1, 1, "", "DeltaPiece"], [132, 3, 1, "", "HT_grassmannian_pieces"], [132, 3, 1, "", "HT_two_step_pieces"], [132, 3, 1, "", "H_grassmannian_pieces"], [132, 3, 1, "", "H_two_step_pieces"], [132, 3, 1, "", "K_grassmannian_pieces"], [132, 1, 1, "", "KnutsonTaoPuzzleSolver"], [132, 1, 1, "", "NablaPiece"], [132, 1, 1, "", "PuzzleFilling"], [132, 1, 1, "", "PuzzlePiece"], [132, 1, 1, "", "PuzzlePieces"], [132, 1, 1, "", "RhombusPiece"]], "sage.combinat.knutson_tao_puzzles.DeltaPiece": [[132, 2, 1, "", "clockwise_rotation"], [132, 2, 1, "", "edges"], [132, 2, 1, "", "half_turn_rotation"]], "sage.combinat.knutson_tao_puzzles.KnutsonTaoPuzzleSolver": [[132, 2, 1, "", "plot"], [132, 2, 1, "", "puzzle_pieces"], [132, 2, 1, "", "solutions"], [132, 2, 1, "", "structure_constants"]], "sage.combinat.knutson_tao_puzzles.NablaPiece": [[132, 2, 1, "", "clockwise_rotation"], [132, 2, 1, "", "edges"], [132, 2, 1, "", "half_turn_rotation"]], "sage.combinat.knutson_tao_puzzles.PuzzleFilling": [[132, 2, 1, "", "add_piece"], [132, 2, 1, "", "add_pieces"], [132, 2, 1, "", "contribution"], [132, 2, 1, "", "copy"], [132, 2, 1, "", "is_completed"], [132, 2, 1, "", "is_in_south_edge"], [132, 2, 1, "", "kink_coordinates"], [132, 2, 1, "", "north_east_label_of_kink"], [132, 2, 1, "", "north_west_label_of_kink"], [132, 2, 1, "", "plot"], [132, 2, 1, "", "south_labels"]], "sage.combinat.knutson_tao_puzzles.PuzzlePiece": [[132, 2, 1, "", "border"], [132, 2, 1, "", "color"], [132, 2, 1, "", "edge_color"], [132, 2, 1, "", "edge_label"]], "sage.combinat.knutson_tao_puzzles.PuzzlePieces": [[132, 2, 1, "", "add_T_piece"], [132, 2, 1, "", "add_forbidden_label"], [132, 2, 1, "", "add_piece"], [132, 2, 1, "", "boundary_deltas"], [132, 2, 1, "", "delta_pieces"], [132, 2, 1, "", "nabla_pieces"], [132, 2, 1, "", "rhombus_pieces"]], "sage.combinat.knutson_tao_puzzles.RhombusPiece": [[132, 2, 1, "", "edges"], [132, 2, 1, "", "north_piece"], [132, 2, 1, "", "south_piece"]], "sage.combinat.matrices": [[133, 0, 0, "-", "all"], [134, 0, 0, "-", "dancing_links"], [135, 0, 0, "-", "dlxcpp"], [136, 0, 0, "-", "hadamard_matrix"], [137, 0, 0, "-", "latin"]], "sage.combinat.matrices.dancing_links": [[134, 1, 1, "", "dancing_linksWrapper"], [134, 3, 1, "", "dlx_solver"], [134, 3, 1, "", "make_dlxwrapper"]], "sage.combinat.matrices.dancing_links.dancing_linksWrapper": [[134, 2, 1, "", "all_solutions"], [134, 2, 1, "", "get_solution"], [134, 2, 1, "", "ncols"], [134, 2, 1, "", "nrows"], [134, 2, 1, "", "number_of_solutions"], [134, 2, 1, "", "one_solution"], [134, 2, 1, "", "one_solution_using_milp_solver"], [134, 2, 1, "", "one_solution_using_sat_solver"], [134, 2, 1, "", "reinitialize"], [134, 2, 1, "", "restrict"], [134, 2, 1, "", "rows"], [134, 2, 1, "", "search"], [134, 2, 1, "", "solutions_iterator"], [134, 2, 1, "", "split"], [134, 2, 1, "", "to_milp"], [134, 2, 1, "", "to_sat_solver"]], "sage.combinat.matrices.dlxcpp": [[135, 3, 1, "", "AllExactCovers"], [135, 3, 1, "", "DLXCPP"], [135, 3, 1, "", "OneExactCover"]], "sage.combinat.matrices.hadamard_matrix": [[136, 3, 1, "", "GS_skew_hadamard_smallcases"], [136, 3, 1, "", "RSHCD_324"], [136, 3, 1, "", "construction_four_symbol_delta_code_I"], [136, 3, 1, "", "construction_four_symbol_delta_code_II"], [136, 3, 1, "", "four_symbol_delta_code_smallcases"], [136, 3, 1, "", "hadamard_matrix"], [136, 3, 1, "", "hadamard_matrix_156"], [136, 3, 1, "", "hadamard_matrix_cooper_wallis_construction"], [136, 3, 1, "", "hadamard_matrix_cooper_wallis_smallcases"], [136, 3, 1, "", "hadamard_matrix_paleyI"], [136, 3, 1, "", "hadamard_matrix_paleyII"], [136, 3, 1, "", "hadamard_matrix_spence_construction"], [136, 3, 1, "", "hadamard_matrix_turyn_type"], [136, 3, 1, "", "hadamard_matrix_williamson_type"], [136, 3, 1, "", "hadamard_matrix_www"], [136, 3, 1, "", "is_hadamard_matrix"], [136, 3, 1, "", "normalise_hadamard"], [136, 3, 1, "", "regular_symmetric_hadamard_matrix_with_constant_diagonal"], [136, 3, 1, "", "rshcd_from_close_prime_powers"], [136, 3, 1, "", "rshcd_from_prime_power_and_conference_matrix"], [136, 3, 1, "", "skew_hadamard_matrix"], [136, 3, 1, "", "symmetric_conference_matrix"], [136, 3, 1, "", "szekeres_difference_set_pair"], [136, 3, 1, "", "turyn_type_hadamard_matrix_smallcases"], [136, 3, 1, "", "typeI_matrix_difference_set"], [136, 3, 1, "", "williamson_goethals_seidel_skew_hadamard_matrix"], [136, 3, 1, "", "williamson_hadamard_matrix_smallcases"], [136, 3, 1, "", "williamson_type_quadruples_smallcases"]], "sage.combinat.matrices.latin": [[137, 1, 1, "", "LatinSquare"], [137, 3, 1, "", "LatinSquare_generator"], [137, 3, 1, "", "alternating_group_bitrade_generators"], [137, 3, 1, "", "back_circulant"], [137, 3, 1, "", "beta1"], [137, 3, 1, "", "beta2"], [137, 3, 1, "", "beta3"], [137, 3, 1, "", "bitrade"], [137, 3, 1, "", "bitrade_from_group"], [137, 3, 1, "", "cells_map_as_square"], [137, 3, 1, "", "check_bitrade_generators"], [137, 3, 1, "", "coin"], [137, 3, 1, "", "column_containing_sym"], [137, 3, 1, "", "direct_product"], [137, 3, 1, "", "dlxcpp_find_completions"], [137, 3, 1, "", "dlxcpp_rows_and_map"], [137, 3, 1, "", "elementary_abelian_2group"], [137, 3, 1, "", "forward_circulant"], [137, 3, 1, "", "genus"], [137, 3, 1, "", "group_to_LatinSquare"], [137, 3, 1, "", "is_bitrade"], [137, 3, 1, "", "is_disjoint"], [137, 3, 1, "", "is_primary_bitrade"], [137, 3, 1, "", "is_row_and_col_balanced"], [137, 3, 1, "", "is_same_shape"], [137, 3, 1, "", "isotopism"], [137, 3, 1, "", "next_conjugate"], [137, 3, 1, "", "p3_group_bitrade_generators"], [137, 3, 1, "", "pq_group_bitrade_generators"], [137, 3, 1, "", "row_containing_sym"], [137, 3, 1, "", "tau1"], [137, 3, 1, "", "tau123"], [137, 3, 1, "", "tau2"], [137, 3, 1, "", "tau3"], [137, 3, 1, "", "tau_to_bitrade"]], "sage.combinat.matrices.latin.LatinSquare": [[137, 2, 1, "", "actual_row_col_sym_sizes"], [137, 2, 1, "", "apply_isotopism"], [137, 2, 1, "", "clear_cells"], [137, 2, 1, "", "column"], [137, 2, 1, "", "contained_in"], [137, 2, 1, "", "disjoint_mate_dlxcpp_rows_and_map"], [137, 2, 1, "", "dlxcpp_has_unique_completion"], [137, 2, 1, "", "dumps"], [137, 2, 1, "", "filled_cells_map"], [137, 2, 1, "", "find_disjoint_mates"], [137, 2, 1, "", "gcs"], [137, 2, 1, "", "is_completable"], [137, 2, 1, "", "is_empty_column"], [137, 2, 1, "", "is_empty_row"], [137, 2, 1, "", "is_latin_square"], [137, 2, 1, "", "is_partial_latin_square"], [137, 2, 1, "", "is_uniquely_completable"], [137, 2, 1, "", "latex"], [137, 2, 1, "", "list"], [137, 2, 1, "", "ncols"], [137, 2, 1, "", "nr_distinct_symbols"], [137, 2, 1, "", "nr_filled_cells"], [137, 2, 1, "", "nrows"], [137, 2, 1, "", "permissable_values"], [137, 2, 1, "", "random_empty_cell"], [137, 2, 1, "", "row"], [137, 2, 1, "", "set_immutable"], [137, 2, 1, "", "top_left_empty_cell"], [137, 2, 1, "", "vals_in_col"], [137, 2, 1, "", "vals_in_row"]], "sage.combinat.misc": [[138, 1, 1, "", "DoublyLinkedList"], [138, 1, 1, "", "IterableFunctionCall"], [138, 3, 1, "", "check_integer_list_constraints"], [138, 3, 1, "", "umbral_operation"]], "sage.combinat.misc.DoublyLinkedList": [[138, 2, 1, "", "head"], [138, 2, 1, "", "hide"], [138, 2, 1, "", "next"], [138, 2, 1, "", "prev"], [138, 2, 1, "", "unhide"]], "sage.combinat.multiset_partition_into_sets_ordered": [[139, 1, 1, "", "MinimajCrystal"], [139, 1, 1, "", "OrderedMultisetPartitionIntoSets"], [139, 1, 1, "", "OrderedMultisetPartitionsIntoSets"], [139, 1, 1, "", "OrderedMultisetPartitionsIntoSets_X"], [139, 1, 1, "", "OrderedMultisetPartitionsIntoSets_X_constraints"], [139, 1, 1, "", "OrderedMultisetPartitionsIntoSets_all_constraints"], [139, 1, 1, "", "OrderedMultisetPartitionsIntoSets_alph_d"], [139, 1, 1, "", "OrderedMultisetPartitionsIntoSets_alph_d_constraints"], [139, 1, 1, "", "OrderedMultisetPartitionsIntoSets_n"], [139, 1, 1, "", "OrderedMultisetPartitionsIntoSets_n_constraints"]], "sage.combinat.multiset_partition_into_sets_ordered.MinimajCrystal": [[139, 1, 1, "", "Element"], [139, 2, 1, "", "from_tableau"], [139, 2, 1, "", "val"]], "sage.combinat.multiset_partition_into_sets_ordered.MinimajCrystal.Element": [[139, 2, 1, "", "e"], [139, 2, 1, "", "f"], [139, 2, 1, "", "to_tableaux_words"]], "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets": [[139, 2, 1, "", "check"], [139, 2, 1, "", "deconcatenate"], [139, 2, 1, "", "fatten"], [139, 2, 1, "", "fatter"], [139, 2, 1, "", "finer"], [139, 2, 1, "", "is_finer"], [139, 2, 1, "", "length"], [139, 2, 1, "", "letters"], [139, 2, 1, "", "major_index"], [139, 2, 1, "", "max_letter"], [139, 2, 1, "", "minimaj"], [139, 2, 1, "", "minimaj_blocks"], [139, 2, 1, "", "minimaj_word"], [139, 2, 1, "", "multiset"], [139, 2, 1, "", "order"], [139, 2, 1, "", "reversal"], [139, 2, 1, "", "shape_from_cardinality"], [139, 2, 1, "", "shape_from_size"], [139, 2, 1, "", "shuffle_product"], [139, 2, 1, "", "size"], [139, 2, 1, "", "split_blocks"], [139, 2, 1, "", "to_tableaux_words"], [139, 2, 1, "", "weight"]], "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets": [[139, 4, 1, "", "Element"], [139, 2, 1, "", "subset"]], "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_X": [[139, 2, 1, "", "cardinality"], [139, 2, 1, "", "random_element"]], "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_alph_d": [[139, 2, 1, "", "cardinality"], [139, 2, 1, "", "random_element"]], "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_n": [[139, 2, 1, "", "cardinality"], [139, 2, 1, "", "random_element"]], "sage.combinat.ncsf_qsym": [[140, 0, 0, "-", "all"], [141, 0, 0, "-", "combinatorics"], [142, 0, 0, "-", "generic_basis_code"], [143, 0, 0, "-", "ncsf"], [144, 0, 0, "-", "qsym"], [145, 0, 0, "-", "tutorial"]], "sage.combinat.ncsf_qsym.combinatorics": [[141, 3, 1, "", "coeff_dab"], [141, 3, 1, "", "coeff_ell"], [141, 3, 1, "", "coeff_lp"], [141, 3, 1, "", "coeff_pi"], [141, 3, 1, "", "coeff_sp"], [141, 3, 1, "", "compositions_order"], [141, 3, 1, "", "m_to_s_stat"], [141, 3, 1, "", "number_of_SSRCT"], [141, 3, 1, "", "number_of_fCT"]], "sage.combinat.ncsf_qsym.generic_basis_code": [[142, 1, 1, "", "AlgebraMorphism"], [142, 1, 1, "", "BasesOfQSymOrNCSF"], [142, 1, 1, "", "GradedModulesWithInternalProduct"]], "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF": [[142, 1, 1, "", "ElementMethods"], [142, 1, 1, "", "ParentMethods"], [142, 2, 1, "", "super_categories"]], "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ElementMethods": [[142, 2, 1, "", "degree"], [142, 2, 1, "", "degree_negation"], [142, 2, 1, "", "duality_pairing"], [142, 2, 1, "", "skew_by"]], "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods": [[142, 2, 1, "", "alternating_sum_of_compositions"], [142, 2, 1, "", "alternating_sum_of_fatter_compositions"], [142, 2, 1, "", "alternating_sum_of_finer_compositions"], [142, 2, 1, "", "counit_on_basis"], [142, 2, 1, "", "degree_negation"], [142, 2, 1, "", "degree_on_basis"], [142, 2, 1, "", "duality_pairing"], [142, 2, 1, "", "duality_pairing_by_coercion"], [142, 2, 1, "", "duality_pairing_matrix"], [142, 2, 1, "", "one_basis"], [142, 2, 1, "", "skew"], [142, 2, 1, "", "sum_of_fatter_compositions"], [142, 2, 1, "", "sum_of_finer_compositions"], [142, 2, 1, "", "sum_of_partition_rearrangements"]], "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct": [[142, 1, 1, "", "ElementMethods"], [142, 1, 1, "", "ParentMethods"], [142, 1, 1, "", "Realizations"], [142, 2, 1, "", "super_categories"]], "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ElementMethods": [[142, 2, 1, "", "internal_product"], [142, 2, 1, "", "itensor"], [142, 2, 1, "", "kronecker_product"]], "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ParentMethods": [[142, 2, 1, "", "internal_product"], [142, 2, 1, "", "internal_product_on_basis"], [142, 2, 1, "", "itensor"], [142, 2, 1, "", "kronecker_product"]], "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.Realizations": [[142, 1, 1, "", "ParentMethods"]], "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.Realizations.ParentMethods": [[142, 2, 1, "", "internal_product_by_coercion"]], "sage.combinat.ncsf_qsym.ncsf": [[143, 1, 1, "", "NonCommutativeSymmetricFunctions"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions": [[143, 1, 1, "", "Bases"], [143, 1, 1, "", "Complete"], [143, 1, 1, "", "Elementary"], [143, 4, 1, "", "I"], [143, 1, 1, "", "Immaculate"], [143, 4, 1, "", "L"], [143, 1, 1, "", "Monomial"], [143, 1, 1, "", "MultiplicativeBases"], [143, 1, 1, "", "MultiplicativeBasesOnGroupLikeElements"], [143, 1, 1, "", "MultiplicativeBasesOnPrimitiveElements"], [143, 1, 1, "", "Phi"], [143, 1, 1, "", "Psi"], [143, 4, 1, "", "R"], [143, 1, 1, "", "Ribbon"], [143, 4, 1, "", "S"], [143, 4, 1, "", "ZL"], [143, 4, 1, "", "ZR"], [143, 1, 1, "", "Zassenhaus_left"], [143, 1, 1, "", "Zassenhaus_right"], [143, 2, 1, "", "a_realization"], [143, 4, 1, "", "complete"], [143, 4, 1, "", "dQS"], [143, 4, 1, "", "dYQS"], [143, 2, 1, "", "dual"], [143, 1, 1, "", "dualQuasisymmetric_Schur"], [143, 1, 1, "", "dualYoungQuasisymmetric_Schur"], [143, 4, 1, "", "elementary"], [143, 4, 1, "", "monomial"], [143, 4, 1, "", "nM"], [143, 4, 1, "", "ribbon"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases": [[143, 1, 1, "", "ElementMethods"], [143, 1, 1, "", "ParentMethods"], [143, 2, 1, "", "super_categories"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods": [[143, 2, 1, "", "bernstein_creation_operator"], [143, 2, 1, "", "chi"], [143, 2, 1, "", "expand"], [143, 2, 1, "", "left_padded_kronecker_product"], [143, 2, 1, "", "omega_involution"], [143, 2, 1, "", "psi_involution"], [143, 2, 1, "", "star_involution"], [143, 2, 1, "", "to_descent_algebra"], [143, 2, 1, "", "to_fqsym"], [143, 2, 1, "", "to_fsym"], [143, 2, 1, "", "to_ncsym"], [143, 2, 1, "", "to_symmetric_function"], [143, 2, 1, "", "to_symmetric_group_algebra"], [143, 2, 1, "", "verschiebung"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ParentMethods": [[143, 2, 1, "", "immaculate_function"], [143, 2, 1, "", "to_symmetric_function"], [143, 2, 1, "", "to_symmetric_function_on_basis"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Complete": [[143, 1, 1, "", "Element"], [143, 2, 1, "", "dual"], [143, 2, 1, "", "internal_product_on_basis"], [143, 2, 1, "", "to_symmetric_function"], [143, 2, 1, "", "to_symmetric_function_on_basis"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Complete.Element": [[143, 2, 1, "", "psi_involution"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Elementary": [[143, 1, 1, "", "Element"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Elementary.Element": [[143, 2, 1, "", "psi_involution"], [143, 2, 1, "", "star_involution"], [143, 2, 1, "", "verschiebung"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Immaculate": [[143, 1, 1, "", "Element"], [143, 2, 1, "", "dual"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Immaculate.Element": [[143, 2, 1, "", "bernstein_creation_operator"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases": [[143, 1, 1, "", "ParentMethods"], [143, 2, 1, "", "super_categories"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases.ParentMethods": [[143, 2, 1, "", "algebra_generators"], [143, 2, 1, "", "algebra_morphism"], [143, 2, 1, "", "antipode"], [143, 2, 1, "", "coproduct"], [143, 2, 1, "", "product_on_basis"], [143, 2, 1, "", "to_symmetric_function"], [143, 2, 1, "", "to_symmetric_function_on_generators"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnGroupLikeElements": [[143, 1, 1, "", "ParentMethods"], [143, 2, 1, "", "super_categories"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnGroupLikeElements.ParentMethods": [[143, 2, 1, "", "antipode_on_basis"], [143, 2, 1, "", "coproduct_on_generators"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnPrimitiveElements": [[143, 1, 1, "", "ParentMethods"], [143, 2, 1, "", "super_categories"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnPrimitiveElements.ParentMethods": [[143, 2, 1, "", "antipode_on_generators"], [143, 2, 1, "", "coproduct_on_generators"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Phi": [[143, 1, 1, "", "Element"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Phi.Element": [[143, 2, 1, "", "psi_involution"], [143, 2, 1, "", "star_involution"], [143, 2, 1, "", "verschiebung"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Psi": [[143, 1, 1, "", "Element"], [143, 2, 1, "", "internal_product_on_basis_by_bracketing"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Psi.Element": [[143, 2, 1, "", "verschiebung"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Ribbon": [[143, 1, 1, "", "Element"], [143, 2, 1, "", "antipode_on_basis"], [143, 2, 1, "", "dual"], [143, 2, 1, "", "product_on_basis"], [143, 2, 1, "", "to_symmetric_function_on_basis"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Ribbon.Element": [[143, 2, 1, "", "star_involution"], [143, 2, 1, "", "verschiebung"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dualQuasisymmetric_Schur": [[143, 2, 1, "", "dual"], [143, 2, 1, "", "to_symmetric_function_on_basis"]], "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dualYoungQuasisymmetric_Schur": [[143, 2, 1, "", "dual"], [143, 2, 1, "", "to_symmetric_function_on_basis"]], "sage.combinat.ncsf_qsym.qsym": [[144, 1, 1, "", "QuasiSymmetricFunctions"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions": [[144, 1, 1, "", "Bases"], [144, 4, 1, "", "E"], [144, 1, 1, "", "Essential"], [144, 4, 1, "", "F"], [144, 1, 1, "", "Fundamental"], [144, 1, 1, "", "HazewinkelLambda"], [144, 4, 1, "", "M"], [144, 1, 1, "", "Monomial"], [144, 4, 1, "", "QS"], [144, 1, 1, "", "Quasisymmetric_Schur"], [144, 4, 1, "", "YQS"], [144, 1, 1, "", "Young_Quasisymmetric_Schur"], [144, 2, 1, "", "a_realization"], [144, 4, 1, "", "dI"], [144, 2, 1, "", "dual"], [144, 1, 1, "", "dualImmaculate"], [144, 2, 1, "", "from_polynomial"], [144, 1, 1, "", "phi"], [144, 1, 1, "", "psi"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases": [[144, 1, 1, "", "ElementMethods"], [144, 1, 1, "", "ParentMethods"], [144, 2, 1, "", "super_categories"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods": [[144, 2, 1, "", "dendriform_leq"], [144, 2, 1, "", "dendriform_less"], [144, 2, 1, "", "expand"], [144, 2, 1, "", "frobenius"], [144, 2, 1, "", "internal_coproduct"], [144, 2, 1, "", "is_symmetric"], [144, 2, 1, "", "kronecker_coproduct"], [144, 2, 1, "", "omega_involution"], [144, 2, 1, "", "psi_involution"], [144, 2, 1, "", "star_involution"], [144, 2, 1, "", "to_symmetric_function"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ParentMethods": [[144, 2, 1, "", "Eulerian"], [144, 2, 1, "", "from_polynomial"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Essential": [[144, 2, 1, "", "antipode_on_basis"], [144, 2, 1, "", "coproduct_on_basis"], [144, 2, 1, "", "product_on_basis"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental": [[144, 1, 1, "", "Element"], [144, 2, 1, "", "Eulerian"], [144, 2, 1, "", "antipode_on_basis"], [144, 2, 1, "", "coproduct_on_basis"], [144, 2, 1, "", "dual"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental.Element": [[144, 2, 1, "", "internal_coproduct"], [144, 2, 1, "", "kronecker_coproduct"], [144, 2, 1, "", "star_involution"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.HazewinkelLambda": [[144, 2, 1, "", "product_on_basis"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial": [[144, 1, 1, "", "Element"], [144, 2, 1, "", "antipode_on_basis"], [144, 2, 1, "", "coproduct_on_basis"], [144, 2, 1, "", "dual"], [144, 2, 1, "", "lambda_of_monomial"], [144, 2, 1, "", "product_on_basis"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.Element": [[144, 2, 1, "", "expand"], [144, 2, 1, "", "is_symmetric"], [144, 2, 1, "", "psi_involution"], [144, 2, 1, "", "to_symmetric_function"]], "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Quasisymmetric_Schur": [[144, 2, 1, "", "dual"]], "sage.combinat.ncsym": [[146, 0, 0, "-", "all"], [147, 0, 0, "-", "bases"], [148, 0, 0, "-", "dual"], [149, 0, 0, "-", "ncsym"]], "sage.combinat.ncsym.bases": [[147, 1, 1, "", "MultiplicativeNCSymBases"], [147, 1, 1, "", "NCSymBases"], [147, 1, 1, "", "NCSymBasis_abstract"], [147, 1, 1, "", "NCSymDualBases"], [147, 1, 1, "", "NCSymOrNCSymDualBases"]], "sage.combinat.ncsym.bases.MultiplicativeNCSymBases": [[147, 1, 1, "", "ElementMethods"], [147, 1, 1, "", "ParentMethods"], [147, 2, 1, "", "super_categories"]], "sage.combinat.ncsym.bases.MultiplicativeNCSymBases.ParentMethods": [[147, 2, 1, "", "product_on_basis"]], "sage.combinat.ncsym.bases.NCSymBases": [[147, 1, 1, "", "ElementMethods"], [147, 1, 1, "", "ParentMethods"], [147, 2, 1, "", "super_categories"]], "sage.combinat.ncsym.bases.NCSymBases.ElementMethods": [[147, 2, 1, "", "expand"], [147, 2, 1, "", "internal_coproduct"], [147, 2, 1, "", "omega"], [147, 2, 1, "", "to_symmetric_function"], [147, 2, 1, "", "to_wqsym"]], "sage.combinat.ncsym.bases.NCSymBases.ParentMethods": [[147, 2, 1, "", "from_symmetric_function"], [147, 2, 1, "", "internal_coproduct"], [147, 2, 1, "", "internal_coproduct_by_coercion"], [147, 2, 1, "", "internal_coproduct_on_basis"], [147, 2, 1, "", "primitive"]], "sage.combinat.ncsym.bases.NCSymDualBases": [[147, 2, 1, "", "super_categories"]], "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases": [[147, 1, 1, "", "ElementMethods"], [147, 1, 1, "", "ParentMethods"], [147, 2, 1, "", "super_categories"]], "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases.ElementMethods": [[147, 2, 1, "", "duality_pairing"]], "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases.ParentMethods": [[147, 2, 1, "", "counit_on_basis"], [147, 2, 1, "", "duality_pairing"], [147, 2, 1, "", "duality_pairing_matrix"], [147, 2, 1, "", "one_basis"]], "sage.combinat.ncsym.dual": [[148, 1, 1, "", "SymmetricFunctionsNonCommutingVariablesDual"]], "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual": [[148, 2, 1, "", "a_realization"], [148, 2, 1, "", "dual"], [148, 1, 1, "", "w"]], "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w": [[148, 1, 1, "", "Element"], [148, 2, 1, "", "antipode_on_basis"], [148, 2, 1, "", "coproduct_on_basis"], [148, 2, 1, "", "dual_basis"], [148, 2, 1, "", "duality_pairing"], [148, 2, 1, "", "product_on_basis"], [148, 2, 1, "", "sum_of_partitions"], [148, 2, 1, "", "to_symmetric_function"]], "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.Element": [[148, 2, 1, "", "expand"], [148, 2, 1, "", "is_symmetric"], [148, 2, 1, "", "to_symmetric_function"]], "sage.combinat.ncsym.ncsym": [[149, 1, 1, "", "SymmetricFunctionsNonCommutingVariables"], [149, 3, 1, "", "matchings"], [149, 3, 1, "", "nesting"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables": [[149, 2, 1, "", "a_realization"], [149, 4, 1, "", "chi"], [149, 1, 1, "", "coarse_powersum"], [149, 4, 1, "", "cp"], [149, 1, 1, "", "deformed_coarse_powersum"], [149, 2, 1, "", "dual"], [149, 4, 1, "", "e"], [149, 1, 1, "", "elementary"], [149, 4, 1, "", "h"], [149, 1, 1, "", "homogeneous"], [149, 4, 1, "", "m"], [149, 1, 1, "", "monomial"], [149, 4, 1, "", "p"], [149, 1, 1, "", "powersum"], [149, 4, 1, "", "rho"], [149, 1, 1, "", "supercharacter"], [149, 4, 1, "", "x"], [149, 1, 1, "", "x_basis"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.deformed_coarse_powersum": [[149, 2, 1, "", "q"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.elementary": [[149, 1, 1, "", "Element"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.elementary.Element": [[149, 2, 1, "", "omega"], [149, 2, 1, "", "to_symmetric_function"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.homogeneous": [[149, 1, 1, "", "Element"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.homogeneous.Element": [[149, 2, 1, "", "omega"], [149, 2, 1, "", "to_symmetric_function"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial": [[149, 1, 1, "", "Element"], [149, 2, 1, "", "coproduct_on_basis"], [149, 2, 1, "", "dual_basis"], [149, 2, 1, "", "duality_pairing"], [149, 2, 1, "", "from_symmetric_function"], [149, 2, 1, "", "internal_coproduct_on_basis"], [149, 2, 1, "", "product_on_basis"], [149, 2, 1, "", "sum_of_partitions"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.Element": [[149, 2, 1, "", "expand"], [149, 2, 1, "", "to_symmetric_function"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.powersum": [[149, 1, 1, "", "Element"], [149, 2, 1, "", "antipode_on_basis"], [149, 2, 1, "", "coproduct_on_basis"], [149, 2, 1, "", "internal_coproduct_on_basis"], [149, 2, 1, "", "primitive"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.powersum.Element": [[149, 2, 1, "", "to_symmetric_function"]], "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.supercharacter": [[149, 2, 1, "", "q"]], "sage.combinat.necklace": [[150, 3, 1, "", "Necklaces"], [150, 1, 1, "", "Necklaces_evaluation"]], "sage.combinat.necklace.Necklaces_evaluation": [[150, 2, 1, "", "cardinality"], [150, 2, 1, "", "content"]], "sage.combinat.non_decreasing_parking_function": [[151, 1, 1, "", "NonDecreasingParkingFunction"], [151, 3, 1, "", "NonDecreasingParkingFunctions"], [151, 1, 1, "", "NonDecreasingParkingFunctions_all"], [151, 1, 1, "", "NonDecreasingParkingFunctions_n"], [151, 3, 1, "", "is_a"]], "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunction": [[151, 2, 1, "", "from_dyck_word"], [151, 2, 1, "", "grade"], [151, 2, 1, "", "to_dyck_word"]], "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunctions_all": [[151, 2, 1, "", "graded_component"]], "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunctions_n": [[151, 4, 1, "", "Element"], [151, 2, 1, "", "cardinality"], [151, 2, 1, "", "one"], [151, 2, 1, "", "random_element"]], "sage.combinat.nu_dyck_word": [[152, 1, 1, "", "NuDyckWord"], [152, 1, 1, "", "NuDyckWords"], [152, 3, 1, "", "path_weakly_above_other"], [152, 3, 1, "", "replace_dyck_char"], [152, 3, 1, "", "replace_dyck_symbol"], [152, 3, 1, "", "to_word_path"], [152, 3, 1, "", "update_ndw_symbols"]], "sage.combinat.nu_dyck_word.NuDyckWord": [[152, 2, 1, "", "can_mutate"], [152, 2, 1, "", "height"], [152, 2, 1, "", "heights"], [152, 2, 1, "", "horizontal_distance"], [152, 2, 1, "", "latex_options"], [152, 2, 1, "", "length"], [152, 2, 1, "", "mutate"], [152, 2, 1, "", "path"], [152, 2, 1, "", "plot"], [152, 2, 1, "", "points"], [152, 2, 1, "", "pp"], [152, 2, 1, "", "pretty_print"], [152, 2, 1, "", "set_latex_options"], [152, 2, 1, "", "width"], [152, 2, 1, "", "widths"]], "sage.combinat.nu_dyck_word.NuDyckWords": [[152, 4, 1, "", "Element"], [152, 2, 1, "", "cardinality"], [152, 4, 1, "", "options"]], "sage.combinat.nu_tamari_lattice": [[153, 3, 1, "", "NuTamariLattice"]], "sage.combinat.ordered_tree": [[154, 1, 1, "", "LabelledOrderedTree"], [154, 1, 1, "", "LabelledOrderedTrees"], [154, 1, 1, "", "OrderedTree"], [154, 1, 1, "", "OrderedTrees"], [154, 1, 1, "", "OrderedTrees_all"], [154, 1, 1, "", "OrderedTrees_size"]], "sage.combinat.ordered_tree.LabelledOrderedTree": [[154, 2, 1, "", "left_right_symmetry"], [154, 2, 1, "", "sort_key"]], "sage.combinat.ordered_tree.LabelledOrderedTrees": [[154, 4, 1, "", "Element"], [154, 2, 1, "", "cardinality"], [154, 2, 1, "", "labelled_trees"], [154, 2, 1, "", "unlabelled_trees"]], "sage.combinat.ordered_tree.OrderedTree": [[154, 2, 1, "", "is_empty"], [154, 2, 1, "", "left_right_symmetry"], [154, 2, 1, "", "normalize"], [154, 2, 1, "", "plot"], [154, 2, 1, "", "sort_key"], [154, 2, 1, "", "to_binary_tree_left_branch"], [154, 2, 1, "", "to_binary_tree_right_branch"], [154, 2, 1, "", "to_dyck_word"], [154, 2, 1, "", "to_parallelogram_polyomino"], [154, 2, 1, "", "to_poset"], [154, 2, 1, "", "to_undirected_graph"]], "sage.combinat.ordered_tree.OrderedTrees": [[154, 2, 1, "", "leaf"]], "sage.combinat.ordered_tree.OrderedTrees_all": [[154, 4, 1, "", "Element"], [154, 2, 1, "", "labelled_trees"], [154, 2, 1, "", "unlabelled_trees"]], "sage.combinat.ordered_tree.OrderedTrees_size": [[154, 2, 1, "", "cardinality"], [154, 2, 1, "", "element_class"], [154, 2, 1, "", "random_element"]], "sage.combinat.output": [[155, 3, 1, "", "ascii_art_table"], [155, 3, 1, "", "tex_from_array"], [155, 3, 1, "", "tex_from_array_tuple"], [155, 3, 1, "", "tex_from_skew_array"]], "sage.combinat.parallelogram_polyomino": [[156, 1, 1, "", "LocalOptions"], [156, 1, 1, "", "ParallelogramPolyomino"], [156, 3, 1, "", "ParallelogramPolyominoes"], [156, 1, 1, "", "ParallelogramPolyominoesFactory"], [156, 6, 1, "", "ParallelogramPolyominoesOptions"], [156, 1, 1, "", "ParallelogramPolyominoes_all"], [156, 1, 1, "", "ParallelogramPolyominoes_size"], [156, 6, 1, "", "default_tikz_options"]], "sage.combinat.parallelogram_polyomino.LocalOptions": [[156, 2, 1, "", "keys"]], "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino": [[156, 2, 1, "", "area"], [156, 2, 1, "", "bounce"], [156, 2, 1, "", "bounce_path"], [156, 2, 1, "", "box_is_node"], [156, 2, 1, "", "box_is_root"], [156, 2, 1, "", "cell_is_inside"], [156, 2, 1, "", "check"], [156, 2, 1, "", "degree_convexity"], [156, 2, 1, "", "from_dyck_word"], [156, 2, 1, "", "geometry"], [156, 2, 1, "", "get_BS_nodes"], [156, 2, 1, "", "get_array"], [156, 2, 1, "", "get_left_BS_nodes"], [156, 2, 1, "", "get_node_position_from_box"], [156, 2, 1, "", "get_options"], [156, 2, 1, "", "get_right_BS_nodes"], [156, 2, 1, "", "get_tikz_options"], [156, 2, 1, "", "height"], [156, 2, 1, "", "heights"], [156, 2, 1, "", "is_flat"], [156, 2, 1, "", "is_k_directed"], [156, 2, 1, "", "lower_heights"], [156, 2, 1, "", "lower_path"], [156, 2, 1, "", "lower_widths"], [156, 2, 1, "", "plot"], [156, 2, 1, "", "reflect"], [156, 2, 1, "", "rotate"], [156, 2, 1, "", "set_options"], [156, 2, 1, "", "size"], [156, 2, 1, "", "to_binary_tree"], [156, 2, 1, "", "to_dyck_word"], [156, 2, 1, "", "to_ordered_tree"], [156, 2, 1, "", "to_tikz"], [156, 2, 1, "", "upper_heights"], [156, 2, 1, "", "upper_path"], [156, 2, 1, "", "upper_widths"], [156, 2, 1, "", "width"], [156, 2, 1, "", "widths"]], "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_all": [[156, 2, 1, "", "check_element"], [156, 2, 1, "", "get_options"], [156, 4, 1, "", "options"], [156, 2, 1, "", "set_options"]], "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_size": [[156, 2, 1, "", "an_element"], [156, 2, 1, "", "cardinality"], [156, 2, 1, "", "check_element"], [156, 2, 1, "", "get_options"], [156, 4, 1, "", "options"], [156, 2, 1, "", "set_options"], [156, 2, 1, "", "size"]], "sage.combinat.parking_functions": [[157, 4, 1, "", "PF"], [157, 1, 1, "", "ParkingFunction"], [157, 1, 1, "", "ParkingFunctions"], [157, 1, 1, "", "ParkingFunctions_all"], [157, 1, 1, "", "ParkingFunctions_n"], [157, 3, 1, "", "from_labelled_dyck_word"], [157, 3, 1, "", "from_labelling_and_area_sequence"], [157, 3, 1, "", "is_a"]], "sage.combinat.parking_functions.ParkingFunction": [[157, 2, 1, "", "area"], [157, 2, 1, "", "cars_permutation"], [157, 2, 1, "", "characteristic_quasisymmetric_function"], [157, 2, 1, "", "check"], [157, 2, 1, "", "diagonal_composition"], [157, 2, 1, "", "diagonal_reading_word"], [157, 2, 1, "", "diagonal_word"], [157, 2, 1, "", "dinv"], [157, 2, 1, "", "dinversion_pairs"], [157, 2, 1, "", "grade"], [157, 2, 1, "", "ides"], [157, 2, 1, "", "ides_composition"], [157, 2, 1, "", "jump"], [157, 2, 1, "", "jump_list"], [157, 2, 1, "", "luck"], [157, 2, 1, "", "lucky_cars"], [157, 2, 1, "", "parking_permutation"], [157, 2, 1, "", "pretty_print"], [157, 2, 1, "", "primary_dinversion_pairs"], [157, 2, 1, "", "secondary_dinversion_pairs"], [157, 2, 1, "", "to_NonDecreasingParkingFunction"], [157, 2, 1, "", "to_area_sequence"], [157, 2, 1, "", "to_dyck_word"], [157, 2, 1, "", "to_labelled_dyck_word"], [157, 2, 1, "", "to_labelling_area_sequence_pair"], [157, 2, 1, "", "to_labelling_dyck_word_pair"], [157, 2, 1, "", "to_labelling_permutation"], [157, 2, 1, "", "touch_composition"], [157, 2, 1, "", "touch_points"]], "sage.combinat.parking_functions.ParkingFunctions_all": [[157, 4, 1, "", "Element"], [157, 2, 1, "", "graded_component"]], "sage.combinat.parking_functions.ParkingFunctions_n": [[157, 4, 1, "", "Element"], [157, 2, 1, "", "cardinality"], [157, 2, 1, "", "random_element"]], "sage.combinat.partition": [[158, 1, 1, "", "OrderedPartitions"], [158, 1, 1, "", "Partition"], [158, 1, 1, "", "Partitions"], [158, 1, 1, "", "PartitionsGreatestEQ"], [158, 1, 1, "", "PartitionsGreatestLE"], [158, 1, 1, "", "PartitionsInBox"], [158, 1, 1, "", "Partitions_all"], [158, 1, 1, "", "Partitions_all_bounded"], [158, 1, 1, "", "Partitions_constraints"], [158, 1, 1, "", "Partitions_ending"], [158, 1, 1, "", "Partitions_n"], [158, 1, 1, "", "Partitions_nk"], [158, 1, 1, "", "Partitions_parts_in"], [158, 1, 1, "", "Partitions_starting"], [158, 1, 1, "", "Partitions_with_constraints"], [158, 1, 1, "", "RegularPartitions"], [158, 1, 1, "", "RegularPartitions_all"], [158, 1, 1, "", "RegularPartitions_bounded"], [158, 1, 1, "", "RegularPartitions_n"], [158, 1, 1, "", "RegularPartitions_truncated"], [158, 1, 1, "", "RestrictedPartitions_all"], [158, 1, 1, "", "RestrictedPartitions_generic"], [158, 1, 1, "", "RestrictedPartitions_n"], [158, 3, 1, "", "number_of_partitions"], [158, 3, 1, "", "number_of_partitions_length"]], "sage.combinat.partition.OrderedPartitions": [[158, 2, 1, "", "cardinality"], [158, 2, 1, "", "list"]], "sage.combinat.partition.Partition": [[158, 2, 1, "", "add_cell"], [158, 2, 1, "", "add_horizontal_border_strip"], [158, 2, 1, "", "add_vertical_border_strip"], [158, 2, 1, "", "addable_cells"], [158, 2, 1, "", "addable_cells_residue"], [158, 2, 1, "", "arm_cells"], [158, 2, 1, "", "arm_length"], [158, 2, 1, "", "arm_lengths"], [158, 2, 1, "", "arms_legs_coeff"], [158, 2, 1, "", "atom"], [158, 2, 1, "", "attacking_pairs"], [158, 2, 1, "", "aut"], [158, 2, 1, "", "beta_numbers"], [158, 2, 1, "", "block"], [158, 2, 1, "", "boundary"], [158, 2, 1, "", "cell_poset"], [158, 2, 1, "", "cells"], [158, 2, 1, "", "centralizer_size"], [158, 2, 1, "", "character_polynomial"], [158, 2, 1, "", "components"], [158, 2, 1, "", "conjugacy_class_size"], [158, 2, 1, "", "conjugate"], [158, 2, 1, "", "contains"], [158, 2, 1, "", "content"], [158, 2, 1, "", "contents_tableau"], [158, 2, 1, "", "core"], [158, 2, 1, "", "corners"], [158, 2, 1, "", "corners_residue"], [158, 2, 1, "", "crank"], [158, 2, 1, "", "defect"], [158, 2, 1, "", "degree"], [158, 2, 1, "", "dimension"], [158, 2, 1, "", "dominated_partitions"], [158, 2, 1, "", "dominates"], [158, 2, 1, "", "down"], [158, 2, 1, "", "down_list"], [158, 2, 1, "", "dual_equivalence_graph"], [158, 2, 1, "", "evaluation"], [158, 2, 1, "", "ferrers_diagram"], [158, 2, 1, "", "frobenius_coordinates"], [158, 2, 1, "", "frobenius_rank"], [158, 2, 1, "", "from_kbounded_to_grassmannian"], [158, 2, 1, "", "from_kbounded_to_reduced_word"], [158, 2, 1, "", "garnir_tableau"], [158, 2, 1, "", "generalized_pochhammer_symbol"], [158, 2, 1, "", "get_part"], [158, 2, 1, "", "has_k_rectangle"], [158, 2, 1, "", "has_rectangle"], [158, 2, 1, "", "hook_length"], [158, 2, 1, "", "hook_lengths"], [158, 2, 1, "", "hook_polynomial"], [158, 2, 1, "", "hook_product"], [158, 2, 1, "", "hooks"], [158, 2, 1, "", "horizontal_border_strip_cells"], [158, 2, 1, "", "initial_column_tableau"], [158, 2, 1, "", "initial_tableau"], [158, 2, 1, "", "inside_corners"], [158, 2, 1, "", "inside_corners_residue"], [158, 2, 1, "", "is_core"], [158, 2, 1, "", "is_empty"], [158, 2, 1, "", "is_k_bounded"], [158, 2, 1, "", "is_k_irreducible"], [158, 2, 1, "", "is_k_reducible"], [158, 2, 1, "", "is_regular"], [158, 2, 1, "", "is_restricted"], [158, 2, 1, "", "is_symmetric"], [158, 2, 1, "", "jacobi_trudi"], [158, 2, 1, "", "k_atom"], [158, 2, 1, "", "k_boundary"], [158, 2, 1, "", "k_column_lengths"], [158, 2, 1, "", "k_conjugate"], [158, 2, 1, "", "k_interior"], [158, 2, 1, "", "k_irreducible"], [158, 2, 1, "", "k_rim"], [158, 2, 1, "", "k_row_lengths"], [158, 2, 1, "", "k_size"], [158, 2, 1, "", "k_skew"], [158, 2, 1, "", "k_split"], [158, 2, 1, "", "larger_lex"], [158, 2, 1, "", "leg_cells"], [158, 2, 1, "", "leg_length"], [158, 2, 1, "", "leg_lengths"], [158, 2, 1, "", "length"], [158, 2, 1, "", "level"], [158, 2, 1, "", "lower_hook"], [158, 2, 1, "", "lower_hook_lengths"], [158, 2, 1, "", "next"], [158, 2, 1, "", "next_within_bounds"], [158, 2, 1, "", "outer_rim"], [158, 2, 1, "", "outline"], [158, 2, 1, "", "outside_corners"], [158, 2, 1, "", "outside_corners_residue"], [158, 2, 1, "", "plancherel_measure"], [158, 2, 1, "", "power"], [158, 2, 1, "", "pp"], [158, 2, 1, "", "prime_degree"], [158, 2, 1, "", "quotient"], [158, 2, 1, "", "reading_tableau"], [158, 2, 1, "", "removable_cells"], [158, 2, 1, "", "removable_cells_residue"], [158, 2, 1, "", "remove_cell"], [158, 2, 1, "", "remove_horizontal_border_strip"], [158, 2, 1, "", "residue"], [158, 2, 1, "", "rim"], [158, 2, 1, "", "row_standard_tableaux"], [158, 2, 1, "", "sign"], [158, 2, 1, "", "size"], [158, 2, 1, "", "standard_tableaux"], [158, 2, 1, "", "stretch"], [158, 2, 1, "", "suter_diagonal_slide"], [158, 2, 1, "", "t_completion"], [158, 2, 1, "", "to_core"], [158, 2, 1, "", "to_dyck_word"], [158, 2, 1, "", "to_exp"], [158, 2, 1, "", "to_exp_dict"], [158, 2, 1, "", "to_list"], [158, 2, 1, "", "top_garnir_tableau"], [158, 2, 1, "", "up"], [158, 2, 1, "", "up_list"], [158, 2, 1, "", "upper_hook"], [158, 2, 1, "", "upper_hook_lengths"], [158, 2, 1, "", "vertical_border_strip_cells"], [158, 2, 1, "", "weighted_size"], [158, 2, 1, "", "young_subgroup"], [158, 2, 1, "", "young_subgroup_generators"], [158, 2, 1, "", "zero_one_sequence"]], "sage.combinat.partition.Partitions": [[158, 4, 1, "", "Element"], [158, 4, 1, "", "options"], [158, 2, 1, "", "subset"]], "sage.combinat.partition.PartitionsGreatestEQ": [[158, 4, 1, "", "Element"], [158, 2, 1, "", "cardinality"], [158, 4, 1, "", "options"]], "sage.combinat.partition.PartitionsGreatestLE": [[158, 4, 1, "", "Element"], [158, 2, 1, "", "cardinality"], [158, 4, 1, "", "options"]], "sage.combinat.partition.PartitionsInBox": [[158, 2, 1, "", "cardinality"], [158, 2, 1, "", "list"]], "sage.combinat.partition.Partitions_all": [[158, 2, 1, "", "from_beta_numbers"], [158, 2, 1, "", "from_core_and_quotient"], [158, 2, 1, "", "from_exp"], [158, 2, 1, "", "from_frobenius_coordinates"], [158, 2, 1, "", "from_zero_one"], [158, 2, 1, "", "subset"]], "sage.combinat.partition.Partitions_ending": [[158, 2, 1, "", "first"], [158, 2, 1, "", "next"]], "sage.combinat.partition.Partitions_n": [[158, 2, 1, "", "cardinality"], [158, 2, 1, "", "first"], [158, 2, 1, "", "last"], [158, 2, 1, "", "next"], [158, 2, 1, "", "random_element"], [158, 2, 1, "", "random_element_plancherel"], [158, 2, 1, "", "random_element_uniform"], [158, 2, 1, "", "subset"]], "sage.combinat.partition.Partitions_nk": [[158, 2, 1, "", "cardinality"], [158, 2, 1, "", "subset"]], "sage.combinat.partition.Partitions_parts_in": [[158, 2, 1, "", "cardinality"], [158, 2, 1, "", "first"], [158, 2, 1, "", "last"]], "sage.combinat.partition.Partitions_starting": [[158, 2, 1, "", "first"], [158, 2, 1, "", "next"]], "sage.combinat.partition.Partitions_with_constraints": [[158, 4, 1, "", "Element"], [158, 4, 1, "", "options"]], "sage.combinat.partition.RegularPartitions": [[158, 2, 1, "", "ell"]], "sage.combinat.partition.RegularPartitions_n": [[158, 2, 1, "", "cardinality"]], "sage.combinat.partition.RegularPartitions_truncated": [[158, 2, 1, "", "max_length"]], "sage.combinat.partition.RestrictedPartitions_generic": [[158, 2, 1, "", "ell"]], "sage.combinat.partition.RestrictedPartitions_n": [[158, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra": [[159, 1, 1, "", "PartitionAlgebraElement_ak"], [159, 1, 1, "", "PartitionAlgebraElement_bk"], [159, 1, 1, "", "PartitionAlgebraElement_generic"], [159, 1, 1, "", "PartitionAlgebraElement_pk"], [159, 1, 1, "", "PartitionAlgebraElement_prk"], [159, 1, 1, "", "PartitionAlgebraElement_rk"], [159, 1, 1, "", "PartitionAlgebraElement_sk"], [159, 1, 1, "", "PartitionAlgebraElement_tk"], [159, 1, 1, "", "PartitionAlgebra_ak"], [159, 1, 1, "", "PartitionAlgebra_bk"], [159, 1, 1, "", "PartitionAlgebra_generic"], [159, 1, 1, "", "PartitionAlgebra_pk"], [159, 1, 1, "", "PartitionAlgebra_prk"], [159, 1, 1, "", "PartitionAlgebra_rk"], [159, 1, 1, "", "PartitionAlgebra_sk"], [159, 1, 1, "", "PartitionAlgebra_tk"], [159, 3, 1, "", "SetPartitionsAk"], [159, 1, 1, "", "SetPartitionsAk_k"], [159, 1, 1, "", "SetPartitionsAkhalf_k"], [159, 3, 1, "", "SetPartitionsBk"], [159, 1, 1, "", "SetPartitionsBk_k"], [159, 1, 1, "", "SetPartitionsBkhalf_k"], [159, 3, 1, "", "SetPartitionsIk"], [159, 1, 1, "", "SetPartitionsIk_k"], [159, 1, 1, "", "SetPartitionsIkhalf_k"], [159, 3, 1, "", "SetPartitionsPRk"], [159, 1, 1, "", "SetPartitionsPRk_k"], [159, 1, 1, "", "SetPartitionsPRkhalf_k"], [159, 3, 1, "", "SetPartitionsPk"], [159, 1, 1, "", "SetPartitionsPk_k"], [159, 1, 1, "", "SetPartitionsPkhalf_k"], [159, 3, 1, "", "SetPartitionsRk"], [159, 1, 1, "", "SetPartitionsRk_k"], [159, 1, 1, "", "SetPartitionsRkhalf_k"], [159, 3, 1, "", "SetPartitionsSk"], [159, 1, 1, "", "SetPartitionsSk_k"], [159, 1, 1, "", "SetPartitionsSkhalf_k"], [159, 3, 1, "", "SetPartitionsTk"], [159, 1, 1, "", "SetPartitionsTk_k"], [159, 1, 1, "", "SetPartitionsTkhalf_k"], [159, 1, 1, "", "SetPartitionsXkElement"], [159, 3, 1, "", "identity"], [159, 3, 1, "", "is_planar"], [159, 3, 1, "", "pair_to_graph"], [159, 3, 1, "", "propagating_number"], [159, 3, 1, "", "set_partition_composition"], [159, 3, 1, "", "to_graph"], [159, 3, 1, "", "to_set_partition"]], "sage.combinat.partition_algebra.PartitionAlgebra_generic": [[159, 2, 1, "", "one_basis"], [159, 2, 1, "", "product_on_basis"]], "sage.combinat.partition_algebra.SetPartitionsAk_k": [[159, 4, 1, "", "Element"]], "sage.combinat.partition_algebra.SetPartitionsAkhalf_k": [[159, 4, 1, "", "Element"]], "sage.combinat.partition_algebra.SetPartitionsBk_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsBkhalf_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsIk_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsIkhalf_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsPRk_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsPRkhalf_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsPk_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsPkhalf_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsRk_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsRkhalf_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsSk_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsSkhalf_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsTk_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsTkhalf_k": [[159, 2, 1, "", "cardinality"]], "sage.combinat.partition_algebra.SetPartitionsXkElement": [[159, 2, 1, "", "check"]], "sage.combinat.partition_kleshchev": [[160, 1, 1, "", "KleshchevCrystalMixin"], [160, 1, 1, "", "KleshchevPartition"], [160, 1, 1, "", "KleshchevPartitionCrystal"], [160, 1, 1, "", "KleshchevPartitionTuple"], [160, 1, 1, "", "KleshchevPartitionTupleCrystal"], [160, 1, 1, "", "KleshchevPartitions"], [160, 1, 1, "", "KleshchevPartitions_all"], [160, 1, 1, "", "KleshchevPartitions_size"]], "sage.combinat.partition_kleshchev.KleshchevCrystalMixin": [[160, 2, 1, "", "Epsilon"], [160, 2, 1, "", "Phi"], [160, 2, 1, "", "epsilon"], [160, 2, 1, "", "phi"], [160, 2, 1, "", "weight"]], "sage.combinat.partition_kleshchev.KleshchevPartition": [[160, 2, 1, "", "cogood_cells"], [160, 2, 1, "", "conormal_cells"], [160, 2, 1, "", "good_cell_sequence"], [160, 2, 1, "", "good_cells"], [160, 2, 1, "", "good_residue_sequence"], [160, 2, 1, "", "is_regular"], [160, 2, 1, "", "is_restricted"], [160, 2, 1, "", "mullineux_conjugate"], [160, 2, 1, "", "normal_cells"]], "sage.combinat.partition_kleshchev.KleshchevPartitionCrystal": [[160, 2, 1, "", "e"], [160, 2, 1, "", "f"]], "sage.combinat.partition_kleshchev.KleshchevPartitionTuple": [[160, 2, 1, "", "cogood_cells"], [160, 2, 1, "", "conormal_cells"], [160, 2, 1, "", "good_cell_sequence"], [160, 2, 1, "", "good_cells"], [160, 2, 1, "", "good_residue_sequence"], [160, 2, 1, "", "is_regular"], [160, 2, 1, "", "is_restricted"], [160, 2, 1, "", "mullineux_conjugate"], [160, 2, 1, "", "normal_cells"]], "sage.combinat.partition_kleshchev.KleshchevPartitionTupleCrystal": [[160, 2, 1, "", "e"], [160, 2, 1, "", "f"]], "sage.combinat.partition_kleshchev.KleshchevPartitions": [[160, 2, 1, "", "convention"], [160, 2, 1, "", "multicharge"]], "sage.combinat.partition_kleshchev.KleshchevPartitions_size": [[160, 4, 1, "", "Element"]], "sage.combinat.partition_shifting_algebras": [[161, 1, 1, "", "ShiftingOperatorAlgebra"], [161, 1, 1, "", "ShiftingSequenceSpace"]], "sage.combinat.partition_shifting_algebras.ShiftingOperatorAlgebra": [[161, 1, 1, "", "Element"], [161, 2, 1, "", "build_and_register_conversion"], [161, 2, 1, "", "ij"], [161, 2, 1, "", "one_basis"], [161, 2, 1, "", "product_on_basis"]], "sage.combinat.partition_shifting_algebras.ShiftingSequenceSpace": [[161, 2, 1, "", "check"]], "sage.combinat.partition_tuple": [[162, 1, 1, "", "PartitionTuple"], [162, 1, 1, "", "PartitionTuples"], [162, 1, 1, "", "PartitionTuples_all"], [162, 1, 1, "", "PartitionTuples_level"], [162, 1, 1, "", "PartitionTuples_level_size"], [162, 1, 1, "", "PartitionTuples_size"], [162, 1, 1, "", "RegularPartitionTuples"], [162, 1, 1, "", "RegularPartitionTuples_all"], [162, 1, 1, "", "RegularPartitionTuples_level"], [162, 1, 1, "", "RegularPartitionTuples_level_size"], [162, 1, 1, "", "RegularPartitionTuples_size"]], "sage.combinat.partition_tuple.PartitionTuple": [[162, 4, 1, "", "Element"], [162, 2, 1, "", "add_cell"], [162, 2, 1, "", "addable_cells"], [162, 2, 1, "", "arm_length"], [162, 2, 1, "", "block"], [162, 2, 1, "", "cells"], [162, 2, 1, "", "components"], [162, 2, 1, "", "conjugate"], [162, 2, 1, "", "contains"], [162, 2, 1, "", "content"], [162, 2, 1, "", "content_tableau"], [162, 2, 1, "", "corners"], [162, 2, 1, "", "defect"], [162, 2, 1, "", "degree"], [162, 2, 1, "", "diagram"], [162, 2, 1, "", "dominates"], [162, 2, 1, "", "down"], [162, 2, 1, "", "down_list"], [162, 2, 1, "", "ferrers_diagram"], [162, 2, 1, "", "garnir_tableau"], [162, 2, 1, "", "hook_length"], [162, 2, 1, "", "initial_column_tableau"], [162, 2, 1, "", "initial_tableau"], [162, 2, 1, "", "leg_length"], [162, 2, 1, "", "level"], [162, 2, 1, "", "outside_corners"], [162, 2, 1, "", "pp"], [162, 2, 1, "", "prime_degree"], [162, 2, 1, "", "removable_cells"], [162, 2, 1, "", "remove_cell"], [162, 2, 1, "", "row_standard_tableaux"], [162, 2, 1, "", "size"], [162, 2, 1, "", "standard_tableaux"], [162, 2, 1, "", "to_exp"], [162, 2, 1, "", "to_list"], [162, 2, 1, "", "top_garnir_tableau"], [162, 2, 1, "", "up"], [162, 2, 1, "", "up_list"], [162, 2, 1, "", "young_subgroup"], [162, 2, 1, "", "young_subgroup_generators"]], "sage.combinat.partition_tuple.PartitionTuples": [[162, 4, 1, "", "Element"], [162, 2, 1, "", "level"], [162, 4, 1, "", "options"], [162, 2, 1, "", "size"]], "sage.combinat.partition_tuple.PartitionTuples_level_size": [[162, 2, 1, "", "cardinality"]], "sage.combinat.partitions": [[163, 3, 1, "", "ZS1_iterator"], [163, 3, 1, "", "ZS1_iterator_nk"]], "sage.combinat.path_tableaux": [[164, 0, 0, "-", "catalog"], [165, 0, 0, "-", "dyck_path"], [166, 0, 0, "-", "frieze"], [167, 0, 0, "-", "path_tableau"], [168, 0, 0, "-", "semistandard"]], "sage.combinat.path_tableaux.dyck_path": [[165, 1, 1, "", "DyckPath"], [165, 1, 1, "", "DyckPaths"]], "sage.combinat.path_tableaux.dyck_path.DyckPath": [[165, 2, 1, "", "check"], [165, 2, 1, "", "descents"], [165, 2, 1, "", "is_skew"], [165, 2, 1, "", "local_rule"], [165, 2, 1, "", "to_DyckWord"], [165, 2, 1, "", "to_perfect_matching"], [165, 2, 1, "", "to_tableau"], [165, 2, 1, "", "to_word"]], "sage.combinat.path_tableaux.dyck_path.DyckPaths": [[165, 4, 1, "", "Element"]], "sage.combinat.path_tableaux.frieze": [[166, 1, 1, "", "FriezePattern"], [166, 1, 1, "", "FriezePatterns"]], "sage.combinat.path_tableaux.frieze.FriezePattern": [[166, 2, 1, "", "change_ring"], [166, 2, 1, "", "check"], [166, 2, 1, "", "is_integral"], [166, 2, 1, "", "is_positive"], [166, 2, 1, "", "is_skew"], [166, 2, 1, "", "local_rule"], [166, 2, 1, "", "plot"], [166, 2, 1, "", "triangulation"], [166, 2, 1, "", "width"]], "sage.combinat.path_tableaux.frieze.FriezePatterns": [[166, 4, 1, "", "Element"]], "sage.combinat.path_tableaux.path_tableau": [[167, 1, 1, "", "CylindricalDiagram"], [167, 1, 1, "", "PathTableau"], [167, 1, 1, "", "PathTableaux"]], "sage.combinat.path_tableaux.path_tableau.CylindricalDiagram": [[167, 2, 1, "", "pp"]], "sage.combinat.path_tableaux.path_tableau.PathTableau": [[167, 2, 1, "", "cactus"], [167, 2, 1, "", "commutor"], [167, 2, 1, "", "dual_equivalence_graph"], [167, 2, 1, "", "evacuation"], [167, 2, 1, "", "final_shape"], [167, 2, 1, "", "initial_shape"], [167, 2, 1, "", "local_rule"], [167, 2, 1, "", "orbit"], [167, 2, 1, "", "promotion"], [167, 2, 1, "", "size"]], "sage.combinat.path_tableaux.semistandard": [[168, 1, 1, "", "SemistandardPathTableau"], [168, 1, 1, "", "SemistandardPathTableaux"]], "sage.combinat.path_tableaux.semistandard.SemistandardPathTableau": [[168, 2, 1, "", "check"], [168, 2, 1, "", "is_integral"], [168, 2, 1, "", "is_skew"], [168, 2, 1, "", "local_rule"], [168, 2, 1, "", "rectify"], [168, 2, 1, "", "size"], [168, 2, 1, "", "to_pattern"], [168, 2, 1, "", "to_tableau"]], "sage.combinat.path_tableaux.semistandard.SemistandardPathTableaux": [[168, 4, 1, "", "Element"]], "sage.combinat.perfect_matching": [[169, 1, 1, "", "PerfectMatching"], [169, 1, 1, "", "PerfectMatchings"]], "sage.combinat.perfect_matching.PerfectMatching": [[169, 2, 1, "", "Weingarten_function"], [169, 2, 1, "", "loop_type"], [169, 2, 1, "", "loops"], [169, 2, 1, "", "loops_iterator"], [169, 2, 1, "", "number_of_loops"], [169, 2, 1, "", "partner"], [169, 2, 1, "", "standardization"], [169, 2, 1, "", "to_graph"], [169, 2, 1, "", "to_noncrossing_set_partition"]], "sage.combinat.perfect_matching.PerfectMatchings": [[169, 4, 1, "", "Element"], [169, 2, 1, "", "Weingarten_matrix"], [169, 2, 1, "", "base_set"], [169, 2, 1, "", "base_set_cardinality"], [169, 2, 1, "", "cardinality"], [169, 2, 1, "", "random_element"]], "sage.combinat.permutation": [[170, 1, 1, "", "Arrangements"], [170, 1, 1, "", "Arrangements_msetk"], [170, 1, 1, "", "Arrangements_setk"], [170, 1, 1, "", "CyclicPermutations"], [170, 1, 1, "", "CyclicPermutationsOfPartition"], [170, 1, 1, "", "PatternAvoider"], [170, 1, 1, "", "Permutation"], [170, 1, 1, "", "Permutations"], [170, 1, 1, "", "PermutationsNK"], [170, 1, 1, "", "Permutations_mset"], [170, 1, 1, "", "Permutations_msetk"], [170, 1, 1, "", "Permutations_nk"], [170, 1, 1, "", "Permutations_set"], [170, 1, 1, "", "Permutations_setk"], [170, 1, 1, "", "StandardPermutations_all"], [170, 1, 1, "", "StandardPermutations_all_avoiding"], [170, 1, 1, "", "StandardPermutations_avoiding_12"], [170, 1, 1, "", "StandardPermutations_avoiding_123"], [170, 1, 1, "", "StandardPermutations_avoiding_132"], [170, 1, 1, "", "StandardPermutations_avoiding_21"], [170, 1, 1, "", "StandardPermutations_avoiding_213"], [170, 1, 1, "", "StandardPermutations_avoiding_231"], [170, 1, 1, "", "StandardPermutations_avoiding_312"], [170, 1, 1, "", "StandardPermutations_avoiding_321"], [170, 1, 1, "", "StandardPermutations_avoiding_generic"], [170, 1, 1, "", "StandardPermutations_bruhat_greater"], [170, 1, 1, "", "StandardPermutations_bruhat_smaller"], [170, 1, 1, "", "StandardPermutations_descents"], [170, 1, 1, "", "StandardPermutations_n"], [170, 1, 1, "", "StandardPermutations_n_abstract"], [170, 1, 1, "", "StandardPermutations_recoils"], [170, 1, 1, "", "StandardPermutations_recoilsfatter"], [170, 1, 1, "", "StandardPermutations_recoilsfiner"], [170, 3, 1, "", "bistochastic_as_sum_of_permutations"], [170, 3, 1, "", "bounded_affine_permutation"], [170, 3, 1, "", "bruhat_lequal"], [170, 3, 1, "", "descents_composition_first"], [170, 3, 1, "", "descents_composition_last"], [170, 3, 1, "", "descents_composition_list"], [170, 3, 1, "", "from_cycles"], [170, 3, 1, "", "from_inversion_vector"], [170, 3, 1, "", "from_lehmer_cocode"], [170, 3, 1, "", "from_lehmer_code"], [170, 3, 1, "", "from_major_code"], [170, 3, 1, "", "from_permutation_group_element"], [170, 3, 1, "", "from_rank"], [170, 3, 1, "", "from_reduced_word"], [170, 3, 1, "", "permutohedron_lequal"], [170, 3, 1, "", "to_standard"]], "sage.combinat.permutation.Arrangements": [[170, 2, 1, "", "cardinality"]], "sage.combinat.permutation.CyclicPermutations": [[170, 2, 1, "", "iterator"], [170, 2, 1, "", "list"]], "sage.combinat.permutation.CyclicPermutationsOfPartition": [[170, 1, 1, "", "Element"], [170, 2, 1, "", "iterator"], [170, 2, 1, "", "list"]], "sage.combinat.permutation.CyclicPermutationsOfPartition.Element": [[170, 2, 1, "", "check"]], "sage.combinat.permutation.Permutation": [[170, 2, 1, "", "RS_partition"], [170, 2, 1, "", "absolute_length"], [170, 2, 1, "", "action"], [170, 2, 1, "", "avoids"], [170, 2, 1, "", "binary_search_tree"], [170, 2, 1, "", "binary_search_tree_shape"], [170, 2, 1, "", "bruhat_greater"], [170, 2, 1, "", "bruhat_inversions"], [170, 2, 1, "", "bruhat_inversions_iterator"], [170, 2, 1, "", "bruhat_lequal"], [170, 2, 1, "", "bruhat_pred"], [170, 2, 1, "", "bruhat_pred_iterator"], [170, 2, 1, "", "bruhat_smaller"], [170, 2, 1, "", "bruhat_succ"], [170, 2, 1, "", "bruhat_succ_iterator"], [170, 2, 1, "", "complement"], [170, 2, 1, "", "cycle_string"], [170, 2, 1, "", "cycle_tuples"], [170, 2, 1, "", "cycle_type"], [170, 2, 1, "", "decreasing_runs"], [170, 2, 1, "", "descent_polynomial"], [170, 2, 1, "", "descents"], [170, 2, 1, "", "descents_composition"], [170, 2, 1, "", "destandardize"], [170, 2, 1, "", "dict"], [170, 2, 1, "", "fixed_points"], [170, 2, 1, "", "foata_bijection"], [170, 2, 1, "", "foata_bijection_inverse"], [170, 2, 1, "", "forget_cycles"], [170, 2, 1, "", "fundamental_transformation"], [170, 2, 1, "", "fundamental_transformation_inverse"], [170, 2, 1, "", "grade"], [170, 2, 1, "", "has_pattern"], [170, 2, 1, "", "hyperoctahedral_double_coset_type"], [170, 2, 1, "", "idescents"], [170, 2, 1, "", "idescents_signature"], [170, 2, 1, "", "imajor_index"], [170, 2, 1, "", "increasing_tree"], [170, 2, 1, "", "increasing_tree_shape"], [170, 2, 1, "", "inverse"], [170, 2, 1, "", "inversions"], [170, 2, 1, "", "is_derangement"], [170, 2, 1, "", "is_even"], [170, 2, 1, "", "ishift"], [170, 2, 1, "", "iswitch"], [170, 2, 1, "", "left_action_product"], [170, 2, 1, "", "left_tableau"], [170, 2, 1, "", "length"], [170, 2, 1, "", "longest_increasing_subsequence_length"], [170, 2, 1, "", "longest_increasing_subsequences"], [170, 2, 1, "", "longest_increasing_subsequences_number"], [170, 2, 1, "", "major_index"], [170, 2, 1, "", "multi_major_index"], [170, 2, 1, "", "next"], [170, 2, 1, "", "noninversions"], [170, 2, 1, "", "number_of_descents"], [170, 2, 1, "", "number_of_fixed_points"], [170, 2, 1, "", "number_of_idescents"], [170, 2, 1, "", "number_of_inversions"], [170, 2, 1, "", "number_of_noninversions"], [170, 2, 1, "", "number_of_peaks"], [170, 2, 1, "", "number_of_recoils"], [170, 2, 1, "", "number_of_reduced_words"], [170, 2, 1, "", "number_of_saliances"], [170, 2, 1, "", "pattern_positions"], [170, 2, 1, "", "peaks"], [170, 2, 1, "", "permutation_poset"], [170, 2, 1, "", "permutohedron_greater"], [170, 2, 1, "", "permutohedron_join"], [170, 2, 1, "", "permutohedron_lequal"], [170, 2, 1, "", "permutohedron_meet"], [170, 2, 1, "", "permutohedron_pred"], [170, 2, 1, "", "permutohedron_smaller"], [170, 2, 1, "", "permutohedron_succ"], [170, 2, 1, "", "prev"], [170, 2, 1, "", "rank"], [170, 2, 1, "", "recoils"], [170, 2, 1, "", "recoils_composition"], [170, 2, 1, "", "reduced_word"], [170, 2, 1, "", "reduced_word_lexmin"], [170, 2, 1, "", "reduced_words"], [170, 2, 1, "", "reduced_words_iterator"], [170, 2, 1, "", "remove_extra_fixed_points"], [170, 2, 1, "", "retract_direct_product"], [170, 2, 1, "", "retract_okounkov_vershik"], [170, 2, 1, "", "retract_plain"], [170, 2, 1, "", "reverse"], [170, 2, 1, "", "right_action_product"], [170, 2, 1, "", "right_permutohedron_interval"], [170, 2, 1, "", "right_permutohedron_interval_iterator"], [170, 2, 1, "", "right_tableau"], [170, 2, 1, "", "robinson_schensted"], [170, 2, 1, "", "rothe_diagram"], [170, 2, 1, "", "runs"], [170, 2, 1, "", "saliances"], [170, 2, 1, "", "shifted_concatenation"], [170, 2, 1, "", "shifted_shuffle"], [170, 2, 1, "", "show"], [170, 2, 1, "", "sign"], [170, 2, 1, "", "signature"], [170, 2, 1, "", "simion_schmidt"], [170, 2, 1, "", "size"], [170, 2, 1, "", "stack_sort"], [170, 2, 1, "", "sylvester_class"], [170, 2, 1, "", "to_alternating_sign_matrix"], [170, 2, 1, "", "to_cycles"], [170, 2, 1, "", "to_digraph"], [170, 2, 1, "", "to_inversion_vector"], [170, 2, 1, "", "to_lehmer_cocode"], [170, 2, 1, "", "to_lehmer_code"], [170, 2, 1, "", "to_major_code"], [170, 2, 1, "", "to_matrix"], [170, 2, 1, "", "to_permutation_group_element"], [170, 2, 1, "", "to_tableau_by_shape"], [170, 2, 1, "", "weak_excedences"]], "sage.combinat.permutation.Permutations": [[170, 4, 1, "", "Element"], [170, 4, 1, "", "options"]], "sage.combinat.permutation.Permutations_mset": [[170, 1, 1, "", "Element"], [170, 2, 1, "", "cardinality"], [170, 2, 1, "", "rank"], [170, 2, 1, "", "unrank"]], "sage.combinat.permutation.Permutations_mset.Element": [[170, 2, 1, "", "check"]], "sage.combinat.permutation.Permutations_msetk": [[170, 2, 1, "", "cardinality"]], "sage.combinat.permutation.Permutations_nk": [[170, 1, 1, "", "Element"], [170, 2, 1, "", "cardinality"], [170, 2, 1, "", "random_element"]], "sage.combinat.permutation.Permutations_nk.Element": [[170, 2, 1, "", "check"]], "sage.combinat.permutation.Permutations_set": [[170, 1, 1, "", "Element"], [170, 2, 1, "", "cardinality"], [170, 2, 1, "", "random_element"]], "sage.combinat.permutation.Permutations_set.Element": [[170, 2, 1, "", "check"]], "sage.combinat.permutation.Permutations_setk": [[170, 2, 1, "", "random_element"]], "sage.combinat.permutation.StandardPermutations_all": [[170, 2, 1, "", "graded_component"]], "sage.combinat.permutation.StandardPermutations_all_avoiding": [[170, 2, 1, "", "patterns"]], "sage.combinat.permutation.StandardPermutations_avoiding_12": [[170, 2, 1, "", "cardinality"]], "sage.combinat.permutation.StandardPermutations_avoiding_123": [[170, 2, 1, "", "cardinality"]], "sage.combinat.permutation.StandardPermutations_avoiding_132": [[170, 2, 1, "", "cardinality"]], "sage.combinat.permutation.StandardPermutations_avoiding_21": [[170, 2, 1, "", "cardinality"]], "sage.combinat.permutation.StandardPermutations_avoiding_213": [[170, 2, 1, "", "cardinality"]], "sage.combinat.permutation.StandardPermutations_avoiding_231": [[170, 2, 1, "", "cardinality"]], "sage.combinat.permutation.StandardPermutations_avoiding_312": [[170, 2, 1, "", "cardinality"]], "sage.combinat.permutation.StandardPermutations_avoiding_321": [[170, 2, 1, "", "cardinality"]], "sage.combinat.permutation.StandardPermutations_avoiding_generic": [[170, 5, 1, "", "a"], [170, 2, 1, "", "cardinality"], [170, 2, 1, "", "patterns"]], "sage.combinat.permutation.StandardPermutations_descents": [[170, 2, 1, "", "cardinality"], [170, 2, 1, "", "first"], [170, 2, 1, "", "last"]], "sage.combinat.permutation.StandardPermutations_n": [[170, 1, 1, "", "Element"], [170, 2, 1, "", "algebra"], [170, 2, 1, "", "as_permutation_group"], [170, 2, 1, "", "cardinality"], [170, 2, 1, "", "cartan_type"], [170, 2, 1, "", "codegrees"], [170, 2, 1, "", "conjugacy_class"], [170, 2, 1, "", "conjugacy_classes"], [170, 2, 1, "", "conjugacy_classes_iterator"], [170, 2, 1, "", "conjugacy_classes_representatives"], [170, 2, 1, "", "degree"], [170, 2, 1, "", "degrees"], [170, 2, 1, "", "element_in_conjugacy_classes"], [170, 2, 1, "", "identity"], [170, 2, 1, "", "index_set"], [170, 2, 1, "", "one"], [170, 2, 1, "", "random_element"], [170, 2, 1, "", "rank"], [170, 2, 1, "", "simple_reflection"], [170, 2, 1, "", "unrank"]], "sage.combinat.permutation.StandardPermutations_n.Element": [[170, 2, 1, "", "apply_simple_reflection_left"], [170, 2, 1, "", "apply_simple_reflection_right"], [170, 2, 1, "", "has_left_descent"], [170, 2, 1, "", "has_right_descent"], [170, 2, 1, "", "inverse"]], "sage.combinat.permutation_cython": [[171, 3, 1, "", "left_action_product"], [171, 3, 1, "", "left_action_same_n"], [171, 3, 1, "", "map_to_list"], [171, 3, 1, "", "next_perm"], [171, 3, 1, "", "permutation_iterator_transposition_list"], [171, 3, 1, "", "right_action_product"], [171, 3, 1, "", "right_action_same_n"]], "sage.combinat.plane_partition": [[172, 4, 1, "", "PP"], [172, 1, 1, "", "PlanePartition"], [172, 1, 1, "", "PlanePartitions"]], "sage.combinat.plane_partition.PlanePartition": [[172, 2, 1, "", "cells"], [172, 2, 1, "", "check"], [172, 2, 1, "", "complement"], [172, 2, 1, "", "is_CSPP"], [172, 2, 1, "", "is_CSSCPP"], [172, 2, 1, "", "is_CSTCPP"], [172, 2, 1, "", "is_SCPP"], [172, 2, 1, "", "is_SPP"], [172, 2, 1, "", "is_SSCPP"], [172, 2, 1, "", "is_TCPP"], [172, 2, 1, "", "is_TSPP"], [172, 2, 1, "", "is_TSSCPP"], [172, 2, 1, "", "plot"], [172, 2, 1, "", "plot3d"], [172, 2, 1, "", "pp"], [172, 2, 1, "", "to_tableau"], [172, 2, 1, "", "transpose"], [172, 2, 1, "", "x_tableau"], [172, 2, 1, "", "y_tableau"], [172, 2, 1, "", "z_tableau"]], "sage.combinat.plane_partition.PlanePartitions": [[172, 4, 1, "", "Element"], [172, 2, 1, "", "box"], [172, 2, 1, "", "cardinality"], [172, 2, 1, "", "random_element"]], "sage.combinat.posets": [[173, 0, 0, "-", "all"], [174, 0, 0, "-", "cartesian_product"], [175, 0, 0, "-", "d_complete"], [176, 0, 0, "-", "elements"], [177, 0, 0, "-", "forest"], [178, 0, 0, "-", "hasse_diagram"], [179, 0, 0, "-", "incidence_algebras"], [180, 0, 0, "-", "lattices"], [181, 0, 0, "-", "linear_extensions"], [182, 0, 0, "-", "mobile"], [183, 0, 0, "-", "moebius_algebra"], [184, 0, 0, "-", "poset_examples"], [185, 0, 0, "-", "posets"]], "sage.combinat.posets.cartesian_product": [[174, 1, 1, "", "CartesianProductPoset"]], "sage.combinat.posets.cartesian_product.CartesianProductPoset": [[174, 1, 1, "", "Element"], [174, 2, 1, "", "le"], [174, 2, 1, "", "le_lex"], [174, 2, 1, "", "le_native"], [174, 2, 1, "", "le_product"]], "sage.combinat.posets.d_complete": [[175, 1, 1, "", "DCompletePoset"]], "sage.combinat.posets.d_complete.DCompletePoset": [[175, 2, 1, "", "get_hook"], [175, 2, 1, "", "get_hooks"], [175, 2, 1, "", "hook_product"]], "sage.combinat.posets.elements": [[176, 1, 1, "", "JoinSemilatticeElement"], [176, 1, 1, "", "LatticePosetElement"], [176, 1, 1, "", "MeetSemilatticeElement"], [176, 1, 1, "", "PosetElement"]], "sage.combinat.posets.forest": [[177, 1, 1, "", "ForestPoset"]], "sage.combinat.posets.hasse_diagram": [[178, 1, 1, "", "HasseDiagram"], [178, 7, 1, "", "LatticeError"]], "sage.combinat.posets.hasse_diagram.HasseDiagram": [[178, 2, 1, "", "antichains"], [178, 2, 1, "", "antichains_iterator"], [178, 2, 1, "", "are_comparable"], [178, 2, 1, "", "are_incomparable"], [178, 2, 1, "", "atoms_of_congruence_lattice"], [178, 2, 1, "", "bottom"], [178, 2, 1, "", "cardinality"], [178, 2, 1, "", "chains"], [178, 2, 1, "", "closed_interval"], [178, 2, 1, "", "common_lower_covers"], [178, 2, 1, "", "common_upper_covers"], [178, 2, 1, "", "congruence"], [178, 2, 1, "", "congruences_iterator"], [178, 2, 1, "", "cover_relations"], [178, 2, 1, "", "cover_relations_iterator"], [178, 2, 1, "", "covers"], [178, 2, 1, "", "coxeter_transformation"], [178, 2, 1, "", "diamonds"], [178, 2, 1, "", "dual"], [178, 2, 1, "", "find_nonsemidistributive_elements"], [178, 2, 1, "", "find_nonsemimodular_pair"], [178, 2, 1, "", "find_nontrivial_congruence"], [178, 2, 1, "", "frattini_sublattice"], [178, 2, 1, "", "greedy_linear_extensions_iterator"], [178, 2, 1, "", "has_bottom"], [178, 2, 1, "", "has_top"], [178, 2, 1, "", "interval"], [178, 2, 1, "", "interval_iterator"], [178, 2, 1, "", "is_antichain_of_poset"], [178, 2, 1, "", "is_bounded"], [178, 2, 1, "", "is_chain"], [178, 2, 1, "", "is_complemented"], [178, 2, 1, "", "is_congruence_normal"], [178, 2, 1, "", "is_convex_subset"], [178, 2, 1, "", "is_gequal"], [178, 2, 1, "", "is_greater_than"], [178, 2, 1, "", "is_join_semilattice"], [178, 2, 1, "", "is_lequal"], [178, 2, 1, "", "is_less_than"], [178, 2, 1, "", "is_linear_extension"], [178, 2, 1, "", "is_linear_interval"], [178, 2, 1, "", "is_meet_semilattice"], [178, 2, 1, "", "is_ranked"], [178, 2, 1, "", "join_matrix"], [178, 2, 1, "", "kappa"], [178, 2, 1, "", "kappa_dual"], [178, 2, 1, "", "lequal_matrix"], [178, 2, 1, "", "linear_extension"], [178, 2, 1, "", "linear_extensions"], [178, 2, 1, "", "lower_covers_iterator"], [178, 2, 1, "", "maximal_elements"], [178, 2, 1, "", "maximal_sublattices"], [178, 2, 1, "", "meet_matrix"], [178, 2, 1, "", "minimal_elements"], [178, 2, 1, "", "moebius_function"], [178, 2, 1, "", "moebius_function_matrix"], [178, 2, 1, "", "neutral_elements"], [178, 2, 1, "", "open_interval"], [178, 2, 1, "", "order_filter"], [178, 2, 1, "", "order_ideal"], [178, 2, 1, "", "order_ideal_cardinality"], [178, 2, 1, "", "orthocomplementations_iterator"], [178, 2, 1, "", "prime_elements"], [178, 2, 1, "", "principal_congruences_poset"], [178, 2, 1, "", "principal_order_filter"], [178, 2, 1, "", "principal_order_ideal"], [178, 2, 1, "", "pseudocomplement"], [178, 2, 1, "", "rank"], [178, 2, 1, "", "rank_function"], [178, 2, 1, "", "skeleton"], [178, 2, 1, "", "sublattices_iterator"], [178, 2, 1, "", "supergreedy_linear_extensions_iterator"], [178, 2, 1, "", "top"], [178, 2, 1, "", "upper_covers_iterator"], [178, 2, 1, "", "vertical_decomposition"]], "sage.combinat.posets.incidence_algebras": [[179, 1, 1, "", "IncidenceAlgebra"], [179, 1, 1, "", "ReducedIncidenceAlgebra"]], "sage.combinat.posets.incidence_algebras.IncidenceAlgebra": [[179, 1, 1, "", "Element"], [179, 2, 1, "", "delta"], [179, 2, 1, "", "moebius"], [179, 2, 1, "", "one"], [179, 2, 1, "", "poset"], [179, 2, 1, "", "product_on_basis"], [179, 2, 1, "", "reduced_subalgebra"], [179, 2, 1, "", "some_elements"], [179, 2, 1, "", "zeta"]], "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.Element": [[179, 2, 1, "", "is_unit"], [179, 2, 1, "", "to_matrix"]], "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra": [[179, 1, 1, "", "Element"], [179, 2, 1, "", "delta"], [179, 2, 1, "", "lift"], [179, 2, 1, "", "moebius"], [179, 2, 1, "", "one_basis"], [179, 2, 1, "", "poset"], [179, 2, 1, "", "some_elements"], [179, 2, 1, "", "zeta"]], "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.Element": [[179, 2, 1, "", "is_unit"], [179, 2, 1, "", "lift"], [179, 2, 1, "", "to_matrix"]], "sage.combinat.posets.lattices": [[180, 1, 1, "", "FiniteJoinSemilattice"], [180, 1, 1, "", "FiniteLatticePoset"], [180, 1, 1, "", "FiniteMeetSemilattice"], [180, 3, 1, "", "JoinSemilattice"], [180, 3, 1, "", "LatticePoset"], [180, 3, 1, "", "MeetSemilattice"]], "sage.combinat.posets.lattices.FiniteJoinSemilattice": [[180, 4, 1, "", "Element"], [180, 2, 1, "", "coatoms"], [180, 2, 1, "", "join"], [180, 2, 1, "", "join_matrix"]], "sage.combinat.posets.lattices.FiniteLatticePoset": [[180, 4, 1, "", "Element"], [180, 2, 1, "", "adjunct"], [180, 2, 1, "", "breadth"], [180, 2, 1, "", "canonical_joinands"], [180, 2, 1, "", "canonical_meetands"], [180, 2, 1, "", "center"], [180, 2, 1, "", "complements"], [180, 2, 1, "", "congruence"], [180, 2, 1, "", "congruences_lattice"], [180, 2, 1, "", "day_doubling"], [180, 2, 1, "", "double_irreducibles"], [180, 2, 1, "", "frattini_sublattice"], [180, 2, 1, "", "is_atomic"], [180, 2, 1, "", "is_coatomic"], [180, 2, 1, "", "is_complemented"], [180, 2, 1, "", "is_constructible_by_doublings"], [180, 2, 1, "", "is_cosectionally_complemented"], [180, 2, 1, "", "is_dismantlable"], [180, 2, 1, "", "is_distributive"], [180, 2, 1, "", "is_extremal"], [180, 2, 1, "", "is_geometric"], [180, 2, 1, "", "is_interval_dismantlable"], [180, 2, 1, "", "is_isoform"], [180, 2, 1, "", "is_join_distributive"], [180, 2, 1, "", "is_join_pseudocomplemented"], [180, 2, 1, "", "is_join_semidistributive"], [180, 2, 1, "", "is_left_modular_element"], [180, 2, 1, "", "is_lower_semimodular"], [180, 2, 1, "", "is_meet_distributive"], [180, 2, 1, "", "is_meet_semidistributive"], [180, 2, 1, "", "is_modular"], [180, 2, 1, "", "is_modular_element"], [180, 2, 1, "", "is_orthocomplemented"], [180, 2, 1, "", "is_planar"], [180, 2, 1, "", "is_pseudocomplemented"], [180, 2, 1, "", "is_regular"], [180, 2, 1, "", "is_relatively_complemented"], [180, 2, 1, "", "is_sectionally_complemented"], [180, 2, 1, "", "is_semidistributive"], [180, 2, 1, "", "is_simple"], [180, 2, 1, "", "is_stone"], [180, 2, 1, "", "is_subdirectly_reducible"], [180, 2, 1, "", "is_sublattice"], [180, 2, 1, "", "is_sublattice_dismantlable"], [180, 2, 1, "", "is_supersolvable"], [180, 2, 1, "", "is_trim"], [180, 2, 1, "", "is_uniform"], [180, 2, 1, "", "is_upper_semimodular"], [180, 2, 1, "", "is_vertically_decomposable"], [180, 2, 1, "", "isomorphic_sublattices_iterator"], [180, 2, 1, "", "join_primes"], [180, 2, 1, "", "maximal_sublattices"], [180, 2, 1, "", "meet_primes"], [180, 2, 1, "", "moebius_algebra"], [180, 2, 1, "", "neutral_elements"], [180, 2, 1, "", "quantum_moebius_algebra"], [180, 2, 1, "", "quotient"], [180, 2, 1, "", "skeleton"], [180, 2, 1, "", "subdirect_decomposition"], [180, 2, 1, "", "sublattice"], [180, 2, 1, "", "sublattices"], [180, 2, 1, "", "sublattices_lattice"], [180, 2, 1, "", "vertical_composition"], [180, 2, 1, "", "vertical_decomposition"]], "sage.combinat.posets.lattices.FiniteMeetSemilattice": [[180, 4, 1, "", "Element"], [180, 2, 1, "", "atoms"], [180, 2, 1, "", "meet"], [180, 2, 1, "", "meet_matrix"], [180, 2, 1, "", "pseudocomplement"], [180, 2, 1, "", "subjoinsemilattice"], [180, 2, 1, "", "submeetsemilattice"]], "sage.combinat.posets.linear_extensions": [[181, 1, 1, "", "LinearExtensionOfPoset"], [181, 1, 1, "", "LinearExtensionsOfForest"], [181, 1, 1, "", "LinearExtensionsOfMobile"], [181, 1, 1, "", "LinearExtensionsOfPoset"], [181, 1, 1, "", "LinearExtensionsOfPosetWithHooks"]], "sage.combinat.posets.linear_extensions.LinearExtensionOfPoset": [[181, 2, 1, "", "check"], [181, 2, 1, "", "evacuation"], [181, 2, 1, "", "is_greedy"], [181, 2, 1, "", "jump_count"], [181, 2, 1, "", "poset"], [181, 2, 1, "", "promotion"], [181, 2, 1, "", "tau"], [181, 2, 1, "", "to_poset"]], "sage.combinat.posets.linear_extensions.LinearExtensionsOfForest": [[181, 2, 1, "", "cardinality"]], "sage.combinat.posets.linear_extensions.LinearExtensionsOfMobile": [[181, 2, 1, "", "cardinality"]], "sage.combinat.posets.linear_extensions.LinearExtensionsOfPoset": [[181, 4, 1, "", "Element"], [181, 2, 1, "", "cardinality"], [181, 2, 1, "", "markov_chain_digraph"], [181, 2, 1, "", "markov_chain_transition_matrix"], [181, 2, 1, "", "poset"]], "sage.combinat.posets.linear_extensions.LinearExtensionsOfPosetWithHooks": [[181, 2, 1, "", "cardinality"]], "sage.combinat.posets.mobile": [[182, 1, 1, "", "MobilePoset"]], "sage.combinat.posets.mobile.MobilePoset": [[182, 2, 1, "", "anchor"], [182, 2, 1, "", "ribbon"]], "sage.combinat.posets.moebius_algebra": [[183, 1, 1, "", "BasisAbstract"], [183, 1, 1, "", "MoebiusAlgebra"], [183, 1, 1, "", "MoebiusAlgebraBases"], [183, 1, 1, "", "QuantumMoebiusAlgebra"]], "sage.combinat.posets.moebius_algebra.MoebiusAlgebra": [[183, 1, 1, "", "E"], [183, 1, 1, "", "I"], [183, 2, 1, "", "a_realization"], [183, 4, 1, "", "idempotent"], [183, 2, 1, "", "lattice"], [183, 4, 1, "", "natural"]], "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.E": [[183, 2, 1, "", "one"], [183, 2, 1, "", "product_on_basis"]], "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.I": [[183, 2, 1, "", "one"], [183, 2, 1, "", "product_on_basis"]], "sage.combinat.posets.moebius_algebra.MoebiusAlgebraBases": [[183, 1, 1, "", "ElementMethods"], [183, 1, 1, "", "ParentMethods"], [183, 2, 1, "", "super_categories"]], "sage.combinat.posets.moebius_algebra.MoebiusAlgebraBases.ParentMethods": [[183, 2, 1, "", "one"], [183, 2, 1, "", "product_on_basis"]], "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra": [[183, 1, 1, "", "C"], [183, 1, 1, "", "E"], [183, 1, 1, "", "KL"], [183, 2, 1, "", "a_realization"], [183, 4, 1, "", "characteristic_basis"], [183, 4, 1, "", "kazhdan_lusztig"], [183, 2, 1, "", "lattice"], [183, 4, 1, "", "natural"]], "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.E": [[183, 2, 1, "", "one"], [183, 2, 1, "", "product_on_basis"]], "sage.combinat.posets.poset_examples": [[184, 1, 1, "", "Posets"], [184, 4, 1, "", "posets"]], "sage.combinat.posets.poset_examples.Posets": [[184, 2, 1, "", "AntichainPoset"], [184, 2, 1, "", "BooleanLattice"], [184, 2, 1, "", "ChainPoset"], [184, 2, 1, "", "CoxeterGroupAbsoluteOrderPoset"], [184, 2, 1, "", "Crown"], [184, 2, 1, "", "DexterSemilattice"], [184, 2, 1, "", "DiamondPoset"], [184, 2, 1, "", "DivisorLattice"], [184, 2, 1, "", "DoubleTailedDiamond"], [184, 2, 1, "", "IntegerCompositions"], [184, 2, 1, "", "IntegerPartitions"], [184, 2, 1, "", "IntegerPartitionsDominanceOrder"], [184, 2, 1, "", "MobilePoset"], [184, 2, 1, "", "NoncrossingPartitions"], [184, 2, 1, "", "PentagonPoset"], [184, 2, 1, "", "PermutationPattern"], [184, 2, 1, "", "PermutationPatternInterval"], [184, 2, 1, "", "PermutationPatternOccurrenceInterval"], [184, 2, 1, "", "PowerPoset"], [184, 2, 1, "", "ProductOfChains"], [184, 2, 1, "", "RandomLattice"], [184, 2, 1, "", "RandomPoset"], [184, 2, 1, "", "RestrictedIntegerPartitions"], [184, 2, 1, "", "RibbonPoset"], [184, 2, 1, "", "SSTPoset"], [184, 2, 1, "", "SetPartitions"], [184, 2, 1, "", "ShardPoset"], [184, 2, 1, "", "StandardExample"], [184, 2, 1, "", "SymmetricGroupAbsoluteOrderPoset"], [184, 2, 1, "", "SymmetricGroupBruhatIntervalPoset"], [184, 2, 1, "", "SymmetricGroupBruhatOrderPoset"], [184, 2, 1, "", "SymmetricGroupWeakOrderPoset"], [184, 2, 1, "", "TamariLattice"], [184, 2, 1, "", "TetrahedralPoset"], [184, 2, 1, "", "UpDownPoset"], [184, 2, 1, "", "YoungDiagramPoset"], [184, 2, 1, "", "YoungFibonacci"], [184, 2, 1, "", "YoungsLattice"], [184, 2, 1, "", "YoungsLatticePrincipalOrderIdeal"], [184, 4, 1, "", "sage"]], "sage.combinat.posets.posets": [[185, 1, 1, "", "FinitePoset"], [185, 1, 1, "", "FinitePosets_n"], [185, 3, 1, "", "Poset"], [185, 3, 1, "", "is_poset"]], "sage.combinat.posets.posets.FinitePoset": [[185, 4, 1, "", "Element"], [185, 2, 1, "", "M_triangle"], [185, 2, 1, "", "antichains"], [185, 2, 1, "", "antichains_iterator"], [185, 2, 1, "", "atkinson"], [185, 2, 1, "", "bottom"], [185, 2, 1, "", "canonical_label"], [185, 2, 1, "", "cardinality"], [185, 2, 1, "", "chain_polynomial"], [185, 2, 1, "", "chain_polytope"], [185, 2, 1, "", "chains"], [185, 2, 1, "", "characteristic_polynomial"], [185, 2, 1, "", "closed_interval"], [185, 2, 1, "", "common_lower_covers"], [185, 2, 1, "", "common_upper_covers"], [185, 2, 1, "", "comparability_graph"], [185, 2, 1, "", "compare_elements"], [185, 2, 1, "", "completion_by_cuts"], [185, 2, 1, "", "connected_components"], [185, 2, 1, "", "cover_relations"], [185, 2, 1, "", "cover_relations_graph"], [185, 2, 1, "", "cover_relations_iterator"], [185, 2, 1, "", "covers"], [185, 2, 1, "", "coxeter_polynomial"], [185, 2, 1, "", "coxeter_smith_form"], [185, 2, 1, "", "coxeter_transformation"], [185, 2, 1, "", "cuts"], [185, 2, 1, "", "degree_polynomial"], [185, 2, 1, "", "diamonds"], [185, 2, 1, "", "dilworth_decomposition"], [185, 2, 1, "", "dimension"], [185, 2, 1, "", "disjoint_union"], [185, 2, 1, "", "dual"], [185, 2, 1, "", "evacuation"], [185, 2, 1, "", "f_polynomial"], [185, 2, 1, "", "factor"], [185, 2, 1, "", "flag_f_polynomial"], [185, 2, 1, "", "flag_h_polynomial"], [185, 2, 1, "", "frank_network"], [185, 2, 1, "", "ge"], [185, 2, 1, "", "graphviz_string"], [185, 2, 1, "", "greene_shape"], [185, 2, 1, "", "gt"], [185, 2, 1, "", "h_polynomial"], [185, 2, 1, "", "has_bottom"], [185, 2, 1, "", "has_isomorphic_subposet"], [185, 2, 1, "", "has_top"], [185, 2, 1, "", "hasse_diagram"], [185, 2, 1, "", "height"], [185, 2, 1, "", "incidence_algebra"], [185, 2, 1, "", "incomparability_graph"], [185, 2, 1, "", "interval"], [185, 2, 1, "", "intervals_number"], [185, 2, 1, "", "intervals_poset"], [185, 2, 1, "", "is_EL_labelling"], [185, 2, 1, "", "is_antichain_of_poset"], [185, 2, 1, "", "is_bounded"], [185, 2, 1, "", "is_chain"], [185, 2, 1, "", "is_chain_of_poset"], [185, 2, 1, "", "is_connected"], [185, 2, 1, "", "is_d_complete"], [185, 2, 1, "", "is_eulerian"], [185, 2, 1, "", "is_gequal"], [185, 2, 1, "", "is_graded"], [185, 2, 1, "", "is_greater_than"], [185, 2, 1, "", "is_greedy"], [185, 2, 1, "", "is_incomparable_chain_free"], [185, 2, 1, "", "is_induced_subposet"], [185, 2, 1, "", "is_isomorphic"], [185, 2, 1, "", "is_join_semilattice"], [185, 2, 1, "", "is_jump_critical"], [185, 2, 1, "", "is_lequal"], [185, 2, 1, "", "is_less_than"], [185, 2, 1, "", "is_linear_extension"], [185, 2, 1, "", "is_linear_interval"], [185, 2, 1, "", "is_meet_semilattice"], [185, 2, 1, "", "is_parent_of"], [185, 2, 1, "", "is_rank_symmetric"], [185, 2, 1, "", "is_ranked"], [185, 2, 1, "", "is_series_parallel"], [185, 2, 1, "", "is_slender"], [185, 2, 1, "", "is_sperner"], [185, 2, 1, "", "isomorphic_subposets"], [185, 2, 1, "", "isomorphic_subposets_iterator"], [185, 2, 1, "", "join"], [185, 2, 1, "", "jump_number"], [185, 2, 1, "", "kazhdan_lusztig_polynomial"], [185, 2, 1, "", "le"], [185, 2, 1, "", "lequal_matrix"], [185, 2, 1, "", "level_sets"], [185, 2, 1, "", "lexicographic_sum"], [185, 2, 1, "", "linear_extension"], [185, 2, 1, "", "linear_extensions"], [185, 2, 1, "", "linear_extensions_graph"], [185, 2, 1, "", "linear_intervals_count"], [185, 2, 1, "", "list"], [185, 2, 1, "", "lower_covers"], [185, 2, 1, "", "lower_covers_iterator"], [185, 2, 1, "", "lt"], [185, 2, 1, "", "magnitude"], [185, 2, 1, "", "maximal_antichains"], [185, 2, 1, "", "maximal_chain_length"], [185, 2, 1, "", "maximal_chains"], [185, 2, 1, "", "maximal_chains_iterator"], [185, 2, 1, "", "maximal_elements"], [185, 2, 1, "", "meet"], [185, 2, 1, "", "minimal_elements"], [185, 2, 1, "", "moebius_function"], [185, 2, 1, "", "moebius_function_matrix"], [185, 2, 1, "", "open_interval"], [185, 2, 1, "", "order_complex"], [185, 2, 1, "", "order_filter"], [185, 2, 1, "", "order_ideal"], [185, 2, 1, "", "order_ideal_cardinality"], [185, 2, 1, "", "order_ideal_plot"], [185, 2, 1, "", "order_polynomial"], [185, 2, 1, "", "order_polytope"], [185, 2, 1, "", "ordinal_product"], [185, 2, 1, "", "ordinal_sum"], [185, 2, 1, "", "ordinal_summands"], [185, 2, 1, "", "p_partition_enumerator"], [185, 2, 1, "", "plot"], [185, 2, 1, "", "product"], [185, 2, 1, "", "promotion"], [185, 2, 1, "", "random_linear_extension"], [185, 2, 1, "", "random_maximal_antichain"], [185, 2, 1, "", "random_maximal_chain"], [185, 2, 1, "", "random_order_ideal"], [185, 2, 1, "", "random_subposet"], [185, 2, 1, "", "rank"], [185, 2, 1, "", "rank_function"], [185, 2, 1, "", "rees_product"], [185, 2, 1, "", "relabel"], [185, 2, 1, "", "relations"], [185, 2, 1, "", "relations_iterator"], [185, 2, 1, "", "relations_number"], [185, 2, 1, "", "show"], [185, 2, 1, "", "slant_sum"], [185, 2, 1, "", "sorted"], [185, 2, 1, "", "spectrum"], [185, 2, 1, "", "star_product"], [185, 2, 1, "", "subposet"], [185, 2, 1, "", "top"], [185, 2, 1, "", "unwrap"], [185, 2, 1, "", "upper_covers"], [185, 2, 1, "", "upper_covers_iterator"], [185, 2, 1, "", "width"], [185, 2, 1, "", "with_bounds"], [185, 2, 1, "", "with_linear_extension"], [185, 2, 1, "", "without_bounds"], [185, 2, 1, "", "zeta_polynomial"]], "sage.combinat.posets.posets.FinitePosets_n": [[185, 2, 1, "", "cardinality"]], "sage.combinat.q_analogues": [[186, 3, 1, "", "gaussian_binomial"], [186, 3, 1, "", "gaussian_multinomial"], [186, 3, 1, "", "q_binomial"], [186, 3, 1, "", "q_catalan_number"], [186, 3, 1, "", "q_factorial"], [186, 3, 1, "", "q_int"], [186, 3, 1, "", "q_jordan"], [186, 3, 1, "", "q_multinomial"], [186, 3, 1, "", "q_pochhammer"], [186, 3, 1, "", "q_stirling_number1"], [186, 3, 1, "", "q_stirling_number2"], [186, 3, 1, "", "q_subgroups_of_abelian_group"], [186, 3, 1, "", "qt_catalan_number"]], "sage.combinat.q_bernoulli": [[187, 3, 1, "", "q_bernoulli"], [187, 3, 1, "", "q_bernoulli_polynomial"]], "sage.combinat.ranker": [[189, 3, 1, "", "from_list"], [189, 3, 1, "", "on_fly"], [189, 3, 1, "", "rank_from_list"], [189, 3, 1, "", "unrank"], [189, 3, 1, "", "unrank_from_list"]], "sage.combinat.recognizable_series": [[190, 1, 1, "", "PrefixClosedSet"], [190, 1, 1, "", "RecognizableSeries"], [190, 1, 1, "", "RecognizableSeriesSpace"], [190, 3, 1, "", "minimize_result"]], "sage.combinat.recognizable_series.PrefixClosedSet": [[190, 2, 1, "", "add"], [190, 2, 1, "", "create_by_alphabet"], [190, 2, 1, "", "iterate_possible_additions"], [190, 2, 1, "", "prefix_set"]], "sage.combinat.recognizable_series.RecognizableSeries": [[190, 2, 1, "", "coefficient_of_word"], [190, 2, 1, "", "dimension"], [190, 2, 1, "", "hadamard_product"], [190, 2, 1, "", "is_trivial_zero"], [190, 5, 1, "", "left"], [190, 2, 1, "", "linear_representation"], [190, 2, 1, "", "minimized"], [190, 5, 1, "", "mu"], [190, 5, 1, "", "right"], [190, 2, 1, "", "transposed"]], "sage.combinat.recognizable_series.RecognizableSeriesSpace": [[190, 4, 1, "", "Element"], [190, 2, 1, "", "alphabet"], [190, 2, 1, "", "coefficient_ring"], [190, 2, 1, "", "indices"], [190, 5, 1, "", "minimize_results"], [190, 2, 1, "", "one_hadamard"], [190, 2, 1, "", "some_elements"]], "sage.combinat.restricted_growth": [[191, 1, 1, "", "RestrictedGrowthArrays"]], "sage.combinat.restricted_growth.RestrictedGrowthArrays": [[191, 2, 1, "", "cardinality"]], "sage.combinat.ribbon_shaped_tableau": [[193, 1, 1, "", "RibbonShapedTableau"], [193, 1, 1, "", "RibbonShapedTableaux"], [193, 1, 1, "", "Ribbon_class"], [193, 1, 1, "", "StandardRibbonShapedTableaux"], [193, 1, 1, "", "StandardRibbonShapedTableaux_shape"]], "sage.combinat.ribbon_shaped_tableau.RibbonShapedTableau": [[193, 2, 1, "", "height"], [193, 2, 1, "", "spin"], [193, 2, 1, "", "width"]], "sage.combinat.ribbon_shaped_tableau.RibbonShapedTableaux": [[193, 4, 1, "", "Element"], [193, 2, 1, "", "from_shape_and_word"], [193, 4, 1, "", "options"]], "sage.combinat.ribbon_shaped_tableau.StandardRibbonShapedTableaux": [[193, 4, 1, "", "Element"], [193, 2, 1, "", "from_permutation"], [193, 2, 1, "", "from_shape_and_word"], [193, 4, 1, "", "options"]], "sage.combinat.ribbon_shaped_tableau.StandardRibbonShapedTableaux_shape": [[193, 2, 1, "", "first"], [193, 2, 1, "", "last"]], "sage.combinat.ribbon_tableau": [[194, 1, 1, "", "MultiSkewTableau"], [194, 1, 1, "", "MultiSkewTableaux"], [194, 1, 1, "", "RibbonTableau"], [194, 1, 1, "", "RibbonTableau_class"], [194, 1, 1, "", "RibbonTableaux"], [194, 1, 1, "", "RibbonTableaux_shape_weight_length"], [194, 1, 1, "", "SemistandardMultiSkewTableaux"], [194, 3, 1, "", "cospin_polynomial"], [194, 3, 1, "", "count_rec"], [194, 3, 1, "", "graph_implementation_rec"], [194, 3, 1, "", "insertion_tableau"], [194, 3, 1, "", "list_rec"], [194, 3, 1, "", "spin_polynomial"], [194, 3, 1, "", "spin_polynomial_square"], [194, 3, 1, "", "spin_rec"]], "sage.combinat.ribbon_tableau.MultiSkewTableau": [[194, 2, 1, "", "inversion_pairs"], [194, 2, 1, "", "inversions"], [194, 2, 1, "", "shape"], [194, 2, 1, "", "size"], [194, 2, 1, "", "weight"]], "sage.combinat.ribbon_tableau.MultiSkewTableaux": [[194, 4, 1, "", "Element"]], "sage.combinat.ribbon_tableau.RibbonTableau": [[194, 2, 1, "", "length"], [194, 2, 1, "", "to_word"]], "sage.combinat.ribbon_tableau.RibbonTableaux": [[194, 4, 1, "", "Element"], [194, 2, 1, "", "from_expr"], [194, 4, 1, "", "options"]], "sage.combinat.ribbon_tableau.RibbonTableaux_shape_weight_length": [[194, 2, 1, "", "cardinality"]], "sage.combinat.rigged_configurations": [[195, 0, 0, "-", "all"], [196, 0, 0, "-", "bij_abstract_class"], [197, 0, 0, "-", "bij_infinity"], [198, 0, 0, "-", "bij_type_A"], [199, 0, 0, "-", "bij_type_A2_dual"], [200, 0, 0, "-", "bij_type_A2_even"], [201, 0, 0, "-", "bij_type_A2_odd"], [202, 0, 0, "-", "bij_type_B"], [203, 0, 0, "-", "bij_type_C"], [204, 0, 0, "-", "bij_type_D"], [205, 0, 0, "-", "bij_type_D_tri"], [206, 0, 0, "-", "bij_type_D_twisted"], [207, 0, 0, "-", "bijection"], [208, 0, 0, "-", "kleber_tree"], [209, 0, 0, "-", "kr_tableaux"], [210, 0, 0, "-", "rc_crystal"], [211, 0, 0, "-", "rc_infinity"], [212, 0, 0, "-", "rigged_configuration_element"], [213, 0, 0, "-", "rigged_configurations"], [214, 0, 0, "-", "rigged_partition"], [215, 0, 0, "-", "tensor_product_kr_tableaux"], [216, 0, 0, "-", "tensor_product_kr_tableaux_element"]], "sage.combinat.rigged_configurations.bij_abstract_class": [[196, 1, 1, "", "KRTToRCBijectionAbstract"], [196, 1, 1, "", "RCToKRTBijectionAbstract"]], "sage.combinat.rigged_configurations.bij_abstract_class.KRTToRCBijectionAbstract": [[196, 2, 1, "", "next_state"], [196, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_abstract_class.RCToKRTBijectionAbstract": [[196, 2, 1, "", "next_state"], [196, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_infinity": [[197, 1, 1, "", "FromRCIsomorphism"], [197, 1, 1, "", "FromTableauIsomorphism"], [197, 1, 1, "", "MLTToRCBijectionTypeB"], [197, 1, 1, "", "MLTToRCBijectionTypeD"], [197, 1, 1, "", "RCToMLTBijectionTypeB"], [197, 1, 1, "", "RCToMLTBijectionTypeD"]], "sage.combinat.rigged_configurations.bij_infinity.MLTToRCBijectionTypeB": [[197, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_infinity.MLTToRCBijectionTypeD": [[197, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_infinity.RCToMLTBijectionTypeB": [[197, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_infinity.RCToMLTBijectionTypeD": [[197, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_type_A": [[198, 1, 1, "", "KRTToRCBijectionTypeA"], [198, 1, 1, "", "RCToKRTBijectionTypeA"]], "sage.combinat.rigged_configurations.bij_type_A.KRTToRCBijectionTypeA": [[198, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_A.RCToKRTBijectionTypeA": [[198, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_A2_dual": [[199, 1, 1, "", "KRTToRCBijectionTypeA2Dual"], [199, 1, 1, "", "RCToKRTBijectionTypeA2Dual"]], "sage.combinat.rigged_configurations.bij_type_A2_dual.KRTToRCBijectionTypeA2Dual": [[199, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_A2_dual.RCToKRTBijectionTypeA2Dual": [[199, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_A2_even": [[200, 1, 1, "", "KRTToRCBijectionTypeA2Even"], [200, 1, 1, "", "RCToKRTBijectionTypeA2Even"]], "sage.combinat.rigged_configurations.bij_type_A2_even.KRTToRCBijectionTypeA2Even": [[200, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_A2_even.RCToKRTBijectionTypeA2Even": [[200, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_A2_odd": [[201, 1, 1, "", "KRTToRCBijectionTypeA2Odd"], [201, 1, 1, "", "RCToKRTBijectionTypeA2Odd"]], "sage.combinat.rigged_configurations.bij_type_A2_odd.KRTToRCBijectionTypeA2Odd": [[201, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_A2_odd.RCToKRTBijectionTypeA2Odd": [[201, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_B": [[202, 1, 1, "", "KRTToRCBijectionTypeB"], [202, 1, 1, "", "RCToKRTBijectionTypeB"]], "sage.combinat.rigged_configurations.bij_type_B.KRTToRCBijectionTypeB": [[202, 2, 1, "", "next_state"], [202, 2, 1, "", "other_outcome"], [202, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_type_B.RCToKRTBijectionTypeB": [[202, 2, 1, "", "next_state"], [202, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_type_C": [[203, 1, 1, "", "KRTToRCBijectionTypeC"], [203, 1, 1, "", "RCToKRTBijectionTypeC"]], "sage.combinat.rigged_configurations.bij_type_C.KRTToRCBijectionTypeC": [[203, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_C.RCToKRTBijectionTypeC": [[203, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_D": [[204, 1, 1, "", "KRTToRCBijectionTypeD"], [204, 1, 1, "", "RCToKRTBijectionTypeD"]], "sage.combinat.rigged_configurations.bij_type_D.KRTToRCBijectionTypeD": [[204, 2, 1, "", "doubling_map"], [204, 2, 1, "", "halving_map"], [204, 2, 1, "", "next_state"], [204, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_type_D.RCToKRTBijectionTypeD": [[204, 2, 1, "", "doubling_map"], [204, 2, 1, "", "halving_map"], [204, 2, 1, "", "next_state"], [204, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_type_D_tri": [[205, 1, 1, "", "KRTToRCBijectionTypeDTri"], [205, 1, 1, "", "RCToKRTBijectionTypeDTri"]], "sage.combinat.rigged_configurations.bij_type_D_tri.KRTToRCBijectionTypeDTri": [[205, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_D_tri.RCToKRTBijectionTypeDTri": [[205, 2, 1, "", "next_state"]], "sage.combinat.rigged_configurations.bij_type_D_twisted": [[206, 1, 1, "", "KRTToRCBijectionTypeDTwisted"], [206, 1, 1, "", "RCToKRTBijectionTypeDTwisted"]], "sage.combinat.rigged_configurations.bij_type_D_twisted.KRTToRCBijectionTypeDTwisted": [[206, 2, 1, "", "next_state"], [206, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bij_type_D_twisted.RCToKRTBijectionTypeDTwisted": [[206, 2, 1, "", "next_state"], [206, 2, 1, "", "run"]], "sage.combinat.rigged_configurations.bijection": [[207, 3, 1, "", "KRTToRCBijection"], [207, 3, 1, "", "RCToKRTBijection"]], "sage.combinat.rigged_configurations.kleber_tree": [[208, 1, 1, "", "KleberTree"], [208, 1, 1, "", "KleberTreeNode"], [208, 1, 1, "", "KleberTreeTypeA2Even"], [208, 1, 1, "", "VirtualKleberTree"]], "sage.combinat.rigged_configurations.kleber_tree.KleberTree": [[208, 4, 1, "", "Element"], [208, 2, 1, "", "breadth_first_iter"], [208, 2, 1, "", "cartan_type"], [208, 2, 1, "", "depth_first_iter"], [208, 2, 1, "", "digraph"], [208, 2, 1, "", "latex_options"], [208, 2, 1, "", "plot"]], "sage.combinat.rigged_configurations.kleber_tree.KleberTreeNode": [[208, 2, 1, "", "depth"], [208, 2, 1, "", "multiplicity"]], "sage.combinat.rigged_configurations.kleber_tree.KleberTreeTypeA2Even": [[208, 2, 1, "", "breadth_first_iter"], [208, 2, 1, "", "depth_first_iter"]], "sage.combinat.rigged_configurations.kleber_tree.VirtualKleberTree": [[208, 2, 1, "", "base_tree"], [208, 2, 1, "", "breadth_first_iter"], [208, 2, 1, "", "depth_first_iter"]], "sage.combinat.rigged_configurations.kr_tableaux": [[209, 1, 1, "", "KRTableauxBn"], [209, 1, 1, "", "KRTableauxDTwistedSpin"], [209, 1, 1, "", "KRTableauxRectangle"], [209, 1, 1, "", "KRTableauxSpin"], [209, 1, 1, "", "KRTableauxSpinElement"], [209, 1, 1, "", "KRTableauxTypeBox"], [209, 1, 1, "", "KRTableauxTypeFromRC"], [209, 1, 1, "", "KRTableauxTypeFromRCElement"], [209, 1, 1, "", "KRTableauxTypeHorizonal"], [209, 1, 1, "", "KRTableauxTypeVertical"], [209, 1, 1, "", "KirillovReshetikhinTableaux"], [209, 1, 1, "", "KirillovReshetikhinTableauxElement"]], "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxBn": [[209, 4, 1, "", "Element"], [209, 2, 1, "", "from_kirillov_reshetikhin_crystal"]], "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxDTwistedSpin": [[209, 4, 1, "", "Element"]], "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxRectangle": [[209, 2, 1, "", "from_kirillov_reshetikhin_crystal"]], "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpin": [[209, 4, 1, "", "Element"]], "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpinElement": [[209, 2, 1, "", "classical_weight"], [209, 2, 1, "", "e"], [209, 2, 1, "", "epsilon"], [209, 2, 1, "", "f"], [209, 2, 1, "", "left_split"], [209, 2, 1, "", "phi"], [209, 2, 1, "", "to_array"]], "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeFromRC": [[209, 4, 1, "", "Element"], [209, 2, 1, "", "module_generators"]], "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeFromRCElement": [[209, 2, 1, "", "e"], [209, 2, 1, "", "epsilon"], [209, 2, 1, "", "f"], [209, 2, 1, "", "phi"]], "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeHorizonal": [[209, 2, 1, "", "from_kirillov_reshetikhin_crystal"]], "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeVertical": [[209, 2, 1, "", "from_kirillov_reshetikhin_crystal"]], "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableaux": [[209, 4, 1, "", "Element"], [209, 2, 1, "", "classical_decomposition"], [209, 2, 1, "", "from_kirillov_reshetikhin_crystal"], [209, 2, 1, "", "kirillov_reshetikhin_crystal"], [209, 2, 1, "", "module_generator"], [209, 2, 1, "", "r"], [209, 2, 1, "", "s"], [209, 2, 1, "", "tensor"]], "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement": [[209, 2, 1, "", "classical_weight"], [209, 2, 1, "", "e"], [209, 2, 1, "", "epsilon"], [209, 2, 1, "", "f"], [209, 2, 1, "", "left_split"], [209, 2, 1, "", "phi"], [209, 2, 1, "", "pp"], [209, 2, 1, "", "right_split"], [209, 2, 1, "", "to_array"], [209, 2, 1, "", "to_classical_highest_weight"], [209, 2, 1, "", "to_kirillov_reshetikhin_crystal"], [209, 2, 1, "", "to_tableau"], [209, 2, 1, "", "weight"]], "sage.combinat.rigged_configurations.rc_crystal": [[210, 1, 1, "", "CrystalOfNonSimplyLacedRC"], [210, 1, 1, "", "CrystalOfRiggedConfigurations"]], "sage.combinat.rigged_configurations.rc_crystal.CrystalOfNonSimplyLacedRC": [[210, 4, 1, "", "Element"], [210, 2, 1, "", "from_virtual"], [210, 2, 1, "", "to_virtual"], [210, 2, 1, "", "virtual"]], "sage.combinat.rigged_configurations.rc_crystal.CrystalOfRiggedConfigurations": [[210, 4, 1, "", "Element"], [210, 4, 1, "", "options"], [210, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.rigged_configurations.rc_infinity": [[211, 1, 1, "", "InfinityCrystalOfNonSimplyLacedRC"], [211, 1, 1, "", "InfinityCrystalOfRiggedConfigurations"]], "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfNonSimplyLacedRC": [[211, 1, 1, "", "Element"], [211, 2, 1, "", "from_virtual"], [211, 2, 1, "", "to_virtual"], [211, 2, 1, "", "virtual"]], "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfNonSimplyLacedRC.Element": [[211, 2, 1, "", "weight"]], "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfRiggedConfigurations": [[211, 1, 1, "", "Element"], [211, 4, 1, "", "options"], [211, 2, 1, "", "weight_lattice_realization"]], "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfRiggedConfigurations.Element": [[211, 2, 1, "", "weight"]], "sage.combinat.rigged_configurations.rigged_configuration_element": [[212, 1, 1, "", "KRRCNonSimplyLacedElement"], [212, 1, 1, "", "KRRCSimplyLacedElement"], [212, 1, 1, "", "KRRCTypeA2DualElement"], [212, 1, 1, "", "KRRiggedConfigurationElement"], [212, 1, 1, "", "RCHWNonSimplyLacedElement"], [212, 1, 1, "", "RCHighestWeightElement"], [212, 1, 1, "", "RCNonSimplyLacedElement"], [212, 1, 1, "", "RiggedConfigurationElement"]], "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCNonSimplyLacedElement": [[212, 2, 1, "", "cc"], [212, 2, 1, "", "cocharge"], [212, 2, 1, "", "e"], [212, 2, 1, "", "f"]], "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCSimplyLacedElement": [[212, 2, 1, "", "cc"], [212, 2, 1, "", "charge"], [212, 2, 1, "", "cocharge"]], "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCTypeA2DualElement": [[212, 2, 1, "", "cc"], [212, 2, 1, "", "cocharge"], [212, 2, 1, "", "epsilon"], [212, 2, 1, "", "phi"]], "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement": [[212, 2, 1, "", "check"], [212, 2, 1, "", "classical_weight"], [212, 2, 1, "", "complement_rigging"], [212, 2, 1, "", "delta"], [212, 2, 1, "", "e"], [212, 2, 1, "", "epsilon"], [212, 2, 1, "", "f"], [212, 2, 1, "", "left_box"], [212, 2, 1, "", "left_column_box"], [212, 2, 1, "", "left_split"], [212, 2, 1, "", "phi"], [212, 2, 1, "", "right_column_box"], [212, 2, 1, "", "right_split"], [212, 2, 1, "", "to_tensor_product_of_kirillov_reshetikhin_crystals"], [212, 2, 1, "", "to_tensor_product_of_kirillov_reshetikhin_tableaux"], [212, 2, 1, "", "weight"]], "sage.combinat.rigged_configurations.rigged_configuration_element.RCHWNonSimplyLacedElement": [[212, 2, 1, "", "check"], [212, 2, 1, "", "f"], [212, 2, 1, "", "weight"]], "sage.combinat.rigged_configurations.rigged_configuration_element.RCHighestWeightElement": [[212, 2, 1, "", "check"], [212, 2, 1, "", "f"], [212, 2, 1, "", "weight"]], "sage.combinat.rigged_configurations.rigged_configuration_element.RCNonSimplyLacedElement": [[212, 2, 1, "", "e"], [212, 2, 1, "", "f"], [212, 2, 1, "", "to_virtual_configuration"]], "sage.combinat.rigged_configurations.rigged_configuration_element.RiggedConfigurationElement": [[212, 2, 1, "", "check"], [212, 2, 1, "", "e"], [212, 2, 1, "", "epsilon"], [212, 2, 1, "", "f"], [212, 2, 1, "", "nu"], [212, 2, 1, "", "partition_rigging_lists"], [212, 2, 1, "", "phi"], [212, 2, 1, "", "vacancy_number"]], "sage.combinat.rigged_configurations.rigged_configurations": [[213, 3, 1, "", "KirillovReshetikhinCrystal"], [213, 1, 1, "", "RCNonSimplyLaced"], [213, 1, 1, "", "RCTypeA2Dual"], [213, 1, 1, "", "RCTypeA2Even"], [213, 1, 1, "", "RiggedConfigurations"]], "sage.combinat.rigged_configurations.rigged_configurations.RCNonSimplyLaced": [[213, 4, 1, "", "Element"], [213, 2, 1, "", "from_virtual"], [213, 2, 1, "", "kleber_tree"], [213, 2, 1, "", "module_generators"], [213, 2, 1, "", "to_virtual"], [213, 2, 1, "", "virtual"]], "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Dual": [[213, 4, 1, "", "Element"], [213, 2, 1, "", "from_virtual"], [213, 2, 1, "", "module_generators"], [213, 2, 1, "", "to_virtual"]], "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Even": [[213, 2, 1, "", "cardinality"], [213, 2, 1, "", "from_virtual"], [213, 2, 1, "", "to_virtual"], [213, 2, 1, "", "virtual"]], "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations": [[213, 4, 1, "", "Element"], [213, 2, 1, "", "classically_highest_weight_vectors"], [213, 2, 1, "", "fermionic_formula"], [213, 2, 1, "", "kleber_tree"], [213, 2, 1, "", "module_generators"], [213, 4, 1, "", "options"], [213, 2, 1, "", "tensor"], [213, 2, 1, "", "tensor_product_of_kirillov_reshetikhin_crystals"], [213, 2, 1, "", "tensor_product_of_kirillov_reshetikhin_tableaux"]], "sage.combinat.rigged_configurations.rigged_partition": [[214, 1, 1, "", "RiggedPartition"], [214, 1, 1, "", "RiggedPartitionTypeB"]], "sage.combinat.rigged_configurations.rigged_partition.RiggedPartition": [[214, 2, 1, "", "get_num_cells_to_column"], [214, 2, 1, "", "insert_cell"], [214, 2, 1, "", "remove_cell"], [214, 4, 1, "", "rigging"], [214, 4, 1, "", "vacancy_numbers"]], "sage.combinat.rigged_configurations.tensor_product_kr_tableaux": [[215, 1, 1, "", "HighestWeightTensorKRT"], [215, 1, 1, "", "TensorProductOfKirillovReshetikhinTableaux"]], "sage.combinat.rigged_configurations.tensor_product_kr_tableaux.HighestWeightTensorKRT": [[215, 2, 1, "", "cardinality"]], "sage.combinat.rigged_configurations.tensor_product_kr_tableaux.TensorProductOfKirillovReshetikhinTableaux": [[215, 4, 1, "", "Element"], [215, 2, 1, "", "rigged_configurations"], [215, 2, 1, "", "tensor"], [215, 2, 1, "", "tensor_product_of_kirillov_reshetikhin_crystals"]], "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element": [[216, 1, 1, "", "TensorProductOfKirillovReshetikhinTableauxElement"]], "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.TensorProductOfKirillovReshetikhinTableauxElement": [[216, 2, 1, "", "classical_weight"], [216, 2, 1, "", "left_split"], [216, 2, 1, "", "lusztig_involution"], [216, 2, 1, "", "pp"], [216, 2, 1, "", "right_split"], [216, 2, 1, "", "to_rigged_configuration"], [216, 2, 1, "", "to_tensor_product_of_kirillov_reshetikhin_crystals"]], "sage.combinat.root_system": [[217, 0, 0, "-", "all"], [218, 0, 0, "-", "ambient_space"], [219, 0, 0, "-", "associahedron"], [220, 0, 0, "-", "braid_move_calculator"], [221, 0, 0, "-", "braid_orbit"], [222, 0, 0, "-", "branching_rules"], [223, 0, 0, "-", "cartan_matrix"], [224, 0, 0, "-", "cartan_type"], [225, 0, 0, "-", "coxeter_group"], [226, 0, 0, "-", "coxeter_matrix"], [227, 0, 0, "-", "coxeter_type"], [228, 0, 0, "-", "dynkin_diagram"], [229, 0, 0, "-", "extended_affine_weyl_group"], [230, 0, 0, "-", "fundamental_group"], [231, 0, 0, "-", "hecke_algebra_representation"], [232, 0, 0, "-", "integrable_representations"], [233, 0, 0, "-", "non_symmetric_macdonald_polynomials"], [234, 0, 0, "-", "pieri_factors"], [235, 0, 0, "-", "plot"], [236, 0, 0, "-", "reflection_group_complex"], [237, 0, 0, "-", "reflection_group_real"], [238, 0, 0, "-", "root_lattice_realization_algebras"], [239, 0, 0, "-", "root_lattice_realizations"], [240, 0, 0, "-", "root_space"], [241, 0, 0, "-", "root_system"], [242, 0, 0, "-", "type_A"], [243, 0, 0, "-", "type_A_affine"], [244, 0, 0, "-", "type_A_infinity"], [245, 0, 0, "-", "type_B"], [246, 0, 0, "-", "type_BC_affine"], [247, 0, 0, "-", "type_B_affine"], [248, 0, 0, "-", "type_C"], [249, 0, 0, "-", "type_C_affine"], [250, 0, 0, "-", "type_D"], [251, 0, 0, "-", "type_D_affine"], [252, 0, 0, "-", "type_E"], [253, 0, 0, "-", "type_E_affine"], [254, 0, 0, "-", "type_F"], [255, 0, 0, "-", "type_F_affine"], [256, 0, 0, "-", "type_G"], [257, 0, 0, "-", "type_G_affine"], [258, 0, 0, "-", "type_H"], [259, 0, 0, "-", "type_I"], [260, 0, 0, "-", "type_Q"], [261, 0, 0, "-", "type_affine"], [262, 0, 0, "-", "type_dual"], [263, 0, 0, "-", "type_folded"], [264, 0, 0, "-", "type_marked"], [265, 0, 0, "-", "type_reducible"], [266, 0, 0, "-", "type_relabel"], [267, 0, 0, "-", "type_super_A"], [268, 0, 0, "-", "weight_lattice_realizations"], [269, 0, 0, "-", "weight_space"], [270, 0, 0, "-", "weyl_characters"], [271, 0, 0, "-", "weyl_group"]], "sage.combinat.root_system.ambient_space": [[218, 1, 1, "", "AmbientSpace"], [218, 1, 1, "", "AmbientSpaceElement"]], "sage.combinat.root_system.ambient_space.AmbientSpace": [[218, 4, 1, "", "Element"], [218, 2, 1, "", "coroot_lattice"], [218, 2, 1, "", "dimension"], [218, 2, 1, "", "from_vector_notation"], [218, 2, 1, "", "fundamental_weight"], [218, 2, 1, "", "reflection"], [218, 2, 1, "", "simple_coroot"], [218, 2, 1, "", "smallest_base_ring"], [218, 2, 1, "", "to_ambient_space_morphism"]], "sage.combinat.root_system.ambient_space.AmbientSpaceElement": [[218, 2, 1, "", "associated_coroot"], [218, 2, 1, "", "coerce_to_e6"], [218, 2, 1, "", "coerce_to_e7"], [218, 2, 1, "", "coerce_to_sl"], [218, 2, 1, "", "dot_product"], [218, 2, 1, "", "inner_product"], [218, 2, 1, "", "is_positive_root"], [218, 2, 1, "", "scalar"], [218, 2, 1, "", "to_ambient"]], "sage.combinat.root_system.associahedron": [[219, 3, 1, "", "Associahedra"], [219, 1, 1, "", "Associahedra_base"], [219, 1, 1, "", "Associahedra_cdd"], [219, 1, 1, "", "Associahedra_field"], [219, 1, 1, "", "Associahedra_normaliz"], [219, 1, 1, "", "Associahedra_polymake"], [219, 1, 1, "", "Associahedra_ppl"], [219, 3, 1, "", "Associahedron"], [219, 1, 1, "", "Associahedron_class_base"], [219, 1, 1, "", "Associahedron_class_cdd"], [219, 1, 1, "", "Associahedron_class_field"], [219, 1, 1, "", "Associahedron_class_normaliz"], [219, 1, 1, "", "Associahedron_class_polymake"], [219, 1, 1, "", "Associahedron_class_ppl"]], "sage.combinat.root_system.associahedron.Associahedra_cdd": [[219, 4, 1, "", "Element"]], "sage.combinat.root_system.associahedron.Associahedra_field": [[219, 4, 1, "", "Element"]], "sage.combinat.root_system.associahedron.Associahedra_normaliz": [[219, 4, 1, "", "Element"]], "sage.combinat.root_system.associahedron.Associahedra_polymake": [[219, 4, 1, "", "Element"]], "sage.combinat.root_system.associahedron.Associahedra_ppl": [[219, 4, 1, "", "Element"]], "sage.combinat.root_system.associahedron.Associahedron_class_base": [[219, 2, 1, "", "cartan_type"], [219, 2, 1, "", "vertices_in_root_space"]], "sage.combinat.root_system.braid_move_calculator": [[220, 1, 1, "", "BraidMoveCalculator"]], "sage.combinat.root_system.braid_move_calculator.BraidMoveCalculator": [[220, 2, 1, "", "chain_of_reduced_words"], [220, 2, 1, "", "put_in_front"]], "sage.combinat.root_system.braid_orbit": [[221, 3, 1, "", "BraidOrbit"]], "sage.combinat.root_system.branching_rules": [[222, 1, 1, "", "BranchingRule"], [222, 3, 1, "", "branch_weyl_character"], [222, 3, 1, "", "branching_rule"], [222, 3, 1, "", "branching_rule_from_plethysm"], [222, 3, 1, "", "get_branching_rule"], [222, 3, 1, "", "maximal_subgroups"]], "sage.combinat.root_system.branching_rules.BranchingRule": [[222, 2, 1, "", "Rtype"], [222, 2, 1, "", "Stype"], [222, 2, 1, "", "branch"], [222, 2, 1, "", "describe"]], "sage.combinat.root_system.cartan_matrix": [[223, 1, 1, "", "CartanMatrix"], [223, 3, 1, "", "find_cartan_type_from_matrix"], [223, 3, 1, "", "is_borcherds_cartan_matrix"], [223, 3, 1, "", "is_generalized_cartan_matrix"]], "sage.combinat.root_system.cartan_matrix.CartanMatrix": [[223, 2, 1, "", "cartan_matrix"], [223, 2, 1, "", "cartan_type"], [223, 2, 1, "", "column_with_indices"], [223, 2, 1, "", "coxeter_diagram"], [223, 2, 1, "", "coxeter_matrix"], [223, 2, 1, "", "dual"], [223, 2, 1, "", "dynkin_diagram"], [223, 2, 1, "", "indecomposable_blocks"], [223, 2, 1, "", "index_set"], [223, 2, 1, "", "is_affine"], [223, 2, 1, "", "is_crystallographic"], [223, 2, 1, "", "is_finite"], [223, 2, 1, "", "is_hyperbolic"], [223, 2, 1, "", "is_indecomposable"], [223, 2, 1, "", "is_indefinite"], [223, 2, 1, "", "is_lorentzian"], [223, 2, 1, "", "is_simply_laced"], [223, 2, 1, "", "matrix_space"], [223, 2, 1, "", "principal_submatrices"], [223, 2, 1, "", "rank"], [223, 2, 1, "", "reflection_group"], [223, 2, 1, "", "relabel"], [223, 2, 1, "", "root_space"], [223, 2, 1, "", "root_system"], [223, 2, 1, "", "row_with_indices"], [223, 2, 1, "", "subtype"], [223, 2, 1, "", "symmetrized_matrix"], [223, 2, 1, "", "symmetrizer"]], "sage.combinat.root_system.cartan_type": [[224, 3, 1, "", "CartanType"], [224, 1, 1, "", "CartanTypeFactory"], [224, 1, 1, "", "CartanType_abstract"], [224, 1, 1, "", "CartanType_affine"], [224, 1, 1, "", "CartanType_crystallographic"], [224, 1, 1, "", "CartanType_decorator"], [224, 1, 1, "", "CartanType_finite"], [224, 1, 1, "", "CartanType_simple"], [224, 1, 1, "", "CartanType_simple_finite"], [224, 1, 1, "", "CartanType_simply_laced"], [224, 1, 1, "", "CartanType_standard"], [224, 1, 1, "", "CartanType_standard_affine"], [224, 1, 1, "", "CartanType_standard_finite"], [224, 1, 1, "", "CartanType_standard_untwisted_affine"], [224, 1, 1, "", "SuperCartanType_standard"]], "sage.combinat.root_system.cartan_type.CartanTypeFactory": [[224, 2, 1, "", "color"], [224, 4, 1, "", "options"], [224, 2, 1, "", "samples"]], "sage.combinat.root_system.cartan_type.CartanType_abstract": [[224, 2, 1, "", "as_folding"], [224, 2, 1, "", "coxeter_diagram"], [224, 2, 1, "", "coxeter_matrix"], [224, 2, 1, "", "coxeter_type"], [224, 2, 1, "", "dual"], [224, 2, 1, "", "index_set"], [224, 2, 1, "", "is_affine"], [224, 2, 1, "", "is_atomic"], [224, 2, 1, "", "is_compound"], [224, 2, 1, "", "is_crystallographic"], [224, 2, 1, "", "is_finite"], [224, 2, 1, "", "is_implemented"], [224, 2, 1, "", "is_irreducible"], [224, 2, 1, "", "is_reducible"], [224, 2, 1, "", "is_simply_laced"], [224, 2, 1, "", "marked_nodes"], [224, 4, 1, "", "options"], [224, 2, 1, "", "rank"], [224, 2, 1, "", "relabel"], [224, 2, 1, "", "root_system"], [224, 2, 1, "", "subtype"], [224, 2, 1, "", "type"]], "sage.combinat.root_system.cartan_type.CartanType_affine": [[224, 4, 1, "", "AmbientSpace"], [224, 2, 1, "", "a"], [224, 2, 1, "", "acheck"], [224, 2, 1, "", "basic_untwisted"], [224, 2, 1, "", "c"], [224, 2, 1, "", "classical"], [224, 2, 1, "", "col_annihilator"], [224, 2, 1, "", "is_affine"], [224, 2, 1, "", "is_finite"], [224, 2, 1, "", "is_untwisted_affine"], [224, 2, 1, "", "other_affinization"], [224, 2, 1, "", "row_annihilator"], [224, 2, 1, "", "special_node"], [224, 2, 1, "", "special_nodes"], [224, 2, 1, "", "translation_factors"]], "sage.combinat.root_system.cartan_type.CartanType_crystallographic": [[224, 2, 1, "", "ascii_art"], [224, 2, 1, "", "cartan_matrix"], [224, 2, 1, "", "coxeter_diagram"], [224, 2, 1, "", "dynkin_diagram"], [224, 2, 1, "", "index_set_bipartition"], [224, 2, 1, "", "is_crystallographic"], [224, 2, 1, "", "symmetrizer"]], "sage.combinat.root_system.cartan_type.CartanType_decorator": [[224, 2, 1, "", "index_set"], [224, 2, 1, "", "is_affine"], [224, 2, 1, "", "is_crystallographic"], [224, 2, 1, "", "is_finite"], [224, 2, 1, "", "is_irreducible"], [224, 2, 1, "", "rank"]], "sage.combinat.root_system.cartan_type.CartanType_finite": [[224, 2, 1, "", "is_affine"], [224, 2, 1, "", "is_finite"]], "sage.combinat.root_system.cartan_type.CartanType_simple": [[224, 2, 1, "", "is_irreducible"]], "sage.combinat.root_system.cartan_type.CartanType_simply_laced": [[224, 2, 1, "", "dual"], [224, 2, 1, "", "is_simply_laced"]], "sage.combinat.root_system.cartan_type.CartanType_standard_affine": [[224, 2, 1, "", "index_set"], [224, 2, 1, "", "rank"], [224, 2, 1, "", "special_node"], [224, 2, 1, "", "type"]], "sage.combinat.root_system.cartan_type.CartanType_standard_finite": [[224, 2, 1, "", "affine"], [224, 2, 1, "", "coxeter_number"], [224, 2, 1, "", "dual_coxeter_number"], [224, 2, 1, "", "index_set"], [224, 2, 1, "", "opposition_automorphism"], [224, 2, 1, "", "rank"], [224, 2, 1, "", "type"]], "sage.combinat.root_system.cartan_type.CartanType_standard_untwisted_affine": [[224, 2, 1, "", "basic_untwisted"], [224, 2, 1, "", "classical"], [224, 2, 1, "", "is_untwisted_affine"]], "sage.combinat.root_system.cartan_type.SuperCartanType_standard": [[224, 4, 1, "", "options"]], "sage.combinat.root_system.coxeter_group": [[225, 3, 1, "", "CoxeterGroup"]], "sage.combinat.root_system.coxeter_matrix": [[226, 1, 1, "", "CoxeterMatrix"], [226, 3, 1, "", "check_coxeter_matrix"], [226, 3, 1, "", "coxeter_matrix_as_function"], [226, 3, 1, "", "recognize_coxeter_type_from_matrix"]], "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix": [[226, 2, 1, "", "bilinear_form"], [226, 2, 1, "", "coxeter_graph"], [226, 2, 1, "", "coxeter_matrix"], [226, 2, 1, "", "coxeter_type"], [226, 2, 1, "", "index_set"], [226, 2, 1, "", "is_affine"], [226, 2, 1, "", "is_crystallographic"], [226, 2, 1, "", "is_finite"], [226, 2, 1, "", "is_irreducible"], [226, 2, 1, "", "is_simply_laced"], [226, 2, 1, "", "rank"], [226, 2, 1, "", "relabel"], [226, 2, 1, "", "samples"]], "sage.combinat.root_system.coxeter_type": [[227, 1, 1, "", "CoxeterType"], [227, 1, 1, "", "CoxeterTypeFromCartanType"]], "sage.combinat.root_system.coxeter_type.CoxeterType": [[227, 2, 1, "", "bilinear_form"], [227, 2, 1, "", "coxeter_graph"], [227, 2, 1, "", "coxeter_matrix"], [227, 2, 1, "", "index_set"], [227, 2, 1, "", "is_affine"], [227, 2, 1, "", "is_crystallographic"], [227, 2, 1, "", "is_finite"], [227, 2, 1, "", "is_simply_laced"], [227, 2, 1, "", "rank"], [227, 2, 1, "", "samples"]], "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType": [[227, 2, 1, "", "cartan_type"], [227, 2, 1, "", "component_types"], [227, 2, 1, "", "coxeter_graph"], [227, 2, 1, "", "coxeter_matrix"], [227, 2, 1, "", "index_set"], [227, 2, 1, "", "is_affine"], [227, 2, 1, "", "is_crystallographic"], [227, 2, 1, "", "is_finite"], [227, 2, 1, "", "is_irreducible"], [227, 2, 1, "", "is_reducible"], [227, 2, 1, "", "is_simply_laced"], [227, 2, 1, "", "rank"], [227, 2, 1, "", "relabel"], [227, 2, 1, "", "type"]], "sage.combinat.root_system.dynkin_diagram": [[228, 3, 1, "", "DynkinDiagram"], [228, 1, 1, "", "DynkinDiagram_class"], [228, 3, 1, "", "precheck"]], "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class": [[228, 2, 1, "", "add_edge"], [228, 2, 1, "", "an_instance"], [228, 2, 1, "", "cartan_matrix"], [228, 2, 1, "", "cartan_type"], [228, 2, 1, "", "column"], [228, 2, 1, "", "coxeter_diagram"], [228, 2, 1, "", "dual"], [228, 2, 1, "", "dynkin_diagram"], [228, 2, 1, "", "index_set"], [228, 2, 1, "", "is_affine"], [228, 2, 1, "", "is_crystallographic"], [228, 2, 1, "", "is_finite"], [228, 2, 1, "", "is_irreducible"], [228, 2, 1, "", "odd_isotropic_roots"], [228, 2, 1, "", "rank"], [228, 2, 1, "", "relabel"], [228, 2, 1, "", "row"], [228, 2, 1, "", "subtype"], [228, 2, 1, "", "symmetrizer"]], "sage.combinat.root_system.extended_affine_weyl_group": [[229, 3, 1, "", "ExtendedAffineWeylGroup"], [229, 1, 1, "", "ExtendedAffineWeylGroup_Class"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class": [[229, 1, 1, "", "ExtendedAffineWeylGroupFW"], [229, 1, 1, "", "ExtendedAffineWeylGroupFWElement"], [229, 1, 1, "", "ExtendedAffineWeylGroupPW0"], [229, 1, 1, "", "ExtendedAffineWeylGroupPW0Element"], [229, 1, 1, "", "ExtendedAffineWeylGroupPvW0"], [229, 1, 1, "", "ExtendedAffineWeylGroupPvW0Element"], [229, 1, 1, "", "ExtendedAffineWeylGroupW0P"], [229, 1, 1, "", "ExtendedAffineWeylGroupW0PElement"], [229, 1, 1, "", "ExtendedAffineWeylGroupW0Pv"], [229, 1, 1, "", "ExtendedAffineWeylGroupW0PvElement"], [229, 1, 1, "", "ExtendedAffineWeylGroupWF"], [229, 1, 1, "", "ExtendedAffineWeylGroupWFElement"], [229, 2, 1, "", "FW"], [229, 2, 1, "", "PW0"], [229, 2, 1, "", "PW0_to_WF_func"], [229, 2, 1, "", "PvW0"], [229, 1, 1, "", "Realizations"], [229, 2, 1, "", "W0P"], [229, 2, 1, "", "W0Pv"], [229, 2, 1, "", "WF"], [229, 2, 1, "", "WF_to_PW0_func"], [229, 2, 1, "", "a_realization"], [229, 2, 1, "", "affine_weyl"], [229, 2, 1, "", "cartan_type"], [229, 2, 1, "", "classical_weyl"], [229, 2, 1, "", "classical_weyl_to_affine"], [229, 2, 1, "", "dual_classical_weyl"], [229, 2, 1, "", "dual_classical_weyl_to_affine"], [229, 2, 1, "", "dual_lattice"], [229, 2, 1, "", "dual_lattice_basis"], [229, 2, 1, "", "exp_dual_lattice"], [229, 2, 1, "", "exp_lattice"], [229, 2, 1, "", "fundamental_group"], [229, 2, 1, "", "group_generators"], [229, 2, 1, "", "lattice"], [229, 2, 1, "", "lattice_basis"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFW": [[229, 4, 1, "", "Element"], [229, 2, 1, "", "from_affine_weyl"], [229, 2, 1, "", "from_fundamental"], [229, 2, 1, "", "simple_reflections"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFWElement": [[229, 2, 1, "", "action_on_affine_roots"], [229, 2, 1, "", "has_descent"], [229, 2, 1, "", "to_affine_weyl_right"], [229, 2, 1, "", "to_fundamental_group"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0": [[229, 4, 1, "", "Element"], [229, 2, 1, "", "S0"], [229, 2, 1, "", "from_classical_weyl"], [229, 2, 1, "", "from_translation"], [229, 2, 1, "", "simple_reflection"], [229, 2, 1, "", "simple_reflections"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0Element": [[229, 2, 1, "", "action"], [229, 2, 1, "", "has_descent"], [229, 2, 1, "", "to_classical_weyl"], [229, 2, 1, "", "to_translation_left"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0": [[229, 4, 1, "", "Element"], [229, 2, 1, "", "from_dual_classical_weyl"], [229, 2, 1, "", "from_dual_translation"], [229, 2, 1, "", "simple_reflections"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0Element": [[229, 2, 1, "", "dual_action"], [229, 2, 1, "", "has_descent"], [229, 2, 1, "", "to_dual_classical_weyl"], [229, 2, 1, "", "to_dual_translation_left"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0P": [[229, 4, 1, "", "Element"], [229, 2, 1, "", "S0"], [229, 2, 1, "", "from_classical_weyl"], [229, 2, 1, "", "from_translation"], [229, 2, 1, "", "simple_reflection"], [229, 2, 1, "", "simple_reflections"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PElement": [[229, 2, 1, "", "has_descent"], [229, 2, 1, "", "to_classical_weyl"], [229, 2, 1, "", "to_translation_right"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0Pv": [[229, 4, 1, "", "Element"], [229, 2, 1, "", "from_dual_classical_weyl"], [229, 2, 1, "", "from_dual_translation"], [229, 2, 1, "", "simple_reflections"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PvElement": [[229, 2, 1, "", "dual_action"], [229, 2, 1, "", "has_descent"], [229, 2, 1, "", "to_dual_classical_weyl"], [229, 2, 1, "", "to_dual_translation_right"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWF": [[229, 4, 1, "", "Element"], [229, 2, 1, "", "from_affine_weyl"], [229, 2, 1, "", "from_fundamental"], [229, 2, 1, "", "simple_reflections"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWFElement": [[229, 2, 1, "", "bruhat_le"], [229, 2, 1, "", "has_descent"], [229, 2, 1, "", "to_affine_weyl_left"], [229, 2, 1, "", "to_fundamental_group"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations": [[229, 1, 1, "", "ElementMethods"], [229, 1, 1, "", "ParentMethods"], [229, 2, 1, "", "super_categories"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods": [[229, 2, 1, "", "action"], [229, 2, 1, "", "action_on_affine_roots"], [229, 2, 1, "", "alcove_walk_signs"], [229, 2, 1, "", "apply_simple_projection"], [229, 2, 1, "", "apply_simple_reflection"], [229, 2, 1, "", "bruhat_le"], [229, 2, 1, "", "coset_representative"], [229, 2, 1, "", "dual_action"], [229, 2, 1, "", "face_data"], [229, 2, 1, "", "first_descent"], [229, 2, 1, "", "has_descent"], [229, 2, 1, "", "is_affine_grassmannian"], [229, 2, 1, "", "is_grassmannian"], [229, 2, 1, "", "is_translation"], [229, 2, 1, "", "length"], [229, 2, 1, "", "to_affine_grassmannian"], [229, 2, 1, "", "to_affine_weyl_left"], [229, 2, 1, "", "to_affine_weyl_right"], [229, 2, 1, "", "to_classical_weyl"], [229, 2, 1, "", "to_dual_classical_weyl"], [229, 2, 1, "", "to_dual_translation_left"], [229, 2, 1, "", "to_dual_translation_right"], [229, 2, 1, "", "to_fundamental_group"], [229, 2, 1, "", "to_translation_left"], [229, 2, 1, "", "to_translation_right"]], "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods": [[229, 2, 1, "", "from_affine_weyl"], [229, 2, 1, "", "from_classical_weyl"], [229, 2, 1, "", "from_dual_classical_weyl"], [229, 2, 1, "", "from_dual_translation"], [229, 2, 1, "", "from_fundamental"], [229, 2, 1, "", "from_reduced_word"], [229, 2, 1, "", "from_translation"], [229, 2, 1, "", "simple_reflection"], [229, 2, 1, "", "simple_reflections"]], "sage.combinat.root_system.fundamental_group": [[230, 1, 1, "", "FundamentalGroupElement"], [230, 1, 1, "", "FundamentalGroupGL"], [230, 1, 1, "", "FundamentalGroupGLElement"], [230, 3, 1, "", "FundamentalGroupOfExtendedAffineWeylGroup"], [230, 1, 1, "", "FundamentalGroupOfExtendedAffineWeylGroup_Class"]], "sage.combinat.root_system.fundamental_group.FundamentalGroupElement": [[230, 2, 1, "", "act_on_affine_lattice"], [230, 2, 1, "", "act_on_affine_weyl"], [230, 2, 1, "", "value"]], "sage.combinat.root_system.fundamental_group.FundamentalGroupGL": [[230, 4, 1, "", "Element"], [230, 2, 1, "", "action"], [230, 2, 1, "", "an_element"], [230, 2, 1, "", "dual_node"], [230, 2, 1, "", "family"], [230, 2, 1, "", "group_generators"], [230, 2, 1, "", "one"], [230, 2, 1, "", "product"], [230, 2, 1, "", "reduced_word"], [230, 2, 1, "", "some_elements"]], "sage.combinat.root_system.fundamental_group.FundamentalGroupGLElement": [[230, 2, 1, "", "act_on_classical_ambient"]], "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class": [[230, 4, 1, "", "Element"], [230, 2, 1, "", "action"], [230, 2, 1, "", "an_element"], [230, 2, 1, "", "cartan_type"], [230, 2, 1, "", "dual_node"], [230, 2, 1, "", "group_generators"], [230, 2, 1, "", "index_set"], [230, 2, 1, "", "one"], [230, 2, 1, "", "product"], [230, 2, 1, "", "reduced_word"], [230, 2, 1, "", "special_nodes"]], "sage.combinat.root_system.hecke_algebra_representation": [[231, 1, 1, "", "CherednikOperatorsEigenvectors"], [231, 1, 1, "", "HeckeAlgebraRepresentation"]], "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors": [[231, 2, 1, "", "Y"], [231, 2, 1, "", "affine_lift"], [231, 2, 1, "", "affine_retract"], [231, 2, 1, "", "cartan_type"], [231, 2, 1, "", "domain"], [231, 2, 1, "", "eigenvalue"], [231, 2, 1, "", "eigenvalues"], [231, 2, 1, "", "hecke_parameters"], [231, 2, 1, "", "keys"], [231, 2, 1, "", "recursion"], [231, 2, 1, "", "seed"], [231, 2, 1, "", "twist"]], "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation": [[231, 2, 1, "", "Ti_inverse_on_basis"], [231, 2, 1, "", "Ti_on_basis"], [231, 2, 1, "", "Tw"], [231, 2, 1, "", "Tw_inverse"], [231, 2, 1, "", "Y"], [231, 2, 1, "", "Y_eigenvectors"], [231, 2, 1, "", "Y_lambdacheck"], [231, 2, 1, "", "cartan_type"], [231, 2, 1, "", "domain"], [231, 2, 1, "", "on_basis"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "straighten_word"]], "sage.combinat.root_system.integrable_representations": [[232, 1, 1, "", "IntegrableRepresentation"]], "sage.combinat.root_system.integrable_representations.IntegrableRepresentation": [[232, 2, 1, "", "branch"], [232, 2, 1, "", "cartan_type"], [232, 2, 1, "", "coxeter_number"], [232, 2, 1, "", "dominant_maximal_weights"], [232, 2, 1, "", "dual_coxeter_number"], [232, 2, 1, "", "from_weight"], [232, 2, 1, "", "highest_weight"], [232, 2, 1, "", "level"], [232, 2, 1, "", "m"], [232, 2, 1, "", "modular_characteristic"], [232, 2, 1, "", "mult"], [232, 2, 1, "", "print_strings"], [232, 2, 1, "", "root_lattice"], [232, 2, 1, "", "s"], [232, 2, 1, "", "string"], [232, 2, 1, "", "strings"], [232, 2, 1, "", "to_dominant"], [232, 2, 1, "", "to_weight"], [232, 2, 1, "", "weight_lattice"]], "sage.combinat.root_system.non_symmetric_macdonald_polynomials": [[233, 1, 1, "", "NonSymmetricMacdonaldPolynomials"]], "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials": [[233, 2, 1, "", "KL0"], [233, 2, 1, "", "L"], [233, 2, 1, "", "L0"], [233, 2, 1, "", "L_check"], [233, 2, 1, "", "L_prime"], [233, 2, 1, "", "Q_to_Qcheck"], [233, 2, 1, "", "Y"], [233, 2, 1, "", "affine_lift"], [233, 2, 1, "", "affine_retract"], [233, 2, 1, "", "cartan_type"], [233, 2, 1, "", "eigenvalue_experimental"], [233, 2, 1, "", "rho_prime"], [233, 2, 1, "", "seed"], [233, 2, 1, "", "symmetric_macdonald_polynomial"], [233, 2, 1, "", "twist"]], "sage.combinat.root_system.pieri_factors": [[234, 1, 1, "", "PieriFactors"], [234, 1, 1, "", "PieriFactors_affine_type"], [234, 1, 1, "", "PieriFactors_finite_type"], [234, 1, 1, "", "PieriFactors_type_A"], [234, 1, 1, "", "PieriFactors_type_A_affine"], [234, 1, 1, "", "PieriFactors_type_B"], [234, 1, 1, "", "PieriFactors_type_B_affine"], [234, 1, 1, "", "PieriFactors_type_C_affine"], [234, 1, 1, "", "PieriFactors_type_D_affine"]], "sage.combinat.root_system.pieri_factors.PieriFactors": [[234, 2, 1, "", "default_weight"], [234, 2, 1, "", "elements"], [234, 2, 1, "", "generating_series"], [234, 2, 1, "", "max_length"]], "sage.combinat.root_system.pieri_factors.PieriFactors_affine_type": [[234, 2, 1, "", "maximal_elements"]], "sage.combinat.root_system.pieri_factors.PieriFactors_finite_type": [[234, 2, 1, "", "maximal_elements"]], "sage.combinat.root_system.pieri_factors.PieriFactors_type_A": [[234, 2, 1, "", "maximal_elements_combinatorial"], [234, 2, 1, "", "stanley_symm_poly_weight"]], "sage.combinat.root_system.pieri_factors.PieriFactors_type_A_affine": [[234, 2, 1, "", "cardinality"], [234, 2, 1, "", "generating_series"], [234, 2, 1, "", "maximal_elements_combinatorial"], [234, 2, 1, "", "stanley_symm_poly_weight"], [234, 2, 1, "", "subset"]], "sage.combinat.root_system.pieri_factors.PieriFactors_type_B": [[234, 2, 1, "", "maximal_elements_combinatorial"], [234, 2, 1, "", "stanley_symm_poly_weight"]], "sage.combinat.root_system.pieri_factors.PieriFactors_type_B_affine": [[234, 2, 1, "", "maximal_elements_combinatorial"], [234, 2, 1, "", "stanley_symm_poly_weight"]], "sage.combinat.root_system.pieri_factors.PieriFactors_type_C_affine": [[234, 2, 1, "", "maximal_elements_combinatorial"], [234, 2, 1, "", "stanley_symm_poly_weight"]], "sage.combinat.root_system.pieri_factors.PieriFactors_type_D_affine": [[234, 2, 1, "", "maximal_elements_combinatorial"], [234, 2, 1, "", "stanley_symm_poly_weight"]], "sage.combinat.root_system.plot": [[235, 1, 1, "", "PlotOptions"], [235, 3, 1, "", "barycentric_projection_matrix"]], "sage.combinat.root_system.plot.PlotOptions": [[235, 2, 1, "", "color"], [235, 2, 1, "", "cone"], [235, 2, 1, "", "empty"], [235, 2, 1, "", "family_of_vectors"], [235, 2, 1, "", "finalize"], [235, 2, 1, "", "in_bounding_box"], [235, 2, 1, "", "index_of_object"], [235, 2, 1, "", "intersection_at_level_1"], [235, 2, 1, "", "projection"], [235, 2, 1, "", "reflection_hyperplane"], [235, 2, 1, "", "text"], [235, 2, 1, "", "thickness"]], "sage.combinat.root_system.reflection_group_complex": [[236, 1, 1, "", "ComplexReflectionGroup"], [236, 1, 1, "", "IrreducibleComplexReflectionGroup"], [236, 3, 1, "", "multi_partitions"], [236, 3, 1, "", "power"]], "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup": [[236, 1, 1, "", "Element"], [236, 2, 1, "", "apply_vector_field"], [236, 2, 1, "", "braid_relations"], [236, 2, 1, "", "cartan_matrix"], [236, 2, 1, "", "codegrees"], [236, 2, 1, "", "conjugacy_classes"], [236, 2, 1, "", "conjugacy_classes_representatives"], [236, 2, 1, "", "coxeter_number"], [236, 2, 1, "", "degrees"], [236, 2, 1, "", "discriminant"], [236, 2, 1, "", "discriminant_in_invariant_ring"], [236, 2, 1, "", "distinguished_reflection"], [236, 2, 1, "", "distinguished_reflections"], [236, 2, 1, "", "fake_degrees"], [236, 2, 1, "", "fundamental_invariants"], [236, 2, 1, "", "hyperplane_index_set"], [236, 2, 1, "", "independent_roots"], [236, 2, 1, "", "index_set"], [236, 2, 1, "", "invariant_form"], [236, 2, 1, "", "invariant_form_standardization"], [236, 2, 1, "", "irreducible_components"], [236, 2, 1, "", "is_crystallographic"], [236, 2, 1, "", "jacobian_of_fundamental_invariants"], [236, 2, 1, "", "number_of_irreducible_components"], [236, 2, 1, "", "primitive_vector_field"], [236, 2, 1, "", "rank"], [236, 2, 1, "", "reflection"], [236, 2, 1, "", "reflection_character"], [236, 2, 1, "", "reflection_eigenvalues"], [236, 2, 1, "", "reflection_eigenvalues_family"], [236, 2, 1, "", "reflection_hyperplane"], [236, 2, 1, "", "reflection_hyperplanes"], [236, 2, 1, "", "reflection_index_set"], [236, 2, 1, "", "reflections"], [236, 2, 1, "", "roots"], [236, 2, 1, "", "series"], [236, 2, 1, "", "set_reflection_representation"], [236, 2, 1, "", "simple_coroot"], [236, 2, 1, "", "simple_coroots"], [236, 2, 1, "", "simple_reflection"], [236, 2, 1, "", "simple_root"], [236, 2, 1, "", "simple_roots"]], "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.Element": [[236, 2, 1, "", "conjugacy_class"], [236, 2, 1, "", "conjugacy_class_representative"], [236, 2, 1, "", "reflection_length"]], "sage.combinat.root_system.reflection_group_complex.IrreducibleComplexReflectionGroup": [[236, 1, 1, "", "Element"]], "sage.combinat.root_system.reflection_group_complex.IrreducibleComplexReflectionGroup.Element": [[236, 2, 1, "", "is_coxeter_element"], [236, 2, 1, "", "is_h_regular"], [236, 2, 1, "", "is_regular"]], "sage.combinat.root_system.reflection_group_real": [[237, 1, 1, "", "IrreducibleRealReflectionGroup"], [237, 1, 1, "", "RealReflectionGroup"], [237, 3, 1, "", "ReflectionGroup"], [237, 3, 1, "", "is_chevie_available"]], "sage.combinat.root_system.reflection_group_real.IrreducibleRealReflectionGroup": [[237, 1, 1, "", "Element"]], "sage.combinat.root_system.reflection_group_real.RealReflectionGroup": [[237, 1, 1, "", "Element"], [237, 2, 1, "", "almost_positive_roots"], [237, 2, 1, "", "bipartite_index_set"], [237, 2, 1, "", "bruhat_cone"], [237, 2, 1, "", "cartan_type"], [237, 2, 1, "", "coxeter_diagram"], [237, 2, 1, "", "coxeter_matrix"], [237, 2, 1, "", "fundamental_weight"], [237, 2, 1, "", "fundamental_weights"], [237, 2, 1, "", "iteration"], [237, 2, 1, "", "positive_roots"], [237, 2, 1, "", "reflection_to_positive_root"], [237, 2, 1, "", "right_coset_representatives"], [237, 2, 1, "", "root_to_reflection"], [237, 2, 1, "", "simple_root_index"]], "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.Element": [[237, 2, 1, "", "left_coset_representatives"], [237, 2, 1, "", "right_coset_representatives"]], "sage.combinat.root_system.root_lattice_realization_algebras": [[238, 1, 1, "", "Algebras"]], "sage.combinat.root_system.root_lattice_realization_algebras.Algebras": [[238, 1, 1, "", "ElementMethods"], [238, 1, 1, "", "ParentMethods"]], "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ElementMethods": [[238, 2, 1, "", "acted_upon"], [238, 2, 1, "", "expand"]], "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods": [[238, 2, 1, "", "T0_check_on_basis"], [238, 2, 1, "", "cartan_type"], [238, 2, 1, "", "classical"], [238, 2, 1, "", "demazure_lusztig_operator_on_basis"], [238, 2, 1, "", "demazure_lusztig_operator_on_classical_on_basis"], [238, 2, 1, "", "demazure_lusztig_operators"], [238, 2, 1, "", "demazure_lusztig_operators_on_classical"], [238, 2, 1, "", "demazure_operators"], [238, 2, 1, "", "divided_difference_on_basis"], [238, 2, 1, "", "from_polynomial"], [238, 2, 1, "", "isobaric_divided_difference_on_basis"], [238, 2, 1, "", "q_project"], [238, 2, 1, "", "q_project_on_basis"], [238, 2, 1, "", "some_elements"], [238, 2, 1, "", "twisted_demazure_lusztig_operator_on_basis"], [238, 2, 1, "", "twisted_demazure_lusztig_operators"]], "sage.combinat.root_system.root_lattice_realizations": [[239, 1, 1, "", "RootLatticeRealizations"]], "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations": [[239, 4, 1, "", "Algebras"], [239, 1, 1, "", "ElementMethods"], [239, 1, 1, "", "ParentMethods"], [239, 2, 1, "", "super_categories"]], "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods": [[239, 2, 1, "", "affine_orbit"], [239, 2, 1, "", "associated_coroot"], [239, 2, 1, "", "associated_reflection"], [239, 2, 1, "", "descents"], [239, 2, 1, "", "dot_action"], [239, 2, 1, "", "dot_orbit"], [239, 2, 1, "", "extraspecial_pair"], [239, 2, 1, "", "first_descent"], [239, 2, 1, "", "greater"], [239, 2, 1, "", "has_descent"], [239, 2, 1, "", "height"], [239, 2, 1, "", "is_dominant"], [239, 2, 1, "", "is_dominant_weight"], [239, 2, 1, "", "is_imaginary_root"], [239, 2, 1, "", "is_long_root"], [239, 2, 1, "", "is_parabolic_root"], [239, 2, 1, "", "is_real_root"], [239, 2, 1, "", "is_short_root"], [239, 2, 1, "", "level"], [239, 2, 1, "", "norm_squared"], [239, 2, 1, "", "orbit"], [239, 2, 1, "", "pred"], [239, 2, 1, "", "reduced_word"], [239, 2, 1, "", "reflection"], [239, 2, 1, "", "scalar"], [239, 2, 1, "", "simple_reflection"], [239, 2, 1, "", "simple_reflections"], [239, 2, 1, "", "smaller"], [239, 2, 1, "", "succ"], [239, 2, 1, "", "symmetric_form"], [239, 2, 1, "", "to_ambient"], [239, 2, 1, "", "to_classical"], [239, 2, 1, "", "to_dominant_chamber"], [239, 2, 1, "", "to_dual_type_cospace"], [239, 2, 1, "", "to_simple_root"], [239, 2, 1, "", "translation"], [239, 2, 1, "", "weyl_action"], [239, 2, 1, "", "weyl_stabilizer"]], "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods": [[239, 2, 1, "", "a_long_simple_root"], [239, 2, 1, "", "almost_positive_roots"], [239, 2, 1, "", "almost_positive_roots_decomposition"], [239, 2, 1, "", "alpha"], [239, 2, 1, "", "alphacheck"], [239, 2, 1, "", "basic_imaginary_roots"], [239, 2, 1, "", "cartan_type"], [239, 2, 1, "", "classical"], [239, 2, 1, "", "cohighest_root"], [239, 2, 1, "", "coroot_lattice"], [239, 2, 1, "", "coroot_space"], [239, 2, 1, "", "dual_type_cospace"], [239, 2, 1, "", "dynkin_diagram"], [239, 2, 1, "", "fundamental_weights_from_simple_roots"], [239, 2, 1, "", "generalized_nonnesting_partition_lattice"], [239, 2, 1, "", "highest_root"], [239, 2, 1, "", "index_set"], [239, 2, 1, "", "long_roots"], [239, 2, 1, "", "negative_roots"], [239, 2, 1, "", "nonnesting_partition_lattice"], [239, 2, 1, "", "nonparabolic_positive_root_sum"], [239, 2, 1, "", "nonparabolic_positive_roots"], [239, 2, 1, "", "null_coroot"], [239, 2, 1, "", "null_root"], [239, 2, 1, "", "plot"], [239, 2, 1, "", "plot_alcove_walk"], [239, 2, 1, "", "plot_alcoves"], [239, 2, 1, "", "plot_bounding_box"], [239, 2, 1, "", "plot_coroots"], [239, 2, 1, "", "plot_crystal"], [239, 2, 1, "", "plot_fundamental_chamber"], [239, 2, 1, "", "plot_fundamental_weights"], [239, 2, 1, "", "plot_hedron"], [239, 2, 1, "", "plot_ls_paths"], [239, 2, 1, "", "plot_mv_polytope"], [239, 2, 1, "", "plot_parse_options"], [239, 2, 1, "", "plot_reflection_hyperplanes"], [239, 2, 1, "", "plot_roots"], [239, 2, 1, "", "positive_imaginary_roots"], [239, 2, 1, "", "positive_real_roots"], [239, 2, 1, "", "positive_roots"], [239, 2, 1, "", "positive_roots_by_height"], [239, 2, 1, "", "positive_roots_nonparabolic"], [239, 2, 1, "", "positive_roots_nonparabolic_sum"], [239, 2, 1, "", "positive_roots_parabolic"], [239, 2, 1, "", "projection"], [239, 2, 1, "", "reflection"], [239, 2, 1, "", "root_poset"], [239, 2, 1, "", "roots"], [239, 2, 1, "", "s"], [239, 2, 1, "", "short_roots"], [239, 2, 1, "", "simple_coroot"], [239, 2, 1, "", "simple_coroots"], [239, 2, 1, "", "simple_projection"], [239, 2, 1, "", "simple_projections"], [239, 2, 1, "", "simple_reflection"], [239, 2, 1, "", "simple_reflections"], [239, 2, 1, "", "simple_root"], [239, 2, 1, "", "simple_roots"], [239, 2, 1, "", "simple_roots_tilde"], [239, 2, 1, "", "some_elements"], [239, 2, 1, "", "tau_epsilon_operator_on_almost_positive_roots"], [239, 2, 1, "", "tau_plus_minus"], [239, 2, 1, "", "to_ambient_space_morphism"], [239, 2, 1, "", "weyl_group"]], "sage.combinat.root_system.root_space": [[240, 1, 1, "", "RootSpace"], [240, 1, 1, "", "RootSpaceElement"]], "sage.combinat.root_system.root_space.RootSpace": [[240, 4, 1, "", "Element"], [240, 2, 1, "", "simple_root"], [240, 2, 1, "", "to_ambient_space_morphism"], [240, 2, 1, "", "to_coroot_space_morphism"]], "sage.combinat.root_system.root_space.RootSpaceElement": [[240, 2, 1, "", "associated_coroot"], [240, 2, 1, "", "is_positive_root"], [240, 2, 1, "", "max_coroot_le"], [240, 2, 1, "", "max_quantum_element"], [240, 2, 1, "", "quantum_root"], [240, 2, 1, "", "scalar"], [240, 2, 1, "", "to_ambient"]], "sage.combinat.root_system.root_system": [[241, 1, 1, "", "RootSystem"], [241, 3, 1, "", "WeylDim"]], "sage.combinat.root_system.root_system.RootSystem": [[241, 2, 1, "", "ambient_lattice"], [241, 2, 1, "", "ambient_space"], [241, 2, 1, "", "cartan_matrix"], [241, 2, 1, "", "cartan_type"], [241, 2, 1, "", "coambient_space"], [241, 2, 1, "", "coroot_lattice"], [241, 2, 1, "", "coroot_space"], [241, 2, 1, "", "coweight_lattice"], [241, 2, 1, "", "coweight_space"], [241, 2, 1, "", "dynkin_diagram"], [241, 2, 1, "", "index_set"], [241, 2, 1, "", "is_finite"], [241, 2, 1, "", "is_irreducible"], [241, 2, 1, "", "root_lattice"], [241, 2, 1, "", "root_poset"], [241, 2, 1, "", "root_space"], [241, 2, 1, "", "weight_lattice"], [241, 2, 1, "", "weight_space"]], "sage.combinat.root_system.type_A": [[242, 1, 1, "", "AmbientSpace"], [242, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_A.AmbientSpace": [[242, 2, 1, "", "det"], [242, 2, 1, "", "dimension"], [242, 2, 1, "", "fundamental_weight"], [242, 2, 1, "", "highest_root"], [242, 2, 1, "", "negative_roots"], [242, 2, 1, "", "positive_roots"], [242, 2, 1, "", "root"], [242, 2, 1, "", "simple_root"], [242, 2, 1, "", "smallest_base_ring"]], "sage.combinat.root_system.type_A.CartanType": [[242, 4, 1, "", "AmbientSpace"], [242, 4, 1, "", "PieriFactors"], [242, 2, 1, "", "ascii_art"], [242, 2, 1, "", "coxeter_number"], [242, 2, 1, "", "dual_coxeter_number"], [242, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_A_affine": [[243, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_A_affine.CartanType": [[243, 4, 1, "", "PieriFactors"], [243, 2, 1, "", "ascii_art"], [243, 2, 1, "", "dual"], [243, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_A_infinity": [[244, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_A_infinity.CartanType": [[244, 2, 1, "", "ascii_art"], [244, 2, 1, "", "dual"], [244, 2, 1, "", "index_set"], [244, 2, 1, "", "is_affine"], [244, 2, 1, "", "is_crystallographic"], [244, 2, 1, "", "is_finite"], [244, 2, 1, "", "is_simply_laced"], [244, 2, 1, "", "is_untwisted_affine"], [244, 2, 1, "", "rank"], [244, 2, 1, "", "type"]], "sage.combinat.root_system.type_B": [[245, 1, 1, "", "AmbientSpace"], [245, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_B.AmbientSpace": [[245, 2, 1, "", "dimension"], [245, 2, 1, "", "fundamental_weight"], [245, 2, 1, "", "negative_roots"], [245, 2, 1, "", "positive_roots"], [245, 2, 1, "", "root"], [245, 2, 1, "", "simple_root"]], "sage.combinat.root_system.type_B.CartanType": [[245, 4, 1, "", "AmbientSpace"], [245, 4, 1, "", "PieriFactors"], [245, 2, 1, "", "ascii_art"], [245, 2, 1, "", "coxeter_number"], [245, 2, 1, "", "dual"], [245, 2, 1, "", "dual_coxeter_number"], [245, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_BC_affine": [[246, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_BC_affine.CartanType": [[246, 2, 1, "", "ascii_art"], [246, 2, 1, "", "basic_untwisted"], [246, 2, 1, "", "classical"], [246, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_B_affine": [[247, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_B_affine.CartanType": [[247, 4, 1, "", "PieriFactors"], [247, 2, 1, "", "ascii_art"], [247, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_C": [[248, 1, 1, "", "AmbientSpace"], [248, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_C.AmbientSpace": [[248, 2, 1, "", "dimension"], [248, 2, 1, "", "fundamental_weight"], [248, 2, 1, "", "negative_roots"], [248, 2, 1, "", "positive_roots"], [248, 2, 1, "", "root"], [248, 2, 1, "", "simple_root"]], "sage.combinat.root_system.type_C.CartanType": [[248, 4, 1, "", "AmbientSpace"], [248, 2, 1, "", "ascii_art"], [248, 2, 1, "", "coxeter_number"], [248, 2, 1, "", "dual"], [248, 2, 1, "", "dual_coxeter_number"], [248, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_C_affine": [[249, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_C_affine.CartanType": [[249, 4, 1, "", "PieriFactors"], [249, 2, 1, "", "ascii_art"], [249, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_D": [[250, 1, 1, "", "AmbientSpace"], [250, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_D.AmbientSpace": [[250, 2, 1, "", "dimension"], [250, 2, 1, "", "fundamental_weight"], [250, 2, 1, "", "negative_roots"], [250, 2, 1, "", "positive_roots"], [250, 2, 1, "", "root"], [250, 2, 1, "", "simple_root"]], "sage.combinat.root_system.type_D.CartanType": [[250, 4, 1, "", "AmbientSpace"], [250, 2, 1, "", "ascii_art"], [250, 2, 1, "", "coxeter_number"], [250, 2, 1, "", "dual_coxeter_number"], [250, 2, 1, "", "dynkin_diagram"], [250, 2, 1, "", "is_atomic"]], "sage.combinat.root_system.type_D_affine": [[251, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_D_affine.CartanType": [[251, 4, 1, "", "PieriFactors"], [251, 2, 1, "", "ascii_art"], [251, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_E": [[252, 1, 1, "", "AmbientSpace"], [252, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_E.AmbientSpace": [[252, 2, 1, "", "dimension"], [252, 2, 1, "", "fundamental_weights"], [252, 2, 1, "", "negative_roots"], [252, 2, 1, "", "positive_roots"], [252, 2, 1, "", "root"], [252, 2, 1, "", "simple_root"]], "sage.combinat.root_system.type_E.CartanType": [[252, 4, 1, "", "AmbientSpace"], [252, 2, 1, "", "ascii_art"], [252, 2, 1, "", "coxeter_number"], [252, 2, 1, "", "dual_coxeter_number"], [252, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_E_affine": [[253, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_E_affine.CartanType": [[253, 2, 1, "", "ascii_art"], [253, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_F": [[254, 1, 1, "", "AmbientSpace"], [254, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_F.AmbientSpace": [[254, 2, 1, "", "dimension"], [254, 2, 1, "", "fundamental_weights"], [254, 2, 1, "", "negative_roots"], [254, 2, 1, "", "positive_roots"], [254, 2, 1, "", "root"], [254, 2, 1, "", "simple_root"]], "sage.combinat.root_system.type_F.CartanType": [[254, 4, 1, "", "AmbientSpace"], [254, 2, 1, "", "ascii_art"], [254, 2, 1, "", "coxeter_number"], [254, 2, 1, "", "dual"], [254, 2, 1, "", "dual_coxeter_number"], [254, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_F_affine": [[255, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_F_affine.CartanType": [[255, 2, 1, "", "ascii_art"], [255, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_G": [[256, 1, 1, "", "AmbientSpace"], [256, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_G.AmbientSpace": [[256, 2, 1, "", "dimension"], [256, 2, 1, "", "fundamental_weights"], [256, 2, 1, "", "negative_roots"], [256, 2, 1, "", "positive_roots"], [256, 2, 1, "", "simple_root"]], "sage.combinat.root_system.type_G.CartanType": [[256, 4, 1, "", "AmbientSpace"], [256, 2, 1, "", "ascii_art"], [256, 2, 1, "", "coxeter_number"], [256, 2, 1, "", "dual"], [256, 2, 1, "", "dual_coxeter_number"], [256, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_G_affine": [[257, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_G_affine.CartanType": [[257, 2, 1, "", "ascii_art"], [257, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_H": [[258, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_H.CartanType": [[258, 2, 1, "", "coxeter_diagram"], [258, 2, 1, "", "coxeter_number"]], "sage.combinat.root_system.type_I": [[259, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_I.CartanType": [[259, 2, 1, "", "coxeter_diagram"], [259, 2, 1, "", "coxeter_number"], [259, 2, 1, "", "index_set"], [259, 2, 1, "", "rank"]], "sage.combinat.root_system.type_Q": [[260, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_Q.CartanType": [[260, 2, 1, "", "dual"], [260, 2, 1, "", "index_set"], [260, 2, 1, "", "is_irreducible"], [260, 2, 1, "", "is_simply_laced"], [260, 2, 1, "", "root_system"]], "sage.combinat.root_system.type_affine": [[261, 1, 1, "", "AmbientSpace"]], "sage.combinat.root_system.type_affine.AmbientSpace": [[261, 1, 1, "", "Element"], [261, 2, 1, "", "coroot_lattice"], [261, 2, 1, "", "fundamental_weight"], [261, 2, 1, "", "is_extended"], [261, 2, 1, "", "simple_coroot"], [261, 2, 1, "", "simple_root"], [261, 2, 1, "", "smallest_base_ring"]], "sage.combinat.root_system.type_affine.AmbientSpace.Element": [[261, 2, 1, "", "associated_coroot"], [261, 2, 1, "", "inner_product"], [261, 2, 1, "", "scalar"]], "sage.combinat.root_system.type_dual": [[262, 1, 1, "", "AmbientSpace"], [262, 1, 1, "", "CartanType"], [262, 1, 1, "", "CartanType_affine"], [262, 1, 1, "", "CartanType_finite"]], "sage.combinat.root_system.type_dual.AmbientSpace": [[262, 2, 1, "", "dimension"], [262, 2, 1, "", "fundamental_weights"], [262, 2, 1, "", "simple_root"]], "sage.combinat.root_system.type_dual.CartanType": [[262, 2, 1, "", "ascii_art"], [262, 2, 1, "", "dual"], [262, 2, 1, "", "dynkin_diagram"]], "sage.combinat.root_system.type_dual.CartanType_affine": [[262, 2, 1, "", "basic_untwisted"], [262, 2, 1, "", "classical"], [262, 2, 1, "", "special_node"]], "sage.combinat.root_system.type_dual.CartanType_finite": [[262, 4, 1, "", "AmbientSpace"]], "sage.combinat.root_system.type_folded": [[263, 1, 1, "", "CartanTypeFolded"]], "sage.combinat.root_system.type_folded.CartanTypeFolded": [[263, 2, 1, "", "cartan_type"], [263, 2, 1, "", "folding_of"], [263, 2, 1, "", "folding_orbit"], [263, 2, 1, "", "scaling_factors"]], "sage.combinat.root_system.type_marked": [[264, 1, 1, "", "AmbientSpace"], [264, 1, 1, "", "CartanType"], [264, 1, 1, "", "CartanType_affine"], [264, 1, 1, "", "CartanType_finite"]], "sage.combinat.root_system.type_marked.AmbientSpace": [[264, 2, 1, "", "dimension"], [264, 2, 1, "", "fundamental_weight"], [264, 2, 1, "", "simple_root"]], "sage.combinat.root_system.type_marked.CartanType": [[264, 2, 1, "", "ascii_art"], [264, 2, 1, "", "dual"], [264, 2, 1, "", "dynkin_diagram"], [264, 2, 1, "", "marked_nodes"], [264, 2, 1, "", "relabel"], [264, 2, 1, "", "type"]], "sage.combinat.root_system.type_marked.CartanType_affine": [[264, 2, 1, "", "basic_untwisted"], [264, 2, 1, "", "classical"], [264, 2, 1, "", "is_untwisted_affine"], [264, 2, 1, "", "special_node"]], "sage.combinat.root_system.type_marked.CartanType_finite": [[264, 4, 1, "", "AmbientSpace"], [264, 2, 1, "", "affine"]], "sage.combinat.root_system.type_reducible": [[265, 1, 1, "", "AmbientSpace"], [265, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_reducible.AmbientSpace": [[265, 2, 1, "", "ambient_spaces"], [265, 2, 1, "", "cartan_type"], [265, 2, 1, "", "component_types"], [265, 2, 1, "", "dimension"], [265, 2, 1, "", "fundamental_weights"], [265, 2, 1, "", "inject_weights"], [265, 2, 1, "", "negative_roots"], [265, 2, 1, "", "positive_roots"], [265, 2, 1, "", "simple_coroot"], [265, 2, 1, "", "simple_root"]], "sage.combinat.root_system.type_reducible.CartanType": [[265, 4, 1, "", "AmbientSpace"], [265, 2, 1, "", "ascii_art"], [265, 2, 1, "", "cartan_matrix"], [265, 2, 1, "", "component_types"], [265, 2, 1, "", "coxeter_diagram"], [265, 2, 1, "", "dual"], [265, 2, 1, "", "dynkin_diagram"], [265, 2, 1, "", "index_set"], [265, 2, 1, "", "is_affine"], [265, 2, 1, "", "is_finite"], [265, 2, 1, "", "is_irreducible"], [265, 2, 1, "", "rank"], [265, 2, 1, "", "type"]], "sage.combinat.root_system.type_relabel": [[266, 1, 1, "", "AmbientSpace"], [266, 1, 1, "", "CartanType"], [266, 1, 1, "", "CartanType_affine"], [266, 1, 1, "", "CartanType_finite"]], "sage.combinat.root_system.type_relabel.AmbientSpace": [[266, 2, 1, "", "dimension"], [266, 2, 1, "", "fundamental_weight"], [266, 2, 1, "", "simple_root"]], "sage.combinat.root_system.type_relabel.CartanType": [[266, 2, 1, "", "ascii_art"], [266, 2, 1, "", "coxeter_diagram"], [266, 2, 1, "", "dual"], [266, 2, 1, "", "dynkin_diagram"], [266, 2, 1, "", "index_set"], [266, 2, 1, "", "type"]], "sage.combinat.root_system.type_relabel.CartanType_affine": [[266, 2, 1, "", "basic_untwisted"], [266, 2, 1, "", "classical"], [266, 2, 1, "", "is_untwisted_affine"], [266, 2, 1, "", "special_node"]], "sage.combinat.root_system.type_relabel.CartanType_finite": [[266, 4, 1, "", "AmbientSpace"], [266, 2, 1, "", "affine"]], "sage.combinat.root_system.type_super_A": [[267, 1, 1, "", "AmbientSpace"], [267, 1, 1, "", "CartanType"]], "sage.combinat.root_system.type_super_A.AmbientSpace": [[267, 1, 1, "", "Element"], [267, 2, 1, "", "dimension"], [267, 2, 1, "", "fundamental_weight"], [267, 2, 1, "", "highest_root"], [267, 2, 1, "", "negative_even_roots"], [267, 2, 1, "", "negative_odd_roots"], [267, 2, 1, "", "negative_roots"], [267, 2, 1, "", "positive_even_roots"], [267, 2, 1, "", "positive_odd_roots"], [267, 2, 1, "", "positive_roots"], [267, 2, 1, "", "simple_coroot"], [267, 2, 1, "", "simple_root"], [267, 2, 1, "", "smallest_base_ring"]], "sage.combinat.root_system.type_super_A.AmbientSpace.Element": [[267, 2, 1, "", "associated_coroot"], [267, 2, 1, "", "dot_product"], [267, 2, 1, "", "has_descent"], [267, 2, 1, "", "inner_product"], [267, 2, 1, "", "is_dominant_weight"], [267, 2, 1, "", "scalar"]], "sage.combinat.root_system.type_super_A.CartanType": [[267, 4, 1, "", "AmbientSpace"], [267, 2, 1, "", "ascii_art"], [267, 2, 1, "", "cartan_matrix"], [267, 2, 1, "", "dual"], [267, 2, 1, "", "dynkin_diagram"], [267, 2, 1, "", "index_set"], [267, 2, 1, "", "is_affine"], [267, 2, 1, "", "is_finite"], [267, 2, 1, "", "is_irreducible"], [267, 2, 1, "", "relabel"], [267, 2, 1, "", "root_system"], [267, 2, 1, "", "symmetrizer"], [267, 2, 1, "", "type"]], "sage.combinat.root_system.weight_lattice_realizations": [[268, 1, 1, "", "WeightLatticeRealizations"]], "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations": [[268, 1, 1, "", "ElementMethods"], [268, 1, 1, "", "ParentMethods"], [268, 2, 1, "", "super_categories"]], "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ElementMethods": [[268, 2, 1, "", "symmetric_form"], [268, 2, 1, "", "to_weight_space"]], "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods": [[268, 2, 1, "", "dynkin_diagram_automorphism_of_alcove_morphism"], [268, 2, 1, "", "embed_at_level"], [268, 2, 1, "", "fundamental_weight"], [268, 2, 1, "", "fundamental_weights"], [268, 2, 1, "", "is_extended"], [268, 2, 1, "", "reduced_word_of_alcove_morphism"], [268, 2, 1, "", "reduced_word_of_translation"], [268, 2, 1, "", "rho"], [268, 2, 1, "", "rho_classical"], [268, 2, 1, "", "signs_of_alcovewalk"], [268, 2, 1, "", "simple_root"], [268, 2, 1, "", "weyl_dimension"]], "sage.combinat.root_system.weight_space": [[269, 1, 1, "", "WeightSpace"], [269, 1, 1, "", "WeightSpaceElement"]], "sage.combinat.root_system.weight_space.WeightSpace": [[269, 4, 1, "", "Element"], [269, 2, 1, "", "basis_extension"], [269, 2, 1, "", "fundamental_weight"], [269, 2, 1, "", "is_extended"], [269, 2, 1, "", "simple_root"], [269, 2, 1, "", "to_ambient_space_morphism"]], "sage.combinat.root_system.weight_space.WeightSpaceElement": [[269, 2, 1, "", "is_dominant"], [269, 2, 1, "", "scalar"], [269, 2, 1, "", "to_ambient"], [269, 2, 1, "", "to_weight_space"]], "sage.combinat.root_system.weyl_characters": [[270, 1, 1, "", "WeightRing"], [270, 1, 1, "", "WeylCharacterRing"], [270, 3, 1, "", "irreducible_character_freudenthal"]], "sage.combinat.root_system.weyl_characters.WeightRing": [[270, 1, 1, "", "Element"], [270, 2, 1, "", "cartan_type"], [270, 2, 1, "", "fundamental_weights"], [270, 2, 1, "", "one_basis"], [270, 2, 1, "", "parent"], [270, 2, 1, "", "positive_roots"], [270, 2, 1, "", "product_on_basis"], [270, 2, 1, "", "simple_roots"], [270, 2, 1, "", "some_elements"], [270, 2, 1, "", "space"], [270, 2, 1, "", "weyl_character_ring"], [270, 2, 1, "", "wt_repr"]], "sage.combinat.root_system.weyl_characters.WeightRing.Element": [[270, 2, 1, "", "cartan_type"], [270, 2, 1, "", "character"], [270, 2, 1, "", "demazure"], [270, 2, 1, "", "demazure_lusztig"], [270, 2, 1, "", "scale"], [270, 2, 1, "", "shift"], [270, 2, 1, "", "weyl_group_action"]], "sage.combinat.root_system.weyl_characters.WeylCharacterRing": [[270, 1, 1, "", "Element"], [270, 2, 1, "", "adjoint_representation"], [270, 2, 1, "", "affine_reflect"], [270, 2, 1, "", "ambient"], [270, 2, 1, "", "base_ring"], [270, 2, 1, "", "cartan_type"], [270, 2, 1, "", "char_from_weights"], [270, 2, 1, "", "demazure_character"], [270, 2, 1, "", "dot_reduce"], [270, 2, 1, "", "dynkin_diagram"], [270, 2, 1, "", "extended_dynkin_diagram"], [270, 2, 1, "", "fundamental_weights"], [270, 2, 1, "", "highest_root"], [270, 2, 1, "", "irr_repr"], [270, 2, 1, "", "level"], [270, 2, 1, "", "lift"], [270, 2, 1, "", "lift_on_basis"], [270, 2, 1, "", "maximal_subgroup"], [270, 2, 1, "", "maximal_subgroups"], [270, 2, 1, "", "one_basis"], [270, 2, 1, "", "positive_roots"], [270, 2, 1, "", "product_on_basis"], [270, 2, 1, "", "rank"], [270, 2, 1, "", "retract"], [270, 2, 1, "", "simple_coroots"], [270, 2, 1, "", "simple_roots"], [270, 2, 1, "", "some_elements"], [270, 2, 1, "", "space"]], "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element": [[270, 2, 1, "", "adams_operation"], [270, 2, 1, "", "branch"], [270, 2, 1, "", "cartan_type"], [270, 2, 1, "", "degree"], [270, 2, 1, "", "dual"], [270, 2, 1, "", "exterior_power"], [270, 2, 1, "", "exterior_square"], [270, 2, 1, "", "frobenius_schur_indicator"], [270, 2, 1, "", "highest_weight"], [270, 2, 1, "", "inner_product"], [270, 2, 1, "", "invariant_degree"], [270, 2, 1, "", "is_irreducible"], [270, 2, 1, "", "multiplicity"], [270, 2, 1, "", "symmetric_power"], [270, 2, 1, "", "symmetric_square"], [270, 2, 1, "", "weight_multiplicities"]], "sage.combinat.root_system.weyl_group": [[271, 1, 1, "", "ClassicalWeylSubgroup"], [271, 3, 1, "", "WeylGroup"], [271, 1, 1, "", "WeylGroupElement"], [271, 1, 1, "", "WeylGroup_gens"], [271, 1, 1, "", "WeylGroup_permutation"]], "sage.combinat.root_system.weyl_group.ClassicalWeylSubgroup": [[271, 2, 1, "", "cartan_type"], [271, 2, 1, "", "simple_reflections"], [271, 2, 1, "", "weyl_group"]], "sage.combinat.root_system.weyl_group.WeylGroupElement": [[271, 2, 1, "", "action"], [271, 2, 1, "", "apply_simple_reflection"], [271, 2, 1, "", "domain"], [271, 2, 1, "", "has_descent"], [271, 2, 1, "", "has_left_descent"], [271, 2, 1, "", "has_right_descent"], [271, 2, 1, "", "to_matrix"], [271, 2, 1, "", "to_permutation"], [271, 2, 1, "", "to_permutation_string"]], "sage.combinat.root_system.weyl_group.WeylGroup_gens": [[271, 4, 1, "", "Element"], [271, 2, 1, "", "cartan_type"], [271, 2, 1, "", "character_table"], [271, 2, 1, "", "classical"], [271, 2, 1, "", "domain"], [271, 2, 1, "", "from_morphism"], [271, 2, 1, "", "index_set"], [271, 2, 1, "", "long_element_hardcoded"], [271, 2, 1, "", "morphism_matrix"], [271, 2, 1, "", "one"], [271, 2, 1, "", "reflections"], [271, 2, 1, "", "simple_reflection"], [271, 2, 1, "", "simple_reflections"], [271, 2, 1, "", "unit"]], "sage.combinat.root_system.weyl_group.WeylGroup_permutation": [[271, 1, 1, "", "Element"], [271, 2, 1, "", "cartan_type"], [271, 2, 1, "", "distinguished_reflections"], [271, 2, 1, "", "independent_roots"], [271, 2, 1, "", "index_set"], [271, 2, 1, "", "iteration"], [271, 2, 1, "", "number_of_reflections"], [271, 2, 1, "", "positive_roots"], [271, 2, 1, "", "rank"], [271, 2, 1, "", "reflection_index_set"], [271, 2, 1, "", "reflections"], [271, 2, 1, "", "roots"], [271, 2, 1, "", "simple_reflection"], [271, 2, 1, "", "simple_root_index"], [271, 2, 1, "", "simple_roots"]], "sage.combinat.rooted_tree": [[272, 1, 1, "", "LabelledRootedTree"], [272, 1, 1, "", "LabelledRootedTrees"], [272, 1, 1, "", "LabelledRootedTrees_all"], [272, 1, 1, "", "RootedTree"], [272, 1, 1, "", "RootedTrees"], [272, 1, 1, "", "RootedTrees_all"], [272, 1, 1, "", "RootedTrees_size"], [272, 3, 1, "", "number_of_rooted_trees"]], "sage.combinat.rooted_tree.LabelledRootedTree": [[272, 2, 1, "", "sort_key"]], "sage.combinat.rooted_tree.LabelledRootedTrees_all": [[272, 4, 1, "", "Element"], [272, 2, 1, "", "labelled_trees"], [272, 2, 1, "", "unlabelled_trees"]], "sage.combinat.rooted_tree.RootedTree": [[272, 2, 1, "", "graft_list"], [272, 2, 1, "", "graft_on_root"], [272, 2, 1, "", "is_empty"], [272, 2, 1, "", "normalize"], [272, 2, 1, "", "single_graft"], [272, 2, 1, "", "sort_key"]], "sage.combinat.rooted_tree.RootedTrees_all": [[272, 4, 1, "", "Element"], [272, 2, 1, "", "labelled_trees"], [272, 2, 1, "", "leaf"], [272, 2, 1, "", "unlabelled_trees"]], "sage.combinat.rooted_tree.RootedTrees_size": [[272, 2, 1, "", "cardinality"], [272, 2, 1, "", "check_element"], [272, 2, 1, "", "element_class"]], "sage.combinat.rsk": [[273, 1, 1, "", "InsertionRules"], [273, 3, 1, "", "RSK"], [273, 3, 1, "", "RSK_inverse"], [273, 1, 1, "", "Rule"], [273, 1, 1, "", "RuleCoRSK"], [273, 1, 1, "", "RuleDualRSK"], [273, 1, 1, "", "RuleEG"], [273, 1, 1, "", "RuleHecke"], [273, 1, 1, "", "RuleRSK"], [273, 1, 1, "", "RuleStar"], [273, 1, 1, "", "RuleSuperRSK"], [273, 3, 1, "", "robinson_schensted_knuth"], [273, 3, 1, "", "robinson_schensted_knuth_inverse"], [273, 3, 1, "", "to_matrix"]], "sage.combinat.rsk.InsertionRules": [[273, 4, 1, "", "EG"], [273, 4, 1, "", "Hecke"], [273, 4, 1, "", "RSK"], [273, 4, 1, "", "Star"], [273, 4, 1, "", "coRSK"], [273, 4, 1, "", "dualRSK"], [273, 4, 1, "", "superRSK"]], "sage.combinat.rsk.Rule": [[273, 2, 1, "", "backward_rule"], [273, 2, 1, "", "forward_rule"], [273, 2, 1, "", "to_pairs"]], "sage.combinat.rsk.RuleCoRSK": [[273, 2, 1, "", "backward_rule"], [273, 2, 1, "", "to_pairs"]], "sage.combinat.rsk.RuleDualRSK": [[273, 2, 1, "", "insertion"], [273, 2, 1, "", "reverse_insertion"], [273, 2, 1, "", "to_pairs"]], "sage.combinat.rsk.RuleEG": [[273, 2, 1, "", "insertion"], [273, 2, 1, "", "reverse_insertion"]], "sage.combinat.rsk.RuleHecke": [[273, 2, 1, "", "backward_rule"], [273, 2, 1, "", "forward_rule"], [273, 2, 1, "", "insertion"], [273, 2, 1, "", "reverse_insertion"]], "sage.combinat.rsk.RuleRSK": [[273, 2, 1, "", "insertion"], [273, 2, 1, "", "reverse_insertion"]], "sage.combinat.rsk.RuleStar": [[273, 2, 1, "", "backward_rule"], [273, 2, 1, "", "forward_rule"], [273, 2, 1, "", "insertion"], [273, 2, 1, "", "reverse_insertion"]], "sage.combinat.rsk.RuleSuperRSK": [[273, 2, 1, "", "backward_rule"], [273, 2, 1, "", "forward_rule"], [273, 2, 1, "", "insertion"], [273, 2, 1, "", "reverse_insertion"], [273, 2, 1, "", "to_pairs"]], "sage.combinat.schubert_polynomial": [[274, 3, 1, "", "SchubertPolynomialRing"], [274, 1, 1, "", "SchubertPolynomialRing_xbasis"], [274, 1, 1, "", "SchubertPolynomial_class"]], "sage.combinat.schubert_polynomial.SchubertPolynomialRing_xbasis": [[274, 4, 1, "", "Element"], [274, 2, 1, "", "one_basis"], [274, 2, 1, "", "product_on_basis"], [274, 2, 1, "", "some_elements"]], "sage.combinat.schubert_polynomial.SchubertPolynomial_class": [[274, 2, 1, "", "divided_difference"], [274, 2, 1, "", "expand"], [274, 2, 1, "", "multiply_variable"], [274, 2, 1, "", "scalar_product"]], "sage.combinat.set_partition": [[275, 1, 1, "", "AbstractSetPartition"], [275, 1, 1, "", "SetPartition"], [275, 1, 1, "", "SetPartitions"], [275, 1, 1, "", "SetPartitions_all"], [275, 1, 1, "", "SetPartitions_set"], [275, 1, 1, "", "SetPartitions_setn"], [275, 1, 1, "", "SetPartitions_setparts"], [275, 3, 1, "", "cyclic_permutations_of_set_partition"], [275, 3, 1, "", "cyclic_permutations_of_set_partition_iterator"]], "sage.combinat.set_partition.AbstractSetPartition": [[275, 2, 1, "", "base_set"], [275, 2, 1, "", "base_set_cardinality"], [275, 2, 1, "", "coarsenings"], [275, 2, 1, "", "conjugate"], [275, 2, 1, "", "inf"], [275, 2, 1, "", "max_block_size"], [275, 2, 1, "", "standard_form"], [275, 2, 1, "", "sup"]], "sage.combinat.set_partition.SetPartition": [[275, 2, 1, "", "apply_permutation"], [275, 2, 1, "", "arcs"], [275, 2, 1, "", "cardinality"], [275, 2, 1, "", "check"], [275, 2, 1, "", "closers"], [275, 2, 1, "", "crossings"], [275, 2, 1, "", "crossings_iterator"], [275, 2, 1, "", "is_atomic"], [275, 2, 1, "", "is_noncrossing"], [275, 2, 1, "", "is_nonnesting"], [275, 2, 1, "", "latex_options"], [275, 2, 1, "", "nestings"], [275, 2, 1, "", "nestings_iterator"], [275, 2, 1, "", "number_of_crossings"], [275, 2, 1, "", "number_of_nestings"], [275, 2, 1, "", "openers"], [275, 2, 1, "", "ordered_set_partition_action"], [275, 2, 1, "", "pipe"], [275, 2, 1, "", "plot"], [275, 2, 1, "", "refinements"], [275, 2, 1, "", "restriction"], [275, 2, 1, "", "set_latex_options"], [275, 2, 1, "", "shape"], [275, 2, 1, "", "shape_partition"], [275, 2, 1, "", "size"], [275, 2, 1, "", "standardization"], [275, 2, 1, "", "strict_coarsenings"], [275, 2, 1, "", "to_partition"], [275, 2, 1, "", "to_permutation"], [275, 2, 1, "", "to_restricted_growth_word"], [275, 2, 1, "", "to_restricted_growth_word_blocks"], [275, 2, 1, "", "to_restricted_growth_word_intertwining"], [275, 2, 1, "", "to_rook_placement"], [275, 2, 1, "", "to_rook_placement_gamma"], [275, 2, 1, "", "to_rook_placement_psi"], [275, 2, 1, "", "to_rook_placement_rho"]], "sage.combinat.set_partition.SetPartitions": [[275, 4, 1, "", "Element"], [275, 2, 1, "", "from_arcs"], [275, 2, 1, "", "from_restricted_growth_word"], [275, 2, 1, "", "from_restricted_growth_word_blocks"], [275, 2, 1, "", "from_restricted_growth_word_intertwining"], [275, 2, 1, "", "from_rook_placement"], [275, 2, 1, "", "from_rook_placement_gamma"], [275, 2, 1, "", "from_rook_placement_psi"], [275, 2, 1, "", "from_rook_placement_rho"], [275, 2, 1, "", "is_less_than"], [275, 2, 1, "", "is_strict_refinement"], [275, 2, 1, "", "lt"]], "sage.combinat.set_partition.SetPartitions_all": [[275, 2, 1, "", "subset"]], "sage.combinat.set_partition.SetPartitions_set": [[275, 2, 1, "", "base_set"], [275, 2, 1, "", "base_set_cardinality"], [275, 2, 1, "", "cardinality"], [275, 2, 1, "", "random_element"]], "sage.combinat.set_partition.SetPartitions_setn": [[275, 2, 1, "", "cardinality"], [275, 5, 1, "", "n"], [275, 2, 1, "", "number_of_blocks"], [275, 2, 1, "", "random_element"]], "sage.combinat.set_partition.SetPartitions_setparts": [[275, 2, 1, "", "cardinality"], [275, 5, 1, "", "parts"], [275, 2, 1, "", "random_element"], [275, 2, 1, "", "shape"]], "sage.combinat.set_partition_ordered": [[276, 1, 1, "", "OrderedSetPartition"], [276, 1, 1, "", "OrderedSetPartitions"], [276, 1, 1, "", "OrderedSetPartitions_all"], [276, 1, 1, "", "OrderedSetPartitions_s"], [276, 1, 1, "", "OrderedSetPartitions_scomp"], [276, 1, 1, "", "OrderedSetPartitions_sn"], [276, 1, 1, "", "SplitNK"], [276, 3, 1, "", "multiset_permutation_next_lex"], [276, 3, 1, "", "multiset_permutation_to_ordered_set_partition"]], "sage.combinat.set_partition_ordered.OrderedSetPartition": [[276, 2, 1, "", "base_set"], [276, 2, 1, "", "base_set_cardinality"], [276, 2, 1, "", "bottom_up_osp"], [276, 2, 1, "", "check"], [276, 2, 1, "", "complement"], [276, 2, 1, "", "fatten"], [276, 2, 1, "", "fatter"], [276, 2, 1, "", "finer"], [276, 2, 1, "", "is_finer"], [276, 2, 1, "", "is_strongly_finer"], [276, 2, 1, "", "length"], [276, 2, 1, "", "number_of_inversions"], [276, 2, 1, "", "reversed"], [276, 2, 1, "", "size"], [276, 2, 1, "", "strongly_fatter"], [276, 2, 1, "", "strongly_finer"], [276, 2, 1, "", "sum"], [276, 2, 1, "", "to_composition"], [276, 2, 1, "", "to_packed_word"]], "sage.combinat.set_partition_ordered.OrderedSetPartitions": [[276, 4, 1, "", "Element"], [276, 2, 1, "", "from_finite_word"]], "sage.combinat.set_partition_ordered.OrderedSetPartitions_all": [[276, 1, 1, "", "Element"], [276, 2, 1, "", "subset"]], "sage.combinat.set_partition_ordered.OrderedSetPartitions_s": [[276, 2, 1, "", "cardinality"]], "sage.combinat.set_partition_ordered.OrderedSetPartitions_scomp": [[276, 2, 1, "", "cardinality"]], "sage.combinat.set_partition_ordered.OrderedSetPartitions_sn": [[276, 2, 1, "", "cardinality"]], "sage.combinat.sf": [[277, 0, 0, "-", "all"], [278, 0, 0, "-", "character"], [279, 0, 0, "-", "classical"], [280, 0, 0, "-", "dual"], [281, 0, 0, "-", "elementary"], [282, 0, 0, "-", "hall_littlewood"], [283, 0, 0, "-", "hecke"], [284, 0, 0, "-", "homogeneous"], [285, 0, 0, "-", "jack"], [286, 0, 0, "-", "k_dual"], [287, 0, 0, "-", "kfpoly"], [288, 0, 0, "-", "llt"], [289, 0, 0, "-", "macdonald"], [290, 0, 0, "-", "monomial"], [291, 0, 0, "-", "multiplicative"], [292, 0, 0, "-", "new_kschur"], [293, 0, 0, "-", "ns_macdonald"], [294, 0, 0, "-", "orthogonal"], [295, 0, 0, "-", "orthotriang"], [296, 0, 0, "-", "powersum"], [297, 0, 0, "-", "schur"], [298, 0, 0, "-", "sf"], [299, 0, 0, "-", "sfa"], [300, 0, 0, "-", "symplectic"], [301, 0, 0, "-", "witt"]], "sage.combinat.sf.character": [[278, 1, 1, "", "generic_character"], [278, 1, 1, "", "induced_trivial_character_basis"], [278, 1, 1, "", "irreducible_character_basis"]], "sage.combinat.sf.classical": [[279, 1, 1, "", "SymmetricFunctionAlgebra_classical"], [279, 3, 1, "", "init"]], "sage.combinat.sf.classical.SymmetricFunctionAlgebra_classical": [[279, 1, 1, "", "Element"]], "sage.combinat.sf.dual": [[280, 1, 1, "", "SymmetricFunctionAlgebra_dual"]], "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual": [[280, 1, 1, "", "Element"], [280, 2, 1, "", "product"], [280, 2, 1, "", "transition_matrix"]], "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual.Element": [[280, 2, 1, "", "dual"], [280, 2, 1, "", "expand"], [280, 2, 1, "", "omega"], [280, 2, 1, "", "omega_involution"], [280, 2, 1, "", "scalar"], [280, 2, 1, "", "scalar_hl"]], "sage.combinat.sf.elementary": [[281, 1, 1, "", "SymmetricFunctionAlgebra_elementary"]], "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary": [[281, 1, 1, "", "Element"], [281, 2, 1, "", "coproduct_on_generators"]], "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary.Element": [[281, 2, 1, "", "expand"], [281, 2, 1, "", "exponential_specialization"], [281, 2, 1, "", "omega"], [281, 2, 1, "", "omega_involution"], [281, 2, 1, "", "principal_specialization"], [281, 2, 1, "", "verschiebung"]], "sage.combinat.sf.hall_littlewood": [[282, 1, 1, "", "HallLittlewood"], [282, 1, 1, "", "HallLittlewood_generic"], [282, 1, 1, "", "HallLittlewood_p"], [282, 1, 1, "", "HallLittlewood_q"], [282, 1, 1, "", "HallLittlewood_qp"]], "sage.combinat.sf.hall_littlewood.HallLittlewood": [[282, 2, 1, "", "P"], [282, 2, 1, "", "Q"], [282, 2, 1, "", "Qp"], [282, 2, 1, "", "base_ring"], [282, 2, 1, "", "symmetric_function_ring"]], "sage.combinat.sf.hall_littlewood.HallLittlewood_generic": [[282, 1, 1, "", "Element"], [282, 2, 1, "", "hall_littlewood_family"], [282, 2, 1, "", "product"], [282, 2, 1, "", "transition_matrix"]], "sage.combinat.sf.hall_littlewood.HallLittlewood_generic.Element": [[282, 2, 1, "", "expand"], [282, 2, 1, "", "scalar"], [282, 2, 1, "", "scalar_hl"]], "sage.combinat.sf.hall_littlewood.HallLittlewood_p": [[282, 1, 1, "", "Element"]], "sage.combinat.sf.hall_littlewood.HallLittlewood_q": [[282, 1, 1, "", "Element"]], "sage.combinat.sf.hall_littlewood.HallLittlewood_qp": [[282, 1, 1, "", "Element"]], "sage.combinat.sf.hecke": [[283, 1, 1, "", "HeckeCharacter"]], "sage.combinat.sf.hecke.HeckeCharacter": [[283, 2, 1, "", "coproduct_on_generators"]], "sage.combinat.sf.homogeneous": [[284, 1, 1, "", "SymmetricFunctionAlgebra_homogeneous"]], "sage.combinat.sf.homogeneous.SymmetricFunctionAlgebra_homogeneous": [[284, 1, 1, "", "Element"], [284, 2, 1, "", "coproduct_on_generators"]], "sage.combinat.sf.homogeneous.SymmetricFunctionAlgebra_homogeneous.Element": [[284, 2, 1, "", "expand"], [284, 2, 1, "", "exponential_specialization"], [284, 2, 1, "", "omega"], [284, 2, 1, "", "omega_involution"], [284, 2, 1, "", "principal_specialization"]], "sage.combinat.sf.jack": [[285, 1, 1, "", "Jack"], [285, 1, 1, "", "JackPolynomials_generic"], [285, 1, 1, "", "JackPolynomials_j"], [285, 1, 1, "", "JackPolynomials_p"], [285, 1, 1, "", "JackPolynomials_q"], [285, 1, 1, "", "JackPolynomials_qp"], [285, 1, 1, "", "SymmetricFunctionAlgebra_zonal"], [285, 3, 1, "", "c1"], [285, 3, 1, "", "c2"], [285, 3, 1, "", "normalize_coefficients"], [285, 3, 1, "", "part_scalar_jack"]], "sage.combinat.sf.jack.Jack": [[285, 2, 1, "", "J"], [285, 2, 1, "", "P"], [285, 2, 1, "", "Q"], [285, 2, 1, "", "Qp"], [285, 2, 1, "", "base_ring"], [285, 2, 1, "", "symmetric_function_ring"]], "sage.combinat.sf.jack.JackPolynomials_generic": [[285, 1, 1, "", "Element"], [285, 2, 1, "", "c1"], [285, 2, 1, "", "c2"], [285, 2, 1, "", "coproduct_by_coercion"], [285, 2, 1, "", "jack_family"], [285, 2, 1, "", "product"]], "sage.combinat.sf.jack.JackPolynomials_generic.Element": [[285, 2, 1, "", "scalar_jack"]], "sage.combinat.sf.jack.JackPolynomials_j": [[285, 1, 1, "", "Element"]], "sage.combinat.sf.jack.JackPolynomials_p": [[285, 1, 1, "", "Element"], [285, 2, 1, "", "product"], [285, 2, 1, "", "scalar_jack_basis"]], "sage.combinat.sf.jack.JackPolynomials_p.Element": [[285, 2, 1, "", "scalar_jack"]], "sage.combinat.sf.jack.JackPolynomials_q": [[285, 1, 1, "", "Element"]], "sage.combinat.sf.jack.JackPolynomials_qp": [[285, 1, 1, "", "Element"], [285, 2, 1, "", "coproduct_by_coercion"], [285, 2, 1, "", "product"]], "sage.combinat.sf.jack.SymmetricFunctionAlgebra_zonal": [[285, 1, 1, "", "Element"], [285, 2, 1, "", "product"]], "sage.combinat.sf.jack.SymmetricFunctionAlgebra_zonal.Element": [[285, 2, 1, "", "scalar_zonal"]], "sage.combinat.sf.k_dual": [[286, 1, 1, "", "AffineSchurFunctions"], [286, 1, 1, "", "DualkSchurFunctions"], [286, 1, 1, "", "KBoundedQuotient"], [286, 1, 1, "", "KBoundedQuotientBases"], [286, 1, 1, "", "KBoundedQuotientBasis"], [286, 1, 1, "", "kMonomial"], [286, 1, 1, "", "kbounded_HallLittlewoodP"]], "sage.combinat.sf.k_dual.KBoundedQuotient": [[286, 2, 1, "", "AffineGrothendieckPolynomial"], [286, 2, 1, "", "F"], [286, 2, 1, "", "a_realization"], [286, 2, 1, "", "affineSchur"], [286, 2, 1, "", "ambient"], [286, 2, 1, "", "an_element"], [286, 2, 1, "", "dks"], [286, 2, 1, "", "dual_k_Schur"], [286, 2, 1, "", "kHLP"], [286, 2, 1, "", "kHallLittlewoodP"], [286, 2, 1, "", "km"], [286, 2, 1, "", "kmonomial"], [286, 2, 1, "", "lift"], [286, 2, 1, "", "one"], [286, 2, 1, "", "realizations"], [286, 2, 1, "", "retract"]], "sage.combinat.sf.k_dual.KBoundedQuotientBases": [[286, 1, 1, "", "ElementMethods"], [286, 1, 1, "", "ParentMethods"], [286, 2, 1, "", "super_categories"]], "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods": [[286, 2, 1, "", "ambient"], [286, 2, 1, "", "antipode"], [286, 2, 1, "", "coproduct"], [286, 2, 1, "", "counit"], [286, 2, 1, "", "degree_on_basis"], [286, 2, 1, "", "indices"], [286, 2, 1, "", "lift"], [286, 2, 1, "", "one_basis"], [286, 2, 1, "", "product"], [286, 2, 1, "", "retract"]], "sage.combinat.sf.k_dual.kMonomial": [[286, 2, 1, "", "lift"], [286, 2, 1, "", "retract"]], "sage.combinat.sf.k_dual.kbounded_HallLittlewoodP": [[286, 2, 1, "", "lift"], [286, 2, 1, "", "retract"]], "sage.combinat.sf.kfpoly": [[287, 3, 1, "", "KostkaFoulkesPolynomial"], [287, 3, 1, "", "compat"], [287, 3, 1, "", "dom"], [287, 3, 1, "", "kfpoly"], [287, 3, 1, "", "riggings"], [287, 3, 1, "", "schur_to_hl"], [287, 3, 1, "", "weight"]], "sage.combinat.sf.llt": [[288, 1, 1, "", "LLT_class"], [288, 1, 1, "", "LLT_cospin"], [288, 1, 1, "", "LLT_generic"], [288, 1, 1, "", "LLT_spin"]], "sage.combinat.sf.llt.LLT_class": [[288, 2, 1, "", "base_ring"], [288, 2, 1, "", "cospin"], [288, 2, 1, "", "hcospin"], [288, 2, 1, "", "hspin"], [288, 2, 1, "", "level"], [288, 2, 1, "", "spin_square"], [288, 2, 1, "", "symmetric_function_ring"]], "sage.combinat.sf.llt.LLT_cospin": [[288, 1, 1, "", "Element"]], "sage.combinat.sf.llt.LLT_generic": [[288, 1, 1, "", "Element"], [288, 2, 1, "", "level"], [288, 2, 1, "", "llt_family"], [288, 2, 1, "", "product"]], "sage.combinat.sf.llt.LLT_spin": [[288, 1, 1, "", "Element"]], "sage.combinat.sf.macdonald": [[289, 1, 1, "", "Macdonald"], [289, 1, 1, "", "MacdonaldPolynomials_generic"], [289, 1, 1, "", "MacdonaldPolynomials_h"], [289, 1, 1, "", "MacdonaldPolynomials_ht"], [289, 1, 1, "", "MacdonaldPolynomials_j"], [289, 1, 1, "", "MacdonaldPolynomials_p"], [289, 1, 1, "", "MacdonaldPolynomials_q"], [289, 1, 1, "", "MacdonaldPolynomials_s"], [289, 3, 1, "", "c1"], [289, 3, 1, "", "c2"], [289, 3, 1, "", "cmunu"], [289, 3, 1, "", "cmunu1"], [289, 3, 1, "", "qt_kostka"]], "sage.combinat.sf.macdonald.Macdonald": [[289, 2, 1, "", "H"], [289, 2, 1, "", "Ht"], [289, 2, 1, "", "J"], [289, 2, 1, "", "P"], [289, 2, 1, "", "Q"], [289, 2, 1, "", "S"], [289, 2, 1, "", "base_ring"], [289, 2, 1, "", "symmetric_function_ring"]], "sage.combinat.sf.macdonald.MacdonaldPolynomials_generic": [[289, 1, 1, "", "Element"], [289, 2, 1, "", "c1"], [289, 2, 1, "", "c2"], [289, 2, 1, "", "macdonald_family"], [289, 2, 1, "", "product"]], "sage.combinat.sf.macdonald.MacdonaldPolynomials_generic.Element": [[289, 2, 1, "", "nabla"]], "sage.combinat.sf.macdonald.MacdonaldPolynomials_h": [[289, 1, 1, "", "Element"]], "sage.combinat.sf.macdonald.MacdonaldPolynomials_ht": [[289, 1, 1, "", "Element"]], "sage.combinat.sf.macdonald.MacdonaldPolynomials_ht.Element": [[289, 2, 1, "", "nabla"]], "sage.combinat.sf.macdonald.MacdonaldPolynomials_j": [[289, 1, 1, "", "Element"]], "sage.combinat.sf.macdonald.MacdonaldPolynomials_p": [[289, 1, 1, "", "Element"], [289, 2, 1, "", "scalar_qt_basis"]], "sage.combinat.sf.macdonald.MacdonaldPolynomials_q": [[289, 1, 1, "", "Element"]], "sage.combinat.sf.macdonald.MacdonaldPolynomials_s": [[289, 1, 1, "", "Element"], [289, 2, 1, "", "product"]], "sage.combinat.sf.macdonald.MacdonaldPolynomials_s.Element": [[289, 2, 1, "", "creation"]], "sage.combinat.sf.monomial": [[290, 1, 1, "", "SymmetricFunctionAlgebra_monomial"]], "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial": [[290, 1, 1, "", "Element"], [290, 2, 1, "", "antipode_by_coercion"], [290, 2, 1, "", "from_polynomial"], [290, 2, 1, "", "from_polynomial_exp"], [290, 2, 1, "", "product"]], "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial.Element": [[290, 2, 1, "", "expand"], [290, 2, 1, "", "exponential_specialization"], [290, 2, 1, "", "principal_specialization"]], "sage.combinat.sf.multiplicative": [[291, 1, 1, "", "SymmetricFunctionAlgebra_multiplicative"]], "sage.combinat.sf.multiplicative.SymmetricFunctionAlgebra_multiplicative": [[291, 2, 1, "", "coproduct_on_basis"], [291, 2, 1, "", "product_on_basis"]], "sage.combinat.sf.new_kschur": [[292, 1, 1, "", "KBoundedSubspace"], [292, 1, 1, "", "KBoundedSubspaceBases"], [292, 1, 1, "", "K_kSchur"], [292, 1, 1, "", "kHomogeneous"], [292, 1, 1, "", "kSchur"], [292, 1, 1, "", "kSplit"]], "sage.combinat.sf.new_kschur.KBoundedSubspace": [[292, 2, 1, "", "K_kschur"], [292, 2, 1, "", "khomogeneous"], [292, 2, 1, "", "kschur"], [292, 2, 1, "", "ksplit"], [292, 2, 1, "", "realizations"], [292, 2, 1, "", "retract"]], "sage.combinat.sf.new_kschur.KBoundedSubspaceBases": [[292, 1, 1, "", "ElementMethods"], [292, 1, 1, "", "ParentMethods"], [292, 2, 1, "", "super_categories"]], "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ElementMethods": [[292, 2, 1, "", "expand"], [292, 2, 1, "", "hl_creation_operator"], [292, 2, 1, "", "is_schur_positive"], [292, 2, 1, "", "omega"], [292, 2, 1, "", "omega_t_inverse"], [292, 2, 1, "", "scalar"]], "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ParentMethods": [[292, 2, 1, "", "an_element"], [292, 2, 1, "", "antipode"], [292, 2, 1, "", "coproduct"], [292, 2, 1, "", "counit"], [292, 2, 1, "", "degree_on_basis"], [292, 2, 1, "", "one_basis"], [292, 2, 1, "", "transition_matrix"]], "sage.combinat.sf.new_kschur.K_kSchur": [[292, 2, 1, "", "K_k_Schur_non_commutative_variables"], [292, 2, 1, "", "homogeneous_basis_noncommutative_variables_zero_Hecke"], [292, 2, 1, "", "lift"], [292, 2, 1, "", "product"], [292, 2, 1, "", "retract"]], "sage.combinat.sf.new_kschur.kSchur": [[292, 2, 1, "", "product_on_basis"]], "sage.combinat.sf.ns_macdonald": [[293, 1, 1, "", "AugmentedLatticeDiagramFilling"], [293, 3, 1, "", "E"], [293, 3, 1, "", "E_integral"], [293, 3, 1, "", "Ht"], [293, 1, 1, "", "LatticeDiagram"], [293, 1, 1, "", "NonattackingBacktracker"], [293, 3, 1, "", "NonattackingFillings"], [293, 1, 1, "", "NonattackingFillings_shape"]], "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling": [[293, 2, 1, "", "are_attacking"], [293, 2, 1, "", "attacking_boxes"], [293, 2, 1, "", "boxes"], [293, 2, 1, "", "coeff"], [293, 2, 1, "", "coeff_integral"], [293, 2, 1, "", "coinv"], [293, 2, 1, "", "descents"], [293, 2, 1, "", "inv"], [293, 2, 1, "", "inversions"], [293, 2, 1, "", "is_non_attacking"], [293, 2, 1, "", "maj"], [293, 2, 1, "", "permuted_filling"], [293, 2, 1, "", "reading_order"], [293, 2, 1, "", "reading_word"], [293, 2, 1, "", "shape"], [293, 2, 1, "", "weight"]], "sage.combinat.sf.ns_macdonald.LatticeDiagram": [[293, 2, 1, "", "a"], [293, 2, 1, "", "arm"], [293, 2, 1, "", "arm_left"], [293, 2, 1, "", "arm_right"], [293, 2, 1, "", "boxes"], [293, 2, 1, "", "boxes_same_and_lower_right"], [293, 2, 1, "", "flip"], [293, 2, 1, "", "l"], [293, 2, 1, "", "leg"], [293, 2, 1, "", "size"]], "sage.combinat.sf.ns_macdonald.NonattackingBacktracker": [[293, 2, 1, "", "get_next_pos"]], "sage.combinat.sf.ns_macdonald.NonattackingFillings_shape": [[293, 2, 1, "", "flip"]], "sage.combinat.sf.orthogonal": [[294, 1, 1, "", "SymmetricFunctionAlgebra_orthogonal"]], "sage.combinat.sf.orthotriang": [[295, 1, 1, "", "SymmetricFunctionAlgebra_orthotriang"]], "sage.combinat.sf.orthotriang.SymmetricFunctionAlgebra_orthotriang": [[295, 1, 1, "", "Element"], [295, 2, 1, "", "product"]], "sage.combinat.sf.powersum": [[296, 1, 1, "", "SymmetricFunctionAlgebra_power"]], "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power": [[296, 1, 1, "", "Element"], [296, 2, 1, "", "antipode_on_basis"], [296, 2, 1, "", "bottom_schur_function"], [296, 2, 1, "", "coproduct_on_generators"], [296, 2, 1, "", "eval_at_permutation_roots_on_generators"]], "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element": [[296, 2, 1, "", "adams_operation"], [296, 2, 1, "", "eval_at_permutation_roots"], [296, 2, 1, "", "expand"], [296, 2, 1, "", "exponential_specialization"], [296, 2, 1, "", "frobenius"], [296, 2, 1, "", "omega"], [296, 2, 1, "", "omega_involution"], [296, 2, 1, "", "principal_specialization"], [296, 2, 1, "", "scalar"], [296, 2, 1, "", "verschiebung"]], "sage.combinat.sf.schur": [[297, 1, 1, "", "SymmetricFunctionAlgebra_schur"]], "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur": [[297, 1, 1, "", "Element"], [297, 2, 1, "", "coproduct_on_basis"], [297, 2, 1, "", "product_on_basis"]], "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.Element": [[297, 2, 1, "", "expand"], [297, 2, 1, "", "exponential_specialization"], [297, 2, 1, "", "omega"], [297, 2, 1, "", "omega_involution"], [297, 2, 1, "", "principal_specialization"], [297, 2, 1, "", "scalar"], [297, 2, 1, "", "verschiebung"]], "sage.combinat.sf.sf": [[298, 1, 1, "", "SymmetricFunctions"], [298, 1, 1, "", "SymmetricaConversionOnBasis"]], "sage.combinat.sf.sf.SymmetricFunctions": [[298, 2, 1, "", "Schur"], [298, 2, 1, "", "Witt"], [298, 2, 1, "", "a_realization"], [298, 2, 1, "", "complete"], [298, 2, 1, "", "e"], [298, 2, 1, "", "elementary"], [298, 2, 1, "", "f"], [298, 2, 1, "", "forgotten"], [298, 2, 1, "", "from_polynomial"], [298, 2, 1, "", "h"], [298, 2, 1, "", "hall_littlewood"], [298, 2, 1, "", "hecke_character"], [298, 2, 1, "", "homogeneous"], [298, 2, 1, "", "ht"], [298, 2, 1, "", "induced_trivial_character"], [298, 2, 1, "", "irreducible_symmetric_group_character"], [298, 2, 1, "", "jack"], [298, 2, 1, "", "kBoundedQuotient"], [298, 2, 1, "", "kBoundedSubspace"], [298, 2, 1, "", "khomogeneous"], [298, 2, 1, "", "kschur"], [298, 2, 1, "", "ksplit"], [298, 2, 1, "", "llt"], [298, 2, 1, "", "m"], [298, 2, 1, "", "macdonald"], [298, 2, 1, "", "monomial"], [298, 2, 1, "", "o"], [298, 2, 1, "", "orthogonal"], [298, 2, 1, "", "p"], [298, 2, 1, "", "power"], [298, 2, 1, "", "powersum"], [298, 2, 1, "", "qbar"], [298, 2, 1, "", "register_isomorphism"], [298, 2, 1, "", "s"], [298, 2, 1, "", "schur"], [298, 2, 1, "", "sp"], [298, 2, 1, "", "st"], [298, 2, 1, "", "symplectic"], [298, 2, 1, "", "w"], [298, 2, 1, "", "witt"], [298, 2, 1, "", "zonal"]], "sage.combinat.sf.sfa": [[299, 1, 1, "", "FilteredSymmetricFunctionsBases"], [299, 1, 1, "", "GradedSymmetricFunctionsBases"], [299, 1, 1, "", "SymmetricFunctionAlgebra_generic"], [299, 1, 1, "", "SymmetricFunctionAlgebra_generic_Element"], [299, 1, 1, "", "SymmetricFunctionsBases"], [299, 3, 1, "", "is_SymmetricFunction"], [299, 3, 1, "", "is_SymmetricFunctionAlgebra"], [299, 3, 1, "", "zee"]], "sage.combinat.sf.sfa.FilteredSymmetricFunctionsBases": [[299, 2, 1, "", "super_categories"]], "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases": [[299, 1, 1, "", "ElementMethods"], [299, 1, 1, "", "ParentMethods"], [299, 2, 1, "", "super_categories"]], "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.ElementMethods": [[299, 2, 1, "", "degree_negation"], [299, 2, 1, "", "degree_zero_coefficient"], [299, 2, 1, "", "is_unit"]], "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.ParentMethods": [[299, 2, 1, "", "antipode_by_coercion"], [299, 2, 1, "", "counit"], [299, 2, 1, "", "degree_negation"]], "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic": [[299, 4, 1, "", "Element"], [299, 2, 1, "", "basis_name"], [299, 2, 1, "", "coproduct_by_coercion"], [299, 2, 1, "", "dual_basis"], [299, 2, 1, "", "from_polynomial"], [299, 2, 1, "", "get_print_style"], [299, 2, 1, "", "prefix"], [299, 2, 1, "", "product_by_coercion"], [299, 2, 1, "", "set_print_style"], [299, 2, 1, "", "symmetric_function_ring"], [299, 2, 1, "", "transition_matrix"]], "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element": [[299, 2, 1, "", "arithmetic_product"], [299, 2, 1, "", "bernstein_creation_operator"], [299, 2, 1, "", "character_to_frobenius_image"], [299, 2, 1, "", "degree"], [299, 2, 1, "", "derivative_with_respect_to_p1"], [299, 2, 1, "", "eval_at_permutation_roots"], [299, 2, 1, "", "expand"], [299, 2, 1, "", "exponential_specialization"], [299, 2, 1, "", "factor"], [299, 2, 1, "", "frobenius"], [299, 2, 1, "", "gcd"], [299, 2, 1, "", "hl_creation_operator"], [299, 2, 1, "", "inner_plethysm"], [299, 2, 1, "", "inner_tensor"], [299, 2, 1, "", "internal_coproduct"], [299, 2, 1, "", "internal_product"], [299, 2, 1, "", "is_schur_positive"], [299, 2, 1, "", "itensor"], [299, 2, 1, "", "kronecker_coproduct"], [299, 2, 1, "", "kronecker_product"], [299, 2, 1, "", "left_padded_kronecker_product"], [299, 2, 1, "", "nabla"], [299, 2, 1, "", "omega"], [299, 2, 1, "", "omega_involution"], [299, 2, 1, "", "omega_qt"], [299, 2, 1, "", "plethysm"], [299, 2, 1, "", "principal_specialization"], [299, 2, 1, "", "reduced_kronecker_product"], [299, 2, 1, "", "restrict_degree"], [299, 2, 1, "", "restrict_partition_lengths"], [299, 2, 1, "", "restrict_parts"], [299, 2, 1, "", "scalar"], [299, 2, 1, "", "scalar_hl"], [299, 2, 1, "", "scalar_jack"], [299, 2, 1, "", "scalar_qt"], [299, 2, 1, "", "scalar_t"], [299, 2, 1, "", "skew_by"], [299, 2, 1, "", "theta"], [299, 2, 1, "", "theta_qt"], [299, 2, 1, "", "verschiebung"]], "sage.combinat.sf.sfa.SymmetricFunctionsBases": [[299, 1, 1, "", "ParentMethods"], [299, 2, 1, "", "super_categories"]], "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods": [[299, 2, 1, "", "Eulerian"], [299, 2, 1, "", "carlitz_shareshian_wachs"], [299, 2, 1, "", "corresponding_basis_over"], [299, 2, 1, "", "degree_on_basis"], [299, 2, 1, "", "formal_series_ring"], [299, 2, 1, "", "gessel_reutenauer"], [299, 2, 1, "", "higher_lie_character"], [299, 2, 1, "", "is_commutative"], [299, 2, 1, "", "is_field"], [299, 2, 1, "", "is_integral_domain"], [299, 2, 1, "", "lehrer_solomon"], [299, 2, 1, "", "one_basis"], [299, 2, 1, "", "skew_schur"], [299, 2, 1, "", "whitney_homology_character"]], "sage.combinat.sf.symplectic": [[300, 1, 1, "", "SymmetricFunctionAlgebra_symplectic"]], "sage.combinat.sf.witt": [[301, 1, 1, "", "SymmetricFunctionAlgebra_witt"]], "sage.combinat.sf.witt.SymmetricFunctionAlgebra_witt": [[301, 2, 1, "", "coproduct"], [301, 2, 1, "", "from_other_uncached"], [301, 2, 1, "", "verschiebung"]], "sage.combinat.shard_order": [[302, 1, 1, "", "ShardPosetElement"], [302, 3, 1, "", "shard_poset"], [302, 3, 1, "", "shard_preorder_graph"]], "sage.combinat.shifted_primed_tableau": [[303, 1, 1, "", "CrystalElementShiftedPrimedTableau"], [303, 1, 1, "", "PrimedEntry"], [303, 1, 1, "", "ShiftedPrimedTableau"], [303, 1, 1, "", "ShiftedPrimedTableaux"], [303, 1, 1, "", "ShiftedPrimedTableaux_all"], [303, 1, 1, "", "ShiftedPrimedTableaux_shape"], [303, 1, 1, "", "ShiftedPrimedTableaux_weight"], [303, 1, 1, "", "ShiftedPrimedTableaux_weight_shape"]], "sage.combinat.shifted_primed_tableau.CrystalElementShiftedPrimedTableau": [[303, 2, 1, "", "e"], [303, 2, 1, "", "f"], [303, 2, 1, "", "is_highest_weight"], [303, 2, 1, "", "reading_word"], [303, 2, 1, "", "weight"]], "sage.combinat.shifted_primed_tableau.PrimedEntry": [[303, 2, 1, "", "decrease_half"], [303, 2, 1, "", "decrease_one"], [303, 2, 1, "", "increase_half"], [303, 2, 1, "", "increase_one"], [303, 2, 1, "", "integer"], [303, 2, 1, "", "is_primed"], [303, 2, 1, "", "is_unprimed"], [303, 2, 1, "", "primed"], [303, 2, 1, "", "unprimed"]], "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau": [[303, 2, 1, "", "check"], [303, 2, 1, "", "is_standard"], [303, 2, 1, "", "max_entry"], [303, 2, 1, "", "pp"], [303, 2, 1, "", "restrict"], [303, 2, 1, "", "restriction_outer_shape"], [303, 2, 1, "", "restriction_shape"], [303, 2, 1, "", "shape"], [303, 2, 1, "", "to_chain"], [303, 2, 1, "", "weight"]], "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux": [[303, 4, 1, "", "Element"], [303, 4, 1, "", "options"]], "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux_shape": [[303, 2, 1, "", "module_generators"], [303, 2, 1, "", "shape"]], "sage.combinat.shuffle": [[304, 1, 1, "", "SetShuffleProduct"], [304, 1, 1, "", "ShuffleProduct"], [304, 1, 1, "", "ShuffleProduct_abstract"], [304, 1, 1, "", "ShuffleProduct_overlapping"], [304, 1, 1, "", "ShuffleProduct_overlapping_r"]], "sage.combinat.shuffle.SetShuffleProduct": [[304, 2, 1, "", "cardinality"]], "sage.combinat.shuffle.ShuffleProduct": [[304, 2, 1, "", "cardinality"]], "sage.combinat.sidon_sets": [[305, 3, 1, "", "sidon_sets"], [305, 3, 1, "", "sidon_sets_rec"]], "sage.combinat.similarity_class_type": [[306, 1, 1, "", "PrimarySimilarityClassType"], [306, 1, 1, "", "PrimarySimilarityClassTypes"], [306, 1, 1, "", "SimilarityClassType"], [306, 1, 1, "", "SimilarityClassTypes"], [306, 3, 1, "", "centralizer_algebra_dim"], [306, 3, 1, "", "centralizer_group_cardinality"], [306, 3, 1, "", "dictionary_from_generator"], [306, 3, 1, "", "ext_orbit_centralizers"], [306, 3, 1, "", "ext_orbits"], [306, 3, 1, "", "fq"], [306, 3, 1, "", "input_parsing"], [306, 3, 1, "", "invariant_subspace_generating_function"], [306, 3, 1, "", "matrix_centralizer_cardinalities"], [306, 3, 1, "", "matrix_centralizer_cardinalities_length_two"], [306, 3, 1, "", "matrix_similarity_classes"], [306, 3, 1, "", "matrix_similarity_classes_length_two"], [306, 3, 1, "", "order_of_general_linear_group"], [306, 3, 1, "", "primitives"]], "sage.combinat.similarity_class_type.PrimarySimilarityClassType": [[306, 2, 1, "", "centralizer_algebra_dim"], [306, 2, 1, "", "centralizer_group_card"], [306, 2, 1, "", "degree"], [306, 2, 1, "", "invariant_subspace_generating_function"], [306, 2, 1, "", "partition"], [306, 2, 1, "", "size"], [306, 2, 1, "", "statistic"]], "sage.combinat.similarity_class_type.PrimarySimilarityClassTypes": [[306, 4, 1, "", "Element"], [306, 2, 1, "", "size"]], "sage.combinat.similarity_class_type.SimilarityClassType": [[306, 2, 1, "", "as_partition_dictionary"], [306, 2, 1, "", "centralizer_algebra_dim"], [306, 2, 1, "", "centralizer_group_card"], [306, 2, 1, "", "class_card"], [306, 2, 1, "", "invariant_subspace_generating_function"], [306, 2, 1, "", "is_regular"], [306, 2, 1, "", "is_semisimple"], [306, 2, 1, "", "number_of_classes"], [306, 2, 1, "", "number_of_matrices"], [306, 2, 1, "", "rcf"], [306, 2, 1, "", "size"], [306, 2, 1, "", "statistic"]], "sage.combinat.similarity_class_type.SimilarityClassTypes": [[306, 4, 1, "", "Element"], [306, 2, 1, "", "size"], [306, 2, 1, "", "sum"]], "sage.combinat.sine_gordon": [[307, 1, 1, "", "SineGordonYsystem"]], "sage.combinat.sine_gordon.SineGordonYsystem": [[307, 2, 1, "", "F"], [307, 2, 1, "", "intervals"], [307, 2, 1, "", "na"], [307, 2, 1, "", "pa"], [307, 2, 1, "", "plot"], [307, 2, 1, "", "qa"], [307, 2, 1, "", "r"], [307, 2, 1, "", "rk"], [307, 2, 1, "", "triangulation"], [307, 2, 1, "", "type"], [307, 2, 1, "", "vertices"]], "sage.combinat.six_vertex_model": [[308, 1, 1, "", "SixVertexConfiguration"], [308, 1, 1, "", "SixVertexModel"], [308, 1, 1, "", "SquareIceModel"]], "sage.combinat.six_vertex_model.SixVertexConfiguration": [[308, 2, 1, "", "check"], [308, 2, 1, "", "energy"], [308, 2, 1, "", "plot"], [308, 2, 1, "", "to_signed_matrix"]], "sage.combinat.six_vertex_model.SixVertexModel": [[308, 4, 1, "", "Element"], [308, 2, 1, "", "boundary_conditions"], [308, 2, 1, "", "partition_function"]], "sage.combinat.six_vertex_model.SquareIceModel": [[308, 1, 1, "", "Element"], [308, 2, 1, "", "from_alternating_sign_matrix"]], "sage.combinat.six_vertex_model.SquareIceModel.Element": [[308, 2, 1, "", "to_alternating_sign_matrix"]], "sage.combinat.skew_partition": [[309, 1, 1, "", "SkewPartition"], [309, 1, 1, "", "SkewPartitions"], [309, 1, 1, "", "SkewPartitions_all"], [309, 1, 1, "", "SkewPartitions_n"], [309, 1, 1, "", "SkewPartitions_rowlengths"], [309, 3, 1, "", "row_lengths_aux"]], "sage.combinat.skew_partition.SkewPartition": [[309, 2, 1, "", "cell_poset"], [309, 2, 1, "", "cells"], [309, 2, 1, "", "column_lengths"], [309, 2, 1, "", "columns_intersection_set"], [309, 2, 1, "", "conjugate"], [309, 2, 1, "", "diagram"], [309, 2, 1, "", "ferrers_diagram"], [309, 2, 1, "", "frobenius_rank"], [309, 2, 1, "", "inner"], [309, 2, 1, "", "inner_corners"], [309, 2, 1, "", "is_connected"], [309, 2, 1, "", "is_overlap"], [309, 2, 1, "", "is_ribbon"], [309, 2, 1, "", "jacobi_trudi"], [309, 2, 1, "", "k_conjugate"], [309, 2, 1, "", "outer"], [309, 2, 1, "", "outer_corners"], [309, 2, 1, "", "outside_corners"], [309, 2, 1, "", "overlap"], [309, 2, 1, "", "pieri_macdonald_coeffs"], [309, 2, 1, "", "pp"], [309, 2, 1, "", "quotient"], [309, 2, 1, "", "row_lengths"], [309, 2, 1, "", "rows_intersection_set"], [309, 2, 1, "", "size"], [309, 2, 1, "", "to_dag"], [309, 2, 1, "", "to_list"]], "sage.combinat.skew_partition.SkewPartitions": [[309, 4, 1, "", "Element"], [309, 2, 1, "", "from_row_and_column_length"], [309, 4, 1, "", "options"]], "sage.combinat.skew_partition.SkewPartitions_n": [[309, 2, 1, "", "cardinality"]], "sage.combinat.skew_tableau": [[310, 1, 1, "", "SemistandardSkewTableaux"], [310, 1, 1, "", "SemistandardSkewTableaux_all"], [310, 1, 1, "", "SemistandardSkewTableaux_shape"], [310, 1, 1, "", "SemistandardSkewTableaux_shape_weight"], [310, 1, 1, "", "SemistandardSkewTableaux_size"], [310, 1, 1, "", "SemistandardSkewTableaux_size_weight"], [310, 1, 1, "", "SkewTableau"], [310, 1, 1, "", "SkewTableau_class"], [310, 1, 1, "", "SkewTableaux"], [310, 1, 1, "", "StandardSkewTableaux"], [310, 1, 1, "", "StandardSkewTableaux_all"], [310, 1, 1, "", "StandardSkewTableaux_shape"], [310, 1, 1, "", "StandardSkewTableaux_size"]], "sage.combinat.skew_tableau.SemistandardSkewTableaux_shape": [[310, 2, 1, "", "cardinality"]], "sage.combinat.skew_tableau.SemistandardSkewTableaux_size": [[310, 2, 1, "", "cardinality"]], "sage.combinat.skew_tableau.SemistandardSkewTableaux_size_weight": [[310, 2, 1, "", "cardinality"]], "sage.combinat.skew_tableau.SkewTableau": [[310, 2, 1, "", "backward_slide"], [310, 2, 1, "", "bender_knuth_involution"], [310, 2, 1, "", "cells"], [310, 2, 1, "", "cells_by_content"], [310, 2, 1, "", "cells_containing"], [310, 2, 1, "", "check"], [310, 2, 1, "", "conjugate"], [310, 2, 1, "", "entries_by_content"], [310, 2, 1, "", "evaluation"], [310, 2, 1, "", "filling"], [310, 2, 1, "", "inner_shape"], [310, 2, 1, "", "inner_size"], [310, 2, 1, "", "is_k_tableau"], [310, 2, 1, "", "is_ribbon"], [310, 2, 1, "", "is_semistandard"], [310, 2, 1, "", "is_standard"], [310, 2, 1, "", "outer_shape"], [310, 2, 1, "", "outer_size"], [310, 2, 1, "", "pp"], [310, 2, 1, "", "rectify"], [310, 2, 1, "", "restrict"], [310, 2, 1, "", "restriction_outer_shape"], [310, 2, 1, "", "restriction_shape"], [310, 2, 1, "", "reverse_slide"], [310, 2, 1, "", "shape"], [310, 2, 1, "", "shuffle"], [310, 2, 1, "", "size"], [310, 2, 1, "", "slide"], [310, 2, 1, "", "standardization"], [310, 2, 1, "", "to_chain"], [310, 2, 1, "", "to_expr"], [310, 2, 1, "", "to_list"], [310, 2, 1, "", "to_permutation"], [310, 2, 1, "", "to_ribbon"], [310, 2, 1, "", "to_tableau"], [310, 2, 1, "", "to_word"], [310, 2, 1, "", "to_word_by_column"], [310, 2, 1, "", "to_word_by_row"], [310, 2, 1, "", "weight"]], "sage.combinat.skew_tableau.SkewTableaux": [[310, 4, 1, "", "Element"], [310, 2, 1, "", "from_chain"], [310, 2, 1, "", "from_expr"], [310, 2, 1, "", "from_shape_and_word"], [310, 4, 1, "", "options"]], "sage.combinat.skew_tableau.StandardSkewTableaux_shape": [[310, 2, 1, "", "cardinality"]], "sage.combinat.skew_tableau.StandardSkewTableaux_size": [[310, 2, 1, "", "cardinality"]], "sage.combinat.sloane_functions": [[311, 1, 1, "", "A000001"], [311, 1, 1, "", "A000004"], [311, 1, 1, "", "A000005"], [311, 1, 1, "", "A000007"], [311, 1, 1, "", "A000008"], [311, 1, 1, "", "A000009"], [311, 1, 1, "", "A000010"], [311, 1, 1, "", "A000012"], [311, 1, 1, "", "A000015"], [311, 1, 1, "", "A000016"], [311, 1, 1, "", "A000027"], [311, 1, 1, "", "A000030"], [311, 1, 1, "", "A000032"], [311, 1, 1, "", "A000035"], [311, 1, 1, "", "A000040"], [311, 1, 1, "", "A000041"], [311, 1, 1, "", "A000043"], [311, 1, 1, "", "A000045"], [311, 1, 1, "", "A000069"], [311, 1, 1, "", "A000073"], [311, 1, 1, "", "A000079"], [311, 1, 1, "", "A000085"], [311, 1, 1, "", "A000100"], [311, 1, 1, "", "A000108"], [311, 1, 1, "", "A000110"], [311, 1, 1, "", "A000120"], [311, 1, 1, "", "A000124"], [311, 1, 1, "", "A000129"], [311, 1, 1, "", "A000142"], [311, 1, 1, "", "A000153"], [311, 1, 1, "", "A000165"], [311, 1, 1, "", "A000166"], [311, 1, 1, "", "A000169"], [311, 1, 1, "", "A000203"], [311, 1, 1, "", "A000204"], [311, 1, 1, "", "A000213"], [311, 1, 1, "", "A000217"], [311, 1, 1, "", "A000225"], [311, 1, 1, "", "A000244"], [311, 1, 1, "", "A000255"], [311, 1, 1, "", "A000261"], [311, 1, 1, "", "A000272"], [311, 1, 1, "", "A000290"], [311, 1, 1, "", "A000292"], [311, 1, 1, "", "A000302"], [311, 1, 1, "", "A000312"], [311, 1, 1, "", "A000326"], [311, 1, 1, "", "A000330"], [311, 1, 1, "", "A000396"], [311, 1, 1, "", "A000578"], [311, 1, 1, "", "A000583"], [311, 1, 1, "", "A000587"], [311, 1, 1, "", "A000668"], [311, 1, 1, "", "A000670"], [311, 1, 1, "", "A000720"], [311, 1, 1, "", "A000796"], [311, 1, 1, "", "A000961"], [311, 1, 1, "", "A000984"], [311, 1, 1, "", "A001006"], [311, 1, 1, "", "A001045"], [311, 1, 1, "", "A001055"], [311, 1, 1, "", "A001109"], [311, 1, 1, "", "A001110"], [311, 1, 1, "", "A001147"], [311, 1, 1, "", "A001157"], [311, 1, 1, "", "A001189"], [311, 1, 1, "", "A001221"], [311, 1, 1, "", "A001222"], [311, 1, 1, "", "A001227"], [311, 1, 1, "", "A001333"], [311, 1, 1, "", "A001358"], [311, 1, 1, "", "A001405"], [311, 1, 1, "", "A001477"], [311, 1, 1, "", "A001694"], [311, 1, 1, "", "A001836"], [311, 1, 1, "", "A001906"], [311, 1, 1, "", "A001909"], [311, 1, 1, "", "A001910"], [311, 1, 1, "", "A001969"], [311, 1, 1, "", "A002110"], [311, 1, 1, "", "A002113"], [311, 1, 1, "", "A002275"], [311, 1, 1, "", "A002378"], [311, 1, 1, "", "A002620"], [311, 1, 1, "", "A002808"], [311, 1, 1, "", "A003418"], [311, 1, 1, "", "A004086"], [311, 1, 1, "", "A004526"], [311, 1, 1, "", "A005100"], [311, 1, 1, "", "A005101"], [311, 1, 1, "", "A005117"], [311, 1, 1, "", "A005408"], [311, 1, 1, "", "A005843"], [311, 1, 1, "", "A006318"], [311, 1, 1, "", "A006530"], [311, 1, 1, "", "A006882"], [311, 1, 1, "", "A007318"], [311, 1, 1, "", "A008275"], [311, 1, 1, "", "A008277"], [311, 1, 1, "", "A008683"], [311, 1, 1, "", "A010060"], [311, 1, 1, "", "A015521"], [311, 1, 1, "", "A015523"], [311, 1, 1, "", "A015530"], [311, 1, 1, "", "A015531"], [311, 1, 1, "", "A015551"], [311, 1, 1, "", "A018252"], [311, 1, 1, "", "A020639"], [311, 1, 1, "", "A046660"], [311, 1, 1, "", "A049310"], [311, 1, 1, "", "A051959"], [311, 1, 1, "", "A055790"], [311, 1, 1, "", "A061084"], [311, 1, 1, "", "A064553"], [311, 1, 1, "", "A079922"], [311, 1, 1, "", "A079923"], [311, 1, 1, "", "A082411"], [311, 1, 1, "", "A083103"], [311, 1, 1, "", "A083104"], [311, 1, 1, "", "A083105"], [311, 1, 1, "", "A083216"], [311, 1, 1, "", "A090010"], [311, 1, 1, "", "A090012"], [311, 1, 1, "", "A090013"], [311, 1, 1, "", "A090014"], [311, 1, 1, "", "A090015"], [311, 1, 1, "", "A090016"], [311, 1, 1, "", "A109814"], [311, 1, 1, "", "A111774"], [311, 1, 1, "", "A111775"], [311, 1, 1, "", "A111787"], [311, 1, 1, "", "ExponentialNumbers"], [311, 1, 1, "", "ExtremesOfPermanentsSequence"], [311, 1, 1, "", "ExtremesOfPermanentsSequence2"], [311, 1, 1, "", "RecurrenceSequence"], [311, 1, 1, "", "RecurrenceSequence2"], [311, 1, 1, "", "Sloane"], [311, 1, 1, "", "SloaneSequence"], [311, 3, 1, "", "perm_mh"], [311, 3, 1, "", "recur_gen2"], [311, 3, 1, "", "recur_gen2b"], [311, 3, 1, "", "recur_gen3"]], "sage.combinat.sloane_functions.A000009": [[311, 2, 1, "", "cf"], [311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A000027": [[311, 4, 1, "", "link"]], "sage.combinat.sloane_functions.A000045": [[311, 2, 1, "", "fib"], [311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A000073": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A000120": [[311, 2, 1, "", "f"]], "sage.combinat.sloane_functions.A000213": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A000796": [[311, 2, 1, "", "list"], [311, 2, 1, "", "pi"]], "sage.combinat.sloane_functions.A000961": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A001055": [[311, 2, 1, "", "nwf"]], "sage.combinat.sloane_functions.A001110": [[311, 2, 1, "", "g"], [311, 4, 1, "", "link"]], "sage.combinat.sloane_functions.A001358": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A001694": [[311, 2, 1, "", "is_powerful"], [311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A001836": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A002113": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A002808": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A005100": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A005101": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A005117": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A006882": [[311, 2, 1, "", "df"], [311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A007318": [[311, 4, 1, "", "keyword"]], "sage.combinat.sloane_functions.A008275": [[311, 4, 1, "", "keyword"], [311, 2, 1, "", "s"]], "sage.combinat.sloane_functions.A008277": [[311, 4, 1, "", "keyword"], [311, 2, 1, "", "s2"]], "sage.combinat.sloane_functions.A020639": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.A049310": [[311, 4, 1, "", "keyword"]], "sage.combinat.sloane_functions.A051959": [[311, 2, 1, "", "g"]], "sage.combinat.sloane_functions.A061084": [[311, 4, 1, "", "keyword"]], "sage.combinat.sloane_functions.A111774": [[311, 2, 1, "", "is_number_of_the_third_kind"], [311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.ExtremesOfPermanentsSequence": [[311, 2, 1, "", "gen"], [311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.ExtremesOfPermanentsSequence2": [[311, 2, 1, "", "gen"]], "sage.combinat.sloane_functions.RecurrenceSequence": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.RecurrenceSequence2": [[311, 2, 1, "", "list"]], "sage.combinat.sloane_functions.SloaneSequence": [[311, 2, 1, "", "list"]], "sage.combinat.species": [[312, 0, 0, "-", "all"], [313, 0, 0, "-", "characteristic_species"], [314, 0, 0, "-", "composition_species"], [315, 0, 0, "-", "cycle_species"], [316, 0, 0, "-", "empty_species"], [317, 0, 0, "-", "functorial_composition_species"], [318, 0, 0, "-", "generating_series"], [319, 0, 0, "-", "library"], [320, 0, 0, "-", "linear_order_species"], [321, 0, 0, "-", "misc"], [322, 0, 0, "-", "partition_species"], [323, 0, 0, "-", "permutation_species"], [324, 0, 0, "-", "product_species"], [325, 0, 0, "-", "recursive_species"], [326, 0, 0, "-", "set_species"], [327, 0, 0, "-", "species"], [328, 0, 0, "-", "structure"], [329, 0, 0, "-", "subset_species"], [330, 0, 0, "-", "sum_species"]], "sage.combinat.species.characteristic_species": [[313, 1, 1, "", "CharacteristicSpecies"], [313, 1, 1, "", "CharacteristicSpeciesStructure"], [313, 4, 1, "", "CharacteristicSpecies_class"], [313, 1, 1, "", "EmptySetSpecies"], [313, 4, 1, "", "EmptySetSpecies_class"], [313, 1, 1, "", "SingletonSpecies"], [313, 4, 1, "", "SingletonSpecies_class"]], "sage.combinat.species.characteristic_species.CharacteristicSpeciesStructure": [[313, 2, 1, "", "automorphism_group"], [313, 2, 1, "", "canonical_label"], [313, 2, 1, "", "transport"]], "sage.combinat.species.composition_species": [[314, 1, 1, "", "CompositionSpecies"], [314, 1, 1, "", "CompositionSpeciesStructure"], [314, 4, 1, "", "CompositionSpecies_class"]], "sage.combinat.species.composition_species.CompositionSpecies": [[314, 2, 1, "", "weight_ring"]], "sage.combinat.species.composition_species.CompositionSpeciesStructure": [[314, 2, 1, "", "change_labels"], [314, 2, 1, "", "transport"]], "sage.combinat.species.cycle_species": [[315, 1, 1, "", "CycleSpecies"], [315, 1, 1, "", "CycleSpeciesStructure"], [315, 4, 1, "", "CycleSpecies_class"]], "sage.combinat.species.cycle_species.CycleSpeciesStructure": [[315, 2, 1, "", "automorphism_group"], [315, 2, 1, "", "canonical_label"], [315, 2, 1, "", "permutation_group_element"], [315, 2, 1, "", "transport"]], "sage.combinat.species.empty_species": [[316, 1, 1, "", "EmptySpecies"], [316, 4, 1, "", "EmptySpecies_class"]], "sage.combinat.species.functorial_composition_species": [[317, 1, 1, "", "FunctorialCompositionSpecies"], [317, 4, 1, "", "FunctorialCompositionSpecies_class"], [317, 1, 1, "", "FunctorialCompositionStructure"]], "sage.combinat.species.functorial_composition_species.FunctorialCompositionSpecies": [[317, 2, 1, "", "weight_ring"]], "sage.combinat.species.generating_series": [[318, 1, 1, "", "CycleIndexSeries"], [318, 1, 1, "", "CycleIndexSeriesRing"], [318, 3, 1, "", "ExponentialCycleIndexSeries"], [318, 1, 1, "", "ExponentialGeneratingSeries"], [318, 1, 1, "", "ExponentialGeneratingSeriesRing"], [318, 3, 1, "", "LogarithmCycleIndexSeries"], [318, 1, 1, "", "OrdinaryGeneratingSeries"], [318, 1, 1, "", "OrdinaryGeneratingSeriesRing"]], "sage.combinat.species.generating_series.CycleIndexSeries": [[318, 2, 1, "", "coefficient_cycle_type"], [318, 2, 1, "", "count"], [318, 2, 1, "", "derivative"], [318, 2, 1, "", "exponential"], [318, 2, 1, "", "generating_series"], [318, 2, 1, "", "isotype_generating_series"], [318, 2, 1, "", "logarithm"], [318, 2, 1, "", "pointing"]], "sage.combinat.species.generating_series.CycleIndexSeriesRing": [[318, 4, 1, "", "Element"]], "sage.combinat.species.generating_series.ExponentialGeneratingSeries": [[318, 2, 1, "", "count"], [318, 2, 1, "", "counts"], [318, 2, 1, "", "functorial_composition"]], "sage.combinat.species.generating_series.ExponentialGeneratingSeriesRing": [[318, 4, 1, "", "Element"]], "sage.combinat.species.generating_series.OrdinaryGeneratingSeries": [[318, 2, 1, "", "count"], [318, 2, 1, "", "counts"]], "sage.combinat.species.generating_series.OrdinaryGeneratingSeriesRing": [[318, 4, 1, "", "Element"]], "sage.combinat.species.library": [[319, 3, 1, "", "BinaryForestSpecies"], [319, 3, 1, "", "BinaryTreeSpecies"], [319, 3, 1, "", "SimpleGraphSpecies"]], "sage.combinat.species.linear_order_species": [[320, 1, 1, "", "LinearOrderSpecies"], [320, 1, 1, "", "LinearOrderSpeciesStructure"], [320, 4, 1, "", "LinearOrderSpecies_class"]], "sage.combinat.species.linear_order_species.LinearOrderSpeciesStructure": [[320, 2, 1, "", "automorphism_group"], [320, 2, 1, "", "canonical_label"], [320, 2, 1, "", "transport"]], "sage.combinat.species.misc": [[321, 3, 1, "", "accept_size"], [321, 3, 1, "", "change_support"]], "sage.combinat.species.partition_species": [[322, 1, 1, "", "PartitionSpecies"], [322, 1, 1, "", "PartitionSpeciesStructure"], [322, 4, 1, "", "PartitionSpecies_class"]], "sage.combinat.species.partition_species.PartitionSpeciesStructure": [[322, 2, 1, "", "automorphism_group"], [322, 2, 1, "", "canonical_label"], [322, 2, 1, "", "change_labels"], [322, 2, 1, "", "transport"]], "sage.combinat.species.permutation_species": [[323, 1, 1, "", "PermutationSpecies"], [323, 1, 1, "", "PermutationSpeciesStructure"], [323, 4, 1, "", "PermutationSpecies_class"]], "sage.combinat.species.permutation_species.PermutationSpeciesStructure": [[323, 2, 1, "", "automorphism_group"], [323, 2, 1, "", "canonical_label"], [323, 2, 1, "", "permutation_group_element"], [323, 2, 1, "", "transport"]], "sage.combinat.species.product_species": [[324, 1, 1, "", "ProductSpecies"], [324, 1, 1, "", "ProductSpeciesStructure"], [324, 4, 1, "", "ProductSpecies_class"]], "sage.combinat.species.product_species.ProductSpecies": [[324, 2, 1, "", "left_factor"], [324, 2, 1, "", "right_factor"], [324, 2, 1, "", "weight_ring"]], "sage.combinat.species.product_species.ProductSpeciesStructure": [[324, 2, 1, "", "automorphism_group"], [324, 2, 1, "", "canonical_label"], [324, 2, 1, "", "change_labels"], [324, 2, 1, "", "transport"]], "sage.combinat.species.recursive_species": [[325, 1, 1, "", "CombinatorialSpecies"], [325, 1, 1, "", "CombinatorialSpeciesStructure"]], "sage.combinat.species.recursive_species.CombinatorialSpecies": [[325, 2, 1, "", "define"], [325, 2, 1, "", "weight_ring"]], "sage.combinat.species.set_species": [[326, 1, 1, "", "SetSpecies"], [326, 1, 1, "", "SetSpeciesStructure"], [326, 4, 1, "", "SetSpecies_class"]], "sage.combinat.species.set_species.SetSpeciesStructure": [[326, 2, 1, "", "automorphism_group"], [326, 2, 1, "", "canonical_label"], [326, 2, 1, "", "transport"]], "sage.combinat.species.species": [[327, 1, 1, "", "GenericCombinatorialSpecies"]], "sage.combinat.species.species.GenericCombinatorialSpecies": [[327, 2, 1, "", "algebraic_equation_system"], [327, 2, 1, "", "composition"], [327, 2, 1, "", "cycle_index_series"], [327, 2, 1, "", "digraph"], [327, 2, 1, "", "functorial_composition"], [327, 2, 1, "", "generating_series"], [327, 2, 1, "", "is_weighted"], [327, 2, 1, "", "isotype_generating_series"], [327, 2, 1, "", "isotypes"], [327, 2, 1, "", "product"], [327, 2, 1, "", "restricted"], [327, 2, 1, "", "structures"], [327, 2, 1, "", "sum"], [327, 2, 1, "", "weight_ring"], [327, 2, 1, "", "weighted"]], "sage.combinat.species.structure": [[328, 1, 1, "", "GenericSpeciesStructure"], [328, 1, 1, "", "IsotypesWrapper"], [328, 1, 1, "", "SimpleIsotypesWrapper"], [328, 1, 1, "", "SimpleStructuresWrapper"], [328, 4, 1, "", "SpeciesStructure"], [328, 1, 1, "", "SpeciesStructureWrapper"], [328, 1, 1, "", "SpeciesWrapper"], [328, 1, 1, "", "StructuresWrapper"]], "sage.combinat.species.structure.GenericSpeciesStructure": [[328, 2, 1, "", "change_labels"], [328, 2, 1, "", "is_isomorphic"], [328, 2, 1, "", "labels"], [328, 2, 1, "", "parent"]], "sage.combinat.species.structure.SpeciesStructureWrapper": [[328, 2, 1, "", "canonical_label"], [328, 2, 1, "", "change_labels"], [328, 2, 1, "", "transport"]], "sage.combinat.species.structure.SpeciesWrapper": [[328, 2, 1, "", "cardinality"], [328, 2, 1, "", "labels"]], "sage.combinat.species.subset_species": [[329, 1, 1, "", "SubsetSpecies"], [329, 1, 1, "", "SubsetSpeciesStructure"], [329, 4, 1, "", "SubsetSpecies_class"]], "sage.combinat.species.subset_species.SubsetSpeciesStructure": [[329, 2, 1, "", "automorphism_group"], [329, 2, 1, "", "canonical_label"], [329, 2, 1, "", "complement"], [329, 2, 1, "", "label_subset"], [329, 2, 1, "", "transport"]], "sage.combinat.species.sum_species": [[330, 1, 1, "", "SumSpecies"], [330, 1, 1, "", "SumSpeciesStructure"], [330, 4, 1, "", "SumSpecies_class"]], "sage.combinat.species.sum_species.SumSpecies": [[330, 2, 1, "", "left_summand"], [330, 2, 1, "", "right_summand"], [330, 2, 1, "", "weight_ring"]], "sage.combinat.subset": [[331, 1, 1, "", "SubMultiset_s"], [331, 1, 1, "", "SubMultiset_sk"], [331, 3, 1, "", "Subsets"], [331, 1, 1, "", "SubsetsSorted"], [331, 1, 1, "", "Subsets_s"], [331, 1, 1, "", "Subsets_sk"], [331, 3, 1, "", "dict_to_list"], [331, 3, 1, "", "list_to_dict"]], "sage.combinat.subset.SubMultiset_s": [[331, 2, 1, "", "cardinality"], [331, 4, 1, "", "element_class"], [331, 2, 1, "", "generating_serie"], [331, 2, 1, "", "random_element"]], "sage.combinat.subset.SubMultiset_sk": [[331, 2, 1, "", "cardinality"], [331, 2, 1, "", "generating_serie"], [331, 2, 1, "", "random_element"]], "sage.combinat.subset.SubsetsSorted": [[331, 4, 1, "", "element_class"], [331, 2, 1, "", "first"], [331, 2, 1, "", "last"], [331, 2, 1, "", "random_element"], [331, 2, 1, "", "unrank"]], "sage.combinat.subset.Subsets_s": [[331, 2, 1, "", "cardinality"], [331, 4, 1, "", "element_class"], [331, 2, 1, "", "first"], [331, 2, 1, "", "last"], [331, 2, 1, "", "lattice"], [331, 2, 1, "", "random_element"], [331, 2, 1, "", "rank"], [331, 2, 1, "", "underlying_set"], [331, 2, 1, "", "unrank"]], "sage.combinat.subset.Subsets_sk": [[331, 2, 1, "", "an_element"], [331, 2, 1, "", "cardinality"], [331, 2, 1, "", "first"], [331, 2, 1, "", "last"], [331, 2, 1, "", "random_element"], [331, 2, 1, "", "rank"], [331, 2, 1, "", "unrank"]], "sage.combinat.subsets_hereditary": [[332, 3, 1, "", "subsets_with_hereditary_property"]], "sage.combinat.subsets_pairwise": [[333, 1, 1, "", "PairwiseCompatibleSubsets"]], "sage.combinat.subsets_pairwise.PairwiseCompatibleSubsets": [[333, 2, 1, "", "children"], [333, 2, 1, "", "post_process"]], "sage.combinat.subword": [[334, 3, 1, "", "Subwords"], [334, 1, 1, "", "Subwords_w"], [334, 1, 1, "", "Subwords_wk"], [334, 3, 1, "", "smallest_positions"]], "sage.combinat.subword.Subwords_w": [[334, 2, 1, "", "cardinality"], [334, 2, 1, "", "first"], [334, 2, 1, "", "last"], [334, 2, 1, "", "random_element"]], "sage.combinat.subword.Subwords_wk": [[334, 2, 1, "", "cardinality"], [334, 2, 1, "", "first"], [334, 2, 1, "", "last"], [334, 2, 1, "", "random_element"]], "sage.combinat.subword_complex": [[335, 1, 1, "", "SubwordComplex"], [335, 1, 1, "", "SubwordComplexFacet"]], "sage.combinat.subword_complex.SubwordComplex": [[335, 4, 1, "", "Element"], [335, 2, 1, "", "barycenter"], [335, 2, 1, "", "brick_fan"], [335, 2, 1, "", "brick_polytope"], [335, 2, 1, "", "brick_vectors"], [335, 2, 1, "", "cartan_type"], [335, 2, 1, "", "cover_relations"], [335, 2, 1, "", "dimension"], [335, 2, 1, "", "facets"], [335, 2, 1, "", "greedy_facet"], [335, 2, 1, "", "group"], [335, 2, 1, "", "increasing_flip_graph"], [335, 2, 1, "", "increasing_flip_poset"], [335, 2, 1, "", "interval"], [335, 2, 1, "", "is_ball"], [335, 2, 1, "", "is_double_root_free"], [335, 2, 1, "", "is_pure"], [335, 2, 1, "", "is_root_independent"], [335, 2, 1, "", "is_sphere"], [335, 2, 1, "", "kappa_preimages"], [335, 2, 1, "", "minkowski_summand"], [335, 2, 1, "", "pi"], [335, 2, 1, "", "word"]], "sage.combinat.subword_complex.SubwordComplexFacet": [[335, 2, 1, "", "brick_vector"], [335, 2, 1, "", "extended_root_configuration"], [335, 2, 1, "", "extended_weight_configuration"], [335, 2, 1, "", "flip"], [335, 2, 1, "", "is_vertex"], [335, 2, 1, "", "kappa_preimage"], [335, 2, 1, "", "plot"], [335, 2, 1, "", "root_cone"], [335, 2, 1, "", "root_configuration"], [335, 2, 1, "", "show"], [335, 2, 1, "", "upper_root_configuration"], [335, 2, 1, "", "weight_cone"], [335, 2, 1, "", "weight_configuration"]], "sage.combinat.super_tableau": [[336, 1, 1, "", "SemistandardSuperTableau"], [336, 1, 1, "", "SemistandardSuperTableaux"], [336, 1, 1, "", "SemistandardSuperTableaux_all"], [336, 1, 1, "", "StandardSuperTableau"], [336, 1, 1, "", "StandardSuperTableaux"], [336, 1, 1, "", "StandardSuperTableaux_all"], [336, 1, 1, "", "StandardSuperTableaux_shape"], [336, 1, 1, "", "StandardSuperTableaux_size"]], "sage.combinat.super_tableau.SemistandardSuperTableau": [[336, 2, 1, "", "check"]], "sage.combinat.super_tableau.SemistandardSuperTableaux": [[336, 4, 1, "", "Element"]], "sage.combinat.super_tableau.StandardSuperTableau": [[336, 2, 1, "", "check"], [336, 2, 1, "", "is_standard"]], "sage.combinat.super_tableau.StandardSuperTableaux": [[336, 4, 1, "", "Element"]], "sage.combinat.super_tableau.StandardSuperTableaux_shape": [[336, 2, 1, "", "cardinality"]], "sage.combinat.super_tableau.StandardSuperTableaux_size": [[336, 2, 1, "", "cardinality"]], "sage.combinat.superpartition": [[337, 1, 1, "", "SuperPartition"], [337, 1, 1, "", "SuperPartitions"], [337, 1, 1, "", "SuperPartitions_all"], [337, 1, 1, "", "SuperPartitions_n"], [337, 1, 1, "", "SuperPartitions_n_m"]], "sage.combinat.superpartition.SuperPartition": [[337, 2, 1, "", "a_part"], [337, 2, 1, "", "add_horizontal_border_strip_star"], [337, 2, 1, "", "add_horizontal_border_strip_star_bar"], [337, 2, 1, "", "antisymmetric_part"], [337, 2, 1, "", "bi_degree"], [337, 2, 1, "", "bosonic_degree"], [337, 2, 1, "", "bosonic_length"], [337, 2, 1, "", "check"], [337, 2, 1, "", "conjugate"], [337, 2, 1, "", "degree"], [337, 2, 1, "", "dominates"], [337, 2, 1, "", "fermionic_degree"], [337, 2, 1, "", "fermionic_sector"], [337, 2, 1, "", "from_circled_diagram"], [337, 2, 1, "", "length"], [337, 2, 1, "", "s_part"], [337, 2, 1, "", "shape_circled_diagram"], [337, 2, 1, "", "sign"], [337, 2, 1, "", "symmetric_part"], [337, 2, 1, "", "to_circled_diagram"], [337, 2, 1, "", "to_composition"], [337, 2, 1, "", "to_list"], [337, 2, 1, "", "to_partition"], [337, 2, 1, "", "zee"]], "sage.combinat.superpartition.SuperPartitions": [[337, 4, 1, "", "Element"], [337, 4, 1, "", "options"]], "sage.combinat.symmetric_group_algebra": [[338, 3, 1, "", "HeckeAlgebraSymmetricGroupT"], [338, 1, 1, "", "HeckeAlgebraSymmetricGroup_generic"], [338, 1, 1, "", "HeckeAlgebraSymmetricGroup_t"], [338, 3, 1, "", "SymmetricGroupAlgebra"], [338, 1, 1, "", "SymmetricGroupAlgebra_n"], [338, 3, 1, "", "a"], [338, 3, 1, "", "b"], [338, 3, 1, "", "e"], [338, 3, 1, "", "e_hat"], [338, 3, 1, "", "e_ik"], [338, 3, 1, "", "epsilon"], [338, 3, 1, "", "epsilon_ik"], [338, 3, 1, "", "kappa"], [338, 3, 1, "", "pi_ik"], [338, 3, 1, "", "seminormal_test"]], "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_generic": [[338, 2, 1, "", "one_basis"], [338, 2, 1, "", "q"]], "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_t": [[338, 2, 1, "", "algebra_generators"], [338, 2, 1, "", "jucys_murphy"], [338, 2, 1, "", "product_on_basis"], [338, 2, 1, "", "t"], [338, 2, 1, "", "t_action"], [338, 2, 1, "", "t_action_on_basis"]], "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n": [[338, 2, 1, "", "algebra_generators"], [338, 2, 1, "", "antipode"], [338, 2, 1, "", "binary_unshuffle_sum"], [338, 2, 1, "", "canonical_embedding"], [338, 2, 1, "", "cell_module"], [338, 2, 1, "", "cell_module_indices"], [338, 2, 1, "", "cell_poset"], [338, 2, 1, "", "central_orthogonal_idempotent"], [338, 2, 1, "", "central_orthogonal_idempotents"], [338, 2, 1, "", "dft"], [338, 2, 1, "", "epsilon_ik"], [338, 2, 1, "", "jucys_murphy"], [338, 2, 1, "", "left_action_product"], [338, 2, 1, "", "monomial_from_smaller_permutation"], [338, 2, 1, "", "retract_direct_product"], [338, 2, 1, "", "retract_okounkov_vershik"], [338, 2, 1, "", "retract_plain"], [338, 2, 1, "", "right_action_product"], [338, 2, 1, "", "rsw_shuffling_element"], [338, 2, 1, "", "semi_rsw_element"], [338, 2, 1, "", "seminormal_basis"]], "sage.combinat.symmetric_group_representations": [[339, 1, 1, "", "SpechtRepresentation"], [339, 1, 1, "", "SpechtRepresentations"], [339, 3, 1, "", "SymmetricGroupRepresentation"], [339, 1, 1, "", "SymmetricGroupRepresentation_generic_class"], [339, 3, 1, "", "SymmetricGroupRepresentations"], [339, 1, 1, "", "SymmetricGroupRepresentations_class"], [339, 1, 1, "", "YoungRepresentation_Orthogonal"], [339, 1, 1, "", "YoungRepresentation_Seminormal"], [339, 1, 1, "", "YoungRepresentation_generic"], [339, 1, 1, "", "YoungRepresentations_Orthogonal"], [339, 1, 1, "", "YoungRepresentations_Seminormal"], [339, 3, 1, "", "partition_to_vector_of_contents"]], "sage.combinat.symmetric_group_representations.SpechtRepresentation": [[339, 2, 1, "", "representation_matrix"], [339, 2, 1, "", "scalar_product"], [339, 2, 1, "", "scalar_product_matrix"]], "sage.combinat.symmetric_group_representations.SpechtRepresentations": [[339, 4, 1, "", "Element"]], "sage.combinat.symmetric_group_representations.SymmetricGroupRepresentation_generic_class": [[339, 2, 1, "", "to_character"], [339, 2, 1, "", "verify_representation"]], "sage.combinat.symmetric_group_representations.SymmetricGroupRepresentations_class": [[339, 2, 1, "", "cardinality"]], "sage.combinat.symmetric_group_representations.YoungRepresentation_generic": [[339, 2, 1, "", "representation_matrix"], [339, 2, 1, "", "representation_matrix_for_simple_transposition"]], "sage.combinat.symmetric_group_representations.YoungRepresentations_Orthogonal": [[339, 4, 1, "", "Element"]], "sage.combinat.symmetric_group_representations.YoungRepresentations_Seminormal": [[339, 4, 1, "", "Element"]], "sage.combinat.t_sequences": [[340, 3, 1, "", "T_sequences_construction_from_base_sequences"], [340, 3, 1, "", "T_sequences_construction_from_turyn_sequences"], [340, 3, 1, "", "T_sequences_smallcases"], [340, 3, 1, "", "base_sequences_construction"], [340, 3, 1, "", "base_sequences_smallcases"], [340, 3, 1, "", "is_T_sequences_set"], [340, 3, 1, "", "is_base_sequences_tuple"], [340, 3, 1, "", "is_skew"], [340, 3, 1, "", "is_symmetric"], [340, 3, 1, "", "turyn_sequences_smallcases"], [340, 3, 1, "", "turyn_type_sequences_smallcases"]], "sage.combinat.tableau": [[341, 1, 1, "", "IncreasingTableau"], [341, 1, 1, "", "IncreasingTableaux"], [341, 1, 1, "", "IncreasingTableaux_all"], [341, 1, 1, "", "IncreasingTableaux_shape"], [341, 1, 1, "", "IncreasingTableaux_shape_inf"], [341, 1, 1, "", "IncreasingTableaux_shape_weight"], [341, 1, 1, "", "IncreasingTableaux_size"], [341, 1, 1, "", "IncreasingTableaux_size_inf"], [341, 1, 1, "", "IncreasingTableaux_size_weight"], [341, 1, 1, "", "RowStandardTableau"], [341, 1, 1, "", "RowStandardTableaux"], [341, 1, 1, "", "RowStandardTableaux_all"], [341, 1, 1, "", "RowStandardTableaux_shape"], [341, 1, 1, "", "RowStandardTableaux_size"], [341, 1, 1, "", "SemistandardTableau"], [341, 1, 1, "", "SemistandardTableaux"], [341, 1, 1, "", "SemistandardTableaux_all"], [341, 1, 1, "", "SemistandardTableaux_shape"], [341, 1, 1, "", "SemistandardTableaux_shape_inf"], [341, 1, 1, "", "SemistandardTableaux_shape_weight"], [341, 1, 1, "", "SemistandardTableaux_size"], [341, 1, 1, "", "SemistandardTableaux_size_inf"], [341, 1, 1, "", "SemistandardTableaux_size_weight"], [341, 1, 1, "", "StandardTableau"], [341, 1, 1, "", "StandardTableaux"], [341, 1, 1, "", "StandardTableaux_all"], [341, 1, 1, "", "StandardTableaux_shape"], [341, 1, 1, "", "StandardTableaux_size"], [341, 1, 1, "", "Tableau"], [341, 1, 1, "", "Tableau_class"], [341, 1, 1, "", "Tableaux"], [341, 1, 1, "", "Tableaux_all"], [341, 1, 1, "", "Tableaux_size"], [341, 3, 1, "", "from_chain"], [341, 3, 1, "", "from_shape_and_word"], [341, 3, 1, "", "symmetric_group_action_on_values"], [341, 3, 1, "", "unmatched_places"]], "sage.combinat.tableau.IncreasingTableau": [[341, 2, 1, "", "K_bender_knuth"], [341, 2, 1, "", "K_evacuation"], [341, 2, 1, "", "K_promotion"], [341, 2, 1, "", "K_promotion_inverse"], [341, 2, 1, "", "check"], [341, 2, 1, "", "descent_set"], [341, 2, 1, "", "dual_K_evacuation"]], "sage.combinat.tableau.IncreasingTableaux": [[341, 4, 1, "", "Element"]], "sage.combinat.tableau.RowStandardTableau": [[341, 2, 1, "", "check"]], "sage.combinat.tableau.RowStandardTableaux": [[341, 4, 1, "", "Element"]], "sage.combinat.tableau.RowStandardTableaux_shape": [[341, 2, 1, "", "cardinality"]], "sage.combinat.tableau.RowStandardTableaux_size": [[341, 2, 1, "", "an_element"]], "sage.combinat.tableau.SemistandardTableau": [[341, 2, 1, "", "check"]], "sage.combinat.tableau.SemistandardTableaux": [[341, 4, 1, "", "Element"]], "sage.combinat.tableau.SemistandardTableaux_all": [[341, 2, 1, "", "list"]], "sage.combinat.tableau.SemistandardTableaux_shape": [[341, 2, 1, "", "cardinality"], [341, 2, 1, "", "random_element"]], "sage.combinat.tableau.SemistandardTableaux_shape_weight": [[341, 2, 1, "", "cardinality"], [341, 2, 1, "", "list"]], "sage.combinat.tableau.SemistandardTableaux_size": [[341, 2, 1, "", "cardinality"], [341, 2, 1, "", "random_element"]], "sage.combinat.tableau.SemistandardTableaux_size_inf": [[341, 2, 1, "", "list"]], "sage.combinat.tableau.SemistandardTableaux_size_weight": [[341, 2, 1, "", "cardinality"]], "sage.combinat.tableau.StandardTableau": [[341, 2, 1, "", "check"], [341, 2, 1, "", "dominates"], [341, 2, 1, "", "down"], [341, 2, 1, "", "down_list"], [341, 2, 1, "", "is_standard"], [341, 2, 1, "", "promotion"], [341, 2, 1, "", "promotion_inverse"], [341, 2, 1, "", "standard_descents"], [341, 2, 1, "", "standard_major_index"], [341, 2, 1, "", "standard_number_of_descents"], [341, 2, 1, "", "up"], [341, 2, 1, "", "up_list"]], "sage.combinat.tableau.StandardTableaux": [[341, 4, 1, "", "Element"]], "sage.combinat.tableau.StandardTableaux_shape": [[341, 2, 1, "", "cardinality"], [341, 2, 1, "", "list"], [341, 2, 1, "", "random_element"]], "sage.combinat.tableau.StandardTableaux_size": [[341, 2, 1, "", "cardinality"], [341, 2, 1, "", "random_element"]], "sage.combinat.tableau.Tableau": [[341, 2, 1, "", "add_entry"], [341, 2, 1, "", "anti_restrict"], [341, 2, 1, "", "atom"], [341, 2, 1, "", "bender_knuth_involution"], [341, 2, 1, "", "bump"], [341, 2, 1, "", "bump_multiply"], [341, 2, 1, "", "catabolism"], [341, 2, 1, "", "catabolism_projector"], [341, 2, 1, "", "catabolism_sequence"], [341, 2, 1, "", "cells"], [341, 2, 1, "", "cells_containing"], [341, 2, 1, "", "charge"], [341, 2, 1, "", "check"], [341, 2, 1, "", "cocharge"], [341, 2, 1, "", "codegree"], [341, 2, 1, "", "column_stabilizer"], [341, 2, 1, "", "components"], [341, 2, 1, "", "conjugate"], [341, 2, 1, "", "content"], [341, 2, 1, "", "corners"], [341, 2, 1, "", "degree"], [341, 2, 1, "", "descents"], [341, 2, 1, "", "entries"], [341, 2, 1, "", "entry"], [341, 2, 1, "", "evacuation"], [341, 2, 1, "", "evaluation"], [341, 2, 1, "", "first_column_descent"], [341, 2, 1, "", "first_row_descent"], [341, 2, 1, "", "flush"], [341, 2, 1, "", "height"], [341, 2, 1, "", "hillman_grassl"], [341, 2, 1, "", "insert_word"], [341, 2, 1, "", "inversion_number"], [341, 2, 1, "", "inversions"], [341, 2, 1, "", "is_column_increasing"], [341, 2, 1, "", "is_column_strict"], [341, 2, 1, "", "is_increasing"], [341, 2, 1, "", "is_k_tableau"], [341, 2, 1, "", "is_key_tableau"], [341, 2, 1, "", "is_rectangular"], [341, 2, 1, "", "is_row_increasing"], [341, 2, 1, "", "is_row_strict"], [341, 2, 1, "", "is_semistandard"], [341, 2, 1, "", "is_standard"], [341, 2, 1, "", "k_weight"], [341, 2, 1, "", "lambda_catabolism"], [341, 2, 1, "", "last_letter_lequal"], [341, 2, 1, "", "left_key_tableau"], [341, 2, 1, "", "leq"], [341, 2, 1, "", "level"], [341, 2, 1, "", "major_index"], [341, 2, 1, "", "plot"], [341, 2, 1, "", "pp"], [341, 2, 1, "", "promotion"], [341, 2, 1, "", "promotion_inverse"], [341, 2, 1, "", "promotion_operator"], [341, 2, 1, "", "raise_action_from_words"], [341, 2, 1, "", "reading_word_permutation"], [341, 2, 1, "", "reduced_column_word"], [341, 2, 1, "", "reduced_lambda_catabolism"], [341, 2, 1, "", "reduced_row_word"], [341, 2, 1, "", "residue"], [341, 2, 1, "", "residue_sequence"], [341, 2, 1, "", "restrict"], [341, 2, 1, "", "restriction_shape"], [341, 2, 1, "", "reverse_bump"], [341, 2, 1, "", "right_key_tableau"], [341, 2, 1, "", "rotate_180"], [341, 2, 1, "", "row_stabilizer"], [341, 2, 1, "", "schensted_insert"], [341, 2, 1, "", "schuetzenberger_involution"], [341, 2, 1, "", "seg"], [341, 2, 1, "", "shape"], [341, 2, 1, "", "size"], [341, 2, 1, "", "slide_multiply"], [341, 2, 1, "", "socle"], [341, 2, 1, "", "standardization"], [341, 2, 1, "", "sulzgruber_correspondence"], [341, 2, 1, "", "symmetric_group_action_on_entries"], [341, 2, 1, "", "symmetric_group_action_on_values"], [341, 2, 1, "", "to_Gelfand_Tsetlin_pattern"], [341, 2, 1, "", "to_chain"], [341, 2, 1, "", "to_list"], [341, 2, 1, "", "to_sign_matrix"], [341, 2, 1, "", "to_word"], [341, 2, 1, "", "to_word_by_column"], [341, 2, 1, "", "to_word_by_row"], [341, 2, 1, "", "vertical_flip"], [341, 2, 1, "", "weight"]], "sage.combinat.tableau.Tableaux": [[341, 4, 1, "", "Element"], [341, 4, 1, "", "options"]], "sage.combinat.tableau.Tableaux_all": [[341, 2, 1, "", "an_element"]], "sage.combinat.tableau.Tableaux_size": [[341, 2, 1, "", "an_element"]], "sage.combinat.tableau_residues": [[342, 1, 1, "", "ResidueSequence"], [342, 1, 1, "", "ResidueSequences"]], "sage.combinat.tableau_residues.ResidueSequence": [[342, 2, 1, "", "base_ring"], [342, 2, 1, "", "block"], [342, 2, 1, "", "check"], [342, 2, 1, "", "level"], [342, 2, 1, "", "multicharge"], [342, 2, 1, "", "negative"], [342, 2, 1, "", "quantum_characteristic"], [342, 2, 1, "", "residues"], [342, 2, 1, "", "restrict"], [342, 2, 1, "", "restrict_row"], [342, 2, 1, "", "row_standard_tableaux"], [342, 2, 1, "", "size"], [342, 2, 1, "", "standard_tableaux"], [342, 2, 1, "", "swap_residues"]], "sage.combinat.tableau_residues.ResidueSequences": [[342, 4, 1, "", "Element"], [342, 2, 1, "", "an_element"], [342, 2, 1, "", "cell_residue"], [342, 2, 1, "", "check_element"]], "sage.combinat.tableau_tuple": [[343, 1, 1, "", "RowStandardTableauTuple"], [343, 1, 1, "", "RowStandardTableauTuples"], [343, 1, 1, "", "RowStandardTableauTuples_all"], [343, 1, 1, "", "RowStandardTableauTuples_level"], [343, 1, 1, "", "RowStandardTableauTuples_level_size"], [343, 1, 1, "", "RowStandardTableauTuples_residue"], [343, 1, 1, "", "RowStandardTableauTuples_residue_shape"], [343, 1, 1, "", "RowStandardTableauTuples_shape"], [343, 1, 1, "", "RowStandardTableauTuples_size"], [343, 1, 1, "", "StandardTableauTuple"], [343, 1, 1, "", "StandardTableauTuples"], [343, 1, 1, "", "StandardTableauTuples_all"], [343, 1, 1, "", "StandardTableauTuples_level"], [343, 1, 1, "", "StandardTableauTuples_level_size"], [343, 1, 1, "", "StandardTableauTuples_shape"], [343, 1, 1, "", "StandardTableauTuples_size"], [343, 1, 1, "", "StandardTableaux_residue"], [343, 1, 1, "", "StandardTableaux_residue_shape"], [343, 1, 1, "", "TableauTuple"], [343, 1, 1, "", "TableauTuples"], [343, 1, 1, "", "TableauTuples_all"], [343, 1, 1, "", "TableauTuples_level"], [343, 1, 1, "", "TableauTuples_level_size"], [343, 1, 1, "", "TableauTuples_size"]], "sage.combinat.tableau_tuple.RowStandardTableauTuple": [[343, 2, 1, "", "codegree"], [343, 2, 1, "", "degree"], [343, 2, 1, "", "inverse"], [343, 2, 1, "", "residue_sequence"]], "sage.combinat.tableau_tuple.RowStandardTableauTuples": [[343, 4, 1, "", "Element"], [343, 4, 1, "", "level_one_parent_class"], [343, 2, 1, "", "shape"]], "sage.combinat.tableau_tuple.RowStandardTableauTuples_all": [[343, 2, 1, "", "an_element"]], "sage.combinat.tableau_tuple.RowStandardTableauTuples_level": [[343, 2, 1, "", "an_element"]], "sage.combinat.tableau_tuple.RowStandardTableauTuples_level_size": [[343, 2, 1, "", "an_element"]], "sage.combinat.tableau_tuple.RowStandardTableauTuples_residue": [[343, 2, 1, "", "an_element"], [343, 2, 1, "", "level"], [343, 2, 1, "", "multicharge"], [343, 2, 1, "", "quantum_characteristic"], [343, 2, 1, "", "residue_sequence"], [343, 2, 1, "", "size"]], "sage.combinat.tableau_tuple.RowStandardTableauTuples_shape": [[343, 2, 1, "", "an_element"], [343, 2, 1, "", "cardinality"]], "sage.combinat.tableau_tuple.RowStandardTableauTuples_size": [[343, 2, 1, "", "an_element"]], "sage.combinat.tableau_tuple.StandardTableauTuple": [[343, 2, 1, "", "dominates"], [343, 2, 1, "", "restrict"], [343, 2, 1, "", "to_chain"]], "sage.combinat.tableau_tuple.StandardTableauTuples": [[343, 4, 1, "", "Element"], [343, 4, 1, "", "level_one_parent_class"], [343, 2, 1, "", "shape"]], "sage.combinat.tableau_tuple.StandardTableauTuples_level": [[343, 2, 1, "", "an_element"]], "sage.combinat.tableau_tuple.StandardTableauTuples_level_size": [[343, 2, 1, "", "an_element"], [343, 2, 1, "", "cardinality"]], "sage.combinat.tableau_tuple.StandardTableauTuples_shape": [[343, 2, 1, "", "an_element"], [343, 2, 1, "", "cardinality"], [343, 2, 1, "", "last"], [343, 2, 1, "", "random_element"]], "sage.combinat.tableau_tuple.StandardTableauTuples_size": [[343, 2, 1, "", "an_element"]], "sage.combinat.tableau_tuple.StandardTableaux_residue_shape": [[343, 2, 1, "", "an_element"]], "sage.combinat.tableau_tuple.TableauTuple": [[343, 4, 1, "", "Element"], [343, 2, 1, "", "add_entry"], [343, 2, 1, "", "cells_containing"], [343, 2, 1, "", "charge"], [343, 2, 1, "", "cocharge"], [343, 2, 1, "", "column_stabilizer"], [343, 2, 1, "", "components"], [343, 2, 1, "", "conjugate"], [343, 2, 1, "", "content"], [343, 2, 1, "", "entries"], [343, 2, 1, "", "entry"], [343, 2, 1, "", "first_column_descent"], [343, 2, 1, "", "first_row_descent"], [343, 2, 1, "", "is_column_strict"], [343, 2, 1, "", "is_row_strict"], [343, 2, 1, "", "is_standard"], [343, 2, 1, "", "level"], [343, 2, 1, "", "pp"], [343, 2, 1, "", "reduced_column_word"], [343, 2, 1, "", "reduced_row_word"], [343, 2, 1, "", "residue"], [343, 2, 1, "", "restrict"], [343, 2, 1, "", "row_stabilizer"], [343, 2, 1, "", "shape"], [343, 2, 1, "", "size"], [343, 2, 1, "", "symmetric_group_action_on_entries"], [343, 2, 1, "", "to_list"], [343, 2, 1, "", "to_permutation"], [343, 2, 1, "", "to_word"], [343, 2, 1, "", "to_word_by_column"], [343, 2, 1, "", "to_word_by_row"], [343, 2, 1, "", "up"]], "sage.combinat.tableau_tuple.TableauTuples": [[343, 4, 1, "", "Element"], [343, 2, 1, "", "level"], [343, 4, 1, "", "level_one_parent_class"], [343, 2, 1, "", "list"], [343, 4, 1, "", "options"], [343, 2, 1, "", "size"]], "sage.combinat.tableau_tuple.TableauTuples_all": [[343, 2, 1, "", "an_element"]], "sage.combinat.tableau_tuple.TableauTuples_level": [[343, 2, 1, "", "an_element"]], "sage.combinat.tableau_tuple.TableauTuples_level_size": [[343, 2, 1, "", "an_element"]], "sage.combinat.tableau_tuple.TableauTuples_size": [[343, 2, 1, "", "an_element"]], "sage.combinat.tamari_lattices": [[344, 3, 1, "", "DexterSemilattice"], [344, 3, 1, "", "GeneralizedTamariLattice"], [344, 3, 1, "", "TamariLattice"], [344, 3, 1, "", "paths_in_triangle"], [344, 3, 1, "", "swap"], [344, 3, 1, "", "swap_dexter"]], "sage.combinat.tiling": [[345, 1, 1, "", "Polyomino"], [345, 1, 1, "", "TilingSolver"], [345, 3, 1, "", "ncube_isometry_group"], [345, 3, 1, "", "ncube_isometry_group_cosets"]], "sage.combinat.tiling.Polyomino": [[345, 2, 1, "", "boundary"], [345, 2, 1, "", "bounding_box"], [345, 2, 1, "", "canonical"], [345, 2, 1, "", "canonical_isometric_copies"], [345, 2, 1, "", "center"], [345, 2, 1, "", "color"], [345, 2, 1, "", "frozenset"], [345, 2, 1, "", "intersection"], [345, 2, 1, "", "isometric_copies"], [345, 2, 1, "", "isometric_copies_intersection"], [345, 2, 1, "", "neighbor_edges"], [345, 2, 1, "", "self_surrounding"], [345, 2, 1, "", "show2d"], [345, 2, 1, "", "show3d"], [345, 2, 1, "", "sorted_list"], [345, 2, 1, "", "translated_copies"], [345, 2, 1, "", "translated_copies_intersection"]], "sage.combinat.tiling.TilingSolver": [[345, 2, 1, "", "animate"], [345, 2, 1, "", "coord_to_int_dict"], [345, 2, 1, "", "dlx_solver"], [345, 2, 1, "", "int_to_coord_dict"], [345, 2, 1, "", "is_suitable"], [345, 2, 1, "", "nrows_per_piece"], [345, 2, 1, "", "number_of_solutions"], [345, 2, 1, "", "pieces"], [345, 2, 1, "", "row_to_polyomino"], [345, 2, 1, "", "rows"], [345, 2, 1, "", "rows_for_piece"], [345, 2, 1, "", "solve"], [345, 2, 1, "", "space"], [345, 2, 1, "", "starting_rows"]], "sage.combinat.tools": [[346, 3, 1, "", "transitive_ideal"]], "sage.combinat.triangles_FHM": [[347, 1, 1, "", "F_triangle"], [347, 1, 1, "", "Gamma_triangle"], [347, 1, 1, "", "H_triangle"], [347, 1, 1, "", "M_triangle"], [347, 1, 1, "", "Triangle"]], "sage.combinat.triangles_FHM.F_triangle": [[347, 2, 1, "", "h"], [347, 2, 1, "", "m"], [347, 2, 1, "", "vector"]], "sage.combinat.triangles_FHM.Gamma_triangle": [[347, 2, 1, "", "h"], [347, 2, 1, "", "vector"]], "sage.combinat.triangles_FHM.H_triangle": [[347, 2, 1, "", "f"], [347, 2, 1, "", "gamma"], [347, 2, 1, "", "m"], [347, 2, 1, "", "transpose"], [347, 2, 1, "", "vector"]], "sage.combinat.triangles_FHM.M_triangle": [[347, 2, 1, "", "dual"], [347, 2, 1, "", "f"], [347, 2, 1, "", "h"], [347, 2, 1, "", "transmute"]], "sage.combinat.triangles_FHM.Triangle": [[347, 2, 1, "", "matrix"], [347, 2, 1, "", "polynomial"], [347, 2, 1, "", "truncate"]], "sage.combinat.tuple": [[348, 1, 1, "", "Tuples"], [348, 4, 1, "", "Tuples_sk"], [348, 1, 1, "", "UnorderedTuples"], [348, 4, 1, "", "UnorderedTuples_sk"]], "sage.combinat.tuple.Tuples": [[348, 2, 1, "", "cardinality"]], "sage.combinat.tuple.UnorderedTuples": [[348, 2, 1, "", "cardinality"], [348, 2, 1, "", "list"]], "sage.combinat.vector_partition": [[350, 3, 1, "", "IntegerVectorsIterator"], [350, 1, 1, "", "VectorPartition"], [350, 1, 1, "", "VectorPartitions"], [350, 3, 1, "", "find_min"]], "sage.combinat.vector_partition.VectorPartition": [[350, 2, 1, "", "partition_at_vertex"], [350, 2, 1, "", "sum"]], "sage.combinat.vector_partition.VectorPartitions": [[350, 4, 1, "", "Element"]], "sage.combinat.words": [[352, 0, 0, "-", "abstract_word"], [353, 0, 0, "-", "alphabet"], [354, 0, 0, "-", "finite_word"], [355, 0, 0, "-", "infinite_word"], [356, 0, 0, "-", "lyndon_word"], [357, 0, 0, "-", "morphism"], [358, 0, 0, "-", "paths"], [359, 0, 0, "-", "shuffle_product"], [360, 0, 0, "-", "suffix_trees"], [361, 0, 0, "-", "word"], [362, 0, 0, "-", "word_char"], [363, 0, 0, "-", "word_datatypes"], [364, 0, 0, "-", "word_generators"], [365, 0, 0, "-", "word_infinite_datatypes"], [366, 0, 0, "-", "word_options"], [367, 0, 0, "-", "words"]], "sage.combinat.words.abstract_word": [[352, 1, 1, "", "Word_class"]], "sage.combinat.words.abstract_word.Word_class": [[352, 2, 1, "", "apply_morphism"], [352, 2, 1, "", "complete_return_words_iterator"], [352, 2, 1, "", "delta"], [352, 2, 1, "", "factor_occurrences_iterator"], [352, 2, 1, "", "finite_differences"], [352, 2, 1, "", "first_occurrence"], [352, 2, 1, "", "is_empty"], [352, 2, 1, "", "is_finite"], [352, 2, 1, "", "iterated_right_palindromic_closure"], [352, 2, 1, "", "length"], [352, 2, 1, "", "lex_greater"], [352, 2, 1, "", "lex_less"], [352, 2, 1, "", "longest_common_prefix"], [352, 2, 1, "", "longest_periodic_prefix"], [352, 2, 1, "", "palindrome_prefixes_iterator"], [352, 2, 1, "", "parent"], [352, 2, 1, "", "partial_sums"], [352, 2, 1, "", "prefixes_iterator"], [352, 2, 1, "", "return_words_iterator"], [352, 2, 1, "", "string_rep"], [352, 2, 1, "", "sum_digits"], [352, 2, 1, "", "to_integer_word"]], "sage.combinat.words.alphabet": [[353, 3, 1, "", "Alphabet"], [353, 3, 1, "", "build_alphabet"]], "sage.combinat.words.finite_word": [[354, 1, 1, "", "CallableFromListOfWords"], [354, 1, 1, "", "Factorization"], [354, 1, 1, "", "FiniteWord_class"], [354, 3, 1, "", "evaluation_dict"], [354, 3, 1, "", "word_to_ordered_set_partition"]], "sage.combinat.words.finite_word.FiniteWord_class": [[354, 2, 1, "", "BWT"], [354, 2, 1, "", "LZ_decomposition"], [354, 2, 1, "", "abelian_complexity"], [354, 2, 1, "", "abelian_vector"], [354, 2, 1, "", "abelian_vectors"], [354, 2, 1, "", "apply_permutation_to_letters"], [354, 2, 1, "", "apply_permutation_to_positions"], [354, 2, 1, "", "balance"], [354, 2, 1, "", "bispecial_factors"], [354, 2, 1, "", "bispecial_factors_iterator"], [354, 2, 1, "", "border"], [354, 2, 1, "", "charge"], [354, 2, 1, "", "cocharge"], [354, 2, 1, "", "coerce"], [354, 2, 1, "", "colored_vector"], [354, 2, 1, "", "commutes_with"], [354, 2, 1, "", "complete_return_words"], [354, 2, 1, "", "concatenate"], [354, 2, 1, "", "conjugate"], [354, 2, 1, "", "conjugate_position"], [354, 2, 1, "", "conjugates"], [354, 2, 1, "", "conjugates_iterator"], [354, 2, 1, "", "content"], [354, 2, 1, "", "count"], [354, 2, 1, "", "critical_exponent"], [354, 2, 1, "", "crochemore_factorization"], [354, 2, 1, "", "defect"], [354, 2, 1, "", "deg_inv_lex_less"], [354, 2, 1, "", "deg_lex_less"], [354, 2, 1, "", "deg_rev_lex_less"], [354, 2, 1, "", "degree"], [354, 2, 1, "", "delta"], [354, 2, 1, "", "delta_derivate"], [354, 2, 1, "", "delta_derivate_left"], [354, 2, 1, "", "delta_derivate_right"], [354, 2, 1, "", "delta_inv"], [354, 2, 1, "", "evaluation"], [354, 2, 1, "", "evaluation_dict"], [354, 2, 1, "", "evaluation_partition"], [354, 2, 1, "", "evaluation_sparse"], [354, 2, 1, "", "exponent"], [354, 2, 1, "", "factor_complexity"], [354, 2, 1, "", "factor_iterator"], [354, 2, 1, "", "factor_occurrences_in"], [354, 2, 1, "", "factor_set"], [354, 2, 1, "", "find"], [354, 2, 1, "", "first_pos_in"], [354, 2, 1, "", "foata_bijection"], [354, 2, 1, "", "good_suffix_table"], [354, 2, 1, "", "has_period"], [354, 2, 1, "", "has_prefix"], [354, 2, 1, "", "has_suffix"], [354, 2, 1, "", "implicit_suffix_tree"], [354, 2, 1, "", "inv_lex_less"], [354, 2, 1, "", "inversions"], [354, 2, 1, "", "is_balanced"], [354, 2, 1, "", "is_cadence"], [354, 2, 1, "", "is_christoffel"], [354, 2, 1, "", "is_conjugate_with"], [354, 2, 1, "", "is_cube"], [354, 2, 1, "", "is_cube_free"], [354, 2, 1, "", "is_empty"], [354, 2, 1, "", "is_factor"], [354, 2, 1, "", "is_finite"], [354, 2, 1, "", "is_full"], [354, 2, 1, "", "is_lyndon"], [354, 2, 1, "", "is_overlap"], [354, 2, 1, "", "is_palindrome"], [354, 2, 1, "", "is_prefix"], [354, 2, 1, "", "is_primitive"], [354, 2, 1, "", "is_proper_prefix"], [354, 2, 1, "", "is_proper_suffix"], [354, 2, 1, "", "is_quasiperiodic"], [354, 2, 1, "", "is_rich"], [354, 2, 1, "", "is_smooth_prefix"], [354, 2, 1, "", "is_square"], [354, 2, 1, "", "is_square_free"], [354, 2, 1, "", "is_sturmian_factor"], [354, 2, 1, "", "is_subword_of"], [354, 2, 1, "", "is_suffix"], [354, 2, 1, "", "is_symmetric"], [354, 2, 1, "", "is_tangent"], [354, 2, 1, "", "is_yamanouchi"], [354, 2, 1, "", "iterated_left_palindromic_closure"], [354, 2, 1, "", "lacunas"], [354, 2, 1, "", "last_position_dict"], [354, 2, 1, "", "left_special_factors"], [354, 2, 1, "", "left_special_factors_iterator"], [354, 2, 1, "", "length"], [354, 2, 1, "", "length_border"], [354, 2, 1, "", "length_maximal_palindrome"], [354, 2, 1, "", "lengths_maximal_palindromes"], [354, 2, 1, "", "lengths_unioccurrent_lps"], [354, 2, 1, "", "letters"], [354, 2, 1, "", "longest_backward_extension"], [354, 2, 1, "", "longest_common_subword"], [354, 2, 1, "", "longest_common_suffix"], [354, 2, 1, "", "longest_forward_extension"], [354, 2, 1, "", "lps"], [354, 2, 1, "", "lps_lengths"], [354, 2, 1, "", "lyndon_factorization"], [354, 2, 1, "", "major_index"], [354, 2, 1, "", "minimal_conjugate"], [354, 2, 1, "", "minimal_period"], [354, 2, 1, "", "nb_factor_occurrences_in"], [354, 2, 1, "", "nb_subword_occurrences_in"], [354, 2, 1, "", "number_of_factor_occurrences"], [354, 2, 1, "", "number_of_factors"], [354, 2, 1, "", "number_of_inversions"], [354, 2, 1, "", "number_of_left_special_factors"], [354, 2, 1, "", "number_of_letter_occurrences"], [354, 2, 1, "", "number_of_right_special_factors"], [354, 2, 1, "", "number_of_subword_occurrences"], [354, 2, 1, "", "order"], [354, 2, 1, "", "overlap_partition"], [354, 2, 1, "", "palindrome_prefixes"], [354, 2, 1, "", "palindromes"], [354, 2, 1, "", "palindromic_closure"], [354, 2, 1, "", "palindromic_complexity"], [354, 2, 1, "", "palindromic_lacunas_study"], [354, 2, 1, "", "periods"], [354, 2, 1, "", "phi"], [354, 2, 1, "", "phi_inv"], [354, 2, 1, "", "prefix_function_table"], [354, 2, 1, "", "primitive"], [354, 2, 1, "", "primitive_length"], [354, 2, 1, "", "quasiperiods"], [354, 2, 1, "", "rauzy_graph"], [354, 2, 1, "", "reduced_rauzy_graph"], [354, 2, 1, "", "return_words"], [354, 2, 1, "", "return_words_derivate"], [354, 2, 1, "", "rev_lex_less"], [354, 2, 1, "", "reversal"], [354, 2, 1, "", "rfind"], [354, 2, 1, "", "right_special_factors"], [354, 2, 1, "", "right_special_factors_iterator"], [354, 2, 1, "", "robinson_schensted"], [354, 2, 1, "", "schuetzenberger_involution"], [354, 2, 1, "", "shifted_shuffle"], [354, 2, 1, "", "shuffle"], [354, 2, 1, "", "squares"], [354, 2, 1, "", "standard_factorization"], [354, 2, 1, "", "standard_permutation"], [354, 2, 1, "", "sturmian_desubstitute_as_possible"], [354, 2, 1, "", "subword_complementaries"], [354, 2, 1, "", "suffix_tree"], [354, 2, 1, "", "suffix_trie"], [354, 2, 1, "", "swap"], [354, 2, 1, "", "swap_decrease"], [354, 2, 1, "", "swap_increase"], [354, 2, 1, "", "to_integer_list"], [354, 2, 1, "", "to_integer_word"], [354, 2, 1, "", "to_monoid_element"], [354, 2, 1, "", "to_ordered_set_partition"], [354, 2, 1, "", "topological_entropy"]], "sage.combinat.words.infinite_word": [[355, 1, 1, "", "InfiniteWord_class"]], "sage.combinat.words.infinite_word.InfiniteWord_class": [[355, 2, 1, "", "length"]], "sage.combinat.words.lyndon_word": [[356, 3, 1, "", "LyndonWord"], [356, 3, 1, "", "LyndonWords"], [356, 1, 1, "", "LyndonWords_class"], [356, 1, 1, "", "LyndonWords_evaluation"], [356, 1, 1, "", "LyndonWords_nk"], [356, 3, 1, "", "StandardBracketedLyndonWords"], [356, 1, 1, "", "StandardBracketedLyndonWords_nk"], [356, 3, 1, "", "standard_bracketing"], [356, 3, 1, "", "standard_unbracketing"]], "sage.combinat.words.lyndon_word.LyndonWords_evaluation": [[356, 2, 1, "", "cardinality"]], "sage.combinat.words.lyndon_word.LyndonWords_nk": [[356, 2, 1, "", "cardinality"]], "sage.combinat.words.lyndon_word.StandardBracketedLyndonWords_nk": [[356, 2, 1, "", "cardinality"]], "sage.combinat.words.morphism": [[357, 1, 1, "", "PeriodicPointIterator"], [357, 1, 1, "", "WordMorphism"], [357, 3, 1, "", "get_cycles"]], "sage.combinat.words.morphism.PeriodicPointIterator": [[357, 2, 1, "", "get_iterator"]], "sage.combinat.words.morphism.WordMorphism": [[357, 2, 1, "", "abelian_rotation_subspace"], [357, 2, 1, "", "codomain"], [357, 2, 1, "", "conjugate"], [357, 2, 1, "", "domain"], [357, 2, 1, "", "dual_map"], [357, 2, 1, "", "extend_by"], [357, 2, 1, "", "fixed_point"], [357, 2, 1, "", "fixed_points"], [357, 2, 1, "", "growing_letters"], [357, 2, 1, "", "has_conjugate_in_classP"], [357, 2, 1, "", "has_left_conjugate"], [357, 2, 1, "", "has_right_conjugate"], [357, 2, 1, "", "image"], [357, 2, 1, "", "images"], [357, 2, 1, "", "immortal_letters"], [357, 2, 1, "", "incidence_matrix"], [357, 2, 1, "", "infinite_repetitions_primitive_roots"], [357, 2, 1, "", "is_empty"], [357, 2, 1, "", "is_endomorphism"], [357, 2, 1, "", "is_erasing"], [357, 2, 1, "", "is_growing"], [357, 2, 1, "", "is_identity"], [357, 2, 1, "", "is_in_classP"], [357, 2, 1, "", "is_injective"], [357, 2, 1, "", "is_involution"], [357, 2, 1, "", "is_primitive"], [357, 2, 1, "", "is_prolongable"], [357, 2, 1, "", "is_pushy"], [357, 2, 1, "", "is_repetitive"], [357, 2, 1, "", "is_self_composable"], [357, 2, 1, "", "is_unboundedly_repetitive"], [357, 2, 1, "", "is_uniform"], [357, 2, 1, "", "language"], [357, 2, 1, "", "latex_layout"], [357, 2, 1, "", "letter_growth_types"], [357, 2, 1, "", "list_of_conjugates"], [357, 2, 1, "", "partition_of_domain_alphabet"], [357, 2, 1, "", "periodic_point"], [357, 2, 1, "", "periodic_points"], [357, 2, 1, "", "pisot_eigenvector_left"], [357, 2, 1, "", "pisot_eigenvector_right"], [357, 2, 1, "", "rauzy_fractal_plot"], [357, 2, 1, "", "rauzy_fractal_points"], [357, 2, 1, "", "rauzy_fractal_projection"], [357, 2, 1, "", "restrict_domain"], [357, 2, 1, "", "reversal"], [357, 2, 1, "", "simplify_alphabet_size"], [357, 2, 1, "", "simplify_until_injective"]], "sage.combinat.words.paths": [[358, 1, 1, "", "FiniteWordPath_2d"], [358, 1, 1, "", "FiniteWordPath_2d_callable"], [358, 1, 1, "", "FiniteWordPath_2d_callable_with_caching"], [358, 1, 1, "", "FiniteWordPath_2d_iter"], [358, 1, 1, "", "FiniteWordPath_2d_iter_with_caching"], [358, 1, 1, "", "FiniteWordPath_2d_list"], [358, 1, 1, "", "FiniteWordPath_2d_str"], [358, 1, 1, "", "FiniteWordPath_2d_tuple"], [358, 1, 1, "", "FiniteWordPath_3d"], [358, 1, 1, "", "FiniteWordPath_3d_callable"], [358, 1, 1, "", "FiniteWordPath_3d_callable_with_caching"], [358, 1, 1, "", "FiniteWordPath_3d_iter"], [358, 1, 1, "", "FiniteWordPath_3d_iter_with_caching"], [358, 1, 1, "", "FiniteWordPath_3d_list"], [358, 1, 1, "", "FiniteWordPath_3d_str"], [358, 1, 1, "", "FiniteWordPath_3d_tuple"], [358, 1, 1, "", "FiniteWordPath_all"], [358, 1, 1, "", "FiniteWordPath_all_callable"], [358, 1, 1, "", "FiniteWordPath_all_callable_with_caching"], [358, 1, 1, "", "FiniteWordPath_all_iter"], [358, 1, 1, "", "FiniteWordPath_all_iter_with_caching"], [358, 1, 1, "", "FiniteWordPath_all_list"], [358, 1, 1, "", "FiniteWordPath_all_str"], [358, 1, 1, "", "FiniteWordPath_all_tuple"], [358, 1, 1, "", "FiniteWordPath_cube_grid"], [358, 1, 1, "", "FiniteWordPath_cube_grid_callable"], [358, 1, 1, "", "FiniteWordPath_cube_grid_callable_with_caching"], [358, 1, 1, "", "FiniteWordPath_cube_grid_iter"], [358, 1, 1, "", "FiniteWordPath_cube_grid_iter_with_caching"], [358, 1, 1, "", "FiniteWordPath_cube_grid_list"], [358, 1, 1, "", "FiniteWordPath_cube_grid_str"], [358, 1, 1, "", "FiniteWordPath_cube_grid_tuple"], [358, 1, 1, "", "FiniteWordPath_dyck"], [358, 1, 1, "", "FiniteWordPath_dyck_callable"], [358, 1, 1, "", "FiniteWordPath_dyck_callable_with_caching"], [358, 1, 1, "", "FiniteWordPath_dyck_iter"], [358, 1, 1, "", "FiniteWordPath_dyck_iter_with_caching"], [358, 1, 1, "", "FiniteWordPath_dyck_list"], [358, 1, 1, "", "FiniteWordPath_dyck_str"], [358, 1, 1, "", "FiniteWordPath_dyck_tuple"], [358, 1, 1, "", "FiniteWordPath_hexagonal_grid"], [358, 1, 1, "", "FiniteWordPath_hexagonal_grid_callable"], [358, 1, 1, "", "FiniteWordPath_hexagonal_grid_callable_with_caching"], [358, 1, 1, "", "FiniteWordPath_hexagonal_grid_iter"], [358, 1, 1, "", "FiniteWordPath_hexagonal_grid_iter_with_caching"], [358, 1, 1, "", "FiniteWordPath_hexagonal_grid_list"], [358, 1, 1, "", "FiniteWordPath_hexagonal_grid_str"], [358, 1, 1, "", "FiniteWordPath_hexagonal_grid_tuple"], [358, 1, 1, "", "FiniteWordPath_north_east"], [358, 1, 1, "", "FiniteWordPath_north_east_callable"], [358, 1, 1, "", "FiniteWordPath_north_east_callable_with_caching"], [358, 1, 1, "", "FiniteWordPath_north_east_iter"], [358, 1, 1, "", "FiniteWordPath_north_east_iter_with_caching"], [358, 1, 1, "", "FiniteWordPath_north_east_list"], [358, 1, 1, "", "FiniteWordPath_north_east_str"], [358, 1, 1, "", "FiniteWordPath_north_east_tuple"], [358, 1, 1, "", "FiniteWordPath_square_grid"], [358, 1, 1, "", "FiniteWordPath_square_grid_callable"], [358, 1, 1, "", "FiniteWordPath_square_grid_callable_with_caching"], [358, 1, 1, "", "FiniteWordPath_square_grid_iter"], [358, 1, 1, "", "FiniteWordPath_square_grid_iter_with_caching"], [358, 1, 1, "", "FiniteWordPath_square_grid_list"], [358, 1, 1, "", "FiniteWordPath_square_grid_str"], [358, 1, 1, "", "FiniteWordPath_square_grid_tuple"], [358, 1, 1, "", "FiniteWordPath_triangle_grid"], [358, 1, 1, "", "FiniteWordPath_triangle_grid_callable"], [358, 1, 1, "", "FiniteWordPath_triangle_grid_callable_with_caching"], [358, 1, 1, "", "FiniteWordPath_triangle_grid_iter"], [358, 1, 1, "", "FiniteWordPath_triangle_grid_iter_with_caching"], [358, 1, 1, "", "FiniteWordPath_triangle_grid_list"], [358, 1, 1, "", "FiniteWordPath_triangle_grid_str"], [358, 1, 1, "", "FiniteWordPath_triangle_grid_tuple"], [358, 3, 1, "", "WordPaths"], [358, 1, 1, "", "WordPaths_all"], [358, 1, 1, "", "WordPaths_cube_grid"], [358, 1, 1, "", "WordPaths_dyck"], [358, 1, 1, "", "WordPaths_hexagonal_grid"], [358, 1, 1, "", "WordPaths_north_east"], [358, 1, 1, "", "WordPaths_square_grid"], [358, 1, 1, "", "WordPaths_triangle_grid"]], "sage.combinat.words.paths.FiniteWordPath_2d": [[358, 2, 1, "", "animate"], [358, 2, 1, "", "area"], [358, 2, 1, "", "height"], [358, 2, 1, "", "height_vector"], [358, 2, 1, "", "plot"], [358, 2, 1, "", "plot_directive_vector"], [358, 2, 1, "", "width"], [358, 2, 1, "", "width_vector"], [358, 2, 1, "", "xmax"], [358, 2, 1, "", "xmin"], [358, 2, 1, "", "ymax"], [358, 2, 1, "", "ymin"]], "sage.combinat.words.paths.FiniteWordPath_3d": [[358, 2, 1, "", "plot"]], "sage.combinat.words.paths.FiniteWordPath_all": [[358, 2, 1, "", "directive_vector"], [358, 2, 1, "", "end_point"], [358, 2, 1, "", "is_closed"], [358, 2, 1, "", "is_simple"], [358, 2, 1, "", "is_tangent"], [358, 2, 1, "", "plot_projection"], [358, 2, 1, "", "points"], [358, 2, 1, "", "projected_path"], [358, 2, 1, "", "projected_point_iterator"], [358, 2, 1, "", "start_point"], [358, 2, 1, "", "tikz_trajectory"]], "sage.combinat.words.paths.FiniteWordPath_square_grid": [[358, 2, 1, "", "area"], [358, 2, 1, "", "is_closed"], [358, 2, 1, "", "is_simple"], [358, 2, 1, "", "tikz_trajectory"]], "sage.combinat.words.paths.FiniteWordPath_triangle_grid": [[358, 2, 1, "", "xmax"], [358, 2, 1, "", "xmin"], [358, 2, 1, "", "ymax"], [358, 2, 1, "", "ymin"]], "sage.combinat.words.paths.WordPaths_all": [[358, 2, 1, "", "letters_to_steps"], [358, 2, 1, "", "vector_space"]], "sage.combinat.words.shuffle_product": [[359, 1, 1, "", "ShuffleProduct_shifted"], [359, 1, 1, "", "ShuffleProduct_w1w2"]], "sage.combinat.words.shuffle_product.ShuffleProduct_w1w2": [[359, 2, 1, "", "cardinality"]], "sage.combinat.words.suffix_trees": [[360, 1, 1, "", "DecoratedSuffixTree"], [360, 1, 1, "", "ImplicitSuffixTree"], [360, 1, 1, "", "SuffixTrie"]], "sage.combinat.words.suffix_trees.DecoratedSuffixTree": [[360, 2, 1, "", "square_vocabulary"]], "sage.combinat.words.suffix_trees.ImplicitSuffixTree": [[360, 2, 1, "", "LZ_decomposition"], [360, 2, 1, "", "active_state"], [360, 2, 1, "", "edge_iterator"], [360, 2, 1, "", "factor_iterator"], [360, 2, 1, "", "leftmost_covering_set"], [360, 2, 1, "", "number_of_factors"], [360, 2, 1, "", "plot"], [360, 2, 1, "", "process_letter"], [360, 2, 1, "", "show"], [360, 2, 1, "", "states"], [360, 2, 1, "", "suffix_link"], [360, 2, 1, "", "suffix_walk"], [360, 2, 1, "", "to_digraph"], [360, 2, 1, "", "to_explicit_suffix_tree"], [360, 2, 1, "", "transition_function"], [360, 2, 1, "", "transition_function_dictionary"], [360, 2, 1, "", "trie_type_dict"], [360, 2, 1, "", "uncompactify"], [360, 2, 1, "", "word"]], "sage.combinat.words.suffix_trees.SuffixTrie": [[360, 2, 1, "", "active_state"], [360, 2, 1, "", "final_states"], [360, 2, 1, "", "has_suffix"], [360, 2, 1, "", "node_to_word"], [360, 2, 1, "", "plot"], [360, 2, 1, "", "process_letter"], [360, 2, 1, "", "show"], [360, 2, 1, "", "states"], [360, 2, 1, "", "suffix_link"], [360, 2, 1, "", "to_digraph"], [360, 2, 1, "", "transition_function"], [360, 2, 1, "", "word"]], "sage.combinat.words.word": [[361, 1, 1, "", "FiniteWord_callable"], [361, 1, 1, "", "FiniteWord_callable_with_caching"], [361, 1, 1, "", "FiniteWord_char"], [361, 1, 1, "", "FiniteWord_iter"], [361, 1, 1, "", "FiniteWord_iter_with_caching"], [361, 1, 1, "", "FiniteWord_list"], [361, 1, 1, "", "FiniteWord_morphic"], [361, 1, 1, "", "FiniteWord_str"], [361, 1, 1, "", "FiniteWord_tuple"], [361, 1, 1, "", "InfiniteWord_callable"], [361, 1, 1, "", "InfiniteWord_callable_with_caching"], [361, 1, 1, "", "InfiniteWord_iter"], [361, 1, 1, "", "InfiniteWord_iter_with_caching"], [361, 1, 1, "", "InfiniteWord_morphic"], [361, 3, 1, "", "Word"], [361, 1, 1, "", "Word_iter"], [361, 1, 1, "", "Word_iter_with_caching"]], "sage.combinat.words.word_char": [[362, 1, 1, "", "WordDatatype_char"], [362, 3, 1, "", "reversed_word_iterator"]], "sage.combinat.words.word_char.WordDatatype_char": [[362, 2, 1, "", "concatenate"], [362, 2, 1, "", "has_prefix"], [362, 2, 1, "", "is_empty"], [362, 2, 1, "", "is_square"], [362, 2, 1, "", "length"], [362, 2, 1, "", "letters"], [362, 2, 1, "", "longest_common_prefix"], [362, 2, 1, "", "longest_common_suffix"]], "sage.combinat.words.word_datatypes": [[363, 1, 1, "", "WordDatatype"], [363, 1, 1, "", "WordDatatype_list"], [363, 1, 1, "", "WordDatatype_str"], [363, 1, 1, "", "WordDatatype_tuple"]], "sage.combinat.words.word_datatypes.WordDatatype_list": [[363, 2, 1, "", "length"], [363, 2, 1, "", "number_of_letter_occurrences"]], "sage.combinat.words.word_datatypes.WordDatatype_str": [[363, 2, 1, "", "find"], [363, 2, 1, "", "has_prefix"], [363, 2, 1, "", "has_suffix"], [363, 2, 1, "", "is_prefix"], [363, 2, 1, "", "is_suffix"], [363, 2, 1, "", "length"], [363, 2, 1, "", "number_of_letter_occurrences"], [363, 2, 1, "", "partition"], [363, 2, 1, "", "rfind"], [363, 2, 1, "", "split"]], "sage.combinat.words.word_datatypes.WordDatatype_tuple": [[363, 2, 1, "", "length"]], "sage.combinat.words.word_generators": [[364, 1, 1, "", "LowerChristoffelWord"], [364, 1, 1, "", "WordGenerator"]], "sage.combinat.words.word_generators.LowerChristoffelWord": [[364, 2, 1, "", "markoff_number"], [364, 2, 1, "", "standard_factorization"]], "sage.combinat.words.word_generators.WordGenerator": [[364, 2, 1, "", "BaumSweetWord"], [364, 2, 1, "", "CharacteristicSturmianWord"], [364, 4, 1, "", "ChristoffelWord"], [364, 2, 1, "", "CodingOfRotationWord"], [364, 2, 1, "", "FibonacciWord"], [364, 2, 1, "", "FixedPointOfMorphism"], [364, 2, 1, "", "KolakoskiWord"], [364, 4, 1, "", "LowerChristoffelWord"], [364, 2, 1, "", "LowerMechanicalWord"], [364, 2, 1, "", "MinimalSmoothPrefix"], [364, 2, 1, "", "PalindromicDefectWord"], [364, 2, 1, "", "RandomWord"], [364, 2, 1, "", "StandardEpisturmianWord"], [364, 2, 1, "", "ThueMorseWord"], [364, 2, 1, "", "UpperChristoffelWord"], [364, 2, 1, "", "UpperMechanicalWord"], [364, 2, 1, "", "dual_fibonacci_tile"], [364, 2, 1, "", "fibonacci_tile"], [364, 2, 1, "", "s_adic"]], "sage.combinat.words.word_infinite_datatypes": [[365, 1, 1, "", "WordDatatype_callable"], [365, 1, 1, "", "WordDatatype_callable_with_caching"], [365, 1, 1, "", "WordDatatype_iter"], [365, 1, 1, "", "WordDatatype_iter_with_caching"]], "sage.combinat.words.word_infinite_datatypes.WordDatatype_callable_with_caching": [[365, 2, 1, "", "flush"]], "sage.combinat.words.word_infinite_datatypes.WordDatatype_iter_with_caching": [[365, 2, 1, "", "flush"]], "sage.combinat.words.word_options": [[366, 3, 1, "", "WordOptions"]], "sage.combinat.words.words": [[367, 1, 1, "", "AbstractLanguage"], [367, 1, 1, "", "FiniteOrInfiniteWords"], [367, 1, 1, "", "FiniteWords"], [367, 1, 1, "", "InfiniteWords"], [367, 3, 1, "", "Words"], [367, 1, 1, "", "Words_n"]], "sage.combinat.words.words.AbstractLanguage": [[367, 2, 1, "", "alphabet"], [367, 2, 1, "", "identity_morphism"]], "sage.combinat.words.words.FiniteOrInfiniteWords": [[367, 2, 1, "", "cardinality"], [367, 2, 1, "", "factors"], [367, 2, 1, "", "finite_words"], [367, 2, 1, "", "infinite_words"], [367, 2, 1, "", "iterate_by_length"], [367, 2, 1, "", "shift"]], "sage.combinat.words.words.FiniteWords": [[367, 2, 1, "", "cardinality"], [367, 2, 1, "", "factors"], [367, 2, 1, "", "iter_morphisms"], [367, 2, 1, "", "iterate_by_length"], [367, 2, 1, "", "random_element"], [367, 2, 1, "", "shift"]], "sage.combinat.words.words.InfiniteWords": [[367, 2, 1, "", "cardinality"], [367, 2, 1, "", "factors"], [367, 2, 1, "", "random_element"], [367, 2, 1, "", "shift"]], "sage.combinat.words.words.Words_n": [[367, 2, 1, "", "alphabet"], [367, 2, 1, "", "cardinality"], [367, 2, 1, "", "iterate_by_length"], [367, 2, 1, "", "list"], [367, 2, 1, "", "random_element"]], "sage.combinat.yang_baxter_graph": [[368, 1, 1, "", "SwapIncreasingOperator"], [368, 1, 1, "", "SwapOperator"], [368, 3, 1, "", "YangBaxterGraph"], [368, 1, 1, "", "YangBaxterGraph_generic"], [368, 1, 1, "", "YangBaxterGraph_partition"]], "sage.combinat.yang_baxter_graph.SwapOperator": [[368, 2, 1, "", "position"]], "sage.combinat.yang_baxter_graph.YangBaxterGraph_generic": [[368, 2, 1, "", "edges"], [368, 2, 1, "", "plot"], [368, 2, 1, "", "relabel_edges"], [368, 2, 1, "", "relabel_vertices"], [368, 2, 1, "", "root"], [368, 2, 1, "", "successors"], [368, 2, 1, "", "vertex_relabelling_dict"], [368, 2, 1, "", "vertices"]], "sage.combinat.yang_baxter_graph.YangBaxterGraph_partition": [[368, 2, 1, "", "relabel_vertices"], [368, 2, 1, "", "vertex_relabelling_dict"]], "sage.rings": [[369, 0, 0, "-", "cfinite_sequence"]], "sage.rings.cfinite_sequence": [[369, 1, 1, "", "CFiniteSequence"], [369, 3, 1, "", "CFiniteSequences"], [369, 1, 1, "", "CFiniteSequences_generic"]], "sage.rings.cfinite_sequence.CFiniteSequence": [[369, 2, 1, "", "closed_form"], [369, 2, 1, "", "coefficients"], [369, 2, 1, "", "denominator"], [369, 2, 1, "", "numerator"], [369, 2, 1, "", "ogf"], [369, 2, 1, "", "recurrence_repr"], [369, 2, 1, "", "series"]], "sage.rings.cfinite_sequence.CFiniteSequences_generic": [[369, 4, 1, "", "Element"], [369, 2, 1, "", "an_element"], [369, 2, 1, "", "fraction_field"], [369, 2, 1, "", "from_recurrence"], [369, 2, 1, "", "gen"], [369, 2, 1, "", "guess"], [369, 2, 1, "", "ngens"], [369, 2, 1, "", "polynomial_ring"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"combinator": [0, 4, 5, 133, 188, 349, 351], "introductori": [0, 5, 39, 217, 312], "materi": [0, 5, 39, 217, 312], "themat": [0, 4, 5], "index": [0, 5, 93, 95], "util": [0, 5], "relat": [0, 5, 101, 217], "topic": [0, 5], "comprehens": [0, 1, 349], "modul": [0, 1, 54, 110], "list": [0, 1, 101, 121, 122, 123, 180, 185, 349], "indic": 0, "tabl": [0, 311], "todo": [1, 2, 10, 16, 24, 25, 34, 38, 45, 58, 67, 75, 76, 79, 81, 84, 88, 97, 99, 101, 106, 107, 108, 112, 118, 121, 126, 128, 132, 137, 139, 142, 143, 144, 152, 158, 170, 179, 180, 181, 185, 189, 195, 209, 212, 214, 219, 224, 226, 227, 229, 231, 233, 234, 235, 236, 238, 239, 240, 261, 268, 269, 270, 271, 272, 279, 290, 292, 298, 299, 307, 309, 312, 334, 339, 341, 342, 343, 349], "abstract": [2, 196, 352], "recurs": [2, 90, 91, 325], "tree": [2, 10, 101, 154, 208, 272, 349, 360], "affin": [3, 35, 36, 37, 56, 229, 230, 232, 235, 243, 246, 247, 249, 251, 253, 255, 257, 261], "permut": [3, 8, 24, 101, 102, 127, 170, 171, 323], "algebra": [4, 11, 14, 15, 17, 73, 97, 109, 111, 117, 145, 159, 161, 179, 183, 231, 232, 238, 338], "tutori": [4, 235], "enumer": [4, 13, 101, 102, 121, 122, 123, 349], "set": [4, 13, 77, 83, 87, 101, 121, 122, 123, 139, 275, 276, 305, 326, 349, 367], "combinatori": [4, 14, 25, 26, 28, 74, 78, 80, 96, 101, 141, 312, 319, 327, 347, 349], "object": [4, 101, 235], "group": [4, 86, 102, 112, 127, 217, 225, 229, 230, 236, 237, 238, 271, 278, 338, 339], "represent": [4, 84, 217, 231, 232, 339], "theori": [4, 217], "operad": 4, "altern": 6, "sign": [6, 30], "matric": [6, 82, 101, 124, 133, 136, 223, 226, 306], "backtrack": [7, 101], "baxter": [8, 368], "binari": [9, 10, 106, 129, 349], "recurr": 9, "sequenc": [9, 70, 71, 106, 129, 311, 340, 342, 369], "blob": 11, "cartesian": [12, 174], "product": [12, 67, 68, 174, 215, 216, 304, 324, 359], "partit": [13, 97, 101, 105, 139, 158, 159, 160, 161, 162, 163, 172, 214, 275, 276, 309, 322, 337, 349, 350], "tableaux": [13, 15, 31, 53, 101, 130, 164, 167, 168, 193, 194, 197, 207, 209, 215, 216, 303, 310, 336, 341, 342], "rsk": 13, "hopf": [14, 15, 117, 145], "poirier": 15, "reutenau": 15, "standard": 15, "word": [16, 99, 101, 106, 152, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367], "quasi": [16, 108, 140], "symmetr": [16, 108, 140, 143, 145, 146, 148, 149, 277, 278, 279, 280, 281, 284, 285, 286, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 338, 339], "function": [16, 20, 25, 26, 75, 76, 78, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 93, 106, 107, 108, 116, 140, 143, 144, 145, 146, 148, 149, 151, 155, 157, 185, 277, 278, 279, 280, 281, 284, 285, 286, 288, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 311, 321, 349, 354], "cluster": [17, 23], "quiver": [17, 20, 21, 22], "clusterse": 18, "mutation_class": 19, "helper": [20, 106], "mutat": [20, 22], "type": [20, 22, 36, 53, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 224, 227, 235, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 306], "complex": [23, 236, 335], "gener": [23, 40, 50, 54, 101, 107, 124, 142, 280, 286, 305, 318, 344, 349], "dual": [23, 118, 148, 262, 280], "associahedron": [23, 219], "color": 24, "class": [25, 77, 83, 106, 121, 129, 170, 181, 185, 190, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 306, 349, 361], "fast": [26, 48, 105, 362], "comput": [26, 103, 311], "cython": [26, 80, 171], "mpz": 26, "combin": 27, "map": 28, "integ": [29, 101, 105, 121, 122, 123, 124, 125, 126, 127, 158, 163, 349], "composit": [29, 30, 31, 314, 317], "constel": 32, "core": 33, "count": [34, 124], "crystal": [35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 139, 210], "factor": [36, 234, 354], "A": [36, 106, 118, 236, 242, 243, 244, 267], "alcov": [38, 235], "path": [38, 56, 58, 115, 164, 165, 167, 358], "catalog": [39, 41, 42, 43, 44, 79, 164, 184], "see": 39, "also": 39, "benkart": 40, "kang": 40, "kashiwara": 40, "linear": [40, 54, 181, 320], "lie": [40, 54, 111, 232], "superalgebra": [40, 54], "Of": [41, 42, 43, 44, 61, 62], "elementari": [42, 47, 281], "model": [43, 44, 56, 308], "For": [43, 44], "b": [43, 53, 62, 64, 66, 197, 211, 245, 247], "infti": [43, 53, 62, 64, 66, 197, 211], "kirillov": [44, 55, 209, 215, 216], "reshetikhin": [44, 55, 209, 215, 216], "an": [45, 163, 230, 355, 362], "introduct": [45, 145, 273, 349], "axiomat": 45, "definit": [45, 71], "direct": [46, 115], "sum": [46, 129, 296, 330], "rank": 48, "two": [48, 95], "fulli": [49, 112, 113], "commut": [49, 112, 140, 143, 146, 148, 149], "stabl": 49, "grothendieck": 49, "young": 50, "wall": 50, "highest": [51, 56], "weight": [51, 56, 126, 268, 269], "induc": 52, "mathcal": [53, 62, 211], "nonexcept": 53, "g_2": 53, "kac": 54, "kyoto": 56, "letter": 57, "littelmann": 58, "modifi": [59, 106], "nakajima": 59, "monomi": [59, 62, 290], "bernstein": 60, "zelevinski": 60, "multiseg": 60, "mirkovi\u0107": 61, "vilonen": 61, "mv": 61, "polytop": [61, 349], "pbw": [62, 63], "data": [63, 217, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], "polyhedr": 64, "realiz": [64, 238, 239, 268, 298], "spin": 65, "star": 66, "structur": [66, 74, 87, 328], "On": 66, "tensor": [67, 68, 215, 216], "element": [68, 77, 112, 176, 212, 216, 333], "cyclic": 69, "siev": 69, "phenomenon": 69, "de": 70, "bruijn": 70, "degre": 71, "algorithm": [71, 94, 105, 349, 354], "about": 71, "implement": [71, 94, 118, 273, 349], "derang": 72, "descent": 73, "design": [74, 75, 76, 77, 78, 79, 80, 84, 86, 92], "incid": [74, 87, 179], "balanc": [75, 92], "incomplet": [75, 92], "block": [75, 76, 84, 92], "bibd": 75, "method": [76, 77, 83, 87, 94, 95, 106, 107, 129, 170, 180, 181, 185, 190], "cover": [77, 98], "t": [77, 340], "subset": [77, 101, 329, 331, 332, 333, 349], "v": 77, "k": [77, 129, 292], "databas": [78, 85], "small": 78, "differ": [81, 82], "famili": [81, 104, 217], "evenli": 83, "distribut": 83, "finit": [83, 106, 107, 180, 185, 217, 236, 237, 306, 349, 352, 354, 363, 369], "field": [83, 306], "extern": 84, "generalis": 85, "quadrangl": 85, "spread": 85, "divis": [86, 106], "gdd": 86, "i": [87, 145, 259], "e": [87, 252, 253], "hypergraph": [87, 94], "system": [87, 93, 217, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 307], "mutual": 88, "orthogon": [88, 89, 90, 91, 294, 295], "latin": [88, 137], "squar": [88, 137], "mol": 88, "arrai": [89, 90, 91, 191, 362], "oa": 89, "build": 90, "construct": [90, 91, 184, 349], "find": 91, "resolv": 92, "rbibd": 92, "steiner": 93, "quadrupl": 93, "isomorph": [94, 349], "copi": [94, 106], "search": 94, "limit": 94, "graph": [95, 101, 115, 118, 235, 349, 354, 368], "diagram": [96, 97, 118, 159, 178, 228], "exact": 98, "problem": [98, 345], "via": [98, 106], "danc": [98, 134, 135, 345], "link": [98, 134, 135, 345], "dyck": [99, 152, 165], "substitut": [100, 357], "over": [100, 163], "unit": 100, "cube": 100, "face": 100, "rauzi": [100, 354], "fractal": 100, "categori": 101, "basic": [101, 312], "polyomino": [101, 156], "solver": [101, 345], "low": 101, "level": 101, "misc": 101, "tool": [102, 141, 346], "modulo": [102, 127], "action": [102, 127], "bell": 103, "uppuluri": 103, "carpent": 103, "number": [103, 106, 129, 187], "brent": 105, "yorgei": 105, "": [105, 129, 311, 345], "vector": [105, 125, 126, 127, 350], "multiset": [105, 139], "state": [106, 107], "machin": [106, 107], "automata": [106, 107], "transduc": [106, 107], "content": 106, "finitestatemachin": 106, "deriv": 106, "automaton": 106, "access": 106, "part": 106, "manipul": [106, 124], "properti": [106, 332], "oper": [106, 312, 349], "simplif": 106, "convers": 106, "latex": 106, "output": [106, 155], "fsmstate": 106, "fsmtransit": 106, "fsmprocessiter": 106, "exampl": [106, 129, 319, 345, 349], "simpl": 106, "recogn": 106, "naf": 106, "invert": 106, "which": 106, "perform": 106, "3": [106, 205], "grai": [106, 116], "code": [106, 116, 134, 142, 217], "us": [106, 349, 362], "hook": 106, "detect": 106, "same": 106, "0": 106, "1": [106, 198, 201, 202, 203, 204, 206], "common": [107, 141, 349, 364], "free": [108, 109, 110, 111], "dendriform": 109, "pre": 111, "coxet": [112, 217, 225, 226, 227, 235], "acknowledg": [112, 132], "pack": 113, "loop": 113, "gelfand": 114, "tsetlin": 114, "pattern": [114, 166], "acycl": 115, "grossman": 117, "larson": 117, "growth": [118, 191], "grade": 118, "guid": [118, 236], "tour": [118, 236], "invoc": 118, "rule": [118, 222, 273], "current": [118, 273], "avail": [118, 273], "background": 118, "your": [118, 273], "own": [118, 273], "hall": [119, 282, 286], "polynomi": [119, 131, 187, 233, 274, 282, 287, 289, 293], "The": 120, "hillman": 120, "grassl": 120, "correspond": [120, 273], "constraint": [121, 122, 123], "base": [121, 142, 147, 278, 280], "invers": 122, "lexicograph": [122, 349], "order": [122, 139, 154, 276, 302, 320], "front": 123, "end": 123, "non": [124, 125, 140, 143, 146, 148, 149, 151, 293], "neg": [124, 125], "tamari": [128, 153, 344], "interv": 128, "poset": [128, 173, 174, 175, 176, 177, 178, 181, 182, 184, 185, 347], "regular": 129, "digit": 129, "odd": 129, "entri": [129, 306], "pascal": 129, "triangl": [129, 347], "variou": [129, 190], "strong": 130, "weak": 130, "kazhdan": 131, "lusztig": 131, "knutson": 132, "tao": 132, "puzzl": [132, 345], "intern": 134, "pyx": 134, "c": [135, 248, 249, 369], "wrapper": 135, "hadamard": 136, "miscellan": [138, 312, 321], "minimaj": 139, "quasisymmetr": [144, 145], "work": 145, "qsym": 145, "variabl": [146, 148, 149], "ncsym": 147, "necklac": 150, "decreas": 151, "park": [151, 157], "nu": [152, 153], "lattic": [153, 176, 180, 184, 218, 238, 239, 240, 268, 269, 344], "root": [154, 217, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272], "parallelogram": 156, "kleshchev": 160, "shift": [161, 303], "tupl": [162, 348], "iter": [163, 304, 349, 365], "friez": 166, "semistandard": 168, "perfect": 169, "match": 169, "what": 170, "doe": 170, "thi": 170, "file": [170, 171], "defin": [170, 295, 365], "plane": 172, "d": [175, 250, 251], "complet": [175, 349], "semilattic": [176, 180], "etc": 176, "forest": 177, "hass": 178, "semi": 180, "extens": 181, "mobil": 182, "m\u00f6biu": 183, "q": [186, 187, 260], "analogu": 186, "bernoulli": 187, "quickref": [188, 217], "ranker": 189, "recogniz": 190, "seri": [190, 318], "restrict": 191, "ribbon": [192, 193, 194], "shape": 193, "rig": [195, 196, 197, 207, 210, 211, 212, 213, 214], "configur": [195, 196, 197, 207, 210, 211, 212, 213], "biject": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "between": [197, 207], "margin": 197, "larg": 197, "a_n": 198, "a_": [199, 200, 201], "2n": [199, 200, 201], "2": [199, 200, 201, 206], "dagger": 199, "b_n": 202, "c_n": 203, "d_n": 204, "d_4": 205, "d_": 206, "n": 206, "kr": 207, "kleber": 208, "cartan": [217, 223, 224, 261, 262, 263, 264, 265, 266], "datum": 217, "reflect": [217, 236, 237, 345], "specif": 217, "ambient": 218, "space": [218, 240, 269, 286], "braid": [220, 221], "move": 220, "calcul": 220, "orbit": 221, "branch": 222, "dynkin": 228, "extend": [229, 230], "weyl": [229, 230, 270, 271], "fundament": 230, "heck": [231, 283], "integr": 232, "nonsymmetr": 233, "macdonald": [233, 289, 293], "pieri": 234, "visual": 235, "first": [235, 349], "plot": 235, "exercis": [235, 349], "chamber": 235, "pictur": 235, "higher": 235, "dimens": 235, "draw": 235, "top": 235, "solut": 235, "hand": 235, "aka": 235, "paper": 235, "custom": 235, "real": 237, "untwist": [243, 247, 249, 251, 253, 255, 257], "infin": 244, "bc": 246, "f": [254, 255], "g": [256, 257, 305], "h": 258, "fold": 263, "mark": 264, "node": 264, "reduc": 265, "relabel": 266, "super": [267, 336, 337], "charact": [270, 278, 283], "ring": 270, "unord": 272, "robinson": 273, "schenst": 273, "knuth": [273, 345], "insert": 273, "schubert": 274, "classic": 279, "littlewood": [282, 286], "basi": 283, "homogen": 284, "jack": 285, "quotient": 286, "ideal": [286, 346], "kostka": 287, "foulk": 287, "llt": 288, "multipl": [291, 298], "schur": [292, 297], "triangular": 295, "power": 296, "symplect": 300, "witt": 301, "shard": 302, "intersect": 302, "prime": 303, "shuffl": [304, 359], "sidon": 305, "similar": 306, "sine": 307, "gordon": 307, "y": [307, 345], "plotter": 307, "six": 308, "vertex": 308, "skew": [309, 310], "some": [311, 349], "sloan": 311, "speci": [312, 313, 314, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 349], "characterist": 313, "cycl": 315, "empti": 316, "functori": 317, "satisfi": [332, 333], "hereditari": 332, "whose": 333, "predic": 333, "pairwis": 333, "subword": [334, 335], "residu": 342, "tableautupl": 343, "tile": 345, "2d": 345, "easi": 345, "scott": 345, "pentamino": 345, "1d": 345, "allow": 345, "3d": 345, "donald": 345, "anim": 345, "5d": 345, "transit": 346, "closur": 346, "fan": 347, "sage": 349, "initi": 349, "poker": 349, "probabl": 349, "summari": 349, "other": 349, "new": 349, "point": 349, "decompos": 349, "up": 349, "infinit": [352, 355], "alphabet": 353, "creation": [354, 355], "lyndon": 356, "morphism": 357, "suffix": 360, "tri": 360, "datatyp": [362, 363, 365], "unsign": 362, "char": 362, "callabl": 365, "user": 366, "customiz": 366, "option": 366, "yang": 368}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Combinatorics": [[0, "combinatorics"], [5, "combinatorics"]], "Introductory material": [[0, "introductory-material"], [5, "introductory-material"], [39, "introductory-material"], [217, "introductory-material"], [312, "introductory-material"]], "Thematic indexes": [[0, "thematic-indexes"], [5, "thematic-indexes"]], "Utilities": [[0, "utilities"], [5, "utilities"]], "Related topics": [[0, "related-topics"], [5, "related-topics"]], "Comprehensive Module List": [[0, "comprehensive-module-list"], [1, "comprehensive-module-list"]], "Indices and Tables": [[0, "indices-and-tables"]], "Todo": [[1, "id1"], [2, "id1"], [10, "id18"], [16, "id1"], [16, "id2"], [16, "id3"], [16, "id4"], [16, "id12"], [16, "id14"], [24, "id1"], [25, "id1"], [34, "id1"], [38, "id2"], [38, "id3"], [45, "id2"], [58, "id4"], [67, "id2"], [67, "id5"], [67, "id6"], [75, "id8"], [76, "id2"], [79, "id2"], [81, "id4"], [81, "id5"], [84, "id2"], [88, "id4"], [97, "id2"], [99, "id5"], [99, "id8"], [99, "id10"], [101, "id1"], [101, "id2"], [106, "id15"], [106, "id16"], [106, "id17"], [107, "id2"], [108, "id1"], [108, "id2"], [108, "id3"], [108, "id4"], [108, "id5"], [108, "id6"], [108, "id10"], [112, "id17"], [118, "id3"], [121, "id1"], [126, "id1"], [128, "id10"], [132, "id1"], [137, "id1"], [139, "id19"], [142, "id1"], [142, "id2"], [143, "id7"], [143, "id10"], [143, "id28"], [144, "id10"], [144, "id14"], [144, "id31"], [144, "id32"], [152, "id2"], [152, "id3"], [158, "id30"], [170, "id3"], [170, "id23"], [179, "id1"], [180, "id9"], [181, "id5"], [185, "id19"], [189, "id1"], [195, "id1"], [209, "id5"], [209, "id6"], [209, "id7"], [209, "id8"], [209, "id14"], [209, "id15"], [209, "id16"], [209, "id17"], [212, "id8"], [212, "id10"], [214, "id1"], [219, "id1"], [224, "id1"], [224, "id2"], [224, "id3"], [224, "id4"], [224, "id5"], [224, "id6"], [224, "id7"], [224, "id10"], [226, "id1"], [226, "id2"], [227, "id1"], [229, "id2"], [231, "id1"], [231, "id4"], [231, "id8"], [231, "id10"], [233, "id1"], [233, "id6"], [233, "id9"], [233, "id13"], [234, "id7"], [235, "id1"], [235, "id2"], [236, "id1"], [236, "id2"], [238, "id2"], [238, "id6"], [238, "id7"], [238, "id8"], [238, "id9"], [239, "id1"], [239, "id2"], [239, "id5"], [239, "id6"], [240, "id1"], [261, "id1"], [261, "id2"], [261, "id3"], [261, "id4"], [268, "id1"], [269, "id1"], [270, "id1"], [271, "id1"], [271, "id2"], [272, "id1"], [279, "id1"], [290, "id5"], [292, "id6"], [298, "id11"], [299, "id1"], [299, "id7"], [299, "id10"], [299, "id17"], [299, "id25"], [299, "id48"], [307, "id2"], [309, "id4"], [312, "id1"], [312, "id2"], [334, "id1"], [339, "id1"], [341, "id1"], [342, "id3"], [343, "id2"], [349, "id2"], [349, "id3"], [349, "id4"], [349, "id7"]], "Abstract Recursive Trees": [[2, "abstract-recursive-trees"]], "Affine Permutations": [[3, "affine-permutations"]], "Algebraic combinatorics": [[4, "algebraic-combinatorics"]], "Thematic tutorials": [[4, "thematic-tutorials"]], "Enumerated sets of combinatorial objects": [[4, "enumerated-sets-of-combinatorial-objects"]], "Groups and Algebras": [[4, "groups-and-algebras"]], "Combinatorial Representation Theory": [[4, "combinatorial-representation-theory"]], "Operads and their algebras": [[4, "operads-and-their-algebras"]], "Alternating Sign Matrices": [[6, "alternating-sign-matrices"]], "Backtracking": [[7, "backtracking"]], "Baxter permutations": [[8, "baxter-permutations"]], "Binary Recurrence Sequences": [[9, "binary-recurrence-sequences"]], "Binary Trees": [[10, "binary-trees"]], "Blob Algebras": [[11, "blob-algebras"]], "Cartesian Products": [[12, "cartesian-products"]], "Enumerated sets of partitions, tableaux, \u2026": [[13, "enumerated-sets-of-partitions-tableaux"]], "Partitions": [[13, "partitions"]], "RSK": [[13, "rsk"]], "Combinatorial Hopf algebras": [[14, "combinatorial-hopf-algebras"]], "Poirier-Reutenauer Hopf algebra of standard tableaux": [[15, "poirier-reutenauer-hopf-algebra-of-standard-tableaux"]], "Word Quasi-symmetric functions": [[16, "word-quasi-symmetric-functions"]], "Cluster algebras and quivers": [[17, "cluster-algebras-and-quivers"]], "ClusterSeed": [[18, "clusterseed"]], "mutation_class": [[19, "mutation-class"]], "Helper functions for mutation types of quivers": [[20, "helper-functions-for-mutation-types-of-quivers"]], "Quiver": [[21, "quiver"]], "Quiver mutation types": [[22, "quiver-mutation-types"]], "Cluster complex (or generalized dual associahedron)": [[23, "cluster-complex-or-generalized-dual-associahedron"]], "Colored Permutations": [[24, "colored-permutations"]], "Combinatorial Functions": [[25, "combinatorial-functions"]], "Functions and classes": [[25, "functions-and-classes"]], "Fast computation of combinatorial functions (Cython + mpz)": [[26, "fast-computation-of-combinatorial-functions-cython-mpz"]], "Combinations": [[27, "combinations"]], "Combinatorial maps": [[28, "combinatorial-maps"]], "Integer compositions": [[29, "integer-compositions"]], "Signed Compositions": [[30, "signed-compositions"]], "Composition Tableaux": [[31, "composition-tableaux"]], "Constellations": [[32, "constellations"]], "Cores": [[33, "cores"]], "Counting": [[34, "counting"]], "Affine Crystals": [[35, "affine-crystals"]], "Affine factorization crystal of type A": [[36, "affine-factorization-crystal-of-type-a"]], "Affinization Crystals": [[37, "affinization-crystals"]], "Alcove paths": [[38, "alcove-paths"]], "Crystals": [[39, "crystals"]], "Catalogs of crystals": [[39, "catalogs-of-crystals"]], "See also": [[39, "see-also"]], "Benkart-Kang-Kashiwara crystals for the general-linear Lie superalgebra": [[40, "benkart-kang-kashiwara-crystals-for-the-general-linear-lie-superalgebra"]], "Catalog Of Crystals": [[41, "catalog-of-crystals"]], "Catalog": [[41, "catalog"]], "Catalog Of Elementary Crystals": [[42, "catalog-of-elementary-crystals"]], "Catalog Of Crystal Models For B(\\infty)": [[43, "catalog-of-crystal-models-for-b-infty"]], "Catalog Of Crystal Models For Kirillov-Reshetikhin Crystals": [[44, "catalog-of-crystal-models-for-kirillov-reshetikhin-crystals"]], "An introduction to crystals": [[45, "an-introduction-to-crystals"]], "Axiomatic definition": [[45, "axiomatic-definition"]], "Direct Sum of Crystals": [[46, "direct-sum-of-crystals"]], "Elementary Crystals": [[47, "elementary-crystals"]], "Fast Rank Two Crystals": [[48, "fast-rank-two-crystals"]], "Fully commutative stable Grothendieck crystal": [[49, "fully-commutative-stable-grothendieck-crystal"]], "Crystals of Generalized Young Walls": [[50, "crystals-of-generalized-young-walls"]], "Highest weight crystals": [[51, "highest-weight-crystals"]], "Induced Crystals": [[52, "induced-crystals"]], "\\mathcal{B}(\\infty) Crystals of Tableaux in Nonexceptional Types and G_2": [[53, "mathcal-b-infty-crystals-of-tableaux-in-nonexceptional-types-and-g-2"]], "Crystals of Kac modules of the general-linear Lie superalgebra": [[54, "crystals-of-kac-modules-of-the-general-linear-lie-superalgebra"]], "Kirillov-Reshetikhin Crystals": [[55, "kirillov-reshetikhin-crystals"]], "Kyoto Path Model for Affine Highest Weight Crystals": [[56, "kyoto-path-model-for-affine-highest-weight-crystals"]], "Crystals of letters": [[57, "crystals-of-letters"]], "Littelmann paths": [[58, "littelmann-paths"]], "Crystals of Modified Nakajima Monomials": [[59, "crystals-of-modified-nakajima-monomials"]], "Crystal of Bernstein-Zelevinsky Multisegments": [[60, "crystal-of-bernstein-zelevinsky-multisegments"]], "Crystal Of Mirkovi\u0107-Vilonen (MV) Polytopes": [[61, "crystal-of-mirkovic-vilonen-mv-polytopes"]], "\\mathcal{B}(\\infty) Crystal Of PBW Monomials": [[62, "mathcal-b-infty-crystal-of-pbw-monomials"]], "PBW Data": [[63, "pbw-data"]], "Polyhedral Realization of B(\\infty)": [[64, "polyhedral-realization-of-b-infty"]], "Spin Crystals": [[65, "spin-crystals"]], "Star-Crystal Structure On B(\\infty)": [[66, "star-crystal-structure-on-b-infty"]], "Tensor Products of Crystals": [[67, "tensor-products-of-crystals"]], "Tensor Products of Crystal Elements": [[68, "tensor-products-of-crystal-elements"]], "Cyclic sieving phenomenon": [[69, "cyclic-sieving-phenomenon"]], "De Bruijn sequences": [[70, "de-bruijn-sequences"]], "Degree sequences": [[71, "degree-sequences"]], "Definitions": [[71, "definitions"]], "Algorithms": [[71, "algorithms"]], "About the implementation": [[71, "about-the-implementation"]], "Derangements": [[72, "derangements"]], "Descent Algebras": [[73, "descent-algebras"]], "Combinatorial designs and incidence structures": [[74, "combinatorial-designs-and-incidence-structures"]], "Balanced Incomplete Block Designs (BIBD)": [[75, "balanced-incomplete-block-designs-bibd"]], "Functions": [[75, "functions"], [78, "functions"], [80, "functions"], [81, "functions"], [82, "functions"], [84, "functions"], [86, "functions"], [88, "functions"], [89, "functions"], [90, "functions"], [91, "functions"], [92, "functions"], [93, "functions"], [116, "functions"]], "Block designs": [[76, "block-designs"]], "Functions and methods": [[76, "functions-and-methods"], [107, "functions-and-methods"]], "Covering designs: coverings of t-element subsets of a v-set by k-sets": [[77, "covering-designs-coverings-of-t-element-subsets-of-a-v-set-by-k-sets"]], "Classes and methods": [[77, "classes-and-methods"], [83, "classes-and-methods"], [170, "classes-and-methods"], [181, "classes-and-methods"]], "Database of small combinatorial designs": [[78, "database-of-small-combinatorial-designs"]], "Catalog of designs": [[79, "catalog-of-designs"]], "Cython functions for combinatorial designs": [[80, "cython-functions-for-combinatorial-designs"]], "Difference families": [[81, "difference-families"]], "Difference Matrices": [[82, "difference-matrices"]], "Evenly distributed sets in finite fields": [[83, "evenly-distributed-sets-in-finite-fields"]], "External Representations of Block Designs": [[84, "external-representations-of-block-designs"]], "Database of generalised quadrangles with spread": [[85, "database-of-generalised-quadrangles-with-spread"]], "Group-Divisible Designs (GDD)": [[86, "group-divisible-designs-gdd"]], "Incidence structures (i.e. hypergraphs, i.e. set systems)": [[87, "incidence-structures-i-e-hypergraphs-i-e-set-systems"]], "Methods": [[87, "methods"], [94, "methods"], [95, "methods"], [106, "methods"]], "Mutually Orthogonal Latin Squares (MOLS)": [[88, "mutually-orthogonal-latin-squares-mols"]], "Orthogonal arrays (OA)": [[89, "orthogonal-arrays-oa"]], "Orthogonal arrays (build recursive constructions)": [[90, "orthogonal-arrays-build-recursive-constructions"]], "Orthogonal arrays (find recursive constructions)": [[91, "orthogonal-arrays-find-recursive-constructions"]], "Resolvable Balanced Incomplete Block Design (RBIBD)": [[92, "resolvable-balanced-incomplete-block-design-rbibd"]], "Steiner Quadruple Systems": [[93, "steiner-quadruple-systems"]], "Index": [[93, "index"], [95, "index"]], "Hypergraph isomorphic copy search": [[94, "hypergraph-isomorphic-copy-search"]], "Implementation": [[94, "implementation"]], "Algorithm": [[94, "algorithm"]], "Limitations": [[94, "limitations"]], "Two-graphs": [[95, "two-graphs"]], "Combinatorial diagrams": [[96, "combinatorial-diagrams"]], "Diagram and Partition Algebras": [[97, "diagram-and-partition-algebras"]], "Exact Cover Problem via Dancing Links": [[98, "exact-cover-problem-via-dancing-links"]], "Dyck Words": [[99, "dyck-words"]], "Substitutions over unit cube faces (Rauzy fractals)": [[100, "substitutions-over-unit-cube-faces-rauzy-fractals"]], "Enumerated sets and combinatorial objects": [[101, "enumerated-sets-and-combinatorial-objects"]], "Categories": [[101, "categories"]], "Basic enumerated sets": [[101, "basic-enumerated-sets"]], "Integer lists": [[101, "integer-lists"]], "Words": [[101, "words"]], "Permutations, \u2026": [[101, "permutations"]], "Partitions, tableaux, \u2026": [[101, "partitions-tableaux"]], "Polyominoes": [[101, "polyominoes"]], "Integer matrices, \u2026": [[101, "integer-matrices"]], "Subsets and set partitions": [[101, "subsets-and-set-partitions"]], "Trees": [[101, "trees"]], "Enumerated sets related to graphs": [[101, "enumerated-sets-related-to-graphs"]], "Backtracking solvers and generic enumerated sets": [[101, "backtracking-solvers-and-generic-enumerated-sets"]], "Low level enumerated sets": [[101, "low-level-enumerated-sets"]], "Misc enumerated sets": [[101, "misc-enumerated-sets"]], "Tools for enumeration modulo the action of a permutation group": [[102, "tools-for-enumeration-modulo-the-action-of-a-permutation-group"]], "Compute Bell and Uppuluri-Carpenter numbers": [[103, "compute-bell-and-uppuluri-carpenter-numbers"]], "Families": [[104, "families"]], "Brent Yorgey\u2019s fast algorithm for integer vector (multiset) partitions.": [[105, "brent-yorgey-s-fast-algorithm-for-integer-vector-multiset-partitions"]], "Finite state machines, automata, transducers": [[106, "finite-state-machines-automata-transducers"]], "Contents": [[106, "contents"]], "FiniteStateMachine and derived classes Transducer and Automaton": [[106, "finitestatemachine-and-derived-classes-transducer-and-automaton"]], "Accessing parts of a finite state machine": [[106, "accessing-parts-of-a-finite-state-machine"]], "(Modified) Copies": [[106, "modified-copies"]], "Manipulation": [[106, "manipulation"]], "Properties": [[106, "properties"]], "Operations": [[106, "operations"]], "Simplification": [[106, "simplification"]], "Conversion": [[106, "conversion"]], "LaTeX output": [[106, "latex-output"], [106, "finite-state-machine-latex-output"]], "FSMState": [[106, "fsmstate"]], "FSMTransition": [[106, "fsmtransition"]], "FSMProcessIterator": [[106, "fsmprocessiterator"]], "Helper Functions": [[106, "helper-functions"]], "Examples": [[106, "examples"], [129, "examples"]], "A simple finite state machine": [[106, "a-simple-finite-state-machine"]], "A simple Automaton (recognizing NAFs)": [[106, "a-simple-automaton-recognizing-nafs"]], "Recognizing NAFs via Automata Operations": [[106, "recognizing-nafs-via-automata-operations"]], "A simple transducer (binary inverter)": [[106, "a-simple-transducer-binary-inverter"]], "Transducers and (in)finite Words": [[106, "transducers-and-in-finite-words"]], "A transducer which performs division by 3 in binary": [[106, "a-transducer-which-performs-division-by-3-in-binary"]], "Gray Code": [[106, "gray-code"]], "Using the hook-functions": [[106, "using-the-hook-functions"]], "Detecting sequences with same number of 0 and 1": [[106, "detecting-sequences-with-same-number-of-0-and-1"]], "Common Automata and Transducers (Finite State Machines Generators)": [[107, "common-automata-and-transducers-finite-state-machines-generators"]], "Free Quasi-symmetric functions": [[108, "free-quasi-symmetric-functions"]], "Free Dendriform Algebras": [[109, "free-dendriform-algebras"]], "Free modules": [[110, "free-modules"]], "Free Pre-Lie Algebras": [[111, "free-pre-lie-algebras"]], "Fully commutative elements of Coxeter groups": [[112, "fully-commutative-elements-of-coxeter-groups"]], "Acknowledgements": [[112, "acknowledgements"], [132, "acknowledgements"]], "Fully packed loops": [[113, "fully-packed-loops"]], "Gelfand-Tsetlin Patterns": [[114, "gelfand-tsetlin-patterns"]], "Paths in Directed Acyclic Graphs": [[115, "paths-in-directed-acyclic-graphs"]], "Gray codes": [[116, "gray-codes"]], "Grossman-Larson Hopf Algebras": [[117, "grossman-larson-hopf-algebras"]], "Growth diagrams and dual graded graphs": [[118, "growth-diagrams-and-dual-graded-graphs"]], "A guided tour": [[118, "a-guided-tour"], [236, "a-guided-tour"]], "Invocation": [[118, "invocation"]], "Rules currently available": [[118, "rules-currently-available"]], "Background": [[118, "background"]], "Implementing your own growth diagrams": [[118, "implementing-your-own-growth-diagrams"]], "Hall Polynomials": [[119, "hall-polynomials"]], "The Hillman-Grassl correspondence": [[120, "the-hillman-grassl-correspondence"]], "Enumerated set of lists of integers with constraints: base classes": [[121, "enumerated-set-of-lists-of-integers-with-constraints-base-classes"]], "Enumerated set of lists of integers with constraints, in inverse lexicographic order": [[122, "enumerated-set-of-lists-of-integers-with-constraints-in-inverse-lexicographic-order"]], "Enumerated set of lists of integers with constraints: front-end": [[123, "enumerated-set-of-lists-of-integers-with-constraints-front-end"]], "Counting, generating, and manipulating non-negative integer matrices": [[124, "counting-generating-and-manipulating-non-negative-integer-matrices"]], "(Non-negative) Integer vectors": [[125, "non-negative-integer-vectors"]], "Weighted Integer Vectors": [[126, "weighted-integer-vectors"]], "Integer vectors modulo the action of a permutation group": [[127, "integer-vectors-modulo-the-action-of-a-permutation-group"]], "Tamari Interval-posets": [[128, "tamari-interval-posets"]], "k-regular Sequences": [[129, "k-regular-sequences"]], "Binary sum of digits": [[129, "binary-sum-of-digits"]], "Number of odd entries in Pascal\u2019s triangle": [[129, "number-of-odd-entries-in-pascal-s-triangle"]], "Various": [[129, "various"], [190, "various"]], "Classes and Methods": [[129, "classes-and-methods"], [190, "classes-and-methods"]], "Strong and weak tableaux": [[130, "strong-and-weak-tableaux"]], "Kazhdan-Lusztig Polynomials": [[131, "kazhdan-lusztig-polynomials"]], "Knutson-Tao Puzzles": [[132, "knutson-tao-puzzles"]], "Combinatorics on matrices": [[133, "combinatorics-on-matrices"]], "Dancing Links internal pyx code": [[134, "dancing-links-internal-pyx-code"]], "Dancing links C++ wrapper": [[135, "dancing-links-c-wrapper"]], "Hadamard matrices": [[136, "hadamard-matrices"]], "Latin Squares": [[137, "latin-squares"]], "Miscellaneous": [[138, "miscellaneous"], [312, "miscellaneous"]], "Ordered Multiset Partitions into Sets and the Minimaj Crystal": [[139, "ordered-multiset-partitions-into-sets-and-the-minimaj-crystal"]], "Non-commutative symmetric functions and quasi-symmetric functions": [[140, "non-commutative-symmetric-functions-and-quasi-symmetric-functions"]], "Common combinatorial tools": [[141, "common-combinatorial-tools"]], "Generic code for bases": [[142, "generic-code-for-bases"]], "Non-Commutative Symmetric Functions": [[143, "non-commutative-symmetric-functions"]], "Quasisymmetric functions": [[144, "quasisymmetric-functions"]], "Introduction to Quasisymmetric Functions": [[145, "introduction-to-quasisymmetric-functions"]], "Working with symmetric functions": [[145, "working-with-symmetric-functions"]], "QSym is a Hopf algebra": [[145, "qsym-is-a-hopf-algebra"]], "Symmetric functions in non-commuting variables": [[146, "symmetric-functions-in-non-commuting-variables"]], "Bases for NCSym": [[147, "bases-for-ncsym"]], "Dual Symmetric Functions in Non-Commuting Variables": [[148, "dual-symmetric-functions-in-non-commuting-variables"]], "Symmetric Functions in Non-Commuting Variables": [[149, "symmetric-functions-in-non-commuting-variables"]], "Necklaces": [[150, "necklaces"]], "Non-Decreasing Parking Functions": [[151, "non-decreasing-parking-functions"]], "\\nu-Dyck Words": [[152, "nu-dyck-words"]], "\\nu-Tamari lattice": [[153, "nu-tamari-lattice"]], "Ordered Rooted Trees": [[154, "ordered-rooted-trees"]], "Output functions": [[155, "output-functions"]], "Parallelogram Polyominoes": [[156, "parallelogram-polyominoes"]], "Parking Functions": [[157, "parking-functions"]], "Integer partitions": [[158, "integer-partitions"]], "Partition/Diagram Algebras": [[159, "partition-diagram-algebras"]], "Kleshchev partitions": [[160, "kleshchev-partitions"]], "Partition Shifting Algebras": [[161, "partition-shifting-algebras"]], "Partition tuples": [[162, "partition-tuples"]], "Iterators over the partitions of an integer": [[163, "iterators-over-the-partitions-of-an-integer"]], "Catalog of Path Tableaux": [[164, "catalog-of-path-tableaux"]], "Dyck Paths": [[165, "dyck-paths"]], "Frieze Patterns": [[166, "frieze-patterns"]], "Path Tableaux": [[167, "path-tableaux"]], "Semistandard Tableaux": [[168, "semistandard-tableaux"]], "Perfect matchings": [[169, "perfect-matchings"]], "Permutations": [[170, "permutations"]], "What does this file define ?": [[170, "what-does-this-file-define"]], "Permutations (Cython file)": [[171, "permutations-cython-file"]], "Plane Partitions": [[172, "plane-partitions"]], "Posets": [[173, "posets"]], "Cartesian products of Posets": [[174, "cartesian-products-of-posets"]], "D-Complete Posets": [[175, "d-complete-posets"]], "Elements of posets, lattices, semilattices, etc.": [[176, "elements-of-posets-lattices-semilattices-etc"]], "Forest Posets": [[177, "forest-posets"]], "Hasse diagrams of posets": [[178, "hasse-diagrams-of-posets"]], "Incidence Algebras": [[179, "incidence-algebras"]], "Finite lattices and semilattices": [[180, "finite-lattices-and-semilattices"]], "List of (semi)lattice methods": [[180, "list-of-semi-lattice-methods"]], "Linear Extensions of Posets": [[181, "linear-extensions-of-posets"]], "Mobile posets": [[182, "mobile-posets"]], "M\u00f6bius Algebras": [[183, "mobius-algebras"]], "Catalog of posets and lattices": [[184, "catalog-of-posets-and-lattices"]], "Constructions": [[184, "constructions"], [349, "constructions"]], "Finite posets": [[185, "finite-posets"]], "List of Poset methods": [[185, "list-of-poset-methods"]], "Classes and functions": [[185, "classes-and-functions"]], "q-Analogues": [[186, "q-analogues"]], "q-Bernoulli Numbers and Polynomials": [[187, "q-bernoulli-numbers-and-polynomials"]], "Combinatorics quickref": [[188, "combinatorics-quickref"]], "Rankers": [[189, "rankers"]], "Recognizable Series": [[190, "recognizable-series"]], "Restricted growth arrays": [[191, "restricted-growth-arrays"]], "Ribbons": [[192, "ribbons"]], "Ribbon Shaped Tableaux": [[193, "ribbon-shaped-tableaux"]], "Ribbon Tableaux": [[194, "ribbon-tableaux"]], "Rigged configurations": [[195, "rigged-configurations"]], "Bijections": [[195, "bijections"]], "Abstract classes for the rigged configuration bijections": [[196, "abstract-classes-for-the-rigged-configuration-bijections"]], "Bijection between rigged configurations for B(\\infty) and marginally large tableaux": [[197, "bijection-between-rigged-configurations-for-b-infty-and-marginally-large-tableaux"]], "Bijection classes for type A_n^{(1)}": [[198, "bijection-classes-for-type-a-n-1"]], "Bijection classes for type A_{2n}^{(2)\\dagger}": [[199, "bijection-classes-for-type-a-2n-2-dagger"]], "Bijection classes for type A_{2n}^{(2)}": [[200, "bijection-classes-for-type-a-2n-2"]], "Bijection classes for type A_{2n-1}^{(2)}.": [[201, "bijection-classes-for-type-a-2n-1-2"]], "Bijection classes for type B_n^{(1)}": [[202, "bijection-classes-for-type-b-n-1"]], "Bijection classes for type C_n^{(1)}": [[203, "bijection-classes-for-type-c-n-1"]], "Bijection classes for type D_n^{(1)}": [[204, "bijection-classes-for-type-d-n-1"]], "Bijection classes for type D_4^{(3)}": [[205, "bijection-classes-for-type-d-4-3"]], "Bijection classes for type D_{n+1}^{(2)}": [[206, "bijection-classes-for-type-d-n-1-2"]], "Bijection between rigged configurations and KR tableaux": [[207, "bijection-between-rigged-configurations-and-kr-tableaux"]], "Kleber Trees": [[208, "kleber-trees"]], "Kirillov-Reshetikhin Tableaux": [[209, "kirillov-reshetikhin-tableaux"]], "Crystal of Rigged Configurations": [[210, "crystal-of-rigged-configurations"]], "Rigged Configurations of \\mathcal{B}(\\infty)": [[211, "rigged-configurations-of-mathcal-b-infty"]], "Rigged Configuration Elements": [[212, "rigged-configuration-elements"]], "Rigged Configurations": [[213, "rigged-configurations"]], "Rigged Partitions": [[214, "rigged-partitions"]], "Tensor Product of Kirillov-Reshetikhin Tableaux": [[215, "tensor-product-of-kirillov-reshetikhin-tableaux"]], "Tensor Product of Kirillov-Reshetikhin Tableaux Elements": [[216, "tensor-product-of-kirillov-reshetikhin-tableaux-elements"]], "Root Systems": [[217, "root-systems"]], "Quickref": [[217, "quickref"]], "Related material": [[217, "related-material"]], "Cartan datum": [[217, "cartan-datum"]], "Root systems": [[217, "id1"], [241, "root-systems"]], "Coxeter groups": [[217, "coxeter-groups"]], "Finite reflection groups": [[217, "finite-reflection-groups"]], "Representation theory": [[217, "representation-theory"]], "Root system data and code for specific families of Cartan types": [[217, "root-system-data-and-code-for-specific-families-of-cartan-types"]], "Root system data and code for specific Cartan types": [[217, "root-system-data-and-code-for-specific-cartan-types"]], "Ambient lattices and ambient spaces": [[218, "ambient-lattices-and-ambient-spaces"]], "Associahedron": [[219, "associahedron"]], "Braid Move Calculator": [[220, "braid-move-calculator"]], "Braid Orbit": [[221, "braid-orbit"]], "Branching Rules": [[222, "branching-rules"]], "Cartan matrices": [[223, "cartan-matrices"]], "Cartan types": [[224, "cartan-types"]], "Coxeter Groups": [[225, "coxeter-groups"]], "Coxeter Matrices": [[226, "coxeter-matrices"]], "Coxeter Types": [[227, "coxeter-types"]], "Dynkin diagrams": [[228, "dynkin-diagrams"]], "Extended Affine Weyl Groups": [[229, "extended-affine-weyl-groups"]], "Fundamental Group of an Extended Affine Weyl Group": [[230, "fundamental-group-of-an-extended-affine-weyl-group"]], "Hecke algebra representations": [[231, "hecke-algebra-representations"]], "Integrable Representations of Affine Lie Algebras": [[232, "integrable-representations-of-affine-lie-algebras"]], "Nonsymmetric Macdonald polynomials": [[233, "nonsymmetric-macdonald-polynomials"]], "Pieri Factors": [[234, "pieri-factors"]], "Tutorial: visualizing root systems": [[235, "tutorial-visualizing-root-systems"]], "First plots": [[235, "first-plots"]], "Exercise": [[235, null], [235, null], [235, null], [235, null], [235, null], [349, null], [349, "exercise-alternating-sign-matrices"], [349, null], [349, null], [349, null], [349, null]], "Alcoves and chambers": [[235, "alcoves-and-chambers"]], "Alcove pictures for affine types": [[235, "alcove-pictures-for-affine-types"]], "Exercises": [[235, null], [235, null], [235, null], [349, null]], "Higher dimension affine pictures": [[235, "higher-dimension-affine-pictures"]], "Drawing on top of a root system plot": [[235, "drawing-on-top-of-a-root-system-plot"]], "Solution": [[235, null]], "Hand drawing on top of a root system plot (aka Coxeter graph paper)": [[235, "hand-drawing-on-top-of-a-root-system-plot-aka-coxeter-graph-paper"]], "Drawing custom objects on top of a root system plot": [[235, "drawing-custom-objects-on-top-of-a-root-system-plot"]], "Finite complex reflection groups": [[236, "finite-complex-reflection-groups"]], "Finite real reflection groups": [[237, "finite-real-reflection-groups"]], "Group algebras of root lattice realizations": [[238, "group-algebras-of-root-lattice-realizations"]], "Root lattice realizations": [[239, "root-lattice-realizations"]], "Root lattices and root spaces": [[240, "root-lattices-and-root-spaces"]], "Root system data for type A": [[242, "root-system-data-for-type-a"]], "Root system data for (untwisted) type A affine": [[243, "root-system-data-for-untwisted-type-a-affine"]], "Root system data for type A infinity": [[244, "root-system-data-for-type-a-infinity"]], "Root system data for type B": [[245, "root-system-data-for-type-b"]], "Root system data for type BC affine": [[246, "root-system-data-for-type-bc-affine"]], "Root system data for (untwisted) type B affine": [[247, "root-system-data-for-untwisted-type-b-affine"]], "Root system data for type C": [[248, "root-system-data-for-type-c"]], "Root system data for (untwisted) type C affine": [[249, "root-system-data-for-untwisted-type-c-affine"]], "Root system data for type D": [[250, "root-system-data-for-type-d"]], "Root system data for (untwisted) type D affine": [[251, "root-system-data-for-untwisted-type-d-affine"]], "Root system data for type E": [[252, "root-system-data-for-type-e"]], "Root system data for (untwisted) type E affine": [[253, "root-system-data-for-untwisted-type-e-affine"]], "Root system data for type F": [[254, "root-system-data-for-type-f"]], "Root system data for (untwisted) type F affine": [[255, "root-system-data-for-untwisted-type-f-affine"]], "Root system data for type G": [[256, "root-system-data-for-type-g"]], "Root system data for (untwisted) type G affine": [[257, "root-system-data-for-untwisted-type-g-affine"]], "Root system data for type H": [[258, "root-system-data-for-type-h"]], "Root system data for type I": [[259, "root-system-data-for-type-i"]], "Root system data for type Q": [[260, "root-system-data-for-type-q"]], "Root system data for affine Cartan types": [[261, "root-system-data-for-affine-cartan-types"]], "Root system data for dual Cartan types": [[262, "root-system-data-for-dual-cartan-types"]], "Root system data for folded Cartan types": [[263, "root-system-data-for-folded-cartan-types"]], "Root system data for Cartan types with marked nodes": [[264, "root-system-data-for-cartan-types-with-marked-nodes"]], "Root system data for reducible Cartan types": [[265, "root-system-data-for-reducible-cartan-types"]], "Root system data for relabelled Cartan types": [[266, "root-system-data-for-relabelled-cartan-types"]], "Root system data for super type A": [[267, "root-system-data-for-super-type-a"]], "Weight lattice realizations": [[268, "weight-lattice-realizations"]], "Weight lattices and weight spaces": [[269, "weight-lattices-and-weight-spaces"]], "Weyl Character Rings": [[270, "weyl-character-rings"]], "Weyl Groups": [[271, "weyl-groups"]], "Rooted (Unordered) Trees": [[272, "rooted-unordered-trees"]], "Robinson-Schensted-Knuth correspondence": [[273, "robinson-schensted-knuth-correspondence"]], "Introduction": [[273, "introduction"]], "Insertions currently available": [[273, "insertions-currently-available"]], "Implementing your own insertion rule": [[273, "implementing-your-own-insertion-rule"]], "Schubert Polynomials": [[274, "schubert-polynomials"]], "Set Partitions": [[275, "set-partitions"]], "Ordered Set Partitions": [[276, "ordered-set-partitions"]], "Symmetric Functions": [[277, "symmetric-functions"], [299, "symmetric-functions"]], "Characters of the symmetric group as bases of the symmetric functions": [[278, "characters-of-the-symmetric-group-as-bases-of-the-symmetric-functions"]], "Classical symmetric functions": [[279, "classical-symmetric-functions"]], "Generic dual bases symmetric functions": [[280, "generic-dual-bases-symmetric-functions"]], "Elementary symmetric functions": [[281, "elementary-symmetric-functions"]], "Hall-Littlewood Polynomials": [[282, "hall-littlewood-polynomials"]], "Hecke Character Basis": [[283, "hecke-character-basis"]], "Homogeneous symmetric functions": [[284, "homogeneous-symmetric-functions"]], "Jack Symmetric Functions": [[285, "jack-symmetric-functions"]], "Quotient of symmetric function space by ideal generated by Hall-Littlewood symmetric functions": [[286, "quotient-of-symmetric-function-space-by-ideal-generated-by-hall-littlewood-symmetric-functions"]], "Kostka-Foulkes Polynomials": [[287, "kostka-foulkes-polynomials"]], "LLT symmetric functions": [[288, "llt-symmetric-functions"]], "Macdonald Polynomials": [[289, "macdonald-polynomials"]], "Monomial symmetric functions": [[290, "monomial-symmetric-functions"]], "Multiplicative symmetric functions": [[291, "multiplicative-symmetric-functions"]], "k-Schur Functions": [[292, "k-schur-functions"]], "Non-symmetric Macdonald Polynomials": [[293, "non-symmetric-macdonald-polynomials"]], "Orthogonal Symmetric Functions": [[294, "orthogonal-symmetric-functions"]], "Symmetric functions defined by orthogonality and triangularity": [[295, "symmetric-functions-defined-by-orthogonality-and-triangularity"]], "Power sum symmetric functions": [[296, "power-sum-symmetric-functions"]], "Schur symmetric functions": [[297, "schur-symmetric-functions"]], "Symmetric functions, with their multiple realizations": [[298, "symmetric-functions-with-their-multiple-realizations"]], "Symplectic Symmetric Functions": [[300, "symplectic-symmetric-functions"]], "Witt symmetric functions": [[301, "witt-symmetric-functions"]], "Shard intersection order": [[302, "shard-intersection-order"]], "Shifted primed tableaux": [[303, "shifted-primed-tableaux"]], "Shuffle product of iterables": [[304, "shuffle-product-of-iterables"]], "Sidon sets and their generalizations, Sidon g-sets": [[305, "sidon-sets-and-their-generalizations-sidon-g-sets"]], "Similarity class types of matrices with entries in a finite field": [[306, "similarity-class-types-of-matrices-with-entries-in-a-finite-field"]], "sine-Gordon Y-system plotter": [[307, "sine-gordon-y-system-plotter"]], "Six Vertex Model": [[308, "six-vertex-model"]], "Skew Partitions": [[309, "skew-partitions"]], "Skew Tableaux": [[310, "skew-tableaux"]], "Functions that compute some of the sequences in Sloane\u2019s tables": [[311, "functions-that-compute-some-of-the-sequences-in-sloane-s-tables"]], "Combinatorial species": [[312, "combinatorial-species"]], "Basic Species": [[312, "basic-species"]], "Operations on Species": [[312, "operations-on-species"]], "Characteristic Species": [[313, "characteristic-species"]], "Composition species": [[314, "composition-species"]], "Cycle Species": [[315, "cycle-species"]], "Empty Species": [[316, "empty-species"]], "Functorial composition species": [[317, "functorial-composition-species"]], "Generating Series": [[318, "generating-series"]], "Examples of Combinatorial Species": [[319, "examples-of-combinatorial-species"]], "Linear-order Species": [[320, "linear-order-species"]], "Miscellaneous Functions": [[321, "miscellaneous-functions"]], "Partition Species": [[322, "partition-species"]], "Permutation species": [[323, "permutation-species"]], "Product species": [[324, "product-species"]], "Recursive Species": [[325, "recursive-species"]], "Set Species": [[326, "set-species"]], "Combinatorial Species": [[327, "combinatorial-species"]], "Species structures": [[328, "species-structures"]], "Subset Species": [[329, "subset-species"]], "Sum species": [[330, "sum-species"]], "Subsets": [[331, "subsets"]], "Subsets satisfying a hereditary property": [[332, "subsets-satisfying-a-hereditary-property"]], "Subsets whose elements satisfy a predicate pairwise": [[333, "subsets-whose-elements-satisfy-a-predicate-pairwise"]], "Subwords": [[334, "subwords"]], "Subword complex": [[335, "subword-complex"]], "Super Tableaux": [[336, "super-tableaux"]], "Super Partitions": [[337, "super-partitions"]], "Symmetric Group Algebra": [[338, "symmetric-group-algebra"]], "Representations of the Symmetric Group": [[339, "representations-of-the-symmetric-group"]], "T-sequences": [[340, "t-sequences"]], "Tableaux": [[341, "tableaux"]], "Residue sequences of tableaux": [[342, "residue-sequences-of-tableaux"]], "TableauTuples": [[343, "tableautuples"]], "Generalized Tamari lattices": [[344, "generalized-tamari-lattices"]], "Tiling Solver": [[345, "tiling-solver"]], "2d Easy Example": [[345, "d-easy-example"]], "Scott\u2019s pentamino problem": [[345, "scott-s-pentamino-problem"]], "1d Easy Example": [[345, "id3"]], "2d Puzzle allowing reflections": [[345, "d-puzzle-allowing-reflections"]], "3d Puzzle": [[345, "d-puzzle"]], "Donald Knuth example : the Y pentamino": [[345, "donald-knuth-example-the-y-pentamino"]], "Animation of Donald Knuth\u2019s dancing links": [[345, "animation-of-donald-knuth-s-dancing-links"]], "5d Easy Example": [[345, "id5"]], "Transitive ideal closure tool": [[346, "transitive-ideal-closure-tool"]], "Combinatorial triangles for posets and fans": [[347, "combinatorial-triangles-for-posets-and-fans"]], "Tuples": [[348, "tuples"]], "Introduction to combinatorics in Sage": [[349, "introduction-to-combinatorics-in-sage"]], "Initial examples": [[349, "initial-examples"]], "Poker and probability": [[349, "poker-and-probability"]], "Enumeration of trees using generating functions": [[349, "enumeration-of-trees-using-generating-functions"]], "Exercise: enumeration of binary trees": [[349, "exo-enumeration-arbres"]], "Summary": [[349, "summary"], [349, "id8"]], "Common enumerated sets": [[349, "common-enumerated-sets"]], "First example: the subsets of a set": [[349, "first-example-the-subsets-of-a-set"]], "Partitions of integers": [[349, "partitions-of-integers"]], "Some other finite enumerated sets": [[349, "some-other-finite-enumerated-sets"]], "Set comprehension and iterators": [[349, "set-comprehension-and-iterators"]], "Operations on iterators": [[349, "operations-on-iterators"]], "Implementation of new iterators": [[349, "implementation-of-new-iterators"]], "Exercise: complete binary tree iterator": [[349, "exo-iterators-catalan"]], "Generic algorithms": [[349, "generic-algorithms"]], "Lexicographic generation of lists of integers": [[349, "lexicographic-generation-of-lists-of-integers"]], "Integer points in polytopes": [[349, "integer-points-in-polytopes"]], "Species, decomposable combinatorial classes": [[349, "species-decomposable-combinatorial-classes"]], "Graphs up to isomorphism": [[349, "graphs-up-to-isomorphism"]], "Vector Partitions": [[350, "vector-partitions"]], "Combinatorics on words": [[351, "combinatorics-on-words"]], "Abstract word (finite or infinite)": [[352, "abstract-word-finite-or-infinite"]], "Alphabet": [[353, "alphabet"]], "Finite word": [[354, "finite-word"]], "Creation of a finite word": [[354, "creation-of-a-finite-word"]], "Functions and algorithms": [[354, "functions-and-algorithms"]], "Factors and Rauzy Graphs": [[354, "factors-and-rauzy-graphs"]], "Infinite word": [[355, "infinite-word"]], "Creation of an infinite word": [[355, "creation-of-an-infinite-word"]], "Lyndon words": [[356, "lyndon-words"]], "Word morphisms/substitutions": [[357, "word-morphisms-substitutions"]], "Word paths": [[358, "word-paths"]], "Shuffle product of words": [[359, "shuffle-product-of-words"]], "Suffix Tries and Suffix Trees": [[360, "suffix-tries-and-suffix-trees"]], "Word classes": [[361, "word-classes"]], "Fast word datatype using an array of unsigned char": [[362, "fast-word-datatype-using-an-array-of-unsigned-char"]], "Datatypes for finite words": [[363, "datatypes-for-finite-words"]], "Common words": [[364, "common-words"]], "Datatypes for words defined by iterators and callables": [[365, "datatypes-for-words-defined-by-iterators-and-callables"]], "User-customizable options for words": [[366, "user-customizable-options-for-words"]], "Set of words": [[367, "set-of-words"]], "Yang-Baxter Graphs": [[368, "yang-baxter-graphs"]], "C-Finite Sequences": [[369, "c-finite-sequences"]]}, "indexentries": {"abstractclonabletree (class in sage.combinat.abstract_tree)": [[2, "sage.combinat.abstract_tree.AbstractClonableTree"]], "abstractlabelledclonabletree (class in sage.combinat.abstract_tree)": [[2, "sage.combinat.abstract_tree.AbstractLabelledClonableTree"]], "abstractlabelledtree (class in sage.combinat.abstract_tree)": [[2, "sage.combinat.abstract_tree.AbstractLabelledTree"]], "abstracttree (class in sage.combinat.abstract_tree)": [[2, "sage.combinat.abstract_tree.AbstractTree"]], "as_digraph() (sage.combinat.abstract_tree.abstractlabelledtree method)": [[2, "sage.combinat.abstract_tree.AbstractLabelledTree.as_digraph"]], "breadth_first_order_traversal() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.breadth_first_order_traversal"]], "canonical_labelling() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.canonical_labelling"]], "check() (sage.combinat.abstract_tree.abstractclonabletree method)": [[2, "sage.combinat.abstract_tree.AbstractClonableTree.check"]], "depth() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.depth"]], "from_hexacode() (in module sage.combinat.abstract_tree)": [[2, "sage.combinat.abstract_tree.from_hexacode"]], "iterative_post_order_traversal() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.iterative_post_order_traversal"]], "iterative_pre_order_traversal() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.iterative_pre_order_traversal"]], "label() (sage.combinat.abstract_tree.abstractlabelledtree method)": [[2, "sage.combinat.abstract_tree.AbstractLabelledTree.label"]], "labels() (sage.combinat.abstract_tree.abstractlabelledtree method)": [[2, "sage.combinat.abstract_tree.AbstractLabelledTree.labels"]], "leaf_labels() (sage.combinat.abstract_tree.abstractlabelledtree method)": [[2, "sage.combinat.abstract_tree.AbstractLabelledTree.leaf_labels"]], "map_labels() (sage.combinat.abstract_tree.abstractlabelledclonabletree method)": [[2, "sage.combinat.abstract_tree.AbstractLabelledClonableTree.map_labels"]], "module": [[2, "module-sage.combinat.abstract_tree"], [3, "module-sage.combinat.affine_permutation"], [4, "module-sage.combinat.algebraic_combinatorics"], [5, "module-sage.combinat.all"], [6, "module-sage.combinat.alternating_sign_matrix"], [7, "module-sage.combinat.backtrack"], [8, "module-sage.combinat.baxter_permutations"], [9, "module-sage.combinat.binary_recurrence_sequences"], [10, "module-sage.combinat.binary_tree"], [11, "module-sage.combinat.blob_algebra"], [12, "module-sage.combinat.cartesian_product"], [13, "module-sage.combinat.catalog_partitions"], [14, "module-sage.combinat.chas.all"], [15, "module-sage.combinat.chas.fsym"], [16, "module-sage.combinat.chas.wqsym"], [17, "module-sage.combinat.cluster_algebra_quiver.all"], [18, "module-sage.combinat.cluster_algebra_quiver.cluster_seed"], [19, "module-sage.combinat.cluster_algebra_quiver.mutation_class"], [20, "module-sage.combinat.cluster_algebra_quiver.mutation_type"], [21, "module-sage.combinat.cluster_algebra_quiver.quiver"], [22, "module-sage.combinat.cluster_algebra_quiver.quiver_mutation_type"], [23, "module-sage.combinat.cluster_complex"], [24, "module-sage.combinat.colored_permutations"], [25, "module-sage.combinat.combinat"], [26, "module-sage.combinat.combinat_cython"], [27, "module-sage.combinat.combination"], [28, "module-sage.combinat.combinatorial_map"], [29, "module-sage.combinat.composition"], [30, "module-sage.combinat.composition_signed"], [31, "module-sage.combinat.composition_tableau"], [32, "module-sage.combinat.constellation"], [33, "module-sage.combinat.core"], [34, "module-sage.combinat.counting"], [35, "module-sage.combinat.crystals.affine"], [36, "module-sage.combinat.crystals.affine_factorization"], [37, "module-sage.combinat.crystals.affinization"], [38, "module-sage.combinat.crystals.alcove_path"], [39, "module-sage.combinat.crystals.all"], [40, "module-sage.combinat.crystals.bkk_crystals"], [41, "module-sage.combinat.crystals.catalog"], [42, "module-sage.combinat.crystals.catalog_elementary_crystals"], [43, "module-sage.combinat.crystals.catalog_infinity_crystals"], [44, "module-sage.combinat.crystals.catalog_kirillov_reshetikhin"], [45, "module-sage.combinat.crystals.crystals"], [46, "module-sage.combinat.crystals.direct_sum"], [47, "module-sage.combinat.crystals.elementary_crystals"], [48, "module-sage.combinat.crystals.fast_crystals"], [49, "module-sage.combinat.crystals.fully_commutative_stable_grothendieck"], [50, "module-sage.combinat.crystals.generalized_young_walls"], [51, "module-sage.combinat.crystals.highest_weight_crystals"], [52, "module-sage.combinat.crystals.induced_structure"], [53, "module-sage.combinat.crystals.infinity_crystals"], [54, "module-sage.combinat.crystals.kac_modules"], [55, "module-sage.combinat.crystals.kirillov_reshetikhin"], [56, "module-sage.combinat.crystals.kyoto_path_model"], [57, "module-sage.combinat.crystals.letters"], [58, "module-sage.combinat.crystals.littelmann_path"], [59, "module-sage.combinat.crystals.monomial_crystals"], [60, "module-sage.combinat.crystals.multisegments"], [61, "module-sage.combinat.crystals.mv_polytopes"], [62, "module-sage.combinat.crystals.pbw_crystal"], [63, "module-sage.combinat.crystals.pbw_datum"], [64, "module-sage.combinat.crystals.polyhedral_realization"], [65, "module-sage.combinat.crystals.spins"], [66, "module-sage.combinat.crystals.star_crystal"], [67, "module-sage.combinat.crystals.tensor_product"], [68, "module-sage.combinat.crystals.tensor_product_element"], [69, "module-sage.combinat.cyclic_sieving_phenomenon"], [70, "module-sage.combinat.debruijn_sequence"], [71, "module-sage.combinat.degree_sequences"], [72, "module-sage.combinat.derangements"], [73, "module-sage.combinat.descent_algebra"], [74, "module-sage.combinat.designs.all"], [75, "module-sage.combinat.designs.bibd"], [76, "module-sage.combinat.designs.block_design"], [77, "module-sage.combinat.designs.covering_design"], [78, "module-sage.combinat.designs.database"], [79, "module-sage.combinat.designs.design_catalog"], [80, "module-sage.combinat.designs.designs_pyx"], [81, "module-sage.combinat.designs.difference_family"], [82, "module-sage.combinat.designs.difference_matrices"], [83, "module-sage.combinat.designs.evenly_distributed_sets"], [84, "module-sage.combinat.designs.ext_rep"], [85, "module-sage.combinat.designs.gen_quadrangles_with_spread"], [86, "module-sage.combinat.designs.group_divisible_designs"], [87, "module-sage.combinat.designs.incidence_structures"], [88, "module-sage.combinat.designs.latin_squares"], [89, "module-sage.combinat.designs.orthogonal_arrays"], [90, "module-sage.combinat.designs.orthogonal_arrays_build_recursive"], [91, "module-sage.combinat.designs.orthogonal_arrays_find_recursive"], [92, "module-sage.combinat.designs.resolvable_bibd"], [93, "module-sage.combinat.designs.steiner_quadruple_systems"], [94, "module-sage.combinat.designs.subhypergraph_search"], [95, "module-sage.combinat.designs.twographs"], [96, "module-sage.combinat.diagram"], [97, "module-sage.combinat.diagram_algebras"], [98, "module-sage.combinat.dlx"], [99, "module-sage.combinat.dyck_word"], [100, "module-sage.combinat.e_one_star"], [101, "module-sage.combinat.enumerated_sets"], [102, "module-sage.combinat.enumeration_mod_permgroup"], [103, "module-sage.combinat.expnums"], [104, "module-sage.combinat.family"], [105, "module-sage.combinat.fast_vector_partitions"], [106, "module-sage.combinat.finite_state_machine"], [107, "module-sage.combinat.finite_state_machine_generators"], [108, "module-sage.combinat.fqsym"], [109, "module-sage.combinat.free_dendriform_algebra"], [110, "module-sage.combinat.free_module"], [111, "module-sage.combinat.free_prelie_algebra"], [112, "module-sage.combinat.fully_commutative_elements"], [113, "module-sage.combinat.fully_packed_loop"], [114, "module-sage.combinat.gelfand_tsetlin_patterns"], [115, "module-sage.combinat.graph_path"], [116, "module-sage.combinat.gray_codes"], [117, "module-sage.combinat.grossman_larson_algebras"], [118, "module-sage.combinat.growth"], [119, "module-sage.combinat.hall_polynomial"], [120, "module-sage.combinat.hillman_grassl"], [121, "module-sage.combinat.integer_lists.base"], [122, "module-sage.combinat.integer_lists.invlex"], [123, "module-sage.combinat.integer_lists.lists"], [124, "module-sage.combinat.integer_matrices"], [125, "module-sage.combinat.integer_vector"], [126, "module-sage.combinat.integer_vector_weighted"], [127, "module-sage.combinat.integer_vectors_mod_permgroup"], [128, "module-sage.combinat.interval_posets"], [129, "module-sage.combinat.k_regular_sequence"], [130, "module-sage.combinat.k_tableau"], [131, "module-sage.combinat.kazhdan_lusztig"], [132, "module-sage.combinat.knutson_tao_puzzles"], [133, "module-sage.combinat.matrices.all"], [134, "module-sage.combinat.matrices.dancing_links"], [135, "module-sage.combinat.matrices.dlxcpp"], [136, "module-sage.combinat.matrices.hadamard_matrix"], [137, "module-sage.combinat.matrices.latin"], [138, "module-sage.combinat.misc"], [139, "module-sage.combinat.multiset_partition_into_sets_ordered"], [140, "module-sage.combinat.ncsf_qsym.all"], [141, "module-sage.combinat.ncsf_qsym.combinatorics"], [142, "module-sage.combinat.ncsf_qsym.generic_basis_code"], [143, "module-sage.combinat.ncsf_qsym.ncsf"], [144, "module-sage.combinat.ncsf_qsym.qsym"], [145, "module-sage.combinat.ncsf_qsym.tutorial"], [146, "module-sage.combinat.ncsym.all"], [147, "module-sage.combinat.ncsym.bases"], [148, "module-sage.combinat.ncsym.dual"], [149, "module-sage.combinat.ncsym.ncsym"], [150, "module-sage.combinat.necklace"], [151, "module-sage.combinat.non_decreasing_parking_function"], [152, "module-sage.combinat.nu_dyck_word"], [153, "module-sage.combinat.nu_tamari_lattice"], [154, "module-sage.combinat.ordered_tree"], [155, "module-sage.combinat.output"], [156, "module-sage.combinat.parallelogram_polyomino"], [157, "module-sage.combinat.parking_functions"], [158, "module-sage.combinat.partition"], [159, "module-sage.combinat.partition_algebra"], [160, "module-sage.combinat.partition_kleshchev"], [161, "module-sage.combinat.partition_shifting_algebras"], [162, "module-sage.combinat.partition_tuple"], [163, "module-sage.combinat.partitions"], [164, "module-sage.combinat.path_tableaux.catalog"], [165, "module-sage.combinat.path_tableaux.dyck_path"], [166, "module-sage.combinat.path_tableaux.frieze"], [167, "module-sage.combinat.path_tableaux.path_tableau"], [168, "module-sage.combinat.path_tableaux.semistandard"], [169, "module-sage.combinat.perfect_matching"], [170, "module-sage.combinat.permutation"], [171, "module-sage.combinat.permutation_cython"], [172, "module-sage.combinat.plane_partition"], [173, "module-sage.combinat.posets.all"], [174, "module-sage.combinat.posets.cartesian_product"], [175, "module-sage.combinat.posets.d_complete"], [176, "module-sage.combinat.posets.elements"], [177, "module-sage.combinat.posets.forest"], [178, "module-sage.combinat.posets.hasse_diagram"], [179, "module-sage.combinat.posets.incidence_algebras"], [180, "module-sage.combinat.posets.lattices"], [181, "module-sage.combinat.posets.linear_extensions"], [182, "module-sage.combinat.posets.mobile"], [183, "module-sage.combinat.posets.moebius_algebra"], [184, "module-sage.combinat.posets.poset_examples"], [185, "module-sage.combinat.posets.posets"], [186, "module-sage.combinat.q_analogues"], [187, "module-sage.combinat.q_bernoulli"], [188, "module-sage.combinat.quickref"], [189, "module-sage.combinat.ranker"], [190, "module-sage.combinat.recognizable_series"], [191, "module-sage.combinat.restricted_growth"], [192, "module-sage.combinat.ribbon"], [193, "module-sage.combinat.ribbon_shaped_tableau"], [194, "module-sage.combinat.ribbon_tableau"], [195, "module-sage.combinat.rigged_configurations.all"], [196, "module-sage.combinat.rigged_configurations.bij_abstract_class"], [197, "module-sage.combinat.rigged_configurations.bij_infinity"], [198, "module-sage.combinat.rigged_configurations.bij_type_A"], [199, "module-sage.combinat.rigged_configurations.bij_type_A2_dual"], [200, "module-sage.combinat.rigged_configurations.bij_type_A2_even"], [201, "module-sage.combinat.rigged_configurations.bij_type_A2_odd"], [202, "module-sage.combinat.rigged_configurations.bij_type_B"], [203, "module-sage.combinat.rigged_configurations.bij_type_C"], [204, "module-sage.combinat.rigged_configurations.bij_type_D"], [205, "module-sage.combinat.rigged_configurations.bij_type_D_tri"], [206, "module-sage.combinat.rigged_configurations.bij_type_D_twisted"], [207, "module-sage.combinat.rigged_configurations.bijection"], [208, "module-sage.combinat.rigged_configurations.kleber_tree"], [209, "module-sage.combinat.rigged_configurations.kr_tableaux"], [210, "module-sage.combinat.rigged_configurations.rc_crystal"], [211, "module-sage.combinat.rigged_configurations.rc_infinity"], [212, "module-sage.combinat.rigged_configurations.rigged_configuration_element"], [213, "module-sage.combinat.rigged_configurations.rigged_configurations"], [214, "module-sage.combinat.rigged_configurations.rigged_partition"], [215, "module-sage.combinat.rigged_configurations.tensor_product_kr_tableaux"], [216, "module-sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element"], [217, "module-sage.combinat.root_system.all"], [218, "module-sage.combinat.root_system.ambient_space"], [219, "module-sage.combinat.root_system.associahedron"], [220, "module-sage.combinat.root_system.braid_move_calculator"], [221, "module-sage.combinat.root_system.braid_orbit"], [222, "module-sage.combinat.root_system.branching_rules"], [223, "module-sage.combinat.root_system.cartan_matrix"], [224, "module-sage.combinat.root_system.cartan_type"], [225, "module-sage.combinat.root_system.coxeter_group"], [226, "module-sage.combinat.root_system.coxeter_matrix"], [227, "module-sage.combinat.root_system.coxeter_type"], [228, "module-sage.combinat.root_system.dynkin_diagram"], [229, "module-sage.combinat.root_system.extended_affine_weyl_group"], [230, "module-sage.combinat.root_system.fundamental_group"], [231, "module-sage.combinat.root_system.hecke_algebra_representation"], [232, "module-sage.combinat.root_system.integrable_representations"], [233, "module-sage.combinat.root_system.non_symmetric_macdonald_polynomials"], [234, "module-sage.combinat.root_system.pieri_factors"], [235, "module-sage.combinat.root_system.plot"], [236, "module-sage.combinat.root_system.reflection_group_complex"], [237, "module-sage.combinat.root_system.reflection_group_real"], [238, "module-sage.combinat.root_system.root_lattice_realization_algebras"], [239, "module-sage.combinat.root_system.root_lattice_realizations"], [240, "module-sage.combinat.root_system.root_space"], [241, "module-sage.combinat.root_system.root_system"], [242, "module-sage.combinat.root_system.type_A"], [243, "module-sage.combinat.root_system.type_A_affine"], [244, "module-sage.combinat.root_system.type_A_infinity"], [245, "module-sage.combinat.root_system.type_B"], [246, "module-sage.combinat.root_system.type_BC_affine"], [247, "module-sage.combinat.root_system.type_B_affine"], [248, "module-sage.combinat.root_system.type_C"], [249, "module-sage.combinat.root_system.type_C_affine"], [250, "module-sage.combinat.root_system.type_D"], [251, "module-sage.combinat.root_system.type_D_affine"], [252, "module-sage.combinat.root_system.type_E"], [253, "module-sage.combinat.root_system.type_E_affine"], [254, "module-sage.combinat.root_system.type_F"], [255, "module-sage.combinat.root_system.type_F_affine"], [256, "module-sage.combinat.root_system.type_G"], [257, "module-sage.combinat.root_system.type_G_affine"], [258, "module-sage.combinat.root_system.type_H"], [259, "module-sage.combinat.root_system.type_I"], [260, "module-sage.combinat.root_system.type_Q"], [261, "module-sage.combinat.root_system.type_affine"], [262, "module-sage.combinat.root_system.type_dual"], [263, "module-sage.combinat.root_system.type_folded"], [264, "module-sage.combinat.root_system.type_marked"], [265, "module-sage.combinat.root_system.type_reducible"], [266, "module-sage.combinat.root_system.type_relabel"], [267, "module-sage.combinat.root_system.type_super_A"], [268, "module-sage.combinat.root_system.weight_lattice_realizations"], [269, "module-sage.combinat.root_system.weight_space"], [270, "module-sage.combinat.root_system.weyl_characters"], [271, "module-sage.combinat.root_system.weyl_group"], [272, "module-sage.combinat.rooted_tree"], [273, "module-sage.combinat.rsk"], [274, "module-sage.combinat.schubert_polynomial"], [275, "module-sage.combinat.set_partition"], [276, "module-sage.combinat.set_partition_ordered"], [277, "module-sage.combinat.sf.all"], [278, "module-sage.combinat.sf.character"], [279, "module-sage.combinat.sf.classical"], [280, "module-sage.combinat.sf.dual"], [281, "module-sage.combinat.sf.elementary"], [282, "module-sage.combinat.sf.hall_littlewood"], [283, "module-sage.combinat.sf.hecke"], [284, "module-sage.combinat.sf.homogeneous"], [285, "module-sage.combinat.sf.jack"], [286, "module-sage.combinat.sf.k_dual"], [287, "module-sage.combinat.sf.kfpoly"], [288, "module-sage.combinat.sf.llt"], [289, "module-sage.combinat.sf.macdonald"], [290, "module-sage.combinat.sf.monomial"], [291, "module-sage.combinat.sf.multiplicative"], [292, "module-sage.combinat.sf.new_kschur"], [293, "module-sage.combinat.sf.ns_macdonald"], [294, "module-sage.combinat.sf.orthogonal"], [295, "module-sage.combinat.sf.orthotriang"], [296, "module-sage.combinat.sf.powersum"], [297, "module-sage.combinat.sf.schur"], [298, "module-sage.combinat.sf.sf"], [299, "module-sage.combinat.sf.sfa"], [300, "module-sage.combinat.sf.symplectic"], [301, "module-sage.combinat.sf.witt"], [302, "module-sage.combinat.shard_order"], [303, "module-sage.combinat.shifted_primed_tableau"], [304, "module-sage.combinat.shuffle"], [305, "module-sage.combinat.sidon_sets"], [306, "module-sage.combinat.similarity_class_type"], [307, "module-sage.combinat.sine_gordon"], [308, "module-sage.combinat.six_vertex_model"], [309, "module-sage.combinat.skew_partition"], [310, "module-sage.combinat.skew_tableau"], [311, "module-sage.combinat.sloane_functions"], [312, "module-sage.combinat.species.all"], [313, "module-sage.combinat.species.characteristic_species"], [314, "module-sage.combinat.species.composition_species"], [315, "module-sage.combinat.species.cycle_species"], [316, "module-sage.combinat.species.empty_species"], [317, "module-sage.combinat.species.functorial_composition_species"], [318, "module-sage.combinat.species.generating_series"], [319, "module-sage.combinat.species.library"], [320, "module-sage.combinat.species.linear_order_species"], [321, "module-sage.combinat.species.misc"], [322, "module-sage.combinat.species.partition_species"], [323, "module-sage.combinat.species.permutation_species"], [324, "module-sage.combinat.species.product_species"], [325, "module-sage.combinat.species.recursive_species"], [326, "module-sage.combinat.species.set_species"], [327, "module-sage.combinat.species.species"], [328, "module-sage.combinat.species.structure"], [329, "module-sage.combinat.species.subset_species"], [330, "module-sage.combinat.species.sum_species"], [331, "module-sage.combinat.subset"], [332, "module-sage.combinat.subsets_hereditary"], [333, "module-sage.combinat.subsets_pairwise"], [334, "module-sage.combinat.subword"], [335, "module-sage.combinat.subword_complex"], [336, "module-sage.combinat.super_tableau"], [337, "module-sage.combinat.superpartition"], [338, "module-sage.combinat.symmetric_group_algebra"], [339, "module-sage.combinat.symmetric_group_representations"], [340, "module-sage.combinat.t_sequences"], [341, "module-sage.combinat.tableau"], [342, "module-sage.combinat.tableau_residues"], [343, "module-sage.combinat.tableau_tuple"], [344, "module-sage.combinat.tamari_lattices"], [345, "module-sage.combinat.tiling"], [346, "module-sage.combinat.tools"], [347, "module-sage.combinat.triangles_FHM"], [348, "module-sage.combinat.tuple"], [349, "module-sage.combinat.tutorial"], [350, "module-sage.combinat.vector_partition"], [351, "module-sage.combinat.words"], [352, "module-sage.combinat.words.abstract_word"], [353, "module-sage.combinat.words.alphabet"], [354, "module-sage.combinat.words.finite_word"], [355, "module-sage.combinat.words.infinite_word"], [356, "module-sage.combinat.words.lyndon_word"], [357, "module-sage.combinat.words.morphism"], [358, "module-sage.combinat.words.paths"], [359, "module-sage.combinat.words.shuffle_product"], [360, "module-sage.combinat.words.suffix_trees"], [361, "module-sage.combinat.words.word"], [362, "module-sage.combinat.words.word_char"], [363, "module-sage.combinat.words.word_datatypes"], [364, "module-sage.combinat.words.word_generators"], [365, "module-sage.combinat.words.word_infinite_datatypes"], [366, "module-sage.combinat.words.word_options"], [367, "module-sage.combinat.words.words"], [368, "module-sage.combinat.yang_baxter_graph"], [369, "module-sage.rings.cfinite_sequence"]], "node_number() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.node_number"]], "node_number_at_depth() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.node_number_at_depth"]], "node_number_to_the_right() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.node_number_to_the_right"]], "paths() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.paths"]], "paths_at_depth() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.paths_at_depth"]], "paths_to_the_right() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.paths_to_the_right"]], "post_order_traversal() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.post_order_traversal"]], "post_order_traversal_iter() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.post_order_traversal_iter"]], "pre_order_traversal() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.pre_order_traversal"]], "pre_order_traversal_iter() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.pre_order_traversal_iter"]], "sage.combinat.abstract_tree": [[2, "module-sage.combinat.abstract_tree"]], "set_label() (sage.combinat.abstract_tree.abstractlabelledclonabletree method)": [[2, "sage.combinat.abstract_tree.AbstractLabelledClonableTree.set_label"]], "set_root_label() (sage.combinat.abstract_tree.abstractlabelledclonabletree method)": [[2, "sage.combinat.abstract_tree.AbstractLabelledClonableTree.set_root_label"]], "shape() (sage.combinat.abstract_tree.abstractlabelledtree method)": [[2, "sage.combinat.abstract_tree.AbstractLabelledTree.shape"]], "subtrees() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.subtrees"]], "to_hexacode() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.to_hexacode"]], "tree_factorial() (sage.combinat.abstract_tree.abstracttree method)": [[2, "sage.combinat.abstract_tree.AbstractTree.tree_factorial"]], "affinepermutation (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutation"]], "affinepermutationgroup() (in module sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroup"]], "affinepermutationgroupgeneric (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric"]], "affinepermutationgrouptypea (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeA"]], "affinepermutationgrouptypeb (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeB"]], "affinepermutationgrouptypec (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeC"]], "affinepermutationgrouptyped (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeD"]], "affinepermutationgrouptypeg (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeG"]], "affinepermutationtypea (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA"]], "affinepermutationtypeb (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeB"]], "affinepermutationtypec (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeC"]], "affinepermutationtyped (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeD"]], "affinepermutationtypeg (class in sage.combinat.affine_permutation)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeG"]], "element (sage.combinat.affine_permutation.affinepermutationgrouptypea attribute)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeA.Element"]], "element (sage.combinat.affine_permutation.affinepermutationgrouptypeb attribute)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeB.Element"]], "element (sage.combinat.affine_permutation.affinepermutationgrouptypec attribute)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeC.Element"]], "element (sage.combinat.affine_permutation.affinepermutationgrouptyped attribute)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeD.Element"]], "element (sage.combinat.affine_permutation.affinepermutationgrouptypeg attribute)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeG.Element"]], "apply_simple_reflection() (sage.combinat.affine_permutation.affinepermutation method)": [[3, "sage.combinat.affine_permutation.AffinePermutation.apply_simple_reflection"]], "apply_simple_reflection_left() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.apply_simple_reflection_left"]], "apply_simple_reflection_left() (sage.combinat.affine_permutation.affinepermutationtypeb method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeB.apply_simple_reflection_left"]], "apply_simple_reflection_left() (sage.combinat.affine_permutation.affinepermutationtypec method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeC.apply_simple_reflection_left"]], "apply_simple_reflection_left() (sage.combinat.affine_permutation.affinepermutationtyped method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeD.apply_simple_reflection_left"]], "apply_simple_reflection_left() (sage.combinat.affine_permutation.affinepermutationtypeg method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeG.apply_simple_reflection_left"]], "apply_simple_reflection_right() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.apply_simple_reflection_right"]], "apply_simple_reflection_right() (sage.combinat.affine_permutation.affinepermutationtypeb method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeB.apply_simple_reflection_right"]], "apply_simple_reflection_right() (sage.combinat.affine_permutation.affinepermutationtypec method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeC.apply_simple_reflection_right"]], "apply_simple_reflection_right() (sage.combinat.affine_permutation.affinepermutationtyped method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeD.apply_simple_reflection_right"]], "apply_simple_reflection_right() (sage.combinat.affine_permutation.affinepermutationtypeg method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeG.apply_simple_reflection_right"]], "cartan_matrix() (sage.combinat.affine_permutation.affinepermutationgroupgeneric method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric.cartan_matrix"]], "cartan_type() (sage.combinat.affine_permutation.affinepermutationgroupgeneric method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric.cartan_type"]], "check() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.check"]], "check() (sage.combinat.affine_permutation.affinepermutationtypeb method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeB.check"]], "check() (sage.combinat.affine_permutation.affinepermutationtypec method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeC.check"]], "check() (sage.combinat.affine_permutation.affinepermutationtyped method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeD.check"]], "check() (sage.combinat.affine_permutation.affinepermutationtypeg method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeG.check"]], "classical() (sage.combinat.affine_permutation.affinepermutationgroupgeneric method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric.classical"]], "flip_automorphism() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.flip_automorphism"]], "from_lehmer_code() (sage.combinat.affine_permutation.affinepermutationgrouptypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeA.from_lehmer_code"]], "from_word() (sage.combinat.affine_permutation.affinepermutationgroupgeneric method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric.from_word"]], "grassmannian_quotient() (sage.combinat.affine_permutation.affinepermutation method)": [[3, "sage.combinat.affine_permutation.AffinePermutation.grassmannian_quotient"]], "has_left_descent() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.has_left_descent"]], "has_left_descent() (sage.combinat.affine_permutation.affinepermutationtypeb method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeB.has_left_descent"]], "has_left_descent() (sage.combinat.affine_permutation.affinepermutationtypec method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeC.has_left_descent"]], "has_left_descent() (sage.combinat.affine_permutation.affinepermutationtyped method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeD.has_left_descent"]], "has_left_descent() (sage.combinat.affine_permutation.affinepermutationtypeg method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeG.has_left_descent"]], "has_right_descent() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.has_right_descent"]], "has_right_descent() (sage.combinat.affine_permutation.affinepermutationtypeb method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeB.has_right_descent"]], "has_right_descent() (sage.combinat.affine_permutation.affinepermutationtypec method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeC.has_right_descent"]], "has_right_descent() (sage.combinat.affine_permutation.affinepermutationtyped method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeD.has_right_descent"]], "has_right_descent() (sage.combinat.affine_permutation.affinepermutationtypeg method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeG.has_right_descent"]], "index_set() (sage.combinat.affine_permutation.affinepermutation method)": [[3, "sage.combinat.affine_permutation.AffinePermutation.index_set"]], "index_set() (sage.combinat.affine_permutation.affinepermutationgroupgeneric method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric.index_set"]], "is_crystallographic() (sage.combinat.affine_permutation.affinepermutationgroupgeneric method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric.is_crystallographic"]], "is_fully_commutative() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.is_fully_commutative"]], "is_i_grassmannian() (sage.combinat.affine_permutation.affinepermutation method)": [[3, "sage.combinat.affine_permutation.AffinePermutation.is_i_grassmannian"]], "is_one() (sage.combinat.affine_permutation.affinepermutation method)": [[3, "sage.combinat.affine_permutation.AffinePermutation.is_one"]], "lower_covers() (sage.combinat.affine_permutation.affinepermutation method)": [[3, "sage.combinat.affine_permutation.AffinePermutation.lower_covers"]], "maximal_cyclic_decomposition() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.maximal_cyclic_decomposition"]], "maximal_cyclic_factor() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.maximal_cyclic_factor"]], "one() (sage.combinat.affine_permutation.affinepermutationgrouptypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeA.one"]], "one() (sage.combinat.affine_permutation.affinepermutationgrouptypec method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeC.one"]], "one() (sage.combinat.affine_permutation.affinepermutationgrouptypeg method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupTypeG.one"]], "position() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.position"]], "position() (sage.combinat.affine_permutation.affinepermutationtypec method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeC.position"]], "position() (sage.combinat.affine_permutation.affinepermutationtypeg method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeG.position"]], "promotion() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.promotion"]], "random_element() (sage.combinat.affine_permutation.affinepermutationgroupgeneric method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric.random_element"]], "rank() (sage.combinat.affine_permutation.affinepermutationgroupgeneric method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric.rank"]], "reduced_word() (sage.combinat.affine_permutation.affinepermutation method)": [[3, "sage.combinat.affine_permutation.AffinePermutation.reduced_word"]], "reflection_index_set() (sage.combinat.affine_permutation.affinepermutationgroupgeneric method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric.reflection_index_set"]], "sage.combinat.affine_permutation": [[3, "module-sage.combinat.affine_permutation"]], "signature() (sage.combinat.affine_permutation.affinepermutation method)": [[3, "sage.combinat.affine_permutation.AffinePermutation.signature"]], "tableau_of_word() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.tableau_of_word"]], "to_bounded_partition() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.to_bounded_partition"]], "to_core() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.to_core"]], "to_dominant() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.to_dominant"]], "to_lehmer_code() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.to_lehmer_code"]], "to_type_a() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.to_type_a"]], "to_type_a() (sage.combinat.affine_permutation.affinepermutationtypec method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeC.to_type_a"]], "to_type_a() (sage.combinat.affine_permutation.affinepermutationtypeg method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeG.to_type_a"]], "to_weyl_group_element() (sage.combinat.affine_permutation.affinepermutation method)": [[3, "sage.combinat.affine_permutation.AffinePermutation.to_weyl_group_element"]], "value() (sage.combinat.affine_permutation.affinepermutationtypea method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeA.value"]], "value() (sage.combinat.affine_permutation.affinepermutationtypec method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeC.value"]], "value() (sage.combinat.affine_permutation.affinepermutationtypeg method)": [[3, "sage.combinat.affine_permutation.AffinePermutationTypeG.value"]], "weyl_group() (sage.combinat.affine_permutation.affinepermutationgroupgeneric method)": [[3, "sage.combinat.affine_permutation.AffinePermutationGroupGeneric.weyl_group"]], "sage.combinat.algebraic_combinatorics": [[4, "module-sage.combinat.algebraic_combinatorics"]], "sage.combinat.all": [[5, "module-sage.combinat.all"]], "asm_compatible() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.ASM_compatible"]], "asm_compatible_bigger() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.ASM_compatible_bigger"]], "asm_compatible_smaller() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.ASM_compatible_smaller"]], "alternatingsignmatrices (class in sage.combinat.alternating_sign_matrix)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices"]], "alternatingsignmatrix (class in sage.combinat.alternating_sign_matrix)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix"]], "contretableaux (class in sage.combinat.alternating_sign_matrix)": [[6, "sage.combinat.alternating_sign_matrix.ContreTableaux"]], "contretableaux_n (class in sage.combinat.alternating_sign_matrix)": [[6, "sage.combinat.alternating_sign_matrix.ContreTableaux_n"]], "element (sage.combinat.alternating_sign_matrix.alternatingsignmatrices attribute)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.Element"]], "monotonetriangles (class in sage.combinat.alternating_sign_matrix)": [[6, "sage.combinat.alternating_sign_matrix.MonotoneTriangles"]], "truncatedstaircases (class in sage.combinat.alternating_sign_matrix)": [[6, "sage.combinat.alternating_sign_matrix.TruncatedStaircases"]], "truncatedstaircases_nlastcolumn (class in sage.combinat.alternating_sign_matrix)": [[6, "sage.combinat.alternating_sign_matrix.TruncatedStaircases_nlastcolumn"]], "cardinality() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.cardinality"]], "cardinality() (sage.combinat.alternating_sign_matrix.contretableaux_n method)": [[6, "sage.combinat.alternating_sign_matrix.ContreTableaux_n.cardinality"]], "cardinality() (sage.combinat.alternating_sign_matrix.monotonetriangles method)": [[6, "sage.combinat.alternating_sign_matrix.MonotoneTriangles.cardinality"]], "cardinality() (sage.combinat.alternating_sign_matrix.truncatedstaircases_nlastcolumn method)": [[6, "sage.combinat.alternating_sign_matrix.TruncatedStaircases_nlastcolumn.cardinality"]], "corner_sum_matrix() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.corner_sum_matrix"]], "cover_relations() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.cover_relations"]], "cover_relations() (sage.combinat.alternating_sign_matrix.monotonetriangles method)": [[6, "sage.combinat.alternating_sign_matrix.MonotoneTriangles.cover_relations"]], "first() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.first"]], "from_contre_tableau() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.from_contre_tableau"]], "from_corner_sum() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.from_corner_sum"]], "from_height_function() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.from_height_function"]], "from_monotone_triangle() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.from_monotone_triangle"]], "gyration() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.gyration"]], "gyration_orbit() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.gyration_orbit"]], "gyration_orbit_sizes() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.gyration_orbit_sizes"]], "gyration_orbits() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.gyration_orbits"]], "height_function() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.height_function"]], "inversion_number() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.inversion_number"]], "is_permutation() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.is_permutation"]], "last() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.last"]], "lattice() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.lattice"]], "lattice() (sage.combinat.alternating_sign_matrix.monotonetriangles method)": [[6, "sage.combinat.alternating_sign_matrix.MonotoneTriangles.lattice"]], "left_key() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.left_key"]], "left_key_as_permutation() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.left_key_as_permutation"]], "link_pattern() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.link_pattern"]], "matrix_space() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.matrix_space"]], "number_negative_ones() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.number_negative_ones"]], "random_element() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.random_element"]], "rotate_ccw() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.rotate_ccw"]], "rotate_cw() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.rotate_cw"]], "sage.combinat.alternating_sign_matrix": [[6, "module-sage.combinat.alternating_sign_matrix"]], "size() (sage.combinat.alternating_sign_matrix.alternatingsignmatrices method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrices.size"]], "to_dyck_word() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.to_dyck_word"]], "to_fully_packed_loop() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.to_fully_packed_loop"]], "to_matrix() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.to_matrix"]], "to_monotone_triangle() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.to_monotone_triangle"]], "to_permutation() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.to_permutation"]], "to_semistandard_tableau() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.to_semistandard_tableau"]], "to_six_vertex_model() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.to_six_vertex_model"]], "transpose() (sage.combinat.alternating_sign_matrix.alternatingsignmatrix method)": [[6, "sage.combinat.alternating_sign_matrix.AlternatingSignMatrix.transpose"]], "genericbacktracker (class in sage.combinat.backtrack)": [[7, "sage.combinat.backtrack.GenericBacktracker"]], "positiveintegersemigroup (class in sage.combinat.backtrack)": [[7, "sage.combinat.backtrack.PositiveIntegerSemigroup"]], "children() (sage.combinat.backtrack.positiveintegersemigroup method)": [[7, "sage.combinat.backtrack.PositiveIntegerSemigroup.children"]], "one() (sage.combinat.backtrack.positiveintegersemigroup method)": [[7, "sage.combinat.backtrack.PositiveIntegerSemigroup.one"]], "roots() (sage.combinat.backtrack.positiveintegersemigroup method)": [[7, "sage.combinat.backtrack.PositiveIntegerSemigroup.roots"]], "sage.combinat.backtrack": [[7, "module-sage.combinat.backtrack"]], "baxterpermutations (class in sage.combinat.baxter_permutations)": [[8, "sage.combinat.baxter_permutations.BaxterPermutations"]], "baxterpermutations_all (class in sage.combinat.baxter_permutations)": [[8, "sage.combinat.baxter_permutations.BaxterPermutations_all"]], "baxterpermutations_size (class in sage.combinat.baxter_permutations)": [[8, "sage.combinat.baxter_permutations.BaxterPermutations_size"]], "cardinality() (sage.combinat.baxter_permutations.baxterpermutations_size method)": [[8, "sage.combinat.baxter_permutations.BaxterPermutations_size.cardinality"]], "sage.combinat.baxter_permutations": [[8, "module-sage.combinat.baxter_permutations"]], "to_pair_of_twin_binary_trees() (sage.combinat.baxter_permutations.baxterpermutations_all method)": [[8, "sage.combinat.baxter_permutations.BaxterPermutations_all.to_pair_of_twin_binary_trees"]], "binaryrecurrencesequence (class in sage.combinat.binary_recurrence_sequences)": [[9, "sage.combinat.binary_recurrence_sequences.BinaryRecurrenceSequence"]], "is_arithmetic() (sage.combinat.binary_recurrence_sequences.binaryrecurrencesequence method)": [[9, "sage.combinat.binary_recurrence_sequences.BinaryRecurrenceSequence.is_arithmetic"]], "is_degenerate() (sage.combinat.binary_recurrence_sequences.binaryrecurrencesequence method)": [[9, "sage.combinat.binary_recurrence_sequences.BinaryRecurrenceSequence.is_degenerate"]], "is_geometric() (sage.combinat.binary_recurrence_sequences.binaryrecurrencesequence method)": [[9, "sage.combinat.binary_recurrence_sequences.BinaryRecurrenceSequence.is_geometric"]], "is_quasigeometric() (sage.combinat.binary_recurrence_sequences.binaryrecurrencesequence method)": [[9, "sage.combinat.binary_recurrence_sequences.BinaryRecurrenceSequence.is_quasigeometric"]], "period() (sage.combinat.binary_recurrence_sequences.binaryrecurrencesequence method)": [[9, "sage.combinat.binary_recurrence_sequences.BinaryRecurrenceSequence.period"]], "pthpowers() (sage.combinat.binary_recurrence_sequences.binaryrecurrencesequence method)": [[9, "sage.combinat.binary_recurrence_sequences.BinaryRecurrenceSequence.pthpowers"]], "sage.combinat.binary_recurrence_sequences": [[9, "module-sage.combinat.binary_recurrence_sequences"]], "binarytree (class in sage.combinat.binary_tree)": [[10, "sage.combinat.binary_tree.BinaryTree"]], "binarytrees (class in sage.combinat.binary_tree)": [[10, "sage.combinat.binary_tree.BinaryTrees"]], "binarytrees_all (class in sage.combinat.binary_tree)": [[10, "sage.combinat.binary_tree.BinaryTrees_all"]], "binarytrees_size (class in sage.combinat.binary_tree)": [[10, "sage.combinat.binary_tree.BinaryTrees_size"]], "element (sage.combinat.binary_tree.binarytrees_all attribute)": [[10, "sage.combinat.binary_tree.BinaryTrees_all.Element"]], "element (sage.combinat.binary_tree.labelledbinarytrees attribute)": [[10, "sage.combinat.binary_tree.LabelledBinaryTrees.Element"]], "fullbinarytrees_all (class in sage.combinat.binary_tree)": [[10, "sage.combinat.binary_tree.FullBinaryTrees_all"]], "fullbinarytrees_size (class in sage.combinat.binary_tree)": [[10, "sage.combinat.binary_tree.FullBinaryTrees_size"]], "labelledbinarytree (class in sage.combinat.binary_tree)": [[10, "sage.combinat.binary_tree.LabelledBinaryTree"]], "labelledbinarytrees (class in sage.combinat.binary_tree)": [[10, "sage.combinat.binary_tree.LabelledBinaryTrees"]], "as_ordered_tree() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.as_ordered_tree"]], "binary_search_insert() (sage.combinat.binary_tree.labelledbinarytree method)": [[10, "sage.combinat.binary_tree.LabelledBinaryTree.binary_search_insert"]], "binary_search_tree_shape() (in module sage.combinat.binary_tree)": [[10, "sage.combinat.binary_tree.binary_search_tree_shape"]], "canonical_labelling() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.canonical_labelling"]], "canopee() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.canopee"]], "cardinality() (sage.combinat.binary_tree.binarytrees_size method)": [[10, "sage.combinat.binary_tree.BinaryTrees_size.cardinality"]], "cardinality() (sage.combinat.binary_tree.fullbinarytrees_size method)": [[10, "sage.combinat.binary_tree.FullBinaryTrees_size.cardinality"]], "check() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.check"]], "comb() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.comb"]], "dendriform_shuffle() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.dendriform_shuffle"]], "from_tamari_sorting_tuple() (in module sage.combinat.binary_tree)": [[10, "sage.combinat.binary_tree.from_tamari_sorting_tuple"]], "graph() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.graph"]], "heap_insert() (sage.combinat.binary_tree.labelledbinarytree method)": [[10, "sage.combinat.binary_tree.LabelledBinaryTree.heap_insert"]], "hook_number() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.hook_number"]], "in_order_traversal() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.in_order_traversal"]], "in_order_traversal_iter() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.in_order_traversal_iter"]], "is_complete() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.is_complete"]], "is_empty() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.is_empty"]], "is_full() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.is_full"]], "is_perfect() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.is_perfect"]], "labelled_trees() (sage.combinat.binary_tree.binarytrees_all method)": [[10, "sage.combinat.binary_tree.BinaryTrees_all.labelled_trees"]], "labelled_trees() (sage.combinat.binary_tree.labelledbinarytrees method)": [[10, "sage.combinat.binary_tree.LabelledBinaryTrees.labelled_trees"]], "leaf() (sage.combinat.binary_tree.binarytrees method)": [[10, "sage.combinat.binary_tree.BinaryTrees.leaf"]], "left_border_symmetry() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.left_border_symmetry"]], "left_children_node_number() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.left_children_node_number"]], "left_right_symmetry() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.left_right_symmetry"]], "left_rotate() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.left_rotate"]], "left_rotate() (sage.combinat.binary_tree.labelledbinarytree method)": [[10, "sage.combinat.binary_tree.LabelledBinaryTree.left_rotate"]], "make_leaf() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.make_leaf"]], "make_node() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.make_node"]], "over() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.over"]], "over_decomposition() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.over_decomposition"]], "prune() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.prune"]], "q_hook_length_fraction() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.q_hook_length_fraction"]], "random_element() (sage.combinat.binary_tree.binarytrees_size method)": [[10, "sage.combinat.binary_tree.BinaryTrees_size.random_element"]], "random_element() (sage.combinat.binary_tree.fullbinarytrees_size method)": [[10, "sage.combinat.binary_tree.FullBinaryTrees_size.random_element"]], "right_rotate() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.right_rotate"]], "right_rotate() (sage.combinat.binary_tree.labelledbinarytree method)": [[10, "sage.combinat.binary_tree.LabelledBinaryTree.right_rotate"]], "sage.combinat.binary_tree": [[10, "module-sage.combinat.binary_tree"]], "semistandard_insert() (sage.combinat.binary_tree.labelledbinarytree method)": [[10, "sage.combinat.binary_tree.LabelledBinaryTree.semistandard_insert"]], "show() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.show"]], "single_edge_cut_shapes() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.single_edge_cut_shapes"]], "sylvester_class() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.sylvester_class"]], "tamari_greater() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.tamari_greater"]], "tamari_interval() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.tamari_interval"]], "tamari_join() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.tamari_join"]], "tamari_lequal() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.tamari_lequal"]], "tamari_meet() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.tamari_meet"]], "tamari_pred() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.tamari_pred"]], "tamari_smaller() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.tamari_smaller"]], "tamari_sorting_tuple() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.tamari_sorting_tuple"]], "tamari_succ() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.tamari_succ"]], "to_132_avoiding_permutation() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.to_132_avoiding_permutation"]], "to_312_avoiding_permutation() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.to_312_avoiding_permutation"]], "to_dyck_word() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.to_dyck_word"]], "to_dyck_word_tamari() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.to_dyck_word_tamari"]], "to_full() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.to_full"]], "to_ordered_tree_left_branch() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.to_ordered_tree_left_branch"]], "to_ordered_tree_right_branch() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.to_ordered_tree_right_branch"]], "to_poset() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.to_poset"]], "to_tilting() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.to_tilting"]], "to_undirected_graph() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.to_undirected_graph"]], "twisting_number() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.twisting_number"]], "under() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.under"]], "under_decomposition() (sage.combinat.binary_tree.binarytree method)": [[10, "sage.combinat.binary_tree.BinaryTree.under_decomposition"]], "unlabelled_trees() (sage.combinat.binary_tree.binarytrees_all method)": [[10, "sage.combinat.binary_tree.BinaryTrees_all.unlabelled_trees"]], "unlabelled_trees() (sage.combinat.binary_tree.labelledbinarytrees method)": [[10, "sage.combinat.binary_tree.LabelledBinaryTrees.unlabelled_trees"]], "blobalgebra (class in sage.combinat.blob_algebra)": [[11, "sage.combinat.blob_algebra.BlobAlgebra"]], "blobdiagram (class in sage.combinat.blob_algebra)": [[11, "sage.combinat.blob_algebra.BlobDiagram"]], "blobdiagrams (class in sage.combinat.blob_algebra)": [[11, "sage.combinat.blob_algebra.BlobDiagrams"]], "element (sage.combinat.blob_algebra.blobdiagrams attribute)": [[11, "sage.combinat.blob_algebra.BlobDiagrams.Element"]], "base_set() (sage.combinat.blob_algebra.blobdiagrams method)": [[11, "sage.combinat.blob_algebra.BlobDiagrams.base_set"]], "cardinality() (sage.combinat.blob_algebra.blobdiagrams method)": [[11, "sage.combinat.blob_algebra.BlobDiagrams.cardinality"]], "one_basis() (sage.combinat.blob_algebra.blobalgebra method)": [[11, "sage.combinat.blob_algebra.BlobAlgebra.one_basis"]], "order() (sage.combinat.blob_algebra.blobalgebra method)": [[11, "sage.combinat.blob_algebra.BlobAlgebra.order"]], "order() (sage.combinat.blob_algebra.blobdiagrams method)": [[11, "sage.combinat.blob_algebra.BlobDiagrams.order"]], "product_on_basis() (sage.combinat.blob_algebra.blobalgebra method)": [[11, "sage.combinat.blob_algebra.BlobAlgebra.product_on_basis"]], "sage.combinat.blob_algebra": [[11, "module-sage.combinat.blob_algebra"]], "temperley_lieb_diagram() (sage.combinat.blob_algebra.blobdiagram method)": [[11, "sage.combinat.blob_algebra.BlobDiagram.temperley_lieb_diagram"]], "cartesianproduct_iters (class in sage.combinat.cartesian_product)": [[12, "sage.combinat.cartesian_product.CartesianProduct_iters"]], "cardinality() (sage.combinat.cartesian_product.cartesianproduct_iters method)": [[12, "sage.combinat.cartesian_product.CartesianProduct_iters.cardinality"]], "is_finite() (sage.combinat.cartesian_product.cartesianproduct_iters method)": [[12, "sage.combinat.cartesian_product.CartesianProduct_iters.is_finite"]], "list() (sage.combinat.cartesian_product.cartesianproduct_iters method)": [[12, "sage.combinat.cartesian_product.CartesianProduct_iters.list"]], "random_element() (sage.combinat.cartesian_product.cartesianproduct_iters method)": [[12, "sage.combinat.cartesian_product.CartesianProduct_iters.random_element"]], "sage.combinat.cartesian_product": [[12, "module-sage.combinat.cartesian_product"]], "unrank() (sage.combinat.cartesian_product.cartesianproduct_iters method)": [[12, "sage.combinat.cartesian_product.CartesianProduct_iters.unrank"]], "sage.combinat.catalog_partitions": [[13, "module-sage.combinat.catalog_partitions"]], "sage.combinat.chas.all": [[14, "module-sage.combinat.chas.all"]], "f (sage.combinat.chas.fsym.freesymmetricfunctions_dual attribute)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.F"]], "fsymbases (class in sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.FSymBases"]], "fsymbases.elementmethods (class in sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.FSymBases.ElementMethods"]], "fsymbases.parentmethods (class in sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.FSymBases.ParentMethods"]], "fsymbasis_abstract (class in sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.FSymBasis_abstract"]], "freesymmetricfunctions (class in sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions"]], "freesymmetricfunctions.fundamental (class in sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions.Fundamental"]], "freesymmetricfunctions.fundamental.element (class in sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions.Fundamental.Element"]], "freesymmetricfunctions_dual (class in sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual"]], "freesymmetricfunctions_dual.fundamentaldual (class in sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.FundamentalDual"]], "freesymmetricfunctions_dual.fundamentaldual.element (class in sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.FundamentalDual.Element"]], "g (sage.combinat.chas.fsym.freesymmetricfunctions attribute)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions.G"]], "a_realization() (sage.combinat.chas.fsym.freesymmetricfunctions method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions.a_realization"]], "a_realization() (sage.combinat.chas.fsym.freesymmetricfunctions_dual method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.a_realization"]], "ascent_set() (in module sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.ascent_set"]], "basis() (sage.combinat.chas.fsym.fsymbases.parentmethods method)": [[15, "sage.combinat.chas.fsym.FSymBases.ParentMethods.basis"]], "coproduct_on_basis() (sage.combinat.chas.fsym.freesymmetricfunctions.fundamental method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions.Fundamental.coproduct_on_basis"]], "coproduct_on_basis() (sage.combinat.chas.fsym.freesymmetricfunctions_dual.fundamentaldual method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.FundamentalDual.coproduct_on_basis"]], "degree_on_basis() (sage.combinat.chas.fsym.fsymbases.parentmethods method)": [[15, "sage.combinat.chas.fsym.FSymBases.ParentMethods.degree_on_basis"]], "descent_composition() (in module sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.descent_composition"]], "descent_set() (in module sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.descent_set"]], "dual() (sage.combinat.chas.fsym.freesymmetricfunctions method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions.dual"]], "dual() (sage.combinat.chas.fsym.freesymmetricfunctions_dual method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.dual"]], "dual_basis() (sage.combinat.chas.fsym.freesymmetricfunctions.fundamental method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions.Fundamental.dual_basis"]], "dual_basis() (sage.combinat.chas.fsym.freesymmetricfunctions_dual.fundamentaldual method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.FundamentalDual.dual_basis"]], "duality_pairing() (sage.combinat.chas.fsym.fsymbases.elementmethods method)": [[15, "sage.combinat.chas.fsym.FSymBases.ElementMethods.duality_pairing"]], "duality_pairing() (sage.combinat.chas.fsym.fsymbases.parentmethods method)": [[15, "sage.combinat.chas.fsym.FSymBases.ParentMethods.duality_pairing"]], "duality_pairing_matrix() (sage.combinat.chas.fsym.fsymbases.parentmethods method)": [[15, "sage.combinat.chas.fsym.FSymBases.ParentMethods.duality_pairing_matrix"]], "one_basis() (sage.combinat.chas.fsym.fsymbases.parentmethods method)": [[15, "sage.combinat.chas.fsym.FSymBases.ParentMethods.one_basis"]], "product_on_basis() (sage.combinat.chas.fsym.freesymmetricfunctions.fundamental method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions.Fundamental.product_on_basis"]], "product_on_basis() (sage.combinat.chas.fsym.freesymmetricfunctions_dual.fundamentaldual method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.FundamentalDual.product_on_basis"]], "sage.combinat.chas.fsym": [[15, "module-sage.combinat.chas.fsym"]], "some_elements() (sage.combinat.chas.fsym.fsymbasis_abstract method)": [[15, "sage.combinat.chas.fsym.FSymBasis_abstract.some_elements"]], "standardize() (in module sage.combinat.chas.fsym)": [[15, "sage.combinat.chas.fsym.standardize"]], "super_categories() (sage.combinat.chas.fsym.fsymbases method)": [[15, "sage.combinat.chas.fsym.FSymBases.super_categories"]], "to_fqsym() (sage.combinat.chas.fsym.freesymmetricfunctions.fundamental.element method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions.Fundamental.Element.to_fqsym"]], "to_quasisymmetric_function() (sage.combinat.chas.fsym.freesymmetricfunctions_dual.fundamentaldual.element method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions_Dual.FundamentalDual.Element.to_quasisymmetric_function"]], "to_symmetric_function() (sage.combinat.chas.fsym.freesymmetricfunctions.fundamental.element method)": [[15, "sage.combinat.chas.fsym.FreeSymmetricFunctions.Fundamental.Element.to_symmetric_function"]], "c (sage.combinat.chas.wqsym.wordquasisymmetricfunctions attribute)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.C"]], "m (sage.combinat.chas.wqsym.wordquasisymmetricfunctions attribute)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.M"]], "phi (sage.combinat.chas.wqsym.wordquasisymmetricfunctions attribute)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Phi"]], "q (sage.combinat.chas.wqsym.wordquasisymmetricfunctions attribute)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Q"]], "wqsymbases (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WQSymBases"]], "wqsymbases.elementmethods (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WQSymBases.ElementMethods"]], "wqsymbases.parentmethods (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WQSymBases.ParentMethods"]], "wqsymbasis_abstract (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WQSymBasis_abstract"]], "wordquasisymmetricfunctions (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions"]], "wordquasisymmetricfunctions.characteristic (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Characteristic"]], "wordquasisymmetricfunctions.characteristic.element (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Characteristic.Element"]], "wordquasisymmetricfunctions.cone (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Cone"]], "wordquasisymmetricfunctions.monomial (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Monomial"]], "wordquasisymmetricfunctions.stronglycoarser (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyCoarser"]], "wordquasisymmetricfunctions.stronglycoarser.element (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyCoarser.Element"]], "wordquasisymmetricfunctions.stronglyfiner (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyFiner"]], "wordquasisymmetricfunctions.stronglyfiner.element (class in sage.combinat.chas.wqsym)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyFiner.Element"]], "x (sage.combinat.chas.wqsym.wordquasisymmetricfunctions attribute)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.X"]], "a_realization() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.a_realization"]], "algebraic_complement() (sage.combinat.chas.wqsym.wqsymbases.elementmethods method)": [[16, "sage.combinat.chas.wqsym.WQSymBases.ElementMethods.algebraic_complement"]], "algebraic_complement() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.characteristic.element method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Characteristic.Element.algebraic_complement"]], "algebraic_complement() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglycoarser.element method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyCoarser.Element.algebraic_complement"]], "algebraic_complement() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglyfiner.element method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyFiner.Element.algebraic_complement"]], "an_element() (sage.combinat.chas.wqsym.wqsymbasis_abstract method)": [[16, "sage.combinat.chas.wqsym.WQSymBasis_abstract.an_element"]], "coalgebraic_complement() (sage.combinat.chas.wqsym.wqsymbases.elementmethods method)": [[16, "sage.combinat.chas.wqsym.WQSymBases.ElementMethods.coalgebraic_complement"]], "coalgebraic_complement() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.characteristic.element method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Characteristic.Element.coalgebraic_complement"]], "coalgebraic_complement() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglycoarser.element method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyCoarser.Element.coalgebraic_complement"]], "coalgebraic_complement() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglyfiner.element method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyFiner.Element.coalgebraic_complement"]], "coproduct_on_basis() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.monomial method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Monomial.coproduct_on_basis"]], "coproduct_on_basis() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglycoarser method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyCoarser.coproduct_on_basis"]], "coproduct_on_basis() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglyfiner method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyFiner.coproduct_on_basis"]], "degree_on_basis() (sage.combinat.chas.wqsym.wqsymbases.parentmethods method)": [[16, "sage.combinat.chas.wqsym.WQSymBases.ParentMethods.degree_on_basis"]], "is_commutative() (sage.combinat.chas.wqsym.wqsymbases.parentmethods method)": [[16, "sage.combinat.chas.wqsym.WQSymBases.ParentMethods.is_commutative"]], "is_field() (sage.combinat.chas.wqsym.wqsymbases.parentmethods method)": [[16, "sage.combinat.chas.wqsym.WQSymBases.ParentMethods.is_field"]], "one_basis() (sage.combinat.chas.wqsym.wqsymbases.parentmethods method)": [[16, "sage.combinat.chas.wqsym.WQSymBases.ParentMethods.one_basis"]], "options (sage.combinat.chas.wqsym.wqsymbasis_abstract attribute)": [[16, "sage.combinat.chas.wqsym.WQSymBasis_abstract.options"]], "options (sage.combinat.chas.wqsym.wordquasisymmetricfunctions attribute)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.options"]], "product_on_basis() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.monomial method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Monomial.product_on_basis"]], "product_on_basis() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglycoarser method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyCoarser.product_on_basis"]], "product_on_basis() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglyfiner method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyFiner.product_on_basis"]], "sage.combinat.chas.wqsym": [[16, "module-sage.combinat.chas.wqsym"]], "some_elements() (sage.combinat.chas.wqsym.wqsymbasis_abstract method)": [[16, "sage.combinat.chas.wqsym.WQSymBasis_abstract.some_elements"]], "some_elements() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.cone method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Cone.some_elements"]], "some_elements() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglycoarser method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyCoarser.some_elements"]], "some_elements() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglyfiner method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyFiner.some_elements"]], "star_involution() (sage.combinat.chas.wqsym.wqsymbases.elementmethods method)": [[16, "sage.combinat.chas.wqsym.WQSymBases.ElementMethods.star_involution"]], "star_involution() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.characteristic.element method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.Characteristic.Element.star_involution"]], "star_involution() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglycoarser.element method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyCoarser.Element.star_involution"]], "star_involution() (sage.combinat.chas.wqsym.wordquasisymmetricfunctions.stronglyfiner.element method)": [[16, "sage.combinat.chas.wqsym.WordQuasiSymmetricFunctions.StronglyFiner.Element.star_involution"]], "super_categories() (sage.combinat.chas.wqsym.wqsymbases method)": [[16, "sage.combinat.chas.wqsym.WQSymBases.super_categories"]], "to_quasisymmetric_function() (sage.combinat.chas.wqsym.wqsymbases.elementmethods method)": [[16, "sage.combinat.chas.wqsym.WQSymBases.ElementMethods.to_quasisymmetric_function"]], "sage.combinat.cluster_algebra_quiver.all": [[17, "module-sage.combinat.cluster_algebra_quiver.all"]], "clusterseed (class in sage.combinat.cluster_algebra_quiver.cluster_seed)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed"]], "clustervariable (class in sage.combinat.cluster_algebra_quiver.cluster_seed)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterVariable"]], "llm_gen_set() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.LLM_gen_set"]], "pathsubset() (in module sage.combinat.cluster_algebra_quiver.cluster_seed)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.PathSubset"]], "settopath() (in module sage.combinat.cluster_algebra_quiver.cluster_seed)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.SetToPath"]], "almost_positive_root() (sage.combinat.cluster_algebra_quiver.cluster_seed.clustervariable method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterVariable.almost_positive_root"]], "b_matrix() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.b_matrix"]], "b_matrix_class() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.b_matrix_class"]], "b_matrix_class_iter() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.b_matrix_class_iter"]], "c_matrix() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.c_matrix"]], "c_vector() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.c_vector"]], "cluster() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.cluster"]], "cluster_class() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.cluster_class"]], "cluster_class_iter() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.cluster_class_iter"]], "cluster_index() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.cluster_index"]], "cluster_variable() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.cluster_variable"]], "coeff_recurs() (in module sage.combinat.cluster_algebra_quiver.cluster_seed)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.coeff_recurs"]], "coefficient() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.coefficient"]], "coefficients() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.coefficients"]], "d_matrix() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.d_matrix"]], "d_vector() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.d_vector"]], "exchangeable_part() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.exchangeable_part"]], "f_polynomial() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.f_polynomial"]], "f_polynomials() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.f_polynomials"]], "find_upper_bound() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.find_upper_bound"]], "first_green_vertex() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.first_green_vertex"]], "first_red_vertex() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.first_red_vertex"]], "first_urban_renewal() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.first_urban_renewal"]], "free_vertices() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.free_vertices"]], "frozen_vertices() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.frozen_vertices"]], "g_matrix() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.g_matrix"]], "g_vector() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.g_vector"]], "get_green_vertices() (in module sage.combinat.cluster_algebra_quiver.cluster_seed)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.get_green_vertices"]], "get_red_vertices() (in module sage.combinat.cluster_algebra_quiver.cluster_seed)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.get_red_vertices"]], "get_upper_cluster_algebra_element() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.get_upper_cluster_algebra_element"]], "greedy() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.greedy"]], "green_vertices() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.green_vertices"]], "ground_field() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.ground_field"]], "highest_degree_denominator() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.highest_degree_denominator"]], "interact() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.interact"]], "is_leelizel_allowable() (in module sage.combinat.cluster_algebra_quiver.cluster_seed)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.is_LeeLiZel_allowable"]], "is_acyclic() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.is_acyclic"]], "is_bipartite() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.is_bipartite"]], "is_finite() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.is_finite"]], "is_mutation_finite() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.is_mutation_finite"]], "m() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.m"]], "most_decreased_denominator_after_mutation() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.most_decreased_denominator_after_mutation"]], "most_decreased_edge_after_mutation() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.most_decreased_edge_after_mutation"]], "mutate() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.mutate"]], "mutation_analysis() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.mutation_analysis"]], "mutation_class() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.mutation_class"]], "mutation_class_iter() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.mutation_class_iter"]], "mutation_sequence() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.mutation_sequence"]], "mutation_type() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.mutation_type"]], "mutations() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.mutations"]], "n() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.n"]], "oriented_exchange_graph() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.oriented_exchange_graph"]], "plot() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.plot"]], "principal_extension() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.principal_extension"]], "quiver() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.quiver"]], "red_vertices() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.red_vertices"]], "reorient() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.reorient"]], "reset_cluster() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.reset_cluster"]], "reset_coefficients() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.reset_coefficients"]], "sage.combinat.cluster_algebra_quiver.cluster_seed": [[18, "module-sage.combinat.cluster_algebra_quiver.cluster_seed"]], "save_image() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.save_image"]], "set_c_matrix() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.set_c_matrix"]], "set_cluster() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.set_cluster"]], "show() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.show"]], "smallest_c_vector() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.smallest_c_vector"]], "track_mutations() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.track_mutations"]], "universal_extension() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.universal_extension"]], "urban_renewals() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.urban_renewals"]], "use_c_vectors() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.use_c_vectors"]], "use_d_vectors() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.use_d_vectors"]], "use_fpolys() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.use_fpolys"]], "use_g_vectors() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.use_g_vectors"]], "variable_class() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.variable_class"]], "variable_class_iter() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.variable_class_iter"]], "x() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.x"]], "y() (sage.combinat.cluster_algebra_quiver.cluster_seed.clusterseed method)": [[18, "sage.combinat.cluster_algebra_quiver.cluster_seed.ClusterSeed.y"]], "sage.combinat.cluster_algebra_quiver.mutation_class": [[19, "module-sage.combinat.cluster_algebra_quiver.mutation_class"]], "is_mutation_finite() (in module sage.combinat.cluster_algebra_quiver.mutation_type)": [[20, "sage.combinat.cluster_algebra_quiver.mutation_type.is_mutation_finite"]], "load_data() (in module sage.combinat.cluster_algebra_quiver.mutation_type)": [[20, "sage.combinat.cluster_algebra_quiver.mutation_type.load_data"]], "sage.combinat.cluster_algebra_quiver.mutation_type": [[20, "module-sage.combinat.cluster_algebra_quiver.mutation_type"]], "clusterquiver (class in sage.combinat.cluster_algebra_quiver.quiver)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver"]], "b_matrix() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.b_matrix"]], "canonical_label() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.canonical_label"]], "d_vector_fan() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.d_vector_fan"]], "digraph() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.digraph"]], "exchangeable_part() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.exchangeable_part"]], "first_sink() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.first_sink"]], "first_source() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.first_source"]], "free_vertices() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.free_vertices"]], "frozen_vertices() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.frozen_vertices"]], "g_vector_fan() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.g_vector_fan"]], "interact() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.interact"]], "is_acyclic() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.is_acyclic"]], "is_bipartite() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.is_bipartite"]], "is_finite() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.is_finite"]], "is_mutation_finite() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.is_mutation_finite"]], "m() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.m"]], "mutate() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.mutate"]], "mutation_class() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.mutation_class"]], "mutation_class_iter() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.mutation_class_iter"]], "mutation_sequence() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.mutation_sequence"]], "mutation_type() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.mutation_type"]], "n() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.n"]], "number_of_edges() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.number_of_edges"]], "plot() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.plot"]], "poincare_semistable() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.poincare_semistable"]], "principal_extension() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.principal_extension"]], "qmu_save() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.qmu_save"]], "relabel() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.relabel"]], "reorient() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.reorient"]], "sage.combinat.cluster_algebra_quiver.quiver": [[21, "module-sage.combinat.cluster_algebra_quiver.quiver"]], "save_image() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.save_image"]], "show() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.show"]], "sinks() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.sinks"]], "sources() (sage.combinat.cluster_algebra_quiver.quiver.clusterquiver method)": [[21, "sage.combinat.cluster_algebra_quiver.quiver.ClusterQuiver.sources"]], "quivermutationtype() (in module sage.combinat.cluster_algebra_quiver.quiver_mutation_type)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType"]], "quivermutationtypefactory (class in sage.combinat.cluster_algebra_quiver.quiver_mutation_type)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationTypeFactory"]], "quivermutationtype_irreducible (class in sage.combinat.cluster_algebra_quiver.quiver_mutation_type)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_Irreducible"]], "quivermutationtype_reducible (class in sage.combinat.cluster_algebra_quiver.quiver_mutation_type)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_Reducible"]], "quivermutationtype_abstract (class in sage.combinat.cluster_algebra_quiver.quiver_mutation_type)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract"]], "b_matrix() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.b_matrix"]], "cartan_matrix() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.cartan_matrix"]], "class_size() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_irreducible method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_Irreducible.class_size"]], "class_size() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_reducible method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_Reducible.class_size"]], "dual() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_irreducible method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_Irreducible.dual"]], "dual() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_reducible method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_Reducible.dual"]], "irreducible_components() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_irreducible method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_Irreducible.irreducible_components"]], "irreducible_components() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_reducible method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_Reducible.irreducible_components"]], "is_affine() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.is_affine"]], "is_elliptic() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.is_elliptic"]], "is_finite() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.is_finite"]], "is_irreducible() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.is_irreducible"]], "is_mutation_finite() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.is_mutation_finite"]], "is_simply_laced() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.is_simply_laced"]], "is_skew_symmetric() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.is_skew_symmetric"]], "letter() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.letter"]], "plot() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.plot"]], "properties() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.properties"]], "rank() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.rank"]], "sage.combinat.cluster_algebra_quiver.quiver_mutation_type": [[22, "module-sage.combinat.cluster_algebra_quiver.quiver_mutation_type"]], "samples() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtypefactory method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationTypeFactory.samples"]], "save_quiver_data() (in module sage.combinat.cluster_algebra_quiver.quiver_mutation_type)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.save_quiver_data"]], "show() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.show"]], "standard_quiver() (sage.combinat.cluster_algebra_quiver.quiver_mutation_type.quivermutationtype_abstract method)": [[22, "sage.combinat.cluster_algebra_quiver.quiver_mutation_type.QuiverMutationType_abstract.standard_quiver"]], "clustercomplex (class in sage.combinat.cluster_complex)": [[23, "sage.combinat.cluster_complex.ClusterComplex"]], "clustercomplexfacet (class in sage.combinat.cluster_complex)": [[23, "sage.combinat.cluster_complex.ClusterComplexFacet"]], "element (sage.combinat.cluster_complex.clustercomplex attribute)": [[23, "sage.combinat.cluster_complex.ClusterComplex.Element"]], "cluster() (sage.combinat.cluster_complex.clustercomplexfacet method)": [[23, "sage.combinat.cluster_complex.ClusterComplexFacet.cluster"]], "cyclic_rotation() (sage.combinat.cluster_complex.clustercomplex method)": [[23, "sage.combinat.cluster_complex.ClusterComplex.cyclic_rotation"]], "k() (sage.combinat.cluster_complex.clustercomplex method)": [[23, "sage.combinat.cluster_complex.ClusterComplex.k"]], "minimal_nonfaces() (sage.combinat.cluster_complex.clustercomplex method)": [[23, "sage.combinat.cluster_complex.ClusterComplex.minimal_nonfaces"]], "product_of_upper_cluster() (sage.combinat.cluster_complex.clustercomplexfacet method)": [[23, "sage.combinat.cluster_complex.ClusterComplexFacet.product_of_upper_cluster"]], "sage.combinat.cluster_complex": [[23, "module-sage.combinat.cluster_complex"]], "upper_cluster() (sage.combinat.cluster_complex.clustercomplexfacet method)": [[23, "sage.combinat.cluster_complex.ClusterComplexFacet.upper_cluster"]], "coloredpermutation (class in sage.combinat.colored_permutations)": [[24, "sage.combinat.colored_permutations.ColoredPermutation"]], "coloredpermutations (class in sage.combinat.colored_permutations)": [[24, "sage.combinat.colored_permutations.ColoredPermutations"]], "element (sage.combinat.colored_permutations.coloredpermutations attribute)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.Element"]], "element (sage.combinat.colored_permutations.signedpermutations attribute)": [[24, "sage.combinat.colored_permutations.SignedPermutations.Element"]], "signedpermutation (class in sage.combinat.colored_permutations)": [[24, "sage.combinat.colored_permutations.SignedPermutation"]], "signedpermutations (class in sage.combinat.colored_permutations)": [[24, "sage.combinat.colored_permutations.SignedPermutations"]], "as_permutation_group() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.as_permutation_group"]], "cardinality() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.cardinality"]], "codegrees() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.codegrees"]], "colors() (sage.combinat.colored_permutations.coloredpermutation method)": [[24, "sage.combinat.colored_permutations.ColoredPermutation.colors"]], "coxeter_matrix() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.coxeter_matrix"]], "degrees() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.degrees"]], "fixed_point_polynomial() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.fixed_point_polynomial"]], "gens() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.gens"]], "has_left_descent() (sage.combinat.colored_permutations.coloredpermutation method)": [[24, "sage.combinat.colored_permutations.ColoredPermutation.has_left_descent"]], "has_left_descent() (sage.combinat.colored_permutations.signedpermutation method)": [[24, "sage.combinat.colored_permutations.SignedPermutation.has_left_descent"]], "index_set() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.index_set"]], "is_well_generated() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.is_well_generated"]], "length() (sage.combinat.colored_permutations.coloredpermutation method)": [[24, "sage.combinat.colored_permutations.ColoredPermutation.length"]], "long_element() (sage.combinat.colored_permutations.signedpermutations method)": [[24, "sage.combinat.colored_permutations.SignedPermutations.long_element"]], "matrix_group() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.matrix_group"]], "number_of_reflection_hyperplanes() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.number_of_reflection_hyperplanes"]], "one() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.one"]], "one() (sage.combinat.colored_permutations.signedpermutations method)": [[24, "sage.combinat.colored_permutations.SignedPermutations.one"]], "one_line_form() (sage.combinat.colored_permutations.coloredpermutation method)": [[24, "sage.combinat.colored_permutations.ColoredPermutation.one_line_form"]], "order() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.order"]], "order() (sage.combinat.colored_permutations.signedpermutation method)": [[24, "sage.combinat.colored_permutations.SignedPermutation.order"]], "permutation() (sage.combinat.colored_permutations.coloredpermutation method)": [[24, "sage.combinat.colored_permutations.ColoredPermutation.permutation"]], "rank() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.rank"]], "reduced_word() (sage.combinat.colored_permutations.coloredpermutation method)": [[24, "sage.combinat.colored_permutations.ColoredPermutation.reduced_word"]], "sage.combinat.colored_permutations": [[24, "module-sage.combinat.colored_permutations"]], "simple_reflection() (sage.combinat.colored_permutations.coloredpermutations method)": [[24, "sage.combinat.colored_permutations.ColoredPermutations.simple_reflection"]], "simple_reflection() (sage.combinat.colored_permutations.signedpermutations method)": [[24, "sage.combinat.colored_permutations.SignedPermutations.simple_reflection"]], "to_cycles() (sage.combinat.colored_permutations.signedpermutation method)": [[24, "sage.combinat.colored_permutations.SignedPermutation.to_cycles"]], "to_matrix() (sage.combinat.colored_permutations.coloredpermutation method)": [[24, "sage.combinat.colored_permutations.ColoredPermutation.to_matrix"]], "to_matrix() (sage.combinat.colored_permutations.signedpermutation method)": [[24, "sage.combinat.colored_permutations.SignedPermutation.to_matrix"]], "combinatorialclass (class in sage.combinat.combinat)": [[25, "sage.combinat.combinat.CombinatorialClass"]], "combinatorialelement (class in sage.combinat.combinat)": [[25, "sage.combinat.combinat.CombinatorialElement"]], "combinatorialobject (class in sage.combinat.combinat)": [[25, "sage.combinat.combinat.CombinatorialObject"]], "element (sage.combinat.combinat.combinatorialclass attribute)": [[25, "sage.combinat.combinat.CombinatorialClass.Element"]], "filteredcombinatorialclass (class in sage.combinat.combinat)": [[25, "sage.combinat.combinat.FilteredCombinatorialClass"]], "infiniteabstractcombinatorialclass (class in sage.combinat.combinat)": [[25, "sage.combinat.combinat.InfiniteAbstractCombinatorialClass"]], "mapcombinatorialclass (class in sage.combinat.combinat)": [[25, "sage.combinat.combinat.MapCombinatorialClass"]], "permutations_cc (class in sage.combinat.combinat)": [[25, "sage.combinat.combinat.Permutations_CC"]], "unioncombinatorialclass (class in sage.combinat.combinat)": [[25, "sage.combinat.combinat.UnionCombinatorialClass"]], "bell_number() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.bell_number"]], "bell_polynomial() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.bell_polynomial"]], "bernoulli_polynomial() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.bernoulli_polynomial"]], "cardinality() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.cardinality"]], "cardinality() (sage.combinat.combinat.filteredcombinatorialclass method)": [[25, "sage.combinat.combinat.FilteredCombinatorialClass.cardinality"]], "cardinality() (sage.combinat.combinat.infiniteabstractcombinatorialclass method)": [[25, "sage.combinat.combinat.InfiniteAbstractCombinatorialClass.cardinality"]], "cardinality() (sage.combinat.combinat.unioncombinatorialclass method)": [[25, "sage.combinat.combinat.UnionCombinatorialClass.cardinality"]], "catalan_number() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.catalan_number"]], "element_class() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.element_class"]], "euler_number() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.euler_number"]], "eulerian_number() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.eulerian_number"]], "eulerian_polynomial() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.eulerian_polynomial"]], "fibonacci() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.fibonacci"]], "fibonacci_sequence() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.fibonacci_sequence"]], "fibonacci_xrange() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.fibonacci_xrange"]], "filter() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.filter"]], "first() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.first"]], "first() (sage.combinat.combinat.unioncombinatorialclass method)": [[25, "sage.combinat.combinat.UnionCombinatorialClass.first"]], "index() (sage.combinat.combinat.combinatorialobject method)": [[25, "sage.combinat.combinat.CombinatorialObject.index"]], "is_finite() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.is_finite"]], "last() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.last"]], "last() (sage.combinat.combinat.unioncombinatorialclass method)": [[25, "sage.combinat.combinat.UnionCombinatorialClass.last"]], "list() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.list"]], "list() (sage.combinat.combinat.infiniteabstractcombinatorialclass method)": [[25, "sage.combinat.combinat.InfiniteAbstractCombinatorialClass.list"]], "list() (sage.combinat.combinat.unioncombinatorialclass method)": [[25, "sage.combinat.combinat.UnionCombinatorialClass.list"]], "lucas_number1() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.lucas_number1"]], "lucas_number2() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.lucas_number2"]], "map() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.map"]], "narayana_number() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.narayana_number"]], "next() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.next"]], "number_of_tuples() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.number_of_tuples"]], "number_of_unordered_tuples() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.number_of_unordered_tuples"]], "polygonal_number() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.polygonal_number"]], "previous() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.previous"]], "random_element() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.random_element"]], "rank() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.rank"]], "rank() (sage.combinat.combinat.unioncombinatorialclass method)": [[25, "sage.combinat.combinat.UnionCombinatorialClass.rank"]], "sage.combinat.combinat": [[25, "module-sage.combinat.combinat"]], "stirling_number1() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.stirling_number1"]], "stirling_number2() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.stirling_number2"]], "tuples() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.tuples"]], "union() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.union"]], "unordered_tuples() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.unordered_tuples"]], "unrank() (sage.combinat.combinat.combinatorialclass method)": [[25, "sage.combinat.combinat.CombinatorialClass.unrank"]], "unrank() (sage.combinat.combinat.unioncombinatorialclass method)": [[25, "sage.combinat.combinat.UnionCombinatorialClass.unrank"]], "unshuffle_iterator() (in module sage.combinat.combinat)": [[25, "sage.combinat.combinat.unshuffle_iterator"]], "conjugate() (in module sage.combinat.combinat_cython)": [[26, "sage.combinat.combinat_cython.conjugate"]], "linear_extension_iterator() (in module sage.combinat.combinat_cython)": [[26, "sage.combinat.combinat_cython.linear_extension_iterator"]], "lyndon_word_iterator() (in module sage.combinat.combinat_cython)": [[26, "sage.combinat.combinat_cython.lyndon_word_iterator"]], "perfect_matchings_iterator() (in module sage.combinat.combinat_cython)": [[26, "sage.combinat.combinat_cython.perfect_matchings_iterator"]], "sage.combinat.combinat_cython": [[26, "module-sage.combinat.combinat_cython"]], "set_partition_composition() (in module sage.combinat.combinat_cython)": [[26, "sage.combinat.combinat_cython.set_partition_composition"]], "set_partition_iterator() (in module sage.combinat.combinat_cython)": [[26, "sage.combinat.combinat_cython.set_partition_iterator"]], "set_partition_iterator_blocks() (in module sage.combinat.combinat_cython)": [[26, "sage.combinat.combinat_cython.set_partition_iterator_blocks"]], "choosenk (class in sage.combinat.combination)": [[27, "sage.combinat.combination.ChooseNK"]], "combinations() (in module sage.combinat.combination)": [[27, "sage.combinat.combination.Combinations"]], "combinations_mset (class in sage.combinat.combination)": [[27, "sage.combinat.combination.Combinations_mset"]], "combinations_msetk (class in sage.combinat.combination)": [[27, "sage.combinat.combination.Combinations_msetk"]], "combinations_set (class in sage.combinat.combination)": [[27, "sage.combinat.combination.Combinations_set"]], "combinations_setk (class in sage.combinat.combination)": [[27, "sage.combinat.combination.Combinations_setk"]], "cardinality() (sage.combinat.combination.combinations_mset method)": [[27, "sage.combinat.combination.Combinations_mset.cardinality"]], "cardinality() (sage.combinat.combination.combinations_msetk method)": [[27, "sage.combinat.combination.Combinations_msetk.cardinality"]], "cardinality() (sage.combinat.combination.combinations_set method)": [[27, "sage.combinat.combination.Combinations_set.cardinality"]], "cardinality() (sage.combinat.combination.combinations_setk method)": [[27, "sage.combinat.combination.Combinations_setk.cardinality"]], "from_rank() (in module sage.combinat.combination)": [[27, "sage.combinat.combination.from_rank"]], "list() (sage.combinat.combination.combinations_setk method)": [[27, "sage.combinat.combination.Combinations_setk.list"]], "rank() (in module sage.combinat.combination)": [[27, "sage.combinat.combination.rank"]], "rank() (sage.combinat.combination.combinations_set method)": [[27, "sage.combinat.combination.Combinations_set.rank"]], "rank() (sage.combinat.combination.combinations_setk method)": [[27, "sage.combinat.combination.Combinations_setk.rank"]], "sage.combinat.combination": [[27, "module-sage.combinat.combination"]], "unrank() (sage.combinat.combination.combinations_set method)": [[27, "sage.combinat.combination.Combinations_set.unrank"]], "unrank() (sage.combinat.combination.combinations_setk method)": [[27, "sage.combinat.combination.Combinations_setk.unrank"]], "combinatorialmap (class in sage.combinat.combinatorial_map)": [[28, "sage.combinat.combinatorial_map.CombinatorialMap"]], "combinatorial_map() (in module sage.combinat.combinatorial_map)": [[28, "sage.combinat.combinatorial_map.combinatorial_map"]], "combinatorial_map_trivial() (in module sage.combinat.combinatorial_map)": [[28, "sage.combinat.combinatorial_map.combinatorial_map_trivial"]], "combinatorial_map_wrapper() (in module sage.combinat.combinatorial_map)": [[28, "sage.combinat.combinatorial_map.combinatorial_map_wrapper"]], "combinatorial_maps_in_class() (in module sage.combinat.combinatorial_map)": [[28, "sage.combinat.combinatorial_map.combinatorial_maps_in_class"]], "name() (sage.combinat.combinatorial_map.combinatorialmap method)": [[28, "sage.combinat.combinatorial_map.CombinatorialMap.name"]], "order() (sage.combinat.combinatorial_map.combinatorialmap method)": [[28, "sage.combinat.combinatorial_map.CombinatorialMap.order"]], "sage.combinat.combinatorial_map": [[28, "module-sage.combinat.combinatorial_map"]], "unbounded_map() (sage.combinat.combinatorial_map.combinatorialmap method)": [[28, "sage.combinat.combinatorial_map.CombinatorialMap.unbounded_map"]], "composition (class in sage.combinat.composition)": [[29, "sage.combinat.composition.Composition"]], "compositions (class in sage.combinat.composition)": [[29, "sage.combinat.composition.Compositions"]], "compositions_all (class in sage.combinat.composition)": [[29, "sage.combinat.composition.Compositions_all"]], "compositions_constraints (class in sage.combinat.composition)": [[29, "sage.combinat.composition.Compositions_constraints"]], "compositions_n (class in sage.combinat.composition)": [[29, "sage.combinat.composition.Compositions_n"]], "element (sage.combinat.composition.compositions attribute)": [[29, "sage.combinat.composition.Compositions.Element"]], "cardinality() (sage.combinat.composition.compositions_n method)": [[29, "sage.combinat.composition.Compositions_n.cardinality"]], "complement() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.complement"]], "composition_iterator_fast() (in module sage.combinat.composition)": [[29, "sage.combinat.composition.composition_iterator_fast"]], "conjugate() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.conjugate"]], "count() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.count"]], "descents() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.descents"]], "fatten() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.fatten"]], "fatter() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.fatter"]], "finer() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.finer"]], "from_code() (sage.combinat.composition.compositions method)": [[29, "sage.combinat.composition.Compositions.from_code"]], "from_descents() (sage.combinat.composition.compositions method)": [[29, "sage.combinat.composition.Compositions.from_descents"]], "from_subset() (sage.combinat.composition.compositions method)": [[29, "sage.combinat.composition.Compositions.from_subset"]], "inf() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.inf"]], "is_finer() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.is_finer"]], "join() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.join"]], "major_index() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.major_index"]], "meet() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.meet"]], "near_concatenation() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.near_concatenation"]], "partial_sums() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.partial_sums"]], "peaks() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.peaks"]], "random_element() (sage.combinat.composition.compositions_n method)": [[29, "sage.combinat.composition.Compositions_n.random_element"]], "refinement_splitting() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.refinement_splitting"]], "refinement_splitting_lengths() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.refinement_splitting_lengths"]], "reversed() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.reversed"]], "ribbon_decomposition() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.ribbon_decomposition"]], "sage.combinat.composition": [[29, "module-sage.combinat.composition"]], "shuffle_product() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.shuffle_product"]], "size() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.size"]], "subset() (sage.combinat.composition.compositions_all method)": [[29, "sage.combinat.composition.Compositions_all.subset"]], "sum() (sage.combinat.composition.composition static method)": [[29, "sage.combinat.composition.Composition.sum"]], "sup() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.sup"]], "to_code() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.to_code"]], "to_partition() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.to_partition"]], "to_skew_partition() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.to_skew_partition"]], "to_subset() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.to_subset"]], "wll_gt() (sage.combinat.composition.composition method)": [[29, "sage.combinat.composition.Composition.wll_gt"]], "zero() (sage.combinat.composition.compositions_all method)": [[29, "sage.combinat.composition.Compositions_all.zero"]], "signedcompositions (class in sage.combinat.composition_signed)": [[30, "sage.combinat.composition_signed.SignedCompositions"]], "cardinality() (sage.combinat.composition_signed.signedcompositions method)": [[30, "sage.combinat.composition_signed.SignedCompositions.cardinality"]], "sage.combinat.composition_signed": [[30, "module-sage.combinat.composition_signed"]], "compositiontableau (class in sage.combinat.composition_tableau)": [[31, "sage.combinat.composition_tableau.CompositionTableau"]], "compositiontableaux (class in sage.combinat.composition_tableau)": [[31, "sage.combinat.composition_tableau.CompositionTableaux"]], "compositiontableauxbacktracker (class in sage.combinat.composition_tableau)": [[31, "sage.combinat.composition_tableau.CompositionTableauxBacktracker"]], "compositiontableaux_all (class in sage.combinat.composition_tableau)": [[31, "sage.combinat.composition_tableau.CompositionTableaux_all"]], "compositiontableaux_shape (class in sage.combinat.composition_tableau)": [[31, "sage.combinat.composition_tableau.CompositionTableaux_shape"]], "compositiontableaux_size (class in sage.combinat.composition_tableau)": [[31, "sage.combinat.composition_tableau.CompositionTableaux_size"]], "element (sage.combinat.composition_tableau.compositiontableaux attribute)": [[31, "sage.combinat.composition_tableau.CompositionTableaux.Element"]], "an_element() (sage.combinat.composition_tableau.compositiontableaux_all method)": [[31, "sage.combinat.composition_tableau.CompositionTableaux_all.an_element"]], "an_element() (sage.combinat.composition_tableau.compositiontableaux_shape method)": [[31, "sage.combinat.composition_tableau.CompositionTableaux_shape.an_element"]], "descent_composition() (sage.combinat.composition_tableau.compositiontableau method)": [[31, "sage.combinat.composition_tableau.CompositionTableau.descent_composition"]], "descent_set() (sage.combinat.composition_tableau.compositiontableau method)": [[31, "sage.combinat.composition_tableau.CompositionTableau.descent_set"]], "get_next_pos() (sage.combinat.composition_tableau.compositiontableauxbacktracker method)": [[31, "sage.combinat.composition_tableau.CompositionTableauxBacktracker.get_next_pos"]], "is_standard() (sage.combinat.composition_tableau.compositiontableau method)": [[31, "sage.combinat.composition_tableau.CompositionTableau.is_standard"]], "pp() (sage.combinat.composition_tableau.compositiontableau method)": [[31, "sage.combinat.composition_tableau.CompositionTableau.pp"]], "sage.combinat.composition_tableau": [[31, "module-sage.combinat.composition_tableau"]], "shape_composition() (sage.combinat.composition_tableau.compositiontableau method)": [[31, "sage.combinat.composition_tableau.CompositionTableau.shape_composition"]], "shape_partition() (sage.combinat.composition_tableau.compositiontableau method)": [[31, "sage.combinat.composition_tableau.CompositionTableau.shape_partition"]], "size() (sage.combinat.composition_tableau.compositiontableau method)": [[31, "sage.combinat.composition_tableau.CompositionTableau.size"]], "weight() (sage.combinat.composition_tableau.compositiontableau method)": [[31, "sage.combinat.composition_tableau.CompositionTableau.weight"]], "constellation() (in module sage.combinat.constellation)": [[32, "sage.combinat.constellation.Constellation"]], "constellation_class (class in sage.combinat.constellation)": [[32, "sage.combinat.constellation.Constellation_class"]], "constellations() (in module sage.combinat.constellation)": [[32, "sage.combinat.constellation.Constellations"]], "constellations_ld (class in sage.combinat.constellation)": [[32, "sage.combinat.constellation.Constellations_ld"]], "constellations_p (class in sage.combinat.constellation)": [[32, "sage.combinat.constellation.Constellations_p"]], "element (sage.combinat.constellation.constellations_ld attribute)": [[32, "sage.combinat.constellation.Constellations_ld.Element"]], "braid_group_action() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.braid_group_action"]], "braid_group_action() (sage.combinat.constellation.constellations_ld method)": [[32, "sage.combinat.constellation.Constellations_ld.braid_group_action"]], "braid_group_orbit() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.braid_group_orbit"]], "braid_group_orbits() (sage.combinat.constellation.constellations_ld method)": [[32, "sage.combinat.constellation.Constellations_ld.braid_group_orbits"]], "connected_components() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.connected_components"]], "copy() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.copy"]], "degree() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.degree"]], "euler_characteristic() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.euler_characteristic"]], "g() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.g"]], "genus() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.genus"]], "is_connected() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.is_connected"]], "is_empty() (sage.combinat.constellation.constellations_ld method)": [[32, "sage.combinat.constellation.Constellations_ld.is_empty"]], "is_isomorphic() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.is_isomorphic"]], "is_mutable() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.is_mutable"]], "isomorphism_representatives() (sage.combinat.constellation.constellations_p method)": [[32, "sage.combinat.constellation.Constellations_p.isomorphism_representatives"]], "length() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.length"]], "mutable_copy() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.mutable_copy"]], "passport() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.passport"]], "perm_conjugate() (in module sage.combinat.constellation)": [[32, "sage.combinat.constellation.perm_conjugate"]], "perm_invert() (in module sage.combinat.constellation)": [[32, "sage.combinat.constellation.perm_invert"]], "perm_sym_domain() (in module sage.combinat.constellation)": [[32, "sage.combinat.constellation.perm_sym_domain"]], "perms_are_connected() (in module sage.combinat.constellation)": [[32, "sage.combinat.constellation.perms_are_connected"]], "perms_canonical_labels() (in module sage.combinat.constellation)": [[32, "sage.combinat.constellation.perms_canonical_labels"]], "perms_canonical_labels_from() (in module sage.combinat.constellation)": [[32, "sage.combinat.constellation.perms_canonical_labels_from"]], "perms_sym_init() (in module sage.combinat.constellation)": [[32, "sage.combinat.constellation.perms_sym_init"]], "profile() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.profile"]], "random_element() (sage.combinat.constellation.constellations_ld method)": [[32, "sage.combinat.constellation.Constellations_ld.random_element"]], "relabel() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.relabel"]], "sage.combinat.constellation": [[32, "module-sage.combinat.constellation"]], "set_immutable() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.set_immutable"]], "switch() (sage.combinat.constellation.constellation_class method)": [[32, "sage.combinat.constellation.Constellation_class.switch"]], "core (class in sage.combinat.core)": [[33, "sage.combinat.core.Core"]], "cores() (in module sage.combinat.core)": [[33, "sage.combinat.core.Cores"]], "cores_length (class in sage.combinat.core)": [[33, "sage.combinat.core.Cores_length"]], "cores_size (class in sage.combinat.core)": [[33, "sage.combinat.core.Cores_size"]], "element (sage.combinat.core.cores_length attribute)": [[33, "sage.combinat.core.Cores_length.Element"]], "element (sage.combinat.core.cores_size attribute)": [[33, "sage.combinat.core.Cores_size.Element"]], "affine_symmetric_group_action() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.affine_symmetric_group_action"]], "affine_symmetric_group_simple_action() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.affine_symmetric_group_simple_action"]], "contains() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.contains"]], "from_partition() (sage.combinat.core.cores_length method)": [[33, "sage.combinat.core.Cores_length.from_partition"]], "from_partition() (sage.combinat.core.cores_size method)": [[33, "sage.combinat.core.Cores_size.from_partition"]], "k() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.k"]], "length() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.length"]], "list() (sage.combinat.core.cores_length method)": [[33, "sage.combinat.core.Cores_length.list"]], "list() (sage.combinat.core.cores_size method)": [[33, "sage.combinat.core.Cores_size.list"]], "sage.combinat.core": [[33, "module-sage.combinat.core"]], "size() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.size"]], "strong_covers() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.strong_covers"]], "strong_down_list() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.strong_down_list"]], "strong_le() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.strong_le"]], "to_bounded_partition() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.to_bounded_partition"]], "to_grassmannian() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.to_grassmannian"]], "to_partition() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.to_partition"]], "weak_covers() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.weak_covers"]], "weak_le() (sage.combinat.core.core method)": [[33, "sage.combinat.core.Core.weak_le"]], "sage.combinat.counting": [[34, "module-sage.combinat.counting"]], "affinecrystalfromclassical (class in sage.combinat.crystals.affine)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassical"]], "affinecrystalfromclassicalandpromotion (class in sage.combinat.crystals.affine)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotion"]], "affinecrystalfromclassicalandpromotionelement (class in sage.combinat.crystals.affine)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotionElement"]], "affinecrystalfromclassicalelement (class in sage.combinat.crystals.affine)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement"]], "element (sage.combinat.crystals.affine.affinecrystalfromclassical attribute)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassical.Element"]], "element (sage.combinat.crystals.affine.affinecrystalfromclassicalandpromotion attribute)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotion.Element"]], "automorphism() (sage.combinat.crystals.affine.affinecrystalfromclassicalandpromotion method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotion.automorphism"]], "cardinality() (sage.combinat.crystals.affine.affinecrystalfromclassical method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassical.cardinality"]], "classical_weight() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.classical_weight"]], "e() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.e"]], "e0() (sage.combinat.crystals.affine.affinecrystalfromclassicalandpromotionelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotionElement.e0"]], "e0() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.e0"]], "epsilon() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.epsilon"]], "epsilon0() (sage.combinat.crystals.affine.affinecrystalfromclassicalandpromotionelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotionElement.epsilon0"]], "epsilon0() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.epsilon0"]], "f() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.f"]], "f0() (sage.combinat.crystals.affine.affinecrystalfromclassicalandpromotionelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotionElement.f0"]], "f0() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.f0"]], "inverse_automorphism() (sage.combinat.crystals.affine.affinecrystalfromclassicalandpromotion method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotion.inverse_automorphism"]], "lift() (sage.combinat.crystals.affine.affinecrystalfromclassical method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassical.lift"]], "lift() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.lift"]], "phi() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.phi"]], "phi0() (sage.combinat.crystals.affine.affinecrystalfromclassicalandpromotionelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalAndPromotionElement.phi0"]], "phi0() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.phi0"]], "pp() (sage.combinat.crystals.affine.affinecrystalfromclassicalelement method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassicalElement.pp"]], "retract() (sage.combinat.crystals.affine.affinecrystalfromclassical method)": [[35, "sage.combinat.crystals.affine.AffineCrystalFromClassical.retract"]], "sage.combinat.crystals.affine": [[35, "module-sage.combinat.crystals.affine"]], "affinefactorizationcrystal (class in sage.combinat.crystals.affine_factorization)": [[36, "sage.combinat.crystals.affine_factorization.AffineFactorizationCrystal"]], "affinefactorizationcrystal.element (class in sage.combinat.crystals.affine_factorization)": [[36, "sage.combinat.crystals.affine_factorization.AffineFactorizationCrystal.Element"]], "factorizationtotableaux (class in sage.combinat.crystals.affine_factorization)": [[36, "sage.combinat.crystals.affine_factorization.FactorizationToTableaux"]], "affine_factorizations() (in module sage.combinat.crystals.affine_factorization)": [[36, "sage.combinat.crystals.affine_factorization.affine_factorizations"]], "bracketing() (sage.combinat.crystals.affine_factorization.affinefactorizationcrystal.element method)": [[36, "sage.combinat.crystals.affine_factorization.AffineFactorizationCrystal.Element.bracketing"]], "e() (sage.combinat.crystals.affine_factorization.affinefactorizationcrystal.element method)": [[36, "sage.combinat.crystals.affine_factorization.AffineFactorizationCrystal.Element.e"]], "f() (sage.combinat.crystals.affine_factorization.affinefactorizationcrystal.element method)": [[36, "sage.combinat.crystals.affine_factorization.AffineFactorizationCrystal.Element.f"]], "is_embedding() (sage.combinat.crystals.affine_factorization.factorizationtotableaux method)": [[36, "sage.combinat.crystals.affine_factorization.FactorizationToTableaux.is_embedding"]], "is_isomorphism() (sage.combinat.crystals.affine_factorization.factorizationtotableaux method)": [[36, "sage.combinat.crystals.affine_factorization.FactorizationToTableaux.is_isomorphism"]], "is_surjective() (sage.combinat.crystals.affine_factorization.factorizationtotableaux method)": [[36, "sage.combinat.crystals.affine_factorization.FactorizationToTableaux.is_surjective"]], "sage.combinat.crystals.affine_factorization": [[36, "module-sage.combinat.crystals.affine_factorization"]], "to_tableau() (sage.combinat.crystals.affine_factorization.affinefactorizationcrystal.element method)": [[36, "sage.combinat.crystals.affine_factorization.AffineFactorizationCrystal.Element.to_tableau"]], "affinizationofcrystal (class in sage.combinat.crystals.affinization)": [[37, "sage.combinat.crystals.affinization.AffinizationOfCrystal"]], "affinizationofcrystal.element (class in sage.combinat.crystals.affinization)": [[37, "sage.combinat.crystals.affinization.AffinizationOfCrystal.Element"]], "e() (sage.combinat.crystals.affinization.affinizationofcrystal.element method)": [[37, "sage.combinat.crystals.affinization.AffinizationOfCrystal.Element.e"]], "epsilon() (sage.combinat.crystals.affinization.affinizationofcrystal.element method)": [[37, "sage.combinat.crystals.affinization.AffinizationOfCrystal.Element.epsilon"]], "f() (sage.combinat.crystals.affinization.affinizationofcrystal.element method)": [[37, "sage.combinat.crystals.affinization.AffinizationOfCrystal.Element.f"]], "phi() (sage.combinat.crystals.affinization.affinizationofcrystal.element method)": [[37, "sage.combinat.crystals.affinization.AffinizationOfCrystal.Element.phi"]], "sage.combinat.crystals.affinization": [[37, "module-sage.combinat.crystals.affinization"]], "weight() (sage.combinat.crystals.affinization.affinizationofcrystal.element method)": [[37, "sage.combinat.crystals.affinization.AffinizationOfCrystal.Element.weight"]], "crystalofalcovepaths (class in sage.combinat.crystals.alcove_path)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePaths"]], "crystalofalcovepathselement (class in sage.combinat.crystals.alcove_path)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement"]], "element (sage.combinat.crystals.alcove_path.crystalofalcovepaths attribute)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePaths.Element"]], "element (sage.combinat.crystals.alcove_path.rootswithheight attribute)": [[38, "sage.combinat.crystals.alcove_path.RootsWithHeight.Element"]], "infinitycrystalofalcovepaths (class in sage.combinat.crystals.alcove_path)": [[38, "sage.combinat.crystals.alcove_path.InfinityCrystalOfAlcovePaths"]], "infinitycrystalofalcovepaths.element (class in sage.combinat.crystals.alcove_path)": [[38, "sage.combinat.crystals.alcove_path.InfinityCrystalOfAlcovePaths.Element"]], "rootswithheight (class in sage.combinat.crystals.alcove_path)": [[38, "sage.combinat.crystals.alcove_path.RootsWithHeight"]], "rootswithheightelement (class in sage.combinat.crystals.alcove_path)": [[38, "sage.combinat.crystals.alcove_path.RootsWithHeightElement"]], "compare_graphs() (in module sage.combinat.crystals.alcove_path)": [[38, "sage.combinat.crystals.alcove_path.compare_graphs"]], "e() (sage.combinat.crystals.alcove_path.crystalofalcovepathselement method)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement.e"]], "e() (sage.combinat.crystals.alcove_path.infinitycrystalofalcovepaths.element method)": [[38, "sage.combinat.crystals.alcove_path.InfinityCrystalOfAlcovePaths.Element.e"]], "epsilon() (sage.combinat.crystals.alcove_path.crystalofalcovepathselement method)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement.epsilon"]], "epsilon() (sage.combinat.crystals.alcove_path.infinitycrystalofalcovepaths.element method)": [[38, "sage.combinat.crystals.alcove_path.InfinityCrystalOfAlcovePaths.Element.epsilon"]], "f() (sage.combinat.crystals.alcove_path.crystalofalcovepathselement method)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement.f"]], "f() (sage.combinat.crystals.alcove_path.infinitycrystalofalcovepaths.element method)": [[38, "sage.combinat.crystals.alcove_path.InfinityCrystalOfAlcovePaths.Element.f"]], "integer_sequence() (sage.combinat.crystals.alcove_path.crystalofalcovepathselement method)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement.integer_sequence"]], "is_admissible() (sage.combinat.crystals.alcove_path.crystalofalcovepathselement method)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement.is_admissible"]], "lambda_chain() (sage.combinat.crystals.alcove_path.rootswithheight method)": [[38, "sage.combinat.crystals.alcove_path.RootsWithHeight.lambda_chain"]], "path() (sage.combinat.crystals.alcove_path.crystalofalcovepathselement method)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement.path"]], "phi() (sage.combinat.crystals.alcove_path.crystalofalcovepathselement method)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement.phi"]], "phi() (sage.combinat.crystals.alcove_path.infinitycrystalofalcovepaths.element method)": [[38, "sage.combinat.crystals.alcove_path.InfinityCrystalOfAlcovePaths.Element.phi"]], "plot() (sage.combinat.crystals.alcove_path.crystalofalcovepathselement method)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement.plot"]], "projection() (sage.combinat.crystals.alcove_path.infinitycrystalofalcovepaths.element method)": [[38, "sage.combinat.crystals.alcove_path.InfinityCrystalOfAlcovePaths.Element.projection"]], "sage.combinat.crystals.alcove_path": [[38, "module-sage.combinat.crystals.alcove_path"]], "vertices() (sage.combinat.crystals.alcove_path.crystalofalcovepaths method)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePaths.vertices"]], "weight() (sage.combinat.crystals.alcove_path.crystalofalcovepathselement method)": [[38, "sage.combinat.crystals.alcove_path.CrystalOfAlcovePathsElement.weight"]], "weight() (sage.combinat.crystals.alcove_path.infinitycrystalofalcovepaths.element method)": [[38, "sage.combinat.crystals.alcove_path.InfinityCrystalOfAlcovePaths.Element.weight"]], "word() (sage.combinat.crystals.alcove_path.rootswithheight method)": [[38, "sage.combinat.crystals.alcove_path.RootsWithHeight.word"]], "sage.combinat.crystals.all": [[39, "module-sage.combinat.crystals.all"]], "crystalofbkktableaux (class in sage.combinat.crystals.bkk_crystals)": [[40, "sage.combinat.crystals.bkk_crystals.CrystalOfBKKTableaux"]], "crystalofbkktableaux.element (class in sage.combinat.crystals.bkk_crystals)": [[40, "sage.combinat.crystals.bkk_crystals.CrystalOfBKKTableaux.Element"]], "genuine_highest_weight_vectors() (sage.combinat.crystals.bkk_crystals.crystalofbkktableaux method)": [[40, "sage.combinat.crystals.bkk_crystals.CrystalOfBKKTableaux.genuine_highest_weight_vectors"]], "sage.combinat.crystals.bkk_crystals": [[40, "module-sage.combinat.crystals.bkk_crystals"]], "shape() (sage.combinat.crystals.bkk_crystals.crystalofbkktableaux method)": [[40, "sage.combinat.crystals.bkk_crystals.CrystalOfBKKTableaux.shape"]], "sage.combinat.crystals.catalog": [[41, "module-sage.combinat.crystals.catalog"]], "sage.combinat.crystals.catalog_elementary_crystals": [[42, "module-sage.combinat.crystals.catalog_elementary_crystals"]], "sage.combinat.crystals.catalog_infinity_crystals": [[43, "module-sage.combinat.crystals.catalog_infinity_crystals"]], "sage.combinat.crystals.catalog_kirillov_reshetikhin": [[44, "module-sage.combinat.crystals.catalog_kirillov_reshetikhin"]], "crystalbacktracker (class in sage.combinat.crystals.crystals)": [[45, "sage.combinat.crystals.crystals.CrystalBacktracker"]], "sage.combinat.crystals.crystals": [[45, "module-sage.combinat.crystals.crystals"]], "directsumofcrystals (class in sage.combinat.crystals.direct_sum)": [[46, "sage.combinat.crystals.direct_sum.DirectSumOfCrystals"]], "directsumofcrystals.element (class in sage.combinat.crystals.direct_sum)": [[46, "sage.combinat.crystals.direct_sum.DirectSumOfCrystals.Element"]], "e() (sage.combinat.crystals.direct_sum.directsumofcrystals.element method)": [[46, "sage.combinat.crystals.direct_sum.DirectSumOfCrystals.Element.e"]], "epsilon() (sage.combinat.crystals.direct_sum.directsumofcrystals.element method)": [[46, "sage.combinat.crystals.direct_sum.DirectSumOfCrystals.Element.epsilon"]], "f() (sage.combinat.crystals.direct_sum.directsumofcrystals.element method)": [[46, "sage.combinat.crystals.direct_sum.DirectSumOfCrystals.Element.f"]], "phi() (sage.combinat.crystals.direct_sum.directsumofcrystals.element method)": [[46, "sage.combinat.crystals.direct_sum.DirectSumOfCrystals.Element.phi"]], "sage.combinat.crystals.direct_sum": [[46, "module-sage.combinat.crystals.direct_sum"]], "weight() (sage.combinat.crystals.direct_sum.directsumofcrystals.element method)": [[46, "sage.combinat.crystals.direct_sum.DirectSumOfCrystals.Element.weight"]], "weight_lattice_realization() (sage.combinat.crystals.direct_sum.directsumofcrystals method)": [[46, "sage.combinat.crystals.direct_sum.DirectSumOfCrystals.weight_lattice_realization"]], "abstractsinglecrystalelement (class in sage.combinat.crystals.elementary_crystals)": [[47, "sage.combinat.crystals.elementary_crystals.AbstractSingleCrystalElement"]], "componentcrystal (class in sage.combinat.crystals.elementary_crystals)": [[47, "sage.combinat.crystals.elementary_crystals.ComponentCrystal"]], "componentcrystal.element (class in sage.combinat.crystals.elementary_crystals)": [[47, "sage.combinat.crystals.elementary_crystals.ComponentCrystal.Element"]], "elementarycrystal (class in sage.combinat.crystals.elementary_crystals)": [[47, "sage.combinat.crystals.elementary_crystals.ElementaryCrystal"]], "elementarycrystal.element (class in sage.combinat.crystals.elementary_crystals)": [[47, "sage.combinat.crystals.elementary_crystals.ElementaryCrystal.Element"]], "rcrystal (class in sage.combinat.crystals.elementary_crystals)": [[47, "sage.combinat.crystals.elementary_crystals.RCrystal"]], "rcrystal.element (class in sage.combinat.crystals.elementary_crystals)": [[47, "sage.combinat.crystals.elementary_crystals.RCrystal.Element"]], "tcrystal (class in sage.combinat.crystals.elementary_crystals)": [[47, "sage.combinat.crystals.elementary_crystals.TCrystal"]], "tcrystal.element (class in sage.combinat.crystals.elementary_crystals)": [[47, "sage.combinat.crystals.elementary_crystals.TCrystal.Element"]], "cardinality() (sage.combinat.crystals.elementary_crystals.componentcrystal method)": [[47, "sage.combinat.crystals.elementary_crystals.ComponentCrystal.cardinality"]], "cardinality() (sage.combinat.crystals.elementary_crystals.rcrystal method)": [[47, "sage.combinat.crystals.elementary_crystals.RCrystal.cardinality"]], "cardinality() (sage.combinat.crystals.elementary_crystals.tcrystal method)": [[47, "sage.combinat.crystals.elementary_crystals.TCrystal.cardinality"]], "e() (sage.combinat.crystals.elementary_crystals.abstractsinglecrystalelement method)": [[47, "sage.combinat.crystals.elementary_crystals.AbstractSingleCrystalElement.e"]], "e() (sage.combinat.crystals.elementary_crystals.elementarycrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.ElementaryCrystal.Element.e"]], "epsilon() (sage.combinat.crystals.elementary_crystals.componentcrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.ComponentCrystal.Element.epsilon"]], "epsilon() (sage.combinat.crystals.elementary_crystals.elementarycrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.ElementaryCrystal.Element.epsilon"]], "epsilon() (sage.combinat.crystals.elementary_crystals.rcrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.RCrystal.Element.epsilon"]], "epsilon() (sage.combinat.crystals.elementary_crystals.tcrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.TCrystal.Element.epsilon"]], "f() (sage.combinat.crystals.elementary_crystals.abstractsinglecrystalelement method)": [[47, "sage.combinat.crystals.elementary_crystals.AbstractSingleCrystalElement.f"]], "f() (sage.combinat.crystals.elementary_crystals.elementarycrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.ElementaryCrystal.Element.f"]], "phi() (sage.combinat.crystals.elementary_crystals.componentcrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.ComponentCrystal.Element.phi"]], "phi() (sage.combinat.crystals.elementary_crystals.elementarycrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.ElementaryCrystal.Element.phi"]], "phi() (sage.combinat.crystals.elementary_crystals.rcrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.RCrystal.Element.phi"]], "phi() (sage.combinat.crystals.elementary_crystals.tcrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.TCrystal.Element.phi"]], "sage.combinat.crystals.elementary_crystals": [[47, "module-sage.combinat.crystals.elementary_crystals"]], "weight() (sage.combinat.crystals.elementary_crystals.componentcrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.ComponentCrystal.Element.weight"]], "weight() (sage.combinat.crystals.elementary_crystals.elementarycrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.ElementaryCrystal.Element.weight"]], "weight() (sage.combinat.crystals.elementary_crystals.rcrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.RCrystal.Element.weight"]], "weight() (sage.combinat.crystals.elementary_crystals.tcrystal.element method)": [[47, "sage.combinat.crystals.elementary_crystals.TCrystal.Element.weight"]], "weight_lattice_realization() (sage.combinat.crystals.elementary_crystals.componentcrystal method)": [[47, "sage.combinat.crystals.elementary_crystals.ComponentCrystal.weight_lattice_realization"]], "weight_lattice_realization() (sage.combinat.crystals.elementary_crystals.elementarycrystal method)": [[47, "sage.combinat.crystals.elementary_crystals.ElementaryCrystal.weight_lattice_realization"]], "weight_lattice_realization() (sage.combinat.crystals.elementary_crystals.rcrystal method)": [[47, "sage.combinat.crystals.elementary_crystals.RCrystal.weight_lattice_realization"]], "weight_lattice_realization() (sage.combinat.crystals.elementary_crystals.tcrystal method)": [[47, "sage.combinat.crystals.elementary_crystals.TCrystal.weight_lattice_realization"]], "fastcrystal (class in sage.combinat.crystals.fast_crystals)": [[48, "sage.combinat.crystals.fast_crystals.FastCrystal"]], "fastcrystal.element (class in sage.combinat.crystals.fast_crystals)": [[48, "sage.combinat.crystals.fast_crystals.FastCrystal.Element"]], "cmp_elements() (sage.combinat.crystals.fast_crystals.fastcrystal method)": [[48, "sage.combinat.crystals.fast_crystals.FastCrystal.cmp_elements"]], "digraph() (sage.combinat.crystals.fast_crystals.fastcrystal method)": [[48, "sage.combinat.crystals.fast_crystals.FastCrystal.digraph"]], "e() (sage.combinat.crystals.fast_crystals.fastcrystal.element method)": [[48, "sage.combinat.crystals.fast_crystals.FastCrystal.Element.e"]], "f() (sage.combinat.crystals.fast_crystals.fastcrystal.element method)": [[48, "sage.combinat.crystals.fast_crystals.FastCrystal.Element.f"]], "sage.combinat.crystals.fast_crystals": [[48, "module-sage.combinat.crystals.fast_crystals"]], "weight() (sage.combinat.crystals.fast_crystals.fastcrystal.element method)": [[48, "sage.combinat.crystals.fast_crystals.FastCrystal.Element.weight"]], "decreasingheckefactorization (class in sage.combinat.crystals.fully_commutative_stable_grothendieck)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.DecreasingHeckeFactorization"]], "decreasingheckefactorizations (class in sage.combinat.crystals.fully_commutative_stable_grothendieck)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.DecreasingHeckeFactorizations"]], "element (sage.combinat.crystals.fully_commutative_stable_grothendieck.decreasingheckefactorizations attribute)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.DecreasingHeckeFactorizations.Element"]], "fullycommutativestablegrothendieckcrystal (class in sage.combinat.crystals.fully_commutative_stable_grothendieck)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.FullyCommutativeStableGrothendieckCrystal"]], "fullycommutativestablegrothendieckcrystal.element (class in sage.combinat.crystals.fully_commutative_stable_grothendieck)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.FullyCommutativeStableGrothendieckCrystal.Element"]], "bracketing() (sage.combinat.crystals.fully_commutative_stable_grothendieck.fullycommutativestablegrothendieckcrystal.element method)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.FullyCommutativeStableGrothendieckCrystal.Element.bracketing"]], "e() (sage.combinat.crystals.fully_commutative_stable_grothendieck.fullycommutativestablegrothendieckcrystal.element method)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.FullyCommutativeStableGrothendieckCrystal.Element.e"]], "f() (sage.combinat.crystals.fully_commutative_stable_grothendieck.fullycommutativestablegrothendieckcrystal.element method)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.FullyCommutativeStableGrothendieckCrystal.Element.f"]], "list() (sage.combinat.crystals.fully_commutative_stable_grothendieck.decreasingheckefactorizations method)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.DecreasingHeckeFactorizations.list"]], "module_generators() (sage.combinat.crystals.fully_commutative_stable_grothendieck.fullycommutativestablegrothendieckcrystal method)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.FullyCommutativeStableGrothendieckCrystal.module_generators"]], "sage.combinat.crystals.fully_commutative_stable_grothendieck": [[49, "module-sage.combinat.crystals.fully_commutative_stable_grothendieck"]], "to_increasing_hecke_biword() (sage.combinat.crystals.fully_commutative_stable_grothendieck.decreasingheckefactorization method)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.DecreasingHeckeFactorization.to_increasing_hecke_biword"]], "to_word() (sage.combinat.crystals.fully_commutative_stable_grothendieck.decreasingheckefactorization method)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.DecreasingHeckeFactorization.to_word"]], "weight() (sage.combinat.crystals.fully_commutative_stable_grothendieck.decreasingheckefactorization method)": [[49, "sage.combinat.crystals.fully_commutative_stable_grothendieck.DecreasingHeckeFactorization.weight"]], "crystalofgeneralizedyoungwalls (class in sage.combinat.crystals.generalized_young_walls)": [[50, "sage.combinat.crystals.generalized_young_walls.CrystalOfGeneralizedYoungWalls"]], "crystalofgeneralizedyoungwallselement (class in sage.combinat.crystals.generalized_young_walls)": [[50, "sage.combinat.crystals.generalized_young_walls.CrystalOfGeneralizedYoungWallsElement"]], "element (sage.combinat.crystals.generalized_young_walls.crystalofgeneralizedyoungwalls attribute)": [[50, "sage.combinat.crystals.generalized_young_walls.CrystalOfGeneralizedYoungWalls.Element"]], "element (sage.combinat.crystals.generalized_young_walls.infinitycrystalofgeneralizedyoungwalls attribute)": [[50, "sage.combinat.crystals.generalized_young_walls.InfinityCrystalOfGeneralizedYoungWalls.Element"]], "epsilon() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.Epsilon"], [50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.epsilon"]], "generalizedyoungwall (class in sage.combinat.crystals.generalized_young_walls)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall"]], "infinitycrystalofgeneralizedyoungwalls (class in sage.combinat.crystals.generalized_young_walls)": [[50, "sage.combinat.crystals.generalized_young_walls.InfinityCrystalOfGeneralizedYoungWalls"]], "phi() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.Phi"], [50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.phi"]], "a() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.a"]], "column() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.column"]], "content() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.content"]], "e() (sage.combinat.crystals.generalized_young_walls.crystalofgeneralizedyoungwallselement method)": [[50, "sage.combinat.crystals.generalized_young_walls.CrystalOfGeneralizedYoungWallsElement.e"]], "e() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.e"]], "f() (sage.combinat.crystals.generalized_young_walls.crystalofgeneralizedyoungwallselement method)": [[50, "sage.combinat.crystals.generalized_young_walls.CrystalOfGeneralizedYoungWallsElement.f"]], "f() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.f"]], "generate_signature() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.generate_signature"]], "in_highest_weight_crystal() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.in_highest_weight_crystal"]], "latex_large() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.latex_large"]], "number_of_parts() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.number_of_parts"]], "phi() (sage.combinat.crystals.generalized_young_walls.crystalofgeneralizedyoungwallselement method)": [[50, "sage.combinat.crystals.generalized_young_walls.CrystalOfGeneralizedYoungWallsElement.phi"]], "pp() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.pp"]], "raw_signature() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.raw_signature"]], "sage.combinat.crystals.generalized_young_walls": [[50, "module-sage.combinat.crystals.generalized_young_walls"]], "signature() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.signature"]], "sum_of_weighted_row_lengths() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.sum_of_weighted_row_lengths"]], "weight() (sage.combinat.crystals.generalized_young_walls.crystalofgeneralizedyoungwallselement method)": [[50, "sage.combinat.crystals.generalized_young_walls.CrystalOfGeneralizedYoungWallsElement.weight"]], "weight() (sage.combinat.crystals.generalized_young_walls.generalizedyoungwall method)": [[50, "sage.combinat.crystals.generalized_young_walls.GeneralizedYoungWall.weight"]], "element (sage.combinat.crystals.highest_weight_crystals.finitedimensionalhighestweightcrystal_typee attribute)": [[51, "sage.combinat.crystals.highest_weight_crystals.FiniteDimensionalHighestWeightCrystal_TypeE.Element"]], "finitedimensionalhighestweightcrystal_typee (class in sage.combinat.crystals.highest_weight_crystals)": [[51, "sage.combinat.crystals.highest_weight_crystals.FiniteDimensionalHighestWeightCrystal_TypeE"]], "finitedimensionalhighestweightcrystal_typee6 (class in sage.combinat.crystals.highest_weight_crystals)": [[51, "sage.combinat.crystals.highest_weight_crystals.FiniteDimensionalHighestWeightCrystal_TypeE6"]], "finitedimensionalhighestweightcrystal_typee7 (class in sage.combinat.crystals.highest_weight_crystals)": [[51, "sage.combinat.crystals.highest_weight_crystals.FiniteDimensionalHighestWeightCrystal_TypeE7"]], "highestweightcrystal() (in module sage.combinat.crystals.highest_weight_crystals)": [[51, "sage.combinat.crystals.highest_weight_crystals.HighestWeightCrystal"]], "module_generator() (sage.combinat.crystals.highest_weight_crystals.finitedimensionalhighestweightcrystal_typee method)": [[51, "sage.combinat.crystals.highest_weight_crystals.FiniteDimensionalHighestWeightCrystal_TypeE.module_generator"]], "sage.combinat.crystals.highest_weight_crystals": [[51, "module-sage.combinat.crystals.highest_weight_crystals"]], "inducedcrystal (class in sage.combinat.crystals.induced_structure)": [[52, "sage.combinat.crystals.induced_structure.InducedCrystal"]], "inducedcrystal.element (class in sage.combinat.crystals.induced_structure)": [[52, "sage.combinat.crystals.induced_structure.InducedCrystal.Element"]], "inducedfromcrystal (class in sage.combinat.crystals.induced_structure)": [[52, "sage.combinat.crystals.induced_structure.InducedFromCrystal"]], "inducedfromcrystal.element (class in sage.combinat.crystals.induced_structure)": [[52, "sage.combinat.crystals.induced_structure.InducedFromCrystal.Element"]], "cardinality() (sage.combinat.crystals.induced_structure.inducedcrystal method)": [[52, "sage.combinat.crystals.induced_structure.InducedCrystal.cardinality"]], "cardinality() (sage.combinat.crystals.induced_structure.inducedfromcrystal method)": [[52, "sage.combinat.crystals.induced_structure.InducedFromCrystal.cardinality"]], "e() (sage.combinat.crystals.induced_structure.inducedcrystal.element method)": [[52, "sage.combinat.crystals.induced_structure.InducedCrystal.Element.e"]], "e() (sage.combinat.crystals.induced_structure.inducedfromcrystal.element method)": [[52, "sage.combinat.crystals.induced_structure.InducedFromCrystal.Element.e"]], "epsilon() (sage.combinat.crystals.induced_structure.inducedcrystal.element method)": [[52, "sage.combinat.crystals.induced_structure.InducedCrystal.Element.epsilon"]], "epsilon() (sage.combinat.crystals.induced_structure.inducedfromcrystal.element method)": [[52, "sage.combinat.crystals.induced_structure.InducedFromCrystal.Element.epsilon"]], "f() (sage.combinat.crystals.induced_structure.inducedcrystal.element method)": [[52, "sage.combinat.crystals.induced_structure.InducedCrystal.Element.f"]], "f() (sage.combinat.crystals.induced_structure.inducedfromcrystal.element method)": [[52, "sage.combinat.crystals.induced_structure.InducedFromCrystal.Element.f"]], "phi() (sage.combinat.crystals.induced_structure.inducedcrystal.element method)": [[52, "sage.combinat.crystals.induced_structure.InducedCrystal.Element.phi"]], "phi() (sage.combinat.crystals.induced_structure.inducedfromcrystal.element method)": [[52, "sage.combinat.crystals.induced_structure.InducedFromCrystal.Element.phi"]], "sage.combinat.crystals.induced_structure": [[52, "module-sage.combinat.crystals.induced_structure"]], "weight() (sage.combinat.crystals.induced_structure.inducedcrystal.element method)": [[52, "sage.combinat.crystals.induced_structure.InducedCrystal.Element.weight"]], "weight() (sage.combinat.crystals.induced_structure.inducedfromcrystal.element method)": [[52, "sage.combinat.crystals.induced_structure.InducedFromCrystal.Element.weight"]], "dualinfinityqueercrystaloftableaux (class in sage.combinat.crystals.infinity_crystals)": [[53, "sage.combinat.crystals.infinity_crystals.DualInfinityQueerCrystalOfTableaux"]], "dualinfinityqueercrystaloftableaux.element (class in sage.combinat.crystals.infinity_crystals)": [[53, "sage.combinat.crystals.infinity_crystals.DualInfinityQueerCrystalOfTableaux.Element"]], "infinitycrystaloftableaux (class in sage.combinat.crystals.infinity_crystals)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableaux"]], "infinitycrystaloftableaux.element (class in sage.combinat.crystals.infinity_crystals)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableaux.Element"]], "infinitycrystaloftableauxtyped (class in sage.combinat.crystals.infinity_crystals)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableauxTypeD"]], "infinitycrystaloftableauxtyped.element (class in sage.combinat.crystals.infinity_crystals)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableauxTypeD.Element"]], "content() (sage.combinat.crystals.infinity_crystals.infinitycrystaloftableaux.element method)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableaux.Element.content"]], "index_set() (sage.combinat.crystals.infinity_crystals.dualinfinityqueercrystaloftableaux method)": [[53, "sage.combinat.crystals.infinity_crystals.DualInfinityQueerCrystalOfTableaux.index_set"]], "module_generator() (sage.combinat.crystals.infinity_crystals.dualinfinityqueercrystaloftableaux method)": [[53, "sage.combinat.crystals.infinity_crystals.DualInfinityQueerCrystalOfTableaux.module_generator"]], "module_generator() (sage.combinat.crystals.infinity_crystals.infinitycrystaloftableaux method)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableaux.module_generator"]], "module_generator() (sage.combinat.crystals.infinity_crystals.infinitycrystaloftableauxtyped method)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableauxTypeD.module_generator"]], "phi() (sage.combinat.crystals.infinity_crystals.infinitycrystaloftableaux.element method)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableaux.Element.phi"]], "reduced_form() (sage.combinat.crystals.infinity_crystals.infinitycrystaloftableaux.element method)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableaux.Element.reduced_form"]], "sage.combinat.crystals.infinity_crystals": [[53, "module-sage.combinat.crystals.infinity_crystals"]], "seg() (sage.combinat.crystals.infinity_crystals.infinitycrystaloftableaux.element method)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableaux.Element.seg"]], "weight() (sage.combinat.crystals.infinity_crystals.infinitycrystaloftableaux.element method)": [[53, "sage.combinat.crystals.infinity_crystals.InfinityCrystalOfTableaux.Element.weight"]], "crystalofkacmodule (class in sage.combinat.crystals.kac_modules)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfKacModule"]], "crystalofkacmodule.element (class in sage.combinat.crystals.kac_modules)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfKacModule.Element"]], "crystalofoddnegativeroots (class in sage.combinat.crystals.kac_modules)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfOddNegativeRoots"]], "crystalofoddnegativeroots.element (class in sage.combinat.crystals.kac_modules)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfOddNegativeRoots.Element"]], "e() (sage.combinat.crystals.kac_modules.crystalofkacmodule.element method)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfKacModule.Element.e"]], "e() (sage.combinat.crystals.kac_modules.crystalofoddnegativeroots.element method)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfOddNegativeRoots.Element.e"]], "epsilon() (sage.combinat.crystals.kac_modules.crystalofoddnegativeroots.element method)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfOddNegativeRoots.Element.epsilon"]], "f() (sage.combinat.crystals.kac_modules.crystalofkacmodule.element method)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfKacModule.Element.f"]], "f() (sage.combinat.crystals.kac_modules.crystalofoddnegativeroots.element method)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfOddNegativeRoots.Element.f"]], "latex_dual() (in module sage.combinat.crystals.kac_modules)": [[54, "sage.combinat.crystals.kac_modules.latex_dual"]], "module_generator() (sage.combinat.crystals.kac_modules.crystalofkacmodule method)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfKacModule.module_generator"]], "module_generator() (sage.combinat.crystals.kac_modules.crystalofoddnegativeroots method)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfOddNegativeRoots.module_generator"]], "phi() (sage.combinat.crystals.kac_modules.crystalofoddnegativeroots.element method)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfOddNegativeRoots.Element.phi"]], "sage.combinat.crystals.kac_modules": [[54, "module-sage.combinat.crystals.kac_modules"]], "to_dual_tableau() (in module sage.combinat.crystals.kac_modules)": [[54, "sage.combinat.crystals.kac_modules.to_dual_tableau"]], "weight() (sage.combinat.crystals.kac_modules.crystalofkacmodule.element method)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfKacModule.Element.weight"]], "weight() (sage.combinat.crystals.kac_modules.crystalofoddnegativeroots.element method)": [[54, "sage.combinat.crystals.kac_modules.CrystalOfOddNegativeRoots.Element.weight"]], "a7_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e7 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E7.A7_decomposition"]], "ambientretractmap (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.AmbientRetractMap"]], "crystaldiagramautomorphism (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.CrystalDiagramAutomorphism"]], "crystaloftableaux_e7 (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.CrystalOfTableaux_E7"]], "element (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2 attribute)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2.Element"]], "element (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bn attribute)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Bn.Element"]], "element (sage.combinat.crystals.kirillov_reshetikhin.kr_type_c attribute)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_C.Element"]], "element (sage.combinat.crystals.kirillov_reshetikhin.kr_type_cn attribute)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Cn.Element"]], "element (sage.combinat.crystals.kirillov_reshetikhin.kr_type_dn_twisted attribute)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twisted.Element"]], "element (sage.combinat.crystals.kirillov_reshetikhin.kr_type_box attribute)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_box.Element"]], "element (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhincrystalfrompromotion attribute)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinCrystalFromPromotion.Element"]], "element (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhingenericcrystal attribute)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystal.Element"]], "kr_type_a (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A"]], "kr_type_a2 (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2"]], "kr_type_a2element (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2Element"]], "kr_type_bn (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Bn"]], "kr_type_bnelement (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_BnElement"]], "kr_type_c (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_C"]], "kr_type_celement (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CElement"]], "kr_type_cn (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Cn"]], "kr_type_cnelement (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CnElement"]], "kr_type_d_tri1 (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1"]], "kr_type_d_tri1.element (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1.Element"]], "kr_type_dn_twisted (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twisted"]], "kr_type_dn_twistedelement (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twistedElement"]], "kr_type_e6 (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6"]], "kr_type_e7 (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E7"]], "kr_type_e7.element (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E7.Element"]], "kr_type_box (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_box"]], "kr_type_boxelement (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_boxElement"]], "kr_type_spin (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_spin"]], "kr_type_vertical (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_vertical"]], "kashiwaranakashimatableaux() (in module sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KashiwaraNakashimaTableaux"]], "kirillovreshetikhincrystal() (in module sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinCrystal"]], "kirillovreshetikhincrystalfromlspaths() (in module sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinCrystalFromLSPaths"]], "kirillovreshetikhincrystalfrompromotion (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinCrystalFromPromotion"]], "kirillovreshetikhincrystalfrompromotionelement (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinCrystalFromPromotionElement"]], "kirillovreshetikhingenericcrystal (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystal"]], "kirillovreshetikhingenericcrystalelement (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystalElement"]], "pmdiagram (class in sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.PMDiagram"]], "affine_weight() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.affine_weight"]], "ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2.ambient_crystal"]], "ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bn method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Bn.ambient_crystal"]], "ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_c method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_C.ambient_crystal"]], "ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_box method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_box.ambient_crystal"]], "ambient_dict_pm_diagrams() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2.ambient_dict_pm_diagrams"]], "ambient_dict_pm_diagrams() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_c method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_C.ambient_dict_pm_diagrams"]], "ambient_highest_weight_dict() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2.ambient_highest_weight_dict"]], "ambient_highest_weight_dict() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bn method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Bn.ambient_highest_weight_dict"]], "ambient_highest_weight_dict() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_c method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_C.ambient_highest_weight_dict"]], "ambient_highest_weight_dict() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_box method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_box.ambient_highest_weight_dict"]], "automorphism_on_affine_weight() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.automorphism_on_affine_weight"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bn method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Bn.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_c method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_C.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_cn method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Cn.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_d_tri1 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_dn_twisted method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twisted.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e7 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E7.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_box method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_box.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_spin method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_spin.classical_decomposition"]], "classical_decomposition() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_vertical method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_vertical.classical_decomposition"]], "classically_highest_weight_vectors() (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhingenericcrystal method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystal.classically_highest_weight_vectors"]], "coordinates() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_d_tri1.element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1.Element.coordinates"]], "dynkin_diagram_automorphism() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A.dynkin_diagram_automorphism"]], "dynkin_diagram_automorphism() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.dynkin_diagram_automorphism"]], "dynkin_diagram_automorphism() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_spin method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_spin.dynkin_diagram_automorphism"]], "dynkin_diagram_automorphism() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_vertical method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_vertical.dynkin_diagram_automorphism"]], "e0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2Element.e0"]], "e0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bnelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_BnElement.e0"]], "e0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_celement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CElement.e0"]], "e0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_cnelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CnElement.e0"]], "e0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_d_tri1.element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1.Element.e0"]], "e0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_dn_twistedelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twistedElement.e0"]], "e0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e7.element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E7.Element.e0"]], "e0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_boxelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_boxElement.e0"]], "epsilon0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2Element.epsilon0"]], "epsilon0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bnelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_BnElement.epsilon0"]], "epsilon0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_celement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CElement.epsilon0"]], "epsilon0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_cnelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CnElement.epsilon0"]], "epsilon0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_d_tri1.element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1.Element.epsilon0"]], "epsilon0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_dn_twistedelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twistedElement.epsilon0"]], "epsilon0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_boxelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_boxElement.epsilon0"]], "f0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2Element.f0"]], "f0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bnelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_BnElement.f0"]], "f0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_celement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CElement.f0"]], "f0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_cnelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CnElement.f0"]], "f0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_d_tri1.element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1.Element.f0"]], "f0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_dn_twistedelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twistedElement.f0"]], "f0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e7.element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E7.Element.f0"]], "f0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_boxelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_boxElement.f0"]], "from_a7_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e7 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E7.from_A7_crystal"]], "from_ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2.from_ambient_crystal"]], "from_ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bn method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Bn.from_ambient_crystal"]], "from_ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_c method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_C.from_ambient_crystal"]], "from_ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_box method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_box.from_ambient_crystal"]], "from_coordinates() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_d_tri1 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1.from_coordinates"]], "from_highest_weight_vector_to_pm_diagram() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_cn method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Cn.from_highest_weight_vector_to_pm_diagram"]], "from_highest_weight_vector_to_pm_diagram() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_dn_twisted method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twisted.from_highest_weight_vector_to_pm_diagram"]], "from_highest_weight_vector_to_pm_diagram() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_vertical method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_vertical.from_highest_weight_vector_to_pm_diagram"]], "from_pm_diagram_to_highest_weight_vector() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_cn method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Cn.from_pm_diagram_to_highest_weight_vector"]], "from_pm_diagram_to_highest_weight_vector() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_dn_twisted method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twisted.from_pm_diagram_to_highest_weight_vector"]], "from_pm_diagram_to_highest_weight_vector() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_vertical method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_vertical.from_pm_diagram_to_highest_weight_vector"]], "heights_of_addable_plus() (sage.combinat.crystals.kirillov_reshetikhin.pmdiagram method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.PMDiagram.heights_of_addable_plus"]], "heights_of_minus() (sage.combinat.crystals.kirillov_reshetikhin.pmdiagram method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.PMDiagram.heights_of_minus"]], "highest_weight_dict() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2.highest_weight_dict"]], "highest_weight_dict() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bn method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Bn.highest_weight_dict"]], "highest_weight_dict() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_c method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_C.highest_weight_dict"]], "highest_weight_dict() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.highest_weight_dict"]], "highest_weight_dict() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_box method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_box.highest_weight_dict"]], "highest_weight_dict_inv() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.highest_weight_dict_inv"]], "horizontal_dominoes_removed() (in module sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.horizontal_dominoes_removed"]], "hw_auxiliary() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.hw_auxiliary"]], "inner_shape() (sage.combinat.crystals.kirillov_reshetikhin.pmdiagram method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.PMDiagram.inner_shape"]], "intermediate_shape() (sage.combinat.crystals.kirillov_reshetikhin.pmdiagram method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.PMDiagram.intermediate_shape"]], "is_embedding() (sage.combinat.crystals.kirillov_reshetikhin.crystaldiagramautomorphism method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.CrystalDiagramAutomorphism.is_embedding"]], "is_isomorphism() (sage.combinat.crystals.kirillov_reshetikhin.crystaldiagramautomorphism method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.CrystalDiagramAutomorphism.is_isomorphism"]], "is_strict() (sage.combinat.crystals.kirillov_reshetikhin.crystaldiagramautomorphism method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.CrystalDiagramAutomorphism.is_strict"]], "is_surjective() (sage.combinat.crystals.kirillov_reshetikhin.crystaldiagramautomorphism method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.CrystalDiagramAutomorphism.is_surjective"]], "kirillov_reshetikhin_tableaux() (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhingenericcrystal method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystal.kirillov_reshetikhin_tableaux"]], "lusztig_involution() (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhingenericcrystalelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystalElement.lusztig_involution"]], "module_generator() (sage.combinat.crystals.kirillov_reshetikhin.crystaloftableaux_e7 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.CrystalOfTableaux_E7.module_generator"]], "module_generator() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2.module_generator"]], "module_generator() (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhingenericcrystal method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystal.module_generator"]], "outer_shape() (sage.combinat.crystals.kirillov_reshetikhin.pmdiagram method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.PMDiagram.outer_shape"]], "partitions_in_box() (in module sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.partitions_in_box"]], "phi0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2Element.phi0"]], "phi0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bnelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_BnElement.phi0"]], "phi0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_celement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CElement.phi0"]], "phi0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_cnelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_CnElement.phi0"]], "phi0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_d_tri1.element method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_D_tri1.Element.phi0"]], "phi0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_dn_twistedelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Dn_twistedElement.phi0"]], "phi0() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_boxelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_boxElement.phi0"]], "pp() (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhingenericcrystalelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystalElement.pp"]], "pp() (sage.combinat.crystals.kirillov_reshetikhin.pmdiagram method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.PMDiagram.pp"]], "promotion() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A.promotion"]], "promotion() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.promotion"]], "promotion() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_spin method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_spin.promotion"]], "promotion() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_vertical method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_vertical.promotion"]], "promotion_inverse() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A.promotion_inverse"]], "promotion_inverse() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.promotion_inverse"]], "promotion_inverse() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_spin method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_spin.promotion_inverse"]], "promotion_inverse() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_vertical method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_vertical.promotion_inverse"]], "promotion_on_highest_weight_vector() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_vertical method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_vertical.promotion_on_highest_weight_vector"]], "promotion_on_highest_weight_vectors() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.promotion_on_highest_weight_vectors"]], "promotion_on_highest_weight_vectors() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_spin method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_spin.promotion_on_highest_weight_vectors"]], "promotion_on_highest_weight_vectors_function() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e6 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E6.promotion_on_highest_weight_vectors_function"]], "promotion_on_highest_weight_vectors_inverse() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_spin method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_spin.promotion_on_highest_weight_vectors_inverse"]], "r() (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhingenericcrystal method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystal.r"]], "s() (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhingenericcrystal method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystal.s"]], "sage.combinat.crystals.kirillov_reshetikhin": [[55, "module-sage.combinat.crystals.kirillov_reshetikhin"]], "sigma() (sage.combinat.crystals.kirillov_reshetikhin.pmdiagram method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.PMDiagram.sigma"]], "similarity_factor() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bn method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Bn.similarity_factor"]], "similarity_factor() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_box method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_box.similarity_factor"]], "to_a7_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_e7 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_E7.to_A7_crystal"]], "to_ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_a2 method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_A2.to_ambient_crystal"]], "to_ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_bn method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_Bn.to_ambient_crystal"]], "to_ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_c method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_C.to_ambient_crystal"]], "to_ambient_crystal() (sage.combinat.crystals.kirillov_reshetikhin.kr_type_box method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KR_type_box.to_ambient_crystal"]], "to_kirillov_reshetikhin_tableau() (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhingenericcrystalelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystalElement.to_kirillov_reshetikhin_tableau"]], "to_tableau() (sage.combinat.crystals.kirillov_reshetikhin.kirillovreshetikhingenericcrystalelement method)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.KirillovReshetikhinGenericCrystalElement.to_tableau"]], "vertical_dominoes_removed() (in module sage.combinat.crystals.kirillov_reshetikhin)": [[55, "sage.combinat.crystals.kirillov_reshetikhin.vertical_dominoes_removed"]], "kyotopathmodel (class in sage.combinat.crystals.kyoto_path_model)": [[56, "sage.combinat.crystals.kyoto_path_model.KyotoPathModel"]], "kyotopathmodel.element (class in sage.combinat.crystals.kyoto_path_model)": [[56, "sage.combinat.crystals.kyoto_path_model.KyotoPathModel.Element"]], "e() (sage.combinat.crystals.kyoto_path_model.kyotopathmodel.element method)": [[56, "sage.combinat.crystals.kyoto_path_model.KyotoPathModel.Element.e"]], "epsilon() (sage.combinat.crystals.kyoto_path_model.kyotopathmodel.element method)": [[56, "sage.combinat.crystals.kyoto_path_model.KyotoPathModel.Element.epsilon"]], "f() (sage.combinat.crystals.kyoto_path_model.kyotopathmodel.element method)": [[56, "sage.combinat.crystals.kyoto_path_model.KyotoPathModel.Element.f"]], "finite_tensor_product() (sage.combinat.crystals.kyoto_path_model.kyotopathmodel method)": [[56, "sage.combinat.crystals.kyoto_path_model.KyotoPathModel.finite_tensor_product"]], "phi() (sage.combinat.crystals.kyoto_path_model.kyotopathmodel.element method)": [[56, "sage.combinat.crystals.kyoto_path_model.KyotoPathModel.Element.phi"]], "sage.combinat.crystals.kyoto_path_model": [[56, "module-sage.combinat.crystals.kyoto_path_model"]], "truncate() (sage.combinat.crystals.kyoto_path_model.kyotopathmodel.element method)": [[56, "sage.combinat.crystals.kyoto_path_model.KyotoPathModel.Element.truncate"]], "weight() (sage.combinat.crystals.kyoto_path_model.kyotopathmodel.element method)": [[56, "sage.combinat.crystals.kyoto_path_model.KyotoPathModel.Element.weight"]], "weight_lattice_realization() (sage.combinat.crystals.kyoto_path_model.kyotopathmodel method)": [[56, "sage.combinat.crystals.kyoto_path_model.KyotoPathModel.weight_lattice_realization"]], "bkkletter (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.BKKLetter"]], "classicalcrystalofletters (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.ClassicalCrystalOfLetters"]], "classicalcrystalofletterswrapped (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.ClassicalCrystalOfLettersWrapped"]], "crystalofbkkletters (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.CrystalOfBKKLetters"]], "crystalofletters() (in module sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.CrystalOfLetters"]], "crystalofqueerletters (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.CrystalOfQueerLetters"]], "crystal_of_letters_type_a_element (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_A_element"]], "crystal_of_letters_type_b_element (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_B_element"]], "crystal_of_letters_type_c_element (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_C_element"]], "crystal_of_letters_type_d_element (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_D_element"]], "crystal_of_letters_type_e6_element (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element"]], "crystal_of_letters_type_e6_element_dual (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element_dual"]], "crystal_of_letters_type_e7_element (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E7_element"]], "crystal_of_letters_type_g_element (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_G_element"]], "element (sage.combinat.crystals.letters.crystalofbkkletters attribute)": [[57, "sage.combinat.crystals.letters.CrystalOfBKKLetters.Element"]], "element (sage.combinat.crystals.letters.crystalofqueerletters attribute)": [[57, "sage.combinat.crystals.letters.CrystalOfQueerLetters.Element"]], "emptyletter (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.EmptyLetter"]], "letter (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.Letter"]], "lettertuple (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.LetterTuple"]], "letterwrapped (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.LetterWrapped"]], "queerletter_element (class in sage.combinat.crystals.letters)": [[57, "sage.combinat.crystals.letters.QueerLetter_element"]], "e() (sage.combinat.crystals.letters.bkkletter method)": [[57, "sage.combinat.crystals.letters.BKKLetter.e"]], "e() (sage.combinat.crystals.letters.crystal_of_letters_type_a_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_A_element.e"]], "e() (sage.combinat.crystals.letters.crystal_of_letters_type_b_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_B_element.e"]], "e() (sage.combinat.crystals.letters.crystal_of_letters_type_c_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_C_element.e"]], "e() (sage.combinat.crystals.letters.crystal_of_letters_type_d_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_D_element.e"]], "e() (sage.combinat.crystals.letters.crystal_of_letters_type_e6_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element.e"]], "e() (sage.combinat.crystals.letters.crystal_of_letters_type_e6_element_dual method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element_dual.e"]], "e() (sage.combinat.crystals.letters.crystal_of_letters_type_e7_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E7_element.e"]], "e() (sage.combinat.crystals.letters.crystal_of_letters_type_g_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_G_element.e"]], "e() (sage.combinat.crystals.letters.emptyletter method)": [[57, "sage.combinat.crystals.letters.EmptyLetter.e"]], "e() (sage.combinat.crystals.letters.letterwrapped method)": [[57, "sage.combinat.crystals.letters.LetterWrapped.e"]], "e() (sage.combinat.crystals.letters.queerletter_element method)": [[57, "sage.combinat.crystals.letters.QueerLetter_element.e"]], "epsilon() (sage.combinat.crystals.letters.crystal_of_letters_type_a_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_A_element.epsilon"]], "epsilon() (sage.combinat.crystals.letters.crystal_of_letters_type_b_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_B_element.epsilon"]], "epsilon() (sage.combinat.crystals.letters.crystal_of_letters_type_c_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_C_element.epsilon"]], "epsilon() (sage.combinat.crystals.letters.crystal_of_letters_type_d_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_D_element.epsilon"]], "epsilon() (sage.combinat.crystals.letters.crystal_of_letters_type_g_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_G_element.epsilon"]], "epsilon() (sage.combinat.crystals.letters.emptyletter method)": [[57, "sage.combinat.crystals.letters.EmptyLetter.epsilon"]], "epsilon() (sage.combinat.crystals.letters.lettertuple method)": [[57, "sage.combinat.crystals.letters.LetterTuple.epsilon"]], "epsilon() (sage.combinat.crystals.letters.letterwrapped method)": [[57, "sage.combinat.crystals.letters.LetterWrapped.epsilon"]], "epsilon() (sage.combinat.crystals.letters.queerletter_element method)": [[57, "sage.combinat.crystals.letters.QueerLetter_element.epsilon"]], "f() (sage.combinat.crystals.letters.bkkletter method)": [[57, "sage.combinat.crystals.letters.BKKLetter.f"]], "f() (sage.combinat.crystals.letters.crystal_of_letters_type_a_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_A_element.f"]], "f() (sage.combinat.crystals.letters.crystal_of_letters_type_b_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_B_element.f"]], "f() (sage.combinat.crystals.letters.crystal_of_letters_type_c_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_C_element.f"]], "f() (sage.combinat.crystals.letters.crystal_of_letters_type_d_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_D_element.f"]], "f() (sage.combinat.crystals.letters.crystal_of_letters_type_e6_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element.f"]], "f() (sage.combinat.crystals.letters.crystal_of_letters_type_e6_element_dual method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element_dual.f"]], "f() (sage.combinat.crystals.letters.crystal_of_letters_type_e7_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E7_element.f"]], "f() (sage.combinat.crystals.letters.crystal_of_letters_type_g_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_G_element.f"]], "f() (sage.combinat.crystals.letters.emptyletter method)": [[57, "sage.combinat.crystals.letters.EmptyLetter.f"]], "f() (sage.combinat.crystals.letters.letterwrapped method)": [[57, "sage.combinat.crystals.letters.LetterWrapped.f"]], "f() (sage.combinat.crystals.letters.queerletter_element method)": [[57, "sage.combinat.crystals.letters.QueerLetter_element.f"]], "index_set() (sage.combinat.crystals.letters.crystalofqueerletters method)": [[57, "sage.combinat.crystals.letters.CrystalOfQueerLetters.index_set"]], "lift() (sage.combinat.crystals.letters.crystal_of_letters_type_e6_element_dual method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element_dual.lift"]], "list() (sage.combinat.crystals.letters.classicalcrystalofletters method)": [[57, "sage.combinat.crystals.letters.ClassicalCrystalOfLetters.list"]], "lt_elements() (sage.combinat.crystals.letters.classicalcrystalofletters method)": [[57, "sage.combinat.crystals.letters.ClassicalCrystalOfLetters.lt_elements"]], "phi() (sage.combinat.crystals.letters.crystal_of_letters_type_a_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_A_element.phi"]], "phi() (sage.combinat.crystals.letters.crystal_of_letters_type_b_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_B_element.phi"]], "phi() (sage.combinat.crystals.letters.crystal_of_letters_type_c_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_C_element.phi"]], "phi() (sage.combinat.crystals.letters.crystal_of_letters_type_d_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_D_element.phi"]], "phi() (sage.combinat.crystals.letters.crystal_of_letters_type_g_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_G_element.phi"]], "phi() (sage.combinat.crystals.letters.emptyletter method)": [[57, "sage.combinat.crystals.letters.EmptyLetter.phi"]], "phi() (sage.combinat.crystals.letters.lettertuple method)": [[57, "sage.combinat.crystals.letters.LetterTuple.phi"]], "phi() (sage.combinat.crystals.letters.letterwrapped method)": [[57, "sage.combinat.crystals.letters.LetterWrapped.phi"]], "phi() (sage.combinat.crystals.letters.queerletter_element method)": [[57, "sage.combinat.crystals.letters.QueerLetter_element.phi"]], "retract() (sage.combinat.crystals.letters.crystal_of_letters_type_e6_element_dual method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element_dual.retract"]], "sage.combinat.crystals.letters": [[57, "module-sage.combinat.crystals.letters"]], "value (sage.combinat.crystals.letters.emptyletter attribute)": [[57, "sage.combinat.crystals.letters.EmptyLetter.value"]], "value (sage.combinat.crystals.letters.letter attribute)": [[57, "sage.combinat.crystals.letters.Letter.value"]], "value (sage.combinat.crystals.letters.lettertuple attribute)": [[57, "sage.combinat.crystals.letters.LetterTuple.value"]], "value (sage.combinat.crystals.letters.letterwrapped attribute)": [[57, "sage.combinat.crystals.letters.LetterWrapped.value"]], "weight() (sage.combinat.crystals.letters.bkkletter method)": [[57, "sage.combinat.crystals.letters.BKKLetter.weight"]], "weight() (sage.combinat.crystals.letters.crystal_of_letters_type_a_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_A_element.weight"]], "weight() (sage.combinat.crystals.letters.crystal_of_letters_type_b_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_B_element.weight"]], "weight() (sage.combinat.crystals.letters.crystal_of_letters_type_c_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_C_element.weight"]], "weight() (sage.combinat.crystals.letters.crystal_of_letters_type_d_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_D_element.weight"]], "weight() (sage.combinat.crystals.letters.crystal_of_letters_type_e6_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element.weight"]], "weight() (sage.combinat.crystals.letters.crystal_of_letters_type_e6_element_dual method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E6_element_dual.weight"]], "weight() (sage.combinat.crystals.letters.crystal_of_letters_type_e7_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_E7_element.weight"]], "weight() (sage.combinat.crystals.letters.crystal_of_letters_type_g_element method)": [[57, "sage.combinat.crystals.letters.Crystal_of_letters_type_G_element.weight"]], "weight() (sage.combinat.crystals.letters.emptyletter method)": [[57, "sage.combinat.crystals.letters.EmptyLetter.weight"]], "weight() (sage.combinat.crystals.letters.queerletter_element method)": [[57, "sage.combinat.crystals.letters.QueerLetter_element.weight"]], "crystaloflspaths (class in sage.combinat.crystals.littelmann_path)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths"]], "crystaloflspaths.element (class in sage.combinat.crystals.littelmann_path)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element"]], "crystalofprojectedlevelzerolspaths (class in sage.combinat.crystals.littelmann_path)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths"]], "crystalofprojectedlevelzerolspaths.element (class in sage.combinat.crystals.littelmann_path)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths.Element"]], "infinitycrystaloflspaths (class in sage.combinat.crystals.littelmann_path)": [[58, "sage.combinat.crystals.littelmann_path.InfinityCrystalOfLSPaths"]], "infinitycrystaloflspaths.element (class in sage.combinat.crystals.littelmann_path)": [[58, "sage.combinat.crystals.littelmann_path.InfinityCrystalOfLSPaths.Element"]], "classically_highest_weight_vectors() (sage.combinat.crystals.littelmann_path.crystalofprojectedlevelzerolspaths method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths.classically_highest_weight_vectors"]], "compress() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.compress"]], "dualize() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.dualize"]], "e() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.e"]], "e() (sage.combinat.crystals.littelmann_path.infinitycrystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.InfinityCrystalOfLSPaths.Element.e"]], "endpoint() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.endpoint"]], "energy_function() (sage.combinat.crystals.littelmann_path.crystalofprojectedlevelzerolspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths.Element.energy_function"]], "epsilon() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.epsilon"]], "f() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.f"]], "f() (sage.combinat.crystals.littelmann_path.infinitycrystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.InfinityCrystalOfLSPaths.Element.f"]], "is_perfect() (sage.combinat.crystals.littelmann_path.crystalofprojectedlevelzerolspaths method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths.is_perfect"]], "maximal_vector() (sage.combinat.crystals.littelmann_path.crystalofprojectedlevelzerolspaths method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths.maximal_vector"]], "module_generator() (sage.combinat.crystals.littelmann_path.infinitycrystaloflspaths method)": [[58, "sage.combinat.crystals.littelmann_path.InfinityCrystalOfLSPaths.module_generator"]], "one_dimensional_configuration_sum() (sage.combinat.crystals.littelmann_path.crystalofprojectedlevelzerolspaths method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths.one_dimensional_configuration_sum"]], "phi() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.phi"]], "phi() (sage.combinat.crystals.littelmann_path.infinitycrystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.InfinityCrystalOfLSPaths.Element.phi"]], "positively_parallel_weights() (in module sage.combinat.crystals.littelmann_path)": [[58, "sage.combinat.crystals.littelmann_path.positively_parallel_weights"]], "reflect_step() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.reflect_step"]], "s() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.s"]], "sage.combinat.crystals.littelmann_path": [[58, "module-sage.combinat.crystals.littelmann_path"]], "scalar_factors() (sage.combinat.crystals.littelmann_path.crystalofprojectedlevelzerolspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths.Element.scalar_factors"]], "split_step() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.split_step"]], "weight() (sage.combinat.crystals.littelmann_path.crystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.Element.weight"]], "weight() (sage.combinat.crystals.littelmann_path.infinitycrystaloflspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.InfinityCrystalOfLSPaths.Element.weight"]], "weight_lattice_realization() (sage.combinat.crystals.littelmann_path.crystaloflspaths method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfLSPaths.weight_lattice_realization"]], "weight_lattice_realization() (sage.combinat.crystals.littelmann_path.infinitycrystaloflspaths method)": [[58, "sage.combinat.crystals.littelmann_path.InfinityCrystalOfLSPaths.weight_lattice_realization"]], "weyl_group_representation() (sage.combinat.crystals.littelmann_path.crystalofprojectedlevelzerolspaths.element method)": [[58, "sage.combinat.crystals.littelmann_path.CrystalOfProjectedLevelZeroLSPaths.Element.weyl_group_representation"]], "crystalofnakajimamonomials (class in sage.combinat.crystals.monomial_crystals)": [[59, "sage.combinat.crystals.monomial_crystals.CrystalOfNakajimaMonomials"]], "crystalofnakajimamonomialselement (class in sage.combinat.crystals.monomial_crystals)": [[59, "sage.combinat.crystals.monomial_crystals.CrystalOfNakajimaMonomialsElement"]], "element (sage.combinat.crystals.monomial_crystals.crystalofnakajimamonomials attribute)": [[59, "sage.combinat.crystals.monomial_crystals.CrystalOfNakajimaMonomials.Element"]], "element (sage.combinat.crystals.monomial_crystals.infinitycrystalofnakajimamonomials attribute)": [[59, "sage.combinat.crystals.monomial_crystals.InfinityCrystalOfNakajimaMonomials.Element"]], "infinitycrystalofnakajimamonomials (class in sage.combinat.crystals.monomial_crystals)": [[59, "sage.combinat.crystals.monomial_crystals.InfinityCrystalOfNakajimaMonomials"]], "nakajimamonomial (class in sage.combinat.crystals.monomial_crystals)": [[59, "sage.combinat.crystals.monomial_crystals.NakajimaMonomial"]], "c() (sage.combinat.crystals.monomial_crystals.infinitycrystalofnakajimamonomials method)": [[59, "sage.combinat.crystals.monomial_crystals.InfinityCrystalOfNakajimaMonomials.c"]], "cardinality() (sage.combinat.crystals.monomial_crystals.crystalofnakajimamonomials method)": [[59, "sage.combinat.crystals.monomial_crystals.CrystalOfNakajimaMonomials.cardinality"]], "cardinality() (sage.combinat.crystals.monomial_crystals.infinitycrystalofnakajimamonomials method)": [[59, "sage.combinat.crystals.monomial_crystals.InfinityCrystalOfNakajimaMonomials.cardinality"]], "e() (sage.combinat.crystals.monomial_crystals.nakajimamonomial method)": [[59, "sage.combinat.crystals.monomial_crystals.NakajimaMonomial.e"]], "epsilon() (sage.combinat.crystals.monomial_crystals.nakajimamonomial method)": [[59, "sage.combinat.crystals.monomial_crystals.NakajimaMonomial.epsilon"]], "f() (sage.combinat.crystals.monomial_crystals.crystalofnakajimamonomialselement method)": [[59, "sage.combinat.crystals.monomial_crystals.CrystalOfNakajimaMonomialsElement.f"]], "f() (sage.combinat.crystals.monomial_crystals.nakajimamonomial method)": [[59, "sage.combinat.crystals.monomial_crystals.NakajimaMonomial.f"]], "get_variables() (sage.combinat.crystals.monomial_crystals.infinitycrystalofnakajimamonomials method)": [[59, "sage.combinat.crystals.monomial_crystals.InfinityCrystalOfNakajimaMonomials.get_variables"]], "phi() (sage.combinat.crystals.monomial_crystals.nakajimamonomial method)": [[59, "sage.combinat.crystals.monomial_crystals.NakajimaMonomial.phi"]], "sage.combinat.crystals.monomial_crystals": [[59, "module-sage.combinat.crystals.monomial_crystals"]], "set_variables() (sage.combinat.crystals.monomial_crystals.infinitycrystalofnakajimamonomials method)": [[59, "sage.combinat.crystals.monomial_crystals.InfinityCrystalOfNakajimaMonomials.set_variables"]], "weight() (sage.combinat.crystals.monomial_crystals.crystalofnakajimamonomialselement method)": [[59, "sage.combinat.crystals.monomial_crystals.CrystalOfNakajimaMonomialsElement.weight"]], "weight() (sage.combinat.crystals.monomial_crystals.nakajimamonomial method)": [[59, "sage.combinat.crystals.monomial_crystals.NakajimaMonomial.weight"]], "weight_in_root_lattice() (sage.combinat.crystals.monomial_crystals.nakajimamonomial method)": [[59, "sage.combinat.crystals.monomial_crystals.NakajimaMonomial.weight_in_root_lattice"]], "infinitycrystalofmultisegments (class in sage.combinat.crystals.multisegments)": [[60, "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments"]], "infinitycrystalofmultisegments.element (class in sage.combinat.crystals.multisegments)": [[60, "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments.Element"]], "e() (sage.combinat.crystals.multisegments.infinitycrystalofmultisegments.element method)": [[60, "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments.Element.e"]], "epsilon() (sage.combinat.crystals.multisegments.infinitycrystalofmultisegments.element method)": [[60, "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments.Element.epsilon"]], "f() (sage.combinat.crystals.multisegments.infinitycrystalofmultisegments.element method)": [[60, "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments.Element.f"]], "highest_weight_vector() (sage.combinat.crystals.multisegments.infinitycrystalofmultisegments method)": [[60, "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments.highest_weight_vector"]], "phi() (sage.combinat.crystals.multisegments.infinitycrystalofmultisegments.element method)": [[60, "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments.Element.phi"]], "sage.combinat.crystals.multisegments": [[60, "module-sage.combinat.crystals.multisegments"]], "weight() (sage.combinat.crystals.multisegments.infinitycrystalofmultisegments.element method)": [[60, "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments.Element.weight"]], "weight_lattice_realization() (sage.combinat.crystals.multisegments.infinitycrystalofmultisegments method)": [[60, "sage.combinat.crystals.multisegments.InfinityCrystalOfMultisegments.weight_lattice_realization"]], "element (sage.combinat.crystals.mv_polytopes.mvpolytopes attribute)": [[61, "sage.combinat.crystals.mv_polytopes.MVPolytopes.Element"]], "mvpolytope (class in sage.combinat.crystals.mv_polytopes)": [[61, "sage.combinat.crystals.mv_polytopes.MVPolytope"]], "mvpolytopes (class in sage.combinat.crystals.mv_polytopes)": [[61, "sage.combinat.crystals.mv_polytopes.MVPolytopes"]], "latex_options() (sage.combinat.crystals.mv_polytopes.mvpolytopes method)": [[61, "sage.combinat.crystals.mv_polytopes.MVPolytopes.latex_options"]], "plot() (sage.combinat.crystals.mv_polytopes.mvpolytope method)": [[61, "sage.combinat.crystals.mv_polytopes.MVPolytope.plot"]], "polytope() (sage.combinat.crystals.mv_polytopes.mvpolytope method)": [[61, "sage.combinat.crystals.mv_polytopes.MVPolytope.polytope"]], "sage.combinat.crystals.mv_polytopes": [[61, "module-sage.combinat.crystals.mv_polytopes"]], "set_latex_options() (sage.combinat.crystals.mv_polytopes.mvpolytopes method)": [[61, "sage.combinat.crystals.mv_polytopes.MVPolytopes.set_latex_options"]], "element (sage.combinat.crystals.pbw_crystal.pbwcrystal attribute)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystal.Element"]], "pbwcrystal (class in sage.combinat.crystals.pbw_crystal)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystal"]], "pbwcrystalelement (class in sage.combinat.crystals.pbw_crystal)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystalElement"]], "default_long_word() (sage.combinat.crystals.pbw_crystal.pbwcrystal method)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystal.default_long_word"]], "e() (sage.combinat.crystals.pbw_crystal.pbwcrystalelement method)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystalElement.e"]], "epsilon() (sage.combinat.crystals.pbw_crystal.pbwcrystalelement method)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystalElement.epsilon"]], "f() (sage.combinat.crystals.pbw_crystal.pbwcrystalelement method)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystalElement.f"]], "lusztig_datum() (sage.combinat.crystals.pbw_crystal.pbwcrystalelement method)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystalElement.lusztig_datum"]], "phi() (sage.combinat.crystals.pbw_crystal.pbwcrystalelement method)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystalElement.phi"]], "sage.combinat.crystals.pbw_crystal": [[62, "module-sage.combinat.crystals.pbw_crystal"]], "set_default_long_word() (sage.combinat.crystals.pbw_crystal.pbwcrystal method)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystal.set_default_long_word"]], "star() (sage.combinat.crystals.pbw_crystal.pbwcrystalelement method)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystalElement.star"]], "weight() (sage.combinat.crystals.pbw_crystal.pbwcrystalelement method)": [[62, "sage.combinat.crystals.pbw_crystal.PBWCrystalElement.weight"]], "pbwdata (class in sage.combinat.crystals.pbw_datum)": [[63, "sage.combinat.crystals.pbw_datum.PBWData"]], "pbwdatum (class in sage.combinat.crystals.pbw_datum)": [[63, "sage.combinat.crystals.pbw_datum.PBWDatum"]], "compute_new_lusztig_datum() (in module sage.combinat.crystals.pbw_datum)": [[63, "sage.combinat.crystals.pbw_datum.compute_new_lusztig_datum"]], "convert_to_long_word_with_first_letter() (sage.combinat.crystals.pbw_datum.pbwdatum method)": [[63, "sage.combinat.crystals.pbw_datum.PBWDatum.convert_to_long_word_with_first_letter"]], "convert_to_new_long_word() (sage.combinat.crystals.pbw_datum.pbwdata method)": [[63, "sage.combinat.crystals.pbw_datum.PBWData.convert_to_new_long_word"]], "convert_to_new_long_word() (sage.combinat.crystals.pbw_datum.pbwdatum method)": [[63, "sage.combinat.crystals.pbw_datum.PBWDatum.convert_to_new_long_word"]], "enhance_braid_move_chain() (in module sage.combinat.crystals.pbw_datum)": [[63, "sage.combinat.crystals.pbw_datum.enhance_braid_move_chain"]], "is_equivalent_to() (sage.combinat.crystals.pbw_datum.pbwdatum method)": [[63, "sage.combinat.crystals.pbw_datum.PBWDatum.is_equivalent_to"]], "sage.combinat.crystals.pbw_datum": [[63, "module-sage.combinat.crystals.pbw_datum"]], "star() (sage.combinat.crystals.pbw_datum.pbwdatum method)": [[63, "sage.combinat.crystals.pbw_datum.PBWDatum.star"]], "tropical_plucker_relation() (in module sage.combinat.crystals.pbw_datum)": [[63, "sage.combinat.crystals.pbw_datum.tropical_plucker_relation"]], "weight() (sage.combinat.crystals.pbw_datum.pbwdatum method)": [[63, "sage.combinat.crystals.pbw_datum.PBWDatum.weight"]], "infinitycrystalaspolyhedralrealization (class in sage.combinat.crystals.polyhedral_realization)": [[64, "sage.combinat.crystals.polyhedral_realization.InfinityCrystalAsPolyhedralRealization"]], "infinitycrystalaspolyhedralrealization.element (class in sage.combinat.crystals.polyhedral_realization)": [[64, "sage.combinat.crystals.polyhedral_realization.InfinityCrystalAsPolyhedralRealization.Element"]], "e() (sage.combinat.crystals.polyhedral_realization.infinitycrystalaspolyhedralrealization.element method)": [[64, "sage.combinat.crystals.polyhedral_realization.InfinityCrystalAsPolyhedralRealization.Element.e"]], "epsilon() (sage.combinat.crystals.polyhedral_realization.infinitycrystalaspolyhedralrealization.element method)": [[64, "sage.combinat.crystals.polyhedral_realization.InfinityCrystalAsPolyhedralRealization.Element.epsilon"]], "f() (sage.combinat.crystals.polyhedral_realization.infinitycrystalaspolyhedralrealization.element method)": [[64, "sage.combinat.crystals.polyhedral_realization.InfinityCrystalAsPolyhedralRealization.Element.f"]], "finite_tensor_product() (sage.combinat.crystals.polyhedral_realization.infinitycrystalaspolyhedralrealization method)": [[64, "sage.combinat.crystals.polyhedral_realization.InfinityCrystalAsPolyhedralRealization.finite_tensor_product"]], "phi() (sage.combinat.crystals.polyhedral_realization.infinitycrystalaspolyhedralrealization.element method)": [[64, "sage.combinat.crystals.polyhedral_realization.InfinityCrystalAsPolyhedralRealization.Element.phi"]], "sage.combinat.crystals.polyhedral_realization": [[64, "module-sage.combinat.crystals.polyhedral_realization"]], "truncate() (sage.combinat.crystals.polyhedral_realization.infinitycrystalaspolyhedralrealization.element method)": [[64, "sage.combinat.crystals.polyhedral_realization.InfinityCrystalAsPolyhedralRealization.Element.truncate"]], "crystalofspins() (in module sage.combinat.crystals.spins)": [[65, "sage.combinat.crystals.spins.CrystalOfSpins"]], "crystalofspinsminus() (in module sage.combinat.crystals.spins)": [[65, "sage.combinat.crystals.spins.CrystalOfSpinsMinus"]], "crystalofspinsplus() (in module sage.combinat.crystals.spins)": [[65, "sage.combinat.crystals.spins.CrystalOfSpinsPlus"]], "genericcrystalofspins (class in sage.combinat.crystals.spins)": [[65, "sage.combinat.crystals.spins.GenericCrystalOfSpins"]], "spin (class in sage.combinat.crystals.spins)": [[65, "sage.combinat.crystals.spins.Spin"]], "spin_crystal_type_b_element (class in sage.combinat.crystals.spins)": [[65, "sage.combinat.crystals.spins.Spin_crystal_type_B_element"]], "spin_crystal_type_d_element (class in sage.combinat.crystals.spins)": [[65, "sage.combinat.crystals.spins.Spin_crystal_type_D_element"]], "e() (sage.combinat.crystals.spins.spin_crystal_type_b_element method)": [[65, "sage.combinat.crystals.spins.Spin_crystal_type_B_element.e"]], "e() (sage.combinat.crystals.spins.spin_crystal_type_d_element method)": [[65, "sage.combinat.crystals.spins.Spin_crystal_type_D_element.e"]], "epsilon() (sage.combinat.crystals.spins.spin_crystal_type_b_element method)": [[65, "sage.combinat.crystals.spins.Spin_crystal_type_B_element.epsilon"]], "epsilon() (sage.combinat.crystals.spins.spin_crystal_type_d_element method)": [[65, "sage.combinat.crystals.spins.Spin_crystal_type_D_element.epsilon"]], "f() (sage.combinat.crystals.spins.spin_crystal_type_b_element method)": [[65, "sage.combinat.crystals.spins.Spin_crystal_type_B_element.f"]], "f() (sage.combinat.crystals.spins.spin_crystal_type_d_element method)": [[65, "sage.combinat.crystals.spins.Spin_crystal_type_D_element.f"]], "lt_elements() (sage.combinat.crystals.spins.genericcrystalofspins method)": [[65, "sage.combinat.crystals.spins.GenericCrystalOfSpins.lt_elements"]], "phi() (sage.combinat.crystals.spins.spin_crystal_type_b_element method)": [[65, "sage.combinat.crystals.spins.Spin_crystal_type_B_element.phi"]], "phi() (sage.combinat.crystals.spins.spin_crystal_type_d_element method)": [[65, "sage.combinat.crystals.spins.Spin_crystal_type_D_element.phi"]], "pp() (sage.combinat.crystals.spins.spin method)": [[65, "sage.combinat.crystals.spins.Spin.pp"]], "sage.combinat.crystals.spins": [[65, "module-sage.combinat.crystals.spins"]], "signature() (sage.combinat.crystals.spins.spin method)": [[65, "sage.combinat.crystals.spins.Spin.signature"]], "value (sage.combinat.crystals.spins.spin attribute)": [[65, "sage.combinat.crystals.spins.Spin.value"]], "weight() (sage.combinat.crystals.spins.spin method)": [[65, "sage.combinat.crystals.spins.Spin.weight"]], "starcrystal (class in sage.combinat.crystals.star_crystal)": [[66, "sage.combinat.crystals.star_crystal.StarCrystal"]], "starcrystal.element (class in sage.combinat.crystals.star_crystal)": [[66, "sage.combinat.crystals.star_crystal.StarCrystal.Element"]], "e() (sage.combinat.crystals.star_crystal.starcrystal.element method)": [[66, "sage.combinat.crystals.star_crystal.StarCrystal.Element.e"]], "epsilon() (sage.combinat.crystals.star_crystal.starcrystal.element method)": [[66, "sage.combinat.crystals.star_crystal.StarCrystal.Element.epsilon"]], "f() (sage.combinat.crystals.star_crystal.starcrystal.element method)": [[66, "sage.combinat.crystals.star_crystal.StarCrystal.Element.f"]], "jump() (sage.combinat.crystals.star_crystal.starcrystal.element method)": [[66, "sage.combinat.crystals.star_crystal.StarCrystal.Element.jump"]], "phi() (sage.combinat.crystals.star_crystal.starcrystal.element method)": [[66, "sage.combinat.crystals.star_crystal.StarCrystal.Element.phi"]], "sage.combinat.crystals.star_crystal": [[66, "module-sage.combinat.crystals.star_crystal"]], "weight() (sage.combinat.crystals.star_crystal.starcrystal.element method)": [[66, "sage.combinat.crystals.star_crystal.StarCrystal.Element.weight"]], "crystalofqueertableaux (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.CrystalOfQueerTableaux"]], "crystalofqueertableaux.element (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.CrystalOfQueerTableaux.Element"]], "crystaloftableaux (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.CrystalOfTableaux"]], "crystaloftableaux.element (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.CrystalOfTableaux.Element"]], "crystalofwords (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.CrystalOfWords"]], "crystalofwords.element (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.CrystalOfWords.Element"]], "fulltensorproductofcrystals (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.FullTensorProductOfCrystals"]], "fulltensorproductofqueersupercrystals (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.FullTensorProductOfQueerSuperCrystals"]], "fulltensorproductofqueersupercrystals.element (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.FullTensorProductOfQueerSuperCrystals.Element"]], "fulltensorproductofregularcrystals (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.FullTensorProductOfRegularCrystals"]], "fulltensorproductofregularcrystals.element (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.FullTensorProductOfRegularCrystals.Element"]], "fulltensorproductofsupercrystals (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.FullTensorProductOfSuperCrystals"]], "fulltensorproductofsupercrystals.element (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.FullTensorProductOfSuperCrystals.Element"]], "queersupercrystalsmixin (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.QueerSuperCrystalsMixin"]], "tensorproductofcrystals (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.TensorProductOfCrystals"]], "tensorproductofcrystalswithgenerators (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.TensorProductOfCrystalsWithGenerators"]], "tensorproductofregularcrystalswithgenerators (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.TensorProductOfRegularCrystalsWithGenerators"]], "tensorproductofregularcrystalswithgenerators.element (class in sage.combinat.crystals.tensor_product)": [[67, "sage.combinat.crystals.tensor_product.TensorProductOfRegularCrystalsWithGenerators.Element"]], "cardinality() (sage.combinat.crystals.tensor_product.fulltensorproductofcrystals method)": [[67, "sage.combinat.crystals.tensor_product.FullTensorProductOfCrystals.cardinality"]], "cartan_type() (sage.combinat.crystals.tensor_product.crystaloftableaux method)": [[67, "sage.combinat.crystals.tensor_product.CrystalOfTableaux.cartan_type"]], "index_set() (sage.combinat.crystals.tensor_product.queersupercrystalsmixin method)": [[67, "sage.combinat.crystals.tensor_product.QueerSuperCrystalsMixin.index_set"]], "module_generator() (sage.combinat.crystals.tensor_product.crystaloftableaux method)": [[67, "sage.combinat.crystals.tensor_product.CrystalOfTableaux.module_generator"]], "options (sage.combinat.crystals.tensor_product.tensorproductofcrystals attribute)": [[67, "sage.combinat.crystals.tensor_product.TensorProductOfCrystals.options"]], "rows() (sage.combinat.crystals.tensor_product.crystalofqueertableaux.element method)": [[67, "sage.combinat.crystals.tensor_product.CrystalOfQueerTableaux.Element.rows"]], "sage.combinat.crystals.tensor_product": [[67, "module-sage.combinat.crystals.tensor_product"]], "weight_lattice_realization() (sage.combinat.crystals.tensor_product.fulltensorproductofcrystals method)": [[67, "sage.combinat.crystals.tensor_product.FullTensorProductOfCrystals.weight_lattice_realization"]], "crystalofbkktableauxelement (class in sage.combinat.crystals.tensor_product_element)": [[68, "sage.combinat.crystals.tensor_product_element.CrystalOfBKKTableauxElement"]], "crystaloftableauxelement (class in sage.combinat.crystals.tensor_product_element)": [[68, "sage.combinat.crystals.tensor_product_element.CrystalOfTableauxElement"]], "immutablelistwithparent (class in sage.combinat.crystals.tensor_product_element)": [[68, "sage.combinat.crystals.tensor_product_element.ImmutableListWithParent"]], "infinitycrystaloftableauxelement (class in sage.combinat.crystals.tensor_product_element)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityCrystalOfTableauxElement"]], "infinitycrystaloftableauxelementtyped (class in sage.combinat.crystals.tensor_product_element)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityCrystalOfTableauxElementTypeD"]], "infinityqueercrystaloftableauxelement (class in sage.combinat.crystals.tensor_product_element)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityQueerCrystalOfTableauxElement"]], "tensorproductofcrystalselement (class in sage.combinat.crystals.tensor_product_element)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfCrystalsElement"]], "tensorproductofqueersupercrystalselement (class in sage.combinat.crystals.tensor_product_element)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfQueerSuperCrystalsElement"]], "tensorproductofregularcrystalselement (class in sage.combinat.crystals.tensor_product_element)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfRegularCrystalsElement"]], "tensorproductofsupercrystalselement (class in sage.combinat.crystals.tensor_product_element)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfSuperCrystalsElement"]], "e() (sage.combinat.crystals.tensor_product_element.infinitycrystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityCrystalOfTableauxElement.e"]], "e() (sage.combinat.crystals.tensor_product_element.infinitycrystaloftableauxelementtyped method)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityCrystalOfTableauxElementTypeD.e"]], "e() (sage.combinat.crystals.tensor_product_element.infinityqueercrystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityQueerCrystalOfTableauxElement.e"]], "e() (sage.combinat.crystals.tensor_product_element.tensorproductofcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfCrystalsElement.e"]], "e() (sage.combinat.crystals.tensor_product_element.tensorproductofqueersupercrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfQueerSuperCrystalsElement.e"]], "e() (sage.combinat.crystals.tensor_product_element.tensorproductofregularcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfRegularCrystalsElement.e"]], "e() (sage.combinat.crystals.tensor_product_element.tensorproductofsupercrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfSuperCrystalsElement.e"]], "epsilon() (sage.combinat.crystals.tensor_product_element.infinityqueercrystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityQueerCrystalOfTableauxElement.epsilon"]], "epsilon() (sage.combinat.crystals.tensor_product_element.tensorproductofcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfCrystalsElement.epsilon"]], "epsilon() (sage.combinat.crystals.tensor_product_element.tensorproductofqueersupercrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfQueerSuperCrystalsElement.epsilon"]], "epsilon() (sage.combinat.crystals.tensor_product_element.tensorproductofregularcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfRegularCrystalsElement.epsilon"]], "epsilon() (sage.combinat.crystals.tensor_product_element.tensorproductofsupercrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfSuperCrystalsElement.epsilon"]], "f() (sage.combinat.crystals.tensor_product_element.infinitycrystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityCrystalOfTableauxElement.f"]], "f() (sage.combinat.crystals.tensor_product_element.infinitycrystaloftableauxelementtyped method)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityCrystalOfTableauxElementTypeD.f"]], "f() (sage.combinat.crystals.tensor_product_element.infinityqueercrystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityQueerCrystalOfTableauxElement.f"]], "f() (sage.combinat.crystals.tensor_product_element.tensorproductofcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfCrystalsElement.f"]], "f() (sage.combinat.crystals.tensor_product_element.tensorproductofqueersupercrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfQueerSuperCrystalsElement.f"]], "f() (sage.combinat.crystals.tensor_product_element.tensorproductofregularcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfRegularCrystalsElement.f"]], "f() (sage.combinat.crystals.tensor_product_element.tensorproductofsupercrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfSuperCrystalsElement.f"]], "phi() (sage.combinat.crystals.tensor_product_element.tensorproductofcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfCrystalsElement.phi"]], "phi() (sage.combinat.crystals.tensor_product_element.tensorproductofqueersupercrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfQueerSuperCrystalsElement.phi"]], "phi() (sage.combinat.crystals.tensor_product_element.tensorproductofregularcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfRegularCrystalsElement.phi"]], "phi() (sage.combinat.crystals.tensor_product_element.tensorproductofsupercrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfSuperCrystalsElement.phi"]], "position_of_first_unmatched_plus() (sage.combinat.crystals.tensor_product_element.tensorproductofregularcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfRegularCrystalsElement.position_of_first_unmatched_plus"]], "position_of_last_unmatched_minus() (sage.combinat.crystals.tensor_product_element.tensorproductofregularcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfRegularCrystalsElement.position_of_last_unmatched_minus"]], "positions_of_unmatched_minus() (sage.combinat.crystals.tensor_product_element.tensorproductofregularcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfRegularCrystalsElement.positions_of_unmatched_minus"]], "positions_of_unmatched_plus() (sage.combinat.crystals.tensor_product_element.tensorproductofregularcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfRegularCrystalsElement.positions_of_unmatched_plus"]], "pp() (sage.combinat.crystals.tensor_product_element.crystalofbkktableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.CrystalOfBKKTableauxElement.pp"]], "pp() (sage.combinat.crystals.tensor_product_element.crystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.CrystalOfTableauxElement.pp"]], "pp() (sage.combinat.crystals.tensor_product_element.tensorproductofcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfCrystalsElement.pp"]], "promotion() (sage.combinat.crystals.tensor_product_element.crystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.CrystalOfTableauxElement.promotion"]], "promotion_inverse() (sage.combinat.crystals.tensor_product_element.crystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.CrystalOfTableauxElement.promotion_inverse"]], "rows() (sage.combinat.crystals.tensor_product_element.infinityqueercrystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityQueerCrystalOfTableauxElement.rows"]], "sage.combinat.crystals.tensor_product_element": [[68, "module-sage.combinat.crystals.tensor_product_element"]], "shape() (sage.combinat.crystals.tensor_product_element.crystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.CrystalOfTableauxElement.shape"]], "to_tableau() (sage.combinat.crystals.tensor_product_element.crystalofbkktableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.CrystalOfBKKTableauxElement.to_tableau"]], "to_tableau() (sage.combinat.crystals.tensor_product_element.crystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.CrystalOfTableauxElement.to_tableau"]], "weight() (sage.combinat.crystals.tensor_product_element.infinityqueercrystaloftableauxelement method)": [[68, "sage.combinat.crystals.tensor_product_element.InfinityQueerCrystalOfTableauxElement.weight"]], "weight() (sage.combinat.crystals.tensor_product_element.tensorproductofcrystalselement method)": [[68, "sage.combinat.crystals.tensor_product_element.TensorProductOfCrystalsElement.weight"]], "cyclicsievingcheck() (in module sage.combinat.cyclic_sieving_phenomenon)": [[69, "sage.combinat.cyclic_sieving_phenomenon.CyclicSievingCheck"]], "cyclicsievingpolynomial() (in module sage.combinat.cyclic_sieving_phenomenon)": [[69, "sage.combinat.cyclic_sieving_phenomenon.CyclicSievingPolynomial"]], "orbit_decomposition() (in module sage.combinat.cyclic_sieving_phenomenon)": [[69, "sage.combinat.cyclic_sieving_phenomenon.orbit_decomposition"]], "sage.combinat.cyclic_sieving_phenomenon": [[69, "module-sage.combinat.cyclic_sieving_phenomenon"]], "debruijnsequences (class in sage.combinat.debruijn_sequence)": [[70, "sage.combinat.debruijn_sequence.DeBruijnSequences"]], "an_element() (sage.combinat.debruijn_sequence.debruijnsequences method)": [[70, "sage.combinat.debruijn_sequence.DeBruijnSequences.an_element"]], "cardinality() (sage.combinat.debruijn_sequence.debruijnsequences method)": [[70, "sage.combinat.debruijn_sequence.DeBruijnSequences.cardinality"]], "debruijn_sequence() (in module sage.combinat.debruijn_sequence)": [[70, "sage.combinat.debruijn_sequence.debruijn_sequence"]], "is_debruijn_sequence() (in module sage.combinat.debruijn_sequence)": [[70, "sage.combinat.debruijn_sequence.is_debruijn_sequence"]], "sage.combinat.debruijn_sequence": [[70, "module-sage.combinat.debruijn_sequence"]], "degreesequences (class in sage.combinat.degree_sequences)": [[71, "sage.combinat.degree_sequences.DegreeSequences"]], "sage.combinat.degree_sequences": [[71, "module-sage.combinat.degree_sequences"]], "derangement (class in sage.combinat.derangements)": [[72, "sage.combinat.derangements.Derangement"]], "derangements (class in sage.combinat.derangements)": [[72, "sage.combinat.derangements.Derangements"]], "element (sage.combinat.derangements.derangements attribute)": [[72, "sage.combinat.derangements.Derangements.Element"]], "cardinality() (sage.combinat.derangements.derangements method)": [[72, "sage.combinat.derangements.Derangements.cardinality"]], "random_element() (sage.combinat.derangements.derangements method)": [[72, "sage.combinat.derangements.Derangements.random_element"]], "sage.combinat.derangements": [[72, "module-sage.combinat.derangements"]], "to_permutation() (sage.combinat.derangements.derangement method)": [[72, "sage.combinat.derangements.Derangement.to_permutation"]], "descentalgebra (class in sage.combinat.descent_algebra)": [[73, "sage.combinat.descent_algebra.DescentAlgebra"]], "descentalgebra.b (class in sage.combinat.descent_algebra)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.B"]], "descentalgebra.d (class in sage.combinat.descent_algebra)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.D"]], "descentalgebra.i (class in sage.combinat.descent_algebra)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.I"]], "descentalgebrabases (class in sage.combinat.descent_algebra)": [[73, "sage.combinat.descent_algebra.DescentAlgebraBases"]], "descentalgebrabases.elementmethods (class in sage.combinat.descent_algebra)": [[73, "sage.combinat.descent_algebra.DescentAlgebraBases.ElementMethods"]], "descentalgebrabases.parentmethods (class in sage.combinat.descent_algebra)": [[73, "sage.combinat.descent_algebra.DescentAlgebraBases.ParentMethods"]], "a_realization() (sage.combinat.descent_algebra.descentalgebra method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.a_realization"]], "idempotent (sage.combinat.descent_algebra.descentalgebra attribute)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.idempotent"]], "idempotent() (sage.combinat.descent_algebra.descentalgebra.i method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.I.idempotent"]], "is_commutative() (sage.combinat.descent_algebra.descentalgebrabases.parentmethods method)": [[73, "sage.combinat.descent_algebra.DescentAlgebraBases.ParentMethods.is_commutative"]], "is_field() (sage.combinat.descent_algebra.descentalgebrabases.parentmethods method)": [[73, "sage.combinat.descent_algebra.DescentAlgebraBases.ParentMethods.is_field"]], "one() (sage.combinat.descent_algebra.descentalgebra.i method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.I.one"]], "one_basis() (sage.combinat.descent_algebra.descentalgebra.b method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.B.one_basis"]], "one_basis() (sage.combinat.descent_algebra.descentalgebra.d method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.D.one_basis"]], "one_basis() (sage.combinat.descent_algebra.descentalgebra.i method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.I.one_basis"]], "product_on_basis() (sage.combinat.descent_algebra.descentalgebra.b method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.B.product_on_basis"]], "product_on_basis() (sage.combinat.descent_algebra.descentalgebra.d method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.D.product_on_basis"]], "product_on_basis() (sage.combinat.descent_algebra.descentalgebra.i method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.I.product_on_basis"]], "sage.combinat.descent_algebra": [[73, "module-sage.combinat.descent_algebra"]], "standard (sage.combinat.descent_algebra.descentalgebra attribute)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.standard"]], "subset (sage.combinat.descent_algebra.descentalgebra attribute)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.subset"]], "super_categories() (sage.combinat.descent_algebra.descentalgebrabases method)": [[73, "sage.combinat.descent_algebra.DescentAlgebraBases.super_categories"]], "to_b_basis() (sage.combinat.descent_algebra.descentalgebra.d method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.D.to_B_basis"]], "to_b_basis() (sage.combinat.descent_algebra.descentalgebra.i method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.I.to_B_basis"]], "to_d_basis() (sage.combinat.descent_algebra.descentalgebra.b method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.B.to_D_basis"]], "to_i_basis() (sage.combinat.descent_algebra.descentalgebra.b method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.B.to_I_basis"]], "to_nsym() (sage.combinat.descent_algebra.descentalgebra.b method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.B.to_nsym"]], "to_symmetric_group_algebra() (sage.combinat.descent_algebra.descentalgebrabases.elementmethods method)": [[73, "sage.combinat.descent_algebra.DescentAlgebraBases.ElementMethods.to_symmetric_group_algebra"]], "to_symmetric_group_algebra() (sage.combinat.descent_algebra.descentalgebrabases.parentmethods method)": [[73, "sage.combinat.descent_algebra.DescentAlgebraBases.ParentMethods.to_symmetric_group_algebra"]], "to_symmetric_group_algebra_on_basis() (sage.combinat.descent_algebra.descentalgebra.d method)": [[73, "sage.combinat.descent_algebra.DescentAlgebra.D.to_symmetric_group_algebra_on_basis"]], "to_symmetric_group_algebra_on_basis() (sage.combinat.descent_algebra.descentalgebrabases.parentmethods method)": [[73, "sage.combinat.descent_algebra.DescentAlgebraBases.ParentMethods.to_symmetric_group_algebra_on_basis"]], "sage.combinat.designs.all": [[74, "module-sage.combinat.designs.all"]], "bibd (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.BIBD"]], "bibd_5q_5_for_q_prime_power() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.BIBD_5q_5_for_q_prime_power"]], "bibd_from_pbd() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.BIBD_from_PBD"]], "bibd_from_td() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.BIBD_from_TD"]], "bibd_from_arc_in_desarguesian_projective_plane() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.BIBD_from_arc_in_desarguesian_projective_plane"]], "bibd_from_difference_family() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.BIBD_from_difference_family"]], "balancedincompleteblockdesign (class in sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.BalancedIncompleteBlockDesign"]], "bruckryserchowla_check() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.BruckRyserChowla_check"]], "pbd_4_5_8_9_12() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.PBD_4_5_8_9_12"]], "pbd_from_td() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.PBD_from_TD"]], "pairwisebalanceddesign (class in sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.PairwiseBalancedDesign"]], "arc() (sage.combinat.designs.bibd.balancedincompleteblockdesign method)": [[75, "sage.combinat.designs.bibd.BalancedIncompleteBlockDesign.arc"]], "balanced_incomplete_block_design() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.balanced_incomplete_block_design"]], "biplane() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.biplane"]], "sage.combinat.designs.bibd": [[75, "module-sage.combinat.designs.bibd"]], "steiner_triple_system() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.steiner_triple_system"]], "v_4_1_bibd() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.v_4_1_BIBD"]], "v_5_1_bibd() (in module sage.combinat.designs.bibd)": [[75, "sage.combinat.designs.bibd.v_5_1_BIBD"]], "affinegeometrydesign() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.AffineGeometryDesign"]], "cremonarichmondconfiguration() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.CremonaRichmondConfiguration"]], "desarguesianprojectiveplanedesign() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.DesarguesianProjectivePlaneDesign"]], "hadamard3design() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.Hadamard3Design"]], "hadamarddesign() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.HadamardDesign"]], "hughesplane() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.HughesPlane"]], "projectivegeometrydesign() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.ProjectiveGeometryDesign"]], "wittdesign() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.WittDesign"]], "are_hyperplanes_in_projective_geometry_parameters() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.are_hyperplanes_in_projective_geometry_parameters"]], "normalize_hughes_plane_point() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.normalize_hughes_plane_point"]], "projective_plane() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.projective_plane"]], "projective_plane_to_oa() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.projective_plane_to_OA"]], "q3_minus_one_matrix() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.q3_minus_one_matrix"]], "sage.combinat.designs.block_design": [[76, "module-sage.combinat.designs.block_design"]], "tdesign_params() (in module sage.combinat.designs.block_design)": [[76, "sage.combinat.designs.block_design.tdesign_params"]], "coveringdesign (class in sage.combinat.designs.covering_design)": [[77, "sage.combinat.designs.covering_design.CoveringDesign"]], "best_known_covering_design_www() (in module sage.combinat.designs.covering_design)": [[77, "sage.combinat.designs.covering_design.best_known_covering_design_www"]], "creator() (sage.combinat.designs.covering_design.coveringdesign method)": [[77, "sage.combinat.designs.covering_design.CoveringDesign.creator"]], "incidence_structure() (sage.combinat.designs.covering_design.coveringdesign method)": [[77, "sage.combinat.designs.covering_design.CoveringDesign.incidence_structure"]], "is_covering() (sage.combinat.designs.covering_design.coveringdesign method)": [[77, "sage.combinat.designs.covering_design.CoveringDesign.is_covering"]], "k() (sage.combinat.designs.covering_design.coveringdesign method)": [[77, "sage.combinat.designs.covering_design.CoveringDesign.k"]], "low_bd() (sage.combinat.designs.covering_design.coveringdesign method)": [[77, "sage.combinat.designs.covering_design.CoveringDesign.low_bd"]], "method() (sage.combinat.designs.covering_design.coveringdesign method)": [[77, "sage.combinat.designs.covering_design.CoveringDesign.method"]], "sage.combinat.designs.covering_design": [[77, "module-sage.combinat.designs.covering_design"]], "schonheim() (in module sage.combinat.designs.covering_design)": [[77, "sage.combinat.designs.covering_design.schonheim"]], "size() (sage.combinat.designs.covering_design.coveringdesign method)": [[77, "sage.combinat.designs.covering_design.CoveringDesign.size"]], "t() (sage.combinat.designs.covering_design.coveringdesign method)": [[77, "sage.combinat.designs.covering_design.CoveringDesign.t"]], "timestamp() (sage.combinat.designs.covering_design.coveringdesign method)": [[77, "sage.combinat.designs.covering_design.CoveringDesign.timestamp"]], "trivial_covering_design() (in module sage.combinat.designs.covering_design)": [[77, "sage.combinat.designs.covering_design.trivial_covering_design"]], "v() (sage.combinat.designs.covering_design.coveringdesign method)": [[77, "sage.combinat.designs.covering_design.CoveringDesign.v"]], "bibd_106_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_106_6_1"]], "bibd_111_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_111_6_1"]], "bibd_126_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_126_6_1"]], "bibd_136_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_136_6_1"]], "bibd_141_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_141_6_1"]], "bibd_171_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_171_6_1"]], "bibd_196_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_196_6_1"]], "bibd_201_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_201_6_1"]], "bibd_45_9_8() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_45_9_8"]], "bibd_56_11_2() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_56_11_2"]], "bibd_66_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_66_6_1"]], "bibd_76_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_76_6_1"]], "bibd_79_13_2() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_79_13_2"]], "bibd_96_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.BIBD_96_6_1"]], "dm_12_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_12_6_1"]], "dm_21_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_21_6_1"]], "dm_24_8_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_24_8_1"]], "dm_273_17_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_273_17_1"]], "dm_28_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_28_6_1"]], "dm_33_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_33_6_1"]], "dm_35_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_35_6_1"]], "dm_36_9_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_36_9_1"]], "dm_39_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_39_6_1"]], "dm_44_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_44_6_1"]], "dm_45_7_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_45_7_1"]], "dm_48_9_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_48_9_1"]], "dm_51_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_51_6_1"]], "dm_52_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_52_6_1"]], "dm_55_7_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_55_7_1"]], "dm_56_8_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_56_8_1"]], "dm_57_8_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_57_8_1"]], "dm_60_6_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_60_6_1"]], "dm_75_8_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_75_8_1"]], "dm_993_32_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.DM_993_32_1"]], "higmansimsdesign() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.HigmanSimsDesign"]], "mols_10_2() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.MOLS_10_2"]], "mols_12_5() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.MOLS_12_5"]], "mols_14_4() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.MOLS_14_4"]], "mols_15_4() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.MOLS_15_4"]], "mols_18_3() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.MOLS_18_3"]], "oa_10_1620() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_10_1620"]], "oa_10_205() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_10_205"]], "oa_10_469() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_10_469"]], "oa_10_520() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_10_520"]], "oa_10_796() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_10_796"]], "oa_11_160() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_11_160"]], "oa_11_185() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_11_185"]], "oa_11_254() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_11_254"]], "oa_11_640() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_11_640"]], "oa_11_80() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_11_80"]], "oa_12_522() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_12_522"]], "oa_14_524() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_14_524"]], "oa_15_112() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_15_112"]], "oa_15_224() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_15_224"]], "oa_15_896() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_15_896"]], "oa_16_176() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_16_176"]], "oa_16_208() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_16_208"]], "oa_17_560() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_17_560"]], "oa_20_352() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_20_352"]], "oa_20_416() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_20_416"]], "oa_20_544() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_20_544"]], "oa_25_1262() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_25_1262"]], "oa_520_plus_x() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_520_plus_x"]], "oa_7_18() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_7_18"]], "oa_7_66() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_7_66"]], "oa_7_68() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_7_68"]], "oa_7_74() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_7_74"]], "oa_8_69() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_8_69"]], "oa_8_76() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_8_76"]], "oa_9_1078() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_9_1078"]], "oa_9_120() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_9_120"]], "oa_9_135() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_9_135"]], "oa_9_1612() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_9_1612"]], "oa_9_40() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.OA_9_40"]], "qdm_19_6_1_1_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.QDM_19_6_1_1_1"]], "qdm_21_5_1_1_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.QDM_21_5_1_1_1"]], "qdm_21_6_1_1_5() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.QDM_21_6_1_1_5"]], "qdm_25_6_1_1_5() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.QDM_25_6_1_1_5"]], "qdm_33_6_1_1_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.QDM_33_6_1_1_1"]], "qdm_35_7_1_1_7() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.QDM_35_7_1_1_7"]], "qdm_37_6_1_1_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.QDM_37_6_1_1_1"]], "qdm_45_7_1_1_9() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.QDM_45_7_1_1_9"]], "qdm_54_7_1_1_8() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.QDM_54_7_1_1_8"]], "qdm_57_9_1_1_8() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.QDM_57_9_1_1_8"]], "rbibd_120_8_1() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.RBIBD_120_8_1"]], "cyclic_shift() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.cyclic_shift"]], "f() (in module sage.combinat.designs.database)": [[78, "sage.combinat.designs.database.f"]], "sage.combinat.designs.database": [[78, "module-sage.combinat.designs.database"]], "sage.combinat.designs.design_catalog": [[79, "module-sage.combinat.designs.design_catalog"]], "is_difference_matrix() (in module sage.combinat.designs.designs_pyx)": [[80, "sage.combinat.designs.designs_pyx.is_difference_matrix"]], "is_group_divisible_design() (in module sage.combinat.designs.designs_pyx)": [[80, "sage.combinat.designs.designs_pyx.is_group_divisible_design"]], "is_orthogonal_array() (in module sage.combinat.designs.designs_pyx)": [[80, "sage.combinat.designs.designs_pyx.is_orthogonal_array"]], "is_pairwise_balanced_design() (in module sage.combinat.designs.designs_pyx)": [[80, "sage.combinat.designs.designs_pyx.is_pairwise_balanced_design"]], "is_projective_plane() (in module sage.combinat.designs.designs_pyx)": [[80, "sage.combinat.designs.designs_pyx.is_projective_plane"]], "is_quasi_difference_matrix() (in module sage.combinat.designs.designs_pyx)": [[80, "sage.combinat.designs.designs_pyx.is_quasi_difference_matrix"]], "sage.combinat.designs.designs_pyx": [[80, "module-sage.combinat.designs.designs_pyx"]], "are_hadamard_difference_set_parameters() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.are_hadamard_difference_set_parameters"]], "are_mcfarland_1973_parameters() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.are_mcfarland_1973_parameters"]], "block_stabilizer() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.block_stabilizer"]], "df_q_6_1() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.df_q_6_1"]], "difference_family() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.difference_family"]], "group_law() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.group_law"]], "hadamard_difference_set_product() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.hadamard_difference_set_product"]], "hadamard_difference_set_product_parameters() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.hadamard_difference_set_product_parameters"]], "is_difference_family() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.is_difference_family"]], "is_relative_difference_set() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.is_relative_difference_set"]], "is_supplementary_difference_set() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.is_supplementary_difference_set"]], "mcfarland_1973_construction() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.mcfarland_1973_construction"]], "one_cyclic_tiling() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.one_cyclic_tiling"]], "one_radical_difference_family() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.one_radical_difference_family"]], "radical_difference_family() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.radical_difference_family"]], "radical_difference_set() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.radical_difference_set"]], "relative_difference_set_from_homomorphism() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.relative_difference_set_from_homomorphism"]], "relative_difference_set_from_m_sequence() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.relative_difference_set_from_m_sequence"]], "sage.combinat.designs.difference_family": [[81, "module-sage.combinat.designs.difference_family"]], "singer_difference_set() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.singer_difference_set"]], "skew_supplementary_difference_set() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.skew_supplementary_difference_set"]], "supplementary_difference_set() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.supplementary_difference_set"]], "turyn_1965_3x3xk() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.turyn_1965_3x3xK"]], "twin_prime_powers_difference_set() (in module sage.combinat.designs.difference_family)": [[81, "sage.combinat.designs.difference_family.twin_prime_powers_difference_set"]], "difference_matrix() (in module sage.combinat.designs.difference_matrices)": [[82, "sage.combinat.designs.difference_matrices.difference_matrix"]], "difference_matrix_product() (in module sage.combinat.designs.difference_matrices)": [[82, "sage.combinat.designs.difference_matrices.difference_matrix_product"]], "find_product_decomposition() (in module sage.combinat.designs.difference_matrices)": [[82, "sage.combinat.designs.difference_matrices.find_product_decomposition"]], "sage.combinat.designs.difference_matrices": [[82, "module-sage.combinat.designs.difference_matrices"]], "evenlydistributedsetsbacktracker (class in sage.combinat.designs.evenly_distributed_sets)": [[83, "sage.combinat.designs.evenly_distributed_sets.EvenlyDistributedSetsBacktracker"]], "an_element() (sage.combinat.designs.evenly_distributed_sets.evenlydistributedsetsbacktracker method)": [[83, "sage.combinat.designs.evenly_distributed_sets.EvenlyDistributedSetsBacktracker.an_element"]], "cardinality() (sage.combinat.designs.evenly_distributed_sets.evenlydistributedsetsbacktracker method)": [[83, "sage.combinat.designs.evenly_distributed_sets.EvenlyDistributedSetsBacktracker.cardinality"]], "sage.combinat.designs.evenly_distributed_sets": [[83, "module-sage.combinat.designs.evenly_distributed_sets"]], "to_difference_family() (sage.combinat.designs.evenly_distributed_sets.evenlydistributedsetsbacktracker method)": [[83, "sage.combinat.designs.evenly_distributed_sets.EvenlyDistributedSetsBacktracker.to_difference_family"]], "xtree (class in sage.combinat.designs.ext_rep)": [[84, "sage.combinat.designs.ext_rep.XTree"]], "xtreeprocessor (class in sage.combinat.designs.ext_rep)": [[84, "sage.combinat.designs.ext_rep.XTreeProcessor"]], "check_dtrs_protocols() (in module sage.combinat.designs.ext_rep)": [[84, "sage.combinat.designs.ext_rep.check_dtrs_protocols"]], "designs_from_xml() (in module sage.combinat.designs.ext_rep)": [[84, "sage.combinat.designs.ext_rep.designs_from_XML"]], "designs_from_xml_url() (in module sage.combinat.designs.ext_rep)": [[84, "sage.combinat.designs.ext_rep.designs_from_XML_url"]], "dump_to_tmpfile() (in module sage.combinat.designs.ext_rep)": [[84, "sage.combinat.designs.ext_rep.dump_to_tmpfile"]], "open_extrep_file() (in module sage.combinat.designs.ext_rep)": [[84, "sage.combinat.designs.ext_rep.open_extrep_file"]], "open_extrep_url() (in module sage.combinat.designs.ext_rep)": [[84, "sage.combinat.designs.ext_rep.open_extrep_url"]], "parse() (sage.combinat.designs.ext_rep.xtreeprocessor method)": [[84, "sage.combinat.designs.ext_rep.XTreeProcessor.parse"]], "sage.combinat.designs.ext_rep": [[84, "module-sage.combinat.designs.ext_rep"]], "dual_gq_ovoid() (in module sage.combinat.designs.gen_quadrangles_with_spread)": [[85, "sage.combinat.designs.gen_quadrangles_with_spread.dual_GQ_ovoid"]], "generalised_quadrangle_hermitian_with_ovoid() (in module sage.combinat.designs.gen_quadrangles_with_spread)": [[85, "sage.combinat.designs.gen_quadrangles_with_spread.generalised_quadrangle_hermitian_with_ovoid"]], "generalised_quadrangle_with_spread() (in module sage.combinat.designs.gen_quadrangles_with_spread)": [[85, "sage.combinat.designs.gen_quadrangles_with_spread.generalised_quadrangle_with_spread"]], "is_gq_with_spread() (in module sage.combinat.designs.gen_quadrangles_with_spread)": [[85, "sage.combinat.designs.gen_quadrangles_with_spread.is_GQ_with_spread"]], "sage.combinat.designs.gen_quadrangles_with_spread": [[85, "module-sage.combinat.designs.gen_quadrangles_with_spread"]], "gdd_4_2() (in module sage.combinat.designs.group_divisible_designs)": [[86, "sage.combinat.designs.group_divisible_designs.GDD_4_2"]], "groupdivisibledesign (class in sage.combinat.designs.group_divisible_designs)": [[86, "sage.combinat.designs.group_divisible_designs.GroupDivisibleDesign"]], "group_divisible_design() (in module sage.combinat.designs.group_divisible_designs)": [[86, "sage.combinat.designs.group_divisible_designs.group_divisible_design"]], "groups() (sage.combinat.designs.group_divisible_designs.groupdivisibledesign method)": [[86, "sage.combinat.designs.group_divisible_designs.GroupDivisibleDesign.groups"]], "sage.combinat.designs.group_divisible_designs": [[86, "module-sage.combinat.designs.group_divisible_designs"]], "incidencestructure (class in sage.combinat.designs.incidence_structures)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure"]], "automorphism_group() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.automorphism_group"]], "block_sizes() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.block_sizes"]], "blocks() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.blocks"]], "canonical_label() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.canonical_label"]], "coloring() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.coloring"]], "complement() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.complement"]], "copy() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.copy"]], "degree() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.degree"]], "degrees() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.degrees"]], "dual() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.dual"]], "edge_coloring() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.edge_coloring"]], "ground_set() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.ground_set"]], "incidence_graph() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.incidence_graph"]], "incidence_matrix() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.incidence_matrix"]], "induced_substructure() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.induced_substructure"]], "intersection_graph() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.intersection_graph"]], "is_berge_cyclic() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_berge_cyclic"]], "is_connected() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_connected"]], "is_generalized_quadrangle() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_generalized_quadrangle"]], "is_isomorphic() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_isomorphic"]], "is_regular() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_regular"]], "is_resolvable() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_resolvable"]], "is_simple() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_simple"]], "is_spread() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_spread"]], "is_t_design() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_t_design"]], "is_uniform() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.is_uniform"]], "isomorphic_substructures_iterator() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.isomorphic_substructures_iterator"]], "num_blocks() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.num_blocks"]], "num_points() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.num_points"]], "packing() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.packing"]], "rank() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.rank"]], "relabel() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.relabel"]], "sage.combinat.designs.incidence_structures": [[87, "module-sage.combinat.designs.incidence_structures"]], "trace() (sage.combinat.designs.incidence_structures.incidencestructure method)": [[87, "sage.combinat.designs.incidence_structures.IncidenceStructure.trace"]], "mols_table() (in module sage.combinat.designs.latin_squares)": [[88, "sage.combinat.designs.latin_squares.MOLS_table"]], "are_mutually_orthogonal_latin_squares() (in module sage.combinat.designs.latin_squares)": [[88, "sage.combinat.designs.latin_squares.are_mutually_orthogonal_latin_squares"]], "latin_square_product() (in module sage.combinat.designs.latin_squares)": [[88, "sage.combinat.designs.latin_squares.latin_square_product"]], "mutually_orthogonal_latin_squares() (in module sage.combinat.designs.latin_squares)": [[88, "sage.combinat.designs.latin_squares.mutually_orthogonal_latin_squares"]], "sage.combinat.designs.latin_squares": [[88, "module-sage.combinat.designs.latin_squares"]], "oamainfunctions (class in sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.OAMainFunctions"]], "oa_find_disjoint_blocks() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.OA_find_disjoint_blocks"]], "oa_from_pbd() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.OA_from_PBD"]], "oa_from_vmt() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.OA_from_Vmt"]], "oa_from_quasi_difference_matrix() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.OA_from_quasi_difference_matrix"]], "oa_from_wider_oa() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.OA_from_wider_OA"]], "oa_n_times_2_pow_c_from_matrix() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.OA_n_times_2_pow_c_from_matrix"]], "oa_relabel() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.OA_relabel"]], "qdm_from_vmt() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.QDM_from_Vmt"]], "td_product() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.TD_product"]], "transversaldesign (class in sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.TransversalDesign"]], "build() (sage.combinat.designs.orthogonal_arrays.oamainfunctions static method)": [[89, "sage.combinat.designs.orthogonal_arrays.OAMainFunctions.build"]], "exists() (sage.combinat.designs.orthogonal_arrays.oamainfunctions static method)": [[89, "sage.combinat.designs.orthogonal_arrays.OAMainFunctions.exists"]], "explain_construction() (sage.combinat.designs.orthogonal_arrays.oamainfunctions static method)": [[89, "sage.combinat.designs.orthogonal_arrays.OAMainFunctions.explain_construction"]], "incomplete_orthogonal_array() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.incomplete_orthogonal_array"]], "is_available() (sage.combinat.designs.orthogonal_arrays.oamainfunctions static method)": [[89, "sage.combinat.designs.orthogonal_arrays.OAMainFunctions.is_available"]], "is_transversal_design() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.is_transversal_design"]], "largest_available_k() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.largest_available_k"]], "largest_available_k() (sage.combinat.designs.orthogonal_arrays.oamainfunctions static method)": [[89, "sage.combinat.designs.orthogonal_arrays.OAMainFunctions.largest_available_k"]], "orthogonal_array() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.orthogonal_array"]], "sage.combinat.designs.orthogonal_arrays": [[89, "module-sage.combinat.designs.orthogonal_arrays"]], "transversal_design() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.transversal_design"]], "wilson_construction() (in module sage.combinat.designs.orthogonal_arrays)": [[89, "sage.combinat.designs.orthogonal_arrays.wilson_construction"]], "oa_and_oval() (in module sage.combinat.designs.orthogonal_arrays_build_recursive)": [[90, "sage.combinat.designs.orthogonal_arrays_build_recursive.OA_and_oval"]], "brouwer_separable_design() (in module sage.combinat.designs.orthogonal_arrays_build_recursive)": [[90, "sage.combinat.designs.orthogonal_arrays_build_recursive.brouwer_separable_design"]], "construction_3_3() (in module sage.combinat.designs.orthogonal_arrays_build_recursive)": [[90, "sage.combinat.designs.orthogonal_arrays_build_recursive.construction_3_3"]], "construction_3_4() (in module sage.combinat.designs.orthogonal_arrays_build_recursive)": [[90, "sage.combinat.designs.orthogonal_arrays_build_recursive.construction_3_4"]], "construction_3_5() (in module sage.combinat.designs.orthogonal_arrays_build_recursive)": [[90, "sage.combinat.designs.orthogonal_arrays_build_recursive.construction_3_5"]], "construction_3_6() (in module sage.combinat.designs.orthogonal_arrays_build_recursive)": [[90, "sage.combinat.designs.orthogonal_arrays_build_recursive.construction_3_6"]], "construction_q_x() (in module sage.combinat.designs.orthogonal_arrays_build_recursive)": [[90, "sage.combinat.designs.orthogonal_arrays_build_recursive.construction_q_x"]], "sage.combinat.designs.orthogonal_arrays_build_recursive": [[90, "module-sage.combinat.designs.orthogonal_arrays_build_recursive"]], "three_factor_product() (in module sage.combinat.designs.orthogonal_arrays_build_recursive)": [[90, "sage.combinat.designs.orthogonal_arrays_build_recursive.three_factor_product"]], "thwart_lemma_3_5() (in module sage.combinat.designs.orthogonal_arrays_build_recursive)": [[90, "sage.combinat.designs.orthogonal_arrays_build_recursive.thwart_lemma_3_5"]], "thwart_lemma_4_1() (in module sage.combinat.designs.orthogonal_arrays_build_recursive)": [[90, "sage.combinat.designs.orthogonal_arrays_build_recursive.thwart_lemma_4_1"]], "find_brouwer_separable_design() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_brouwer_separable_design"]], "find_brouwer_van_rees_with_one_truncated_column() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_brouwer_van_rees_with_one_truncated_column"]], "find_construction_3_3() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_construction_3_3"]], "find_construction_3_4() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_construction_3_4"]], "find_construction_3_5() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_construction_3_5"]], "find_construction_3_6() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_construction_3_6"]], "find_product_decomposition() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_product_decomposition"]], "find_q_x() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_q_x"]], "find_recursive_construction() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_recursive_construction"]], "find_three_factor_product() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_three_factor_product"]], "find_thwart_lemma_3_5() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_thwart_lemma_3_5"]], "find_thwart_lemma_4_1() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_thwart_lemma_4_1"]], "find_wilson_decomposition_with_one_truncated_group() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_wilson_decomposition_with_one_truncated_group"]], "find_wilson_decomposition_with_two_truncated_groups() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.find_wilson_decomposition_with_two_truncated_groups"]], "int_as_sum() (in module sage.combinat.designs.orthogonal_arrays_find_recursive)": [[91, "sage.combinat.designs.orthogonal_arrays_find_recursive.int_as_sum"]], "sage.combinat.designs.orthogonal_arrays_find_recursive": [[91, "module-sage.combinat.designs.orthogonal_arrays_find_recursive"]], "pbd_4_7() (in module sage.combinat.designs.resolvable_bibd)": [[92, "sage.combinat.designs.resolvable_bibd.PBD_4_7"]], "pbd_4_7_from_y() (in module sage.combinat.designs.resolvable_bibd)": [[92, "sage.combinat.designs.resolvable_bibd.PBD_4_7_from_Y"]], "kirkman_triple_system() (in module sage.combinat.designs.resolvable_bibd)": [[92, "sage.combinat.designs.resolvable_bibd.kirkman_triple_system"]], "resolvable_balanced_incomplete_block_design() (in module sage.combinat.designs.resolvable_bibd)": [[92, "sage.combinat.designs.resolvable_bibd.resolvable_balanced_incomplete_block_design"]], "sage.combinat.designs.resolvable_bibd": [[92, "module-sage.combinat.designs.resolvable_bibd"]], "v_4_1_rbibd() (in module sage.combinat.designs.resolvable_bibd)": [[92, "sage.combinat.designs.resolvable_bibd.v_4_1_rbibd"]], "p() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.P"]], "barp() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.barP"]], "barp_system() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.barP_system"]], "four_n_minus_six() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.four_n_minus_six"]], "relabel_system() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.relabel_system"]], "sage.combinat.designs.steiner_quadruple_systems": [[93, "module-sage.combinat.designs.steiner_quadruple_systems"]], "steiner_quadruple_system() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.steiner_quadruple_system"]], "three_n_minus_eight() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.three_n_minus_eight"]], "three_n_minus_four() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.three_n_minus_four"]], "three_n_minus_two() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.three_n_minus_two"]], "twelve_n_minus_ten() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.twelve_n_minus_ten"]], "two_n() (in module sage.combinat.designs.steiner_quadruple_systems)": [[93, "sage.combinat.designs.steiner_quadruple_systems.two_n"]], "subhypergraphsearch (class in sage.combinat.designs.subhypergraph_search)": [[94, "sage.combinat.designs.subhypergraph_search.SubHypergraphSearch"]], "relabel_heuristic() (sage.combinat.designs.subhypergraph_search.subhypergraphsearch method)": [[94, "sage.combinat.designs.subhypergraph_search.SubHypergraphSearch.relabel_heuristic"]], "sage.combinat.designs.subhypergraph_search": [[94, "module-sage.combinat.designs.subhypergraph_search"]], "twograph (class in sage.combinat.designs.twographs)": [[95, "sage.combinat.designs.twographs.TwoGraph"]], "complement() (sage.combinat.designs.twographs.twograph method)": [[95, "sage.combinat.designs.twographs.TwoGraph.complement"]], "descendant() (sage.combinat.designs.twographs.twograph method)": [[95, "sage.combinat.designs.twographs.TwoGraph.descendant"]], "is_regular_twograph() (sage.combinat.designs.twographs.twograph method)": [[95, "sage.combinat.designs.twographs.TwoGraph.is_regular_twograph"]], "is_twograph() (in module sage.combinat.designs.twographs)": [[95, "sage.combinat.designs.twographs.is_twograph"]], "sage.combinat.designs.twographs": [[95, "module-sage.combinat.designs.twographs"]], "taylor_twograph() (in module sage.combinat.designs.twographs)": [[95, "sage.combinat.designs.twographs.taylor_twograph"]], "twograph_descendant() (in module sage.combinat.designs.twographs)": [[95, "sage.combinat.designs.twographs.twograph_descendant"]], "diagram (class in sage.combinat.diagram)": [[96, "sage.combinat.diagram.Diagram"]], "diagrams (class in sage.combinat.diagram)": [[96, "sage.combinat.diagram.Diagrams"]], "element (sage.combinat.diagram.diagrams attribute)": [[96, "sage.combinat.diagram.Diagrams.Element"]], "element (sage.combinat.diagram.northwestdiagrams attribute)": [[96, "sage.combinat.diagram.NorthwestDiagrams.Element"]], "northwestdiagram (class in sage.combinat.diagram)": [[96, "sage.combinat.diagram.NorthwestDiagram"]], "northwestdiagrams (class in sage.combinat.diagram)": [[96, "sage.combinat.diagram.NorthwestDiagrams"]], "rothediagram() (in module sage.combinat.diagram)": [[96, "sage.combinat.diagram.RotheDiagram"]], "cells() (sage.combinat.diagram.diagram method)": [[96, "sage.combinat.diagram.Diagram.cells"]], "check() (sage.combinat.diagram.diagram method)": [[96, "sage.combinat.diagram.Diagram.check"]], "check() (sage.combinat.diagram.northwestdiagram method)": [[96, "sage.combinat.diagram.NorthwestDiagram.check"]], "from_composition() (sage.combinat.diagram.diagrams method)": [[96, "sage.combinat.diagram.Diagrams.from_composition"]], "from_parallelogram_polyomino() (sage.combinat.diagram.northwestdiagrams method)": [[96, "sage.combinat.diagram.NorthwestDiagrams.from_parallelogram_polyomino"]], "from_partition() (sage.combinat.diagram.northwestdiagrams method)": [[96, "sage.combinat.diagram.NorthwestDiagrams.from_partition"]], "from_permutation() (sage.combinat.diagram.northwestdiagrams method)": [[96, "sage.combinat.diagram.NorthwestDiagrams.from_permutation"]], "from_polyomino() (sage.combinat.diagram.diagrams method)": [[96, "sage.combinat.diagram.Diagrams.from_polyomino"]], "from_skew_partition() (sage.combinat.diagram.northwestdiagrams method)": [[96, "sage.combinat.diagram.NorthwestDiagrams.from_skew_partition"]], "from_zero_one_matrix() (sage.combinat.diagram.diagrams method)": [[96, "sage.combinat.diagram.Diagrams.from_zero_one_matrix"]], "n_cells() (sage.combinat.diagram.diagram method)": [[96, "sage.combinat.diagram.Diagram.n_cells"]], "ncols() (sage.combinat.diagram.diagram method)": [[96, "sage.combinat.diagram.Diagram.ncols"]], "nrows() (sage.combinat.diagram.diagram method)": [[96, "sage.combinat.diagram.Diagram.nrows"]], "number_of_cells() (sage.combinat.diagram.diagram method)": [[96, "sage.combinat.diagram.Diagram.number_of_cells"]], "number_of_cols() (sage.combinat.diagram.diagram method)": [[96, "sage.combinat.diagram.Diagram.number_of_cols"]], "number_of_rows() (sage.combinat.diagram.diagram method)": [[96, "sage.combinat.diagram.Diagram.number_of_rows"]], "peelable_tableaux() (sage.combinat.diagram.northwestdiagram method)": [[96, "sage.combinat.diagram.NorthwestDiagram.peelable_tableaux"]], "pp() (sage.combinat.diagram.diagram method)": [[96, "sage.combinat.diagram.Diagram.pp"]], "rothe_diagram() (sage.combinat.diagram.northwestdiagrams method)": [[96, "sage.combinat.diagram.NorthwestDiagrams.rothe_diagram"]], "sage.combinat.diagram": [[96, "module-sage.combinat.diagram"]], "size() (sage.combinat.diagram.diagram method)": [[96, "sage.combinat.diagram.Diagram.size"]], "abstractpartitiondiagram (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram"]], "abstractpartitiondiagrams (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagrams"]], "braueralgebra (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.BrauerAlgebra"]], "brauerdiagram (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.BrauerDiagram"]], "brauerdiagrams (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.BrauerDiagrams"]], "diagramalgebra (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.DiagramAlgebra"]], "diagramalgebra.element (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.DiagramAlgebra.Element"]], "diagrambasis (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.DiagramBasis"]], "element (sage.combinat.diagram_algebras.abstractpartitiondiagrams attribute)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagrams.Element"]], "element (sage.combinat.diagram_algebras.brauerdiagrams attribute)": [[97, "sage.combinat.diagram_algebras.BrauerDiagrams.Element"]], "element (sage.combinat.diagram_algebras.idealdiagrams attribute)": [[97, "sage.combinat.diagram_algebras.IdealDiagrams.Element"]], "element (sage.combinat.diagram_algebras.partitiondiagrams attribute)": [[97, "sage.combinat.diagram_algebras.PartitionDiagrams.Element"]], "element (sage.combinat.diagram_algebras.planardiagrams attribute)": [[97, "sage.combinat.diagram_algebras.PlanarDiagrams.Element"]], "element (sage.combinat.diagram_algebras.temperleyliebdiagrams attribute)": [[97, "sage.combinat.diagram_algebras.TemperleyLiebDiagrams.Element"]], "idealdiagram (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.IdealDiagram"]], "idealdiagrams (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.IdealDiagrams"]], "l() (sage.combinat.diagram_algebras.partitionalgebra method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.L"]], "orbitbasis (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.OrbitBasis"]], "orbitbasis.element (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.OrbitBasis.Element"]], "partitionalgebra (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra"]], "partitionalgebra.element (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.Element"]], "partitiondiagram (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.PartitionDiagram"]], "partitiondiagrams (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.PartitionDiagrams"]], "planaralgebra (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.PlanarAlgebra"]], "planardiagram (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.PlanarDiagram"]], "planardiagrams (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.PlanarDiagrams"]], "propagatingideal (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.PropagatingIdeal"]], "propagatingideal.element (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.PropagatingIdeal.Element"]], "subpartitionalgebra (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.SubPartitionAlgebra"]], "subpartitionalgebra.element (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.SubPartitionAlgebra.Element"]], "tl_diagram_ascii_art() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.TL_diagram_ascii_art"]], "temperleyliebalgebra (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.TemperleyLiebAlgebra"]], "temperleyliebdiagram (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.TemperleyLiebDiagram"]], "temperleyliebdiagrams (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.TemperleyLiebDiagrams"]], "unitdiagrammixin (class in sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.UnitDiagramMixin"]], "a() (sage.combinat.diagram_algebras.partitionalgebra method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.a"]], "ambient() (sage.combinat.diagram_algebras.subpartitionalgebra method)": [[97, "sage.combinat.diagram_algebras.SubPartitionAlgebra.ambient"]], "base_diagram() (sage.combinat.diagram_algebras.abstractpartitiondiagram method)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram.base_diagram"]], "bijection_on_free_nodes() (sage.combinat.diagram_algebras.brauerdiagram method)": [[97, "sage.combinat.diagram_algebras.BrauerDiagram.bijection_on_free_nodes"]], "brauer_diagrams() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.brauer_diagrams"]], "cardinality() (sage.combinat.diagram_algebras.brauerdiagrams method)": [[97, "sage.combinat.diagram_algebras.BrauerDiagrams.cardinality"]], "cardinality() (sage.combinat.diagram_algebras.partitiondiagrams method)": [[97, "sage.combinat.diagram_algebras.PartitionDiagrams.cardinality"]], "cardinality() (sage.combinat.diagram_algebras.planardiagrams method)": [[97, "sage.combinat.diagram_algebras.PlanarDiagrams.cardinality"]], "cardinality() (sage.combinat.diagram_algebras.temperleyliebdiagrams method)": [[97, "sage.combinat.diagram_algebras.TemperleyLiebDiagrams.cardinality"]], "check() (sage.combinat.diagram_algebras.abstractpartitiondiagram method)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram.check"]], "check() (sage.combinat.diagram_algebras.brauerdiagram method)": [[97, "sage.combinat.diagram_algebras.BrauerDiagram.check"]], "check() (sage.combinat.diagram_algebras.idealdiagram method)": [[97, "sage.combinat.diagram_algebras.IdealDiagram.check"]], "check() (sage.combinat.diagram_algebras.planardiagram method)": [[97, "sage.combinat.diagram_algebras.PlanarDiagram.check"]], "check() (sage.combinat.diagram_algebras.temperleyliebdiagram method)": [[97, "sage.combinat.diagram_algebras.TemperleyLiebDiagram.check"]], "compose() (sage.combinat.diagram_algebras.abstractpartitiondiagram method)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram.compose"]], "count_blocks_of_size() (sage.combinat.diagram_algebras.abstractpartitiondiagram method)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram.count_blocks_of_size"]], "diagram() (sage.combinat.diagram_algebras.abstractpartitiondiagram method)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram.diagram"]], "diagram() (sage.combinat.diagram_algebras.diagramalgebra.element method)": [[97, "sage.combinat.diagram_algebras.DiagramAlgebra.Element.diagram"]], "diagram_basis() (sage.combinat.diagram_algebras.orbitbasis method)": [[97, "sage.combinat.diagram_algebras.OrbitBasis.diagram_basis"]], "diagram_latex() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.diagram_latex"]], "diagrams() (sage.combinat.diagram_algebras.diagramalgebra.element method)": [[97, "sage.combinat.diagram_algebras.DiagramAlgebra.Element.diagrams"]], "dual() (sage.combinat.diagram_algebras.abstractpartitiondiagram method)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram.dual"]], "dual() (sage.combinat.diagram_algebras.partitionalgebra.element method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.Element.dual"]], "e() (sage.combinat.diagram_algebras.partitionalgebra method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.e"]], "from_involution_permutation_triple() (sage.combinat.diagram_algebras.brauerdiagrams method)": [[97, "sage.combinat.diagram_algebras.BrauerDiagrams.from_involution_permutation_triple"]], "generator_a() (sage.combinat.diagram_algebras.partitionalgebra method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.generator_a"]], "generator_e() (sage.combinat.diagram_algebras.partitionalgebra method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.generator_e"]], "generator_s() (sage.combinat.diagram_algebras.partitionalgebra method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.generator_s"]], "ideal_diagrams() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.ideal_diagrams"]], "identity_set_partition() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.identity_set_partition"]], "involution_permutation_triple() (sage.combinat.diagram_algebras.brauerdiagram method)": [[97, "sage.combinat.diagram_algebras.BrauerDiagram.involution_permutation_triple"]], "is_elementary_symmetric() (sage.combinat.diagram_algebras.brauerdiagram method)": [[97, "sage.combinat.diagram_algebras.BrauerDiagram.is_elementary_symmetric"]], "is_planar() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.is_planar"]], "is_planar() (sage.combinat.diagram_algebras.abstractpartitiondiagram method)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram.is_planar"]], "jucys_murphy() (sage.combinat.diagram_algebras.braueralgebra method)": [[97, "sage.combinat.diagram_algebras.BrauerAlgebra.jucys_murphy"]], "jucys_murphy_element() (sage.combinat.diagram_algebras.partitionalgebra method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.jucys_murphy_element"]], "lift() (sage.combinat.diagram_algebras.subpartitionalgebra method)": [[97, "sage.combinat.diagram_algebras.SubPartitionAlgebra.lift"]], "one() (sage.combinat.diagram_algebras.orbitbasis method)": [[97, "sage.combinat.diagram_algebras.OrbitBasis.one"]], "one_basis() (sage.combinat.diagram_algebras.unitdiagrammixin method)": [[97, "sage.combinat.diagram_algebras.UnitDiagramMixin.one_basis"]], "options (sage.combinat.diagram_algebras.braueralgebra attribute)": [[97, "sage.combinat.diagram_algebras.BrauerAlgebra.options"]], "options (sage.combinat.diagram_algebras.brauerdiagram attribute)": [[97, "sage.combinat.diagram_algebras.BrauerDiagram.options"]], "options (sage.combinat.diagram_algebras.brauerdiagrams attribute)": [[97, "sage.combinat.diagram_algebras.BrauerDiagrams.options"]], "orbit_basis() (sage.combinat.diagram_algebras.partitionalgebra method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.orbit_basis"]], "order() (sage.combinat.diagram_algebras.abstractpartitiondiagram method)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram.order"]], "order() (sage.combinat.diagram_algebras.diagramalgebra method)": [[97, "sage.combinat.diagram_algebras.DiagramAlgebra.order"]], "pair_to_graph() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.pair_to_graph"]], "partition_diagrams() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.partition_diagrams"]], "perm() (sage.combinat.diagram_algebras.brauerdiagram method)": [[97, "sage.combinat.diagram_algebras.BrauerDiagram.perm"]], "planar_diagrams() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.planar_diagrams"]], "planar_partitions_rec() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.planar_partitions_rec"]], "product_on_basis() (sage.combinat.diagram_algebras.diagrambasis method)": [[97, "sage.combinat.diagram_algebras.DiagramBasis.product_on_basis"]], "product_on_basis() (sage.combinat.diagram_algebras.orbitbasis method)": [[97, "sage.combinat.diagram_algebras.OrbitBasis.product_on_basis"]], "propagating_number() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.propagating_number"]], "propagating_number() (sage.combinat.diagram_algebras.abstractpartitiondiagram method)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram.propagating_number"]], "retract() (sage.combinat.diagram_algebras.subpartitionalgebra method)": [[97, "sage.combinat.diagram_algebras.SubPartitionAlgebra.retract"]], "s() (sage.combinat.diagram_algebras.partitionalgebra method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.s"]], "sage.combinat.diagram_algebras": [[97, "module-sage.combinat.diagram_algebras"]], "set_partition() (sage.combinat.diagram_algebras.abstractpartitiondiagram method)": [[97, "sage.combinat.diagram_algebras.AbstractPartitionDiagram.set_partition"]], "set_partitions() (sage.combinat.diagram_algebras.diagramalgebra method)": [[97, "sage.combinat.diagram_algebras.DiagramAlgebra.set_partitions"]], "sigma() (sage.combinat.diagram_algebras.partitionalgebra method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.sigma"]], "symmetric_diagrams() (sage.combinat.diagram_algebras.brauerdiagrams method)": [[97, "sage.combinat.diagram_algebras.BrauerDiagrams.symmetric_diagrams"]], "temperley_lieb_diagrams() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.temperley_lieb_diagrams"]], "to_brauer_partition() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.to_Brauer_partition"]], "to_diagram_basis() (sage.combinat.diagram_algebras.orbitbasis.element method)": [[97, "sage.combinat.diagram_algebras.OrbitBasis.Element.to_diagram_basis"]], "to_graph() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.to_graph"]], "to_orbit_basis() (sage.combinat.diagram_algebras.partitionalgebra.element method)": [[97, "sage.combinat.diagram_algebras.PartitionAlgebra.Element.to_orbit_basis"]], "to_orbit_basis() (sage.combinat.diagram_algebras.subpartitionalgebra.element method)": [[97, "sage.combinat.diagram_algebras.SubPartitionAlgebra.Element.to_orbit_basis"]], "to_set_partition() (in module sage.combinat.diagram_algebras)": [[97, "sage.combinat.diagram_algebras.to_set_partition"]], "allexactcovers() (in module sage.combinat.dlx)": [[98, "sage.combinat.dlx.AllExactCovers"]], "dlxmatrix (class in sage.combinat.dlx)": [[98, "sage.combinat.dlx.DLXMatrix"]], "oneexactcover() (in module sage.combinat.dlx)": [[98, "sage.combinat.dlx.OneExactCover"]], "next() (sage.combinat.dlx.dlxmatrix method)": [[98, "sage.combinat.dlx.DLXMatrix.next"]], "sage.combinat.dlx": [[98, "module-sage.combinat.dlx"]], "completedyckwords (class in sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.CompleteDyckWords"]], "completedyckwords_all (class in sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.CompleteDyckWords_all"]], "completedyckwords_all.height_poset (class in sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.CompleteDyckWords_all.height_poset"]], "completedyckwords_size (class in sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.CompleteDyckWords_size"]], "dyckword (class in sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.DyckWord"]], "dyckwordbacktracker (class in sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.DyckWordBacktracker"]], "dyckword_complete (class in sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.DyckWord_complete"]], "dyckwords (class in sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.DyckWords"]], "dyckwords_all (class in sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.DyckWords_all"]], "dyckwords_size (class in sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.DyckWords_size"]], "element (sage.combinat.dyck_word.completedyckwords attribute)": [[99, "sage.combinat.dyck_word.CompleteDyckWords.Element"]], "element (sage.combinat.dyck_word.dyckwords attribute)": [[99, "sage.combinat.dyck_word.DyckWords.Element"]], "area() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.area"]], "area_dinv_to_bounce_area_map() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.area_dinv_to_bounce_area_map"]], "ascent_prime_decomposition() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.ascent_prime_decomposition"]], "associated_parenthesis() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.associated_parenthesis"]], "bounce() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.bounce"]], "bounce_area_to_area_dinv_map() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.bounce_area_to_area_dinv_map"]], "bounce_path() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.bounce_path"]], "cardinality() (sage.combinat.dyck_word.completedyckwords_size method)": [[99, "sage.combinat.dyck_word.CompleteDyckWords_size.cardinality"]], "cardinality() (sage.combinat.dyck_word.dyckwords_size method)": [[99, "sage.combinat.dyck_word.DyckWords_size.cardinality"]], "catalan_factorization() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.catalan_factorization"]], "characteristic_symmetric_function() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.characteristic_symmetric_function"]], "decomposition_reverse() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.decomposition_reverse"]], "dinv() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.dinv"]], "first_return_decomposition() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.first_return_decomposition"]], "from_catalan_code() (sage.combinat.dyck_word.completedyckwords method)": [[99, "sage.combinat.dyck_word.CompleteDyckWords.from_Catalan_code"]], "from_area_sequence() (sage.combinat.dyck_word.completedyckwords method)": [[99, "sage.combinat.dyck_word.CompleteDyckWords.from_area_sequence"]], "from_heights() (sage.combinat.dyck_word.dyckwords method)": [[99, "sage.combinat.dyck_word.DyckWords.from_heights"]], "from_non_decreasing_parking_function() (sage.combinat.dyck_word.completedyckwords method)": [[99, "sage.combinat.dyck_word.CompleteDyckWords.from_non_decreasing_parking_function"]], "from_noncrossing_partition() (sage.combinat.dyck_word.completedyckwords method)": [[99, "sage.combinat.dyck_word.CompleteDyckWords.from_noncrossing_partition"]], "height() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.height"]], "heights() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.heights"]], "is_a() (in module sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.is_a"]], "is_area_sequence() (in module sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.is_area_sequence"]], "is_complete() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.is_complete"]], "latex_options() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.latex_options"]], "le() (sage.combinat.dyck_word.completedyckwords_all.height_poset method)": [[99, "sage.combinat.dyck_word.CompleteDyckWords_all.height_poset.le"]], "length() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.length"]], "list_parking_functions() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.list_parking_functions"]], "major_index() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.major_index"]], "min_from_heights() (sage.combinat.dyck_word.dyckwords method)": [[99, "sage.combinat.dyck_word.DyckWords.min_from_heights"]], "number_of_close_symbols() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.number_of_close_symbols"]], "number_of_double_rises() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.number_of_double_rises"]], "number_of_initial_rises() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.number_of_initial_rises"]], "number_of_open_symbols() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.number_of_open_symbols"]], "number_of_parking_functions() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.number_of_parking_functions"]], "number_of_peaks() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.number_of_peaks"]], "number_of_touch_points() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.number_of_touch_points"]], "number_of_tunnels() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.number_of_tunnels"]], "number_of_valleys() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.number_of_valleys"]], "options (sage.combinat.dyck_word.dyckwords attribute)": [[99, "sage.combinat.dyck_word.DyckWords.options"]], "peaks() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.peaks"]], "pealing() (in module sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.pealing"]], "plot() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.plot"]], "position_of_first_return() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.position_of_first_return"]], "positions_of_double_rises() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.positions_of_double_rises"]], "pp() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.pp"]], "pretty_print() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.pretty_print"]], "pyramid_weight() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.pyramid_weight"]], "random_element() (sage.combinat.dyck_word.completedyckwords_size method)": [[99, "sage.combinat.dyck_word.CompleteDyckWords_size.random_element"]], "reading_permutation() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.reading_permutation"]], "replace_parens() (in module sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.replace_parens"]], "replace_symbols() (in module sage.combinat.dyck_word)": [[99, "sage.combinat.dyck_word.replace_symbols"]], "returns_to_zero() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.returns_to_zero"]], "reverse() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.reverse"]], "rise_composition() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.rise_composition"]], "sage.combinat.dyck_word": [[99, "module-sage.combinat.dyck_word"]], "semilength() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.semilength"]], "set_latex_options() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.set_latex_options"]], "tamari_interval() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.tamari_interval"]], "to_132_avoiding_permutation() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_132_avoiding_permutation"]], "to_312_avoiding_permutation() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_312_avoiding_permutation"]], "to_321_avoiding_permutation() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_321_avoiding_permutation"]], "to_catalan_code() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_Catalan_code"]], "to_alternating_sign_matrix() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_alternating_sign_matrix"]], "to_area_sequence() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.to_area_sequence"]], "to_binary_tree() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.to_binary_tree"]], "to_binary_tree_tamari() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.to_binary_tree_tamari"]], "to_non_decreasing_parking_function() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_non_decreasing_parking_function"]], "to_noncrossing_partition() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_noncrossing_partition"]], "to_noncrossing_permutation() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_noncrossing_permutation"]], "to_ordered_tree() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_ordered_tree"]], "to_pair_of_standard_tableaux() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_pair_of_standard_tableaux"]], "to_partition() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_partition"]], "to_path_string() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.to_path_string"]], "to_permutation() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_permutation"]], "to_standard_tableau() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.to_standard_tableau"]], "to_tamari_sorting_tuple() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.to_tamari_sorting_tuple"]], "to_triangulation() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_triangulation"]], "to_triangulation_as_graph() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.to_triangulation_as_graph"]], "touch_composition() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.touch_composition"]], "touch_points() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.touch_points"]], "tunnels() (sage.combinat.dyck_word.dyckword_complete method)": [[99, "sage.combinat.dyck_word.DyckWord_complete.tunnels"]], "valleys() (sage.combinat.dyck_word.dyckword method)": [[99, "sage.combinat.dyck_word.DyckWord.valleys"]], "e1star (class in sage.combinat.e_one_star)": [[100, "sage.combinat.e_one_star.E1Star"]], "face (class in sage.combinat.e_one_star)": [[100, "sage.combinat.e_one_star.Face"]], "patch (class in sage.combinat.e_one_star)": [[100, "sage.combinat.e_one_star.Patch"]], "color() (sage.combinat.e_one_star.face method)": [[100, "sage.combinat.e_one_star.Face.color"]], "difference() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.difference"]], "dimension() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.dimension"]], "faces_of_color() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.faces_of_color"]], "faces_of_type() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.faces_of_type"]], "faces_of_vector() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.faces_of_vector"]], "inverse_matrix() (sage.combinat.e_one_star.e1star method)": [[100, "sage.combinat.e_one_star.E1Star.inverse_matrix"]], "matrix() (sage.combinat.e_one_star.e1star method)": [[100, "sage.combinat.e_one_star.E1Star.matrix"]], "occurrences_of() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.occurrences_of"]], "plot() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.plot"]], "plot3d() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.plot3d"]], "plot_tikz() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.plot_tikz"]], "repaint() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.repaint"]], "sage.combinat.e_one_star": [[100, "module-sage.combinat.e_one_star"]], "sigma() (sage.combinat.e_one_star.e1star method)": [[100, "sage.combinat.e_one_star.E1Star.sigma"]], "translate() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.translate"]], "type() (sage.combinat.e_one_star.face method)": [[100, "sage.combinat.e_one_star.Face.type"]], "union() (sage.combinat.e_one_star.patch method)": [[100, "sage.combinat.e_one_star.Patch.union"]], "vector() (sage.combinat.e_one_star.face method)": [[100, "sage.combinat.e_one_star.Face.vector"]], "sage.combinat.enumerated_sets": [[101, "module-sage.combinat.enumerated_sets"]], "all_children() (in module sage.combinat.enumeration_mod_permgroup)": [[102, "sage.combinat.enumeration_mod_permgroup.all_children"]], "canonical_children() (in module sage.combinat.enumeration_mod_permgroup)": [[102, "sage.combinat.enumeration_mod_permgroup.canonical_children"]], "canonical_representative_of_orbit_of() (in module sage.combinat.enumeration_mod_permgroup)": [[102, "sage.combinat.enumeration_mod_permgroup.canonical_representative_of_orbit_of"]], "is_canonical() (in module sage.combinat.enumeration_mod_permgroup)": [[102, "sage.combinat.enumeration_mod_permgroup.is_canonical"]], "lex_cmp() (in module sage.combinat.enumeration_mod_permgroup)": [[102, "sage.combinat.enumeration_mod_permgroup.lex_cmp"]], "lex_cmp_partial() (in module sage.combinat.enumeration_mod_permgroup)": [[102, "sage.combinat.enumeration_mod_permgroup.lex_cmp_partial"]], "orbit() (in module sage.combinat.enumeration_mod_permgroup)": [[102, "sage.combinat.enumeration_mod_permgroup.orbit"]], "sage.combinat.enumeration_mod_permgroup": [[102, "module-sage.combinat.enumeration_mod_permgroup"]], "expnums() (in module sage.combinat.expnums)": [[103, "sage.combinat.expnums.expnums"]], "expnums2() (in module sage.combinat.expnums)": [[103, "sage.combinat.expnums.expnums2"]], "sage.combinat.expnums": [[103, "module-sage.combinat.expnums"]], "sage.combinat.family": [[104, "module-sage.combinat.family"]], "fast_vector_partitions() (in module sage.combinat.fast_vector_partitions)": [[105, "sage.combinat.fast_vector_partitions.fast_vector_partitions"]], "recursive_vector_partitions() (in module sage.combinat.fast_vector_partitions)": [[105, "sage.combinat.fast_vector_partitions.recursive_vector_partitions"]], "recursive_within_from_to() (in module sage.combinat.fast_vector_partitions)": [[105, "sage.combinat.fast_vector_partitions.recursive_within_from_to"]], "sage.combinat.fast_vector_partitions": [[105, "module-sage.combinat.fast_vector_partitions"]], "within_from_to() (in module sage.combinat.fast_vector_partitions)": [[105, "sage.combinat.fast_vector_partitions.within_from_to"]], "automaton (class in sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.Automaton"]], "fsmlettersymbol() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.FSMLetterSymbol"]], "fsmprocessiterator (class in sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.FSMProcessIterator"]], "fsmprocessiterator.current (class in sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.FSMProcessIterator.Current"]], "fsmprocessiterator.finishedbranch (class in sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.FSMProcessIterator.FinishedBranch"]], "fsmstate (class in sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.FSMState"]], "fsmtransition (class in sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.FSMTransition"]], "fsmwordsymbol() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.FSMWordSymbol"]], "finitestatemachine (class in sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine"]], "transducer (class in sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.Transducer"]], "__call__() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.__call__"]], "accept (sage.combinat.finite_state_machine.fsmprocessiterator.finishedbranch attribute)": [[106, "sage.combinat.finite_state_machine.FSMProcessIterator.FinishedBranch.accept"]], "accessible_components() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.accessible_components"]], "add_from_transition_function() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.add_from_transition_function"]], "add_state() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.add_state"]], "add_states() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.add_states"]], "add_transition() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.add_transition"]], "add_transitions_from_function() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.add_transitions_from_function"]], "adjacency_matrix() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.adjacency_matrix"]], "asymptotic_moments() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.asymptotic_moments"]], "cartesian_product() (sage.combinat.finite_state_machine.automaton method)": [[106, "sage.combinat.finite_state_machine.Automaton.cartesian_product"]], "cartesian_product() (sage.combinat.finite_state_machine.transducer method)": [[106, "sage.combinat.finite_state_machine.Transducer.cartesian_product"]], "coaccessible_components() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.coaccessible_components"]], "complement() (sage.combinat.finite_state_machine.automaton method)": [[106, "sage.combinat.finite_state_machine.Automaton.complement"]], "completion() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.completion"]], "composition() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.composition"]], "concatenation() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.concatenation"]], "construct_final_word_out() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.construct_final_word_out"]], "copy() (sage.combinat.finite_state_machine.fsmstate method)": [[106, "sage.combinat.finite_state_machine.FSMState.copy"]], "copy() (sage.combinat.finite_state_machine.fsmtransition method)": [[106, "sage.combinat.finite_state_machine.FSMTransition.copy"]], "copy() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.copy"]], "deepcopy() (sage.combinat.finite_state_machine.fsmstate method)": [[106, "sage.combinat.finite_state_machine.FSMState.deepcopy"]], "deepcopy() (sage.combinat.finite_state_machine.fsmtransition method)": [[106, "sage.combinat.finite_state_machine.FSMTransition.deepcopy"]], "deepcopy() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.deepcopy"]], "default_format_letter (sage.combinat.finite_state_machine.finitestatemachine attribute)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.default_format_letter"]], "default_format_transition_label() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.default_format_transition_label"]], "delete_state() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.delete_state"]], "delete_transition() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.delete_transition"]], "determine_alphabets() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.determine_alphabets"]], "determine_input_alphabet() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.determine_input_alphabet"]], "determine_output_alphabet() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.determine_output_alphabet"]], "determinisation() (sage.combinat.finite_state_machine.automaton method)": [[106, "sage.combinat.finite_state_machine.Automaton.determinisation"]], "digraph() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.digraph"]], "disjoint_union() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.disjoint_union"]], "duplicate_transition_add_input() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.duplicate_transition_add_input"]], "duplicate_transition_ignore() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.duplicate_transition_ignore"]], "duplicate_transition_raise_error() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.duplicate_transition_raise_error"]], "empty_copy() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.empty_copy"]], "epsilon_successors() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.epsilon_successors"]], "equal() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.equal"]], "equivalence_classes() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.equivalence_classes"]], "final_components() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.final_components"]], "final_states() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.final_states"]], "final_word_out (sage.combinat.finite_state_machine.fsmstate property)": [[106, "sage.combinat.finite_state_machine.FSMState.final_word_out"]], "format_letter (sage.combinat.finite_state_machine.finitestatemachine attribute)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.format_letter"]], "format_letter_negative() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.format_letter_negative"]], "format_transition_label() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.format_transition_label"]], "format_transition_label_reversed() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.format_transition_label_reversed"]], "from_state (sage.combinat.finite_state_machine.fsmtransition attribute)": [[106, "sage.combinat.finite_state_machine.FSMTransition.from_state"]], "full_group_by() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.full_group_by"]], "fully_equal() (sage.combinat.finite_state_machine.fsmstate method)": [[106, "sage.combinat.finite_state_machine.FSMState.fully_equal"]], "graph() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.graph"]], "has_final_state() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.has_final_state"]], "has_final_states() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.has_final_states"]], "has_initial_state() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.has_initial_state"]], "has_initial_states() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.has_initial_states"]], "has_state() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.has_state"]], "has_transition() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.has_transition"]], "induced_sub_finite_state_machine() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.induced_sub_finite_state_machine"]], "initial_probability (sage.combinat.finite_state_machine.fsmstate attribute)": [[106, "sage.combinat.finite_state_machine.FSMState.initial_probability"]], "initial_states() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.initial_states"]], "input_alphabet (sage.combinat.finite_state_machine.finitestatemachine attribute)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.input_alphabet"]], "input_projection() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.input_projection"]], "intersection() (sage.combinat.finite_state_machine.automaton method)": [[106, "sage.combinat.finite_state_machine.Automaton.intersection"]], "intersection() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.intersection"]], "intersection() (sage.combinat.finite_state_machine.transducer method)": [[106, "sage.combinat.finite_state_machine.Transducer.intersection"]], "is_automaton() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.is_Automaton"]], "is_fsmprocessiterator() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.is_FSMProcessIterator"]], "is_fsmstate() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.is_FSMState"]], "is_fsmtransition() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.is_FSMTransition"]], "is_finitestatemachine() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.is_FiniteStateMachine"]], "is_markov_chain() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.is_Markov_chain"]], "is_transducer() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.is_Transducer"]], "is_complete() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.is_complete"]], "is_connected() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.is_connected"]], "is_deterministic() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.is_deterministic"]], "is_equivalent() (sage.combinat.finite_state_machine.automaton method)": [[106, "sage.combinat.finite_state_machine.Automaton.is_equivalent"]], "is_final (sage.combinat.finite_state_machine.fsmstate property)": [[106, "sage.combinat.finite_state_machine.FSMState.is_final"]], "is_initial (sage.combinat.finite_state_machine.fsmstate attribute)": [[106, "sage.combinat.finite_state_machine.FSMState.is_initial"]], "is_monochromatic() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.is_monochromatic"]], "iter_final_states() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.iter_final_states"]], "iter_initial_states() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.iter_initial_states"]], "iter_process() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.iter_process"]], "iter_states() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.iter_states"]], "iter_transitions() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.iter_transitions"]], "kleene_star() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.kleene_star"]], "label() (sage.combinat.finite_state_machine.fsmstate method)": [[106, "sage.combinat.finite_state_machine.FSMState.label"]], "language() (sage.combinat.finite_state_machine.automaton method)": [[106, "sage.combinat.finite_state_machine.Automaton.language"]], "language() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.language"]], "latex_options() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.latex_options"]], "markov_chain_simplification() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.markov_chain_simplification"]], "merged_transitions() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.merged_transitions"]], "minimization() (sage.combinat.finite_state_machine.automaton method)": [[106, "sage.combinat.finite_state_machine.Automaton.minimization"]], "moments_waiting_time() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.moments_waiting_time"]], "next() (sage.combinat.finite_state_machine.fsmprocessiterator method)": [[106, "sage.combinat.finite_state_machine.FSMProcessIterator.next"]], "number_of_words() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.number_of_words"]], "on_duplicate_transition() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.on_duplicate_transition"]], "output (sage.combinat.finite_state_machine.fsmprocessiterator.finishedbranch attribute)": [[106, "sage.combinat.finite_state_machine.FSMProcessIterator.FinishedBranch.output"]], "output_alphabet (sage.combinat.finite_state_machine.finitestatemachine attribute)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.output_alphabet"]], "output_projection() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.output_projection"]], "plot() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.plot"]], "predecessors() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.predecessors"]], "prepone_output() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.prepone_output"]], "preview_word() (sage.combinat.finite_state_machine.fsmprocessiterator method)": [[106, "sage.combinat.finite_state_machine.FSMProcessIterator.preview_word"]], "process() (sage.combinat.finite_state_machine.automaton method)": [[106, "sage.combinat.finite_state_machine.Automaton.process"]], "process() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.process"]], "process() (sage.combinat.finite_state_machine.transducer method)": [[106, "sage.combinat.finite_state_machine.Transducer.process"]], "product_finitestatemachine() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.product_FiniteStateMachine"]], "projection() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.projection"]], "quotient() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.quotient"]], "relabeled() (sage.combinat.finite_state_machine.fsmstate method)": [[106, "sage.combinat.finite_state_machine.FSMState.relabeled"]], "relabeled() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.relabeled"]], "remove_epsilon_transitions() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.remove_epsilon_transitions"]], "result() (sage.combinat.finite_state_machine.fsmprocessiterator method)": [[106, "sage.combinat.finite_state_machine.FSMProcessIterator.result"]], "sage.combinat.finite_state_machine": [[106, "module-sage.combinat.finite_state_machine"]], "set_coordinates() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.set_coordinates"]], "setup_latex_preamble() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.setup_latex_preamble"]], "shannon_parry_markov_chain() (sage.combinat.finite_state_machine.automaton method)": [[106, "sage.combinat.finite_state_machine.Automaton.shannon_parry_markov_chain"]], "simplification() (sage.combinat.finite_state_machine.transducer method)": [[106, "sage.combinat.finite_state_machine.Transducer.simplification"]], "split_transitions() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.split_transitions"]], "startswith() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.startswith"]], "state (sage.combinat.finite_state_machine.fsmprocessiterator.finishedbranch attribute)": [[106, "sage.combinat.finite_state_machine.FSMProcessIterator.FinishedBranch.state"]], "state() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.state"]], "states() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.states"]], "to_state (sage.combinat.finite_state_machine.fsmtransition attribute)": [[106, "sage.combinat.finite_state_machine.FSMTransition.to_state"]], "transition() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.transition"]], "transitions() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.transitions"]], "transposition() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.transposition"]], "tupleofwords_to_wordoftuples() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.tupleofwords_to_wordoftuples"]], "with_final_word_out() (sage.combinat.finite_state_machine.finitestatemachine method)": [[106, "sage.combinat.finite_state_machine.FiniteStateMachine.with_final_word_out"]], "with_output() (sage.combinat.finite_state_machine.automaton method)": [[106, "sage.combinat.finite_state_machine.Automaton.with_output"]], "word_in (sage.combinat.finite_state_machine.fsmtransition attribute)": [[106, "sage.combinat.finite_state_machine.FSMTransition.word_in"]], "word_out (sage.combinat.finite_state_machine.fsmtransition attribute)": [[106, "sage.combinat.finite_state_machine.FSMTransition.word_out"]], "wordoftuples_to_tupleofwords() (in module sage.combinat.finite_state_machine)": [[106, "sage.combinat.finite_state_machine.wordoftuples_to_tupleofwords"]], "anyletter() (sage.combinat.finite_state_machine_generators.automatongenerators method)": [[107, "sage.combinat.finite_state_machine_generators.AutomatonGenerators.AnyLetter"]], "anyword() (sage.combinat.finite_state_machine_generators.automatongenerators method)": [[107, "sage.combinat.finite_state_machine_generators.AutomatonGenerators.AnyWord"]], "automatongenerators (class in sage.combinat.finite_state_machine_generators)": [[107, "sage.combinat.finite_state_machine_generators.AutomatonGenerators"]], "containsword() (sage.combinat.finite_state_machine_generators.automatongenerators method)": [[107, "sage.combinat.finite_state_machine_generators.AutomatonGenerators.ContainsWord"]], "countsubblockoccurrences() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.CountSubblockOccurrences"]], "emptyword() (sage.combinat.finite_state_machine_generators.automatongenerators method)": [[107, "sage.combinat.finite_state_machine_generators.AutomatonGenerators.EmptyWord"]], "graycode() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.GrayCode"]], "identity() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.Identity"]], "k (sage.combinat.finite_state_machine_generators.transducergenerators.recursionrule attribute)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.RecursionRule.K"], [107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.RecursionRule.k"]], "recursion() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.Recursion"]], "transducergenerators (class in sage.combinat.finite_state_machine_generators)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators"]], "transducergenerators.recursionrule (class in sage.combinat.finite_state_machine_generators)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.RecursionRule"]], "wait() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.Wait"]], "word() (sage.combinat.finite_state_machine_generators.automatongenerators method)": [[107, "sage.combinat.finite_state_machine_generators.AutomatonGenerators.Word"]], "abs() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.abs"]], "add() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.add"]], "all() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.all"]], "any() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.any"]], "map() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.map"]], "operator() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.operator"]], "r (sage.combinat.finite_state_machine_generators.transducergenerators.recursionrule attribute)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.RecursionRule.r"]], "s (sage.combinat.finite_state_machine_generators.transducergenerators.recursionrule attribute)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.RecursionRule.s"]], "sage.combinat.finite_state_machine_generators": [[107, "module-sage.combinat.finite_state_machine_generators"]], "sub() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.sub"]], "t (sage.combinat.finite_state_machine_generators.transducergenerators.recursionrule attribute)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.RecursionRule.t"]], "weight() (sage.combinat.finite_state_machine_generators.transducergenerators method)": [[107, "sage.combinat.finite_state_machine_generators.TransducerGenerators.weight"]], "fqsymbases (class in sage.combinat.fqsym)": [[108, "sage.combinat.fqsym.FQSymBases"]], "fqsymbases.elementmethods (class in sage.combinat.fqsym)": [[108, "sage.combinat.fqsym.FQSymBases.ElementMethods"]], "fqsymbases.parentmethods (class in sage.combinat.fqsym)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods"]], "fqsymbasis_abstract (class in sage.combinat.fqsym)": [[108, "sage.combinat.fqsym.FQSymBasis_abstract"]], "freequasisymmetricfunctions (class in sage.combinat.fqsym)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions"]], "freequasisymmetricfunctions.f (class in sage.combinat.fqsym)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.F"]], "freequasisymmetricfunctions.f.element (class in sage.combinat.fqsym)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.F.Element"]], "freequasisymmetricfunctions.g (class in sage.combinat.fqsym)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.G"]], "freequasisymmetricfunctions.m (class in sage.combinat.fqsym)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.M"]], "freequasisymmetricfunctions.m.element (class in sage.combinat.fqsym)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.M.Element"]], "a_realization() (sage.combinat.fqsym.freequasisymmetricfunctions method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.a_realization"]], "an_element() (sage.combinat.fqsym.fqsymbasis_abstract method)": [[108, "sage.combinat.fqsym.FQSymBasis_abstract.an_element"]], "basis() (sage.combinat.fqsym.fqsymbases.parentmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods.basis"]], "coproduct_on_basis() (sage.combinat.fqsym.freequasisymmetricfunctions.f method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.F.coproduct_on_basis"]], "coproduct_on_basis() (sage.combinat.fqsym.freequasisymmetricfunctions.m method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.M.coproduct_on_basis"]], "degree_on_basis() (sage.combinat.fqsym.freequasisymmetricfunctions.f method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.F.degree_on_basis"]], "degree_on_basis() (sage.combinat.fqsym.freequasisymmetricfunctions.g method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.G.degree_on_basis"]], "degree_on_basis() (sage.combinat.fqsym.freequasisymmetricfunctions.m method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.M.degree_on_basis"]], "from_symmetric_group_algebra() (sage.combinat.fqsym.fqsymbases.parentmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods.from_symmetric_group_algebra"]], "is_commutative() (sage.combinat.fqsym.fqsymbases.parentmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods.is_commutative"]], "is_field() (sage.combinat.fqsym.fqsymbases.parentmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods.is_field"]], "omega_involution() (sage.combinat.fqsym.fqsymbases.elementmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ElementMethods.omega_involution"]], "one_basis() (sage.combinat.fqsym.fqsymbases.parentmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods.one_basis"]], "prec() (sage.combinat.fqsym.fqsymbases.parentmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods.prec"]], "prec_by_coercion() (sage.combinat.fqsym.fqsymbases.parentmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods.prec_by_coercion"]], "prec_product_on_basis() (sage.combinat.fqsym.freequasisymmetricfunctions.f method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.F.prec_product_on_basis"]], "product_on_basis() (sage.combinat.fqsym.freequasisymmetricfunctions.f method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.F.product_on_basis"]], "psi_involution() (sage.combinat.fqsym.fqsymbases.elementmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ElementMethods.psi_involution"]], "sage.combinat.fqsym": [[108, "module-sage.combinat.fqsym"]], "some_elements() (sage.combinat.fqsym.fqsymbases.parentmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods.some_elements"]], "star_involution() (sage.combinat.fqsym.fqsymbases.elementmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ElementMethods.star_involution"]], "star_involution() (sage.combinat.fqsym.freequasisymmetricfunctions.m.element method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.M.Element.star_involution"]], "succ() (sage.combinat.fqsym.fqsymbases.parentmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods.succ"]], "succ_by_coercion() (sage.combinat.fqsym.fqsymbases.parentmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ParentMethods.succ_by_coercion"]], "succ_product_on_basis() (sage.combinat.fqsym.freequasisymmetricfunctions.f method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.F.succ_product_on_basis"]], "super_categories() (sage.combinat.fqsym.fqsymbases method)": [[108, "sage.combinat.fqsym.FQSymBases.super_categories"]], "to_qsym() (sage.combinat.fqsym.fqsymbases.elementmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ElementMethods.to_qsym"]], "to_symmetric_group_algebra() (sage.combinat.fqsym.fqsymbases.elementmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ElementMethods.to_symmetric_group_algebra"]], "to_symmetric_group_algebra() (sage.combinat.fqsym.freequasisymmetricfunctions.f.element method)": [[108, "sage.combinat.fqsym.FreeQuasisymmetricFunctions.F.Element.to_symmetric_group_algebra"]], "to_wqsym() (sage.combinat.fqsym.fqsymbases.elementmethods method)": [[108, "sage.combinat.fqsym.FQSymBases.ElementMethods.to_wqsym"]], "dendriformfunctor (class in sage.combinat.free_dendriform_algebra)": [[109, "sage.combinat.free_dendriform_algebra.DendriformFunctor"]], "freedendriformalgebra (class in sage.combinat.free_dendriform_algebra)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra"]], "algebra_generators() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.algebra_generators"]], "an_element() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.an_element"]], "change_ring() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.change_ring"]], "construction() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.construction"]], "coproduct_on_basis() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.coproduct_on_basis"]], "degree_on_basis() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.degree_on_basis"]], "gen() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.gen"]], "gens() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.gens"]], "merge() (sage.combinat.free_dendriform_algebra.dendriformfunctor method)": [[109, "sage.combinat.free_dendriform_algebra.DendriformFunctor.merge"]], "one_basis() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.one_basis"]], "over() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.over"]], "prec() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.prec"]], "prec_product_on_basis() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.prec_product_on_basis"]], "product_on_basis() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.product_on_basis"]], "rank (sage.combinat.free_dendriform_algebra.dendriformfunctor attribute)": [[109, "sage.combinat.free_dendriform_algebra.DendriformFunctor.rank"]], "sage.combinat.free_dendriform_algebra": [[109, "module-sage.combinat.free_dendriform_algebra"]], "some_elements() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.some_elements"]], "succ() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.succ"]], "succ_product_on_basis() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.succ_product_on_basis"]], "under() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.under"]], "variable_names() (sage.combinat.free_dendriform_algebra.freedendriformalgebra method)": [[109, "sage.combinat.free_dendriform_algebra.FreeDendriformAlgebra.variable_names"]], "cartesianproduct (sage.combinat.free_module.combinatorialfreemodule attribute)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.CartesianProduct"]], "cartesianproductwithflattening (class in sage.combinat.free_module)": [[110, "sage.combinat.free_module.CartesianProductWithFlattening"]], "combinatorialfreemodule (class in sage.combinat.free_module)": [[110, "sage.combinat.free_module.CombinatorialFreeModule"]], "combinatorialfreemodule_cartesianproduct (class in sage.combinat.free_module)": [[110, "sage.combinat.free_module.CombinatorialFreeModule_CartesianProduct"]], "combinatorialfreemodule_cartesianproduct.element (class in sage.combinat.free_module)": [[110, "sage.combinat.free_module.CombinatorialFreeModule_CartesianProduct.Element"]], "combinatorialfreemodule_tensor (class in sage.combinat.free_module)": [[110, "sage.combinat.free_module.CombinatorialFreeModule_Tensor"]], "element (sage.combinat.free_module.combinatorialfreemodule attribute)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.Element"]], "tensor (sage.combinat.free_module.combinatorialfreemodule attribute)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.Tensor"]], "cartesian_embedding() (sage.combinat.free_module.combinatorialfreemodule_cartesianproduct method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule_CartesianProduct.cartesian_embedding"]], "cartesian_factors() (sage.combinat.free_module.combinatorialfreemodule_cartesianproduct method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule_CartesianProduct.cartesian_factors"]], "cartesian_projection() (sage.combinat.free_module.combinatorialfreemodule_cartesianproduct method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule_CartesianProduct.cartesian_projection"]], "construction() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.construction"]], "dimension() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.dimension"]], "element_class() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.element_class"]], "from_vector() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.from_vector"]], "get_order() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.get_order"]], "get_order_key() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.get_order_key"]], "is_exact() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.is_exact"]], "linear_combination() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.linear_combination"]], "monomial() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.monomial"]], "rank() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.rank"]], "sage.combinat.free_module": [[110, "module-sage.combinat.free_module"]], "set_order() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.set_order"]], "sum() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.sum"]], "sum_of_terms() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.sum_of_terms"]], "summand_embedding() (sage.combinat.free_module.combinatorialfreemodule_cartesianproduct method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule_CartesianProduct.summand_embedding"]], "summand_projection() (sage.combinat.free_module.combinatorialfreemodule_cartesianproduct method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule_CartesianProduct.summand_projection"]], "tensor_constructor() (sage.combinat.free_module.combinatorialfreemodule_tensor method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule_Tensor.tensor_constructor"]], "tensor_factors() (sage.combinat.free_module.combinatorialfreemodule_tensor method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule_Tensor.tensor_factors"]], "term() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.term"]], "zero() (sage.combinat.free_module.combinatorialfreemodule method)": [[110, "sage.combinat.free_module.CombinatorialFreeModule.zero"]], "freepreliealgebra (class in sage.combinat.free_prelie_algebra)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra"]], "freepreliealgebra.element (class in sage.combinat.free_prelie_algebra)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.Element"]], "preliefunctor (class in sage.combinat.free_prelie_algebra)": [[111, "sage.combinat.free_prelie_algebra.PreLieFunctor"]], "algebra_generators() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.algebra_generators"]], "an_element() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.an_element"]], "bracket_on_basis() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.bracket_on_basis"]], "change_ring() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.change_ring"]], "construction() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.construction"]], "degree_on_basis() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.degree_on_basis"]], "gen() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.gen"]], "gens() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.gens"]], "lift() (sage.combinat.free_prelie_algebra.freepreliealgebra.element method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.Element.lift"]], "merge() (sage.combinat.free_prelie_algebra.preliefunctor method)": [[111, "sage.combinat.free_prelie_algebra.PreLieFunctor.merge"]], "nap_product() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.nap_product"]], "nap_product_on_basis() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.nap_product_on_basis"]], "pre_lie_product() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.pre_Lie_product"]], "pre_lie_product_on_basis() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.pre_Lie_product_on_basis"]], "product_on_basis() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.product_on_basis"]], "rank (sage.combinat.free_prelie_algebra.preliefunctor attribute)": [[111, "sage.combinat.free_prelie_algebra.PreLieFunctor.rank"]], "sage.combinat.free_prelie_algebra": [[111, "module-sage.combinat.free_prelie_algebra"]], "some_elements() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.some_elements"]], "variable_names() (sage.combinat.free_prelie_algebra.freepreliealgebra method)": [[111, "sage.combinat.free_prelie_algebra.FreePreLieAlgebra.variable_names"]], "element (sage.combinat.fully_commutative_elements.fullycommutativeelements attribute)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElements.Element"]], "fullycommutativeelement (class in sage.combinat.fully_commutative_elements)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement"]], "fullycommutativeelements (class in sage.combinat.fully_commutative_elements)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElements"]], "check() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.check"]], "coset_decomposition() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.coset_decomposition"]], "coxeter_group() (sage.combinat.fully_commutative_elements.fullycommutativeelements method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElements.coxeter_group"]], "descents() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.descents"]], "find_descent() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.find_descent"]], "group_element() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.group_element"]], "has_descent() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.has_descent"]], "heap() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.heap"]], "is_fully_commutative() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.is_fully_commutative"]], "iterate_to_length() (sage.combinat.fully_commutative_elements.fullycommutativeelements method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElements.iterate_to_length"]], "n_value() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.n_value"]], "normalize() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.normalize"]], "plot_heap() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.plot_heap"]], "sage.combinat.fully_commutative_elements": [[112, "module-sage.combinat.fully_commutative_elements"]], "star_operation() (sage.combinat.fully_commutative_elements.fullycommutativeelement method)": [[112, "sage.combinat.fully_commutative_elements.FullyCommutativeElement.star_operation"]], "element (sage.combinat.fully_packed_loop.fullypackedloops attribute)": [[113, "sage.combinat.fully_packed_loop.FullyPackedLoops.Element"]], "fullypackedloop (class in sage.combinat.fully_packed_loop)": [[113, "sage.combinat.fully_packed_loop.FullyPackedLoop"]], "fullypackedloops (class in sage.combinat.fully_packed_loop)": [[113, "sage.combinat.fully_packed_loop.FullyPackedLoops"]], "cardinality() (sage.combinat.fully_packed_loop.fullypackedloops method)": [[113, "sage.combinat.fully_packed_loop.FullyPackedLoops.cardinality"]], "gyration() (sage.combinat.fully_packed_loop.fullypackedloop method)": [[113, "sage.combinat.fully_packed_loop.FullyPackedLoop.gyration"]], "link_pattern() (sage.combinat.fully_packed_loop.fullypackedloop method)": [[113, "sage.combinat.fully_packed_loop.FullyPackedLoop.link_pattern"]], "plot() (sage.combinat.fully_packed_loop.fullypackedloop method)": [[113, "sage.combinat.fully_packed_loop.FullyPackedLoop.plot"]], "sage.combinat.fully_packed_loop": [[113, "module-sage.combinat.fully_packed_loop"]], "six_vertex_model() (sage.combinat.fully_packed_loop.fullypackedloop method)": [[113, "sage.combinat.fully_packed_loop.FullyPackedLoop.six_vertex_model"]], "size() (sage.combinat.fully_packed_loop.fullypackedloops method)": [[113, "sage.combinat.fully_packed_loop.FullyPackedLoops.size"]], "to_alternating_sign_matrix() (sage.combinat.fully_packed_loop.fullypackedloop method)": [[113, "sage.combinat.fully_packed_loop.FullyPackedLoop.to_alternating_sign_matrix"]], "element (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpatterns attribute)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPatterns.Element"]], "gelfandtsetlinpattern (class in sage.combinat.gelfand_tsetlin_patterns)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern"]], "gelfandtsetlinpatterns (class in sage.combinat.gelfand_tsetlin_patterns)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPatterns"]], "gelfandtsetlinpatternstoprow (class in sage.combinat.gelfand_tsetlin_patterns)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPatternsTopRow"]], "tokuyama_coefficient() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.Tokuyama_coefficient"]], "tokuyama_formula() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpatternstoprow method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPatternsTopRow.Tokuyama_formula"]], "bender_knuth_involution() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.bender_knuth_involution"]], "boxed_entries() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.boxed_entries"]], "check() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.check"]], "circled_entries() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.circled_entries"]], "is_strict() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.is_strict"]], "number_of_boxes() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.number_of_boxes"]], "number_of_circles() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.number_of_circles"]], "number_of_special_entries() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.number_of_special_entries"]], "pp() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.pp"]], "random_element() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpatterns method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPatterns.random_element"]], "random_element() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpatternstoprow method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPatternsTopRow.random_element"]], "row_sums() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.row_sums"]], "sage.combinat.gelfand_tsetlin_patterns": [[114, "module-sage.combinat.gelfand_tsetlin_patterns"]], "special_entries() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.special_entries"]], "to_tableau() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.to_tableau"]], "top_row() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpatternstoprow method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPatternsTopRow.top_row"]], "weight() (sage.combinat.gelfand_tsetlin_patterns.gelfandtsetlinpattern method)": [[114, "sage.combinat.gelfand_tsetlin_patterns.GelfandTsetlinPattern.weight"]], "graphpaths() (in module sage.combinat.graph_path)": [[115, "sage.combinat.graph_path.GraphPaths"]], "graphpaths_all (class in sage.combinat.graph_path)": [[115, "sage.combinat.graph_path.GraphPaths_all"]], "graphpaths_common (class in sage.combinat.graph_path)": [[115, "sage.combinat.graph_path.GraphPaths_common"]], "graphpaths_s (class in sage.combinat.graph_path)": [[115, "sage.combinat.graph_path.GraphPaths_s"]], "graphpaths_st (class in sage.combinat.graph_path)": [[115, "sage.combinat.graph_path.GraphPaths_st"]], "graphpaths_t (class in sage.combinat.graph_path)": [[115, "sage.combinat.graph_path.GraphPaths_t"]], "incoming_edges() (sage.combinat.graph_path.graphpaths_common method)": [[115, "sage.combinat.graph_path.GraphPaths_common.incoming_edges"]], "incoming_paths() (sage.combinat.graph_path.graphpaths_common method)": [[115, "sage.combinat.graph_path.GraphPaths_common.incoming_paths"]], "list() (sage.combinat.graph_path.graphpaths_all method)": [[115, "sage.combinat.graph_path.GraphPaths_all.list"]], "list() (sage.combinat.graph_path.graphpaths_s method)": [[115, "sage.combinat.graph_path.GraphPaths_s.list"]], "list() (sage.combinat.graph_path.graphpaths_st method)": [[115, "sage.combinat.graph_path.GraphPaths_st.list"]], "list() (sage.combinat.graph_path.graphpaths_t method)": [[115, "sage.combinat.graph_path.GraphPaths_t.list"]], "outgoing_edges() (sage.combinat.graph_path.graphpaths_common method)": [[115, "sage.combinat.graph_path.GraphPaths_common.outgoing_edges"]], "outgoing_paths() (sage.combinat.graph_path.graphpaths_common method)": [[115, "sage.combinat.graph_path.GraphPaths_common.outgoing_paths"]], "paths() (sage.combinat.graph_path.graphpaths_common method)": [[115, "sage.combinat.graph_path.GraphPaths_common.paths"]], "paths_from_source_to_target() (sage.combinat.graph_path.graphpaths_common method)": [[115, "sage.combinat.graph_path.GraphPaths_common.paths_from_source_to_target"]], "sage.combinat.graph_path": [[115, "module-sage.combinat.graph_path"]], "combinations() (in module sage.combinat.gray_codes)": [[116, "sage.combinat.gray_codes.combinations"]], "product() (in module sage.combinat.gray_codes)": [[116, "sage.combinat.gray_codes.product"]], "sage.combinat.gray_codes": [[116, "module-sage.combinat.gray_codes"]], "grossmanlarsonalgebra (class in sage.combinat.grossman_larson_algebras)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra"]], "an_element() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.an_element"]], "antipode_on_basis() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.antipode_on_basis"]], "change_ring() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.change_ring"]], "coproduct_on_basis() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.coproduct_on_basis"]], "counit_on_basis() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.counit_on_basis"]], "degree_on_basis() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.degree_on_basis"]], "one_basis() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.one_basis"]], "product_on_basis() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.product_on_basis"]], "sage.combinat.grossman_larson_algebras": [[117, "module-sage.combinat.grossman_larson_algebras"]], "single_vertex() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.single_vertex"]], "single_vertex_all() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.single_vertex_all"]], "some_elements() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.some_elements"]], "variable_names() (sage.combinat.grossman_larson_algebras.grossmanlarsonalgebra method)": [[117, "sage.combinat.grossman_larson_algebras.GrossmanLarsonAlgebra.variable_names"]], "binaryword (sage.combinat.growth.rules attribute)": [[118, "sage.combinat.growth.Rules.BinaryWord"]], "burge (sage.combinat.growth.rules attribute)": [[118, "sage.combinat.growth.Rules.Burge"]], "domino (sage.combinat.growth.rules attribute)": [[118, "sage.combinat.growth.Rules.Domino"]], "growthdiagram (class in sage.combinat.growth)": [[118, "sage.combinat.growth.GrowthDiagram"]], "llms (sage.combinat.growth.rules attribute)": [[118, "sage.combinat.growth.Rules.LLMS"]], "p_chain() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.P_chain"]], "p_graph() (sage.combinat.growth.rule method)": [[118, "sage.combinat.growth.Rule.P_graph"]], "p_symbol() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.P_symbol"]], "p_symbol() (sage.combinat.growth.ruledomino method)": [[118, "sage.combinat.growth.RuleDomino.P_symbol"]], "p_symbol() (sage.combinat.growth.rulellms method)": [[118, "sage.combinat.growth.RuleLLMS.P_symbol"]], "p_symbol() (sage.combinat.growth.rulepartitions method)": [[118, "sage.combinat.growth.RulePartitions.P_symbol"]], "p_symbol() (sage.combinat.growth.ruleshiftedshapes method)": [[118, "sage.combinat.growth.RuleShiftedShapes.P_symbol"]], "p_symbol() (sage.combinat.growth.rulesylvester method)": [[118, "sage.combinat.growth.RuleSylvester.P_symbol"]], "q_chain() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.Q_chain"]], "q_graph() (sage.combinat.growth.rule method)": [[118, "sage.combinat.growth.Rule.Q_graph"]], "q_symbol() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.Q_symbol"]], "q_symbol() (sage.combinat.growth.ruledomino method)": [[118, "sage.combinat.growth.RuleDomino.Q_symbol"]], "q_symbol() (sage.combinat.growth.rulellms method)": [[118, "sage.combinat.growth.RuleLLMS.Q_symbol"]], "q_symbol() (sage.combinat.growth.rulepartitions method)": [[118, "sage.combinat.growth.RulePartitions.Q_symbol"]], "q_symbol() (sage.combinat.growth.ruleshiftedshapes method)": [[118, "sage.combinat.growth.RuleShiftedShapes.Q_symbol"]], "q_symbol() (sage.combinat.growth.rulesylvester method)": [[118, "sage.combinat.growth.RuleSylvester.Q_symbol"]], "rsk (sage.combinat.growth.rules attribute)": [[118, "sage.combinat.growth.Rules.RSK"]], "rule (class in sage.combinat.growth)": [[118, "sage.combinat.growth.Rule"]], "rulebinaryword (class in sage.combinat.growth)": [[118, "sage.combinat.growth.RuleBinaryWord"]], "ruleburge (class in sage.combinat.growth)": [[118, "sage.combinat.growth.RuleBurge"]], "ruledomino (class in sage.combinat.growth)": [[118, "sage.combinat.growth.RuleDomino"]], "rulellms (class in sage.combinat.growth)": [[118, "sage.combinat.growth.RuleLLMS"]], "rulepartitions (class in sage.combinat.growth)": [[118, "sage.combinat.growth.RulePartitions"]], "rulersk (class in sage.combinat.growth)": [[118, "sage.combinat.growth.RuleRSK"]], "ruleshiftedshapes (class in sage.combinat.growth)": [[118, "sage.combinat.growth.RuleShiftedShapes"]], "rulesylvester (class in sage.combinat.growth)": [[118, "sage.combinat.growth.RuleSylvester"]], "ruleyoungfibonacci (class in sage.combinat.growth)": [[118, "sage.combinat.growth.RuleYoungFibonacci"]], "rules (class in sage.combinat.growth)": [[118, "sage.combinat.growth.Rules"]], "shiftedshapes (sage.combinat.growth.rules attribute)": [[118, "sage.combinat.growth.Rules.ShiftedShapes"]], "sylvester (sage.combinat.growth.rules attribute)": [[118, "sage.combinat.growth.Rules.Sylvester"]], "youngfibonacci (sage.combinat.growth.rules attribute)": [[118, "sage.combinat.growth.Rules.YoungFibonacci"]], "backward_rule() (sage.combinat.growth.rulebinaryword method)": [[118, "sage.combinat.growth.RuleBinaryWord.backward_rule"]], "backward_rule() (sage.combinat.growth.ruleburge method)": [[118, "sage.combinat.growth.RuleBurge.backward_rule"]], "backward_rule() (sage.combinat.growth.rulersk method)": [[118, "sage.combinat.growth.RuleRSK.backward_rule"]], "backward_rule() (sage.combinat.growth.ruleshiftedshapes method)": [[118, "sage.combinat.growth.RuleShiftedShapes.backward_rule"]], "backward_rule() (sage.combinat.growth.rulesylvester method)": [[118, "sage.combinat.growth.RuleSylvester.backward_rule"]], "backward_rule() (sage.combinat.growth.ruleyoungfibonacci method)": [[118, "sage.combinat.growth.RuleYoungFibonacci.backward_rule"]], "conjugate() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.conjugate"]], "filling() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.filling"]], "forward_rule() (sage.combinat.growth.rulebinaryword method)": [[118, "sage.combinat.growth.RuleBinaryWord.forward_rule"]], "forward_rule() (sage.combinat.growth.ruleburge method)": [[118, "sage.combinat.growth.RuleBurge.forward_rule"]], "forward_rule() (sage.combinat.growth.ruledomino method)": [[118, "sage.combinat.growth.RuleDomino.forward_rule"]], "forward_rule() (sage.combinat.growth.rulellms method)": [[118, "sage.combinat.growth.RuleLLMS.forward_rule"]], "forward_rule() (sage.combinat.growth.rulersk method)": [[118, "sage.combinat.growth.RuleRSK.forward_rule"]], "forward_rule() (sage.combinat.growth.ruleshiftedshapes method)": [[118, "sage.combinat.growth.RuleShiftedShapes.forward_rule"]], "forward_rule() (sage.combinat.growth.rulesylvester method)": [[118, "sage.combinat.growth.RuleSylvester.forward_rule"]], "forward_rule() (sage.combinat.growth.ruleyoungfibonacci method)": [[118, "sage.combinat.growth.RuleYoungFibonacci.forward_rule"]], "half_perimeter() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.half_perimeter"]], "has_multiple_edges (sage.combinat.growth.rule attribute)": [[118, "sage.combinat.growth.Rule.has_multiple_edges"]], "has_multiple_edges (sage.combinat.growth.rulellms attribute)": [[118, "sage.combinat.growth.RuleLLMS.has_multiple_edges"]], "has_multiple_edges (sage.combinat.growth.ruleshiftedshapes attribute)": [[118, "sage.combinat.growth.RuleShiftedShapes.has_multiple_edges"]], "in_labels() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.in_labels"]], "is_p_edge() (sage.combinat.growth.rulebinaryword method)": [[118, "sage.combinat.growth.RuleBinaryWord.is_P_edge"]], "is_p_edge() (sage.combinat.growth.ruledomino method)": [[118, "sage.combinat.growth.RuleDomino.is_P_edge"]], "is_p_edge() (sage.combinat.growth.rulellms method)": [[118, "sage.combinat.growth.RuleLLMS.is_P_edge"]], "is_p_edge() (sage.combinat.growth.ruleshiftedshapes method)": [[118, "sage.combinat.growth.RuleShiftedShapes.is_P_edge"]], "is_p_edge() (sage.combinat.growth.rulesylvester method)": [[118, "sage.combinat.growth.RuleSylvester.is_P_edge"]], "is_p_edge() (sage.combinat.growth.ruleyoungfibonacci method)": [[118, "sage.combinat.growth.RuleYoungFibonacci.is_P_edge"]], "is_q_edge() (sage.combinat.growth.rulebinaryword method)": [[118, "sage.combinat.growth.RuleBinaryWord.is_Q_edge"]], "is_q_edge() (sage.combinat.growth.ruledomino method)": [[118, "sage.combinat.growth.RuleDomino.is_Q_edge"]], "is_q_edge() (sage.combinat.growth.rulellms method)": [[118, "sage.combinat.growth.RuleLLMS.is_Q_edge"]], "is_q_edge() (sage.combinat.growth.ruleshiftedshapes method)": [[118, "sage.combinat.growth.RuleShiftedShapes.is_Q_edge"]], "is_q_edge() (sage.combinat.growth.rulesylvester method)": [[118, "sage.combinat.growth.RuleSylvester.is_Q_edge"]], "is_q_edge() (sage.combinat.growth.ruleyoungfibonacci method)": [[118, "sage.combinat.growth.RuleYoungFibonacci.is_Q_edge"]], "is_rectangular() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.is_rectangular"]], "normalize_vertex() (sage.combinat.growth.rule method)": [[118, "sage.combinat.growth.Rule.normalize_vertex"]], "normalize_vertex() (sage.combinat.growth.rulebinaryword method)": [[118, "sage.combinat.growth.RuleBinaryWord.normalize_vertex"]], "normalize_vertex() (sage.combinat.growth.ruledomino method)": [[118, "sage.combinat.growth.RuleDomino.normalize_vertex"]], "normalize_vertex() (sage.combinat.growth.rulellms method)": [[118, "sage.combinat.growth.RuleLLMS.normalize_vertex"]], "normalize_vertex() (sage.combinat.growth.rulepartitions method)": [[118, "sage.combinat.growth.RulePartitions.normalize_vertex"]], "normalize_vertex() (sage.combinat.growth.ruleshiftedshapes method)": [[118, "sage.combinat.growth.RuleShiftedShapes.normalize_vertex"]], "normalize_vertex() (sage.combinat.growth.rulesylvester method)": [[118, "sage.combinat.growth.RuleSylvester.normalize_vertex"]], "normalize_vertex() (sage.combinat.growth.ruleyoungfibonacci method)": [[118, "sage.combinat.growth.RuleYoungFibonacci.normalize_vertex"]], "out_labels() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.out_labels"]], "r (sage.combinat.growth.rule attribute)": [[118, "sage.combinat.growth.Rule.r"]], "r (sage.combinat.growth.ruledomino attribute)": [[118, "sage.combinat.growth.RuleDomino.r"]], "rank() (sage.combinat.growth.rulebinaryword method)": [[118, "sage.combinat.growth.RuleBinaryWord.rank"]], "rank() (sage.combinat.growth.ruledomino method)": [[118, "sage.combinat.growth.RuleDomino.rank"]], "rank() (sage.combinat.growth.rulellms method)": [[118, "sage.combinat.growth.RuleLLMS.rank"]], "rank() (sage.combinat.growth.rulepartitions method)": [[118, "sage.combinat.growth.RulePartitions.rank"]], "rank() (sage.combinat.growth.ruleshiftedshapes method)": [[118, "sage.combinat.growth.RuleShiftedShapes.rank"]], "rank() (sage.combinat.growth.rulesylvester method)": [[118, "sage.combinat.growth.RuleSylvester.rank"]], "rank() (sage.combinat.growth.ruleyoungfibonacci method)": [[118, "sage.combinat.growth.RuleYoungFibonacci.rank"]], "rotate() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.rotate"]], "rules (sage.combinat.growth.growthdiagram attribute)": [[118, "sage.combinat.growth.GrowthDiagram.rules"]], "sage.combinat.growth": [[118, "module-sage.combinat.growth"]], "shape() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.shape"]], "to_biword() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.to_biword"]], "to_word() (sage.combinat.growth.growthdiagram method)": [[118, "sage.combinat.growth.GrowthDiagram.to_word"]], "vertices() (sage.combinat.growth.rulebinaryword method)": [[118, "sage.combinat.growth.RuleBinaryWord.vertices"]], "vertices() (sage.combinat.growth.ruledomino method)": [[118, "sage.combinat.growth.RuleDomino.vertices"]], "vertices() (sage.combinat.growth.rulellms method)": [[118, "sage.combinat.growth.RuleLLMS.vertices"]], "vertices() (sage.combinat.growth.rulepartitions method)": [[118, "sage.combinat.growth.RulePartitions.vertices"]], "vertices() (sage.combinat.growth.ruleshiftedshapes method)": [[118, "sage.combinat.growth.RuleShiftedShapes.vertices"]], "vertices() (sage.combinat.growth.rulesylvester method)": [[118, "sage.combinat.growth.RuleSylvester.vertices"]], "vertices() (sage.combinat.growth.ruleyoungfibonacci method)": [[118, "sage.combinat.growth.RuleYoungFibonacci.vertices"]], "zero (sage.combinat.growth.rulebinaryword attribute)": [[118, "sage.combinat.growth.RuleBinaryWord.zero"]], "zero (sage.combinat.growth.ruledomino attribute)": [[118, "sage.combinat.growth.RuleDomino.zero"]], "zero (sage.combinat.growth.rulepartitions attribute)": [[118, "sage.combinat.growth.RulePartitions.zero"]], "zero (sage.combinat.growth.ruleshiftedshapes attribute)": [[118, "sage.combinat.growth.RuleShiftedShapes.zero"]], "zero (sage.combinat.growth.rulesylvester attribute)": [[118, "sage.combinat.growth.RuleSylvester.zero"]], "zero (sage.combinat.growth.ruleyoungfibonacci attribute)": [[118, "sage.combinat.growth.RuleYoungFibonacci.zero"]], "zero_edge (sage.combinat.growth.rule attribute)": [[118, "sage.combinat.growth.Rule.zero_edge"]], "zero_edge (sage.combinat.growth.rulellms attribute)": [[118, "sage.combinat.growth.RuleLLMS.zero_edge"]], "hall_polynomial() (in module sage.combinat.hall_polynomial)": [[119, "sage.combinat.hall_polynomial.hall_polynomial"]], "sage.combinat.hall_polynomial": [[119, "module-sage.combinat.hall_polynomial"]], "element (sage.combinat.hillman_grassl.weakreverseplanepartitions attribute)": [[120, "sage.combinat.hillman_grassl.WeakReversePlanePartitions.Element"]], "weakreverseplanepartition (class in sage.combinat.hillman_grassl)": [[120, "sage.combinat.hillman_grassl.WeakReversePlanePartition"]], "weakreverseplanepartitions (class in sage.combinat.hillman_grassl)": [[120, "sage.combinat.hillman_grassl.WeakReversePlanePartitions"]], "an_element() (sage.combinat.hillman_grassl.weakreverseplanepartitions method)": [[120, "sage.combinat.hillman_grassl.WeakReversePlanePartitions.an_element"]], "conjugate() (sage.combinat.hillman_grassl.weakreverseplanepartition method)": [[120, "sage.combinat.hillman_grassl.WeakReversePlanePartition.conjugate"]], "hillman_grassl() (in module sage.combinat.hillman_grassl)": [[120, "sage.combinat.hillman_grassl.hillman_grassl"]], "hillman_grassl_inverse() (in module sage.combinat.hillman_grassl)": [[120, "sage.combinat.hillman_grassl.hillman_grassl_inverse"]], "hillman_grassl_inverse() (sage.combinat.hillman_grassl.weakreverseplanepartition method)": [[120, "sage.combinat.hillman_grassl.WeakReversePlanePartition.hillman_grassl_inverse"]], "pak_correspondence() (in module sage.combinat.hillman_grassl)": [[120, "sage.combinat.hillman_grassl.pak_correspondence"]], "pak_correspondence() (sage.combinat.hillman_grassl.weakreverseplanepartition method)": [[120, "sage.combinat.hillman_grassl.WeakReversePlanePartition.pak_correspondence"]], "sage.combinat.hillman_grassl": [[120, "module-sage.combinat.hillman_grassl"]], "sulzgruber_correspondence() (in module sage.combinat.hillman_grassl)": [[120, "sage.combinat.hillman_grassl.sulzgruber_correspondence"]], "transpose() (in module sage.combinat.hillman_grassl)": [[120, "sage.combinat.hillman_grassl.transpose"]], "envelope (class in sage.combinat.integer_lists.base)": [[121, "sage.combinat.integer_lists.base.Envelope"]], "integerlistsbackend (class in sage.combinat.integer_lists.base)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend"]], "adapt() (sage.combinat.integer_lists.base.envelope method)": [[121, "sage.combinat.integer_lists.base.Envelope.adapt"]], "ceiling (sage.combinat.integer_lists.base.integerlistsbackend attribute)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend.ceiling"]], "floor (sage.combinat.integer_lists.base.integerlistsbackend attribute)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend.floor"]], "limit() (sage.combinat.integer_lists.base.envelope method)": [[121, "sage.combinat.integer_lists.base.Envelope.limit"]], "limit_start() (sage.combinat.integer_lists.base.envelope method)": [[121, "sage.combinat.integer_lists.base.Envelope.limit_start"]], "max_length (sage.combinat.integer_lists.base.integerlistsbackend attribute)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend.max_length"]], "max_part (sage.combinat.integer_lists.base.envelope attribute)": [[121, "sage.combinat.integer_lists.base.Envelope.max_part"]], "max_part (sage.combinat.integer_lists.base.integerlistsbackend attribute)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend.max_part"]], "max_slope (sage.combinat.integer_lists.base.envelope attribute)": [[121, "sage.combinat.integer_lists.base.Envelope.max_slope"]], "max_slope (sage.combinat.integer_lists.base.integerlistsbackend attribute)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend.max_slope"]], "max_sum (sage.combinat.integer_lists.base.integerlistsbackend attribute)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend.max_sum"]], "min_length (sage.combinat.integer_lists.base.integerlistsbackend attribute)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend.min_length"]], "min_part (sage.combinat.integer_lists.base.integerlistsbackend attribute)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend.min_part"]], "min_slope (sage.combinat.integer_lists.base.envelope attribute)": [[121, "sage.combinat.integer_lists.base.Envelope.min_slope"]], "min_slope (sage.combinat.integer_lists.base.integerlistsbackend attribute)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend.min_slope"]], "min_sum (sage.combinat.integer_lists.base.integerlistsbackend attribute)": [[121, "sage.combinat.integer_lists.base.IntegerListsBackend.min_sum"]], "sage.combinat.integer_lists.base": [[121, "module-sage.combinat.integer_lists.base"]], "sign (sage.combinat.integer_lists.base.envelope attribute)": [[121, "sage.combinat.integer_lists.base.Envelope.sign"]], "integerlistsbackend_invlex (class in sage.combinat.integer_lists.invlex)": [[122, "sage.combinat.integer_lists.invlex.IntegerListsBackend_invlex"]], "integerlistslex (class in sage.combinat.integer_lists.invlex)": [[122, "sage.combinat.integer_lists.invlex.IntegerListsLex"]], "integerlistslexiter (class in sage.combinat.integer_lists.invlex)": [[122, "sage.combinat.integer_lists.invlex.IntegerListsLexIter"]], "backend_class (sage.combinat.integer_lists.invlex.integerlistslex attribute)": [[122, "sage.combinat.integer_lists.invlex.IntegerListsLex.backend_class"]], "check (sage.combinat.integer_lists.invlex.integerlistsbackend_invlex attribute)": [[122, "sage.combinat.integer_lists.invlex.IntegerListsBackend_invlex.check"]], "sage.combinat.integer_lists.invlex": [[122, "module-sage.combinat.integer_lists.invlex"]], "element (sage.combinat.integer_lists.lists.integerlists attribute)": [[123, "sage.combinat.integer_lists.lists.IntegerLists.Element"]], "integerlist (class in sage.combinat.integer_lists.lists)": [[123, "sage.combinat.integer_lists.lists.IntegerList"]], "integerlists (class in sage.combinat.integer_lists.lists)": [[123, "sage.combinat.integer_lists.lists.IntegerLists"]], "backend (sage.combinat.integer_lists.lists.integerlists attribute)": [[123, "sage.combinat.integer_lists.lists.IntegerLists.backend"]], "backend_class (sage.combinat.integer_lists.lists.integerlists attribute)": [[123, "sage.combinat.integer_lists.lists.IntegerLists.backend_class"]], "check() (sage.combinat.integer_lists.lists.integerlist method)": [[123, "sage.combinat.integer_lists.lists.IntegerList.check"]], "sage.combinat.integer_lists.lists": [[123, "module-sage.combinat.integer_lists.lists"]], "integermatrices (class in sage.combinat.integer_matrices)": [[124, "sage.combinat.integer_matrices.IntegerMatrices"]], "cardinality() (sage.combinat.integer_matrices.integermatrices method)": [[124, "sage.combinat.integer_matrices.IntegerMatrices.cardinality"]], "column_sums() (sage.combinat.integer_matrices.integermatrices method)": [[124, "sage.combinat.integer_matrices.IntegerMatrices.column_sums"]], "integer_matrices_generator() (in module sage.combinat.integer_matrices)": [[124, "sage.combinat.integer_matrices.integer_matrices_generator"]], "row_sums() (sage.combinat.integer_matrices.integermatrices method)": [[124, "sage.combinat.integer_matrices.IntegerMatrices.row_sums"]], "sage.combinat.integer_matrices": [[124, "module-sage.combinat.integer_matrices"]], "to_composition() (sage.combinat.integer_matrices.integermatrices method)": [[124, "sage.combinat.integer_matrices.IntegerMatrices.to_composition"]], "element (sage.combinat.integer_vector.integervectors attribute)": [[125, "sage.combinat.integer_vector.IntegerVectors.Element"]], "integervector (class in sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.IntegerVector"]], "integervectors (class in sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.IntegerVectors"]], "integervectorsconstraints (class in sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.IntegerVectorsConstraints"]], "integervectors_all (class in sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.IntegerVectors_all"]], "integervectors_k (class in sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.IntegerVectors_k"]], "integervectors_n (class in sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.IntegerVectors_n"]], "integervectors_nk (class in sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.IntegerVectors_nk"]], "integervectors_nnondescents (class in sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.IntegerVectors_nnondescents"]], "cardinality() (sage.combinat.integer_vector.integervectorsconstraints method)": [[125, "sage.combinat.integer_vector.IntegerVectorsConstraints.cardinality"]], "check() (sage.combinat.integer_vector.integervector method)": [[125, "sage.combinat.integer_vector.IntegerVector.check"]], "gale_ryser_theorem() (in module sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.gale_ryser_theorem"]], "integer_vectors_nk_fast_iter() (in module sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.integer_vectors_nk_fast_iter"]], "is_gale_ryser() (in module sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.is_gale_ryser"]], "list2func() (in module sage.combinat.integer_vector)": [[125, "sage.combinat.integer_vector.list2func"]], "rank() (sage.combinat.integer_vector.integervectors_nk method)": [[125, "sage.combinat.integer_vector.IntegerVectors_nk.rank"]], "sage.combinat.integer_vector": [[125, "module-sage.combinat.integer_vector"]], "trim() (sage.combinat.integer_vector.integervector method)": [[125, "sage.combinat.integer_vector.IntegerVector.trim"]], "element (sage.combinat.integer_vector_weighted.weightedintegervectors attribute)": [[126, "sage.combinat.integer_vector_weighted.WeightedIntegerVectors.Element"]], "weightedintegervectors (class in sage.combinat.integer_vector_weighted)": [[126, "sage.combinat.integer_vector_weighted.WeightedIntegerVectors"]], "weightedintegervectors_all (class in sage.combinat.integer_vector_weighted)": [[126, "sage.combinat.integer_vector_weighted.WeightedIntegerVectors_all"]], "grading() (sage.combinat.integer_vector_weighted.weightedintegervectors_all method)": [[126, "sage.combinat.integer_vector_weighted.WeightedIntegerVectors_all.grading"]], "iterator_fast() (in module sage.combinat.integer_vector_weighted)": [[126, "sage.combinat.integer_vector_weighted.iterator_fast"]], "sage.combinat.integer_vector_weighted": [[126, "module-sage.combinat.integer_vector_weighted"]], "subset() (sage.combinat.integer_vector_weighted.weightedintegervectors_all method)": [[126, "sage.combinat.integer_vector_weighted.WeightedIntegerVectors_all.subset"]], "integervectorsmodpermutationgroup (class in sage.combinat.integer_vectors_mod_permgroup)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup"]], "integervectorsmodpermutationgroup_all (class in sage.combinat.integer_vectors_mod_permgroup)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All"]], "integervectorsmodpermutationgroup_all.element (class in sage.combinat.integer_vectors_mod_permgroup)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.Element"]], "integervectorsmodpermutationgroup_with_constraints (class in sage.combinat.integer_vectors_mod_permgroup)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints"]], "integervectorsmodpermutationgroup_with_constraints.element (class in sage.combinat.integer_vectors_mod_permgroup)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.Element"]], "ambient() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_all method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.ambient"]], "ambient() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_with_constraints method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.ambient"]], "an_element() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_with_constraints method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.an_element"]], "check() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_all.element method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.Element.check"]], "check() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_with_constraints.element method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.Element.check"]], "children() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_all method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.children"]], "children() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_with_constraints method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.children"]], "is_canonical() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_all method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.is_canonical"]], "is_canonical() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_with_constraints method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.is_canonical"]], "lift() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_all method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.lift"]], "lift() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_with_constraints method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.lift"]], "orbit() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_all method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.orbit"]], "orbit() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_with_constraints method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.orbit"]], "permutation_group() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_all method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.permutation_group"]], "permutation_group() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_with_constraints method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.permutation_group"]], "retract() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_all method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.retract"]], "retract() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_with_constraints method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.retract"]], "roots() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_all method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.roots"]], "roots() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_with_constraints method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_with_constraints.roots"]], "sage.combinat.integer_vectors_mod_permgroup": [[127, "module-sage.combinat.integer_vectors_mod_permgroup"]], "subset() (sage.combinat.integer_vectors_mod_permgroup.integervectorsmodpermutationgroup_all method)": [[127, "sage.combinat.integer_vectors_mod_permgroup.IntegerVectorsModPermutationGroup_All.subset"]], "element (sage.combinat.interval_posets.tamariintervalposets_all attribute)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets_all.Element"]], "tip (in module sage.combinat.interval_posets)": [[128, "sage.combinat.interval_posets.TIP"]], "tamariintervalposet (class in sage.combinat.interval_posets)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset"]], "tamariintervalposets (class in sage.combinat.interval_posets)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets"]], "tamariintervalposets_all (class in sage.combinat.interval_posets)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets_all"]], "tamariintervalposets_size (class in sage.combinat.interval_posets)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets_size"]], "binary_trees() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.binary_trees"]], "cardinality() (sage.combinat.interval_posets.tamariintervalposets_size method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets_size.cardinality"]], "check_poset() (sage.combinat.interval_posets.tamariintervalposets static method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets.check_poset"]], "complement() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.complement"]], "contains_binary_tree() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.contains_binary_tree"]], "contains_dyck_word() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.contains_dyck_word"]], "contains_interval() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.contains_interval"]], "cubical_coordinates() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.cubical_coordinates"]], "decomposition_to_triple() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.decomposition_to_triple"]], "decreasing_children() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.decreasing_children"]], "decreasing_cover_relations() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.decreasing_cover_relations"]], "decreasing_parent() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.decreasing_parent"]], "decreasing_roots() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.decreasing_roots"]], "dyck_words() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.dyck_words"]], "element_class() (sage.combinat.interval_posets.tamariintervalposets_size method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets_size.element_class"]], "factor() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.factor"]], "final_forest() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.final_forest"]], "final_forest() (sage.combinat.interval_posets.tamariintervalposets static method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets.final_forest"]], "from_binary_trees() (sage.combinat.interval_posets.tamariintervalposets static method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets.from_binary_trees"]], "from_dyck_words() (sage.combinat.interval_posets.tamariintervalposets static method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets.from_dyck_words"]], "from_grafting_tree() (sage.combinat.interval_posets.tamariintervalposets static method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets.from_grafting_tree"]], "from_minimal_schnyder_wood() (sage.combinat.interval_posets.tamariintervalposets static method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets.from_minimal_schnyder_wood"]], "ge() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.ge"]], "grafting_tree() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.grafting_tree"]], "gt() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.gt"]], "increasing_children() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.increasing_children"]], "increasing_cover_relations() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.increasing_cover_relations"]], "increasing_parent() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.increasing_parent"]], "increasing_roots() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.increasing_roots"]], "initial_forest() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.initial_forest"]], "initial_forest() (sage.combinat.interval_posets.tamariintervalposets static method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets.initial_forest"]], "insertion() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.insertion"]], "intersection() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.intersection"]], "interval_cardinality() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.interval_cardinality"]], "is_connected() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_connected"]], "is_dexter() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_dexter"]], "is_exceptional() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_exceptional"]], "is_final_interval() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_final_interval"]], "is_indecomposable() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_indecomposable"]], "is_infinitely_modern() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_infinitely_modern"]], "is_initial_interval() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_initial_interval"]], "is_linear_extension() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_linear_extension"]], "is_modern() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_modern"]], "is_new() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_new"]], "is_simple() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_simple"]], "is_synchronized() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.is_synchronized"]], "latex_options() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.latex_options"]], "le() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.le"]], "le() (sage.combinat.interval_posets.tamariintervalposets method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets.le"]], "left_branch_involution() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.left_branch_involution"]], "linear_extensions() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.linear_extensions"]], "lower_binary_tree() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.lower_binary_tree"]], "lower_contained_intervals() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.lower_contained_intervals"]], "lower_contains_interval() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.lower_contains_interval"]], "lower_dyck_word() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.lower_dyck_word"]], "lt() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.lt"]], "max_linear_extension() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.max_linear_extension"]], "maximal_chain_binary_trees() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.maximal_chain_binary_trees"]], "maximal_chain_dyck_words() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.maximal_chain_dyck_words"]], "maximal_chain_tamari_intervals() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.maximal_chain_tamari_intervals"]], "min_linear_extension() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.min_linear_extension"]], "new_decomposition() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.new_decomposition"]], "number_of_new_components() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.number_of_new_components"]], "number_of_tamari_inversions() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.number_of_tamari_inversions"]], "one() (sage.combinat.interval_posets.tamariintervalposets_all method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets_all.one"]], "options (sage.combinat.interval_posets.tamariintervalposets attribute)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets.options"]], "plot() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.plot"]], "poset() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.poset"]], "random_element() (sage.combinat.interval_posets.tamariintervalposets_size method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets_size.random_element"]], "recomposition_from_triple() (sage.combinat.interval_posets.tamariintervalposets static method)": [[128, "sage.combinat.interval_posets.TamariIntervalPosets.recomposition_from_triple"]], "rise_contact_involution() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.rise_contact_involution"]], "sage.combinat.interval_posets": [[128, "module-sage.combinat.interval_posets"]], "set_latex_options() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.set_latex_options"]], "size() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.size"]], "sub_poset() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.sub_poset"]], "subposet() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.subposet"]], "tamari_inversions() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.tamari_inversions"]], "tamari_inversions_iter() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.tamari_inversions_iter"]], "upper_binary_tree() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.upper_binary_tree"]], "upper_contains_interval() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.upper_contains_interval"]], "upper_dyck_word() (sage.combinat.interval_posets.tamariintervalposet method)": [[128, "sage.combinat.interval_posets.TamariIntervalPoset.upper_dyck_word"]], "element (sage.combinat.k_regular_sequence.kregularsequencespace attribute)": [[129, "sage.combinat.k_regular_sequence.kRegularSequenceSpace.Element"]], "recurrenceparser (class in sage.combinat.k_regular_sequence)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser"]], "backward_differences() (sage.combinat.k_regular_sequence.kregularsequence method)": [[129, "sage.combinat.k_regular_sequence.kRegularSequence.backward_differences"]], "forward_differences() (sage.combinat.k_regular_sequence.kregularsequence method)": [[129, "sage.combinat.k_regular_sequence.kRegularSequence.forward_differences"]], "from_recurrence() (sage.combinat.k_regular_sequence.kregularsequencespace method)": [[129, "sage.combinat.k_regular_sequence.kRegularSequenceSpace.from_recurrence"]], "ind() (sage.combinat.k_regular_sequence.recurrenceparser method)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser.ind"]], "kregularsequence (class in sage.combinat.k_regular_sequence)": [[129, "sage.combinat.k_regular_sequence.kRegularSequence"]], "kregularsequencespace (class in sage.combinat.k_regular_sequence)": [[129, "sage.combinat.k_regular_sequence.kRegularSequenceSpace"]], "left() (sage.combinat.k_regular_sequence.recurrenceparser method)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser.left"]], "matrix() (sage.combinat.k_regular_sequence.recurrenceparser method)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser.matrix"]], "parameters() (sage.combinat.k_regular_sequence.recurrenceparser method)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser.parameters"]], "parse_direct_arguments() (sage.combinat.k_regular_sequence.recurrenceparser method)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser.parse_direct_arguments"]], "parse_recurrence() (sage.combinat.k_regular_sequence.recurrenceparser method)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser.parse_recurrence"]], "partial_sums() (sage.combinat.k_regular_sequence.kregularsequence method)": [[129, "sage.combinat.k_regular_sequence.kRegularSequence.partial_sums"]], "right() (sage.combinat.k_regular_sequence.recurrenceparser method)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser.right"]], "sage.combinat.k_regular_sequence": [[129, "module-sage.combinat.k_regular_sequence"]], "shift_left() (sage.combinat.k_regular_sequence.kregularsequence method)": [[129, "sage.combinat.k_regular_sequence.kRegularSequence.shift_left"]], "shift_right() (sage.combinat.k_regular_sequence.kregularsequence method)": [[129, "sage.combinat.k_regular_sequence.kRegularSequence.shift_right"]], "shifted_inhomogeneities() (sage.combinat.k_regular_sequence.recurrenceparser method)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser.shifted_inhomogeneities"]], "subsequence() (sage.combinat.k_regular_sequence.kregularsequence method)": [[129, "sage.combinat.k_regular_sequence.kRegularSequence.subsequence"]], "v_eval_n() (sage.combinat.k_regular_sequence.recurrenceparser method)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser.v_eval_n"]], "values() (sage.combinat.k_regular_sequence.recurrenceparser method)": [[129, "sage.combinat.k_regular_sequence.RecurrenceParser.values"]], "element (sage.combinat.k_tableau.strongtableaux attribute)": [[130, "sage.combinat.k_tableau.StrongTableaux.Element"]], "element (sage.combinat.k_tableau.weaktableaux_bounded attribute)": [[130, "sage.combinat.k_tableau.WeakTableaux_bounded.Element"]], "element (sage.combinat.k_tableau.weaktableaux_core attribute)": [[130, "sage.combinat.k_tableau.WeakTableaux_core.Element"]], "element (sage.combinat.k_tableau.weaktableaux_factorized_permutation attribute)": [[130, "sage.combinat.k_tableau.WeakTableaux_factorized_permutation.Element"]], "strongtableau (class in sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.StrongTableau"]], "strongtableaux (class in sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.StrongTableaux"]], "weaktableau() (in module sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.WeakTableau"]], "weaktableau_abstract (class in sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.WeakTableau_abstract"]], "weaktableau_bounded (class in sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.WeakTableau_bounded"]], "weaktableau_core (class in sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.WeakTableau_core"]], "weaktableau_factorized_permutation (class in sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.WeakTableau_factorized_permutation"]], "weaktableaux() (in module sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.WeakTableaux"]], "weaktableaux_abstract (class in sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.WeakTableaux_abstract"]], "weaktableaux_bounded (class in sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.WeakTableaux_bounded"]], "weaktableaux_core (class in sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.WeakTableaux_core"]], "weaktableaux_factorized_permutation (class in sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.WeakTableaux_factorized_permutation"]], "add_marking() (sage.combinat.k_tableau.strongtableaux class method)": [[130, "sage.combinat.k_tableau.StrongTableaux.add_marking"]], "an_element() (sage.combinat.k_tableau.strongtableaux method)": [[130, "sage.combinat.k_tableau.StrongTableaux.an_element"]], "cell_of_highest_head() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.cell_of_highest_head"]], "cell_of_marked_head() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.cell_of_marked_head"]], "cells_head_dictionary() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.cells_head_dictionary"]], "cells_head_dictionary() (sage.combinat.k_tableau.strongtableaux class method)": [[130, "sage.combinat.k_tableau.StrongTableaux.cells_head_dictionary"]], "cells_of_heads() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.cells_of_heads"]], "cells_of_marked_ribbon() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.cells_of_marked_ribbon"]], "check() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.check"]], "check() (sage.combinat.k_tableau.weaktableau_bounded method)": [[130, "sage.combinat.k_tableau.WeakTableau_bounded.check"]], "check() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.check"]], "check() (sage.combinat.k_tableau.weaktableau_factorized_permutation method)": [[130, "sage.combinat.k_tableau.WeakTableau_factorized_permutation.check"]], "circular_distance() (sage.combinat.k_tableau.weaktableaux_core method)": [[130, "sage.combinat.k_tableau.WeakTableaux_core.circular_distance"]], "content_of_highest_head() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.content_of_highest_head"]], "content_of_marked_head() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.content_of_marked_head"]], "contents_of_heads() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.contents_of_heads"]], "diag() (sage.combinat.k_tableau.weaktableaux_core method)": [[130, "sage.combinat.k_tableau.WeakTableaux_core.diag"]], "dictionary_of_coordinates_at_residues() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.dictionary_of_coordinates_at_residues"]], "entries_by_content() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.entries_by_content"]], "entries_by_content_standard() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.entries_by_content_standard"]], "follows_tableau() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.follows_tableau"]], "follows_tableau_unsigned_standard() (sage.combinat.k_tableau.strongtableaux class method)": [[130, "sage.combinat.k_tableau.StrongTableaux.follows_tableau_unsigned_standard"]], "from_core_tableau() (sage.combinat.k_tableau.weaktableau_bounded class method)": [[130, "sage.combinat.k_tableau.WeakTableau_bounded.from_core_tableau"]], "from_core_tableau() (sage.combinat.k_tableau.weaktableau_factorized_permutation class method)": [[130, "sage.combinat.k_tableau.WeakTableau_factorized_permutation.from_core_tableau"]], "height_of_ribbon() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.height_of_ribbon"]], "inner_shape() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.inner_shape"]], "inner_shape() (sage.combinat.k_tableau.strongtableaux method)": [[130, "sage.combinat.k_tableau.StrongTableaux.inner_shape"]], "intermediate_shapes() (in module sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.intermediate_shapes"]], "intermediate_shapes() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.intermediate_shapes"]], "intermediate_shapes() (sage.combinat.k_tableau.weaktableau_abstract method)": [[130, "sage.combinat.k_tableau.WeakTableau_abstract.intermediate_shapes"]], "is_column_strict_with_weight() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.is_column_strict_with_weight"]], "k_charge() (sage.combinat.k_tableau.weaktableau_bounded method)": [[130, "sage.combinat.k_tableau.WeakTableau_bounded.k_charge"]], "k_charge() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.k_charge"]], "k_charge() (sage.combinat.k_tableau.weaktableau_factorized_permutation method)": [[130, "sage.combinat.k_tableau.WeakTableau_factorized_permutation.k_charge"]], "k_charge_i() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.k_charge_I"]], "k_charge_j() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.k_charge_J"]], "left_action() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.left_action"]], "list_of_standard_cells() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.list_of_standard_cells"]], "marked_cst_to_transposition_sequence() (sage.combinat.k_tableau.strongtableaux class method)": [[130, "sage.combinat.k_tableau.StrongTableaux.marked_CST_to_transposition_sequence"]], "marked_given_unmarked_and_weight_iterator() (sage.combinat.k_tableau.strongtableaux class method)": [[130, "sage.combinat.k_tableau.StrongTableaux.marked_given_unmarked_and_weight_iterator"]], "nabs() (in module sage.combinat.k_tableau)": [[130, "sage.combinat.k_tableau.nabs"]], "number_of_connected_components() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.number_of_connected_components"]], "options (sage.combinat.k_tableau.strongtableaux attribute)": [[130, "sage.combinat.k_tableau.StrongTableaux.options"]], "outer_shape() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.outer_shape"]], "outer_shape() (sage.combinat.k_tableau.strongtableaux method)": [[130, "sage.combinat.k_tableau.StrongTableaux.outer_shape"]], "pp() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.pp"]], "pp() (sage.combinat.k_tableau.weaktableau_abstract method)": [[130, "sage.combinat.k_tableau.WeakTableau_abstract.pp"]], "representation() (sage.combinat.k_tableau.weaktableau_abstract method)": [[130, "sage.combinat.k_tableau.WeakTableau_abstract.representation"]], "representation() (sage.combinat.k_tableau.weaktableaux_abstract method)": [[130, "sage.combinat.k_tableau.WeakTableaux_abstract.representation"]], "residues_of_entries() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.residues_of_entries"]], "restrict() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.restrict"]], "ribbons_above_marked() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.ribbons_above_marked"]], "sage.combinat.k_tableau": [[130, "module-sage.combinat.k_tableau"]], "set_weight() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.set_weight"]], "shape() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.shape"]], "shape() (sage.combinat.k_tableau.strongtableaux method)": [[130, "sage.combinat.k_tableau.StrongTableaux.shape"]], "shape() (sage.combinat.k_tableau.weaktableau_abstract method)": [[130, "sage.combinat.k_tableau.WeakTableau_abstract.shape"]], "shape() (sage.combinat.k_tableau.weaktableaux_abstract method)": [[130, "sage.combinat.k_tableau.WeakTableaux_abstract.shape"]], "shape_bounded() (sage.combinat.k_tableau.weaktableau_bounded method)": [[130, "sage.combinat.k_tableau.WeakTableau_bounded.shape_bounded"]], "shape_bounded() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.shape_bounded"]], "shape_bounded() (sage.combinat.k_tableau.weaktableau_factorized_permutation method)": [[130, "sage.combinat.k_tableau.WeakTableau_factorized_permutation.shape_bounded"]], "shape_core() (sage.combinat.k_tableau.weaktableau_bounded method)": [[130, "sage.combinat.k_tableau.WeakTableau_bounded.shape_core"]], "shape_core() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.shape_core"]], "shape_core() (sage.combinat.k_tableau.weaktableau_factorized_permutation method)": [[130, "sage.combinat.k_tableau.WeakTableau_factorized_permutation.shape_core"]], "size() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.size"]], "size() (sage.combinat.k_tableau.weaktableau_abstract method)": [[130, "sage.combinat.k_tableau.WeakTableau_abstract.size"]], "size() (sage.combinat.k_tableau.weaktableaux_abstract method)": [[130, "sage.combinat.k_tableau.WeakTableaux_abstract.size"]], "spin() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.spin"]], "spin_of_ribbon() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.spin_of_ribbon"]], "standard_marked_iterator() (sage.combinat.k_tableau.strongtableaux class method)": [[130, "sage.combinat.k_tableau.StrongTableaux.standard_marked_iterator"]], "standard_unmarked_iterator() (sage.combinat.k_tableau.strongtableaux class method)": [[130, "sage.combinat.k_tableau.StrongTableaux.standard_unmarked_iterator"]], "straighten_input() (sage.combinat.k_tableau.weaktableau_factorized_permutation static method)": [[130, "sage.combinat.k_tableau.WeakTableau_factorized_permutation.straighten_input"]], "to_bounded_tableau() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.to_bounded_tableau"]], "to_core_tableau() (sage.combinat.k_tableau.weaktableau_bounded method)": [[130, "sage.combinat.k_tableau.WeakTableau_bounded.to_core_tableau"]], "to_core_tableau() (sage.combinat.k_tableau.weaktableau_factorized_permutation method)": [[130, "sage.combinat.k_tableau.WeakTableau_factorized_permutation.to_core_tableau"]], "to_factorized_permutation_tableau() (sage.combinat.k_tableau.weaktableau_core method)": [[130, "sage.combinat.k_tableau.WeakTableau_core.to_factorized_permutation_tableau"]], "to_list() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.to_list"]], "to_standard_list() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.to_standard_list"]], "to_standard_tableau() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.to_standard_tableau"]], "to_transposition_sequence() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.to_transposition_sequence"]], "to_unmarked_list() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.to_unmarked_list"]], "to_unmarked_standard_list() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.to_unmarked_standard_list"]], "transpositions_to_standard_strong() (sage.combinat.k_tableau.strongtableaux class method)": [[130, "sage.combinat.k_tableau.StrongTableaux.transpositions_to_standard_strong"]], "weight() (sage.combinat.k_tableau.strongtableau method)": [[130, "sage.combinat.k_tableau.StrongTableau.weight"]], "weight() (sage.combinat.k_tableau.weaktableau_abstract method)": [[130, "sage.combinat.k_tableau.WeakTableau_abstract.weight"]], "kazhdanlusztigpolynomial (class in sage.combinat.kazhdan_lusztig)": [[131, "sage.combinat.kazhdan_lusztig.KazhdanLusztigPolynomial"]], "p() (sage.combinat.kazhdan_lusztig.kazhdanlusztigpolynomial method)": [[131, "sage.combinat.kazhdan_lusztig.KazhdanLusztigPolynomial.P"]], "r() (sage.combinat.kazhdan_lusztig.kazhdanlusztigpolynomial method)": [[131, "sage.combinat.kazhdan_lusztig.KazhdanLusztigPolynomial.R"]], "r_tilde() (sage.combinat.kazhdan_lusztig.kazhdanlusztigpolynomial method)": [[131, "sage.combinat.kazhdan_lusztig.KazhdanLusztigPolynomial.R_tilde"]], "sage.combinat.kazhdan_lusztig": [[131, "module-sage.combinat.kazhdan_lusztig"]], "bk_pieces() (in module sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.BK_pieces"]], "deltapiece (class in sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.DeltaPiece"]], "ht_grassmannian_pieces() (in module sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.HT_grassmannian_pieces"]], "ht_two_step_pieces() (in module sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.HT_two_step_pieces"]], "h_grassmannian_pieces() (in module sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.H_grassmannian_pieces"]], "h_two_step_pieces() (in module sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.H_two_step_pieces"]], "k_grassmannian_pieces() (in module sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.K_grassmannian_pieces"]], "knutsontaopuzzlesolver (class in sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.KnutsonTaoPuzzleSolver"]], "nablapiece (class in sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.NablaPiece"]], "puzzlefilling (class in sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling"]], "puzzlepiece (class in sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePiece"]], "puzzlepieces (class in sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePieces"]], "rhombuspiece (class in sage.combinat.knutson_tao_puzzles)": [[132, "sage.combinat.knutson_tao_puzzles.RhombusPiece"]], "add_t_piece() (sage.combinat.knutson_tao_puzzles.puzzlepieces method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePieces.add_T_piece"]], "add_forbidden_label() (sage.combinat.knutson_tao_puzzles.puzzlepieces method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePieces.add_forbidden_label"]], "add_piece() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.add_piece"]], "add_piece() (sage.combinat.knutson_tao_puzzles.puzzlepieces method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePieces.add_piece"]], "add_pieces() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.add_pieces"]], "border() (sage.combinat.knutson_tao_puzzles.puzzlepiece method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePiece.border"]], "boundary_deltas() (sage.combinat.knutson_tao_puzzles.puzzlepieces method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePieces.boundary_deltas"]], "clockwise_rotation() (sage.combinat.knutson_tao_puzzles.deltapiece method)": [[132, "sage.combinat.knutson_tao_puzzles.DeltaPiece.clockwise_rotation"]], "clockwise_rotation() (sage.combinat.knutson_tao_puzzles.nablapiece method)": [[132, "sage.combinat.knutson_tao_puzzles.NablaPiece.clockwise_rotation"]], "color() (sage.combinat.knutson_tao_puzzles.puzzlepiece method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePiece.color"]], "contribution() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.contribution"]], "copy() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.copy"]], "delta_pieces() (sage.combinat.knutson_tao_puzzles.puzzlepieces method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePieces.delta_pieces"]], "edge_color() (sage.combinat.knutson_tao_puzzles.puzzlepiece method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePiece.edge_color"]], "edge_label() (sage.combinat.knutson_tao_puzzles.puzzlepiece method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePiece.edge_label"]], "edges() (sage.combinat.knutson_tao_puzzles.deltapiece method)": [[132, "sage.combinat.knutson_tao_puzzles.DeltaPiece.edges"]], "edges() (sage.combinat.knutson_tao_puzzles.nablapiece method)": [[132, "sage.combinat.knutson_tao_puzzles.NablaPiece.edges"]], "edges() (sage.combinat.knutson_tao_puzzles.rhombuspiece method)": [[132, "sage.combinat.knutson_tao_puzzles.RhombusPiece.edges"]], "half_turn_rotation() (sage.combinat.knutson_tao_puzzles.deltapiece method)": [[132, "sage.combinat.knutson_tao_puzzles.DeltaPiece.half_turn_rotation"]], "half_turn_rotation() (sage.combinat.knutson_tao_puzzles.nablapiece method)": [[132, "sage.combinat.knutson_tao_puzzles.NablaPiece.half_turn_rotation"]], "is_completed() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.is_completed"]], "is_in_south_edge() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.is_in_south_edge"]], "kink_coordinates() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.kink_coordinates"]], "nabla_pieces() (sage.combinat.knutson_tao_puzzles.puzzlepieces method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePieces.nabla_pieces"]], "north_east_label_of_kink() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.north_east_label_of_kink"]], "north_piece() (sage.combinat.knutson_tao_puzzles.rhombuspiece method)": [[132, "sage.combinat.knutson_tao_puzzles.RhombusPiece.north_piece"]], "north_west_label_of_kink() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.north_west_label_of_kink"]], "plot() (sage.combinat.knutson_tao_puzzles.knutsontaopuzzlesolver method)": [[132, "sage.combinat.knutson_tao_puzzles.KnutsonTaoPuzzleSolver.plot"]], "plot() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.plot"]], "puzzle_pieces() (sage.combinat.knutson_tao_puzzles.knutsontaopuzzlesolver method)": [[132, "sage.combinat.knutson_tao_puzzles.KnutsonTaoPuzzleSolver.puzzle_pieces"]], "rhombus_pieces() (sage.combinat.knutson_tao_puzzles.puzzlepieces method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzlePieces.rhombus_pieces"]], "sage.combinat.knutson_tao_puzzles": [[132, "module-sage.combinat.knutson_tao_puzzles"]], "solutions() (sage.combinat.knutson_tao_puzzles.knutsontaopuzzlesolver method)": [[132, "sage.combinat.knutson_tao_puzzles.KnutsonTaoPuzzleSolver.solutions"]], "south_labels() (sage.combinat.knutson_tao_puzzles.puzzlefilling method)": [[132, "sage.combinat.knutson_tao_puzzles.PuzzleFilling.south_labels"]], "south_piece() (sage.combinat.knutson_tao_puzzles.rhombuspiece method)": [[132, "sage.combinat.knutson_tao_puzzles.RhombusPiece.south_piece"]], "structure_constants() (sage.combinat.knutson_tao_puzzles.knutsontaopuzzlesolver method)": [[132, "sage.combinat.knutson_tao_puzzles.KnutsonTaoPuzzleSolver.structure_constants"]], "sage.combinat.matrices.all": [[133, "module-sage.combinat.matrices.all"]], "all_solutions() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.all_solutions"]], "dancing_linkswrapper (class in sage.combinat.matrices.dancing_links)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper"]], "dlx_solver() (in module sage.combinat.matrices.dancing_links)": [[134, "sage.combinat.matrices.dancing_links.dlx_solver"]], "get_solution() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.get_solution"]], "make_dlxwrapper() (in module sage.combinat.matrices.dancing_links)": [[134, "sage.combinat.matrices.dancing_links.make_dlxwrapper"]], "ncols() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.ncols"]], "nrows() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.nrows"]], "number_of_solutions() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.number_of_solutions"]], "one_solution() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.one_solution"]], "one_solution_using_milp_solver() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.one_solution_using_milp_solver"]], "one_solution_using_sat_solver() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.one_solution_using_sat_solver"]], "reinitialize() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.reinitialize"]], "restrict() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.restrict"]], "rows() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.rows"]], "sage.combinat.matrices.dancing_links": [[134, "module-sage.combinat.matrices.dancing_links"]], "search() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.search"]], "solutions_iterator() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.solutions_iterator"]], "split() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.split"]], "to_milp() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.to_milp"]], "to_sat_solver() (sage.combinat.matrices.dancing_links.dancing_linkswrapper method)": [[134, "sage.combinat.matrices.dancing_links.dancing_linksWrapper.to_sat_solver"]], "allexactcovers() (in module sage.combinat.matrices.dlxcpp)": [[135, "sage.combinat.matrices.dlxcpp.AllExactCovers"]], "dlxcpp() (in module sage.combinat.matrices.dlxcpp)": [[135, "sage.combinat.matrices.dlxcpp.DLXCPP"]], "oneexactcover() (in module sage.combinat.matrices.dlxcpp)": [[135, "sage.combinat.matrices.dlxcpp.OneExactCover"]], "sage.combinat.matrices.dlxcpp": [[135, "module-sage.combinat.matrices.dlxcpp"]], "gs_skew_hadamard_smallcases() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.GS_skew_hadamard_smallcases"]], "rshcd_324() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.RSHCD_324"]], "construction_four_symbol_delta_code_i() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.construction_four_symbol_delta_code_I"]], "construction_four_symbol_delta_code_ii() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.construction_four_symbol_delta_code_II"]], "four_symbol_delta_code_smallcases() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.four_symbol_delta_code_smallcases"]], "hadamard_matrix() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.hadamard_matrix"]], "hadamard_matrix_156() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.hadamard_matrix_156"]], "hadamard_matrix_cooper_wallis_construction() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.hadamard_matrix_cooper_wallis_construction"]], "hadamard_matrix_cooper_wallis_smallcases() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.hadamard_matrix_cooper_wallis_smallcases"]], "hadamard_matrix_paleyi() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.hadamard_matrix_paleyI"]], "hadamard_matrix_paleyii() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.hadamard_matrix_paleyII"]], "hadamard_matrix_spence_construction() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.hadamard_matrix_spence_construction"]], "hadamard_matrix_turyn_type() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.hadamard_matrix_turyn_type"]], "hadamard_matrix_williamson_type() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.hadamard_matrix_williamson_type"]], "hadamard_matrix_www() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.hadamard_matrix_www"]], "is_hadamard_matrix() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.is_hadamard_matrix"]], "normalise_hadamard() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.normalise_hadamard"]], "regular_symmetric_hadamard_matrix_with_constant_diagonal() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.regular_symmetric_hadamard_matrix_with_constant_diagonal"]], "rshcd_from_close_prime_powers() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.rshcd_from_close_prime_powers"]], "rshcd_from_prime_power_and_conference_matrix() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.rshcd_from_prime_power_and_conference_matrix"]], "sage.combinat.matrices.hadamard_matrix": [[136, "module-sage.combinat.matrices.hadamard_matrix"]], "skew_hadamard_matrix() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.skew_hadamard_matrix"]], "symmetric_conference_matrix() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.symmetric_conference_matrix"]], "szekeres_difference_set_pair() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.szekeres_difference_set_pair"]], "turyn_type_hadamard_matrix_smallcases() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.turyn_type_hadamard_matrix_smallcases"]], "typei_matrix_difference_set() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.typeI_matrix_difference_set"]], "williamson_goethals_seidel_skew_hadamard_matrix() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.williamson_goethals_seidel_skew_hadamard_matrix"]], "williamson_hadamard_matrix_smallcases() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.williamson_hadamard_matrix_smallcases"]], "williamson_type_quadruples_smallcases() (in module sage.combinat.matrices.hadamard_matrix)": [[136, "sage.combinat.matrices.hadamard_matrix.williamson_type_quadruples_smallcases"]], "latinsquare (class in sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.LatinSquare"]], "latinsquare_generator() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.LatinSquare_generator"]], "actual_row_col_sym_sizes() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.actual_row_col_sym_sizes"]], "alternating_group_bitrade_generators() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.alternating_group_bitrade_generators"]], "apply_isotopism() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.apply_isotopism"]], "back_circulant() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.back_circulant"]], "beta1() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.beta1"]], "beta2() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.beta2"]], "beta3() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.beta3"]], "bitrade() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.bitrade"]], "bitrade_from_group() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.bitrade_from_group"]], "cells_map_as_square() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.cells_map_as_square"]], "check_bitrade_generators() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.check_bitrade_generators"]], "clear_cells() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.clear_cells"]], "coin() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.coin"]], "column() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.column"]], "column_containing_sym() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.column_containing_sym"]], "contained_in() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.contained_in"]], "direct_product() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.direct_product"]], "disjoint_mate_dlxcpp_rows_and_map() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.disjoint_mate_dlxcpp_rows_and_map"]], "dlxcpp_find_completions() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.dlxcpp_find_completions"]], "dlxcpp_has_unique_completion() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.dlxcpp_has_unique_completion"]], "dlxcpp_rows_and_map() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.dlxcpp_rows_and_map"]], "dumps() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.dumps"]], "elementary_abelian_2group() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.elementary_abelian_2group"]], "filled_cells_map() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.filled_cells_map"]], "find_disjoint_mates() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.find_disjoint_mates"]], "forward_circulant() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.forward_circulant"]], "gcs() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.gcs"]], "genus() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.genus"]], "group_to_latinsquare() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.group_to_LatinSquare"]], "is_bitrade() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.is_bitrade"]], "is_completable() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.is_completable"]], "is_disjoint() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.is_disjoint"]], "is_empty_column() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.is_empty_column"]], "is_empty_row() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.is_empty_row"]], "is_latin_square() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.is_latin_square"]], "is_partial_latin_square() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.is_partial_latin_square"]], "is_primary_bitrade() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.is_primary_bitrade"]], "is_row_and_col_balanced() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.is_row_and_col_balanced"]], "is_same_shape() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.is_same_shape"]], "is_uniquely_completable() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.is_uniquely_completable"]], "isotopism() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.isotopism"]], "latex() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.latex"]], "list() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.list"]], "ncols() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.ncols"]], "next_conjugate() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.next_conjugate"]], "nr_distinct_symbols() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.nr_distinct_symbols"]], "nr_filled_cells() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.nr_filled_cells"]], "nrows() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.nrows"]], "p3_group_bitrade_generators() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.p3_group_bitrade_generators"]], "permissable_values() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.permissable_values"]], "pq_group_bitrade_generators() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.pq_group_bitrade_generators"]], "random_empty_cell() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.random_empty_cell"]], "row() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.row"]], "row_containing_sym() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.row_containing_sym"]], "sage.combinat.matrices.latin": [[137, "module-sage.combinat.matrices.latin"]], "set_immutable() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.set_immutable"]], "tau1() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.tau1"]], "tau123() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.tau123"]], "tau2() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.tau2"]], "tau3() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.tau3"]], "tau_to_bitrade() (in module sage.combinat.matrices.latin)": [[137, "sage.combinat.matrices.latin.tau_to_bitrade"]], "top_left_empty_cell() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.top_left_empty_cell"]], "vals_in_col() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.vals_in_col"]], "vals_in_row() (sage.combinat.matrices.latin.latinsquare method)": [[137, "sage.combinat.matrices.latin.LatinSquare.vals_in_row"]], "doublylinkedlist (class in sage.combinat.misc)": [[138, "sage.combinat.misc.DoublyLinkedList"]], "iterablefunctioncall (class in sage.combinat.misc)": [[138, "sage.combinat.misc.IterableFunctionCall"]], "check_integer_list_constraints() (in module sage.combinat.misc)": [[138, "sage.combinat.misc.check_integer_list_constraints"]], "head() (sage.combinat.misc.doublylinkedlist method)": [[138, "sage.combinat.misc.DoublyLinkedList.head"]], "hide() (sage.combinat.misc.doublylinkedlist method)": [[138, "sage.combinat.misc.DoublyLinkedList.hide"]], "next() (sage.combinat.misc.doublylinkedlist method)": [[138, "sage.combinat.misc.DoublyLinkedList.next"]], "prev() (sage.combinat.misc.doublylinkedlist method)": [[138, "sage.combinat.misc.DoublyLinkedList.prev"]], "sage.combinat.misc": [[138, "module-sage.combinat.misc"]], "umbral_operation() (in module sage.combinat.misc)": [[138, "sage.combinat.misc.umbral_operation"]], "unhide() (sage.combinat.misc.doublylinkedlist method)": [[138, "sage.combinat.misc.DoublyLinkedList.unhide"]], "element (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionsintosets attribute)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets.Element"]], "minimajcrystal (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.MinimajCrystal"]], "minimajcrystal.element (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.MinimajCrystal.Element"]], "orderedmultisetpartitionintosets (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets"]], "orderedmultisetpartitionsintosets (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets"]], "orderedmultisetpartitionsintosets_x (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_X"]], "orderedmultisetpartitionsintosets_x_constraints (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_X_constraints"]], "orderedmultisetpartitionsintosets_all_constraints (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_all_constraints"]], "orderedmultisetpartitionsintosets_alph_d (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_alph_d"]], "orderedmultisetpartitionsintosets_alph_d_constraints (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_alph_d_constraints"]], "orderedmultisetpartitionsintosets_n (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_n"]], "orderedmultisetpartitionsintosets_n_constraints (class in sage.combinat.multiset_partition_into_sets_ordered)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_n_constraints"]], "cardinality() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionsintosets_x method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_X.cardinality"]], "cardinality() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionsintosets_alph_d method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_alph_d.cardinality"]], "cardinality() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionsintosets_n method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_n.cardinality"]], "check() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.check"]], "deconcatenate() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.deconcatenate"]], "e() (sage.combinat.multiset_partition_into_sets_ordered.minimajcrystal.element method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.MinimajCrystal.Element.e"]], "f() (sage.combinat.multiset_partition_into_sets_ordered.minimajcrystal.element method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.MinimajCrystal.Element.f"]], "fatten() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.fatten"]], "fatter() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.fatter"]], "finer() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.finer"]], "from_tableau() (sage.combinat.multiset_partition_into_sets_ordered.minimajcrystal method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.MinimajCrystal.from_tableau"]], "is_finer() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.is_finer"]], "length() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.length"]], "letters() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.letters"]], "major_index() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.major_index"]], "max_letter() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.max_letter"]], "minimaj() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.minimaj"]], "minimaj_blocks() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.minimaj_blocks"]], "minimaj_word() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.minimaj_word"]], "multiset() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.multiset"]], "order() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.order"]], "random_element() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionsintosets_x method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_X.random_element"]], "random_element() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionsintosets_alph_d method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_alph_d.random_element"]], "random_element() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionsintosets_n method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets_n.random_element"]], "reversal() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.reversal"]], "sage.combinat.multiset_partition_into_sets_ordered": [[139, "module-sage.combinat.multiset_partition_into_sets_ordered"]], "shape_from_cardinality() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.shape_from_cardinality"]], "shape_from_size() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.shape_from_size"]], "shuffle_product() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.shuffle_product"]], "size() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.size"]], "split_blocks() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.split_blocks"]], "subset() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionsintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionsIntoSets.subset"]], "to_tableaux_words() (sage.combinat.multiset_partition_into_sets_ordered.minimajcrystal.element method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.MinimajCrystal.Element.to_tableaux_words"]], "to_tableaux_words() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.to_tableaux_words"]], "val() (sage.combinat.multiset_partition_into_sets_ordered.minimajcrystal method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.MinimajCrystal.val"]], "weight() (sage.combinat.multiset_partition_into_sets_ordered.orderedmultisetpartitionintosets method)": [[139, "sage.combinat.multiset_partition_into_sets_ordered.OrderedMultisetPartitionIntoSets.weight"]], "sage.combinat.ncsf_qsym.all": [[140, "module-sage.combinat.ncsf_qsym.all"]], "coeff_dab() (in module sage.combinat.ncsf_qsym.combinatorics)": [[141, "sage.combinat.ncsf_qsym.combinatorics.coeff_dab"]], "coeff_ell() (in module sage.combinat.ncsf_qsym.combinatorics)": [[141, "sage.combinat.ncsf_qsym.combinatorics.coeff_ell"]], "coeff_lp() (in module sage.combinat.ncsf_qsym.combinatorics)": [[141, "sage.combinat.ncsf_qsym.combinatorics.coeff_lp"]], "coeff_pi() (in module sage.combinat.ncsf_qsym.combinatorics)": [[141, "sage.combinat.ncsf_qsym.combinatorics.coeff_pi"]], "coeff_sp() (in module sage.combinat.ncsf_qsym.combinatorics)": [[141, "sage.combinat.ncsf_qsym.combinatorics.coeff_sp"]], "compositions_order() (in module sage.combinat.ncsf_qsym.combinatorics)": [[141, "sage.combinat.ncsf_qsym.combinatorics.compositions_order"]], "m_to_s_stat() (in module sage.combinat.ncsf_qsym.combinatorics)": [[141, "sage.combinat.ncsf_qsym.combinatorics.m_to_s_stat"]], "number_of_ssrct() (in module sage.combinat.ncsf_qsym.combinatorics)": [[141, "sage.combinat.ncsf_qsym.combinatorics.number_of_SSRCT"]], "number_of_fct() (in module sage.combinat.ncsf_qsym.combinatorics)": [[141, "sage.combinat.ncsf_qsym.combinatorics.number_of_fCT"]], "sage.combinat.ncsf_qsym.combinatorics": [[141, "module-sage.combinat.ncsf_qsym.combinatorics"]], "algebramorphism (class in sage.combinat.ncsf_qsym.generic_basis_code)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.AlgebraMorphism"]], "basesofqsymorncsf (class in sage.combinat.ncsf_qsym.generic_basis_code)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF"]], "basesofqsymorncsf.elementmethods (class in sage.combinat.ncsf_qsym.generic_basis_code)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ElementMethods"]], "basesofqsymorncsf.parentmethods (class in sage.combinat.ncsf_qsym.generic_basis_code)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods"]], "gradedmoduleswithinternalproduct (class in sage.combinat.ncsf_qsym.generic_basis_code)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct"]], "gradedmoduleswithinternalproduct.elementmethods (class in sage.combinat.ncsf_qsym.generic_basis_code)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ElementMethods"]], "gradedmoduleswithinternalproduct.parentmethods (class in sage.combinat.ncsf_qsym.generic_basis_code)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ParentMethods"]], "gradedmoduleswithinternalproduct.realizations (class in sage.combinat.ncsf_qsym.generic_basis_code)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.Realizations"]], "gradedmoduleswithinternalproduct.realizations.parentmethods (class in sage.combinat.ncsf_qsym.generic_basis_code)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.Realizations.ParentMethods"]], "alternating_sum_of_compositions() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.alternating_sum_of_compositions"]], "alternating_sum_of_fatter_compositions() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.alternating_sum_of_fatter_compositions"]], "alternating_sum_of_finer_compositions() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.alternating_sum_of_finer_compositions"]], "counit_on_basis() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.counit_on_basis"]], "degree() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.elementmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ElementMethods.degree"]], "degree_negation() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.elementmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ElementMethods.degree_negation"]], "degree_negation() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.degree_negation"]], "degree_on_basis() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.degree_on_basis"]], "duality_pairing() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.elementmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ElementMethods.duality_pairing"]], "duality_pairing() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.duality_pairing"]], "duality_pairing_by_coercion() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.duality_pairing_by_coercion"]], "duality_pairing_matrix() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.duality_pairing_matrix"]], "internal_product() (sage.combinat.ncsf_qsym.generic_basis_code.gradedmoduleswithinternalproduct.elementmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ElementMethods.internal_product"]], "internal_product() (sage.combinat.ncsf_qsym.generic_basis_code.gradedmoduleswithinternalproduct.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ParentMethods.internal_product"]], "internal_product_by_coercion() (sage.combinat.ncsf_qsym.generic_basis_code.gradedmoduleswithinternalproduct.realizations.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.Realizations.ParentMethods.internal_product_by_coercion"]], "internal_product_on_basis() (sage.combinat.ncsf_qsym.generic_basis_code.gradedmoduleswithinternalproduct.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ParentMethods.internal_product_on_basis"]], "itensor() (sage.combinat.ncsf_qsym.generic_basis_code.gradedmoduleswithinternalproduct.elementmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ElementMethods.itensor"]], "itensor() (sage.combinat.ncsf_qsym.generic_basis_code.gradedmoduleswithinternalproduct.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ParentMethods.itensor"]], "kronecker_product() (sage.combinat.ncsf_qsym.generic_basis_code.gradedmoduleswithinternalproduct.elementmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ElementMethods.kronecker_product"]], "kronecker_product() (sage.combinat.ncsf_qsym.generic_basis_code.gradedmoduleswithinternalproduct.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.ParentMethods.kronecker_product"]], "one_basis() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.one_basis"]], "sage.combinat.ncsf_qsym.generic_basis_code": [[142, "module-sage.combinat.ncsf_qsym.generic_basis_code"]], "skew() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.skew"]], "skew_by() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.elementmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ElementMethods.skew_by"]], "sum_of_fatter_compositions() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.sum_of_fatter_compositions"]], "sum_of_finer_compositions() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.sum_of_finer_compositions"]], "sum_of_partition_rearrangements() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf.parentmethods method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.ParentMethods.sum_of_partition_rearrangements"]], "super_categories() (sage.combinat.ncsf_qsym.generic_basis_code.basesofqsymorncsf method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.BasesOfQSymOrNCSF.super_categories"]], "super_categories() (sage.combinat.ncsf_qsym.generic_basis_code.gradedmoduleswithinternalproduct method)": [[142, "sage.combinat.ncsf_qsym.generic_basis_code.GradedModulesWithInternalProduct.super_categories"]], "i (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.I"]], "l (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.L"]], "noncommutativesymmetricfunctions (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions"]], "noncommutativesymmetricfunctions.bases (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases"]], "noncommutativesymmetricfunctions.bases.elementmethods (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods"]], "noncommutativesymmetricfunctions.bases.parentmethods (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ParentMethods"]], "noncommutativesymmetricfunctions.complete (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Complete"]], "noncommutativesymmetricfunctions.complete.element (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Complete.Element"]], "noncommutativesymmetricfunctions.elementary (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Elementary"]], "noncommutativesymmetricfunctions.elementary.element (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Elementary.Element"]], "noncommutativesymmetricfunctions.immaculate (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Immaculate"]], "noncommutativesymmetricfunctions.immaculate.element (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Immaculate.Element"]], "noncommutativesymmetricfunctions.monomial (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Monomial"]], "noncommutativesymmetricfunctions.multiplicativebases (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases"]], "noncommutativesymmetricfunctions.multiplicativebases.parentmethods (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases.ParentMethods"]], "noncommutativesymmetricfunctions.multiplicativebasesongrouplikeelements (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnGroupLikeElements"]], "noncommutativesymmetricfunctions.multiplicativebasesongrouplikeelements.parentmethods (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnGroupLikeElements.ParentMethods"]], "noncommutativesymmetricfunctions.multiplicativebasesonprimitiveelements (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnPrimitiveElements"]], "noncommutativesymmetricfunctions.multiplicativebasesonprimitiveelements.parentmethods (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnPrimitiveElements.ParentMethods"]], "noncommutativesymmetricfunctions.phi (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Phi"]], "noncommutativesymmetricfunctions.phi.element (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Phi.Element"]], "noncommutativesymmetricfunctions.psi (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Psi"]], "noncommutativesymmetricfunctions.psi.element (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Psi.Element"]], "noncommutativesymmetricfunctions.ribbon (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Ribbon"]], "noncommutativesymmetricfunctions.ribbon.element (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Ribbon.Element"]], "noncommutativesymmetricfunctions.zassenhaus_left (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Zassenhaus_left"]], "noncommutativesymmetricfunctions.zassenhaus_right (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Zassenhaus_right"]], "noncommutativesymmetricfunctions.dualquasisymmetric_schur (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dualQuasisymmetric_Schur"]], "noncommutativesymmetricfunctions.dualyoungquasisymmetric_schur (class in sage.combinat.ncsf_qsym.ncsf)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dualYoungQuasisymmetric_Schur"]], "r (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.R"]], "s (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.S"]], "zl (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.ZL"]], "zr (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.ZR"]], "a_realization() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.a_realization"]], "algebra_generators() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebases.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases.ParentMethods.algebra_generators"]], "algebra_morphism() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebases.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases.ParentMethods.algebra_morphism"]], "antipode() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebases.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases.ParentMethods.antipode"]], "antipode_on_basis() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebasesongrouplikeelements.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnGroupLikeElements.ParentMethods.antipode_on_basis"]], "antipode_on_basis() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.ribbon method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Ribbon.antipode_on_basis"]], "antipode_on_generators() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebasesonprimitiveelements.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnPrimitiveElements.ParentMethods.antipode_on_generators"]], "bernstein_creation_operator() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.bernstein_creation_operator"]], "bernstein_creation_operator() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.immaculate.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Immaculate.Element.bernstein_creation_operator"]], "chi() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.chi"]], "complete (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.complete"]], "coproduct() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebases.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases.ParentMethods.coproduct"]], "coproduct_on_generators() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebasesongrouplikeelements.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnGroupLikeElements.ParentMethods.coproduct_on_generators"]], "coproduct_on_generators() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebasesonprimitiveelements.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnPrimitiveElements.ParentMethods.coproduct_on_generators"]], "dqs (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dQS"]], "dyqs (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dYQS"]], "dual() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dual"]], "dual() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.complete method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Complete.dual"]], "dual() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.immaculate method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Immaculate.dual"]], "dual() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.ribbon method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Ribbon.dual"]], "dual() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.dualquasisymmetric_schur method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dualQuasisymmetric_Schur.dual"]], "dual() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.dualyoungquasisymmetric_schur method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dualYoungQuasisymmetric_Schur.dual"]], "elementary (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.elementary"]], "expand() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.expand"]], "immaculate_function() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ParentMethods.immaculate_function"]], "internal_product_on_basis() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.complete method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Complete.internal_product_on_basis"]], "internal_product_on_basis_by_bracketing() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.psi method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Psi.internal_product_on_basis_by_bracketing"]], "left_padded_kronecker_product() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.left_padded_kronecker_product"]], "monomial (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.monomial"]], "nm (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.nM"]], "omega_involution() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.omega_involution"]], "product_on_basis() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebases.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases.ParentMethods.product_on_basis"]], "product_on_basis() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.ribbon method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Ribbon.product_on_basis"]], "psi_involution() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.psi_involution"]], "psi_involution() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.complete.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Complete.Element.psi_involution"]], "psi_involution() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.elementary.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Elementary.Element.psi_involution"]], "psi_involution() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.phi.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Phi.Element.psi_involution"]], "ribbon (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions attribute)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.ribbon"]], "sage.combinat.ncsf_qsym.ncsf": [[143, "module-sage.combinat.ncsf_qsym.ncsf"]], "star_involution() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.star_involution"]], "star_involution() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.elementary.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Elementary.Element.star_involution"]], "star_involution() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.phi.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Phi.Element.star_involution"]], "star_involution() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.ribbon.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Ribbon.Element.star_involution"]], "super_categories() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.super_categories"]], "super_categories() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebases method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases.super_categories"]], "super_categories() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebasesongrouplikeelements method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnGroupLikeElements.super_categories"]], "super_categories() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebasesonprimitiveelements method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBasesOnPrimitiveElements.super_categories"]], "to_descent_algebra() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.to_descent_algebra"]], "to_fqsym() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.to_fqsym"]], "to_fsym() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.to_fsym"]], "to_ncsym() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.to_ncsym"]], "to_symmetric_function() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.to_symmetric_function"]], "to_symmetric_function() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ParentMethods.to_symmetric_function"]], "to_symmetric_function() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.complete method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Complete.to_symmetric_function"]], "to_symmetric_function() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebases.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases.ParentMethods.to_symmetric_function"]], "to_symmetric_function_on_basis() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ParentMethods.to_symmetric_function_on_basis"]], "to_symmetric_function_on_basis() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.complete method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Complete.to_symmetric_function_on_basis"]], "to_symmetric_function_on_basis() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.ribbon method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Ribbon.to_symmetric_function_on_basis"]], "to_symmetric_function_on_basis() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.dualquasisymmetric_schur method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dualQuasisymmetric_Schur.to_symmetric_function_on_basis"]], "to_symmetric_function_on_basis() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.dualyoungquasisymmetric_schur method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.dualYoungQuasisymmetric_Schur.to_symmetric_function_on_basis"]], "to_symmetric_function_on_generators() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.multiplicativebases.parentmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.MultiplicativeBases.ParentMethods.to_symmetric_function_on_generators"]], "to_symmetric_group_algebra() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.to_symmetric_group_algebra"]], "verschiebung() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.bases.elementmethods method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Bases.ElementMethods.verschiebung"]], "verschiebung() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.elementary.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Elementary.Element.verschiebung"]], "verschiebung() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.phi.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Phi.Element.verschiebung"]], "verschiebung() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.psi.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Psi.Element.verschiebung"]], "verschiebung() (sage.combinat.ncsf_qsym.ncsf.noncommutativesymmetricfunctions.ribbon.element method)": [[143, "sage.combinat.ncsf_qsym.ncsf.NonCommutativeSymmetricFunctions.Ribbon.Element.verschiebung"]], "e (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions attribute)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.E"]], "eulerian() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.parentmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ParentMethods.Eulerian"]], "eulerian() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.fundamental method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental.Eulerian"]], "f (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions attribute)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.F"]], "m (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions attribute)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.M"]], "qs (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions attribute)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.QS"]], "quasisymmetricfunctions (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions"]], "quasisymmetricfunctions.bases (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases"]], "quasisymmetricfunctions.bases.elementmethods (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods"]], "quasisymmetricfunctions.bases.parentmethods (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ParentMethods"]], "quasisymmetricfunctions.essential (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Essential"]], "quasisymmetricfunctions.fundamental (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental"]], "quasisymmetricfunctions.fundamental.element (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental.Element"]], "quasisymmetricfunctions.hazewinkellambda (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.HazewinkelLambda"]], "quasisymmetricfunctions.monomial (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial"]], "quasisymmetricfunctions.monomial.element (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.Element"]], "quasisymmetricfunctions.quasisymmetric_schur (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Quasisymmetric_Schur"]], "quasisymmetricfunctions.young_quasisymmetric_schur (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Young_Quasisymmetric_Schur"]], "quasisymmetricfunctions.dualimmaculate (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.dualImmaculate"]], "quasisymmetricfunctions.phi (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.phi"]], "quasisymmetricfunctions.psi (class in sage.combinat.ncsf_qsym.qsym)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.psi"]], "yqs (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions attribute)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.YQS"]], "a_realization() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.a_realization"]], "antipode_on_basis() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.essential method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Essential.antipode_on_basis"]], "antipode_on_basis() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.fundamental method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental.antipode_on_basis"]], "antipode_on_basis() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.monomial method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.antipode_on_basis"]], "coproduct_on_basis() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.essential method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Essential.coproduct_on_basis"]], "coproduct_on_basis() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.fundamental method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental.coproduct_on_basis"]], "coproduct_on_basis() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.monomial method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.coproduct_on_basis"]], "di (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions attribute)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.dI"]], "dendriform_leq() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.dendriform_leq"]], "dendriform_less() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.dendriform_less"]], "dual() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.dual"]], "dual() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.fundamental method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental.dual"]], "dual() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.monomial method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.dual"]], "dual() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.quasisymmetric_schur method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Quasisymmetric_Schur.dual"]], "expand() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.expand"]], "expand() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.monomial.element method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.Element.expand"]], "frobenius() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.frobenius"]], "from_polynomial() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.from_polynomial"]], "from_polynomial() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.parentmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ParentMethods.from_polynomial"]], "internal_coproduct() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.internal_coproduct"]], "internal_coproduct() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.fundamental.element method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental.Element.internal_coproduct"]], "is_symmetric() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.is_symmetric"]], "is_symmetric() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.monomial.element method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.Element.is_symmetric"]], "kronecker_coproduct() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.kronecker_coproduct"]], "kronecker_coproduct() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.fundamental.element method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental.Element.kronecker_coproduct"]], "lambda_of_monomial() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.monomial method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.lambda_of_monomial"]], "omega_involution() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.omega_involution"]], "product_on_basis() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.essential method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Essential.product_on_basis"]], "product_on_basis() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.hazewinkellambda method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.HazewinkelLambda.product_on_basis"]], "product_on_basis() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.monomial method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.product_on_basis"]], "psi_involution() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.psi_involution"]], "psi_involution() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.monomial.element method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.Element.psi_involution"]], "sage.combinat.ncsf_qsym.qsym": [[144, "module-sage.combinat.ncsf_qsym.qsym"]], "star_involution() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.star_involution"]], "star_involution() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.fundamental.element method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Fundamental.Element.star_involution"]], "super_categories() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.super_categories"]], "to_symmetric_function() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.bases.elementmethods method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Bases.ElementMethods.to_symmetric_function"]], "to_symmetric_function() (sage.combinat.ncsf_qsym.qsym.quasisymmetricfunctions.monomial.element method)": [[144, "sage.combinat.ncsf_qsym.qsym.QuasiSymmetricFunctions.Monomial.Element.to_symmetric_function"]], "sage.combinat.ncsf_qsym.tutorial": [[145, "module-sage.combinat.ncsf_qsym.tutorial"]], "sage.combinat.ncsym.all": [[146, "module-sage.combinat.ncsym.all"]], "multiplicativencsymbases (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.MultiplicativeNCSymBases"]], "multiplicativencsymbases.elementmethods (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.MultiplicativeNCSymBases.ElementMethods"]], "multiplicativencsymbases.parentmethods (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.MultiplicativeNCSymBases.ParentMethods"]], "ncsymbases (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.NCSymBases"]], "ncsymbases.elementmethods (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ElementMethods"]], "ncsymbases.parentmethods (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ParentMethods"]], "ncsymbasis_abstract (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.NCSymBasis_abstract"]], "ncsymdualbases (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.NCSymDualBases"]], "ncsymorncsymdualbases (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases"]], "ncsymorncsymdualbases.elementmethods (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases.ElementMethods"]], "ncsymorncsymdualbases.parentmethods (class in sage.combinat.ncsym.bases)": [[147, "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases.ParentMethods"]], "counit_on_basis() (sage.combinat.ncsym.bases.ncsymorncsymdualbases.parentmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases.ParentMethods.counit_on_basis"]], "duality_pairing() (sage.combinat.ncsym.bases.ncsymorncsymdualbases.elementmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases.ElementMethods.duality_pairing"]], "duality_pairing() (sage.combinat.ncsym.bases.ncsymorncsymdualbases.parentmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases.ParentMethods.duality_pairing"]], "duality_pairing_matrix() (sage.combinat.ncsym.bases.ncsymorncsymdualbases.parentmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases.ParentMethods.duality_pairing_matrix"]], "expand() (sage.combinat.ncsym.bases.ncsymbases.elementmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ElementMethods.expand"]], "from_symmetric_function() (sage.combinat.ncsym.bases.ncsymbases.parentmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ParentMethods.from_symmetric_function"]], "internal_coproduct() (sage.combinat.ncsym.bases.ncsymbases.elementmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ElementMethods.internal_coproduct"]], "internal_coproduct() (sage.combinat.ncsym.bases.ncsymbases.parentmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ParentMethods.internal_coproduct"]], "internal_coproduct_by_coercion() (sage.combinat.ncsym.bases.ncsymbases.parentmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ParentMethods.internal_coproduct_by_coercion"]], "internal_coproduct_on_basis() (sage.combinat.ncsym.bases.ncsymbases.parentmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ParentMethods.internal_coproduct_on_basis"]], "omega() (sage.combinat.ncsym.bases.ncsymbases.elementmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ElementMethods.omega"]], "one_basis() (sage.combinat.ncsym.bases.ncsymorncsymdualbases.parentmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases.ParentMethods.one_basis"]], "primitive() (sage.combinat.ncsym.bases.ncsymbases.parentmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ParentMethods.primitive"]], "product_on_basis() (sage.combinat.ncsym.bases.multiplicativencsymbases.parentmethods method)": [[147, "sage.combinat.ncsym.bases.MultiplicativeNCSymBases.ParentMethods.product_on_basis"]], "sage.combinat.ncsym.bases": [[147, "module-sage.combinat.ncsym.bases"]], "super_categories() (sage.combinat.ncsym.bases.multiplicativencsymbases method)": [[147, "sage.combinat.ncsym.bases.MultiplicativeNCSymBases.super_categories"]], "super_categories() (sage.combinat.ncsym.bases.ncsymbases method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.super_categories"]], "super_categories() (sage.combinat.ncsym.bases.ncsymdualbases method)": [[147, "sage.combinat.ncsym.bases.NCSymDualBases.super_categories"]], "super_categories() (sage.combinat.ncsym.bases.ncsymorncsymdualbases method)": [[147, "sage.combinat.ncsym.bases.NCSymOrNCSymDualBases.super_categories"]], "to_symmetric_function() (sage.combinat.ncsym.bases.ncsymbases.elementmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ElementMethods.to_symmetric_function"]], "to_wqsym() (sage.combinat.ncsym.bases.ncsymbases.elementmethods method)": [[147, "sage.combinat.ncsym.bases.NCSymBases.ElementMethods.to_wqsym"]], "symmetricfunctionsnoncommutingvariablesdual (class in sage.combinat.ncsym.dual)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual"]], "symmetricfunctionsnoncommutingvariablesdual.w (class in sage.combinat.ncsym.dual)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w"]], "symmetricfunctionsnoncommutingvariablesdual.w.element (class in sage.combinat.ncsym.dual)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.Element"]], "a_realization() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.a_realization"]], "antipode_on_basis() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual.w method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.antipode_on_basis"]], "coproduct_on_basis() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual.w method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.coproduct_on_basis"]], "dual() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.dual"]], "dual_basis() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual.w method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.dual_basis"]], "duality_pairing() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual.w method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.duality_pairing"]], "expand() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual.w.element method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.Element.expand"]], "is_symmetric() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual.w.element method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.Element.is_symmetric"]], "product_on_basis() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual.w method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.product_on_basis"]], "sage.combinat.ncsym.dual": [[148, "module-sage.combinat.ncsym.dual"]], "sum_of_partitions() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual.w method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.sum_of_partitions"]], "to_symmetric_function() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual.w method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.to_symmetric_function"]], "to_symmetric_function() (sage.combinat.ncsym.dual.symmetricfunctionsnoncommutingvariablesdual.w.element method)": [[148, "sage.combinat.ncsym.dual.SymmetricFunctionsNonCommutingVariablesDual.w.Element.to_symmetric_function"]], "symmetricfunctionsnoncommutingvariables (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables"]], "symmetricfunctionsnoncommutingvariables.coarse_powersum (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.coarse_powersum"]], "symmetricfunctionsnoncommutingvariables.deformed_coarse_powersum (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.deformed_coarse_powersum"]], "symmetricfunctionsnoncommutingvariables.elementary (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.elementary"]], "symmetricfunctionsnoncommutingvariables.elementary.element (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.elementary.Element"]], "symmetricfunctionsnoncommutingvariables.homogeneous (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.homogeneous"]], "symmetricfunctionsnoncommutingvariables.homogeneous.element (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.homogeneous.Element"]], "symmetricfunctionsnoncommutingvariables.monomial (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial"]], "symmetricfunctionsnoncommutingvariables.monomial.element (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.Element"]], "symmetricfunctionsnoncommutingvariables.powersum (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.powersum"]], "symmetricfunctionsnoncommutingvariables.powersum.element (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.powersum.Element"]], "symmetricfunctionsnoncommutingvariables.supercharacter (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.supercharacter"]], "symmetricfunctionsnoncommutingvariables.x_basis (class in sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.x_basis"]], "a_realization() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.a_realization"]], "antipode_on_basis() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.powersum method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.powersum.antipode_on_basis"]], "chi (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables attribute)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.chi"]], "coproduct_on_basis() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.monomial method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.coproduct_on_basis"]], "coproduct_on_basis() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.powersum method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.powersum.coproduct_on_basis"]], "cp (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables attribute)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.cp"]], "dual() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.dual"]], "dual_basis() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.monomial method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.dual_basis"]], "duality_pairing() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.monomial method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.duality_pairing"]], "e (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables attribute)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.e"]], "expand() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.monomial.element method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.Element.expand"]], "from_symmetric_function() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.monomial method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.from_symmetric_function"]], "h (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables attribute)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.h"]], "internal_coproduct_on_basis() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.monomial method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.internal_coproduct_on_basis"]], "internal_coproduct_on_basis() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.powersum method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.powersum.internal_coproduct_on_basis"]], "m (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables attribute)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.m"]], "matchings() (in module sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.matchings"]], "nesting() (in module sage.combinat.ncsym.ncsym)": [[149, "sage.combinat.ncsym.ncsym.nesting"]], "omega() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.elementary.element method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.elementary.Element.omega"]], "omega() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.homogeneous.element method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.homogeneous.Element.omega"]], "p (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables attribute)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.p"]], "primitive() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.powersum method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.powersum.primitive"]], "product_on_basis() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.monomial method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.product_on_basis"]], "q() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.deformed_coarse_powersum method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.deformed_coarse_powersum.q"]], "q() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.supercharacter method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.supercharacter.q"]], "rho (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables attribute)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.rho"]], "sage.combinat.ncsym.ncsym": [[149, "module-sage.combinat.ncsym.ncsym"]], "sum_of_partitions() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.monomial method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.sum_of_partitions"]], "to_symmetric_function() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.elementary.element method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.elementary.Element.to_symmetric_function"]], "to_symmetric_function() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.homogeneous.element method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.homogeneous.Element.to_symmetric_function"]], "to_symmetric_function() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.monomial.element method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.monomial.Element.to_symmetric_function"]], "to_symmetric_function() (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables.powersum.element method)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.powersum.Element.to_symmetric_function"]], "x (sage.combinat.ncsym.ncsym.symmetricfunctionsnoncommutingvariables attribute)": [[149, "sage.combinat.ncsym.ncsym.SymmetricFunctionsNonCommutingVariables.x"]], "necklaces() (in module sage.combinat.necklace)": [[150, "sage.combinat.necklace.Necklaces"]], "necklaces_evaluation (class in sage.combinat.necklace)": [[150, "sage.combinat.necklace.Necklaces_evaluation"]], "cardinality() (sage.combinat.necklace.necklaces_evaluation method)": [[150, "sage.combinat.necklace.Necklaces_evaluation.cardinality"]], "content() (sage.combinat.necklace.necklaces_evaluation method)": [[150, "sage.combinat.necklace.Necklaces_evaluation.content"]], "sage.combinat.necklace": [[150, "module-sage.combinat.necklace"]], "element (sage.combinat.non_decreasing_parking_function.nondecreasingparkingfunctions_n attribute)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunctions_n.Element"]], "nondecreasingparkingfunction (class in sage.combinat.non_decreasing_parking_function)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunction"]], "nondecreasingparkingfunctions() (in module sage.combinat.non_decreasing_parking_function)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunctions"]], "nondecreasingparkingfunctions_all (class in sage.combinat.non_decreasing_parking_function)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunctions_all"]], "nondecreasingparkingfunctions_n (class in sage.combinat.non_decreasing_parking_function)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunctions_n"]], "cardinality() (sage.combinat.non_decreasing_parking_function.nondecreasingparkingfunctions_n method)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunctions_n.cardinality"]], "from_dyck_word() (sage.combinat.non_decreasing_parking_function.nondecreasingparkingfunction class method)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunction.from_dyck_word"]], "grade() (sage.combinat.non_decreasing_parking_function.nondecreasingparkingfunction method)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunction.grade"]], "graded_component() (sage.combinat.non_decreasing_parking_function.nondecreasingparkingfunctions_all method)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunctions_all.graded_component"]], "is_a() (in module sage.combinat.non_decreasing_parking_function)": [[151, "sage.combinat.non_decreasing_parking_function.is_a"]], "one() (sage.combinat.non_decreasing_parking_function.nondecreasingparkingfunctions_n method)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunctions_n.one"]], "random_element() (sage.combinat.non_decreasing_parking_function.nondecreasingparkingfunctions_n method)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunctions_n.random_element"]], "sage.combinat.non_decreasing_parking_function": [[151, "module-sage.combinat.non_decreasing_parking_function"]], "to_dyck_word() (sage.combinat.non_decreasing_parking_function.nondecreasingparkingfunction method)": [[151, "sage.combinat.non_decreasing_parking_function.NonDecreasingParkingFunction.to_dyck_word"]], "element (sage.combinat.nu_dyck_word.nudyckwords attribute)": [[152, "sage.combinat.nu_dyck_word.NuDyckWords.Element"]], "nudyckword (class in sage.combinat.nu_dyck_word)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord"]], "nudyckwords (class in sage.combinat.nu_dyck_word)": [[152, "sage.combinat.nu_dyck_word.NuDyckWords"]], "can_mutate() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.can_mutate"]], "cardinality() (sage.combinat.nu_dyck_word.nudyckwords method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWords.cardinality"]], "height() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.height"]], "heights() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.heights"]], "horizontal_distance() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.horizontal_distance"]], "latex_options() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.latex_options"]], "length() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.length"]], "mutate() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.mutate"]], "options (sage.combinat.nu_dyck_word.nudyckwords attribute)": [[152, "sage.combinat.nu_dyck_word.NuDyckWords.options"]], "path() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.path"]], "path_weakly_above_other() (in module sage.combinat.nu_dyck_word)": [[152, "sage.combinat.nu_dyck_word.path_weakly_above_other"]], "plot() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.plot"]], "points() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.points"]], "pp() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.pp"]], "pretty_print() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.pretty_print"]], "replace_dyck_char() (in module sage.combinat.nu_dyck_word)": [[152, "sage.combinat.nu_dyck_word.replace_dyck_char"]], "replace_dyck_symbol() (in module sage.combinat.nu_dyck_word)": [[152, "sage.combinat.nu_dyck_word.replace_dyck_symbol"]], "sage.combinat.nu_dyck_word": [[152, "module-sage.combinat.nu_dyck_word"]], "set_latex_options() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.set_latex_options"]], "to_word_path() (in module sage.combinat.nu_dyck_word)": [[152, "sage.combinat.nu_dyck_word.to_word_path"]], "update_ndw_symbols() (in module sage.combinat.nu_dyck_word)": [[152, "sage.combinat.nu_dyck_word.update_ndw_symbols"]], "width() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.width"]], "widths() (sage.combinat.nu_dyck_word.nudyckword method)": [[152, "sage.combinat.nu_dyck_word.NuDyckWord.widths"]], "nutamarilattice() (in module sage.combinat.nu_tamari_lattice)": [[153, "sage.combinat.nu_tamari_lattice.NuTamariLattice"]], "sage.combinat.nu_tamari_lattice": [[153, "module-sage.combinat.nu_tamari_lattice"]], "element (sage.combinat.ordered_tree.labelledorderedtrees attribute)": [[154, "sage.combinat.ordered_tree.LabelledOrderedTrees.Element"]], "element (sage.combinat.ordered_tree.orderedtrees_all attribute)": [[154, "sage.combinat.ordered_tree.OrderedTrees_all.Element"]], "labelledorderedtree (class in sage.combinat.ordered_tree)": [[154, "sage.combinat.ordered_tree.LabelledOrderedTree"]], "labelledorderedtrees (class in sage.combinat.ordered_tree)": [[154, "sage.combinat.ordered_tree.LabelledOrderedTrees"]], "orderedtree (class in sage.combinat.ordered_tree)": [[154, "sage.combinat.ordered_tree.OrderedTree"]], "orderedtrees (class in sage.combinat.ordered_tree)": [[154, "sage.combinat.ordered_tree.OrderedTrees"]], "orderedtrees_all (class in sage.combinat.ordered_tree)": [[154, "sage.combinat.ordered_tree.OrderedTrees_all"]], "orderedtrees_size (class in sage.combinat.ordered_tree)": [[154, "sage.combinat.ordered_tree.OrderedTrees_size"]], "cardinality() (sage.combinat.ordered_tree.labelledorderedtrees method)": [[154, "sage.combinat.ordered_tree.LabelledOrderedTrees.cardinality"]], "cardinality() (sage.combinat.ordered_tree.orderedtrees_size method)": [[154, "sage.combinat.ordered_tree.OrderedTrees_size.cardinality"]], "element_class() (sage.combinat.ordered_tree.orderedtrees_size method)": [[154, "sage.combinat.ordered_tree.OrderedTrees_size.element_class"]], "is_empty() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.is_empty"]], "labelled_trees() (sage.combinat.ordered_tree.labelledorderedtrees method)": [[154, "sage.combinat.ordered_tree.LabelledOrderedTrees.labelled_trees"]], "labelled_trees() (sage.combinat.ordered_tree.orderedtrees_all method)": [[154, "sage.combinat.ordered_tree.OrderedTrees_all.labelled_trees"]], "leaf() (sage.combinat.ordered_tree.orderedtrees method)": [[154, "sage.combinat.ordered_tree.OrderedTrees.leaf"]], "left_right_symmetry() (sage.combinat.ordered_tree.labelledorderedtree method)": [[154, "sage.combinat.ordered_tree.LabelledOrderedTree.left_right_symmetry"]], "left_right_symmetry() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.left_right_symmetry"]], "normalize() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.normalize"]], "plot() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.plot"]], "random_element() (sage.combinat.ordered_tree.orderedtrees_size method)": [[154, "sage.combinat.ordered_tree.OrderedTrees_size.random_element"]], "sage.combinat.ordered_tree": [[154, "module-sage.combinat.ordered_tree"]], "sort_key() (sage.combinat.ordered_tree.labelledorderedtree method)": [[154, "sage.combinat.ordered_tree.LabelledOrderedTree.sort_key"]], "sort_key() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.sort_key"]], "to_binary_tree_left_branch() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.to_binary_tree_left_branch"]], "to_binary_tree_right_branch() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.to_binary_tree_right_branch"]], "to_dyck_word() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.to_dyck_word"]], "to_parallelogram_polyomino() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.to_parallelogram_polyomino"]], "to_poset() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.to_poset"]], "to_undirected_graph() (sage.combinat.ordered_tree.orderedtree method)": [[154, "sage.combinat.ordered_tree.OrderedTree.to_undirected_graph"]], "unlabelled_trees() (sage.combinat.ordered_tree.labelledorderedtrees method)": [[154, "sage.combinat.ordered_tree.LabelledOrderedTrees.unlabelled_trees"]], "unlabelled_trees() (sage.combinat.ordered_tree.orderedtrees_all method)": [[154, "sage.combinat.ordered_tree.OrderedTrees_all.unlabelled_trees"]], "ascii_art_table() (in module sage.combinat.output)": [[155, "sage.combinat.output.ascii_art_table"]], "sage.combinat.output": [[155, "module-sage.combinat.output"]], "tex_from_array() (in module sage.combinat.output)": [[155, "sage.combinat.output.tex_from_array"]], "tex_from_array_tuple() (in module sage.combinat.output)": [[155, "sage.combinat.output.tex_from_array_tuple"]], "tex_from_skew_array() (in module sage.combinat.output)": [[155, "sage.combinat.output.tex_from_skew_array"]], "localoptions (class in sage.combinat.parallelogram_polyomino)": [[156, "sage.combinat.parallelogram_polyomino.LocalOptions"]], "parallelogrampolyomino (class in sage.combinat.parallelogram_polyomino)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino"]], "parallelogrampolyominoes() (in module sage.combinat.parallelogram_polyomino)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes"]], "parallelogrampolyominoesfactory (class in sage.combinat.parallelogram_polyomino)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoesFactory"]], "parallelogrampolyominoesoptions (in module sage.combinat.parallelogram_polyomino)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoesOptions"]], "parallelogrampolyominoes_all (class in sage.combinat.parallelogram_polyomino)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_all"]], "parallelogrampolyominoes_size (class in sage.combinat.parallelogram_polyomino)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_size"]], "an_element() (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_size method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_size.an_element"]], "area() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.area"]], "bounce() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.bounce"]], "bounce_path() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.bounce_path"]], "box_is_node() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.box_is_node"]], "box_is_root() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.box_is_root"]], "cardinality() (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_size method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_size.cardinality"]], "cell_is_inside() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.cell_is_inside"]], "check() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.check"]], "check_element() (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_all method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_all.check_element"]], "check_element() (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_size method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_size.check_element"]], "default_tikz_options (in module sage.combinat.parallelogram_polyomino)": [[156, "sage.combinat.parallelogram_polyomino.default_tikz_options"]], "degree_convexity() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.degree_convexity"]], "from_dyck_word() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino static method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.from_dyck_word"]], "geometry() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.geometry"]], "get_bs_nodes() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.get_BS_nodes"]], "get_array() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.get_array"]], "get_left_bs_nodes() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.get_left_BS_nodes"]], "get_node_position_from_box() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.get_node_position_from_box"]], "get_options() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.get_options"]], "get_options() (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_all method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_all.get_options"]], "get_options() (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_size method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_size.get_options"]], "get_right_bs_nodes() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.get_right_BS_nodes"]], "get_tikz_options() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.get_tikz_options"]], "height() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.height"]], "heights() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.heights"]], "is_flat() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.is_flat"]], "is_k_directed() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.is_k_directed"]], "keys() (sage.combinat.parallelogram_polyomino.localoptions method)": [[156, "sage.combinat.parallelogram_polyomino.LocalOptions.keys"]], "lower_heights() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.lower_heights"]], "lower_path() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.lower_path"]], "lower_widths() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.lower_widths"]], "options (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_all attribute)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_all.options"]], "options (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_size attribute)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_size.options"]], "plot() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.plot"]], "reflect() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.reflect"]], "rotate() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.rotate"]], "sage.combinat.parallelogram_polyomino": [[156, "module-sage.combinat.parallelogram_polyomino"]], "set_options() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.set_options"]], "set_options() (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_all method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_all.set_options"]], "set_options() (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_size method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_size.set_options"]], "size() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.size"]], "size() (sage.combinat.parallelogram_polyomino.parallelogrampolyominoes_size method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyominoes_size.size"]], "to_binary_tree() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.to_binary_tree"]], "to_dyck_word() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.to_dyck_word"]], "to_ordered_tree() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.to_ordered_tree"]], "to_tikz() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.to_tikz"]], "upper_heights() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.upper_heights"]], "upper_path() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.upper_path"]], "upper_widths() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.upper_widths"]], "width() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.width"]], "widths() (sage.combinat.parallelogram_polyomino.parallelogrampolyomino method)": [[156, "sage.combinat.parallelogram_polyomino.ParallelogramPolyomino.widths"]], "element (sage.combinat.parking_functions.parkingfunctions_all attribute)": [[157, "sage.combinat.parking_functions.ParkingFunctions_all.Element"]], "element (sage.combinat.parking_functions.parkingfunctions_n attribute)": [[157, "sage.combinat.parking_functions.ParkingFunctions_n.Element"]], "pf (in module sage.combinat.parking_functions)": [[157, "sage.combinat.parking_functions.PF"]], "parkingfunction (class in sage.combinat.parking_functions)": [[157, "sage.combinat.parking_functions.ParkingFunction"]], "parkingfunctions (class in sage.combinat.parking_functions)": [[157, "sage.combinat.parking_functions.ParkingFunctions"]], "parkingfunctions_all (class in sage.combinat.parking_functions)": [[157, "sage.combinat.parking_functions.ParkingFunctions_all"]], "parkingfunctions_n (class in sage.combinat.parking_functions)": [[157, "sage.combinat.parking_functions.ParkingFunctions_n"]], "area() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.area"]], "cardinality() (sage.combinat.parking_functions.parkingfunctions_n method)": [[157, "sage.combinat.parking_functions.ParkingFunctions_n.cardinality"]], "cars_permutation() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.cars_permutation"]], "characteristic_quasisymmetric_function() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.characteristic_quasisymmetric_function"]], "check() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.check"]], "diagonal_composition() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.diagonal_composition"]], "diagonal_reading_word() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.diagonal_reading_word"]], "diagonal_word() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.diagonal_word"]], "dinv() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.dinv"]], "dinversion_pairs() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.dinversion_pairs"]], "from_labelled_dyck_word() (in module sage.combinat.parking_functions)": [[157, "sage.combinat.parking_functions.from_labelled_dyck_word"]], "from_labelling_and_area_sequence() (in module sage.combinat.parking_functions)": [[157, "sage.combinat.parking_functions.from_labelling_and_area_sequence"]], "grade() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.grade"]], "graded_component() (sage.combinat.parking_functions.parkingfunctions_all method)": [[157, "sage.combinat.parking_functions.ParkingFunctions_all.graded_component"]], "ides() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.ides"]], "ides_composition() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.ides_composition"]], "is_a() (in module sage.combinat.parking_functions)": [[157, "sage.combinat.parking_functions.is_a"]], "jump() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.jump"]], "jump_list() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.jump_list"]], "luck() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.luck"]], "lucky_cars() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.lucky_cars"]], "parking_permutation() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.parking_permutation"]], "pretty_print() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.pretty_print"]], "primary_dinversion_pairs() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.primary_dinversion_pairs"]], "random_element() (sage.combinat.parking_functions.parkingfunctions_n method)": [[157, "sage.combinat.parking_functions.ParkingFunctions_n.random_element"]], "sage.combinat.parking_functions": [[157, "module-sage.combinat.parking_functions"]], "secondary_dinversion_pairs() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.secondary_dinversion_pairs"]], "to_nondecreasingparkingfunction() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.to_NonDecreasingParkingFunction"]], "to_area_sequence() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.to_area_sequence"]], "to_dyck_word() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.to_dyck_word"]], "to_labelled_dyck_word() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.to_labelled_dyck_word"]], "to_labelling_area_sequence_pair() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.to_labelling_area_sequence_pair"]], "to_labelling_dyck_word_pair() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.to_labelling_dyck_word_pair"]], "to_labelling_permutation() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.to_labelling_permutation"]], "touch_composition() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.touch_composition"]], "touch_points() (sage.combinat.parking_functions.parkingfunction method)": [[157, "sage.combinat.parking_functions.ParkingFunction.touch_points"]], "element (sage.combinat.partition.partitions attribute)": [[158, "sage.combinat.partition.Partitions.Element"]], "element (sage.combinat.partition.partitionsgreatesteq attribute)": [[158, "sage.combinat.partition.PartitionsGreatestEQ.Element"]], "element (sage.combinat.partition.partitionsgreatestle attribute)": [[158, "sage.combinat.partition.PartitionsGreatestLE.Element"]], "element (sage.combinat.partition.partitions_with_constraints attribute)": [[158, "sage.combinat.partition.Partitions_with_constraints.Element"]], "orderedpartitions (class in sage.combinat.partition)": [[158, "sage.combinat.partition.OrderedPartitions"]], "partition (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partition"]], "partitions (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partitions"]], "partitionsgreatesteq (class in sage.combinat.partition)": [[158, "sage.combinat.partition.PartitionsGreatestEQ"]], "partitionsgreatestle (class in sage.combinat.partition)": [[158, "sage.combinat.partition.PartitionsGreatestLE"]], "partitionsinbox (class in sage.combinat.partition)": [[158, "sage.combinat.partition.PartitionsInBox"]], "partitions_all (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partitions_all"]], "partitions_all_bounded (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partitions_all_bounded"]], "partitions_constraints (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partitions_constraints"]], "partitions_ending (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partitions_ending"]], "partitions_n (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partitions_n"]], "partitions_nk (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partitions_nk"]], "partitions_parts_in (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partitions_parts_in"]], "partitions_starting (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partitions_starting"]], "partitions_with_constraints (class in sage.combinat.partition)": [[158, "sage.combinat.partition.Partitions_with_constraints"]], "regularpartitions (class in sage.combinat.partition)": [[158, "sage.combinat.partition.RegularPartitions"]], "regularpartitions_all (class in sage.combinat.partition)": [[158, "sage.combinat.partition.RegularPartitions_all"]], "regularpartitions_bounded (class in sage.combinat.partition)": [[158, "sage.combinat.partition.RegularPartitions_bounded"]], "regularpartitions_n (class in sage.combinat.partition)": [[158, "sage.combinat.partition.RegularPartitions_n"]], "regularpartitions_truncated (class in sage.combinat.partition)": [[158, "sage.combinat.partition.RegularPartitions_truncated"]], "restrictedpartitions_all (class in sage.combinat.partition)": [[158, "sage.combinat.partition.RestrictedPartitions_all"]], "restrictedpartitions_generic (class in sage.combinat.partition)": [[158, "sage.combinat.partition.RestrictedPartitions_generic"]], "restrictedpartitions_n (class in sage.combinat.partition)": [[158, "sage.combinat.partition.RestrictedPartitions_n"]], "add_cell() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.add_cell"]], "add_horizontal_border_strip() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.add_horizontal_border_strip"]], "add_vertical_border_strip() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.add_vertical_border_strip"]], "addable_cells() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.addable_cells"]], "addable_cells_residue() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.addable_cells_residue"]], "arm_cells() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.arm_cells"]], "arm_length() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.arm_length"]], "arm_lengths() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.arm_lengths"]], "arms_legs_coeff() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.arms_legs_coeff"]], "atom() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.atom"]], "attacking_pairs() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.attacking_pairs"]], "aut() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.aut"]], "beta_numbers() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.beta_numbers"]], "block() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.block"]], "boundary() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.boundary"]], "cardinality() (sage.combinat.partition.orderedpartitions method)": [[158, "sage.combinat.partition.OrderedPartitions.cardinality"]], "cardinality() (sage.combinat.partition.partitionsgreatesteq method)": [[158, "sage.combinat.partition.PartitionsGreatestEQ.cardinality"]], "cardinality() (sage.combinat.partition.partitionsgreatestle method)": [[158, "sage.combinat.partition.PartitionsGreatestLE.cardinality"]], "cardinality() (sage.combinat.partition.partitionsinbox method)": [[158, "sage.combinat.partition.PartitionsInBox.cardinality"]], "cardinality() (sage.combinat.partition.partitions_n method)": [[158, "sage.combinat.partition.Partitions_n.cardinality"]], "cardinality() (sage.combinat.partition.partitions_nk method)": [[158, "sage.combinat.partition.Partitions_nk.cardinality"]], "cardinality() (sage.combinat.partition.partitions_parts_in method)": [[158, "sage.combinat.partition.Partitions_parts_in.cardinality"]], "cardinality() (sage.combinat.partition.regularpartitions_n method)": [[158, "sage.combinat.partition.RegularPartitions_n.cardinality"]], "cardinality() (sage.combinat.partition.restrictedpartitions_n method)": [[158, "sage.combinat.partition.RestrictedPartitions_n.cardinality"]], "cell_poset() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.cell_poset"]], "cells() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.cells"]], "centralizer_size() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.centralizer_size"]], "character_polynomial() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.character_polynomial"]], "components() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.components"]], "conjugacy_class_size() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.conjugacy_class_size"]], "conjugate() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.conjugate"]], "contains() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.contains"]], "content() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.content"]], "contents_tableau() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.contents_tableau"]], "core() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.core"]], "corners() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.corners"]], "corners_residue() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.corners_residue"]], "crank() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.crank"]], "defect() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.defect"]], "degree() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.degree"]], "dimension() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.dimension"]], "dominated_partitions() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.dominated_partitions"]], "dominates() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.dominates"]], "down() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.down"]], "down_list() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.down_list"]], "dual_equivalence_graph() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.dual_equivalence_graph"]], "ell() (sage.combinat.partition.regularpartitions method)": [[158, "sage.combinat.partition.RegularPartitions.ell"]], "ell() (sage.combinat.partition.restrictedpartitions_generic method)": [[158, "sage.combinat.partition.RestrictedPartitions_generic.ell"]], "evaluation() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.evaluation"]], "ferrers_diagram() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.ferrers_diagram"]], "first() (sage.combinat.partition.partitions_ending method)": [[158, "sage.combinat.partition.Partitions_ending.first"]], "first() (sage.combinat.partition.partitions_n method)": [[158, "sage.combinat.partition.Partitions_n.first"]], "first() (sage.combinat.partition.partitions_parts_in method)": [[158, "sage.combinat.partition.Partitions_parts_in.first"]], "first() (sage.combinat.partition.partitions_starting method)": [[158, "sage.combinat.partition.Partitions_starting.first"]], "frobenius_coordinates() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.frobenius_coordinates"]], "frobenius_rank() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.frobenius_rank"]], "from_beta_numbers() (sage.combinat.partition.partitions_all method)": [[158, "sage.combinat.partition.Partitions_all.from_beta_numbers"]], "from_core_and_quotient() (sage.combinat.partition.partitions_all method)": [[158, "sage.combinat.partition.Partitions_all.from_core_and_quotient"]], "from_exp() (sage.combinat.partition.partitions_all method)": [[158, "sage.combinat.partition.Partitions_all.from_exp"]], "from_frobenius_coordinates() (sage.combinat.partition.partitions_all method)": [[158, "sage.combinat.partition.Partitions_all.from_frobenius_coordinates"]], "from_kbounded_to_grassmannian() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.from_kbounded_to_grassmannian"]], "from_kbounded_to_reduced_word() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.from_kbounded_to_reduced_word"]], "from_zero_one() (sage.combinat.partition.partitions_all method)": [[158, "sage.combinat.partition.Partitions_all.from_zero_one"]], "garnir_tableau() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.garnir_tableau"]], "generalized_pochhammer_symbol() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.generalized_pochhammer_symbol"]], "get_part() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.get_part"]], "has_k_rectangle() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.has_k_rectangle"]], "has_rectangle() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.has_rectangle"]], "hook_length() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.hook_length"]], "hook_lengths() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.hook_lengths"]], "hook_polynomial() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.hook_polynomial"]], "hook_product() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.hook_product"]], "hooks() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.hooks"]], "horizontal_border_strip_cells() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.horizontal_border_strip_cells"]], "initial_column_tableau() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.initial_column_tableau"]], "initial_tableau() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.initial_tableau"]], "inside_corners() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.inside_corners"]], "inside_corners_residue() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.inside_corners_residue"]], "is_core() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.is_core"]], "is_empty() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.is_empty"]], "is_k_bounded() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.is_k_bounded"]], "is_k_irreducible() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.is_k_irreducible"]], "is_k_reducible() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.is_k_reducible"]], "is_regular() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.is_regular"]], "is_restricted() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.is_restricted"]], "is_symmetric() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.is_symmetric"]], "jacobi_trudi() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.jacobi_trudi"]], "k_atom() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_atom"]], "k_boundary() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_boundary"]], "k_column_lengths() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_column_lengths"]], "k_conjugate() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_conjugate"]], "k_interior() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_interior"]], "k_irreducible() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_irreducible"]], "k_rim() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_rim"]], "k_row_lengths() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_row_lengths"]], "k_size() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_size"]], "k_skew() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_skew"]], "k_split() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.k_split"]], "larger_lex() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.larger_lex"]], "last() (sage.combinat.partition.partitions_n method)": [[158, "sage.combinat.partition.Partitions_n.last"]], "last() (sage.combinat.partition.partitions_parts_in method)": [[158, "sage.combinat.partition.Partitions_parts_in.last"]], "leg_cells() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.leg_cells"]], "leg_length() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.leg_length"]], "leg_lengths() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.leg_lengths"]], "length() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.length"]], "level() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.level"]], "list() (sage.combinat.partition.orderedpartitions method)": [[158, "sage.combinat.partition.OrderedPartitions.list"]], "list() (sage.combinat.partition.partitionsinbox method)": [[158, "sage.combinat.partition.PartitionsInBox.list"]], "lower_hook() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.lower_hook"]], "lower_hook_lengths() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.lower_hook_lengths"]], "max_length() (sage.combinat.partition.regularpartitions_truncated method)": [[158, "sage.combinat.partition.RegularPartitions_truncated.max_length"]], "next() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.next"]], "next() (sage.combinat.partition.partitions_ending method)": [[158, "sage.combinat.partition.Partitions_ending.next"]], "next() (sage.combinat.partition.partitions_n method)": [[158, "sage.combinat.partition.Partitions_n.next"]], "next() (sage.combinat.partition.partitions_starting method)": [[158, "sage.combinat.partition.Partitions_starting.next"]], "next_within_bounds() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.next_within_bounds"]], "number_of_partitions() (in module sage.combinat.partition)": [[158, "sage.combinat.partition.number_of_partitions"]], "number_of_partitions_length() (in module sage.combinat.partition)": [[158, "sage.combinat.partition.number_of_partitions_length"]], "options (sage.combinat.partition.partitions attribute)": [[158, "sage.combinat.partition.Partitions.options"]], "options (sage.combinat.partition.partitionsgreatesteq attribute)": [[158, "sage.combinat.partition.PartitionsGreatestEQ.options"]], "options (sage.combinat.partition.partitionsgreatestle attribute)": [[158, "sage.combinat.partition.PartitionsGreatestLE.options"]], "options (sage.combinat.partition.partitions_with_constraints attribute)": [[158, "sage.combinat.partition.Partitions_with_constraints.options"]], "outer_rim() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.outer_rim"]], "outline() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.outline"]], "outside_corners() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.outside_corners"]], "outside_corners_residue() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.outside_corners_residue"]], "plancherel_measure() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.plancherel_measure"]], "power() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.power"]], "pp() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.pp"]], "prime_degree() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.prime_degree"]], "quotient() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.quotient"]], "random_element() (sage.combinat.partition.partitions_n method)": [[158, "sage.combinat.partition.Partitions_n.random_element"]], "random_element_plancherel() (sage.combinat.partition.partitions_n method)": [[158, "sage.combinat.partition.Partitions_n.random_element_plancherel"]], "random_element_uniform() (sage.combinat.partition.partitions_n method)": [[158, "sage.combinat.partition.Partitions_n.random_element_uniform"]], "reading_tableau() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.reading_tableau"]], "removable_cells() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.removable_cells"]], "removable_cells_residue() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.removable_cells_residue"]], "remove_cell() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.remove_cell"]], "remove_horizontal_border_strip() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.remove_horizontal_border_strip"]], "residue() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.residue"]], "rim() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.rim"]], "row_standard_tableaux() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.row_standard_tableaux"]], "sage.combinat.partition": [[158, "module-sage.combinat.partition"]], "sign() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.sign"]], "size() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.size"]], "standard_tableaux() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.standard_tableaux"]], "stretch() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.stretch"]], "subset() (sage.combinat.partition.partitions method)": [[158, "sage.combinat.partition.Partitions.subset"]], "subset() (sage.combinat.partition.partitions_all method)": [[158, "sage.combinat.partition.Partitions_all.subset"]], "subset() (sage.combinat.partition.partitions_n method)": [[158, "sage.combinat.partition.Partitions_n.subset"]], "subset() (sage.combinat.partition.partitions_nk method)": [[158, "sage.combinat.partition.Partitions_nk.subset"]], "suter_diagonal_slide() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.suter_diagonal_slide"]], "t_completion() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.t_completion"]], "to_core() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.to_core"]], "to_dyck_word() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.to_dyck_word"]], "to_exp() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.to_exp"]], "to_exp_dict() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.to_exp_dict"]], "to_list() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.to_list"]], "top_garnir_tableau() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.top_garnir_tableau"]], "up() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.up"]], "up_list() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.up_list"]], "upper_hook() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.upper_hook"]], "upper_hook_lengths() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.upper_hook_lengths"]], "vertical_border_strip_cells() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.vertical_border_strip_cells"]], "weighted_size() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.weighted_size"]], "young_subgroup() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.young_subgroup"]], "young_subgroup_generators() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.young_subgroup_generators"]], "zero_one_sequence() (sage.combinat.partition.partition method)": [[158, "sage.combinat.partition.Partition.zero_one_sequence"]], "element (sage.combinat.partition_algebra.setpartitionsak_k attribute)": [[159, "sage.combinat.partition_algebra.SetPartitionsAk_k.Element"]], "element (sage.combinat.partition_algebra.setpartitionsakhalf_k attribute)": [[159, "sage.combinat.partition_algebra.SetPartitionsAkhalf_k.Element"]], "partitionalgebraelement_ak (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebraElement_ak"]], "partitionalgebraelement_bk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebraElement_bk"]], "partitionalgebraelement_generic (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebraElement_generic"]], "partitionalgebraelement_pk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebraElement_pk"]], "partitionalgebraelement_prk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebraElement_prk"]], "partitionalgebraelement_rk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebraElement_rk"]], "partitionalgebraelement_sk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebraElement_sk"]], "partitionalgebraelement_tk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebraElement_tk"]], "partitionalgebra_ak (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebra_ak"]], "partitionalgebra_bk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebra_bk"]], "partitionalgebra_generic (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebra_generic"]], "partitionalgebra_pk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebra_pk"]], "partitionalgebra_prk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebra_prk"]], "partitionalgebra_rk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebra_rk"]], "partitionalgebra_sk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebra_sk"]], "partitionalgebra_tk (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.PartitionAlgebra_tk"]], "setpartitionsak() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsAk"]], "setpartitionsak_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsAk_k"]], "setpartitionsakhalf_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsAkhalf_k"]], "setpartitionsbk() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsBk"]], "setpartitionsbk_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsBk_k"]], "setpartitionsbkhalf_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsBkhalf_k"]], "setpartitionsik() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsIk"]], "setpartitionsik_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsIk_k"]], "setpartitionsikhalf_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsIkhalf_k"]], "setpartitionsprk() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsPRk"]], "setpartitionsprk_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsPRk_k"]], "setpartitionsprkhalf_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsPRkhalf_k"]], "setpartitionspk() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsPk"]], "setpartitionspk_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsPk_k"]], "setpartitionspkhalf_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsPkhalf_k"]], "setpartitionsrk() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsRk"]], "setpartitionsrk_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsRk_k"]], "setpartitionsrkhalf_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsRkhalf_k"]], "setpartitionssk() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsSk"]], "setpartitionssk_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsSk_k"]], "setpartitionsskhalf_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsSkhalf_k"]], "setpartitionstk() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsTk"]], "setpartitionstk_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsTk_k"]], "setpartitionstkhalf_k (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsTkhalf_k"]], "setpartitionsxkelement (class in sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.SetPartitionsXkElement"]], "cardinality() (sage.combinat.partition_algebra.setpartitionsbk_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsBk_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionsbkhalf_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsBkhalf_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionsik_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsIk_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionsikhalf_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsIkhalf_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionsprk_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsPRk_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionsprkhalf_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsPRkhalf_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionspk_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsPk_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionspkhalf_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsPkhalf_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionsrk_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsRk_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionsrkhalf_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsRkhalf_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionssk_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsSk_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionsskhalf_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsSkhalf_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionstk_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsTk_k.cardinality"]], "cardinality() (sage.combinat.partition_algebra.setpartitionstkhalf_k method)": [[159, "sage.combinat.partition_algebra.SetPartitionsTkhalf_k.cardinality"]], "check() (sage.combinat.partition_algebra.setpartitionsxkelement method)": [[159, "sage.combinat.partition_algebra.SetPartitionsXkElement.check"]], "identity() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.identity"]], "is_planar() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.is_planar"]], "one_basis() (sage.combinat.partition_algebra.partitionalgebra_generic method)": [[159, "sage.combinat.partition_algebra.PartitionAlgebra_generic.one_basis"]], "pair_to_graph() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.pair_to_graph"]], "product_on_basis() (sage.combinat.partition_algebra.partitionalgebra_generic method)": [[159, "sage.combinat.partition_algebra.PartitionAlgebra_generic.product_on_basis"]], "propagating_number() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.propagating_number"]], "sage.combinat.partition_algebra": [[159, "module-sage.combinat.partition_algebra"]], "set_partition_composition() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.set_partition_composition"]], "to_graph() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.to_graph"]], "to_set_partition() (in module sage.combinat.partition_algebra)": [[159, "sage.combinat.partition_algebra.to_set_partition"]], "element (sage.combinat.partition_kleshchev.kleshchevpartitions_size attribute)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitions_size.Element"]], "epsilon() (sage.combinat.partition_kleshchev.kleshchevcrystalmixin method)": [[160, "sage.combinat.partition_kleshchev.KleshchevCrystalMixin.Epsilon"], [160, "sage.combinat.partition_kleshchev.KleshchevCrystalMixin.epsilon"]], "kleshchevcrystalmixin (class in sage.combinat.partition_kleshchev)": [[160, "sage.combinat.partition_kleshchev.KleshchevCrystalMixin"]], "kleshchevpartition (class in sage.combinat.partition_kleshchev)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartition"]], "kleshchevpartitioncrystal (class in sage.combinat.partition_kleshchev)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionCrystal"]], "kleshchevpartitiontuple (class in sage.combinat.partition_kleshchev)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTuple"]], "kleshchevpartitiontuplecrystal (class in sage.combinat.partition_kleshchev)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTupleCrystal"]], "kleshchevpartitions (class in sage.combinat.partition_kleshchev)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitions"]], "kleshchevpartitions_all (class in sage.combinat.partition_kleshchev)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitions_all"]], "kleshchevpartitions_size (class in sage.combinat.partition_kleshchev)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitions_size"]], "phi() (sage.combinat.partition_kleshchev.kleshchevcrystalmixin method)": [[160, "sage.combinat.partition_kleshchev.KleshchevCrystalMixin.Phi"], [160, "sage.combinat.partition_kleshchev.KleshchevCrystalMixin.phi"]], "cogood_cells() (sage.combinat.partition_kleshchev.kleshchevpartition method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartition.cogood_cells"]], "cogood_cells() (sage.combinat.partition_kleshchev.kleshchevpartitiontuple method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTuple.cogood_cells"]], "conormal_cells() (sage.combinat.partition_kleshchev.kleshchevpartition method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartition.conormal_cells"]], "conormal_cells() (sage.combinat.partition_kleshchev.kleshchevpartitiontuple method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTuple.conormal_cells"]], "convention() (sage.combinat.partition_kleshchev.kleshchevpartitions method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitions.convention"]], "e() (sage.combinat.partition_kleshchev.kleshchevpartitioncrystal method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionCrystal.e"]], "e() (sage.combinat.partition_kleshchev.kleshchevpartitiontuplecrystal method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTupleCrystal.e"]], "f() (sage.combinat.partition_kleshchev.kleshchevpartitioncrystal method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionCrystal.f"]], "f() (sage.combinat.partition_kleshchev.kleshchevpartitiontuplecrystal method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTupleCrystal.f"]], "good_cell_sequence() (sage.combinat.partition_kleshchev.kleshchevpartition method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartition.good_cell_sequence"]], "good_cell_sequence() (sage.combinat.partition_kleshchev.kleshchevpartitiontuple method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTuple.good_cell_sequence"]], "good_cells() (sage.combinat.partition_kleshchev.kleshchevpartition method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartition.good_cells"]], "good_cells() (sage.combinat.partition_kleshchev.kleshchevpartitiontuple method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTuple.good_cells"]], "good_residue_sequence() (sage.combinat.partition_kleshchev.kleshchevpartition method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartition.good_residue_sequence"]], "good_residue_sequence() (sage.combinat.partition_kleshchev.kleshchevpartitiontuple method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTuple.good_residue_sequence"]], "is_regular() (sage.combinat.partition_kleshchev.kleshchevpartition method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartition.is_regular"]], "is_regular() (sage.combinat.partition_kleshchev.kleshchevpartitiontuple method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTuple.is_regular"]], "is_restricted() (sage.combinat.partition_kleshchev.kleshchevpartition method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartition.is_restricted"]], "is_restricted() (sage.combinat.partition_kleshchev.kleshchevpartitiontuple method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTuple.is_restricted"]], "mullineux_conjugate() (sage.combinat.partition_kleshchev.kleshchevpartition method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartition.mullineux_conjugate"]], "mullineux_conjugate() (sage.combinat.partition_kleshchev.kleshchevpartitiontuple method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTuple.mullineux_conjugate"]], "multicharge() (sage.combinat.partition_kleshchev.kleshchevpartitions method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitions.multicharge"]], "normal_cells() (sage.combinat.partition_kleshchev.kleshchevpartition method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartition.normal_cells"]], "normal_cells() (sage.combinat.partition_kleshchev.kleshchevpartitiontuple method)": [[160, "sage.combinat.partition_kleshchev.KleshchevPartitionTuple.normal_cells"]], "sage.combinat.partition_kleshchev": [[160, "module-sage.combinat.partition_kleshchev"]], "weight() (sage.combinat.partition_kleshchev.kleshchevcrystalmixin method)": [[160, "sage.combinat.partition_kleshchev.KleshchevCrystalMixin.weight"]], "shiftingoperatoralgebra (class in sage.combinat.partition_shifting_algebras)": [[161, "sage.combinat.partition_shifting_algebras.ShiftingOperatorAlgebra"]], "shiftingoperatoralgebra.element (class in sage.combinat.partition_shifting_algebras)": [[161, "sage.combinat.partition_shifting_algebras.ShiftingOperatorAlgebra.Element"]], "shiftingsequencespace (class in sage.combinat.partition_shifting_algebras)": [[161, "sage.combinat.partition_shifting_algebras.ShiftingSequenceSpace"]], "build_and_register_conversion() (sage.combinat.partition_shifting_algebras.shiftingoperatoralgebra method)": [[161, "sage.combinat.partition_shifting_algebras.ShiftingOperatorAlgebra.build_and_register_conversion"]], "check() (sage.combinat.partition_shifting_algebras.shiftingsequencespace method)": [[161, "sage.combinat.partition_shifting_algebras.ShiftingSequenceSpace.check"]], "ij() (sage.combinat.partition_shifting_algebras.shiftingoperatoralgebra method)": [[161, "sage.combinat.partition_shifting_algebras.ShiftingOperatorAlgebra.ij"]], "one_basis() (sage.combinat.partition_shifting_algebras.shiftingoperatoralgebra method)": [[161, "sage.combinat.partition_shifting_algebras.ShiftingOperatorAlgebra.one_basis"]], "product_on_basis() (sage.combinat.partition_shifting_algebras.shiftingoperatoralgebra method)": [[161, "sage.combinat.partition_shifting_algebras.ShiftingOperatorAlgebra.product_on_basis"]], "sage.combinat.partition_shifting_algebras": [[161, "module-sage.combinat.partition_shifting_algebras"]], "element (sage.combinat.partition_tuple.partitiontuple attribute)": [[162, "sage.combinat.partition_tuple.PartitionTuple.Element"]], "element (sage.combinat.partition_tuple.partitiontuples attribute)": [[162, "sage.combinat.partition_tuple.PartitionTuples.Element"]], "partitiontuple (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.PartitionTuple"]], "partitiontuples (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.PartitionTuples"]], "partitiontuples_all (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.PartitionTuples_all"]], "partitiontuples_level (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.PartitionTuples_level"]], "partitiontuples_level_size (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.PartitionTuples_level_size"]], "partitiontuples_size (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.PartitionTuples_size"]], "regularpartitiontuples (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.RegularPartitionTuples"]], "regularpartitiontuples_all (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.RegularPartitionTuples_all"]], "regularpartitiontuples_level (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.RegularPartitionTuples_level"]], "regularpartitiontuples_level_size (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.RegularPartitionTuples_level_size"]], "regularpartitiontuples_size (class in sage.combinat.partition_tuple)": [[162, "sage.combinat.partition_tuple.RegularPartitionTuples_size"]], "add_cell() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.add_cell"]], "addable_cells() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.addable_cells"]], "arm_length() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.arm_length"]], "block() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.block"]], "cardinality() (sage.combinat.partition_tuple.partitiontuples_level_size method)": [[162, "sage.combinat.partition_tuple.PartitionTuples_level_size.cardinality"]], "cells() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.cells"]], "components() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.components"]], "conjugate() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.conjugate"]], "contains() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.contains"]], "content() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.content"]], "content_tableau() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.content_tableau"]], "corners() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.corners"]], "defect() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.defect"]], "degree() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.degree"]], "diagram() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.diagram"]], "dominates() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.dominates"]], "down() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.down"]], "down_list() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.down_list"]], "ferrers_diagram() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.ferrers_diagram"]], "garnir_tableau() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.garnir_tableau"]], "hook_length() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.hook_length"]], "initial_column_tableau() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.initial_column_tableau"]], "initial_tableau() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.initial_tableau"]], "leg_length() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.leg_length"]], "level() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.level"]], "level() (sage.combinat.partition_tuple.partitiontuples method)": [[162, "sage.combinat.partition_tuple.PartitionTuples.level"]], "options (sage.combinat.partition_tuple.partitiontuples attribute)": [[162, "sage.combinat.partition_tuple.PartitionTuples.options"]], "outside_corners() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.outside_corners"]], "pp() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.pp"]], "prime_degree() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.prime_degree"]], "removable_cells() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.removable_cells"]], "remove_cell() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.remove_cell"]], "row_standard_tableaux() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.row_standard_tableaux"]], "sage.combinat.partition_tuple": [[162, "module-sage.combinat.partition_tuple"]], "size() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.size"]], "size() (sage.combinat.partition_tuple.partitiontuples method)": [[162, "sage.combinat.partition_tuple.PartitionTuples.size"]], "standard_tableaux() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.standard_tableaux"]], "to_exp() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.to_exp"]], "to_list() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.to_list"]], "top_garnir_tableau() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.top_garnir_tableau"]], "up() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.up"]], "up_list() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.up_list"]], "young_subgroup() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.young_subgroup"]], "young_subgroup_generators() (sage.combinat.partition_tuple.partitiontuple method)": [[162, "sage.combinat.partition_tuple.PartitionTuple.young_subgroup_generators"]], "zs1_iterator() (in module sage.combinat.partitions)": [[163, "sage.combinat.partitions.ZS1_iterator"]], "zs1_iterator_nk() (in module sage.combinat.partitions)": [[163, "sage.combinat.partitions.ZS1_iterator_nk"]], "sage.combinat.partitions": [[163, "module-sage.combinat.partitions"]], "sage.combinat.path_tableaux.catalog": [[164, "module-sage.combinat.path_tableaux.catalog"]], "dyckpath (class in sage.combinat.path_tableaux.dyck_path)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPath"]], "dyckpaths (class in sage.combinat.path_tableaux.dyck_path)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPaths"]], "element (sage.combinat.path_tableaux.dyck_path.dyckpaths attribute)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPaths.Element"]], "check() (sage.combinat.path_tableaux.dyck_path.dyckpath method)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPath.check"]], "descents() (sage.combinat.path_tableaux.dyck_path.dyckpath method)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPath.descents"]], "is_skew() (sage.combinat.path_tableaux.dyck_path.dyckpath method)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPath.is_skew"]], "local_rule() (sage.combinat.path_tableaux.dyck_path.dyckpath method)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPath.local_rule"]], "sage.combinat.path_tableaux.dyck_path": [[165, "module-sage.combinat.path_tableaux.dyck_path"]], "to_dyckword() (sage.combinat.path_tableaux.dyck_path.dyckpath method)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPath.to_DyckWord"]], "to_perfect_matching() (sage.combinat.path_tableaux.dyck_path.dyckpath method)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPath.to_perfect_matching"]], "to_tableau() (sage.combinat.path_tableaux.dyck_path.dyckpath method)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPath.to_tableau"]], "to_word() (sage.combinat.path_tableaux.dyck_path.dyckpath method)": [[165, "sage.combinat.path_tableaux.dyck_path.DyckPath.to_word"]], "element (sage.combinat.path_tableaux.frieze.friezepatterns attribute)": [[166, "sage.combinat.path_tableaux.frieze.FriezePatterns.Element"]], "friezepattern (class in sage.combinat.path_tableaux.frieze)": [[166, "sage.combinat.path_tableaux.frieze.FriezePattern"]], "friezepatterns (class in sage.combinat.path_tableaux.frieze)": [[166, "sage.combinat.path_tableaux.frieze.FriezePatterns"]], "change_ring() (sage.combinat.path_tableaux.frieze.friezepattern method)": [[166, "sage.combinat.path_tableaux.frieze.FriezePattern.change_ring"]], "check() (sage.combinat.path_tableaux.frieze.friezepattern method)": [[166, "sage.combinat.path_tableaux.frieze.FriezePattern.check"]], "is_integral() (sage.combinat.path_tableaux.frieze.friezepattern method)": [[166, "sage.combinat.path_tableaux.frieze.FriezePattern.is_integral"]], "is_positive() (sage.combinat.path_tableaux.frieze.friezepattern method)": [[166, "sage.combinat.path_tableaux.frieze.FriezePattern.is_positive"]], "is_skew() (sage.combinat.path_tableaux.frieze.friezepattern method)": [[166, "sage.combinat.path_tableaux.frieze.FriezePattern.is_skew"]], "local_rule() (sage.combinat.path_tableaux.frieze.friezepattern method)": [[166, "sage.combinat.path_tableaux.frieze.FriezePattern.local_rule"]], "plot() (sage.combinat.path_tableaux.frieze.friezepattern method)": [[166, "sage.combinat.path_tableaux.frieze.FriezePattern.plot"]], "sage.combinat.path_tableaux.frieze": [[166, "module-sage.combinat.path_tableaux.frieze"]], "triangulation() (sage.combinat.path_tableaux.frieze.friezepattern method)": [[166, "sage.combinat.path_tableaux.frieze.FriezePattern.triangulation"]], "width() (sage.combinat.path_tableaux.frieze.friezepattern method)": [[166, "sage.combinat.path_tableaux.frieze.FriezePattern.width"]], "cylindricaldiagram (class in sage.combinat.path_tableaux.path_tableau)": [[167, "sage.combinat.path_tableaux.path_tableau.CylindricalDiagram"]], "pathtableau (class in sage.combinat.path_tableaux.path_tableau)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau"]], "pathtableaux (class in sage.combinat.path_tableaux.path_tableau)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableaux"]], "cactus() (sage.combinat.path_tableaux.path_tableau.pathtableau method)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau.cactus"]], "commutor() (sage.combinat.path_tableaux.path_tableau.pathtableau method)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau.commutor"]], "dual_equivalence_graph() (sage.combinat.path_tableaux.path_tableau.pathtableau method)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau.dual_equivalence_graph"]], "evacuation() (sage.combinat.path_tableaux.path_tableau.pathtableau method)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau.evacuation"]], "final_shape() (sage.combinat.path_tableaux.path_tableau.pathtableau method)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau.final_shape"]], "initial_shape() (sage.combinat.path_tableaux.path_tableau.pathtableau method)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau.initial_shape"]], "local_rule() (sage.combinat.path_tableaux.path_tableau.pathtableau method)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau.local_rule"]], "orbit() (sage.combinat.path_tableaux.path_tableau.pathtableau method)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau.orbit"]], "pp() (sage.combinat.path_tableaux.path_tableau.cylindricaldiagram method)": [[167, "sage.combinat.path_tableaux.path_tableau.CylindricalDiagram.pp"]], "promotion() (sage.combinat.path_tableaux.path_tableau.pathtableau method)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau.promotion"]], "sage.combinat.path_tableaux.path_tableau": [[167, "module-sage.combinat.path_tableaux.path_tableau"]], "size() (sage.combinat.path_tableaux.path_tableau.pathtableau method)": [[167, "sage.combinat.path_tableaux.path_tableau.PathTableau.size"]], "element (sage.combinat.path_tableaux.semistandard.semistandardpathtableaux attribute)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableaux.Element"]], "semistandardpathtableau (class in sage.combinat.path_tableaux.semistandard)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableau"]], "semistandardpathtableaux (class in sage.combinat.path_tableaux.semistandard)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableaux"]], "check() (sage.combinat.path_tableaux.semistandard.semistandardpathtableau method)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableau.check"]], "is_integral() (sage.combinat.path_tableaux.semistandard.semistandardpathtableau method)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableau.is_integral"]], "is_skew() (sage.combinat.path_tableaux.semistandard.semistandardpathtableau method)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableau.is_skew"]], "local_rule() (sage.combinat.path_tableaux.semistandard.semistandardpathtableau method)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableau.local_rule"]], "rectify() (sage.combinat.path_tableaux.semistandard.semistandardpathtableau method)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableau.rectify"]], "sage.combinat.path_tableaux.semistandard": [[168, "module-sage.combinat.path_tableaux.semistandard"]], "size() (sage.combinat.path_tableaux.semistandard.semistandardpathtableau method)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableau.size"]], "to_pattern() (sage.combinat.path_tableaux.semistandard.semistandardpathtableau method)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableau.to_pattern"]], "to_tableau() (sage.combinat.path_tableaux.semistandard.semistandardpathtableau method)": [[168, "sage.combinat.path_tableaux.semistandard.SemistandardPathTableau.to_tableau"]], "element (sage.combinat.perfect_matching.perfectmatchings attribute)": [[169, "sage.combinat.perfect_matching.PerfectMatchings.Element"]], "perfectmatching (class in sage.combinat.perfect_matching)": [[169, "sage.combinat.perfect_matching.PerfectMatching"]], "perfectmatchings (class in sage.combinat.perfect_matching)": [[169, "sage.combinat.perfect_matching.PerfectMatchings"]], "weingarten_function() (sage.combinat.perfect_matching.perfectmatching method)": [[169, "sage.combinat.perfect_matching.PerfectMatching.Weingarten_function"]], "weingarten_matrix() (sage.combinat.perfect_matching.perfectmatchings method)": [[169, "sage.combinat.perfect_matching.PerfectMatchings.Weingarten_matrix"]], "base_set() (sage.combinat.perfect_matching.perfectmatchings method)": [[169, "sage.combinat.perfect_matching.PerfectMatchings.base_set"]], "base_set_cardinality() (sage.combinat.perfect_matching.perfectmatchings method)": [[169, "sage.combinat.perfect_matching.PerfectMatchings.base_set_cardinality"]], "cardinality() (sage.combinat.perfect_matching.perfectmatchings method)": [[169, "sage.combinat.perfect_matching.PerfectMatchings.cardinality"]], "loop_type() (sage.combinat.perfect_matching.perfectmatching method)": [[169, "sage.combinat.perfect_matching.PerfectMatching.loop_type"]], "loops() (sage.combinat.perfect_matching.perfectmatching method)": [[169, "sage.combinat.perfect_matching.PerfectMatching.loops"]], "loops_iterator() (sage.combinat.perfect_matching.perfectmatching method)": [[169, "sage.combinat.perfect_matching.PerfectMatching.loops_iterator"]], "number_of_loops() (sage.combinat.perfect_matching.perfectmatching method)": [[169, "sage.combinat.perfect_matching.PerfectMatching.number_of_loops"]], "partner() (sage.combinat.perfect_matching.perfectmatching method)": [[169, "sage.combinat.perfect_matching.PerfectMatching.partner"]], "random_element() (sage.combinat.perfect_matching.perfectmatchings method)": [[169, "sage.combinat.perfect_matching.PerfectMatchings.random_element"]], "sage.combinat.perfect_matching": [[169, "module-sage.combinat.perfect_matching"]], "standardization() (sage.combinat.perfect_matching.perfectmatching method)": [[169, "sage.combinat.perfect_matching.PerfectMatching.standardization"]], "to_graph() (sage.combinat.perfect_matching.perfectmatching method)": [[169, "sage.combinat.perfect_matching.PerfectMatching.to_graph"]], "to_noncrossing_set_partition() (sage.combinat.perfect_matching.perfectmatching method)": [[169, "sage.combinat.perfect_matching.PerfectMatching.to_noncrossing_set_partition"]], "arrangements (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Arrangements"]], "arrangements_msetk (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Arrangements_msetk"]], "arrangements_setk (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Arrangements_setk"]], "cyclicpermutations (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.CyclicPermutations"]], "cyclicpermutationsofpartition (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.CyclicPermutationsOfPartition"]], "cyclicpermutationsofpartition.element (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.CyclicPermutationsOfPartition.Element"]], "element (sage.combinat.permutation.permutations attribute)": [[170, "sage.combinat.permutation.Permutations.Element"]], "patternavoider (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.PatternAvoider"]], "permutation (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Permutation"]], "permutations (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Permutations"]], "permutationsnk (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.PermutationsNK"]], "permutations_mset (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Permutations_mset"]], "permutations_mset.element (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Permutations_mset.Element"]], "permutations_msetk (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Permutations_msetk"]], "permutations_nk (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Permutations_nk"]], "permutations_nk.element (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Permutations_nk.Element"]], "permutations_set (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Permutations_set"]], "permutations_set.element (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Permutations_set.Element"]], "permutations_setk (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.Permutations_setk"]], "rs_partition() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.RS_partition"]], "standardpermutations_all (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_all"]], "standardpermutations_all_avoiding (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_all_avoiding"]], "standardpermutations_avoiding_12 (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_12"]], "standardpermutations_avoiding_123 (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_123"]], "standardpermutations_avoiding_132 (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_132"]], "standardpermutations_avoiding_21 (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_21"]], "standardpermutations_avoiding_213 (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_213"]], "standardpermutations_avoiding_231 (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_231"]], "standardpermutations_avoiding_312 (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_312"]], "standardpermutations_avoiding_321 (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_321"]], "standardpermutations_avoiding_generic (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_generic"]], "standardpermutations_bruhat_greater (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_bruhat_greater"]], "standardpermutations_bruhat_smaller (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_bruhat_smaller"]], "standardpermutations_descents (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_descents"]], "standardpermutations_n (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_n"]], "standardpermutations_n.element (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_n.Element"]], "standardpermutations_n_abstract (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_n_abstract"]], "standardpermutations_recoils (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_recoils"]], "standardpermutations_recoilsfatter (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_recoilsfatter"]], "standardpermutations_recoilsfiner (class in sage.combinat.permutation)": [[170, "sage.combinat.permutation.StandardPermutations_recoilsfiner"]], "a (sage.combinat.permutation.standardpermutations_avoiding_generic property)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_generic.a"]], "absolute_length() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.absolute_length"]], "action() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.action"]], "algebra() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.algebra"]], "apply_simple_reflection_left() (sage.combinat.permutation.standardpermutations_n.element method)": [[170, "sage.combinat.permutation.StandardPermutations_n.Element.apply_simple_reflection_left"]], "apply_simple_reflection_right() (sage.combinat.permutation.standardpermutations_n.element method)": [[170, "sage.combinat.permutation.StandardPermutations_n.Element.apply_simple_reflection_right"]], "as_permutation_group() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.as_permutation_group"]], "avoids() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.avoids"]], "binary_search_tree() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.binary_search_tree"]], "binary_search_tree_shape() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.binary_search_tree_shape"]], "bistochastic_as_sum_of_permutations() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.bistochastic_as_sum_of_permutations"]], "bounded_affine_permutation() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.bounded_affine_permutation"]], "bruhat_greater() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.bruhat_greater"]], "bruhat_inversions() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.bruhat_inversions"]], "bruhat_inversions_iterator() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.bruhat_inversions_iterator"]], "bruhat_lequal() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.bruhat_lequal"]], "bruhat_lequal() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.bruhat_lequal"]], "bruhat_pred() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.bruhat_pred"]], "bruhat_pred_iterator() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.bruhat_pred_iterator"]], "bruhat_smaller() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.bruhat_smaller"]], "bruhat_succ() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.bruhat_succ"]], "bruhat_succ_iterator() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.bruhat_succ_iterator"]], "cardinality() (sage.combinat.permutation.arrangements method)": [[170, "sage.combinat.permutation.Arrangements.cardinality"]], "cardinality() (sage.combinat.permutation.permutations_mset method)": [[170, "sage.combinat.permutation.Permutations_mset.cardinality"]], "cardinality() (sage.combinat.permutation.permutations_msetk method)": [[170, "sage.combinat.permutation.Permutations_msetk.cardinality"]], "cardinality() (sage.combinat.permutation.permutations_nk method)": [[170, "sage.combinat.permutation.Permutations_nk.cardinality"]], "cardinality() (sage.combinat.permutation.permutations_set method)": [[170, "sage.combinat.permutation.Permutations_set.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_avoiding_12 method)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_12.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_avoiding_123 method)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_123.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_avoiding_132 method)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_132.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_avoiding_21 method)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_21.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_avoiding_213 method)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_213.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_avoiding_231 method)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_231.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_avoiding_312 method)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_312.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_avoiding_321 method)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_321.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_avoiding_generic method)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_generic.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_descents method)": [[170, "sage.combinat.permutation.StandardPermutations_descents.cardinality"]], "cardinality() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.cardinality"]], "cartan_type() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.cartan_type"]], "check() (sage.combinat.permutation.cyclicpermutationsofpartition.element method)": [[170, "sage.combinat.permutation.CyclicPermutationsOfPartition.Element.check"]], "check() (sage.combinat.permutation.permutations_mset.element method)": [[170, "sage.combinat.permutation.Permutations_mset.Element.check"]], "check() (sage.combinat.permutation.permutations_nk.element method)": [[170, "sage.combinat.permutation.Permutations_nk.Element.check"]], "check() (sage.combinat.permutation.permutations_set.element method)": [[170, "sage.combinat.permutation.Permutations_set.Element.check"]], "codegrees() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.codegrees"]], "complement() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.complement"]], "conjugacy_class() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.conjugacy_class"]], "conjugacy_classes() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.conjugacy_classes"]], "conjugacy_classes_iterator() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.conjugacy_classes_iterator"]], "conjugacy_classes_representatives() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.conjugacy_classes_representatives"]], "cycle_string() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.cycle_string"]], "cycle_tuples() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.cycle_tuples"]], "cycle_type() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.cycle_type"]], "decreasing_runs() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.decreasing_runs"]], "degree() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.degree"]], "degrees() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.degrees"]], "descent_polynomial() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.descent_polynomial"]], "descents() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.descents"]], "descents_composition() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.descents_composition"]], "descents_composition_first() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.descents_composition_first"]], "descents_composition_last() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.descents_composition_last"]], "descents_composition_list() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.descents_composition_list"]], "destandardize() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.destandardize"]], "dict() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.dict"]], "element_in_conjugacy_classes() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.element_in_conjugacy_classes"]], "first() (sage.combinat.permutation.standardpermutations_descents method)": [[170, "sage.combinat.permutation.StandardPermutations_descents.first"]], "fixed_points() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.fixed_points"]], "foata_bijection() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.foata_bijection"]], "foata_bijection_inverse() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.foata_bijection_inverse"]], "forget_cycles() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.forget_cycles"]], "from_cycles() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.from_cycles"]], "from_inversion_vector() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.from_inversion_vector"]], "from_lehmer_cocode() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.from_lehmer_cocode"]], "from_lehmer_code() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.from_lehmer_code"]], "from_major_code() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.from_major_code"]], "from_permutation_group_element() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.from_permutation_group_element"]], "from_rank() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.from_rank"]], "from_reduced_word() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.from_reduced_word"]], "fundamental_transformation() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.fundamental_transformation"]], "fundamental_transformation_inverse() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.fundamental_transformation_inverse"]], "grade() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.grade"]], "graded_component() (sage.combinat.permutation.standardpermutations_all method)": [[170, "sage.combinat.permutation.StandardPermutations_all.graded_component"]], "has_left_descent() (sage.combinat.permutation.standardpermutations_n.element method)": [[170, "sage.combinat.permutation.StandardPermutations_n.Element.has_left_descent"]], "has_pattern() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.has_pattern"]], "has_right_descent() (sage.combinat.permutation.standardpermutations_n.element method)": [[170, "sage.combinat.permutation.StandardPermutations_n.Element.has_right_descent"]], "hyperoctahedral_double_coset_type() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.hyperoctahedral_double_coset_type"]], "identity() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.identity"]], "idescents() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.idescents"]], "idescents_signature() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.idescents_signature"]], "imajor_index() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.imajor_index"]], "increasing_tree() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.increasing_tree"]], "increasing_tree_shape() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.increasing_tree_shape"]], "index_set() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.index_set"]], "inverse() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.inverse"]], "inverse() (sage.combinat.permutation.standardpermutations_n.element method)": [[170, "sage.combinat.permutation.StandardPermutations_n.Element.inverse"]], "inversions() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.inversions"]], "is_derangement() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.is_derangement"]], "is_even() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.is_even"]], "ishift() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.ishift"]], "iswitch() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.iswitch"]], "iterator() (sage.combinat.permutation.cyclicpermutations method)": [[170, "sage.combinat.permutation.CyclicPermutations.iterator"]], "iterator() (sage.combinat.permutation.cyclicpermutationsofpartition method)": [[170, "sage.combinat.permutation.CyclicPermutationsOfPartition.iterator"]], "last() (sage.combinat.permutation.standardpermutations_descents method)": [[170, "sage.combinat.permutation.StandardPermutations_descents.last"]], "left_action_product() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.left_action_product"]], "left_tableau() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.left_tableau"]], "length() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.length"]], "list() (sage.combinat.permutation.cyclicpermutations method)": [[170, "sage.combinat.permutation.CyclicPermutations.list"]], "list() (sage.combinat.permutation.cyclicpermutationsofpartition method)": [[170, "sage.combinat.permutation.CyclicPermutationsOfPartition.list"]], "longest_increasing_subsequence_length() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.longest_increasing_subsequence_length"]], "longest_increasing_subsequences() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.longest_increasing_subsequences"]], "longest_increasing_subsequences_number() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.longest_increasing_subsequences_number"]], "major_index() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.major_index"]], "multi_major_index() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.multi_major_index"]], "next() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.next"]], "noninversions() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.noninversions"]], "number_of_descents() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.number_of_descents"]], "number_of_fixed_points() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.number_of_fixed_points"]], "number_of_idescents() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.number_of_idescents"]], "number_of_inversions() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.number_of_inversions"]], "number_of_noninversions() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.number_of_noninversions"]], "number_of_peaks() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.number_of_peaks"]], "number_of_recoils() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.number_of_recoils"]], "number_of_reduced_words() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.number_of_reduced_words"]], "number_of_saliances() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.number_of_saliances"]], "one() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.one"]], "options (sage.combinat.permutation.permutations attribute)": [[170, "sage.combinat.permutation.Permutations.options"]], "pattern_positions() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.pattern_positions"]], "patterns() (sage.combinat.permutation.standardpermutations_all_avoiding method)": [[170, "sage.combinat.permutation.StandardPermutations_all_avoiding.patterns"]], "patterns() (sage.combinat.permutation.standardpermutations_avoiding_generic method)": [[170, "sage.combinat.permutation.StandardPermutations_avoiding_generic.patterns"]], "peaks() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.peaks"]], "permutation_poset() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.permutation_poset"]], "permutohedron_greater() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.permutohedron_greater"]], "permutohedron_join() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.permutohedron_join"]], "permutohedron_lequal() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.permutohedron_lequal"]], "permutohedron_lequal() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.permutohedron_lequal"]], "permutohedron_meet() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.permutohedron_meet"]], "permutohedron_pred() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.permutohedron_pred"]], "permutohedron_smaller() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.permutohedron_smaller"]], "permutohedron_succ() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.permutohedron_succ"]], "prev() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.prev"]], "random_element() (sage.combinat.permutation.permutations_nk method)": [[170, "sage.combinat.permutation.Permutations_nk.random_element"]], "random_element() (sage.combinat.permutation.permutations_set method)": [[170, "sage.combinat.permutation.Permutations_set.random_element"]], "random_element() (sage.combinat.permutation.permutations_setk method)": [[170, "sage.combinat.permutation.Permutations_setk.random_element"]], "random_element() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.random_element"]], "rank() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.rank"]], "rank() (sage.combinat.permutation.permutations_mset method)": [[170, "sage.combinat.permutation.Permutations_mset.rank"]], "rank() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.rank"]], "recoils() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.recoils"]], "recoils_composition() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.recoils_composition"]], "reduced_word() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.reduced_word"]], "reduced_word_lexmin() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.reduced_word_lexmin"]], "reduced_words() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.reduced_words"]], "reduced_words_iterator() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.reduced_words_iterator"]], "remove_extra_fixed_points() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.remove_extra_fixed_points"]], "retract_direct_product() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.retract_direct_product"]], "retract_okounkov_vershik() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.retract_okounkov_vershik"]], "retract_plain() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.retract_plain"]], "reverse() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.reverse"]], "right_action_product() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.right_action_product"]], "right_permutohedron_interval() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.right_permutohedron_interval"]], "right_permutohedron_interval_iterator() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.right_permutohedron_interval_iterator"]], "right_tableau() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.right_tableau"]], "robinson_schensted() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.robinson_schensted"]], "rothe_diagram() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.rothe_diagram"]], "runs() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.runs"]], "sage.combinat.permutation": [[170, "module-sage.combinat.permutation"]], "saliances() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.saliances"]], "shifted_concatenation() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.shifted_concatenation"]], "shifted_shuffle() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.shifted_shuffle"]], "show() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.show"]], "sign() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.sign"]], "signature() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.signature"]], "simion_schmidt() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.simion_schmidt"]], "simple_reflection() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.simple_reflection"]], "size() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.size"]], "stack_sort() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.stack_sort"]], "sylvester_class() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.sylvester_class"]], "to_alternating_sign_matrix() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.to_alternating_sign_matrix"]], "to_cycles() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.to_cycles"]], "to_digraph() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.to_digraph"]], "to_inversion_vector() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.to_inversion_vector"]], "to_lehmer_cocode() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.to_lehmer_cocode"]], "to_lehmer_code() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.to_lehmer_code"]], "to_major_code() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.to_major_code"]], "to_matrix() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.to_matrix"]], "to_permutation_group_element() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.to_permutation_group_element"]], "to_standard() (in module sage.combinat.permutation)": [[170, "sage.combinat.permutation.to_standard"]], "to_tableau_by_shape() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.to_tableau_by_shape"]], "unrank() (sage.combinat.permutation.permutations_mset method)": [[170, "sage.combinat.permutation.Permutations_mset.unrank"]], "unrank() (sage.combinat.permutation.standardpermutations_n method)": [[170, "sage.combinat.permutation.StandardPermutations_n.unrank"]], "weak_excedences() (sage.combinat.permutation.permutation method)": [[170, "sage.combinat.permutation.Permutation.weak_excedences"]], "left_action_product() (in module sage.combinat.permutation_cython)": [[171, "sage.combinat.permutation_cython.left_action_product"]], "left_action_same_n() (in module sage.combinat.permutation_cython)": [[171, "sage.combinat.permutation_cython.left_action_same_n"]], "map_to_list() (in module sage.combinat.permutation_cython)": [[171, "sage.combinat.permutation_cython.map_to_list"]], "next_perm() (in module sage.combinat.permutation_cython)": [[171, "sage.combinat.permutation_cython.next_perm"]], "permutation_iterator_transposition_list() (in module sage.combinat.permutation_cython)": [[171, "sage.combinat.permutation_cython.permutation_iterator_transposition_list"]], "right_action_product() (in module sage.combinat.permutation_cython)": [[171, "sage.combinat.permutation_cython.right_action_product"]], "right_action_same_n() (in module sage.combinat.permutation_cython)": [[171, "sage.combinat.permutation_cython.right_action_same_n"]], "sage.combinat.permutation_cython": [[171, "module-sage.combinat.permutation_cython"]], "element (sage.combinat.plane_partition.planepartitions attribute)": [[172, "sage.combinat.plane_partition.PlanePartitions.Element"]], "pp (in module sage.combinat.plane_partition)": [[172, "sage.combinat.plane_partition.PP"]], "planepartition (class in sage.combinat.plane_partition)": [[172, "sage.combinat.plane_partition.PlanePartition"]], "planepartitions (class in sage.combinat.plane_partition)": [[172, "sage.combinat.plane_partition.PlanePartitions"]], "box() (sage.combinat.plane_partition.planepartitions method)": [[172, "sage.combinat.plane_partition.PlanePartitions.box"]], "cardinality() (sage.combinat.plane_partition.planepartitions method)": [[172, "sage.combinat.plane_partition.PlanePartitions.cardinality"]], "cells() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.cells"]], "check() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.check"]], "complement() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.complement"]], "is_cspp() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.is_CSPP"]], "is_csscpp() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.is_CSSCPP"]], "is_cstcpp() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.is_CSTCPP"]], "is_scpp() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.is_SCPP"]], "is_spp() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.is_SPP"]], "is_sscpp() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.is_SSCPP"]], "is_tcpp() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.is_TCPP"]], "is_tspp() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.is_TSPP"]], "is_tsscpp() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.is_TSSCPP"]], "plot() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.plot"]], "plot3d() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.plot3d"]], "pp() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.pp"]], "random_element() (sage.combinat.plane_partition.planepartitions method)": [[172, "sage.combinat.plane_partition.PlanePartitions.random_element"]], "sage.combinat.plane_partition": [[172, "module-sage.combinat.plane_partition"]], "to_tableau() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.to_tableau"]], "transpose() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.transpose"]], "x_tableau() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.x_tableau"]], "y_tableau() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.y_tableau"]], "z_tableau() (sage.combinat.plane_partition.planepartition method)": [[172, "sage.combinat.plane_partition.PlanePartition.z_tableau"]], "sage.combinat.posets.all": [[173, "module-sage.combinat.posets.all"]], "cartesianproductposet (class in sage.combinat.posets.cartesian_product)": [[174, "sage.combinat.posets.cartesian_product.CartesianProductPoset"]], "cartesianproductposet.element (class in sage.combinat.posets.cartesian_product)": [[174, "sage.combinat.posets.cartesian_product.CartesianProductPoset.Element"]], "le() (sage.combinat.posets.cartesian_product.cartesianproductposet method)": [[174, "sage.combinat.posets.cartesian_product.CartesianProductPoset.le"]], "le_lex() (sage.combinat.posets.cartesian_product.cartesianproductposet method)": [[174, "sage.combinat.posets.cartesian_product.CartesianProductPoset.le_lex"]], "le_native() (sage.combinat.posets.cartesian_product.cartesianproductposet method)": [[174, "sage.combinat.posets.cartesian_product.CartesianProductPoset.le_native"]], "le_product() (sage.combinat.posets.cartesian_product.cartesianproductposet method)": [[174, "sage.combinat.posets.cartesian_product.CartesianProductPoset.le_product"]], "sage.combinat.posets.cartesian_product": [[174, "module-sage.combinat.posets.cartesian_product"]], "dcompleteposet (class in sage.combinat.posets.d_complete)": [[175, "sage.combinat.posets.d_complete.DCompletePoset"]], "get_hook() (sage.combinat.posets.d_complete.dcompleteposet method)": [[175, "sage.combinat.posets.d_complete.DCompletePoset.get_hook"]], "get_hooks() (sage.combinat.posets.d_complete.dcompleteposet method)": [[175, "sage.combinat.posets.d_complete.DCompletePoset.get_hooks"]], "hook_product() (sage.combinat.posets.d_complete.dcompleteposet method)": [[175, "sage.combinat.posets.d_complete.DCompletePoset.hook_product"]], "sage.combinat.posets.d_complete": [[175, "module-sage.combinat.posets.d_complete"]], "joinsemilatticeelement (class in sage.combinat.posets.elements)": [[176, "sage.combinat.posets.elements.JoinSemilatticeElement"]], "latticeposetelement (class in sage.combinat.posets.elements)": [[176, "sage.combinat.posets.elements.LatticePosetElement"]], "meetsemilatticeelement (class in sage.combinat.posets.elements)": [[176, "sage.combinat.posets.elements.MeetSemilatticeElement"]], "posetelement (class in sage.combinat.posets.elements)": [[176, "sage.combinat.posets.elements.PosetElement"]], "sage.combinat.posets.elements": [[176, "module-sage.combinat.posets.elements"]], "forestposet (class in sage.combinat.posets.forest)": [[177, "sage.combinat.posets.forest.ForestPoset"]], "sage.combinat.posets.forest": [[177, "module-sage.combinat.posets.forest"]], "hassediagram (class in sage.combinat.posets.hasse_diagram)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram"]], "latticeerror": [[178, "sage.combinat.posets.hasse_diagram.LatticeError"]], "antichains() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.antichains"]], "antichains_iterator() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.antichains_iterator"]], "are_comparable() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.are_comparable"]], "are_incomparable() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.are_incomparable"]], "atoms_of_congruence_lattice() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.atoms_of_congruence_lattice"]], "bottom() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.bottom"]], "cardinality() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.cardinality"]], "chains() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.chains"]], "closed_interval() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.closed_interval"]], "common_lower_covers() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.common_lower_covers"]], "common_upper_covers() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.common_upper_covers"]], "congruence() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.congruence"]], "congruences_iterator() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.congruences_iterator"]], "cover_relations() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.cover_relations"]], "cover_relations_iterator() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.cover_relations_iterator"]], "covers() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.covers"]], "coxeter_transformation() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.coxeter_transformation"]], "diamonds() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.diamonds"]], "dual() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.dual"]], "find_nonsemidistributive_elements() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.find_nonsemidistributive_elements"]], "find_nonsemimodular_pair() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.find_nonsemimodular_pair"]], "find_nontrivial_congruence() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.find_nontrivial_congruence"]], "frattini_sublattice() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.frattini_sublattice"]], "greedy_linear_extensions_iterator() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.greedy_linear_extensions_iterator"]], "has_bottom() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.has_bottom"]], "has_top() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.has_top"]], "interval() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.interval"]], "interval_iterator() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.interval_iterator"]], "is_antichain_of_poset() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_antichain_of_poset"]], "is_bounded() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_bounded"]], "is_chain() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_chain"]], "is_complemented() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_complemented"]], "is_congruence_normal() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_congruence_normal"]], "is_convex_subset() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_convex_subset"]], "is_gequal() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_gequal"]], "is_greater_than() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_greater_than"]], "is_join_semilattice() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_join_semilattice"]], "is_lequal() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_lequal"]], "is_less_than() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_less_than"]], "is_linear_extension() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_linear_extension"]], "is_linear_interval() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_linear_interval"]], "is_meet_semilattice() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_meet_semilattice"]], "is_ranked() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.is_ranked"]], "join_matrix() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.join_matrix"]], "kappa() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.kappa"]], "kappa_dual() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.kappa_dual"]], "lequal_matrix() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.lequal_matrix"]], "linear_extension() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.linear_extension"]], "linear_extensions() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.linear_extensions"]], "lower_covers_iterator() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.lower_covers_iterator"]], "maximal_elements() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.maximal_elements"]], "maximal_sublattices() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.maximal_sublattices"]], "meet_matrix() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.meet_matrix"]], "minimal_elements() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.minimal_elements"]], "moebius_function() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.moebius_function"]], "moebius_function_matrix() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.moebius_function_matrix"]], "neutral_elements() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.neutral_elements"]], "open_interval() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.open_interval"]], "order_filter() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.order_filter"]], "order_ideal() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.order_ideal"]], "order_ideal_cardinality() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.order_ideal_cardinality"]], "orthocomplementations_iterator() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.orthocomplementations_iterator"]], "prime_elements() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.prime_elements"]], "principal_congruences_poset() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.principal_congruences_poset"]], "principal_order_filter() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.principal_order_filter"]], "principal_order_ideal() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.principal_order_ideal"]], "pseudocomplement() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.pseudocomplement"]], "rank() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.rank"]], "rank_function() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.rank_function"]], "sage.combinat.posets.hasse_diagram": [[178, "module-sage.combinat.posets.hasse_diagram"]], "skeleton() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.skeleton"]], "sublattices_iterator() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.sublattices_iterator"]], "supergreedy_linear_extensions_iterator() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.supergreedy_linear_extensions_iterator"]], "top() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.top"]], "upper_covers_iterator() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.upper_covers_iterator"]], "vertical_decomposition() (sage.combinat.posets.hasse_diagram.hassediagram method)": [[178, "sage.combinat.posets.hasse_diagram.HasseDiagram.vertical_decomposition"]], "incidencealgebra (class in sage.combinat.posets.incidence_algebras)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra"]], "incidencealgebra.element (class in sage.combinat.posets.incidence_algebras)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.Element"]], "reducedincidencealgebra (class in sage.combinat.posets.incidence_algebras)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra"]], "reducedincidencealgebra.element (class in sage.combinat.posets.incidence_algebras)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.Element"]], "delta() (sage.combinat.posets.incidence_algebras.incidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.delta"]], "delta() (sage.combinat.posets.incidence_algebras.reducedincidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.delta"]], "is_unit() (sage.combinat.posets.incidence_algebras.incidencealgebra.element method)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.Element.is_unit"]], "is_unit() (sage.combinat.posets.incidence_algebras.reducedincidencealgebra.element method)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.Element.is_unit"]], "lift() (sage.combinat.posets.incidence_algebras.reducedincidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.lift"]], "lift() (sage.combinat.posets.incidence_algebras.reducedincidencealgebra.element method)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.Element.lift"]], "moebius() (sage.combinat.posets.incidence_algebras.incidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.moebius"]], "moebius() (sage.combinat.posets.incidence_algebras.reducedincidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.moebius"]], "one() (sage.combinat.posets.incidence_algebras.incidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.one"]], "one_basis() (sage.combinat.posets.incidence_algebras.reducedincidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.one_basis"]], "poset() (sage.combinat.posets.incidence_algebras.incidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.poset"]], "poset() (sage.combinat.posets.incidence_algebras.reducedincidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.poset"]], "product_on_basis() (sage.combinat.posets.incidence_algebras.incidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.product_on_basis"]], "reduced_subalgebra() (sage.combinat.posets.incidence_algebras.incidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.reduced_subalgebra"]], "sage.combinat.posets.incidence_algebras": [[179, "module-sage.combinat.posets.incidence_algebras"]], "some_elements() (sage.combinat.posets.incidence_algebras.incidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.some_elements"]], "some_elements() (sage.combinat.posets.incidence_algebras.reducedincidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.some_elements"]], "to_matrix() (sage.combinat.posets.incidence_algebras.incidencealgebra.element method)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.Element.to_matrix"]], "to_matrix() (sage.combinat.posets.incidence_algebras.reducedincidencealgebra.element method)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.Element.to_matrix"]], "zeta() (sage.combinat.posets.incidence_algebras.incidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.IncidenceAlgebra.zeta"]], "zeta() (sage.combinat.posets.incidence_algebras.reducedincidencealgebra method)": [[179, "sage.combinat.posets.incidence_algebras.ReducedIncidenceAlgebra.zeta"]], "element (sage.combinat.posets.lattices.finitejoinsemilattice attribute)": [[180, "sage.combinat.posets.lattices.FiniteJoinSemilattice.Element"]], "element (sage.combinat.posets.lattices.finitelatticeposet attribute)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.Element"]], "element (sage.combinat.posets.lattices.finitemeetsemilattice attribute)": [[180, "sage.combinat.posets.lattices.FiniteMeetSemilattice.Element"]], "finitejoinsemilattice (class in sage.combinat.posets.lattices)": [[180, "sage.combinat.posets.lattices.FiniteJoinSemilattice"]], "finitelatticeposet (class in sage.combinat.posets.lattices)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset"]], "finitemeetsemilattice (class in sage.combinat.posets.lattices)": [[180, "sage.combinat.posets.lattices.FiniteMeetSemilattice"]], "joinsemilattice() (in module sage.combinat.posets.lattices)": [[180, "sage.combinat.posets.lattices.JoinSemilattice"]], "latticeposet() (in module sage.combinat.posets.lattices)": [[180, "sage.combinat.posets.lattices.LatticePoset"]], "meetsemilattice() (in module sage.combinat.posets.lattices)": [[180, "sage.combinat.posets.lattices.MeetSemilattice"]], "adjunct() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.adjunct"]], "atoms() (sage.combinat.posets.lattices.finitemeetsemilattice method)": [[180, "sage.combinat.posets.lattices.FiniteMeetSemilattice.atoms"]], "breadth() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.breadth"]], "canonical_joinands() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.canonical_joinands"]], "canonical_meetands() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.canonical_meetands"]], "center() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.center"]], "coatoms() (sage.combinat.posets.lattices.finitejoinsemilattice method)": [[180, "sage.combinat.posets.lattices.FiniteJoinSemilattice.coatoms"]], "complements() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.complements"]], "congruence() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.congruence"]], "congruences_lattice() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.congruences_lattice"]], "day_doubling() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.day_doubling"]], "double_irreducibles() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.double_irreducibles"]], "frattini_sublattice() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.frattini_sublattice"]], "is_atomic() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_atomic"]], "is_coatomic() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_coatomic"]], "is_complemented() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_complemented"]], "is_constructible_by_doublings() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_constructible_by_doublings"]], "is_cosectionally_complemented() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_cosectionally_complemented"]], "is_dismantlable() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_dismantlable"]], "is_distributive() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_distributive"]], "is_extremal() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_extremal"]], "is_geometric() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_geometric"]], "is_interval_dismantlable() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_interval_dismantlable"]], "is_isoform() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_isoform"]], "is_join_distributive() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_join_distributive"]], "is_join_pseudocomplemented() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_join_pseudocomplemented"]], "is_join_semidistributive() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_join_semidistributive"]], "is_left_modular_element() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_left_modular_element"]], "is_lower_semimodular() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_lower_semimodular"]], "is_meet_distributive() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_meet_distributive"]], "is_meet_semidistributive() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_meet_semidistributive"]], "is_modular() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_modular"]], "is_modular_element() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_modular_element"]], "is_orthocomplemented() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_orthocomplemented"]], "is_planar() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_planar"]], "is_pseudocomplemented() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_pseudocomplemented"]], "is_regular() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_regular"]], "is_relatively_complemented() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_relatively_complemented"]], "is_sectionally_complemented() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_sectionally_complemented"]], "is_semidistributive() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_semidistributive"]], "is_simple() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_simple"]], "is_stone() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_stone"]], "is_subdirectly_reducible() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_subdirectly_reducible"]], "is_sublattice() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_sublattice"]], "is_sublattice_dismantlable() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_sublattice_dismantlable"]], "is_supersolvable() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_supersolvable"]], "is_trim() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_trim"]], "is_uniform() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_uniform"]], "is_upper_semimodular() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_upper_semimodular"]], "is_vertically_decomposable() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.is_vertically_decomposable"]], "isomorphic_sublattices_iterator() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.isomorphic_sublattices_iterator"]], "join() (sage.combinat.posets.lattices.finitejoinsemilattice method)": [[180, "sage.combinat.posets.lattices.FiniteJoinSemilattice.join"]], "join_matrix() (sage.combinat.posets.lattices.finitejoinsemilattice method)": [[180, "sage.combinat.posets.lattices.FiniteJoinSemilattice.join_matrix"]], "join_primes() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.join_primes"]], "maximal_sublattices() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.maximal_sublattices"]], "meet() (sage.combinat.posets.lattices.finitemeetsemilattice method)": [[180, "sage.combinat.posets.lattices.FiniteMeetSemilattice.meet"]], "meet_matrix() (sage.combinat.posets.lattices.finitemeetsemilattice method)": [[180, "sage.combinat.posets.lattices.FiniteMeetSemilattice.meet_matrix"]], "meet_primes() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.meet_primes"]], "moebius_algebra() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.moebius_algebra"]], "neutral_elements() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.neutral_elements"]], "pseudocomplement() (sage.combinat.posets.lattices.finitemeetsemilattice method)": [[180, "sage.combinat.posets.lattices.FiniteMeetSemilattice.pseudocomplement"]], "quantum_moebius_algebra() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.quantum_moebius_algebra"]], "quotient() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.quotient"]], "sage.combinat.posets.lattices": [[180, "module-sage.combinat.posets.lattices"]], "skeleton() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.skeleton"]], "subdirect_decomposition() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.subdirect_decomposition"]], "subjoinsemilattice() (sage.combinat.posets.lattices.finitemeetsemilattice method)": [[180, "sage.combinat.posets.lattices.FiniteMeetSemilattice.subjoinsemilattice"]], "sublattice() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.sublattice"]], "sublattices() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.sublattices"]], "sublattices_lattice() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.sublattices_lattice"]], "submeetsemilattice() (sage.combinat.posets.lattices.finitemeetsemilattice method)": [[180, "sage.combinat.posets.lattices.FiniteMeetSemilattice.submeetsemilattice"]], "vertical_composition() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.vertical_composition"]], "vertical_decomposition() (sage.combinat.posets.lattices.finitelatticeposet method)": [[180, "sage.combinat.posets.lattices.FiniteLatticePoset.vertical_decomposition"]], "element (sage.combinat.posets.linear_extensions.linearextensionsofposet attribute)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfPoset.Element"]], "linearextensionofposet (class in sage.combinat.posets.linear_extensions)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionOfPoset"]], "linearextensionsofforest (class in sage.combinat.posets.linear_extensions)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfForest"]], "linearextensionsofmobile (class in sage.combinat.posets.linear_extensions)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfMobile"]], "linearextensionsofposet (class in sage.combinat.posets.linear_extensions)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfPoset"]], "linearextensionsofposetwithhooks (class in sage.combinat.posets.linear_extensions)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfPosetWithHooks"]], "cardinality() (sage.combinat.posets.linear_extensions.linearextensionsofforest method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfForest.cardinality"]], "cardinality() (sage.combinat.posets.linear_extensions.linearextensionsofmobile method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfMobile.cardinality"]], "cardinality() (sage.combinat.posets.linear_extensions.linearextensionsofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfPoset.cardinality"]], "cardinality() (sage.combinat.posets.linear_extensions.linearextensionsofposetwithhooks method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfPosetWithHooks.cardinality"]], "check() (sage.combinat.posets.linear_extensions.linearextensionofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionOfPoset.check"]], "evacuation() (sage.combinat.posets.linear_extensions.linearextensionofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionOfPoset.evacuation"]], "is_greedy() (sage.combinat.posets.linear_extensions.linearextensionofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionOfPoset.is_greedy"]], "jump_count() (sage.combinat.posets.linear_extensions.linearextensionofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionOfPoset.jump_count"]], "markov_chain_digraph() (sage.combinat.posets.linear_extensions.linearextensionsofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfPoset.markov_chain_digraph"]], "markov_chain_transition_matrix() (sage.combinat.posets.linear_extensions.linearextensionsofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfPoset.markov_chain_transition_matrix"]], "poset() (sage.combinat.posets.linear_extensions.linearextensionofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionOfPoset.poset"]], "poset() (sage.combinat.posets.linear_extensions.linearextensionsofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionsOfPoset.poset"]], "promotion() (sage.combinat.posets.linear_extensions.linearextensionofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionOfPoset.promotion"]], "sage.combinat.posets.linear_extensions": [[181, "module-sage.combinat.posets.linear_extensions"]], "tau() (sage.combinat.posets.linear_extensions.linearextensionofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionOfPoset.tau"]], "to_poset() (sage.combinat.posets.linear_extensions.linearextensionofposet method)": [[181, "sage.combinat.posets.linear_extensions.LinearExtensionOfPoset.to_poset"]], "mobileposet (class in sage.combinat.posets.mobile)": [[182, "sage.combinat.posets.mobile.MobilePoset"]], "anchor() (sage.combinat.posets.mobile.mobileposet method)": [[182, "sage.combinat.posets.mobile.MobilePoset.anchor"]], "ribbon() (sage.combinat.posets.mobile.mobileposet method)": [[182, "sage.combinat.posets.mobile.MobilePoset.ribbon"]], "sage.combinat.posets.mobile": [[182, "module-sage.combinat.posets.mobile"]], "basisabstract (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.BasisAbstract"]], "moebiusalgebra (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra"]], "moebiusalgebra.e (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.E"]], "moebiusalgebra.i (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.I"]], "moebiusalgebrabases (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebraBases"]], "moebiusalgebrabases.elementmethods (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebraBases.ElementMethods"]], "moebiusalgebrabases.parentmethods (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebraBases.ParentMethods"]], "quantummoebiusalgebra (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra"]], "quantummoebiusalgebra.c (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.C"]], "quantummoebiusalgebra.e (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.E"]], "quantummoebiusalgebra.kl (class in sage.combinat.posets.moebius_algebra)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.KL"]], "a_realization() (sage.combinat.posets.moebius_algebra.moebiusalgebra method)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.a_realization"]], "a_realization() (sage.combinat.posets.moebius_algebra.quantummoebiusalgebra method)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.a_realization"]], "characteristic_basis (sage.combinat.posets.moebius_algebra.quantummoebiusalgebra attribute)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.characteristic_basis"]], "idempotent (sage.combinat.posets.moebius_algebra.moebiusalgebra attribute)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.idempotent"]], "kazhdan_lusztig (sage.combinat.posets.moebius_algebra.quantummoebiusalgebra attribute)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.kazhdan_lusztig"]], "lattice() (sage.combinat.posets.moebius_algebra.moebiusalgebra method)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.lattice"]], "lattice() (sage.combinat.posets.moebius_algebra.quantummoebiusalgebra method)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.lattice"]], "natural (sage.combinat.posets.moebius_algebra.moebiusalgebra attribute)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.natural"]], "natural (sage.combinat.posets.moebius_algebra.quantummoebiusalgebra attribute)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.natural"]], "one() (sage.combinat.posets.moebius_algebra.moebiusalgebra.e method)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.E.one"]], "one() (sage.combinat.posets.moebius_algebra.moebiusalgebra.i method)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.I.one"]], "one() (sage.combinat.posets.moebius_algebra.moebiusalgebrabases.parentmethods method)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebraBases.ParentMethods.one"]], "one() (sage.combinat.posets.moebius_algebra.quantummoebiusalgebra.e method)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.E.one"]], "product_on_basis() (sage.combinat.posets.moebius_algebra.moebiusalgebra.e method)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.E.product_on_basis"]], "product_on_basis() (sage.combinat.posets.moebius_algebra.moebiusalgebra.i method)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebra.I.product_on_basis"]], "product_on_basis() (sage.combinat.posets.moebius_algebra.moebiusalgebrabases.parentmethods method)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebraBases.ParentMethods.product_on_basis"]], "product_on_basis() (sage.combinat.posets.moebius_algebra.quantummoebiusalgebra.e method)": [[183, "sage.combinat.posets.moebius_algebra.QuantumMoebiusAlgebra.E.product_on_basis"]], "sage.combinat.posets.moebius_algebra": [[183, "module-sage.combinat.posets.moebius_algebra"]], "super_categories() (sage.combinat.posets.moebius_algebra.moebiusalgebrabases method)": [[183, "sage.combinat.posets.moebius_algebra.MoebiusAlgebraBases.super_categories"]], "antichainposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.AntichainPoset"]], "booleanlattice() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.BooleanLattice"]], "chainposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.ChainPoset"]], "coxetergroupabsoluteorderposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.CoxeterGroupAbsoluteOrderPoset"]], "crown() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.Crown"]], "dextersemilattice() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.DexterSemilattice"]], "diamondposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.DiamondPoset"]], "divisorlattice() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.DivisorLattice"]], "doubletaileddiamond() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.DoubleTailedDiamond"]], "integercompositions() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.IntegerCompositions"]], "integerpartitions() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.IntegerPartitions"]], "integerpartitionsdominanceorder() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.IntegerPartitionsDominanceOrder"]], "mobileposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.MobilePoset"]], "noncrossingpartitions() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.NoncrossingPartitions"]], "pentagonposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.PentagonPoset"]], "permutationpattern() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.PermutationPattern"]], "permutationpatterninterval() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.PermutationPatternInterval"]], "permutationpatternoccurrenceinterval() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.PermutationPatternOccurrenceInterval"]], "posets (class in sage.combinat.posets.poset_examples)": [[184, "sage.combinat.posets.poset_examples.Posets"]], "powerposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.PowerPoset"]], "productofchains() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.ProductOfChains"]], "randomlattice() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.RandomLattice"]], "randomposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.RandomPoset"]], "restrictedintegerpartitions() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.RestrictedIntegerPartitions"]], "ribbonposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.RibbonPoset"]], "sstposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.SSTPoset"]], "setpartitions() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.SetPartitions"]], "shardposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.ShardPoset"]], "standardexample() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.StandardExample"]], "symmetricgroupabsoluteorderposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.SymmetricGroupAbsoluteOrderPoset"]], "symmetricgroupbruhatintervalposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.SymmetricGroupBruhatIntervalPoset"]], "symmetricgroupbruhatorderposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.SymmetricGroupBruhatOrderPoset"]], "symmetricgroupweakorderposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.SymmetricGroupWeakOrderPoset"]], "tamarilattice() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.TamariLattice"]], "tetrahedralposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.TetrahedralPoset"]], "updownposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.UpDownPoset"]], "youngdiagramposet() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.YoungDiagramPoset"]], "youngfibonacci() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.YoungFibonacci"]], "youngslattice() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.YoungsLattice"]], "youngslatticeprincipalorderideal() (sage.combinat.posets.poset_examples.posets static method)": [[184, "sage.combinat.posets.poset_examples.Posets.YoungsLatticePrincipalOrderIdeal"]], "posets (in module sage.combinat.posets.poset_examples)": [[184, "sage.combinat.posets.poset_examples.posets"]], "sage (sage.combinat.posets.poset_examples.posets attribute)": [[184, "sage.combinat.posets.poset_examples.Posets.sage"]], "sage.combinat.posets.poset_examples": [[184, "module-sage.combinat.posets.poset_examples"]], "element (sage.combinat.posets.posets.finiteposet attribute)": [[185, "sage.combinat.posets.posets.FinitePoset.Element"]], "finiteposet (class in sage.combinat.posets.posets)": [[185, "sage.combinat.posets.posets.FinitePoset"]], "finiteposets_n (class in sage.combinat.posets.posets)": [[185, "sage.combinat.posets.posets.FinitePosets_n"]], "m_triangle() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.M_triangle"]], "poset() (in module sage.combinat.posets.posets)": [[185, "sage.combinat.posets.posets.Poset"]], "antichains() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.antichains"]], "antichains_iterator() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.antichains_iterator"]], "atkinson() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.atkinson"]], "bottom() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.bottom"]], "canonical_label() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.canonical_label"]], "cardinality() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.cardinality"]], "cardinality() (sage.combinat.posets.posets.finiteposets_n method)": [[185, "sage.combinat.posets.posets.FinitePosets_n.cardinality"]], "chain_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.chain_polynomial"]], "chain_polytope() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.chain_polytope"]], "chains() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.chains"]], "characteristic_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.characteristic_polynomial"]], "closed_interval() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.closed_interval"]], "common_lower_covers() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.common_lower_covers"]], "common_upper_covers() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.common_upper_covers"]], "comparability_graph() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.comparability_graph"]], "compare_elements() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.compare_elements"]], "completion_by_cuts() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.completion_by_cuts"]], "connected_components() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.connected_components"]], "cover_relations() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.cover_relations"]], "cover_relations_graph() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.cover_relations_graph"]], "cover_relations_iterator() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.cover_relations_iterator"]], "covers() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.covers"]], "coxeter_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.coxeter_polynomial"]], "coxeter_smith_form() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.coxeter_smith_form"]], "coxeter_transformation() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.coxeter_transformation"]], "cuts() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.cuts"]], "degree_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.degree_polynomial"]], "diamonds() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.diamonds"]], "dilworth_decomposition() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.dilworth_decomposition"]], "dimension() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.dimension"]], "disjoint_union() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.disjoint_union"]], "dual() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.dual"]], "evacuation() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.evacuation"]], "f_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.f_polynomial"]], "factor() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.factor"]], "flag_f_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.flag_f_polynomial"]], "flag_h_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.flag_h_polynomial"]], "frank_network() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.frank_network"]], "ge() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.ge"]], "graphviz_string() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.graphviz_string"]], "greene_shape() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.greene_shape"]], "gt() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.gt"]], "h_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.h_polynomial"]], "has_bottom() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.has_bottom"]], "has_isomorphic_subposet() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.has_isomorphic_subposet"]], "has_top() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.has_top"]], "hasse_diagram() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.hasse_diagram"]], "height() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.height"]], "incidence_algebra() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.incidence_algebra"]], "incomparability_graph() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.incomparability_graph"]], "interval() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.interval"]], "intervals_number() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.intervals_number"]], "intervals_poset() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.intervals_poset"]], "is_el_labelling() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_EL_labelling"]], "is_antichain_of_poset() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_antichain_of_poset"]], "is_bounded() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_bounded"]], "is_chain() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_chain"]], "is_chain_of_poset() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_chain_of_poset"]], "is_connected() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_connected"]], "is_d_complete() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_d_complete"]], "is_eulerian() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_eulerian"]], "is_gequal() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_gequal"]], "is_graded() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_graded"]], "is_greater_than() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_greater_than"]], "is_greedy() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_greedy"]], "is_incomparable_chain_free() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_incomparable_chain_free"]], "is_induced_subposet() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_induced_subposet"]], "is_isomorphic() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_isomorphic"]], "is_join_semilattice() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_join_semilattice"]], "is_jump_critical() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_jump_critical"]], "is_lequal() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_lequal"]], "is_less_than() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_less_than"]], "is_linear_extension() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_linear_extension"]], "is_linear_interval() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_linear_interval"]], "is_meet_semilattice() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_meet_semilattice"]], "is_parent_of() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_parent_of"]], "is_poset() (in module sage.combinat.posets.posets)": [[185, "sage.combinat.posets.posets.is_poset"]], "is_rank_symmetric() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_rank_symmetric"]], "is_ranked() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_ranked"]], "is_series_parallel() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_series_parallel"]], "is_slender() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_slender"]], "is_sperner() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.is_sperner"]], "isomorphic_subposets() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.isomorphic_subposets"]], "isomorphic_subposets_iterator() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.isomorphic_subposets_iterator"]], "join() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.join"]], "jump_number() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.jump_number"]], "kazhdan_lusztig_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.kazhdan_lusztig_polynomial"]], "le() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.le"]], "lequal_matrix() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.lequal_matrix"]], "level_sets() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.level_sets"]], "lexicographic_sum() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.lexicographic_sum"]], "linear_extension() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.linear_extension"]], "linear_extensions() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.linear_extensions"]], "linear_extensions_graph() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.linear_extensions_graph"]], "linear_intervals_count() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.linear_intervals_count"]], "list() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.list"]], "lower_covers() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.lower_covers"]], "lower_covers_iterator() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.lower_covers_iterator"]], "lt() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.lt"]], "magnitude() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.magnitude"]], "maximal_antichains() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.maximal_antichains"]], "maximal_chain_length() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.maximal_chain_length"]], "maximal_chains() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.maximal_chains"]], "maximal_chains_iterator() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.maximal_chains_iterator"]], "maximal_elements() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.maximal_elements"]], "meet() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.meet"]], "minimal_elements() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.minimal_elements"]], "moebius_function() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.moebius_function"]], "moebius_function_matrix() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.moebius_function_matrix"]], "open_interval() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.open_interval"]], "order_complex() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.order_complex"]], "order_filter() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.order_filter"]], "order_ideal() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.order_ideal"]], "order_ideal_cardinality() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.order_ideal_cardinality"]], "order_ideal_plot() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.order_ideal_plot"]], "order_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.order_polynomial"]], "order_polytope() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.order_polytope"]], "ordinal_product() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.ordinal_product"]], "ordinal_sum() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.ordinal_sum"]], "ordinal_summands() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.ordinal_summands"]], "p_partition_enumerator() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.p_partition_enumerator"]], "plot() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.plot"]], "product() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.product"]], "promotion() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.promotion"]], "random_linear_extension() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.random_linear_extension"]], "random_maximal_antichain() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.random_maximal_antichain"]], "random_maximal_chain() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.random_maximal_chain"]], "random_order_ideal() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.random_order_ideal"]], "random_subposet() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.random_subposet"]], "rank() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.rank"]], "rank_function() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.rank_function"]], "rees_product() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.rees_product"]], "relabel() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.relabel"]], "relations() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.relations"]], "relations_iterator() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.relations_iterator"]], "relations_number() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.relations_number"]], "sage.combinat.posets.posets": [[185, "module-sage.combinat.posets.posets"]], "show() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.show"]], "slant_sum() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.slant_sum"]], "sorted() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.sorted"]], "spectrum() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.spectrum"]], "star_product() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.star_product"]], "subposet() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.subposet"]], "top() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.top"]], "unwrap() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.unwrap"]], "upper_covers() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.upper_covers"]], "upper_covers_iterator() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.upper_covers_iterator"]], "width() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.width"]], "with_bounds() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.with_bounds"]], "with_linear_extension() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.with_linear_extension"]], "without_bounds() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.without_bounds"]], "zeta_polynomial() (sage.combinat.posets.posets.finiteposet method)": [[185, "sage.combinat.posets.posets.FinitePoset.zeta_polynomial"]], "gaussian_binomial() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.gaussian_binomial"]], "gaussian_multinomial() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.gaussian_multinomial"]], "q_binomial() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.q_binomial"]], "q_catalan_number() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.q_catalan_number"]], "q_factorial() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.q_factorial"]], "q_int() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.q_int"]], "q_jordan() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.q_jordan"]], "q_multinomial() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.q_multinomial"]], "q_pochhammer() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.q_pochhammer"]], "q_stirling_number1() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.q_stirling_number1"]], "q_stirling_number2() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.q_stirling_number2"]], "q_subgroups_of_abelian_group() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.q_subgroups_of_abelian_group"]], "qt_catalan_number() (in module sage.combinat.q_analogues)": [[186, "sage.combinat.q_analogues.qt_catalan_number"]], "sage.combinat.q_analogues": [[186, "module-sage.combinat.q_analogues"]], "q_bernoulli() (in module sage.combinat.q_bernoulli)": [[187, "sage.combinat.q_bernoulli.q_bernoulli"]], "q_bernoulli_polynomial() (in module sage.combinat.q_bernoulli)": [[187, "sage.combinat.q_bernoulli.q_bernoulli_polynomial"]], "sage.combinat.q_bernoulli": [[187, "module-sage.combinat.q_bernoulli"]], "sage.combinat.quickref": [[188, "module-sage.combinat.quickref"]], "from_list() (in module sage.combinat.ranker)": [[189, "sage.combinat.ranker.from_list"]], "on_fly() (in module sage.combinat.ranker)": [[189, "sage.combinat.ranker.on_fly"]], "rank_from_list() (in module sage.combinat.ranker)": [[189, "sage.combinat.ranker.rank_from_list"]], "sage.combinat.ranker": [[189, "module-sage.combinat.ranker"]], "unrank() (in module sage.combinat.ranker)": [[189, "sage.combinat.ranker.unrank"]], "unrank_from_list() (in module sage.combinat.ranker)": [[189, "sage.combinat.ranker.unrank_from_list"]], "element (sage.combinat.recognizable_series.recognizableseriesspace attribute)": [[190, "sage.combinat.recognizable_series.RecognizableSeriesSpace.Element"]], "prefixclosedset (class in sage.combinat.recognizable_series)": [[190, "sage.combinat.recognizable_series.PrefixClosedSet"]], "recognizableseries (class in sage.combinat.recognizable_series)": [[190, "sage.combinat.recognizable_series.RecognizableSeries"]], "recognizableseriesspace (class in sage.combinat.recognizable_series)": [[190, "sage.combinat.recognizable_series.RecognizableSeriesSpace"]], "add() (sage.combinat.recognizable_series.prefixclosedset method)": [[190, "sage.combinat.recognizable_series.PrefixClosedSet.add"]], "alphabet() (sage.combinat.recognizable_series.recognizableseriesspace method)": [[190, "sage.combinat.recognizable_series.RecognizableSeriesSpace.alphabet"]], "coefficient_of_word() (sage.combinat.recognizable_series.recognizableseries method)": [[190, "sage.combinat.recognizable_series.RecognizableSeries.coefficient_of_word"]], "coefficient_ring() (sage.combinat.recognizable_series.recognizableseriesspace method)": [[190, "sage.combinat.recognizable_series.RecognizableSeriesSpace.coefficient_ring"]], "create_by_alphabet() (sage.combinat.recognizable_series.prefixclosedset class method)": [[190, "sage.combinat.recognizable_series.PrefixClosedSet.create_by_alphabet"]], "dimension() (sage.combinat.recognizable_series.recognizableseries method)": [[190, "sage.combinat.recognizable_series.RecognizableSeries.dimension"]], "hadamard_product() (sage.combinat.recognizable_series.recognizableseries method)": [[190, "sage.combinat.recognizable_series.RecognizableSeries.hadamard_product"]], "indices() (sage.combinat.recognizable_series.recognizableseriesspace method)": [[190, "sage.combinat.recognizable_series.RecognizableSeriesSpace.indices"]], "is_trivial_zero() (sage.combinat.recognizable_series.recognizableseries method)": [[190, "sage.combinat.recognizable_series.RecognizableSeries.is_trivial_zero"]], "iterate_possible_additions() (sage.combinat.recognizable_series.prefixclosedset method)": [[190, "sage.combinat.recognizable_series.PrefixClosedSet.iterate_possible_additions"]], "left (sage.combinat.recognizable_series.recognizableseries property)": [[190, "sage.combinat.recognizable_series.RecognizableSeries.left"]], "linear_representation() (sage.combinat.recognizable_series.recognizableseries method)": [[190, "sage.combinat.recognizable_series.RecognizableSeries.linear_representation"]], "minimize_result() (in module sage.combinat.recognizable_series)": [[190, "sage.combinat.recognizable_series.minimize_result"]], "minimize_results (sage.combinat.recognizable_series.recognizableseriesspace property)": [[190, "sage.combinat.recognizable_series.RecognizableSeriesSpace.minimize_results"]], "minimized() (sage.combinat.recognizable_series.recognizableseries method)": [[190, "sage.combinat.recognizable_series.RecognizableSeries.minimized"]], "mu (sage.combinat.recognizable_series.recognizableseries property)": [[190, "sage.combinat.recognizable_series.RecognizableSeries.mu"]], "one_hadamard() (sage.combinat.recognizable_series.recognizableseriesspace method)": [[190, "sage.combinat.recognizable_series.RecognizableSeriesSpace.one_hadamard"]], "prefix_set() (sage.combinat.recognizable_series.prefixclosedset method)": [[190, "sage.combinat.recognizable_series.PrefixClosedSet.prefix_set"]], "right (sage.combinat.recognizable_series.recognizableseries property)": [[190, "sage.combinat.recognizable_series.RecognizableSeries.right"]], "sage.combinat.recognizable_series": [[190, "module-sage.combinat.recognizable_series"]], "some_elements() (sage.combinat.recognizable_series.recognizableseriesspace method)": [[190, "sage.combinat.recognizable_series.RecognizableSeriesSpace.some_elements"]], "transposed() (sage.combinat.recognizable_series.recognizableseries method)": [[190, "sage.combinat.recognizable_series.RecognizableSeries.transposed"]], "restrictedgrowtharrays (class in sage.combinat.restricted_growth)": [[191, "sage.combinat.restricted_growth.RestrictedGrowthArrays"]], "cardinality() (sage.combinat.restricted_growth.restrictedgrowtharrays method)": [[191, "sage.combinat.restricted_growth.RestrictedGrowthArrays.cardinality"]], "sage.combinat.restricted_growth": [[191, "module-sage.combinat.restricted_growth"]], "sage.combinat.ribbon": [[192, "module-sage.combinat.ribbon"]], "element (sage.combinat.ribbon_shaped_tableau.ribbonshapedtableaux attribute)": [[193, "sage.combinat.ribbon_shaped_tableau.RibbonShapedTableaux.Element"]], "element (sage.combinat.ribbon_shaped_tableau.standardribbonshapedtableaux attribute)": [[193, "sage.combinat.ribbon_shaped_tableau.StandardRibbonShapedTableaux.Element"]], "ribbonshapedtableau (class in sage.combinat.ribbon_shaped_tableau)": [[193, "sage.combinat.ribbon_shaped_tableau.RibbonShapedTableau"]], "ribbonshapedtableaux (class in sage.combinat.ribbon_shaped_tableau)": [[193, "sage.combinat.ribbon_shaped_tableau.RibbonShapedTableaux"]], "ribbon_class (class in sage.combinat.ribbon_shaped_tableau)": [[193, "sage.combinat.ribbon_shaped_tableau.Ribbon_class"]], "standardribbonshapedtableaux (class in sage.combinat.ribbon_shaped_tableau)": [[193, "sage.combinat.ribbon_shaped_tableau.StandardRibbonShapedTableaux"]], "standardribbonshapedtableaux_shape (class in sage.combinat.ribbon_shaped_tableau)": [[193, "sage.combinat.ribbon_shaped_tableau.StandardRibbonShapedTableaux_shape"]], "first() (sage.combinat.ribbon_shaped_tableau.standardribbonshapedtableaux_shape method)": [[193, "sage.combinat.ribbon_shaped_tableau.StandardRibbonShapedTableaux_shape.first"]], "from_permutation() (sage.combinat.ribbon_shaped_tableau.standardribbonshapedtableaux method)": [[193, "sage.combinat.ribbon_shaped_tableau.StandardRibbonShapedTableaux.from_permutation"]], "from_shape_and_word() (sage.combinat.ribbon_shaped_tableau.ribbonshapedtableaux method)": [[193, "sage.combinat.ribbon_shaped_tableau.RibbonShapedTableaux.from_shape_and_word"]], "from_shape_and_word() (sage.combinat.ribbon_shaped_tableau.standardribbonshapedtableaux method)": [[193, "sage.combinat.ribbon_shaped_tableau.StandardRibbonShapedTableaux.from_shape_and_word"]], "height() (sage.combinat.ribbon_shaped_tableau.ribbonshapedtableau method)": [[193, "sage.combinat.ribbon_shaped_tableau.RibbonShapedTableau.height"]], "last() (sage.combinat.ribbon_shaped_tableau.standardribbonshapedtableaux_shape method)": [[193, "sage.combinat.ribbon_shaped_tableau.StandardRibbonShapedTableaux_shape.last"]], "options (sage.combinat.ribbon_shaped_tableau.ribbonshapedtableaux attribute)": [[193, "sage.combinat.ribbon_shaped_tableau.RibbonShapedTableaux.options"]], "options (sage.combinat.ribbon_shaped_tableau.standardribbonshapedtableaux attribute)": [[193, "sage.combinat.ribbon_shaped_tableau.StandardRibbonShapedTableaux.options"]], "sage.combinat.ribbon_shaped_tableau": [[193, "module-sage.combinat.ribbon_shaped_tableau"]], "spin() (sage.combinat.ribbon_shaped_tableau.ribbonshapedtableau method)": [[193, "sage.combinat.ribbon_shaped_tableau.RibbonShapedTableau.spin"]], "width() (sage.combinat.ribbon_shaped_tableau.ribbonshapedtableau method)": [[193, "sage.combinat.ribbon_shaped_tableau.RibbonShapedTableau.width"]], "element (sage.combinat.ribbon_tableau.multiskewtableaux attribute)": [[194, "sage.combinat.ribbon_tableau.MultiSkewTableaux.Element"]], "element (sage.combinat.ribbon_tableau.ribbontableaux attribute)": [[194, "sage.combinat.ribbon_tableau.RibbonTableaux.Element"]], "multiskewtableau (class in sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.MultiSkewTableau"]], "multiskewtableaux (class in sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.MultiSkewTableaux"]], "ribbontableau (class in sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.RibbonTableau"]], "ribbontableau_class (class in sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.RibbonTableau_class"]], "ribbontableaux (class in sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.RibbonTableaux"]], "ribbontableaux_shape_weight_length (class in sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.RibbonTableaux_shape_weight_length"]], "semistandardmultiskewtableaux (class in sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.SemistandardMultiSkewTableaux"]], "cardinality() (sage.combinat.ribbon_tableau.ribbontableaux_shape_weight_length method)": [[194, "sage.combinat.ribbon_tableau.RibbonTableaux_shape_weight_length.cardinality"]], "cospin_polynomial() (in module sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.cospin_polynomial"]], "count_rec() (in module sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.count_rec"]], "from_expr() (sage.combinat.ribbon_tableau.ribbontableaux method)": [[194, "sage.combinat.ribbon_tableau.RibbonTableaux.from_expr"]], "graph_implementation_rec() (in module sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.graph_implementation_rec"]], "insertion_tableau() (in module sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.insertion_tableau"]], "inversion_pairs() (sage.combinat.ribbon_tableau.multiskewtableau method)": [[194, "sage.combinat.ribbon_tableau.MultiSkewTableau.inversion_pairs"]], "inversions() (sage.combinat.ribbon_tableau.multiskewtableau method)": [[194, "sage.combinat.ribbon_tableau.MultiSkewTableau.inversions"]], "length() (sage.combinat.ribbon_tableau.ribbontableau method)": [[194, "sage.combinat.ribbon_tableau.RibbonTableau.length"]], "list_rec() (in module sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.list_rec"]], "options (sage.combinat.ribbon_tableau.ribbontableaux attribute)": [[194, "sage.combinat.ribbon_tableau.RibbonTableaux.options"]], "sage.combinat.ribbon_tableau": [[194, "module-sage.combinat.ribbon_tableau"]], "shape() (sage.combinat.ribbon_tableau.multiskewtableau method)": [[194, "sage.combinat.ribbon_tableau.MultiSkewTableau.shape"]], "size() (sage.combinat.ribbon_tableau.multiskewtableau method)": [[194, "sage.combinat.ribbon_tableau.MultiSkewTableau.size"]], "spin_polynomial() (in module sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.spin_polynomial"]], "spin_polynomial_square() (in module sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.spin_polynomial_square"]], "spin_rec() (in module sage.combinat.ribbon_tableau)": [[194, "sage.combinat.ribbon_tableau.spin_rec"]], "to_word() (sage.combinat.ribbon_tableau.ribbontableau method)": [[194, "sage.combinat.ribbon_tableau.RibbonTableau.to_word"]], "weight() (sage.combinat.ribbon_tableau.multiskewtableau method)": [[194, "sage.combinat.ribbon_tableau.MultiSkewTableau.weight"]], "sage.combinat.rigged_configurations.all": [[195, "module-sage.combinat.rigged_configurations.all"]], "krttorcbijectionabstract (class in sage.combinat.rigged_configurations.bij_abstract_class)": [[196, "sage.combinat.rigged_configurations.bij_abstract_class.KRTToRCBijectionAbstract"]], "rctokrtbijectionabstract (class in sage.combinat.rigged_configurations.bij_abstract_class)": [[196, "sage.combinat.rigged_configurations.bij_abstract_class.RCToKRTBijectionAbstract"]], "next_state() (sage.combinat.rigged_configurations.bij_abstract_class.krttorcbijectionabstract method)": [[196, "sage.combinat.rigged_configurations.bij_abstract_class.KRTToRCBijectionAbstract.next_state"]], "next_state() (sage.combinat.rigged_configurations.bij_abstract_class.rctokrtbijectionabstract method)": [[196, "sage.combinat.rigged_configurations.bij_abstract_class.RCToKRTBijectionAbstract.next_state"]], "run() (sage.combinat.rigged_configurations.bij_abstract_class.krttorcbijectionabstract method)": [[196, "sage.combinat.rigged_configurations.bij_abstract_class.KRTToRCBijectionAbstract.run"]], "run() (sage.combinat.rigged_configurations.bij_abstract_class.rctokrtbijectionabstract method)": [[196, "sage.combinat.rigged_configurations.bij_abstract_class.RCToKRTBijectionAbstract.run"]], "sage.combinat.rigged_configurations.bij_abstract_class": [[196, "module-sage.combinat.rigged_configurations.bij_abstract_class"]], "fromrcisomorphism (class in sage.combinat.rigged_configurations.bij_infinity)": [[197, "sage.combinat.rigged_configurations.bij_infinity.FromRCIsomorphism"]], "fromtableauisomorphism (class in sage.combinat.rigged_configurations.bij_infinity)": [[197, "sage.combinat.rigged_configurations.bij_infinity.FromTableauIsomorphism"]], "mlttorcbijectiontypeb (class in sage.combinat.rigged_configurations.bij_infinity)": [[197, "sage.combinat.rigged_configurations.bij_infinity.MLTToRCBijectionTypeB"]], "mlttorcbijectiontyped (class in sage.combinat.rigged_configurations.bij_infinity)": [[197, "sage.combinat.rigged_configurations.bij_infinity.MLTToRCBijectionTypeD"]], "rctomltbijectiontypeb (class in sage.combinat.rigged_configurations.bij_infinity)": [[197, "sage.combinat.rigged_configurations.bij_infinity.RCToMLTBijectionTypeB"]], "rctomltbijectiontyped (class in sage.combinat.rigged_configurations.bij_infinity)": [[197, "sage.combinat.rigged_configurations.bij_infinity.RCToMLTBijectionTypeD"]], "run() (sage.combinat.rigged_configurations.bij_infinity.mlttorcbijectiontypeb method)": [[197, "sage.combinat.rigged_configurations.bij_infinity.MLTToRCBijectionTypeB.run"]], "run() (sage.combinat.rigged_configurations.bij_infinity.mlttorcbijectiontyped method)": [[197, "sage.combinat.rigged_configurations.bij_infinity.MLTToRCBijectionTypeD.run"]], "run() (sage.combinat.rigged_configurations.bij_infinity.rctomltbijectiontypeb method)": [[197, "sage.combinat.rigged_configurations.bij_infinity.RCToMLTBijectionTypeB.run"]], "run() (sage.combinat.rigged_configurations.bij_infinity.rctomltbijectiontyped method)": [[197, "sage.combinat.rigged_configurations.bij_infinity.RCToMLTBijectionTypeD.run"]], "sage.combinat.rigged_configurations.bij_infinity": [[197, "module-sage.combinat.rigged_configurations.bij_infinity"]], "krttorcbijectiontypea (class in sage.combinat.rigged_configurations.bij_type_a)": [[198, "sage.combinat.rigged_configurations.bij_type_A.KRTToRCBijectionTypeA"]], "rctokrtbijectiontypea (class in sage.combinat.rigged_configurations.bij_type_a)": [[198, "sage.combinat.rigged_configurations.bij_type_A.RCToKRTBijectionTypeA"]], "next_state() (sage.combinat.rigged_configurations.bij_type_a.krttorcbijectiontypea method)": [[198, "sage.combinat.rigged_configurations.bij_type_A.KRTToRCBijectionTypeA.next_state"]], "next_state() (sage.combinat.rigged_configurations.bij_type_a.rctokrtbijectiontypea method)": [[198, "sage.combinat.rigged_configurations.bij_type_A.RCToKRTBijectionTypeA.next_state"]], "sage.combinat.rigged_configurations.bij_type_a": [[198, "module-sage.combinat.rigged_configurations.bij_type_A"]], "krttorcbijectiontypea2dual (class in sage.combinat.rigged_configurations.bij_type_a2_dual)": [[199, "sage.combinat.rigged_configurations.bij_type_A2_dual.KRTToRCBijectionTypeA2Dual"]], "rctokrtbijectiontypea2dual (class in sage.combinat.rigged_configurations.bij_type_a2_dual)": [[199, "sage.combinat.rigged_configurations.bij_type_A2_dual.RCToKRTBijectionTypeA2Dual"]], "next_state() (sage.combinat.rigged_configurations.bij_type_a2_dual.krttorcbijectiontypea2dual method)": [[199, "sage.combinat.rigged_configurations.bij_type_A2_dual.KRTToRCBijectionTypeA2Dual.next_state"]], "next_state() (sage.combinat.rigged_configurations.bij_type_a2_dual.rctokrtbijectiontypea2dual method)": [[199, "sage.combinat.rigged_configurations.bij_type_A2_dual.RCToKRTBijectionTypeA2Dual.next_state"]], "sage.combinat.rigged_configurations.bij_type_a2_dual": [[199, "module-sage.combinat.rigged_configurations.bij_type_A2_dual"]], "krttorcbijectiontypea2even (class in sage.combinat.rigged_configurations.bij_type_a2_even)": [[200, "sage.combinat.rigged_configurations.bij_type_A2_even.KRTToRCBijectionTypeA2Even"]], "rctokrtbijectiontypea2even (class in sage.combinat.rigged_configurations.bij_type_a2_even)": [[200, "sage.combinat.rigged_configurations.bij_type_A2_even.RCToKRTBijectionTypeA2Even"]], "next_state() (sage.combinat.rigged_configurations.bij_type_a2_even.krttorcbijectiontypea2even method)": [[200, "sage.combinat.rigged_configurations.bij_type_A2_even.KRTToRCBijectionTypeA2Even.next_state"]], "next_state() (sage.combinat.rigged_configurations.bij_type_a2_even.rctokrtbijectiontypea2even method)": [[200, "sage.combinat.rigged_configurations.bij_type_A2_even.RCToKRTBijectionTypeA2Even.next_state"]], "sage.combinat.rigged_configurations.bij_type_a2_even": [[200, "module-sage.combinat.rigged_configurations.bij_type_A2_even"]], "krttorcbijectiontypea2odd (class in sage.combinat.rigged_configurations.bij_type_a2_odd)": [[201, "sage.combinat.rigged_configurations.bij_type_A2_odd.KRTToRCBijectionTypeA2Odd"]], "rctokrtbijectiontypea2odd (class in sage.combinat.rigged_configurations.bij_type_a2_odd)": [[201, "sage.combinat.rigged_configurations.bij_type_A2_odd.RCToKRTBijectionTypeA2Odd"]], "next_state() (sage.combinat.rigged_configurations.bij_type_a2_odd.krttorcbijectiontypea2odd method)": [[201, "sage.combinat.rigged_configurations.bij_type_A2_odd.KRTToRCBijectionTypeA2Odd.next_state"]], "next_state() (sage.combinat.rigged_configurations.bij_type_a2_odd.rctokrtbijectiontypea2odd method)": [[201, "sage.combinat.rigged_configurations.bij_type_A2_odd.RCToKRTBijectionTypeA2Odd.next_state"]], "sage.combinat.rigged_configurations.bij_type_a2_odd": [[201, "module-sage.combinat.rigged_configurations.bij_type_A2_odd"]], "krttorcbijectiontypeb (class in sage.combinat.rigged_configurations.bij_type_b)": [[202, "sage.combinat.rigged_configurations.bij_type_B.KRTToRCBijectionTypeB"]], "rctokrtbijectiontypeb (class in sage.combinat.rigged_configurations.bij_type_b)": [[202, "sage.combinat.rigged_configurations.bij_type_B.RCToKRTBijectionTypeB"]], "next_state() (sage.combinat.rigged_configurations.bij_type_b.krttorcbijectiontypeb method)": [[202, "sage.combinat.rigged_configurations.bij_type_B.KRTToRCBijectionTypeB.next_state"]], "next_state() (sage.combinat.rigged_configurations.bij_type_b.rctokrtbijectiontypeb method)": [[202, "sage.combinat.rigged_configurations.bij_type_B.RCToKRTBijectionTypeB.next_state"]], "other_outcome() (sage.combinat.rigged_configurations.bij_type_b.krttorcbijectiontypeb method)": [[202, "sage.combinat.rigged_configurations.bij_type_B.KRTToRCBijectionTypeB.other_outcome"]], "run() (sage.combinat.rigged_configurations.bij_type_b.krttorcbijectiontypeb method)": [[202, "sage.combinat.rigged_configurations.bij_type_B.KRTToRCBijectionTypeB.run"]], "run() (sage.combinat.rigged_configurations.bij_type_b.rctokrtbijectiontypeb method)": [[202, "sage.combinat.rigged_configurations.bij_type_B.RCToKRTBijectionTypeB.run"]], "sage.combinat.rigged_configurations.bij_type_b": [[202, "module-sage.combinat.rigged_configurations.bij_type_B"]], "krttorcbijectiontypec (class in sage.combinat.rigged_configurations.bij_type_c)": [[203, "sage.combinat.rigged_configurations.bij_type_C.KRTToRCBijectionTypeC"]], "rctokrtbijectiontypec (class in sage.combinat.rigged_configurations.bij_type_c)": [[203, "sage.combinat.rigged_configurations.bij_type_C.RCToKRTBijectionTypeC"]], "next_state() (sage.combinat.rigged_configurations.bij_type_c.krttorcbijectiontypec method)": [[203, "sage.combinat.rigged_configurations.bij_type_C.KRTToRCBijectionTypeC.next_state"]], "next_state() (sage.combinat.rigged_configurations.bij_type_c.rctokrtbijectiontypec method)": [[203, "sage.combinat.rigged_configurations.bij_type_C.RCToKRTBijectionTypeC.next_state"]], "sage.combinat.rigged_configurations.bij_type_c": [[203, "module-sage.combinat.rigged_configurations.bij_type_C"]], "krttorcbijectiontyped (class in sage.combinat.rigged_configurations.bij_type_d)": [[204, "sage.combinat.rigged_configurations.bij_type_D.KRTToRCBijectionTypeD"]], "rctokrtbijectiontyped (class in sage.combinat.rigged_configurations.bij_type_d)": [[204, "sage.combinat.rigged_configurations.bij_type_D.RCToKRTBijectionTypeD"]], "doubling_map() (sage.combinat.rigged_configurations.bij_type_d.krttorcbijectiontyped method)": [[204, "sage.combinat.rigged_configurations.bij_type_D.KRTToRCBijectionTypeD.doubling_map"]], "doubling_map() (sage.combinat.rigged_configurations.bij_type_d.rctokrtbijectiontyped method)": [[204, "sage.combinat.rigged_configurations.bij_type_D.RCToKRTBijectionTypeD.doubling_map"]], "halving_map() (sage.combinat.rigged_configurations.bij_type_d.krttorcbijectiontyped method)": [[204, "sage.combinat.rigged_configurations.bij_type_D.KRTToRCBijectionTypeD.halving_map"]], "halving_map() (sage.combinat.rigged_configurations.bij_type_d.rctokrtbijectiontyped method)": [[204, "sage.combinat.rigged_configurations.bij_type_D.RCToKRTBijectionTypeD.halving_map"]], "next_state() (sage.combinat.rigged_configurations.bij_type_d.krttorcbijectiontyped method)": [[204, "sage.combinat.rigged_configurations.bij_type_D.KRTToRCBijectionTypeD.next_state"]], "next_state() (sage.combinat.rigged_configurations.bij_type_d.rctokrtbijectiontyped method)": [[204, "sage.combinat.rigged_configurations.bij_type_D.RCToKRTBijectionTypeD.next_state"]], "run() (sage.combinat.rigged_configurations.bij_type_d.krttorcbijectiontyped method)": [[204, "sage.combinat.rigged_configurations.bij_type_D.KRTToRCBijectionTypeD.run"]], "run() (sage.combinat.rigged_configurations.bij_type_d.rctokrtbijectiontyped method)": [[204, "sage.combinat.rigged_configurations.bij_type_D.RCToKRTBijectionTypeD.run"]], "sage.combinat.rigged_configurations.bij_type_d": [[204, "module-sage.combinat.rigged_configurations.bij_type_D"]], "krttorcbijectiontypedtri (class in sage.combinat.rigged_configurations.bij_type_d_tri)": [[205, "sage.combinat.rigged_configurations.bij_type_D_tri.KRTToRCBijectionTypeDTri"]], "rctokrtbijectiontypedtri (class in sage.combinat.rigged_configurations.bij_type_d_tri)": [[205, "sage.combinat.rigged_configurations.bij_type_D_tri.RCToKRTBijectionTypeDTri"]], "next_state() (sage.combinat.rigged_configurations.bij_type_d_tri.krttorcbijectiontypedtri method)": [[205, "sage.combinat.rigged_configurations.bij_type_D_tri.KRTToRCBijectionTypeDTri.next_state"]], "next_state() (sage.combinat.rigged_configurations.bij_type_d_tri.rctokrtbijectiontypedtri method)": [[205, "sage.combinat.rigged_configurations.bij_type_D_tri.RCToKRTBijectionTypeDTri.next_state"]], "sage.combinat.rigged_configurations.bij_type_d_tri": [[205, "module-sage.combinat.rigged_configurations.bij_type_D_tri"]], "krttorcbijectiontypedtwisted (class in sage.combinat.rigged_configurations.bij_type_d_twisted)": [[206, "sage.combinat.rigged_configurations.bij_type_D_twisted.KRTToRCBijectionTypeDTwisted"]], "rctokrtbijectiontypedtwisted (class in sage.combinat.rigged_configurations.bij_type_d_twisted)": [[206, "sage.combinat.rigged_configurations.bij_type_D_twisted.RCToKRTBijectionTypeDTwisted"]], "next_state() (sage.combinat.rigged_configurations.bij_type_d_twisted.krttorcbijectiontypedtwisted method)": [[206, "sage.combinat.rigged_configurations.bij_type_D_twisted.KRTToRCBijectionTypeDTwisted.next_state"]], "next_state() (sage.combinat.rigged_configurations.bij_type_d_twisted.rctokrtbijectiontypedtwisted method)": [[206, "sage.combinat.rigged_configurations.bij_type_D_twisted.RCToKRTBijectionTypeDTwisted.next_state"]], "run() (sage.combinat.rigged_configurations.bij_type_d_twisted.krttorcbijectiontypedtwisted method)": [[206, "sage.combinat.rigged_configurations.bij_type_D_twisted.KRTToRCBijectionTypeDTwisted.run"]], "run() (sage.combinat.rigged_configurations.bij_type_d_twisted.rctokrtbijectiontypedtwisted method)": [[206, "sage.combinat.rigged_configurations.bij_type_D_twisted.RCToKRTBijectionTypeDTwisted.run"]], "sage.combinat.rigged_configurations.bij_type_d_twisted": [[206, "module-sage.combinat.rigged_configurations.bij_type_D_twisted"]], "krttorcbijection() (in module sage.combinat.rigged_configurations.bijection)": [[207, "sage.combinat.rigged_configurations.bijection.KRTToRCBijection"]], "rctokrtbijection() (in module sage.combinat.rigged_configurations.bijection)": [[207, "sage.combinat.rigged_configurations.bijection.RCToKRTBijection"]], "sage.combinat.rigged_configurations.bijection": [[207, "module-sage.combinat.rigged_configurations.bijection"]], "element (sage.combinat.rigged_configurations.kleber_tree.klebertree attribute)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTree.Element"]], "klebertree (class in sage.combinat.rigged_configurations.kleber_tree)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTree"]], "klebertreenode (class in sage.combinat.rigged_configurations.kleber_tree)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTreeNode"]], "klebertreetypea2even (class in sage.combinat.rigged_configurations.kleber_tree)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTreeTypeA2Even"]], "virtualklebertree (class in sage.combinat.rigged_configurations.kleber_tree)": [[208, "sage.combinat.rigged_configurations.kleber_tree.VirtualKleberTree"]], "base_tree() (sage.combinat.rigged_configurations.kleber_tree.virtualklebertree method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.VirtualKleberTree.base_tree"]], "breadth_first_iter() (sage.combinat.rigged_configurations.kleber_tree.klebertree method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTree.breadth_first_iter"]], "breadth_first_iter() (sage.combinat.rigged_configurations.kleber_tree.klebertreetypea2even method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTreeTypeA2Even.breadth_first_iter"]], "breadth_first_iter() (sage.combinat.rigged_configurations.kleber_tree.virtualklebertree method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.VirtualKleberTree.breadth_first_iter"]], "cartan_type() (sage.combinat.rigged_configurations.kleber_tree.klebertree method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTree.cartan_type"]], "depth() (sage.combinat.rigged_configurations.kleber_tree.klebertreenode method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTreeNode.depth"]], "depth_first_iter() (sage.combinat.rigged_configurations.kleber_tree.klebertree method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTree.depth_first_iter"]], "depth_first_iter() (sage.combinat.rigged_configurations.kleber_tree.klebertreetypea2even method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTreeTypeA2Even.depth_first_iter"]], "depth_first_iter() (sage.combinat.rigged_configurations.kleber_tree.virtualklebertree method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.VirtualKleberTree.depth_first_iter"]], "digraph() (sage.combinat.rigged_configurations.kleber_tree.klebertree method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTree.digraph"]], "latex_options() (sage.combinat.rigged_configurations.kleber_tree.klebertree method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTree.latex_options"]], "multiplicity() (sage.combinat.rigged_configurations.kleber_tree.klebertreenode method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTreeNode.multiplicity"]], "plot() (sage.combinat.rigged_configurations.kleber_tree.klebertree method)": [[208, "sage.combinat.rigged_configurations.kleber_tree.KleberTree.plot"]], "sage.combinat.rigged_configurations.kleber_tree": [[208, "module-sage.combinat.rigged_configurations.kleber_tree"]], "element (sage.combinat.rigged_configurations.kr_tableaux.krtableauxbn attribute)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxBn.Element"]], "element (sage.combinat.rigged_configurations.kr_tableaux.krtableauxdtwistedspin attribute)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxDTwistedSpin.Element"]], "element (sage.combinat.rigged_configurations.kr_tableaux.krtableauxspin attribute)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpin.Element"]], "element (sage.combinat.rigged_configurations.kr_tableaux.krtableauxtypefromrc attribute)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeFromRC.Element"]], "element (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableaux attribute)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableaux.Element"]], "krtableauxbn (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxBn"]], "krtableauxdtwistedspin (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxDTwistedSpin"]], "krtableauxrectangle (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxRectangle"]], "krtableauxspin (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpin"]], "krtableauxspinelement (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpinElement"]], "krtableauxtypebox (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeBox"]], "krtableauxtypefromrc (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeFromRC"]], "krtableauxtypefromrcelement (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeFromRCElement"]], "krtableauxtypehorizonal (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeHorizonal"]], "krtableauxtypevertical (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeVertical"]], "kirillovreshetikhintableaux (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableaux"]], "kirillovreshetikhintableauxelement (class in sage.combinat.rigged_configurations.kr_tableaux)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement"]], "classical_decomposition() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableaux method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableaux.classical_decomposition"]], "classical_weight() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxspinelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpinElement.classical_weight"]], "classical_weight() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.classical_weight"]], "e() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxspinelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpinElement.e"]], "e() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxtypefromrcelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeFromRCElement.e"]], "e() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.e"]], "epsilon() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxspinelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpinElement.epsilon"]], "epsilon() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxtypefromrcelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeFromRCElement.epsilon"]], "epsilon() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.epsilon"]], "f() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxspinelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpinElement.f"]], "f() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxtypefromrcelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeFromRCElement.f"]], "f() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.f"]], "from_kirillov_reshetikhin_crystal() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxbn method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxBn.from_kirillov_reshetikhin_crystal"]], "from_kirillov_reshetikhin_crystal() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxrectangle method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxRectangle.from_kirillov_reshetikhin_crystal"]], "from_kirillov_reshetikhin_crystal() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxtypehorizonal method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeHorizonal.from_kirillov_reshetikhin_crystal"]], "from_kirillov_reshetikhin_crystal() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxtypevertical method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeVertical.from_kirillov_reshetikhin_crystal"]], "from_kirillov_reshetikhin_crystal() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableaux method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableaux.from_kirillov_reshetikhin_crystal"]], "kirillov_reshetikhin_crystal() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableaux method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableaux.kirillov_reshetikhin_crystal"]], "left_split() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxspinelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpinElement.left_split"]], "left_split() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.left_split"]], "module_generator() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableaux method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableaux.module_generator"]], "module_generators() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxtypefromrc method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeFromRC.module_generators"]], "phi() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxspinelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpinElement.phi"]], "phi() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxtypefromrcelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxTypeFromRCElement.phi"]], "phi() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.phi"]], "pp() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.pp"]], "r() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableaux method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableaux.r"]], "right_split() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.right_split"]], "s() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableaux method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableaux.s"]], "sage.combinat.rigged_configurations.kr_tableaux": [[209, "module-sage.combinat.rigged_configurations.kr_tableaux"]], "tensor() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableaux method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableaux.tensor"]], "to_array() (sage.combinat.rigged_configurations.kr_tableaux.krtableauxspinelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KRTableauxSpinElement.to_array"]], "to_array() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.to_array"]], "to_classical_highest_weight() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.to_classical_highest_weight"]], "to_kirillov_reshetikhin_crystal() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.to_kirillov_reshetikhin_crystal"]], "to_tableau() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.to_tableau"]], "weight() (sage.combinat.rigged_configurations.kr_tableaux.kirillovreshetikhintableauxelement method)": [[209, "sage.combinat.rigged_configurations.kr_tableaux.KirillovReshetikhinTableauxElement.weight"]], "crystalofnonsimplylacedrc (class in sage.combinat.rigged_configurations.rc_crystal)": [[210, "sage.combinat.rigged_configurations.rc_crystal.CrystalOfNonSimplyLacedRC"]], "crystalofriggedconfigurations (class in sage.combinat.rigged_configurations.rc_crystal)": [[210, "sage.combinat.rigged_configurations.rc_crystal.CrystalOfRiggedConfigurations"]], "element (sage.combinat.rigged_configurations.rc_crystal.crystalofnonsimplylacedrc attribute)": [[210, "sage.combinat.rigged_configurations.rc_crystal.CrystalOfNonSimplyLacedRC.Element"]], "element (sage.combinat.rigged_configurations.rc_crystal.crystalofriggedconfigurations attribute)": [[210, "sage.combinat.rigged_configurations.rc_crystal.CrystalOfRiggedConfigurations.Element"]], "from_virtual() (sage.combinat.rigged_configurations.rc_crystal.crystalofnonsimplylacedrc method)": [[210, "sage.combinat.rigged_configurations.rc_crystal.CrystalOfNonSimplyLacedRC.from_virtual"]], "options (sage.combinat.rigged_configurations.rc_crystal.crystalofriggedconfigurations attribute)": [[210, "sage.combinat.rigged_configurations.rc_crystal.CrystalOfRiggedConfigurations.options"]], "sage.combinat.rigged_configurations.rc_crystal": [[210, "module-sage.combinat.rigged_configurations.rc_crystal"]], "to_virtual() (sage.combinat.rigged_configurations.rc_crystal.crystalofnonsimplylacedrc method)": [[210, "sage.combinat.rigged_configurations.rc_crystal.CrystalOfNonSimplyLacedRC.to_virtual"]], "virtual() (sage.combinat.rigged_configurations.rc_crystal.crystalofnonsimplylacedrc method)": [[210, "sage.combinat.rigged_configurations.rc_crystal.CrystalOfNonSimplyLacedRC.virtual"]], "weight_lattice_realization() (sage.combinat.rigged_configurations.rc_crystal.crystalofriggedconfigurations method)": [[210, "sage.combinat.rigged_configurations.rc_crystal.CrystalOfRiggedConfigurations.weight_lattice_realization"]], "infinitycrystalofnonsimplylacedrc (class in sage.combinat.rigged_configurations.rc_infinity)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfNonSimplyLacedRC"]], "infinitycrystalofnonsimplylacedrc.element (class in sage.combinat.rigged_configurations.rc_infinity)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfNonSimplyLacedRC.Element"]], "infinitycrystalofriggedconfigurations (class in sage.combinat.rigged_configurations.rc_infinity)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfRiggedConfigurations"]], "infinitycrystalofriggedconfigurations.element (class in sage.combinat.rigged_configurations.rc_infinity)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfRiggedConfigurations.Element"]], "from_virtual() (sage.combinat.rigged_configurations.rc_infinity.infinitycrystalofnonsimplylacedrc method)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfNonSimplyLacedRC.from_virtual"]], "options (sage.combinat.rigged_configurations.rc_infinity.infinitycrystalofriggedconfigurations attribute)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfRiggedConfigurations.options"]], "sage.combinat.rigged_configurations.rc_infinity": [[211, "module-sage.combinat.rigged_configurations.rc_infinity"]], "to_virtual() (sage.combinat.rigged_configurations.rc_infinity.infinitycrystalofnonsimplylacedrc method)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfNonSimplyLacedRC.to_virtual"]], "virtual() (sage.combinat.rigged_configurations.rc_infinity.infinitycrystalofnonsimplylacedrc method)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfNonSimplyLacedRC.virtual"]], "weight() (sage.combinat.rigged_configurations.rc_infinity.infinitycrystalofnonsimplylacedrc.element method)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfNonSimplyLacedRC.Element.weight"]], "weight() (sage.combinat.rigged_configurations.rc_infinity.infinitycrystalofriggedconfigurations.element method)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfRiggedConfigurations.Element.weight"]], "weight_lattice_realization() (sage.combinat.rigged_configurations.rc_infinity.infinitycrystalofriggedconfigurations method)": [[211, "sage.combinat.rigged_configurations.rc_infinity.InfinityCrystalOfRiggedConfigurations.weight_lattice_realization"]], "krrcnonsimplylacedelement (class in sage.combinat.rigged_configurations.rigged_configuration_element)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCNonSimplyLacedElement"]], "krrcsimplylacedelement (class in sage.combinat.rigged_configurations.rigged_configuration_element)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCSimplyLacedElement"]], "krrctypea2dualelement (class in sage.combinat.rigged_configurations.rigged_configuration_element)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCTypeA2DualElement"]], "krriggedconfigurationelement (class in sage.combinat.rigged_configurations.rigged_configuration_element)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement"]], "rchwnonsimplylacedelement (class in sage.combinat.rigged_configurations.rigged_configuration_element)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCHWNonSimplyLacedElement"]], "rchighestweightelement (class in sage.combinat.rigged_configurations.rigged_configuration_element)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCHighestWeightElement"]], "rcnonsimplylacedelement (class in sage.combinat.rigged_configurations.rigged_configuration_element)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCNonSimplyLacedElement"]], "riggedconfigurationelement (class in sage.combinat.rigged_configurations.rigged_configuration_element)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RiggedConfigurationElement"]], "cc() (sage.combinat.rigged_configurations.rigged_configuration_element.krrcnonsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCNonSimplyLacedElement.cc"]], "cc() (sage.combinat.rigged_configurations.rigged_configuration_element.krrcsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCSimplyLacedElement.cc"]], "cc() (sage.combinat.rigged_configurations.rigged_configuration_element.krrctypea2dualelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCTypeA2DualElement.cc"]], "charge() (sage.combinat.rigged_configurations.rigged_configuration_element.krrcsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCSimplyLacedElement.charge"]], "check() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.check"]], "check() (sage.combinat.rigged_configurations.rigged_configuration_element.rchwnonsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCHWNonSimplyLacedElement.check"]], "check() (sage.combinat.rigged_configurations.rigged_configuration_element.rchighestweightelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCHighestWeightElement.check"]], "check() (sage.combinat.rigged_configurations.rigged_configuration_element.riggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RiggedConfigurationElement.check"]], "classical_weight() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.classical_weight"]], "cocharge() (sage.combinat.rigged_configurations.rigged_configuration_element.krrcnonsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCNonSimplyLacedElement.cocharge"]], "cocharge() (sage.combinat.rigged_configurations.rigged_configuration_element.krrcsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCSimplyLacedElement.cocharge"]], "cocharge() (sage.combinat.rigged_configurations.rigged_configuration_element.krrctypea2dualelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCTypeA2DualElement.cocharge"]], "complement_rigging() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.complement_rigging"]], "delta() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.delta"]], "e() (sage.combinat.rigged_configurations.rigged_configuration_element.krrcnonsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCNonSimplyLacedElement.e"]], "e() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.e"]], "e() (sage.combinat.rigged_configurations.rigged_configuration_element.rcnonsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCNonSimplyLacedElement.e"]], "e() (sage.combinat.rigged_configurations.rigged_configuration_element.riggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RiggedConfigurationElement.e"]], "epsilon() (sage.combinat.rigged_configurations.rigged_configuration_element.krrctypea2dualelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCTypeA2DualElement.epsilon"]], "epsilon() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.epsilon"]], "epsilon() (sage.combinat.rigged_configurations.rigged_configuration_element.riggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RiggedConfigurationElement.epsilon"]], "f() (sage.combinat.rigged_configurations.rigged_configuration_element.krrcnonsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCNonSimplyLacedElement.f"]], "f() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.f"]], "f() (sage.combinat.rigged_configurations.rigged_configuration_element.rchwnonsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCHWNonSimplyLacedElement.f"]], "f() (sage.combinat.rigged_configurations.rigged_configuration_element.rchighestweightelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCHighestWeightElement.f"]], "f() (sage.combinat.rigged_configurations.rigged_configuration_element.rcnonsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCNonSimplyLacedElement.f"]], "f() (sage.combinat.rigged_configurations.rigged_configuration_element.riggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RiggedConfigurationElement.f"]], "left_box() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.left_box"]], "left_column_box() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.left_column_box"]], "left_split() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.left_split"]], "nu() (sage.combinat.rigged_configurations.rigged_configuration_element.riggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RiggedConfigurationElement.nu"]], "partition_rigging_lists() (sage.combinat.rigged_configurations.rigged_configuration_element.riggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RiggedConfigurationElement.partition_rigging_lists"]], "phi() (sage.combinat.rigged_configurations.rigged_configuration_element.krrctypea2dualelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRCTypeA2DualElement.phi"]], "phi() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.phi"]], "phi() (sage.combinat.rigged_configurations.rigged_configuration_element.riggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RiggedConfigurationElement.phi"]], "right_column_box() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.right_column_box"]], "right_split() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.right_split"]], "sage.combinat.rigged_configurations.rigged_configuration_element": [[212, "module-sage.combinat.rigged_configurations.rigged_configuration_element"]], "to_tensor_product_of_kirillov_reshetikhin_crystals() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.to_tensor_product_of_kirillov_reshetikhin_crystals"]], "to_tensor_product_of_kirillov_reshetikhin_tableaux() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.to_tensor_product_of_kirillov_reshetikhin_tableaux"]], "to_virtual_configuration() (sage.combinat.rigged_configurations.rigged_configuration_element.rcnonsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCNonSimplyLacedElement.to_virtual_configuration"]], "vacancy_number() (sage.combinat.rigged_configurations.rigged_configuration_element.riggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RiggedConfigurationElement.vacancy_number"]], "weight() (sage.combinat.rigged_configurations.rigged_configuration_element.krriggedconfigurationelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.KRRiggedConfigurationElement.weight"]], "weight() (sage.combinat.rigged_configurations.rigged_configuration_element.rchwnonsimplylacedelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCHWNonSimplyLacedElement.weight"]], "weight() (sage.combinat.rigged_configurations.rigged_configuration_element.rchighestweightelement method)": [[212, "sage.combinat.rigged_configurations.rigged_configuration_element.RCHighestWeightElement.weight"]], "element (sage.combinat.rigged_configurations.rigged_configurations.rcnonsimplylaced attribute)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCNonSimplyLaced.Element"]], "element (sage.combinat.rigged_configurations.rigged_configurations.rctypea2dual attribute)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Dual.Element"]], "element (sage.combinat.rigged_configurations.rigged_configurations.riggedconfigurations attribute)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations.Element"]], "kirillovreshetikhincrystal() (in module sage.combinat.rigged_configurations.rigged_configurations)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.KirillovReshetikhinCrystal"]], "rcnonsimplylaced (class in sage.combinat.rigged_configurations.rigged_configurations)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCNonSimplyLaced"]], "rctypea2dual (class in sage.combinat.rigged_configurations.rigged_configurations)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Dual"]], "rctypea2even (class in sage.combinat.rigged_configurations.rigged_configurations)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Even"]], "riggedconfigurations (class in sage.combinat.rigged_configurations.rigged_configurations)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations"]], "cardinality() (sage.combinat.rigged_configurations.rigged_configurations.rctypea2even method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Even.cardinality"]], "classically_highest_weight_vectors() (sage.combinat.rigged_configurations.rigged_configurations.riggedconfigurations method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations.classically_highest_weight_vectors"]], "fermionic_formula() (sage.combinat.rigged_configurations.rigged_configurations.riggedconfigurations method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations.fermionic_formula"]], "from_virtual() (sage.combinat.rigged_configurations.rigged_configurations.rcnonsimplylaced method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCNonSimplyLaced.from_virtual"]], "from_virtual() (sage.combinat.rigged_configurations.rigged_configurations.rctypea2dual method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Dual.from_virtual"]], "from_virtual() (sage.combinat.rigged_configurations.rigged_configurations.rctypea2even method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Even.from_virtual"]], "kleber_tree() (sage.combinat.rigged_configurations.rigged_configurations.rcnonsimplylaced method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCNonSimplyLaced.kleber_tree"]], "kleber_tree() (sage.combinat.rigged_configurations.rigged_configurations.riggedconfigurations method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations.kleber_tree"]], "module_generators() (sage.combinat.rigged_configurations.rigged_configurations.rcnonsimplylaced method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCNonSimplyLaced.module_generators"]], "module_generators() (sage.combinat.rigged_configurations.rigged_configurations.rctypea2dual method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Dual.module_generators"]], "module_generators() (sage.combinat.rigged_configurations.rigged_configurations.riggedconfigurations method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations.module_generators"]], "options (sage.combinat.rigged_configurations.rigged_configurations.riggedconfigurations attribute)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations.options"]], "sage.combinat.rigged_configurations.rigged_configurations": [[213, "module-sage.combinat.rigged_configurations.rigged_configurations"]], "tensor() (sage.combinat.rigged_configurations.rigged_configurations.riggedconfigurations method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations.tensor"]], "tensor_product_of_kirillov_reshetikhin_crystals() (sage.combinat.rigged_configurations.rigged_configurations.riggedconfigurations method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations.tensor_product_of_kirillov_reshetikhin_crystals"]], "tensor_product_of_kirillov_reshetikhin_tableaux() (sage.combinat.rigged_configurations.rigged_configurations.riggedconfigurations method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RiggedConfigurations.tensor_product_of_kirillov_reshetikhin_tableaux"]], "to_virtual() (sage.combinat.rigged_configurations.rigged_configurations.rcnonsimplylaced method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCNonSimplyLaced.to_virtual"]], "to_virtual() (sage.combinat.rigged_configurations.rigged_configurations.rctypea2dual method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Dual.to_virtual"]], "to_virtual() (sage.combinat.rigged_configurations.rigged_configurations.rctypea2even method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Even.to_virtual"]], "virtual() (sage.combinat.rigged_configurations.rigged_configurations.rcnonsimplylaced method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCNonSimplyLaced.virtual"]], "virtual() (sage.combinat.rigged_configurations.rigged_configurations.rctypea2even method)": [[213, "sage.combinat.rigged_configurations.rigged_configurations.RCTypeA2Even.virtual"]], "riggedpartition (class in sage.combinat.rigged_configurations.rigged_partition)": [[214, "sage.combinat.rigged_configurations.rigged_partition.RiggedPartition"]], "riggedpartitiontypeb (class in sage.combinat.rigged_configurations.rigged_partition)": [[214, "sage.combinat.rigged_configurations.rigged_partition.RiggedPartitionTypeB"]], "get_num_cells_to_column() (sage.combinat.rigged_configurations.rigged_partition.riggedpartition method)": [[214, "sage.combinat.rigged_configurations.rigged_partition.RiggedPartition.get_num_cells_to_column"]], "insert_cell() (sage.combinat.rigged_configurations.rigged_partition.riggedpartition method)": [[214, "sage.combinat.rigged_configurations.rigged_partition.RiggedPartition.insert_cell"]], "remove_cell() (sage.combinat.rigged_configurations.rigged_partition.riggedpartition method)": [[214, "sage.combinat.rigged_configurations.rigged_partition.RiggedPartition.remove_cell"]], "rigging (sage.combinat.rigged_configurations.rigged_partition.riggedpartition attribute)": [[214, "sage.combinat.rigged_configurations.rigged_partition.RiggedPartition.rigging"]], "sage.combinat.rigged_configurations.rigged_partition": [[214, "module-sage.combinat.rigged_configurations.rigged_partition"]], "vacancy_numbers (sage.combinat.rigged_configurations.rigged_partition.riggedpartition attribute)": [[214, "sage.combinat.rigged_configurations.rigged_partition.RiggedPartition.vacancy_numbers"]], "element (sage.combinat.rigged_configurations.tensor_product_kr_tableaux.tensorproductofkirillovreshetikhintableaux attribute)": [[215, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux.TensorProductOfKirillovReshetikhinTableaux.Element"]], "highestweighttensorkrt (class in sage.combinat.rigged_configurations.tensor_product_kr_tableaux)": [[215, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux.HighestWeightTensorKRT"]], "tensorproductofkirillovreshetikhintableaux (class in sage.combinat.rigged_configurations.tensor_product_kr_tableaux)": [[215, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux.TensorProductOfKirillovReshetikhinTableaux"]], "cardinality() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux.highestweighttensorkrt method)": [[215, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux.HighestWeightTensorKRT.cardinality"]], "rigged_configurations() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux.tensorproductofkirillovreshetikhintableaux method)": [[215, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux.TensorProductOfKirillovReshetikhinTableaux.rigged_configurations"]], "sage.combinat.rigged_configurations.tensor_product_kr_tableaux": [[215, "module-sage.combinat.rigged_configurations.tensor_product_kr_tableaux"]], "tensor() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux.tensorproductofkirillovreshetikhintableaux method)": [[215, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux.TensorProductOfKirillovReshetikhinTableaux.tensor"]], "tensor_product_of_kirillov_reshetikhin_crystals() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux.tensorproductofkirillovreshetikhintableaux method)": [[215, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux.TensorProductOfKirillovReshetikhinTableaux.tensor_product_of_kirillov_reshetikhin_crystals"]], "tensorproductofkirillovreshetikhintableauxelement (class in sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element)": [[216, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.TensorProductOfKirillovReshetikhinTableauxElement"]], "classical_weight() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.tensorproductofkirillovreshetikhintableauxelement method)": [[216, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.TensorProductOfKirillovReshetikhinTableauxElement.classical_weight"]], "left_split() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.tensorproductofkirillovreshetikhintableauxelement method)": [[216, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.TensorProductOfKirillovReshetikhinTableauxElement.left_split"]], "lusztig_involution() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.tensorproductofkirillovreshetikhintableauxelement method)": [[216, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.TensorProductOfKirillovReshetikhinTableauxElement.lusztig_involution"]], "pp() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.tensorproductofkirillovreshetikhintableauxelement method)": [[216, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.TensorProductOfKirillovReshetikhinTableauxElement.pp"]], "right_split() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.tensorproductofkirillovreshetikhintableauxelement method)": [[216, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.TensorProductOfKirillovReshetikhinTableauxElement.right_split"]], "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element": [[216, "module-sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element"]], "to_rigged_configuration() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.tensorproductofkirillovreshetikhintableauxelement method)": [[216, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.TensorProductOfKirillovReshetikhinTableauxElement.to_rigged_configuration"]], "to_tensor_product_of_kirillov_reshetikhin_crystals() (sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.tensorproductofkirillovreshetikhintableauxelement method)": [[216, "sage.combinat.rigged_configurations.tensor_product_kr_tableaux_element.TensorProductOfKirillovReshetikhinTableauxElement.to_tensor_product_of_kirillov_reshetikhin_crystals"]], "sage.combinat.root_system.all": [[217, "module-sage.combinat.root_system.all"]], "ambientspace (class in sage.combinat.root_system.ambient_space)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpace"]], "ambientspaceelement (class in sage.combinat.root_system.ambient_space)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpaceElement"]], "element (sage.combinat.root_system.ambient_space.ambientspace attribute)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpace.Element"]], "associated_coroot() (sage.combinat.root_system.ambient_space.ambientspaceelement method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpaceElement.associated_coroot"]], "coerce_to_e6() (sage.combinat.root_system.ambient_space.ambientspaceelement method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpaceElement.coerce_to_e6"]], "coerce_to_e7() (sage.combinat.root_system.ambient_space.ambientspaceelement method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpaceElement.coerce_to_e7"]], "coerce_to_sl() (sage.combinat.root_system.ambient_space.ambientspaceelement method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpaceElement.coerce_to_sl"]], "coroot_lattice() (sage.combinat.root_system.ambient_space.ambientspace method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpace.coroot_lattice"]], "dimension() (sage.combinat.root_system.ambient_space.ambientspace method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpace.dimension"]], "dot_product() (sage.combinat.root_system.ambient_space.ambientspaceelement method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpaceElement.dot_product"]], "from_vector_notation() (sage.combinat.root_system.ambient_space.ambientspace method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpace.from_vector_notation"]], "fundamental_weight() (sage.combinat.root_system.ambient_space.ambientspace method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpace.fundamental_weight"]], "inner_product() (sage.combinat.root_system.ambient_space.ambientspaceelement method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpaceElement.inner_product"]], "is_positive_root() (sage.combinat.root_system.ambient_space.ambientspaceelement method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpaceElement.is_positive_root"]], "reflection() (sage.combinat.root_system.ambient_space.ambientspace method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpace.reflection"]], "sage.combinat.root_system.ambient_space": [[218, "module-sage.combinat.root_system.ambient_space"]], "scalar() (sage.combinat.root_system.ambient_space.ambientspaceelement method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpaceElement.scalar"]], "simple_coroot() (sage.combinat.root_system.ambient_space.ambientspace method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpace.simple_coroot"]], "smallest_base_ring() (sage.combinat.root_system.ambient_space.ambientspace class method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpace.smallest_base_ring"]], "to_ambient() (sage.combinat.root_system.ambient_space.ambientspaceelement method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpaceElement.to_ambient"]], "to_ambient_space_morphism() (sage.combinat.root_system.ambient_space.ambientspace method)": [[218, "sage.combinat.root_system.ambient_space.AmbientSpace.to_ambient_space_morphism"]], "associahedra() (in module sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedra"]], "associahedra_base (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedra_base"]], "associahedra_cdd (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedra_cdd"]], "associahedra_field (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedra_field"]], "associahedra_normaliz (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedra_normaliz"]], "associahedra_polymake (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedra_polymake"]], "associahedra_ppl (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedra_ppl"]], "associahedron() (in module sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedron"]], "associahedron_class_base (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedron_class_base"]], "associahedron_class_cdd (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedron_class_cdd"]], "associahedron_class_field (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedron_class_field"]], "associahedron_class_normaliz (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedron_class_normaliz"]], "associahedron_class_polymake (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedron_class_polymake"]], "associahedron_class_ppl (class in sage.combinat.root_system.associahedron)": [[219, "sage.combinat.root_system.associahedron.Associahedron_class_ppl"]], "element (sage.combinat.root_system.associahedron.associahedra_cdd attribute)": [[219, "sage.combinat.root_system.associahedron.Associahedra_cdd.Element"]], "element (sage.combinat.root_system.associahedron.associahedra_field attribute)": [[219, "sage.combinat.root_system.associahedron.Associahedra_field.Element"]], "element (sage.combinat.root_system.associahedron.associahedra_normaliz attribute)": [[219, "sage.combinat.root_system.associahedron.Associahedra_normaliz.Element"]], "element (sage.combinat.root_system.associahedron.associahedra_polymake attribute)": [[219, "sage.combinat.root_system.associahedron.Associahedra_polymake.Element"]], "element (sage.combinat.root_system.associahedron.associahedra_ppl attribute)": [[219, "sage.combinat.root_system.associahedron.Associahedra_ppl.Element"]], "cartan_type() (sage.combinat.root_system.associahedron.associahedron_class_base method)": [[219, "sage.combinat.root_system.associahedron.Associahedron_class_base.cartan_type"]], "sage.combinat.root_system.associahedron": [[219, "module-sage.combinat.root_system.associahedron"]], "vertices_in_root_space() (sage.combinat.root_system.associahedron.associahedron_class_base method)": [[219, "sage.combinat.root_system.associahedron.Associahedron_class_base.vertices_in_root_space"]], "braidmovecalculator (class in sage.combinat.root_system.braid_move_calculator)": [[220, "sage.combinat.root_system.braid_move_calculator.BraidMoveCalculator"]], "chain_of_reduced_words() (sage.combinat.root_system.braid_move_calculator.braidmovecalculator method)": [[220, "sage.combinat.root_system.braid_move_calculator.BraidMoveCalculator.chain_of_reduced_words"]], "put_in_front() (sage.combinat.root_system.braid_move_calculator.braidmovecalculator method)": [[220, "sage.combinat.root_system.braid_move_calculator.BraidMoveCalculator.put_in_front"]], "sage.combinat.root_system.braid_move_calculator": [[220, "module-sage.combinat.root_system.braid_move_calculator"]], "braidorbit() (in module sage.combinat.root_system.braid_orbit)": [[221, "sage.combinat.root_system.braid_orbit.BraidOrbit"]], "sage.combinat.root_system.braid_orbit": [[221, "module-sage.combinat.root_system.braid_orbit"]], "branchingrule (class in sage.combinat.root_system.branching_rules)": [[222, "sage.combinat.root_system.branching_rules.BranchingRule"]], "rtype() (sage.combinat.root_system.branching_rules.branchingrule method)": [[222, "sage.combinat.root_system.branching_rules.BranchingRule.Rtype"]], "stype() (sage.combinat.root_system.branching_rules.branchingrule method)": [[222, "sage.combinat.root_system.branching_rules.BranchingRule.Stype"]], "branch() (sage.combinat.root_system.branching_rules.branchingrule method)": [[222, "sage.combinat.root_system.branching_rules.BranchingRule.branch"]], "branch_weyl_character() (in module sage.combinat.root_system.branching_rules)": [[222, "sage.combinat.root_system.branching_rules.branch_weyl_character"]], "branching_rule() (in module sage.combinat.root_system.branching_rules)": [[222, "sage.combinat.root_system.branching_rules.branching_rule"]], "branching_rule_from_plethysm() (in module sage.combinat.root_system.branching_rules)": [[222, "sage.combinat.root_system.branching_rules.branching_rule_from_plethysm"]], "describe() (sage.combinat.root_system.branching_rules.branchingrule method)": [[222, "sage.combinat.root_system.branching_rules.BranchingRule.describe"]], "get_branching_rule() (in module sage.combinat.root_system.branching_rules)": [[222, "sage.combinat.root_system.branching_rules.get_branching_rule"]], "maximal_subgroups() (in module sage.combinat.root_system.branching_rules)": [[222, "sage.combinat.root_system.branching_rules.maximal_subgroups"]], "sage.combinat.root_system.branching_rules": [[222, "module-sage.combinat.root_system.branching_rules"]], "cartanmatrix (class in sage.combinat.root_system.cartan_matrix)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix"]], "cartan_matrix() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.cartan_matrix"]], "cartan_type() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.cartan_type"]], "column_with_indices() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.column_with_indices"]], "coxeter_diagram() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.coxeter_diagram"]], "coxeter_matrix() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.coxeter_matrix"]], "dual() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.dual"]], "dynkin_diagram() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.dynkin_diagram"]], "find_cartan_type_from_matrix() (in module sage.combinat.root_system.cartan_matrix)": [[223, "sage.combinat.root_system.cartan_matrix.find_cartan_type_from_matrix"]], "indecomposable_blocks() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.indecomposable_blocks"]], "index_set() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.index_set"]], "is_affine() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.is_affine"]], "is_borcherds_cartan_matrix() (in module sage.combinat.root_system.cartan_matrix)": [[223, "sage.combinat.root_system.cartan_matrix.is_borcherds_cartan_matrix"]], "is_crystallographic() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.is_crystallographic"]], "is_finite() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.is_finite"]], "is_generalized_cartan_matrix() (in module sage.combinat.root_system.cartan_matrix)": [[223, "sage.combinat.root_system.cartan_matrix.is_generalized_cartan_matrix"]], "is_hyperbolic() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.is_hyperbolic"]], "is_indecomposable() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.is_indecomposable"]], "is_indefinite() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.is_indefinite"]], "is_lorentzian() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.is_lorentzian"]], "is_simply_laced() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.is_simply_laced"]], "matrix_space() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.matrix_space"]], "principal_submatrices() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.principal_submatrices"]], "rank() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.rank"]], "reflection_group() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.reflection_group"]], "relabel() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.relabel"]], "root_space() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.root_space"]], "root_system() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.root_system"]], "row_with_indices() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.row_with_indices"]], "sage.combinat.root_system.cartan_matrix": [[223, "module-sage.combinat.root_system.cartan_matrix"]], "subtype() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.subtype"]], "symmetrized_matrix() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.symmetrized_matrix"]], "symmetrizer() (sage.combinat.root_system.cartan_matrix.cartanmatrix method)": [[223, "sage.combinat.root_system.cartan_matrix.CartanMatrix.symmetrizer"]], "ambientspace (sage.combinat.root_system.cartan_type.cartantype_affine attribute)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.AmbientSpace"]], "cartantype() (in module sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType"]], "cartantypefactory (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanTypeFactory"]], "cartantype_abstract (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract"]], "cartantype_affine (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine"]], "cartantype_crystallographic (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_crystallographic"]], "cartantype_decorator (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_decorator"]], "cartantype_finite (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_finite"]], "cartantype_simple (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_simple"]], "cartantype_simple_finite (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_simple_finite"]], "cartantype_simply_laced (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_simply_laced"]], "cartantype_standard (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard"]], "cartantype_standard_affine (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_affine"]], "cartantype_standard_finite (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_finite"]], "cartantype_standard_untwisted_affine (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_untwisted_affine"]], "supercartantype_standard (class in sage.combinat.root_system.cartan_type)": [[224, "sage.combinat.root_system.cartan_type.SuperCartanType_standard"]], "a() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.a"]], "acheck() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.acheck"]], "affine() (sage.combinat.root_system.cartan_type.cartantype_standard_finite method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_finite.affine"]], "as_folding() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.as_folding"]], "ascii_art() (sage.combinat.root_system.cartan_type.cartantype_crystallographic method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_crystallographic.ascii_art"]], "basic_untwisted() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.basic_untwisted"]], "basic_untwisted() (sage.combinat.root_system.cartan_type.cartantype_standard_untwisted_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_untwisted_affine.basic_untwisted"]], "c() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.c"]], "cartan_matrix() (sage.combinat.root_system.cartan_type.cartantype_crystallographic method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_crystallographic.cartan_matrix"]], "classical() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.classical"]], "classical() (sage.combinat.root_system.cartan_type.cartantype_standard_untwisted_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_untwisted_affine.classical"]], "col_annihilator() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.col_annihilator"]], "color() (sage.combinat.root_system.cartan_type.cartantypefactory class method)": [[224, "sage.combinat.root_system.cartan_type.CartanTypeFactory.color"]], "coxeter_diagram() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.coxeter_diagram"]], "coxeter_diagram() (sage.combinat.root_system.cartan_type.cartantype_crystallographic method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_crystallographic.coxeter_diagram"]], "coxeter_matrix() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.coxeter_matrix"]], "coxeter_number() (sage.combinat.root_system.cartan_type.cartantype_standard_finite method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_finite.coxeter_number"]], "coxeter_type() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.coxeter_type"]], "dual() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.dual"]], "dual() (sage.combinat.root_system.cartan_type.cartantype_simply_laced method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_simply_laced.dual"]], "dual_coxeter_number() (sage.combinat.root_system.cartan_type.cartantype_standard_finite method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_finite.dual_coxeter_number"]], "dynkin_diagram() (sage.combinat.root_system.cartan_type.cartantype_crystallographic method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_crystallographic.dynkin_diagram"]], "index_set() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.index_set"]], "index_set() (sage.combinat.root_system.cartan_type.cartantype_decorator method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_decorator.index_set"]], "index_set() (sage.combinat.root_system.cartan_type.cartantype_standard_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_affine.index_set"]], "index_set() (sage.combinat.root_system.cartan_type.cartantype_standard_finite method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_finite.index_set"]], "index_set_bipartition() (sage.combinat.root_system.cartan_type.cartantype_crystallographic method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_crystallographic.index_set_bipartition"]], "is_affine() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.is_affine"]], "is_affine() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.is_affine"]], "is_affine() (sage.combinat.root_system.cartan_type.cartantype_decorator method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_decorator.is_affine"]], "is_affine() (sage.combinat.root_system.cartan_type.cartantype_finite method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_finite.is_affine"]], "is_atomic() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.is_atomic"]], "is_compound() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.is_compound"]], "is_crystallographic() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.is_crystallographic"]], "is_crystallographic() (sage.combinat.root_system.cartan_type.cartantype_crystallographic method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_crystallographic.is_crystallographic"]], "is_crystallographic() (sage.combinat.root_system.cartan_type.cartantype_decorator method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_decorator.is_crystallographic"]], "is_finite() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.is_finite"]], "is_finite() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.is_finite"]], "is_finite() (sage.combinat.root_system.cartan_type.cartantype_decorator method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_decorator.is_finite"]], "is_finite() (sage.combinat.root_system.cartan_type.cartantype_finite method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_finite.is_finite"]], "is_implemented() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.is_implemented"]], "is_irreducible() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.is_irreducible"]], "is_irreducible() (sage.combinat.root_system.cartan_type.cartantype_decorator method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_decorator.is_irreducible"]], "is_irreducible() (sage.combinat.root_system.cartan_type.cartantype_simple method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_simple.is_irreducible"]], "is_reducible() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.is_reducible"]], "is_simply_laced() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.is_simply_laced"]], "is_simply_laced() (sage.combinat.root_system.cartan_type.cartantype_simply_laced method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_simply_laced.is_simply_laced"]], "is_untwisted_affine() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.is_untwisted_affine"]], "is_untwisted_affine() (sage.combinat.root_system.cartan_type.cartantype_standard_untwisted_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_untwisted_affine.is_untwisted_affine"]], "marked_nodes() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.marked_nodes"]], "opposition_automorphism() (sage.combinat.root_system.cartan_type.cartantype_standard_finite method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_finite.opposition_automorphism"]], "options (sage.combinat.root_system.cartan_type.cartantypefactory attribute)": [[224, "sage.combinat.root_system.cartan_type.CartanTypeFactory.options"]], "options (sage.combinat.root_system.cartan_type.cartantype_abstract attribute)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.options"]], "options (sage.combinat.root_system.cartan_type.supercartantype_standard attribute)": [[224, "sage.combinat.root_system.cartan_type.SuperCartanType_standard.options"]], "other_affinization() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.other_affinization"]], "rank() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.rank"]], "rank() (sage.combinat.root_system.cartan_type.cartantype_decorator method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_decorator.rank"]], "rank() (sage.combinat.root_system.cartan_type.cartantype_standard_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_affine.rank"]], "rank() (sage.combinat.root_system.cartan_type.cartantype_standard_finite method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_finite.rank"]], "relabel() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.relabel"]], "root_system() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.root_system"]], "row_annihilator() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.row_annihilator"]], "sage.combinat.root_system.cartan_type": [[224, "module-sage.combinat.root_system.cartan_type"]], "samples() (sage.combinat.root_system.cartan_type.cartantypefactory method)": [[224, "sage.combinat.root_system.cartan_type.CartanTypeFactory.samples"]], "special_node() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.special_node"]], "special_node() (sage.combinat.root_system.cartan_type.cartantype_standard_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_affine.special_node"]], "special_nodes() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.special_nodes"]], "subtype() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.subtype"]], "symmetrizer() (sage.combinat.root_system.cartan_type.cartantype_crystallographic method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_crystallographic.symmetrizer"]], "translation_factors() (sage.combinat.root_system.cartan_type.cartantype_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_affine.translation_factors"]], "type() (sage.combinat.root_system.cartan_type.cartantype_abstract method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_abstract.type"]], "type() (sage.combinat.root_system.cartan_type.cartantype_standard_affine method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_affine.type"]], "type() (sage.combinat.root_system.cartan_type.cartantype_standard_finite method)": [[224, "sage.combinat.root_system.cartan_type.CartanType_standard_finite.type"]], "coxetergroup() (in module sage.combinat.root_system.coxeter_group)": [[225, "sage.combinat.root_system.coxeter_group.CoxeterGroup"]], "sage.combinat.root_system.coxeter_group": [[225, "module-sage.combinat.root_system.coxeter_group"]], "coxetermatrix (class in sage.combinat.root_system.coxeter_matrix)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix"]], "bilinear_form() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.bilinear_form"]], "check_coxeter_matrix() (in module sage.combinat.root_system.coxeter_matrix)": [[226, "sage.combinat.root_system.coxeter_matrix.check_coxeter_matrix"]], "coxeter_graph() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.coxeter_graph"]], "coxeter_matrix() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.coxeter_matrix"]], "coxeter_matrix_as_function() (in module sage.combinat.root_system.coxeter_matrix)": [[226, "sage.combinat.root_system.coxeter_matrix.coxeter_matrix_as_function"]], "coxeter_type() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.coxeter_type"]], "index_set() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.index_set"]], "is_affine() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.is_affine"]], "is_crystallographic() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.is_crystallographic"]], "is_finite() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.is_finite"]], "is_irreducible() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.is_irreducible"]], "is_simply_laced() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.is_simply_laced"]], "rank() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.rank"]], "recognize_coxeter_type_from_matrix() (in module sage.combinat.root_system.coxeter_matrix)": [[226, "sage.combinat.root_system.coxeter_matrix.recognize_coxeter_type_from_matrix"]], "relabel() (sage.combinat.root_system.coxeter_matrix.coxetermatrix method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.relabel"]], "sage.combinat.root_system.coxeter_matrix": [[226, "module-sage.combinat.root_system.coxeter_matrix"]], "samples() (sage.combinat.root_system.coxeter_matrix.coxetermatrix class method)": [[226, "sage.combinat.root_system.coxeter_matrix.CoxeterMatrix.samples"]], "coxetertype (class in sage.combinat.root_system.coxeter_type)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType"]], "coxetertypefromcartantype (class in sage.combinat.root_system.coxeter_type)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType"]], "bilinear_form() (sage.combinat.root_system.coxeter_type.coxetertype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType.bilinear_form"]], "cartan_type() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.cartan_type"]], "component_types() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.component_types"]], "coxeter_graph() (sage.combinat.root_system.coxeter_type.coxetertype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType.coxeter_graph"]], "coxeter_graph() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.coxeter_graph"]], "coxeter_matrix() (sage.combinat.root_system.coxeter_type.coxetertype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType.coxeter_matrix"]], "coxeter_matrix() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.coxeter_matrix"]], "index_set() (sage.combinat.root_system.coxeter_type.coxetertype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType.index_set"]], "index_set() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.index_set"]], "is_affine() (sage.combinat.root_system.coxeter_type.coxetertype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType.is_affine"]], "is_affine() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.is_affine"]], "is_crystallographic() (sage.combinat.root_system.coxeter_type.coxetertype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType.is_crystallographic"]], "is_crystallographic() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.is_crystallographic"]], "is_finite() (sage.combinat.root_system.coxeter_type.coxetertype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType.is_finite"]], "is_finite() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.is_finite"]], "is_irreducible() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.is_irreducible"]], "is_reducible() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.is_reducible"]], "is_simply_laced() (sage.combinat.root_system.coxeter_type.coxetertype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType.is_simply_laced"]], "is_simply_laced() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.is_simply_laced"]], "rank() (sage.combinat.root_system.coxeter_type.coxetertype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType.rank"]], "rank() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.rank"]], "relabel() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.relabel"]], "sage.combinat.root_system.coxeter_type": [[227, "module-sage.combinat.root_system.coxeter_type"]], "samples() (sage.combinat.root_system.coxeter_type.coxetertype class method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterType.samples"]], "type() (sage.combinat.root_system.coxeter_type.coxetertypefromcartantype method)": [[227, "sage.combinat.root_system.coxeter_type.CoxeterTypeFromCartanType.type"]], "dynkindiagram() (in module sage.combinat.root_system.dynkin_diagram)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram"]], "dynkindiagram_class (class in sage.combinat.root_system.dynkin_diagram)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class"]], "add_edge() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.add_edge"]], "an_instance() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class static method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.an_instance"]], "cartan_matrix() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.cartan_matrix"]], "cartan_type() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.cartan_type"]], "column() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.column"]], "coxeter_diagram() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.coxeter_diagram"]], "dual() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.dual"]], "dynkin_diagram() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.dynkin_diagram"]], "index_set() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.index_set"]], "is_affine() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.is_affine"]], "is_crystallographic() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.is_crystallographic"]], "is_finite() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.is_finite"]], "is_irreducible() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.is_irreducible"]], "odd_isotropic_roots() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.odd_isotropic_roots"]], "precheck() (in module sage.combinat.root_system.dynkin_diagram)": [[228, "sage.combinat.root_system.dynkin_diagram.precheck"]], "rank() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.rank"]], "relabel() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.relabel"]], "row() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.row"]], "sage.combinat.root_system.dynkin_diagram": [[228, "module-sage.combinat.root_system.dynkin_diagram"]], "subtype() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.subtype"]], "symmetrizer() (sage.combinat.root_system.dynkin_diagram.dynkindiagram_class method)": [[228, "sage.combinat.root_system.dynkin_diagram.DynkinDiagram_class.symmetrizer"]], "element (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupfw attribute)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFW.Element"]], "element (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppw0 attribute)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0.Element"]], "element (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppvw0 attribute)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0.Element"]], "element (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0p attribute)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0P.Element"]], "element (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pv attribute)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0Pv.Element"]], "element (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupwf attribute)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWF.Element"]], "extendedaffineweylgroup() (in module sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup"]], "extendedaffineweylgroup_class (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class"]], "extendedaffineweylgroup_class.extendedaffineweylgroupfw (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFW"]], "extendedaffineweylgroup_class.extendedaffineweylgroupfwelement (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFWElement"]], "extendedaffineweylgroup_class.extendedaffineweylgrouppw0 (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0"]], "extendedaffineweylgroup_class.extendedaffineweylgrouppw0element (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0Element"]], "extendedaffineweylgroup_class.extendedaffineweylgrouppvw0 (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0"]], "extendedaffineweylgroup_class.extendedaffineweylgrouppvw0element (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0Element"]], "extendedaffineweylgroup_class.extendedaffineweylgroupw0p (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0P"]], "extendedaffineweylgroup_class.extendedaffineweylgroupw0pelement (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PElement"]], "extendedaffineweylgroup_class.extendedaffineweylgroupw0pv (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0Pv"]], "extendedaffineweylgroup_class.extendedaffineweylgroupw0pvelement (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PvElement"]], "extendedaffineweylgroup_class.extendedaffineweylgroupwf (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWF"]], "extendedaffineweylgroup_class.extendedaffineweylgroupwfelement (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWFElement"]], "extendedaffineweylgroup_class.realizations (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations"]], "extendedaffineweylgroup_class.realizations.elementmethods (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods"]], "extendedaffineweylgroup_class.realizations.parentmethods (class in sage.combinat.root_system.extended_affine_weyl_group)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods"]], "fw() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.FW"]], "pw0() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.PW0"]], "pw0_to_wf_func() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.PW0_to_WF_func"]], "pvw0() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.PvW0"]], "s0() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppw0 method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0.S0"]], "s0() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0p method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0P.S0"]], "w0p() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.W0P"]], "w0pv() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.W0Pv"]], "wf() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.WF"]], "wf_to_pw0_func() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.WF_to_PW0_func"]], "a_realization() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.a_realization"]], "action() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppw0element method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0Element.action"]], "action() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.action"]], "action_on_affine_roots() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupfwelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFWElement.action_on_affine_roots"]], "action_on_affine_roots() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.action_on_affine_roots"]], "affine_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.affine_weyl"]], "alcove_walk_signs() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.alcove_walk_signs"]], "apply_simple_projection() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.apply_simple_projection"]], "apply_simple_reflection() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.apply_simple_reflection"]], "bruhat_le() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupwfelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWFElement.bruhat_le"]], "bruhat_le() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.bruhat_le"]], "cartan_type() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.cartan_type"]], "classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.classical_weyl"]], "classical_weyl_to_affine() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.classical_weyl_to_affine"]], "coset_representative() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.coset_representative"]], "dual_action() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppvw0element method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0Element.dual_action"]], "dual_action() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pvelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PvElement.dual_action"]], "dual_action() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.dual_action"]], "dual_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.dual_classical_weyl"]], "dual_classical_weyl_to_affine() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.dual_classical_weyl_to_affine"]], "dual_lattice() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.dual_lattice"]], "dual_lattice_basis() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.dual_lattice_basis"]], "exp_dual_lattice() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.exp_dual_lattice"]], "exp_lattice() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.exp_lattice"]], "face_data() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.face_data"]], "first_descent() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.first_descent"]], "from_affine_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupfw method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFW.from_affine_weyl"]], "from_affine_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupwf method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWF.from_affine_weyl"]], "from_affine_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.parentmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods.from_affine_weyl"]], "from_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppw0 method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0.from_classical_weyl"]], "from_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0p method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0P.from_classical_weyl"]], "from_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.parentmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods.from_classical_weyl"]], "from_dual_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppvw0 method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0.from_dual_classical_weyl"]], "from_dual_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pv method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0Pv.from_dual_classical_weyl"]], "from_dual_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.parentmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods.from_dual_classical_weyl"]], "from_dual_translation() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppvw0 method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0.from_dual_translation"]], "from_dual_translation() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pv method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0Pv.from_dual_translation"]], "from_dual_translation() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.parentmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods.from_dual_translation"]], "from_fundamental() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupfw method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFW.from_fundamental"]], "from_fundamental() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupwf method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWF.from_fundamental"]], "from_fundamental() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.parentmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods.from_fundamental"]], "from_reduced_word() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.parentmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods.from_reduced_word"]], "from_translation() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppw0 method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0.from_translation"]], "from_translation() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0p method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0P.from_translation"]], "from_translation() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.parentmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods.from_translation"]], "fundamental_group() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.fundamental_group"]], "group_generators() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.group_generators"]], "has_descent() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupfwelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFWElement.has_descent"]], "has_descent() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppw0element method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0Element.has_descent"]], "has_descent() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppvw0element method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0Element.has_descent"]], "has_descent() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PElement.has_descent"]], "has_descent() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pvelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PvElement.has_descent"]], "has_descent() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupwfelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWFElement.has_descent"]], "has_descent() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.has_descent"]], "is_affine_grassmannian() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.is_affine_grassmannian"]], "is_grassmannian() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.is_grassmannian"]], "is_translation() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.is_translation"]], "lattice() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.lattice"]], "lattice_basis() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.lattice_basis"]], "length() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.length"]], "sage.combinat.root_system.extended_affine_weyl_group": [[229, "module-sage.combinat.root_system.extended_affine_weyl_group"]], "simple_reflection() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppw0 method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0.simple_reflection"]], "simple_reflection() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0p method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0P.simple_reflection"]], "simple_reflection() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.parentmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods.simple_reflection"]], "simple_reflections() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupfw method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFW.simple_reflections"]], "simple_reflections() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppw0 method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0.simple_reflections"]], "simple_reflections() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppvw0 method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0.simple_reflections"]], "simple_reflections() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0p method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0P.simple_reflections"]], "simple_reflections() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pv method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0Pv.simple_reflections"]], "simple_reflections() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupwf method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWF.simple_reflections"]], "simple_reflections() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.parentmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ParentMethods.simple_reflections"]], "super_categories() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.super_categories"]], "to_affine_grassmannian() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.to_affine_grassmannian"]], "to_affine_weyl_left() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupwfelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWFElement.to_affine_weyl_left"]], "to_affine_weyl_left() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.to_affine_weyl_left"]], "to_affine_weyl_right() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupfwelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFWElement.to_affine_weyl_right"]], "to_affine_weyl_right() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.to_affine_weyl_right"]], "to_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppw0element method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0Element.to_classical_weyl"]], "to_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PElement.to_classical_weyl"]], "to_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.to_classical_weyl"]], "to_dual_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppvw0element method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0Element.to_dual_classical_weyl"]], "to_dual_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pvelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PvElement.to_dual_classical_weyl"]], "to_dual_classical_weyl() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.to_dual_classical_weyl"]], "to_dual_translation_left() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppvw0element method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPvW0Element.to_dual_translation_left"]], "to_dual_translation_left() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.to_dual_translation_left"]], "to_dual_translation_right() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pvelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PvElement.to_dual_translation_right"]], "to_dual_translation_right() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.to_dual_translation_right"]], "to_fundamental_group() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupfwelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupFWElement.to_fundamental_group"]], "to_fundamental_group() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupwfelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupWFElement.to_fundamental_group"]], "to_fundamental_group() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.to_fundamental_group"]], "to_translation_left() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgrouppw0element method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupPW0Element.to_translation_left"]], "to_translation_left() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.to_translation_left"]], "to_translation_right() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.extendedaffineweylgroupw0pelement method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.ExtendedAffineWeylGroupW0PElement.to_translation_right"]], "to_translation_right() (sage.combinat.root_system.extended_affine_weyl_group.extendedaffineweylgroup_class.realizations.elementmethods method)": [[229, "sage.combinat.root_system.extended_affine_weyl_group.ExtendedAffineWeylGroup_Class.Realizations.ElementMethods.to_translation_right"]], "element (sage.combinat.root_system.fundamental_group.fundamentalgroupgl attribute)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL.Element"]], "element (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class attribute)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.Element"]], "fundamentalgroupelement (class in sage.combinat.root_system.fundamental_group)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupElement"]], "fundamentalgroupgl (class in sage.combinat.root_system.fundamental_group)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL"]], "fundamentalgroupglelement (class in sage.combinat.root_system.fundamental_group)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGLElement"]], "fundamentalgroupofextendedaffineweylgroup() (in module sage.combinat.root_system.fundamental_group)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup"]], "fundamentalgroupofextendedaffineweylgroup_class (class in sage.combinat.root_system.fundamental_group)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class"]], "act_on_affine_lattice() (sage.combinat.root_system.fundamental_group.fundamentalgroupelement method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupElement.act_on_affine_lattice"]], "act_on_affine_weyl() (sage.combinat.root_system.fundamental_group.fundamentalgroupelement method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupElement.act_on_affine_weyl"]], "act_on_classical_ambient() (sage.combinat.root_system.fundamental_group.fundamentalgroupglelement method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGLElement.act_on_classical_ambient"]], "action() (sage.combinat.root_system.fundamental_group.fundamentalgroupgl method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL.action"]], "action() (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.action"]], "an_element() (sage.combinat.root_system.fundamental_group.fundamentalgroupgl method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL.an_element"]], "an_element() (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.an_element"]], "cartan_type() (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.cartan_type"]], "dual_node() (sage.combinat.root_system.fundamental_group.fundamentalgroupgl method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL.dual_node"]], "dual_node() (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.dual_node"]], "family() (sage.combinat.root_system.fundamental_group.fundamentalgroupgl method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL.family"]], "group_generators() (sage.combinat.root_system.fundamental_group.fundamentalgroupgl method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL.group_generators"]], "group_generators() (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.group_generators"]], "index_set() (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.index_set"]], "one() (sage.combinat.root_system.fundamental_group.fundamentalgroupgl method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL.one"]], "one() (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.one"]], "product() (sage.combinat.root_system.fundamental_group.fundamentalgroupgl method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL.product"]], "product() (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.product"]], "reduced_word() (sage.combinat.root_system.fundamental_group.fundamentalgroupgl method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL.reduced_word"]], "reduced_word() (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.reduced_word"]], "sage.combinat.root_system.fundamental_group": [[230, "module-sage.combinat.root_system.fundamental_group"]], "some_elements() (sage.combinat.root_system.fundamental_group.fundamentalgroupgl method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupGL.some_elements"]], "special_nodes() (sage.combinat.root_system.fundamental_group.fundamentalgroupofextendedaffineweylgroup_class method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupOfExtendedAffineWeylGroup_Class.special_nodes"]], "value() (sage.combinat.root_system.fundamental_group.fundamentalgroupelement method)": [[230, "sage.combinat.root_system.fundamental_group.FundamentalGroupElement.value"]], "cherednikoperatorseigenvectors (class in sage.combinat.root_system.hecke_algebra_representation)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors"]], "heckealgebrarepresentation (class in sage.combinat.root_system.hecke_algebra_representation)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation"]], "ti_inverse_on_basis() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.Ti_inverse_on_basis"]], "ti_on_basis() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.Ti_on_basis"]], "tw() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.Tw"]], "tw_inverse() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.Tw_inverse"]], "y() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.Y"]], "y() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.Y"]], "y_eigenvectors() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.Y_eigenvectors"]], "y_lambdacheck() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.Y_lambdacheck"]], "affine_lift() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.affine_lift"]], "affine_retract() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.affine_retract"]], "cartan_type() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.cartan_type"]], "cartan_type() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.cartan_type"]], "domain() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.domain"]], "domain() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.domain"]], "eigenvalue() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.eigenvalue"]], "eigenvalues() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.eigenvalues"]], "hecke_parameters() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.hecke_parameters"]], "keys() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.keys"]], "on_basis() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.on_basis"]], "parameters() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.parameters"]], "recursion() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.recursion"]], "sage.combinat.root_system.hecke_algebra_representation": [[231, "module-sage.combinat.root_system.hecke_algebra_representation"]], "seed() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.seed"]], "straighten_word() (sage.combinat.root_system.hecke_algebra_representation.heckealgebrarepresentation method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.HeckeAlgebraRepresentation.straighten_word"]], "twist() (sage.combinat.root_system.hecke_algebra_representation.cherednikoperatorseigenvectors method)": [[231, "sage.combinat.root_system.hecke_algebra_representation.CherednikOperatorsEigenvectors.twist"]], "integrablerepresentation (class in sage.combinat.root_system.integrable_representations)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation"]], "branch() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.branch"]], "cartan_type() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.cartan_type"]], "coxeter_number() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.coxeter_number"]], "dominant_maximal_weights() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.dominant_maximal_weights"]], "dual_coxeter_number() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.dual_coxeter_number"]], "from_weight() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.from_weight"]], "highest_weight() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.highest_weight"]], "level() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.level"]], "m() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.m"]], "modular_characteristic() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.modular_characteristic"]], "mult() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.mult"]], "print_strings() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.print_strings"]], "root_lattice() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.root_lattice"]], "s() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.s"]], "sage.combinat.root_system.integrable_representations": [[232, "module-sage.combinat.root_system.integrable_representations"]], "string() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.string"]], "strings() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.strings"]], "to_dominant() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.to_dominant"]], "to_weight() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.to_weight"]], "weight_lattice() (sage.combinat.root_system.integrable_representations.integrablerepresentation method)": [[232, "sage.combinat.root_system.integrable_representations.IntegrableRepresentation.weight_lattice"]], "kl0() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.KL0"]], "l() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.L"]], "l0() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.L0"]], "l_check() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.L_check"]], "l_prime() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.L_prime"]], "nonsymmetricmacdonaldpolynomials (class in sage.combinat.root_system.non_symmetric_macdonald_polynomials)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials"]], "q_to_qcheck() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.Q_to_Qcheck"]], "y() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.Y"]], "affine_lift() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.affine_lift"]], "affine_retract() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.affine_retract"]], "cartan_type() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.cartan_type"]], "eigenvalue_experimental() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.eigenvalue_experimental"]], "rho_prime() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.rho_prime"]], "sage.combinat.root_system.non_symmetric_macdonald_polynomials": [[233, "module-sage.combinat.root_system.non_symmetric_macdonald_polynomials"]], "seed() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.seed"]], "symmetric_macdonald_polynomial() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.symmetric_macdonald_polynomial"]], "twist() (sage.combinat.root_system.non_symmetric_macdonald_polynomials.nonsymmetricmacdonaldpolynomials method)": [[233, "sage.combinat.root_system.non_symmetric_macdonald_polynomials.NonSymmetricMacdonaldPolynomials.twist"]], "pierifactors (class in sage.combinat.root_system.pieri_factors)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors"]], "pierifactors_affine_type (class in sage.combinat.root_system.pieri_factors)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_affine_type"]], "pierifactors_finite_type (class in sage.combinat.root_system.pieri_factors)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_finite_type"]], "pierifactors_type_a (class in sage.combinat.root_system.pieri_factors)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_A"]], "pierifactors_type_a_affine (class in sage.combinat.root_system.pieri_factors)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_A_affine"]], "pierifactors_type_b (class in sage.combinat.root_system.pieri_factors)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_B"]], "pierifactors_type_b_affine (class in sage.combinat.root_system.pieri_factors)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_B_affine"]], "pierifactors_type_c_affine (class in sage.combinat.root_system.pieri_factors)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_C_affine"]], "pierifactors_type_d_affine (class in sage.combinat.root_system.pieri_factors)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_D_affine"]], "cardinality() (sage.combinat.root_system.pieri_factors.pierifactors_type_a_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_A_affine.cardinality"]], "default_weight() (sage.combinat.root_system.pieri_factors.pierifactors method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors.default_weight"]], "elements() (sage.combinat.root_system.pieri_factors.pierifactors method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors.elements"]], "generating_series() (sage.combinat.root_system.pieri_factors.pierifactors method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors.generating_series"]], "generating_series() (sage.combinat.root_system.pieri_factors.pierifactors_type_a_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_A_affine.generating_series"]], "max_length() (sage.combinat.root_system.pieri_factors.pierifactors method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors.max_length"]], "maximal_elements() (sage.combinat.root_system.pieri_factors.pierifactors_affine_type method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_affine_type.maximal_elements"]], "maximal_elements() (sage.combinat.root_system.pieri_factors.pierifactors_finite_type method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_finite_type.maximal_elements"]], "maximal_elements_combinatorial() (sage.combinat.root_system.pieri_factors.pierifactors_type_a method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_A.maximal_elements_combinatorial"]], "maximal_elements_combinatorial() (sage.combinat.root_system.pieri_factors.pierifactors_type_a_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_A_affine.maximal_elements_combinatorial"]], "maximal_elements_combinatorial() (sage.combinat.root_system.pieri_factors.pierifactors_type_b method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_B.maximal_elements_combinatorial"]], "maximal_elements_combinatorial() (sage.combinat.root_system.pieri_factors.pierifactors_type_b_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_B_affine.maximal_elements_combinatorial"]], "maximal_elements_combinatorial() (sage.combinat.root_system.pieri_factors.pierifactors_type_c_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_C_affine.maximal_elements_combinatorial"]], "maximal_elements_combinatorial() (sage.combinat.root_system.pieri_factors.pierifactors_type_d_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_D_affine.maximal_elements_combinatorial"]], "sage.combinat.root_system.pieri_factors": [[234, "module-sage.combinat.root_system.pieri_factors"]], "stanley_symm_poly_weight() (sage.combinat.root_system.pieri_factors.pierifactors_type_a method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_A.stanley_symm_poly_weight"]], "stanley_symm_poly_weight() (sage.combinat.root_system.pieri_factors.pierifactors_type_a_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_A_affine.stanley_symm_poly_weight"]], "stanley_symm_poly_weight() (sage.combinat.root_system.pieri_factors.pierifactors_type_b method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_B.stanley_symm_poly_weight"]], "stanley_symm_poly_weight() (sage.combinat.root_system.pieri_factors.pierifactors_type_b_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_B_affine.stanley_symm_poly_weight"]], "stanley_symm_poly_weight() (sage.combinat.root_system.pieri_factors.pierifactors_type_c_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_C_affine.stanley_symm_poly_weight"]], "stanley_symm_poly_weight() (sage.combinat.root_system.pieri_factors.pierifactors_type_d_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_D_affine.stanley_symm_poly_weight"]], "subset() (sage.combinat.root_system.pieri_factors.pierifactors_type_a_affine method)": [[234, "sage.combinat.root_system.pieri_factors.PieriFactors_type_A_affine.subset"]], "plotoptions (class in sage.combinat.root_system.plot)": [[235, "sage.combinat.root_system.plot.PlotOptions"]], "barycentric_projection_matrix() (in module sage.combinat.root_system.plot)": [[235, "sage.combinat.root_system.plot.barycentric_projection_matrix"]], "color() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.color"]], "cone() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.cone"]], "empty() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.empty"]], "family_of_vectors() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.family_of_vectors"]], "finalize() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.finalize"]], "in_bounding_box() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.in_bounding_box"]], "index_of_object() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.index_of_object"]], "intersection_at_level_1() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.intersection_at_level_1"]], "projection() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.projection"]], "reflection_hyperplane() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.reflection_hyperplane"]], "sage.combinat.root_system.plot": [[235, "module-sage.combinat.root_system.plot"]], "text() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.text"]], "thickness() (sage.combinat.root_system.plot.plotoptions method)": [[235, "sage.combinat.root_system.plot.PlotOptions.thickness"]], "complexreflectiongroup (class in sage.combinat.root_system.reflection_group_complex)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup"]], "complexreflectiongroup.element (class in sage.combinat.root_system.reflection_group_complex)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.Element"]], "irreduciblecomplexreflectiongroup (class in sage.combinat.root_system.reflection_group_complex)": [[236, "sage.combinat.root_system.reflection_group_complex.IrreducibleComplexReflectionGroup"]], "irreduciblecomplexreflectiongroup.element (class in sage.combinat.root_system.reflection_group_complex)": [[236, "sage.combinat.root_system.reflection_group_complex.IrreducibleComplexReflectionGroup.Element"]], "apply_vector_field() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.apply_vector_field"]], "braid_relations() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.braid_relations"]], "cartan_matrix() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.cartan_matrix"]], "codegrees() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.codegrees"]], "conjugacy_class() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup.element method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.Element.conjugacy_class"]], "conjugacy_class_representative() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup.element method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.Element.conjugacy_class_representative"]], "conjugacy_classes() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.conjugacy_classes"]], "conjugacy_classes_representatives() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.conjugacy_classes_representatives"]], "coxeter_number() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.coxeter_number"]], "degrees() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.degrees"]], "discriminant() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.discriminant"]], "discriminant_in_invariant_ring() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.discriminant_in_invariant_ring"]], "distinguished_reflection() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.distinguished_reflection"]], "distinguished_reflections() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.distinguished_reflections"]], "fake_degrees() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.fake_degrees"]], "fundamental_invariants() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.fundamental_invariants"]], "hyperplane_index_set() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.hyperplane_index_set"]], "independent_roots() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.independent_roots"]], "index_set() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.index_set"]], "invariant_form() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.invariant_form"]], "invariant_form_standardization() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.invariant_form_standardization"]], "irreducible_components() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.irreducible_components"]], "is_coxeter_element() (sage.combinat.root_system.reflection_group_complex.irreduciblecomplexreflectiongroup.element method)": [[236, "sage.combinat.root_system.reflection_group_complex.IrreducibleComplexReflectionGroup.Element.is_coxeter_element"]], "is_crystallographic() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.is_crystallographic"]], "is_h_regular() (sage.combinat.root_system.reflection_group_complex.irreduciblecomplexreflectiongroup.element method)": [[236, "sage.combinat.root_system.reflection_group_complex.IrreducibleComplexReflectionGroup.Element.is_h_regular"]], "is_regular() (sage.combinat.root_system.reflection_group_complex.irreduciblecomplexreflectiongroup.element method)": [[236, "sage.combinat.root_system.reflection_group_complex.IrreducibleComplexReflectionGroup.Element.is_regular"]], "jacobian_of_fundamental_invariants() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.jacobian_of_fundamental_invariants"]], "multi_partitions() (in module sage.combinat.root_system.reflection_group_complex)": [[236, "sage.combinat.root_system.reflection_group_complex.multi_partitions"]], "number_of_irreducible_components() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.number_of_irreducible_components"]], "power() (in module sage.combinat.root_system.reflection_group_complex)": [[236, "sage.combinat.root_system.reflection_group_complex.power"]], "primitive_vector_field() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.primitive_vector_field"]], "rank() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.rank"]], "reflection() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.reflection"]], "reflection_character() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.reflection_character"]], "reflection_eigenvalues() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.reflection_eigenvalues"]], "reflection_eigenvalues_family() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.reflection_eigenvalues_family"]], "reflection_hyperplane() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.reflection_hyperplane"]], "reflection_hyperplanes() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.reflection_hyperplanes"]], "reflection_index_set() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.reflection_index_set"]], "reflection_length() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup.element method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.Element.reflection_length"]], "reflections() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.reflections"]], "roots() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.roots"]], "sage.combinat.root_system.reflection_group_complex": [[236, "module-sage.combinat.root_system.reflection_group_complex"]], "series() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.series"]], "set_reflection_representation() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.set_reflection_representation"]], "simple_coroot() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.simple_coroot"]], "simple_coroots() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.simple_coroots"]], "simple_reflection() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.simple_reflection"]], "simple_root() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.simple_root"]], "simple_roots() (sage.combinat.root_system.reflection_group_complex.complexreflectiongroup method)": [[236, "sage.combinat.root_system.reflection_group_complex.ComplexReflectionGroup.simple_roots"]], "irreduciblerealreflectiongroup (class in sage.combinat.root_system.reflection_group_real)": [[237, "sage.combinat.root_system.reflection_group_real.IrreducibleRealReflectionGroup"]], "irreduciblerealreflectiongroup.element (class in sage.combinat.root_system.reflection_group_real)": [[237, "sage.combinat.root_system.reflection_group_real.IrreducibleRealReflectionGroup.Element"]], "realreflectiongroup (class in sage.combinat.root_system.reflection_group_real)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup"]], "realreflectiongroup.element (class in sage.combinat.root_system.reflection_group_real)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.Element"]], "reflectiongroup() (in module sage.combinat.root_system.reflection_group_real)": [[237, "sage.combinat.root_system.reflection_group_real.ReflectionGroup"]], "almost_positive_roots() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.almost_positive_roots"]], "bipartite_index_set() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.bipartite_index_set"]], "bruhat_cone() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.bruhat_cone"]], "cartan_type() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.cartan_type"]], "coxeter_diagram() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.coxeter_diagram"]], "coxeter_matrix() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.coxeter_matrix"]], "fundamental_weight() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.fundamental_weight"]], "fundamental_weights() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.fundamental_weights"]], "is_chevie_available() (in module sage.combinat.root_system.reflection_group_real)": [[237, "sage.combinat.root_system.reflection_group_real.is_chevie_available"]], "iteration() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.iteration"]], "left_coset_representatives() (sage.combinat.root_system.reflection_group_real.realreflectiongroup.element method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.Element.left_coset_representatives"]], "positive_roots() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.positive_roots"]], "reflection_to_positive_root() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.reflection_to_positive_root"]], "right_coset_representatives() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.right_coset_representatives"]], "right_coset_representatives() (sage.combinat.root_system.reflection_group_real.realreflectiongroup.element method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.Element.right_coset_representatives"]], "root_to_reflection() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.root_to_reflection"]], "sage.combinat.root_system.reflection_group_real": [[237, "module-sage.combinat.root_system.reflection_group_real"]], "simple_root_index() (sage.combinat.root_system.reflection_group_real.realreflectiongroup method)": [[237, "sage.combinat.root_system.reflection_group_real.RealReflectionGroup.simple_root_index"]], "algebras (class in sage.combinat.root_system.root_lattice_realization_algebras)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras"]], "algebras.elementmethods (class in sage.combinat.root_system.root_lattice_realization_algebras)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ElementMethods"]], "algebras.parentmethods (class in sage.combinat.root_system.root_lattice_realization_algebras)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods"]], "t0_check_on_basis() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.T0_check_on_basis"]], "acted_upon() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.elementmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ElementMethods.acted_upon"]], "cartan_type() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.cartan_type"]], "classical() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.classical"]], "demazure_lusztig_operator_on_basis() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.demazure_lusztig_operator_on_basis"]], "demazure_lusztig_operator_on_classical_on_basis() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.demazure_lusztig_operator_on_classical_on_basis"]], "demazure_lusztig_operators() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.demazure_lusztig_operators"]], "demazure_lusztig_operators_on_classical() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.demazure_lusztig_operators_on_classical"]], "demazure_operators() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.demazure_operators"]], "divided_difference_on_basis() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.divided_difference_on_basis"]], "expand() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.elementmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ElementMethods.expand"]], "from_polynomial() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.from_polynomial"]], "isobaric_divided_difference_on_basis() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.isobaric_divided_difference_on_basis"]], "q_project() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.q_project"]], "q_project_on_basis() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.q_project_on_basis"]], "sage.combinat.root_system.root_lattice_realization_algebras": [[238, "module-sage.combinat.root_system.root_lattice_realization_algebras"]], "some_elements() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.some_elements"]], "twisted_demazure_lusztig_operator_on_basis() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.twisted_demazure_lusztig_operator_on_basis"]], "twisted_demazure_lusztig_operators() (sage.combinat.root_system.root_lattice_realization_algebras.algebras.parentmethods method)": [[238, "sage.combinat.root_system.root_lattice_realization_algebras.Algebras.ParentMethods.twisted_demazure_lusztig_operators"]], "algebras (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations attribute)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.Algebras"]], "rootlatticerealizations (class in sage.combinat.root_system.root_lattice_realizations)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations"]], "rootlatticerealizations.elementmethods (class in sage.combinat.root_system.root_lattice_realizations)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods"]], "rootlatticerealizations.parentmethods (class in sage.combinat.root_system.root_lattice_realizations)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods"]], "a_long_simple_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.a_long_simple_root"]], "affine_orbit() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.affine_orbit"]], "almost_positive_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.almost_positive_roots"]], "almost_positive_roots_decomposition() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.almost_positive_roots_decomposition"]], "alpha() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.alpha"]], "alphacheck() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.alphacheck"]], "associated_coroot() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.associated_coroot"]], "associated_reflection() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.associated_reflection"]], "basic_imaginary_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.basic_imaginary_roots"]], "cartan_type() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.cartan_type"]], "classical() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.classical"]], "cohighest_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.cohighest_root"]], "coroot_lattice() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.coroot_lattice"]], "coroot_space() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.coroot_space"]], "descents() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.descents"]], "dot_action() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.dot_action"]], "dot_orbit() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.dot_orbit"]], "dual_type_cospace() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.dual_type_cospace"]], "dynkin_diagram() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.dynkin_diagram"]], "extraspecial_pair() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.extraspecial_pair"]], "first_descent() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.first_descent"]], "fundamental_weights_from_simple_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.fundamental_weights_from_simple_roots"]], "generalized_nonnesting_partition_lattice() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.generalized_nonnesting_partition_lattice"]], "greater() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.greater"]], "has_descent() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.has_descent"]], "height() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.height"]], "highest_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.highest_root"]], "index_set() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.index_set"]], "is_dominant() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.is_dominant"]], "is_dominant_weight() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.is_dominant_weight"]], "is_imaginary_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.is_imaginary_root"]], "is_long_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.is_long_root"]], "is_parabolic_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.is_parabolic_root"]], "is_real_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.is_real_root"]], "is_short_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.is_short_root"]], "level() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.level"]], "long_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.long_roots"]], "negative_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.negative_roots"]], "nonnesting_partition_lattice() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.nonnesting_partition_lattice"]], "nonparabolic_positive_root_sum() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.nonparabolic_positive_root_sum"]], "nonparabolic_positive_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.nonparabolic_positive_roots"]], "norm_squared() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.norm_squared"]], "null_coroot() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.null_coroot"]], "null_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.null_root"]], "orbit() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.orbit"]], "plot() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot"]], "plot_alcove_walk() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_alcove_walk"]], "plot_alcoves() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_alcoves"]], "plot_bounding_box() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_bounding_box"]], "plot_coroots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_coroots"]], "plot_crystal() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_crystal"]], "plot_fundamental_chamber() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_fundamental_chamber"]], "plot_fundamental_weights() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_fundamental_weights"]], "plot_hedron() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_hedron"]], "plot_ls_paths() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_ls_paths"]], "plot_mv_polytope() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_mv_polytope"]], "plot_parse_options() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_parse_options"]], "plot_reflection_hyperplanes() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_reflection_hyperplanes"]], "plot_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.plot_roots"]], "positive_imaginary_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.positive_imaginary_roots"]], "positive_real_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.positive_real_roots"]], "positive_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.positive_roots"]], "positive_roots_by_height() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.positive_roots_by_height"]], "positive_roots_nonparabolic() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.positive_roots_nonparabolic"]], "positive_roots_nonparabolic_sum() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.positive_roots_nonparabolic_sum"]], "positive_roots_parabolic() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.positive_roots_parabolic"]], "pred() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.pred"]], "projection() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.projection"]], "reduced_word() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.reduced_word"]], "reflection() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.reflection"]], "reflection() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.reflection"]], "root_poset() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.root_poset"]], "roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.roots"]], "s() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.s"]], "sage.combinat.root_system.root_lattice_realizations": [[239, "module-sage.combinat.root_system.root_lattice_realizations"]], "scalar() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.scalar"]], "short_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.short_roots"]], "simple_coroot() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.simple_coroot"]], "simple_coroots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.simple_coroots"]], "simple_projection() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.simple_projection"]], "simple_projections() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.simple_projections"]], "simple_reflection() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.simple_reflection"]], "simple_reflection() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.simple_reflection"]], "simple_reflections() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.simple_reflections"]], "simple_reflections() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.simple_reflections"]], "simple_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.simple_root"]], "simple_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.simple_roots"]], "simple_roots_tilde() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.simple_roots_tilde"]], "smaller() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.smaller"]], "some_elements() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.some_elements"]], "succ() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.succ"]], "super_categories() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.super_categories"]], "symmetric_form() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.symmetric_form"]], "tau_epsilon_operator_on_almost_positive_roots() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.tau_epsilon_operator_on_almost_positive_roots"]], "tau_plus_minus() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.tau_plus_minus"]], "to_ambient() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.to_ambient"]], "to_ambient_space_morphism() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.to_ambient_space_morphism"]], "to_classical() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.to_classical"]], "to_dominant_chamber() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.to_dominant_chamber"]], "to_dual_type_cospace() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.to_dual_type_cospace"]], "to_simple_root() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.to_simple_root"]], "translation() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.translation"]], "weyl_action() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.weyl_action"]], "weyl_group() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.parentmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ParentMethods.weyl_group"]], "weyl_stabilizer() (sage.combinat.root_system.root_lattice_realizations.rootlatticerealizations.elementmethods method)": [[239, "sage.combinat.root_system.root_lattice_realizations.RootLatticeRealizations.ElementMethods.weyl_stabilizer"]], "element (sage.combinat.root_system.root_space.rootspace attribute)": [[240, "sage.combinat.root_system.root_space.RootSpace.Element"]], "rootspace (class in sage.combinat.root_system.root_space)": [[240, "sage.combinat.root_system.root_space.RootSpace"]], "rootspaceelement (class in sage.combinat.root_system.root_space)": [[240, "sage.combinat.root_system.root_space.RootSpaceElement"]], "associated_coroot() (sage.combinat.root_system.root_space.rootspaceelement method)": [[240, "sage.combinat.root_system.root_space.RootSpaceElement.associated_coroot"]], "is_positive_root() (sage.combinat.root_system.root_space.rootspaceelement method)": [[240, "sage.combinat.root_system.root_space.RootSpaceElement.is_positive_root"]], "max_coroot_le() (sage.combinat.root_system.root_space.rootspaceelement method)": [[240, "sage.combinat.root_system.root_space.RootSpaceElement.max_coroot_le"]], "max_quantum_element() (sage.combinat.root_system.root_space.rootspaceelement method)": [[240, "sage.combinat.root_system.root_space.RootSpaceElement.max_quantum_element"]], "quantum_root() (sage.combinat.root_system.root_space.rootspaceelement method)": [[240, "sage.combinat.root_system.root_space.RootSpaceElement.quantum_root"]], "sage.combinat.root_system.root_space": [[240, "module-sage.combinat.root_system.root_space"]], "scalar() (sage.combinat.root_system.root_space.rootspaceelement method)": [[240, "sage.combinat.root_system.root_space.RootSpaceElement.scalar"]], "simple_root() (sage.combinat.root_system.root_space.rootspace method)": [[240, "sage.combinat.root_system.root_space.RootSpace.simple_root"]], "to_ambient() (sage.combinat.root_system.root_space.rootspaceelement method)": [[240, "sage.combinat.root_system.root_space.RootSpaceElement.to_ambient"]], "to_ambient_space_morphism() (sage.combinat.root_system.root_space.rootspace method)": [[240, "sage.combinat.root_system.root_space.RootSpace.to_ambient_space_morphism"]], "to_coroot_space_morphism() (sage.combinat.root_system.root_space.rootspace method)": [[240, "sage.combinat.root_system.root_space.RootSpace.to_coroot_space_morphism"]], "rootsystem (class in sage.combinat.root_system.root_system)": [[241, "sage.combinat.root_system.root_system.RootSystem"]], "weyldim() (in module sage.combinat.root_system.root_system)": [[241, "sage.combinat.root_system.root_system.WeylDim"]], "ambient_lattice() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.ambient_lattice"]], "ambient_space() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.ambient_space"]], "cartan_matrix() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.cartan_matrix"]], "cartan_type() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.cartan_type"]], "coambient_space() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.coambient_space"]], "coroot_lattice() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.coroot_lattice"]], "coroot_space() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.coroot_space"]], "coweight_lattice() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.coweight_lattice"]], "coweight_space() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.coweight_space"]], "dynkin_diagram() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.dynkin_diagram"]], "index_set() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.index_set"]], "is_finite() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.is_finite"]], "is_irreducible() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.is_irreducible"]], "root_lattice() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.root_lattice"]], "root_poset() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.root_poset"]], "root_space() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.root_space"]], "sage.combinat.root_system.root_system": [[241, "module-sage.combinat.root_system.root_system"]], "weight_lattice() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.weight_lattice"]], "weight_space() (sage.combinat.root_system.root_system.rootsystem method)": [[241, "sage.combinat.root_system.root_system.RootSystem.weight_space"]], "ambientspace (class in sage.combinat.root_system.type_a)": [[242, "sage.combinat.root_system.type_A.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_a.cartantype attribute)": [[242, "sage.combinat.root_system.type_A.CartanType.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_a)": [[242, "sage.combinat.root_system.type_A.CartanType"]], "pierifactors (sage.combinat.root_system.type_a.cartantype attribute)": [[242, "sage.combinat.root_system.type_A.CartanType.PieriFactors"]], "ascii_art() (sage.combinat.root_system.type_a.cartantype method)": [[242, "sage.combinat.root_system.type_A.CartanType.ascii_art"]], "coxeter_number() (sage.combinat.root_system.type_a.cartantype method)": [[242, "sage.combinat.root_system.type_A.CartanType.coxeter_number"]], "det() (sage.combinat.root_system.type_a.ambientspace method)": [[242, "sage.combinat.root_system.type_A.AmbientSpace.det"]], "dimension() (sage.combinat.root_system.type_a.ambientspace method)": [[242, "sage.combinat.root_system.type_A.AmbientSpace.dimension"]], "dual_coxeter_number() (sage.combinat.root_system.type_a.cartantype method)": [[242, "sage.combinat.root_system.type_A.CartanType.dual_coxeter_number"]], "dynkin_diagram() (sage.combinat.root_system.type_a.cartantype method)": [[242, "sage.combinat.root_system.type_A.CartanType.dynkin_diagram"]], "fundamental_weight() (sage.combinat.root_system.type_a.ambientspace method)": [[242, "sage.combinat.root_system.type_A.AmbientSpace.fundamental_weight"]], "highest_root() (sage.combinat.root_system.type_a.ambientspace method)": [[242, "sage.combinat.root_system.type_A.AmbientSpace.highest_root"]], "negative_roots() (sage.combinat.root_system.type_a.ambientspace method)": [[242, "sage.combinat.root_system.type_A.AmbientSpace.negative_roots"]], "positive_roots() (sage.combinat.root_system.type_a.ambientspace method)": [[242, "sage.combinat.root_system.type_A.AmbientSpace.positive_roots"]], "root() (sage.combinat.root_system.type_a.ambientspace method)": [[242, "sage.combinat.root_system.type_A.AmbientSpace.root"]], "sage.combinat.root_system.type_a": [[242, "module-sage.combinat.root_system.type_A"]], "simple_root() (sage.combinat.root_system.type_a.ambientspace method)": [[242, "sage.combinat.root_system.type_A.AmbientSpace.simple_root"]], "smallest_base_ring() (sage.combinat.root_system.type_a.ambientspace class method)": [[242, "sage.combinat.root_system.type_A.AmbientSpace.smallest_base_ring"]], "cartantype (class in sage.combinat.root_system.type_a_affine)": [[243, "sage.combinat.root_system.type_A_affine.CartanType"]], "pierifactors (sage.combinat.root_system.type_a_affine.cartantype attribute)": [[243, "sage.combinat.root_system.type_A_affine.CartanType.PieriFactors"]], "ascii_art() (sage.combinat.root_system.type_a_affine.cartantype method)": [[243, "sage.combinat.root_system.type_A_affine.CartanType.ascii_art"]], "dual() (sage.combinat.root_system.type_a_affine.cartantype method)": [[243, "sage.combinat.root_system.type_A_affine.CartanType.dual"]], "dynkin_diagram() (sage.combinat.root_system.type_a_affine.cartantype method)": [[243, "sage.combinat.root_system.type_A_affine.CartanType.dynkin_diagram"]], "sage.combinat.root_system.type_a_affine": [[243, "module-sage.combinat.root_system.type_A_affine"]], "cartantype (class in sage.combinat.root_system.type_a_infinity)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType"]], "ascii_art() (sage.combinat.root_system.type_a_infinity.cartantype method)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType.ascii_art"]], "dual() (sage.combinat.root_system.type_a_infinity.cartantype method)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType.dual"]], "index_set() (sage.combinat.root_system.type_a_infinity.cartantype method)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType.index_set"]], "is_affine() (sage.combinat.root_system.type_a_infinity.cartantype method)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType.is_affine"]], "is_crystallographic() (sage.combinat.root_system.type_a_infinity.cartantype method)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType.is_crystallographic"]], "is_finite() (sage.combinat.root_system.type_a_infinity.cartantype method)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType.is_finite"]], "is_simply_laced() (sage.combinat.root_system.type_a_infinity.cartantype method)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType.is_simply_laced"]], "is_untwisted_affine() (sage.combinat.root_system.type_a_infinity.cartantype method)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType.is_untwisted_affine"]], "rank() (sage.combinat.root_system.type_a_infinity.cartantype method)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType.rank"]], "sage.combinat.root_system.type_a_infinity": [[244, "module-sage.combinat.root_system.type_A_infinity"]], "type() (sage.combinat.root_system.type_a_infinity.cartantype method)": [[244, "sage.combinat.root_system.type_A_infinity.CartanType.type"]], "ambientspace (class in sage.combinat.root_system.type_b)": [[245, "sage.combinat.root_system.type_B.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_b.cartantype attribute)": [[245, "sage.combinat.root_system.type_B.CartanType.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_b)": [[245, "sage.combinat.root_system.type_B.CartanType"]], "pierifactors (sage.combinat.root_system.type_b.cartantype attribute)": [[245, "sage.combinat.root_system.type_B.CartanType.PieriFactors"]], "ascii_art() (sage.combinat.root_system.type_b.cartantype method)": [[245, "sage.combinat.root_system.type_B.CartanType.ascii_art"]], "coxeter_number() (sage.combinat.root_system.type_b.cartantype method)": [[245, "sage.combinat.root_system.type_B.CartanType.coxeter_number"]], "dimension() (sage.combinat.root_system.type_b.ambientspace method)": [[245, "sage.combinat.root_system.type_B.AmbientSpace.dimension"]], "dual() (sage.combinat.root_system.type_b.cartantype method)": [[245, "sage.combinat.root_system.type_B.CartanType.dual"]], "dual_coxeter_number() (sage.combinat.root_system.type_b.cartantype method)": [[245, "sage.combinat.root_system.type_B.CartanType.dual_coxeter_number"]], "dynkin_diagram() (sage.combinat.root_system.type_b.cartantype method)": [[245, "sage.combinat.root_system.type_B.CartanType.dynkin_diagram"]], "fundamental_weight() (sage.combinat.root_system.type_b.ambientspace method)": [[245, "sage.combinat.root_system.type_B.AmbientSpace.fundamental_weight"]], "negative_roots() (sage.combinat.root_system.type_b.ambientspace method)": [[245, "sage.combinat.root_system.type_B.AmbientSpace.negative_roots"]], "positive_roots() (sage.combinat.root_system.type_b.ambientspace method)": [[245, "sage.combinat.root_system.type_B.AmbientSpace.positive_roots"]], "root() (sage.combinat.root_system.type_b.ambientspace method)": [[245, "sage.combinat.root_system.type_B.AmbientSpace.root"]], "sage.combinat.root_system.type_b": [[245, "module-sage.combinat.root_system.type_B"]], "simple_root() (sage.combinat.root_system.type_b.ambientspace method)": [[245, "sage.combinat.root_system.type_B.AmbientSpace.simple_root"]], "cartantype (class in sage.combinat.root_system.type_bc_affine)": [[246, "sage.combinat.root_system.type_BC_affine.CartanType"]], "ascii_art() (sage.combinat.root_system.type_bc_affine.cartantype method)": [[246, "sage.combinat.root_system.type_BC_affine.CartanType.ascii_art"]], "basic_untwisted() (sage.combinat.root_system.type_bc_affine.cartantype method)": [[246, "sage.combinat.root_system.type_BC_affine.CartanType.basic_untwisted"]], "classical() (sage.combinat.root_system.type_bc_affine.cartantype method)": [[246, "sage.combinat.root_system.type_BC_affine.CartanType.classical"]], "dynkin_diagram() (sage.combinat.root_system.type_bc_affine.cartantype method)": [[246, "sage.combinat.root_system.type_BC_affine.CartanType.dynkin_diagram"]], "sage.combinat.root_system.type_bc_affine": [[246, "module-sage.combinat.root_system.type_BC_affine"]], "cartantype (class in sage.combinat.root_system.type_b_affine)": [[247, "sage.combinat.root_system.type_B_affine.CartanType"]], "pierifactors (sage.combinat.root_system.type_b_affine.cartantype attribute)": [[247, "sage.combinat.root_system.type_B_affine.CartanType.PieriFactors"]], "ascii_art() (sage.combinat.root_system.type_b_affine.cartantype method)": [[247, "sage.combinat.root_system.type_B_affine.CartanType.ascii_art"]], "dynkin_diagram() (sage.combinat.root_system.type_b_affine.cartantype method)": [[247, "sage.combinat.root_system.type_B_affine.CartanType.dynkin_diagram"]], "sage.combinat.root_system.type_b_affine": [[247, "module-sage.combinat.root_system.type_B_affine"]], "ambientspace (class in sage.combinat.root_system.type_c)": [[248, "sage.combinat.root_system.type_C.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_c.cartantype attribute)": [[248, "sage.combinat.root_system.type_C.CartanType.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_c)": [[248, "sage.combinat.root_system.type_C.CartanType"]], "ascii_art() (sage.combinat.root_system.type_c.cartantype method)": [[248, "sage.combinat.root_system.type_C.CartanType.ascii_art"]], "coxeter_number() (sage.combinat.root_system.type_c.cartantype method)": [[248, "sage.combinat.root_system.type_C.CartanType.coxeter_number"]], "dimension() (sage.combinat.root_system.type_c.ambientspace method)": [[248, "sage.combinat.root_system.type_C.AmbientSpace.dimension"]], "dual() (sage.combinat.root_system.type_c.cartantype method)": [[248, "sage.combinat.root_system.type_C.CartanType.dual"]], "dual_coxeter_number() (sage.combinat.root_system.type_c.cartantype method)": [[248, "sage.combinat.root_system.type_C.CartanType.dual_coxeter_number"]], "dynkin_diagram() (sage.combinat.root_system.type_c.cartantype method)": [[248, "sage.combinat.root_system.type_C.CartanType.dynkin_diagram"]], "fundamental_weight() (sage.combinat.root_system.type_c.ambientspace method)": [[248, "sage.combinat.root_system.type_C.AmbientSpace.fundamental_weight"]], "negative_roots() (sage.combinat.root_system.type_c.ambientspace method)": [[248, "sage.combinat.root_system.type_C.AmbientSpace.negative_roots"]], "positive_roots() (sage.combinat.root_system.type_c.ambientspace method)": [[248, "sage.combinat.root_system.type_C.AmbientSpace.positive_roots"]], "root() (sage.combinat.root_system.type_c.ambientspace method)": [[248, "sage.combinat.root_system.type_C.AmbientSpace.root"]], "sage.combinat.root_system.type_c": [[248, "module-sage.combinat.root_system.type_C"]], "simple_root() (sage.combinat.root_system.type_c.ambientspace method)": [[248, "sage.combinat.root_system.type_C.AmbientSpace.simple_root"]], "cartantype (class in sage.combinat.root_system.type_c_affine)": [[249, "sage.combinat.root_system.type_C_affine.CartanType"]], "pierifactors (sage.combinat.root_system.type_c_affine.cartantype attribute)": [[249, "sage.combinat.root_system.type_C_affine.CartanType.PieriFactors"]], "ascii_art() (sage.combinat.root_system.type_c_affine.cartantype method)": [[249, "sage.combinat.root_system.type_C_affine.CartanType.ascii_art"]], "dynkin_diagram() (sage.combinat.root_system.type_c_affine.cartantype method)": [[249, "sage.combinat.root_system.type_C_affine.CartanType.dynkin_diagram"]], "sage.combinat.root_system.type_c_affine": [[249, "module-sage.combinat.root_system.type_C_affine"]], "ambientspace (class in sage.combinat.root_system.type_d)": [[250, "sage.combinat.root_system.type_D.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_d.cartantype attribute)": [[250, "sage.combinat.root_system.type_D.CartanType.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_d)": [[250, "sage.combinat.root_system.type_D.CartanType"]], "ascii_art() (sage.combinat.root_system.type_d.cartantype method)": [[250, "sage.combinat.root_system.type_D.CartanType.ascii_art"]], "coxeter_number() (sage.combinat.root_system.type_d.cartantype method)": [[250, "sage.combinat.root_system.type_D.CartanType.coxeter_number"]], "dimension() (sage.combinat.root_system.type_d.ambientspace method)": [[250, "sage.combinat.root_system.type_D.AmbientSpace.dimension"]], "dual_coxeter_number() (sage.combinat.root_system.type_d.cartantype method)": [[250, "sage.combinat.root_system.type_D.CartanType.dual_coxeter_number"]], "dynkin_diagram() (sage.combinat.root_system.type_d.cartantype method)": [[250, "sage.combinat.root_system.type_D.CartanType.dynkin_diagram"]], "fundamental_weight() (sage.combinat.root_system.type_d.ambientspace method)": [[250, "sage.combinat.root_system.type_D.AmbientSpace.fundamental_weight"]], "is_atomic() (sage.combinat.root_system.type_d.cartantype method)": [[250, "sage.combinat.root_system.type_D.CartanType.is_atomic"]], "negative_roots() (sage.combinat.root_system.type_d.ambientspace method)": [[250, "sage.combinat.root_system.type_D.AmbientSpace.negative_roots"]], "positive_roots() (sage.combinat.root_system.type_d.ambientspace method)": [[250, "sage.combinat.root_system.type_D.AmbientSpace.positive_roots"]], "root() (sage.combinat.root_system.type_d.ambientspace method)": [[250, "sage.combinat.root_system.type_D.AmbientSpace.root"]], "sage.combinat.root_system.type_d": [[250, "module-sage.combinat.root_system.type_D"]], "simple_root() (sage.combinat.root_system.type_d.ambientspace method)": [[250, "sage.combinat.root_system.type_D.AmbientSpace.simple_root"]], "cartantype (class in sage.combinat.root_system.type_d_affine)": [[251, "sage.combinat.root_system.type_D_affine.CartanType"]], "pierifactors (sage.combinat.root_system.type_d_affine.cartantype attribute)": [[251, "sage.combinat.root_system.type_D_affine.CartanType.PieriFactors"]], "ascii_art() (sage.combinat.root_system.type_d_affine.cartantype method)": [[251, "sage.combinat.root_system.type_D_affine.CartanType.ascii_art"]], "dynkin_diagram() (sage.combinat.root_system.type_d_affine.cartantype method)": [[251, "sage.combinat.root_system.type_D_affine.CartanType.dynkin_diagram"]], "sage.combinat.root_system.type_d_affine": [[251, "module-sage.combinat.root_system.type_D_affine"]], "ambientspace (class in sage.combinat.root_system.type_e)": [[252, "sage.combinat.root_system.type_E.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_e.cartantype attribute)": [[252, "sage.combinat.root_system.type_E.CartanType.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_e)": [[252, "sage.combinat.root_system.type_E.CartanType"]], "ascii_art() (sage.combinat.root_system.type_e.cartantype method)": [[252, "sage.combinat.root_system.type_E.CartanType.ascii_art"]], "coxeter_number() (sage.combinat.root_system.type_e.cartantype method)": [[252, "sage.combinat.root_system.type_E.CartanType.coxeter_number"]], "dimension() (sage.combinat.root_system.type_e.ambientspace method)": [[252, "sage.combinat.root_system.type_E.AmbientSpace.dimension"]], "dual_coxeter_number() (sage.combinat.root_system.type_e.cartantype method)": [[252, "sage.combinat.root_system.type_E.CartanType.dual_coxeter_number"]], "dynkin_diagram() (sage.combinat.root_system.type_e.cartantype method)": [[252, "sage.combinat.root_system.type_E.CartanType.dynkin_diagram"]], "fundamental_weights() (sage.combinat.root_system.type_e.ambientspace method)": [[252, "sage.combinat.root_system.type_E.AmbientSpace.fundamental_weights"]], "negative_roots() (sage.combinat.root_system.type_e.ambientspace method)": [[252, "sage.combinat.root_system.type_E.AmbientSpace.negative_roots"]], "positive_roots() (sage.combinat.root_system.type_e.ambientspace method)": [[252, "sage.combinat.root_system.type_E.AmbientSpace.positive_roots"]], "root() (sage.combinat.root_system.type_e.ambientspace method)": [[252, "sage.combinat.root_system.type_E.AmbientSpace.root"]], "sage.combinat.root_system.type_e": [[252, "module-sage.combinat.root_system.type_E"]], "simple_root() (sage.combinat.root_system.type_e.ambientspace method)": [[252, "sage.combinat.root_system.type_E.AmbientSpace.simple_root"]], "cartantype (class in sage.combinat.root_system.type_e_affine)": [[253, "sage.combinat.root_system.type_E_affine.CartanType"]], "ascii_art() (sage.combinat.root_system.type_e_affine.cartantype method)": [[253, "sage.combinat.root_system.type_E_affine.CartanType.ascii_art"]], "dynkin_diagram() (sage.combinat.root_system.type_e_affine.cartantype method)": [[253, "sage.combinat.root_system.type_E_affine.CartanType.dynkin_diagram"]], "sage.combinat.root_system.type_e_affine": [[253, "module-sage.combinat.root_system.type_E_affine"]], "ambientspace (class in sage.combinat.root_system.type_f)": [[254, "sage.combinat.root_system.type_F.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_f.cartantype attribute)": [[254, "sage.combinat.root_system.type_F.CartanType.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_f)": [[254, "sage.combinat.root_system.type_F.CartanType"]], "ascii_art() (sage.combinat.root_system.type_f.cartantype method)": [[254, "sage.combinat.root_system.type_F.CartanType.ascii_art"]], "coxeter_number() (sage.combinat.root_system.type_f.cartantype method)": [[254, "sage.combinat.root_system.type_F.CartanType.coxeter_number"]], "dimension() (sage.combinat.root_system.type_f.ambientspace method)": [[254, "sage.combinat.root_system.type_F.AmbientSpace.dimension"]], "dual() (sage.combinat.root_system.type_f.cartantype method)": [[254, "sage.combinat.root_system.type_F.CartanType.dual"]], "dual_coxeter_number() (sage.combinat.root_system.type_f.cartantype method)": [[254, "sage.combinat.root_system.type_F.CartanType.dual_coxeter_number"]], "dynkin_diagram() (sage.combinat.root_system.type_f.cartantype method)": [[254, "sage.combinat.root_system.type_F.CartanType.dynkin_diagram"]], "fundamental_weights() (sage.combinat.root_system.type_f.ambientspace method)": [[254, "sage.combinat.root_system.type_F.AmbientSpace.fundamental_weights"]], "negative_roots() (sage.combinat.root_system.type_f.ambientspace method)": [[254, "sage.combinat.root_system.type_F.AmbientSpace.negative_roots"]], "positive_roots() (sage.combinat.root_system.type_f.ambientspace method)": [[254, "sage.combinat.root_system.type_F.AmbientSpace.positive_roots"]], "root() (sage.combinat.root_system.type_f.ambientspace method)": [[254, "sage.combinat.root_system.type_F.AmbientSpace.root"]], "sage.combinat.root_system.type_f": [[254, "module-sage.combinat.root_system.type_F"]], "simple_root() (sage.combinat.root_system.type_f.ambientspace method)": [[254, "sage.combinat.root_system.type_F.AmbientSpace.simple_root"]], "cartantype (class in sage.combinat.root_system.type_f_affine)": [[255, "sage.combinat.root_system.type_F_affine.CartanType"]], "ascii_art() (sage.combinat.root_system.type_f_affine.cartantype method)": [[255, "sage.combinat.root_system.type_F_affine.CartanType.ascii_art"]], "dynkin_diagram() (sage.combinat.root_system.type_f_affine.cartantype method)": [[255, "sage.combinat.root_system.type_F_affine.CartanType.dynkin_diagram"]], "sage.combinat.root_system.type_f_affine": [[255, "module-sage.combinat.root_system.type_F_affine"]], "ambientspace (class in sage.combinat.root_system.type_g)": [[256, "sage.combinat.root_system.type_G.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_g.cartantype attribute)": [[256, "sage.combinat.root_system.type_G.CartanType.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_g)": [[256, "sage.combinat.root_system.type_G.CartanType"]], "ascii_art() (sage.combinat.root_system.type_g.cartantype method)": [[256, "sage.combinat.root_system.type_G.CartanType.ascii_art"]], "coxeter_number() (sage.combinat.root_system.type_g.cartantype method)": [[256, "sage.combinat.root_system.type_G.CartanType.coxeter_number"]], "dimension() (sage.combinat.root_system.type_g.ambientspace method)": [[256, "sage.combinat.root_system.type_G.AmbientSpace.dimension"]], "dual() (sage.combinat.root_system.type_g.cartantype method)": [[256, "sage.combinat.root_system.type_G.CartanType.dual"]], "dual_coxeter_number() (sage.combinat.root_system.type_g.cartantype method)": [[256, "sage.combinat.root_system.type_G.CartanType.dual_coxeter_number"]], "dynkin_diagram() (sage.combinat.root_system.type_g.cartantype method)": [[256, "sage.combinat.root_system.type_G.CartanType.dynkin_diagram"]], "fundamental_weights() (sage.combinat.root_system.type_g.ambientspace method)": [[256, "sage.combinat.root_system.type_G.AmbientSpace.fundamental_weights"]], "negative_roots() (sage.combinat.root_system.type_g.ambientspace method)": [[256, "sage.combinat.root_system.type_G.AmbientSpace.negative_roots"]], "positive_roots() (sage.combinat.root_system.type_g.ambientspace method)": [[256, "sage.combinat.root_system.type_G.AmbientSpace.positive_roots"]], "sage.combinat.root_system.type_g": [[256, "module-sage.combinat.root_system.type_G"]], "simple_root() (sage.combinat.root_system.type_g.ambientspace method)": [[256, "sage.combinat.root_system.type_G.AmbientSpace.simple_root"]], "cartantype (class in sage.combinat.root_system.type_g_affine)": [[257, "sage.combinat.root_system.type_G_affine.CartanType"]], "ascii_art() (sage.combinat.root_system.type_g_affine.cartantype method)": [[257, "sage.combinat.root_system.type_G_affine.CartanType.ascii_art"]], "dynkin_diagram() (sage.combinat.root_system.type_g_affine.cartantype method)": [[257, "sage.combinat.root_system.type_G_affine.CartanType.dynkin_diagram"]], "sage.combinat.root_system.type_g_affine": [[257, "module-sage.combinat.root_system.type_G_affine"]], "cartantype (class in sage.combinat.root_system.type_h)": [[258, "sage.combinat.root_system.type_H.CartanType"]], "coxeter_diagram() (sage.combinat.root_system.type_h.cartantype method)": [[258, "sage.combinat.root_system.type_H.CartanType.coxeter_diagram"]], "coxeter_number() (sage.combinat.root_system.type_h.cartantype method)": [[258, "sage.combinat.root_system.type_H.CartanType.coxeter_number"]], "sage.combinat.root_system.type_h": [[258, "module-sage.combinat.root_system.type_H"]], "cartantype (class in sage.combinat.root_system.type_i)": [[259, "sage.combinat.root_system.type_I.CartanType"]], "coxeter_diagram() (sage.combinat.root_system.type_i.cartantype method)": [[259, "sage.combinat.root_system.type_I.CartanType.coxeter_diagram"]], "coxeter_number() (sage.combinat.root_system.type_i.cartantype method)": [[259, "sage.combinat.root_system.type_I.CartanType.coxeter_number"]], "index_set() (sage.combinat.root_system.type_i.cartantype method)": [[259, "sage.combinat.root_system.type_I.CartanType.index_set"]], "rank() (sage.combinat.root_system.type_i.cartantype method)": [[259, "sage.combinat.root_system.type_I.CartanType.rank"]], "sage.combinat.root_system.type_i": [[259, "module-sage.combinat.root_system.type_I"]], "cartantype (class in sage.combinat.root_system.type_q)": [[260, "sage.combinat.root_system.type_Q.CartanType"]], "dual() (sage.combinat.root_system.type_q.cartantype method)": [[260, "sage.combinat.root_system.type_Q.CartanType.dual"]], "index_set() (sage.combinat.root_system.type_q.cartantype method)": [[260, "sage.combinat.root_system.type_Q.CartanType.index_set"]], "is_irreducible() (sage.combinat.root_system.type_q.cartantype method)": [[260, "sage.combinat.root_system.type_Q.CartanType.is_irreducible"]], "is_simply_laced() (sage.combinat.root_system.type_q.cartantype method)": [[260, "sage.combinat.root_system.type_Q.CartanType.is_simply_laced"]], "root_system() (sage.combinat.root_system.type_q.cartantype method)": [[260, "sage.combinat.root_system.type_Q.CartanType.root_system"]], "sage.combinat.root_system.type_q": [[260, "module-sage.combinat.root_system.type_Q"]], "ambientspace (class in sage.combinat.root_system.type_affine)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace"]], "ambientspace.element (class in sage.combinat.root_system.type_affine)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace.Element"]], "associated_coroot() (sage.combinat.root_system.type_affine.ambientspace.element method)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace.Element.associated_coroot"]], "coroot_lattice() (sage.combinat.root_system.type_affine.ambientspace method)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace.coroot_lattice"]], "fundamental_weight() (sage.combinat.root_system.type_affine.ambientspace method)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace.fundamental_weight"]], "inner_product() (sage.combinat.root_system.type_affine.ambientspace.element method)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace.Element.inner_product"]], "is_extended() (sage.combinat.root_system.type_affine.ambientspace method)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace.is_extended"]], "sage.combinat.root_system.type_affine": [[261, "module-sage.combinat.root_system.type_affine"]], "scalar() (sage.combinat.root_system.type_affine.ambientspace.element method)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace.Element.scalar"]], "simple_coroot() (sage.combinat.root_system.type_affine.ambientspace method)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace.simple_coroot"]], "simple_root() (sage.combinat.root_system.type_affine.ambientspace method)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace.simple_root"]], "smallest_base_ring() (sage.combinat.root_system.type_affine.ambientspace class method)": [[261, "sage.combinat.root_system.type_affine.AmbientSpace.smallest_base_ring"]], "ambientspace (class in sage.combinat.root_system.type_dual)": [[262, "sage.combinat.root_system.type_dual.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_dual.cartantype_finite attribute)": [[262, "sage.combinat.root_system.type_dual.CartanType_finite.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_dual)": [[262, "sage.combinat.root_system.type_dual.CartanType"]], "cartantype_affine (class in sage.combinat.root_system.type_dual)": [[262, "sage.combinat.root_system.type_dual.CartanType_affine"]], "cartantype_finite (class in sage.combinat.root_system.type_dual)": [[262, "sage.combinat.root_system.type_dual.CartanType_finite"]], "ascii_art() (sage.combinat.root_system.type_dual.cartantype method)": [[262, "sage.combinat.root_system.type_dual.CartanType.ascii_art"]], "basic_untwisted() (sage.combinat.root_system.type_dual.cartantype_affine method)": [[262, "sage.combinat.root_system.type_dual.CartanType_affine.basic_untwisted"]], "classical() (sage.combinat.root_system.type_dual.cartantype_affine method)": [[262, "sage.combinat.root_system.type_dual.CartanType_affine.classical"]], "dimension() (sage.combinat.root_system.type_dual.ambientspace method)": [[262, "sage.combinat.root_system.type_dual.AmbientSpace.dimension"]], "dual() (sage.combinat.root_system.type_dual.cartantype method)": [[262, "sage.combinat.root_system.type_dual.CartanType.dual"]], "dynkin_diagram() (sage.combinat.root_system.type_dual.cartantype method)": [[262, "sage.combinat.root_system.type_dual.CartanType.dynkin_diagram"]], "fundamental_weights() (sage.combinat.root_system.type_dual.ambientspace method)": [[262, "sage.combinat.root_system.type_dual.AmbientSpace.fundamental_weights"]], "sage.combinat.root_system.type_dual": [[262, "module-sage.combinat.root_system.type_dual"]], "simple_root() (sage.combinat.root_system.type_dual.ambientspace method)": [[262, "sage.combinat.root_system.type_dual.AmbientSpace.simple_root"]], "special_node() (sage.combinat.root_system.type_dual.cartantype_affine method)": [[262, "sage.combinat.root_system.type_dual.CartanType_affine.special_node"]], "cartantypefolded (class in sage.combinat.root_system.type_folded)": [[263, "sage.combinat.root_system.type_folded.CartanTypeFolded"]], "cartan_type() (sage.combinat.root_system.type_folded.cartantypefolded method)": [[263, "sage.combinat.root_system.type_folded.CartanTypeFolded.cartan_type"]], "folding_of() (sage.combinat.root_system.type_folded.cartantypefolded method)": [[263, "sage.combinat.root_system.type_folded.CartanTypeFolded.folding_of"]], "folding_orbit() (sage.combinat.root_system.type_folded.cartantypefolded method)": [[263, "sage.combinat.root_system.type_folded.CartanTypeFolded.folding_orbit"]], "sage.combinat.root_system.type_folded": [[263, "module-sage.combinat.root_system.type_folded"]], "scaling_factors() (sage.combinat.root_system.type_folded.cartantypefolded method)": [[263, "sage.combinat.root_system.type_folded.CartanTypeFolded.scaling_factors"]], "ambientspace (class in sage.combinat.root_system.type_marked)": [[264, "sage.combinat.root_system.type_marked.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_marked.cartantype_finite attribute)": [[264, "sage.combinat.root_system.type_marked.CartanType_finite.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_marked)": [[264, "sage.combinat.root_system.type_marked.CartanType"]], "cartantype_affine (class in sage.combinat.root_system.type_marked)": [[264, "sage.combinat.root_system.type_marked.CartanType_affine"]], "cartantype_finite (class in sage.combinat.root_system.type_marked)": [[264, "sage.combinat.root_system.type_marked.CartanType_finite"]], "affine() (sage.combinat.root_system.type_marked.cartantype_finite method)": [[264, "sage.combinat.root_system.type_marked.CartanType_finite.affine"]], "ascii_art() (sage.combinat.root_system.type_marked.cartantype method)": [[264, "sage.combinat.root_system.type_marked.CartanType.ascii_art"]], "basic_untwisted() (sage.combinat.root_system.type_marked.cartantype_affine method)": [[264, "sage.combinat.root_system.type_marked.CartanType_affine.basic_untwisted"]], "classical() (sage.combinat.root_system.type_marked.cartantype_affine method)": [[264, "sage.combinat.root_system.type_marked.CartanType_affine.classical"]], "dimension() (sage.combinat.root_system.type_marked.ambientspace method)": [[264, "sage.combinat.root_system.type_marked.AmbientSpace.dimension"]], "dual() (sage.combinat.root_system.type_marked.cartantype method)": [[264, "sage.combinat.root_system.type_marked.CartanType.dual"]], "dynkin_diagram() (sage.combinat.root_system.type_marked.cartantype method)": [[264, "sage.combinat.root_system.type_marked.CartanType.dynkin_diagram"]], "fundamental_weight() (sage.combinat.root_system.type_marked.ambientspace method)": [[264, "sage.combinat.root_system.type_marked.AmbientSpace.fundamental_weight"]], "is_untwisted_affine() (sage.combinat.root_system.type_marked.cartantype_affine method)": [[264, "sage.combinat.root_system.type_marked.CartanType_affine.is_untwisted_affine"]], "marked_nodes() (sage.combinat.root_system.type_marked.cartantype method)": [[264, "sage.combinat.root_system.type_marked.CartanType.marked_nodes"]], "relabel() (sage.combinat.root_system.type_marked.cartantype method)": [[264, "sage.combinat.root_system.type_marked.CartanType.relabel"]], "sage.combinat.root_system.type_marked": [[264, "module-sage.combinat.root_system.type_marked"]], "simple_root() (sage.combinat.root_system.type_marked.ambientspace method)": [[264, "sage.combinat.root_system.type_marked.AmbientSpace.simple_root"]], "special_node() (sage.combinat.root_system.type_marked.cartantype_affine method)": [[264, "sage.combinat.root_system.type_marked.CartanType_affine.special_node"]], "type() (sage.combinat.root_system.type_marked.cartantype method)": [[264, "sage.combinat.root_system.type_marked.CartanType.type"]], "ambientspace (class in sage.combinat.root_system.type_reducible)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_reducible.cartantype attribute)": [[265, "sage.combinat.root_system.type_reducible.CartanType.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_reducible)": [[265, "sage.combinat.root_system.type_reducible.CartanType"]], "ambient_spaces() (sage.combinat.root_system.type_reducible.ambientspace method)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace.ambient_spaces"]], "ascii_art() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.ascii_art"]], "cartan_matrix() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.cartan_matrix"]], "cartan_type() (sage.combinat.root_system.type_reducible.ambientspace method)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace.cartan_type"]], "component_types() (sage.combinat.root_system.type_reducible.ambientspace method)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace.component_types"]], "component_types() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.component_types"]], "coxeter_diagram() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.coxeter_diagram"]], "dimension() (sage.combinat.root_system.type_reducible.ambientspace method)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace.dimension"]], "dual() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.dual"]], "dynkin_diagram() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.dynkin_diagram"]], "fundamental_weights() (sage.combinat.root_system.type_reducible.ambientspace method)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace.fundamental_weights"]], "index_set() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.index_set"]], "inject_weights() (sage.combinat.root_system.type_reducible.ambientspace method)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace.inject_weights"]], "is_affine() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.is_affine"]], "is_finite() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.is_finite"]], "is_irreducible() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.is_irreducible"]], "negative_roots() (sage.combinat.root_system.type_reducible.ambientspace method)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace.negative_roots"]], "positive_roots() (sage.combinat.root_system.type_reducible.ambientspace method)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace.positive_roots"]], "rank() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.rank"]], "sage.combinat.root_system.type_reducible": [[265, "module-sage.combinat.root_system.type_reducible"]], "simple_coroot() (sage.combinat.root_system.type_reducible.ambientspace method)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace.simple_coroot"]], "simple_root() (sage.combinat.root_system.type_reducible.ambientspace method)": [[265, "sage.combinat.root_system.type_reducible.AmbientSpace.simple_root"]], "type() (sage.combinat.root_system.type_reducible.cartantype method)": [[265, "sage.combinat.root_system.type_reducible.CartanType.type"]], "ambientspace (class in sage.combinat.root_system.type_relabel)": [[266, "sage.combinat.root_system.type_relabel.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_relabel.cartantype_finite attribute)": [[266, "sage.combinat.root_system.type_relabel.CartanType_finite.AmbientSpace"]], "cartantype (class in sage.combinat.root_system.type_relabel)": [[266, "sage.combinat.root_system.type_relabel.CartanType"]], "cartantype_affine (class in sage.combinat.root_system.type_relabel)": [[266, "sage.combinat.root_system.type_relabel.CartanType_affine"]], "cartantype_finite (class in sage.combinat.root_system.type_relabel)": [[266, "sage.combinat.root_system.type_relabel.CartanType_finite"]], "affine() (sage.combinat.root_system.type_relabel.cartantype_finite method)": [[266, "sage.combinat.root_system.type_relabel.CartanType_finite.affine"]], "ascii_art() (sage.combinat.root_system.type_relabel.cartantype method)": [[266, "sage.combinat.root_system.type_relabel.CartanType.ascii_art"]], "basic_untwisted() (sage.combinat.root_system.type_relabel.cartantype_affine method)": [[266, "sage.combinat.root_system.type_relabel.CartanType_affine.basic_untwisted"]], "classical() (sage.combinat.root_system.type_relabel.cartantype_affine method)": [[266, "sage.combinat.root_system.type_relabel.CartanType_affine.classical"]], "coxeter_diagram() (sage.combinat.root_system.type_relabel.cartantype method)": [[266, "sage.combinat.root_system.type_relabel.CartanType.coxeter_diagram"]], "dimension() (sage.combinat.root_system.type_relabel.ambientspace method)": [[266, "sage.combinat.root_system.type_relabel.AmbientSpace.dimension"]], "dual() (sage.combinat.root_system.type_relabel.cartantype method)": [[266, "sage.combinat.root_system.type_relabel.CartanType.dual"]], "dynkin_diagram() (sage.combinat.root_system.type_relabel.cartantype method)": [[266, "sage.combinat.root_system.type_relabel.CartanType.dynkin_diagram"]], "fundamental_weight() (sage.combinat.root_system.type_relabel.ambientspace method)": [[266, "sage.combinat.root_system.type_relabel.AmbientSpace.fundamental_weight"]], "index_set() (sage.combinat.root_system.type_relabel.cartantype method)": [[266, "sage.combinat.root_system.type_relabel.CartanType.index_set"]], "is_untwisted_affine() (sage.combinat.root_system.type_relabel.cartantype_affine method)": [[266, "sage.combinat.root_system.type_relabel.CartanType_affine.is_untwisted_affine"]], "sage.combinat.root_system.type_relabel": [[266, "module-sage.combinat.root_system.type_relabel"]], "simple_root() (sage.combinat.root_system.type_relabel.ambientspace method)": [[266, "sage.combinat.root_system.type_relabel.AmbientSpace.simple_root"]], "special_node() (sage.combinat.root_system.type_relabel.cartantype_affine method)": [[266, "sage.combinat.root_system.type_relabel.CartanType_affine.special_node"]], "type() (sage.combinat.root_system.type_relabel.cartantype method)": [[266, "sage.combinat.root_system.type_relabel.CartanType.type"]], "ambientspace (class in sage.combinat.root_system.type_super_a)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace"]], "ambientspace (sage.combinat.root_system.type_super_a.cartantype attribute)": [[267, "sage.combinat.root_system.type_super_A.CartanType.AmbientSpace"]], "ambientspace.element (class in sage.combinat.root_system.type_super_a)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.Element"]], "cartantype (class in sage.combinat.root_system.type_super_a)": [[267, "sage.combinat.root_system.type_super_A.CartanType"]], "ascii_art() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.ascii_art"]], "associated_coroot() (sage.combinat.root_system.type_super_a.ambientspace.element method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.Element.associated_coroot"]], "cartan_matrix() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.cartan_matrix"]], "dimension() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.dimension"]], "dot_product() (sage.combinat.root_system.type_super_a.ambientspace.element method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.Element.dot_product"]], "dual() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.dual"]], "dynkin_diagram() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.dynkin_diagram"]], "fundamental_weight() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.fundamental_weight"]], "has_descent() (sage.combinat.root_system.type_super_a.ambientspace.element method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.Element.has_descent"]], "highest_root() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.highest_root"]], "index_set() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.index_set"]], "inner_product() (sage.combinat.root_system.type_super_a.ambientspace.element method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.Element.inner_product"]], "is_affine() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.is_affine"]], "is_dominant_weight() (sage.combinat.root_system.type_super_a.ambientspace.element method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.Element.is_dominant_weight"]], "is_finite() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.is_finite"]], "is_irreducible() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.is_irreducible"]], "negative_even_roots() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.negative_even_roots"]], "negative_odd_roots() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.negative_odd_roots"]], "negative_roots() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.negative_roots"]], "positive_even_roots() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.positive_even_roots"]], "positive_odd_roots() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.positive_odd_roots"]], "positive_roots() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.positive_roots"]], "relabel() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.relabel"]], "root_system() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.root_system"]], "sage.combinat.root_system.type_super_a": [[267, "module-sage.combinat.root_system.type_super_A"]], "scalar() (sage.combinat.root_system.type_super_a.ambientspace.element method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.Element.scalar"]], "simple_coroot() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.simple_coroot"]], "simple_root() (sage.combinat.root_system.type_super_a.ambientspace method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.simple_root"]], "smallest_base_ring() (sage.combinat.root_system.type_super_a.ambientspace class method)": [[267, "sage.combinat.root_system.type_super_A.AmbientSpace.smallest_base_ring"]], "symmetrizer() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.symmetrizer"]], "type() (sage.combinat.root_system.type_super_a.cartantype method)": [[267, "sage.combinat.root_system.type_super_A.CartanType.type"]], "weightlatticerealizations (class in sage.combinat.root_system.weight_lattice_realizations)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations"]], "weightlatticerealizations.elementmethods (class in sage.combinat.root_system.weight_lattice_realizations)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ElementMethods"]], "weightlatticerealizations.parentmethods (class in sage.combinat.root_system.weight_lattice_realizations)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods"]], "dynkin_diagram_automorphism_of_alcove_morphism() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.dynkin_diagram_automorphism_of_alcove_morphism"]], "embed_at_level() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.embed_at_level"]], "fundamental_weight() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.fundamental_weight"]], "fundamental_weights() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.fundamental_weights"]], "is_extended() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.is_extended"]], "reduced_word_of_alcove_morphism() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.reduced_word_of_alcove_morphism"]], "reduced_word_of_translation() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.reduced_word_of_translation"]], "rho() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.rho"]], "rho_classical() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.rho_classical"]], "sage.combinat.root_system.weight_lattice_realizations": [[268, "module-sage.combinat.root_system.weight_lattice_realizations"]], "signs_of_alcovewalk() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.signs_of_alcovewalk"]], "simple_root() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.simple_root"]], "super_categories() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.super_categories"]], "symmetric_form() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.elementmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ElementMethods.symmetric_form"]], "to_weight_space() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.elementmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ElementMethods.to_weight_space"]], "weyl_dimension() (sage.combinat.root_system.weight_lattice_realizations.weightlatticerealizations.parentmethods method)": [[268, "sage.combinat.root_system.weight_lattice_realizations.WeightLatticeRealizations.ParentMethods.weyl_dimension"]], "element (sage.combinat.root_system.weight_space.weightspace attribute)": [[269, "sage.combinat.root_system.weight_space.WeightSpace.Element"]], "weightspace (class in sage.combinat.root_system.weight_space)": [[269, "sage.combinat.root_system.weight_space.WeightSpace"]], "weightspaceelement (class in sage.combinat.root_system.weight_space)": [[269, "sage.combinat.root_system.weight_space.WeightSpaceElement"]], "basis_extension() (sage.combinat.root_system.weight_space.weightspace method)": [[269, "sage.combinat.root_system.weight_space.WeightSpace.basis_extension"]], "fundamental_weight() (sage.combinat.root_system.weight_space.weightspace method)": [[269, "sage.combinat.root_system.weight_space.WeightSpace.fundamental_weight"]], "is_dominant() (sage.combinat.root_system.weight_space.weightspaceelement method)": [[269, "sage.combinat.root_system.weight_space.WeightSpaceElement.is_dominant"]], "is_extended() (sage.combinat.root_system.weight_space.weightspace method)": [[269, "sage.combinat.root_system.weight_space.WeightSpace.is_extended"]], "sage.combinat.root_system.weight_space": [[269, "module-sage.combinat.root_system.weight_space"]], "scalar() (sage.combinat.root_system.weight_space.weightspaceelement method)": [[269, "sage.combinat.root_system.weight_space.WeightSpaceElement.scalar"]], "simple_root() (sage.combinat.root_system.weight_space.weightspace method)": [[269, "sage.combinat.root_system.weight_space.WeightSpace.simple_root"]], "to_ambient() (sage.combinat.root_system.weight_space.weightspaceelement method)": [[269, "sage.combinat.root_system.weight_space.WeightSpaceElement.to_ambient"]], "to_ambient_space_morphism() (sage.combinat.root_system.weight_space.weightspace method)": [[269, "sage.combinat.root_system.weight_space.WeightSpace.to_ambient_space_morphism"]], "to_weight_space() (sage.combinat.root_system.weight_space.weightspaceelement method)": [[269, "sage.combinat.root_system.weight_space.WeightSpaceElement.to_weight_space"]], "weightring (class in sage.combinat.root_system.weyl_characters)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing"]], "weightring.element (class in sage.combinat.root_system.weyl_characters)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.Element"]], "weylcharacterring (class in sage.combinat.root_system.weyl_characters)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing"]], "weylcharacterring.element (class in sage.combinat.root_system.weyl_characters)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element"]], "adams_operation() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.adams_operation"]], "adjoint_representation() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.adjoint_representation"]], "affine_reflect() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.affine_reflect"]], "ambient() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.ambient"]], "base_ring() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.base_ring"]], "branch() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.branch"]], "cartan_type() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.cartan_type"]], "cartan_type() (sage.combinat.root_system.weyl_characters.weightring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.Element.cartan_type"]], "cartan_type() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.cartan_type"]], "cartan_type() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.cartan_type"]], "char_from_weights() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.char_from_weights"]], "character() (sage.combinat.root_system.weyl_characters.weightring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.Element.character"]], "degree() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.degree"]], "demazure() (sage.combinat.root_system.weyl_characters.weightring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.Element.demazure"]], "demazure_character() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.demazure_character"]], "demazure_lusztig() (sage.combinat.root_system.weyl_characters.weightring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.Element.demazure_lusztig"]], "dot_reduce() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.dot_reduce"]], "dual() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.dual"]], "dynkin_diagram() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.dynkin_diagram"]], "extended_dynkin_diagram() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.extended_dynkin_diagram"]], "exterior_power() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.exterior_power"]], "exterior_square() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.exterior_square"]], "frobenius_schur_indicator() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.frobenius_schur_indicator"]], "fundamental_weights() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.fundamental_weights"]], "fundamental_weights() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.fundamental_weights"]], "highest_root() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.highest_root"]], "highest_weight() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.highest_weight"]], "inner_product() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.inner_product"]], "invariant_degree() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.invariant_degree"]], "irr_repr() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.irr_repr"]], "irreducible_character_freudenthal() (in module sage.combinat.root_system.weyl_characters)": [[270, "sage.combinat.root_system.weyl_characters.irreducible_character_freudenthal"]], "is_irreducible() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.is_irreducible"]], "level() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.level"]], "lift() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.lift"]], "lift_on_basis() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.lift_on_basis"]], "maximal_subgroup() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.maximal_subgroup"]], "maximal_subgroups() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.maximal_subgroups"]], "multiplicity() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.multiplicity"]], "one_basis() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.one_basis"]], "one_basis() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.one_basis"]], "parent() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.parent"]], "positive_roots() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.positive_roots"]], "positive_roots() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.positive_roots"]], "product_on_basis() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.product_on_basis"]], "product_on_basis() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.product_on_basis"]], "rank() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.rank"]], "retract() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.retract"]], "sage.combinat.root_system.weyl_characters": [[270, "module-sage.combinat.root_system.weyl_characters"]], "scale() (sage.combinat.root_system.weyl_characters.weightring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.Element.scale"]], "shift() (sage.combinat.root_system.weyl_characters.weightring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.Element.shift"]], "simple_coroots() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.simple_coroots"]], "simple_roots() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.simple_roots"]], "simple_roots() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.simple_roots"]], "some_elements() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.some_elements"]], "some_elements() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.some_elements"]], "space() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.space"]], "space() (sage.combinat.root_system.weyl_characters.weylcharacterring method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.space"]], "symmetric_power() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.symmetric_power"]], "symmetric_square() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.symmetric_square"]], "weight_multiplicities() (sage.combinat.root_system.weyl_characters.weylcharacterring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeylCharacterRing.Element.weight_multiplicities"]], "weyl_character_ring() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.weyl_character_ring"]], "weyl_group_action() (sage.combinat.root_system.weyl_characters.weightring.element method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.Element.weyl_group_action"]], "wt_repr() (sage.combinat.root_system.weyl_characters.weightring method)": [[270, "sage.combinat.root_system.weyl_characters.WeightRing.wt_repr"]], "classicalweylsubgroup (class in sage.combinat.root_system.weyl_group)": [[271, "sage.combinat.root_system.weyl_group.ClassicalWeylSubgroup"]], "element (sage.combinat.root_system.weyl_group.weylgroup_gens attribute)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.Element"]], "weylgroup() (in module sage.combinat.root_system.weyl_group)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup"]], "weylgroupelement (class in sage.combinat.root_system.weyl_group)": [[271, "sage.combinat.root_system.weyl_group.WeylGroupElement"]], "weylgroup_gens (class in sage.combinat.root_system.weyl_group)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens"]], "weylgroup_permutation (class in sage.combinat.root_system.weyl_group)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation"]], "weylgroup_permutation.element (class in sage.combinat.root_system.weyl_group)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.Element"]], "action() (sage.combinat.root_system.weyl_group.weylgroupelement method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroupElement.action"]], "apply_simple_reflection() (sage.combinat.root_system.weyl_group.weylgroupelement method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroupElement.apply_simple_reflection"]], "cartan_type() (sage.combinat.root_system.weyl_group.classicalweylsubgroup method)": [[271, "sage.combinat.root_system.weyl_group.ClassicalWeylSubgroup.cartan_type"]], "cartan_type() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.cartan_type"]], "cartan_type() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.cartan_type"]], "character_table() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.character_table"]], "classical() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.classical"]], "distinguished_reflections() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.distinguished_reflections"]], "domain() (sage.combinat.root_system.weyl_group.weylgroupelement method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroupElement.domain"]], "domain() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.domain"]], "from_morphism() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.from_morphism"]], "has_descent() (sage.combinat.root_system.weyl_group.weylgroupelement method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroupElement.has_descent"]], "has_left_descent() (sage.combinat.root_system.weyl_group.weylgroupelement method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroupElement.has_left_descent"]], "has_right_descent() (sage.combinat.root_system.weyl_group.weylgroupelement method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroupElement.has_right_descent"]], "independent_roots() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.independent_roots"]], "index_set() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.index_set"]], "index_set() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.index_set"]], "iteration() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.iteration"]], "long_element_hardcoded() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.long_element_hardcoded"]], "morphism_matrix() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.morphism_matrix"]], "number_of_reflections() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.number_of_reflections"]], "one() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.one"]], "positive_roots() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.positive_roots"]], "rank() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.rank"]], "reflection_index_set() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.reflection_index_set"]], "reflections() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.reflections"]], "reflections() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.reflections"]], "roots() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.roots"]], "sage.combinat.root_system.weyl_group": [[271, "module-sage.combinat.root_system.weyl_group"]], "simple_reflection() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.simple_reflection"]], "simple_reflection() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.simple_reflection"]], "simple_reflections() (sage.combinat.root_system.weyl_group.classicalweylsubgroup method)": [[271, "sage.combinat.root_system.weyl_group.ClassicalWeylSubgroup.simple_reflections"]], "simple_reflections() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.simple_reflections"]], "simple_root_index() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.simple_root_index"]], "simple_roots() (sage.combinat.root_system.weyl_group.weylgroup_permutation method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_permutation.simple_roots"]], "to_matrix() (sage.combinat.root_system.weyl_group.weylgroupelement method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroupElement.to_matrix"]], "to_permutation() (sage.combinat.root_system.weyl_group.weylgroupelement method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroupElement.to_permutation"]], "to_permutation_string() (sage.combinat.root_system.weyl_group.weylgroupelement method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroupElement.to_permutation_string"]], "unit() (sage.combinat.root_system.weyl_group.weylgroup_gens method)": [[271, "sage.combinat.root_system.weyl_group.WeylGroup_gens.unit"]], "weyl_group() (sage.combinat.root_system.weyl_group.classicalweylsubgroup method)": [[271, "sage.combinat.root_system.weyl_group.ClassicalWeylSubgroup.weyl_group"]], "element (sage.combinat.rooted_tree.labelledrootedtrees_all attribute)": [[272, "sage.combinat.rooted_tree.LabelledRootedTrees_all.Element"]], "element (sage.combinat.rooted_tree.rootedtrees_all attribute)": [[272, "sage.combinat.rooted_tree.RootedTrees_all.Element"]], "labelledrootedtree (class in sage.combinat.rooted_tree)": [[272, "sage.combinat.rooted_tree.LabelledRootedTree"]], "labelledrootedtrees (class in sage.combinat.rooted_tree)": [[272, "sage.combinat.rooted_tree.LabelledRootedTrees"]], "labelledrootedtrees_all (class in sage.combinat.rooted_tree)": [[272, "sage.combinat.rooted_tree.LabelledRootedTrees_all"]], "rootedtree (class in sage.combinat.rooted_tree)": [[272, "sage.combinat.rooted_tree.RootedTree"]], "rootedtrees (class in sage.combinat.rooted_tree)": [[272, "sage.combinat.rooted_tree.RootedTrees"]], "rootedtrees_all (class in sage.combinat.rooted_tree)": [[272, "sage.combinat.rooted_tree.RootedTrees_all"]], "rootedtrees_size (class in sage.combinat.rooted_tree)": [[272, "sage.combinat.rooted_tree.RootedTrees_size"]], "cardinality() (sage.combinat.rooted_tree.rootedtrees_size method)": [[272, "sage.combinat.rooted_tree.RootedTrees_size.cardinality"]], "check_element() (sage.combinat.rooted_tree.rootedtrees_size method)": [[272, "sage.combinat.rooted_tree.RootedTrees_size.check_element"]], "element_class() (sage.combinat.rooted_tree.rootedtrees_size method)": [[272, "sage.combinat.rooted_tree.RootedTrees_size.element_class"]], "graft_list() (sage.combinat.rooted_tree.rootedtree method)": [[272, "sage.combinat.rooted_tree.RootedTree.graft_list"]], "graft_on_root() (sage.combinat.rooted_tree.rootedtree method)": [[272, "sage.combinat.rooted_tree.RootedTree.graft_on_root"]], "is_empty() (sage.combinat.rooted_tree.rootedtree method)": [[272, "sage.combinat.rooted_tree.RootedTree.is_empty"]], "labelled_trees() (sage.combinat.rooted_tree.labelledrootedtrees_all method)": [[272, "sage.combinat.rooted_tree.LabelledRootedTrees_all.labelled_trees"]], "labelled_trees() (sage.combinat.rooted_tree.rootedtrees_all method)": [[272, "sage.combinat.rooted_tree.RootedTrees_all.labelled_trees"]], "leaf() (sage.combinat.rooted_tree.rootedtrees_all method)": [[272, "sage.combinat.rooted_tree.RootedTrees_all.leaf"]], "normalize() (sage.combinat.rooted_tree.rootedtree method)": [[272, "sage.combinat.rooted_tree.RootedTree.normalize"]], "number_of_rooted_trees() (in module sage.combinat.rooted_tree)": [[272, "sage.combinat.rooted_tree.number_of_rooted_trees"]], "sage.combinat.rooted_tree": [[272, "module-sage.combinat.rooted_tree"]], "single_graft() (sage.combinat.rooted_tree.rootedtree method)": [[272, "sage.combinat.rooted_tree.RootedTree.single_graft"]], "sort_key() (sage.combinat.rooted_tree.labelledrootedtree method)": [[272, "sage.combinat.rooted_tree.LabelledRootedTree.sort_key"]], "sort_key() (sage.combinat.rooted_tree.rootedtree method)": [[272, "sage.combinat.rooted_tree.RootedTree.sort_key"]], "unlabelled_trees() (sage.combinat.rooted_tree.labelledrootedtrees_all method)": [[272, "sage.combinat.rooted_tree.LabelledRootedTrees_all.unlabelled_trees"]], "unlabelled_trees() (sage.combinat.rooted_tree.rootedtrees_all method)": [[272, "sage.combinat.rooted_tree.RootedTrees_all.unlabelled_trees"]], "eg (sage.combinat.rsk.insertionrules attribute)": [[273, "sage.combinat.rsk.InsertionRules.EG"]], "hecke (sage.combinat.rsk.insertionrules attribute)": [[273, "sage.combinat.rsk.InsertionRules.Hecke"]], "insertionrules (class in sage.combinat.rsk)": [[273, "sage.combinat.rsk.InsertionRules"]], "rsk (sage.combinat.rsk.insertionrules attribute)": [[273, "sage.combinat.rsk.InsertionRules.RSK"]], "rsk() (in module sage.combinat.rsk)": [[273, "sage.combinat.rsk.RSK"]], "rsk_inverse() (in module sage.combinat.rsk)": [[273, "sage.combinat.rsk.RSK_inverse"]], "rule (class in sage.combinat.rsk)": [[273, "sage.combinat.rsk.Rule"]], "rulecorsk (class in sage.combinat.rsk)": [[273, "sage.combinat.rsk.RuleCoRSK"]], "ruledualrsk (class in sage.combinat.rsk)": [[273, "sage.combinat.rsk.RuleDualRSK"]], "ruleeg (class in sage.combinat.rsk)": [[273, "sage.combinat.rsk.RuleEG"]], "rulehecke (class in sage.combinat.rsk)": [[273, "sage.combinat.rsk.RuleHecke"]], "rulersk (class in sage.combinat.rsk)": [[273, "sage.combinat.rsk.RuleRSK"]], "rulestar (class in sage.combinat.rsk)": [[273, "sage.combinat.rsk.RuleStar"]], "rulesuperrsk (class in sage.combinat.rsk)": [[273, "sage.combinat.rsk.RuleSuperRSK"]], "star (sage.combinat.rsk.insertionrules attribute)": [[273, "sage.combinat.rsk.InsertionRules.Star"]], "backward_rule() (sage.combinat.rsk.rule method)": [[273, "sage.combinat.rsk.Rule.backward_rule"]], "backward_rule() (sage.combinat.rsk.rulecorsk method)": [[273, "sage.combinat.rsk.RuleCoRSK.backward_rule"]], "backward_rule() (sage.combinat.rsk.rulehecke method)": [[273, "sage.combinat.rsk.RuleHecke.backward_rule"]], "backward_rule() (sage.combinat.rsk.rulestar method)": [[273, "sage.combinat.rsk.RuleStar.backward_rule"]], "backward_rule() (sage.combinat.rsk.rulesuperrsk method)": [[273, "sage.combinat.rsk.RuleSuperRSK.backward_rule"]], "corsk (sage.combinat.rsk.insertionrules attribute)": [[273, "sage.combinat.rsk.InsertionRules.coRSK"]], "dualrsk (sage.combinat.rsk.insertionrules attribute)": [[273, "sage.combinat.rsk.InsertionRules.dualRSK"]], "forward_rule() (sage.combinat.rsk.rule method)": [[273, "sage.combinat.rsk.Rule.forward_rule"]], "forward_rule() (sage.combinat.rsk.rulehecke method)": [[273, "sage.combinat.rsk.RuleHecke.forward_rule"]], "forward_rule() (sage.combinat.rsk.rulestar method)": [[273, "sage.combinat.rsk.RuleStar.forward_rule"]], "forward_rule() (sage.combinat.rsk.rulesuperrsk method)": [[273, "sage.combinat.rsk.RuleSuperRSK.forward_rule"]], "insertion() (sage.combinat.rsk.ruledualrsk method)": [[273, "sage.combinat.rsk.RuleDualRSK.insertion"]], "insertion() (sage.combinat.rsk.ruleeg method)": [[273, "sage.combinat.rsk.RuleEG.insertion"]], "insertion() (sage.combinat.rsk.rulehecke method)": [[273, "sage.combinat.rsk.RuleHecke.insertion"]], "insertion() (sage.combinat.rsk.rulersk method)": [[273, "sage.combinat.rsk.RuleRSK.insertion"]], "insertion() (sage.combinat.rsk.rulestar method)": [[273, "sage.combinat.rsk.RuleStar.insertion"]], "insertion() (sage.combinat.rsk.rulesuperrsk method)": [[273, "sage.combinat.rsk.RuleSuperRSK.insertion"]], "reverse_insertion() (sage.combinat.rsk.ruledualrsk method)": [[273, "sage.combinat.rsk.RuleDualRSK.reverse_insertion"]], "reverse_insertion() (sage.combinat.rsk.ruleeg method)": [[273, "sage.combinat.rsk.RuleEG.reverse_insertion"]], "reverse_insertion() (sage.combinat.rsk.rulehecke method)": [[273, "sage.combinat.rsk.RuleHecke.reverse_insertion"]], "reverse_insertion() (sage.combinat.rsk.rulersk method)": [[273, "sage.combinat.rsk.RuleRSK.reverse_insertion"]], "reverse_insertion() (sage.combinat.rsk.rulestar method)": [[273, "sage.combinat.rsk.RuleStar.reverse_insertion"]], "reverse_insertion() (sage.combinat.rsk.rulesuperrsk method)": [[273, "sage.combinat.rsk.RuleSuperRSK.reverse_insertion"]], "robinson_schensted_knuth() (in module sage.combinat.rsk)": [[273, "sage.combinat.rsk.robinson_schensted_knuth"]], "robinson_schensted_knuth_inverse() (in module sage.combinat.rsk)": [[273, "sage.combinat.rsk.robinson_schensted_knuth_inverse"]], "sage.combinat.rsk": [[273, "module-sage.combinat.rsk"]], "superrsk (sage.combinat.rsk.insertionrules attribute)": [[273, "sage.combinat.rsk.InsertionRules.superRSK"]], "to_matrix() (in module sage.combinat.rsk)": [[273, "sage.combinat.rsk.to_matrix"]], "to_pairs() (sage.combinat.rsk.rule method)": [[273, "sage.combinat.rsk.Rule.to_pairs"]], "to_pairs() (sage.combinat.rsk.rulecorsk method)": [[273, "sage.combinat.rsk.RuleCoRSK.to_pairs"]], "to_pairs() (sage.combinat.rsk.ruledualrsk method)": [[273, "sage.combinat.rsk.RuleDualRSK.to_pairs"]], "to_pairs() (sage.combinat.rsk.rulesuperrsk method)": [[273, "sage.combinat.rsk.RuleSuperRSK.to_pairs"]], "element (sage.combinat.schubert_polynomial.schubertpolynomialring_xbasis attribute)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomialRing_xbasis.Element"]], "schubertpolynomialring() (in module sage.combinat.schubert_polynomial)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomialRing"]], "schubertpolynomialring_xbasis (class in sage.combinat.schubert_polynomial)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomialRing_xbasis"]], "schubertpolynomial_class (class in sage.combinat.schubert_polynomial)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomial_class"]], "divided_difference() (sage.combinat.schubert_polynomial.schubertpolynomial_class method)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomial_class.divided_difference"]], "expand() (sage.combinat.schubert_polynomial.schubertpolynomial_class method)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomial_class.expand"]], "multiply_variable() (sage.combinat.schubert_polynomial.schubertpolynomial_class method)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomial_class.multiply_variable"]], "one_basis() (sage.combinat.schubert_polynomial.schubertpolynomialring_xbasis method)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomialRing_xbasis.one_basis"]], "product_on_basis() (sage.combinat.schubert_polynomial.schubertpolynomialring_xbasis method)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomialRing_xbasis.product_on_basis"]], "sage.combinat.schubert_polynomial": [[274, "module-sage.combinat.schubert_polynomial"]], "scalar_product() (sage.combinat.schubert_polynomial.schubertpolynomial_class method)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomial_class.scalar_product"]], "some_elements() (sage.combinat.schubert_polynomial.schubertpolynomialring_xbasis method)": [[274, "sage.combinat.schubert_polynomial.SchubertPolynomialRing_xbasis.some_elements"]], "abstractsetpartition (class in sage.combinat.set_partition)": [[275, "sage.combinat.set_partition.AbstractSetPartition"]], "element (sage.combinat.set_partition.setpartitions attribute)": [[275, "sage.combinat.set_partition.SetPartitions.Element"]], "setpartition (class in sage.combinat.set_partition)": [[275, "sage.combinat.set_partition.SetPartition"]], "setpartitions (class in sage.combinat.set_partition)": [[275, "sage.combinat.set_partition.SetPartitions"]], "setpartitions_all (class in sage.combinat.set_partition)": [[275, "sage.combinat.set_partition.SetPartitions_all"]], "setpartitions_set (class in sage.combinat.set_partition)": [[275, "sage.combinat.set_partition.SetPartitions_set"]], "setpartitions_setn (class in sage.combinat.set_partition)": [[275, "sage.combinat.set_partition.SetPartitions_setn"]], "setpartitions_setparts (class in sage.combinat.set_partition)": [[275, "sage.combinat.set_partition.SetPartitions_setparts"]], "apply_permutation() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.apply_permutation"]], "arcs() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.arcs"]], "base_set() (sage.combinat.set_partition.abstractsetpartition method)": [[275, "sage.combinat.set_partition.AbstractSetPartition.base_set"]], "base_set() (sage.combinat.set_partition.setpartitions_set method)": [[275, "sage.combinat.set_partition.SetPartitions_set.base_set"]], "base_set_cardinality() (sage.combinat.set_partition.abstractsetpartition method)": [[275, "sage.combinat.set_partition.AbstractSetPartition.base_set_cardinality"]], "base_set_cardinality() (sage.combinat.set_partition.setpartitions_set method)": [[275, "sage.combinat.set_partition.SetPartitions_set.base_set_cardinality"]], "cardinality() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.cardinality"]], "cardinality() (sage.combinat.set_partition.setpartitions_set method)": [[275, "sage.combinat.set_partition.SetPartitions_set.cardinality"]], "cardinality() (sage.combinat.set_partition.setpartitions_setn method)": [[275, "sage.combinat.set_partition.SetPartitions_setn.cardinality"]], "cardinality() (sage.combinat.set_partition.setpartitions_setparts method)": [[275, "sage.combinat.set_partition.SetPartitions_setparts.cardinality"]], "check() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.check"]], "closers() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.closers"]], "coarsenings() (sage.combinat.set_partition.abstractsetpartition method)": [[275, "sage.combinat.set_partition.AbstractSetPartition.coarsenings"]], "conjugate() (sage.combinat.set_partition.abstractsetpartition method)": [[275, "sage.combinat.set_partition.AbstractSetPartition.conjugate"]], "crossings() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.crossings"]], "crossings_iterator() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.crossings_iterator"]], "cyclic_permutations_of_set_partition() (in module sage.combinat.set_partition)": [[275, "sage.combinat.set_partition.cyclic_permutations_of_set_partition"]], "cyclic_permutations_of_set_partition_iterator() (in module sage.combinat.set_partition)": [[275, "sage.combinat.set_partition.cyclic_permutations_of_set_partition_iterator"]], "from_arcs() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.from_arcs"]], "from_restricted_growth_word() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.from_restricted_growth_word"]], "from_restricted_growth_word_blocks() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.from_restricted_growth_word_blocks"]], "from_restricted_growth_word_intertwining() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.from_restricted_growth_word_intertwining"]], "from_rook_placement() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.from_rook_placement"]], "from_rook_placement_gamma() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.from_rook_placement_gamma"]], "from_rook_placement_psi() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.from_rook_placement_psi"]], "from_rook_placement_rho() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.from_rook_placement_rho"]], "inf() (sage.combinat.set_partition.abstractsetpartition method)": [[275, "sage.combinat.set_partition.AbstractSetPartition.inf"]], "is_atomic() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.is_atomic"]], "is_less_than() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.is_less_than"]], "is_noncrossing() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.is_noncrossing"]], "is_nonnesting() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.is_nonnesting"]], "is_strict_refinement() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.is_strict_refinement"]], "latex_options() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.latex_options"]], "lt() (sage.combinat.set_partition.setpartitions method)": [[275, "sage.combinat.set_partition.SetPartitions.lt"]], "max_block_size() (sage.combinat.set_partition.abstractsetpartition method)": [[275, "sage.combinat.set_partition.AbstractSetPartition.max_block_size"]], "n (sage.combinat.set_partition.setpartitions_setn property)": [[275, "sage.combinat.set_partition.SetPartitions_setn.n"]], "nestings() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.nestings"]], "nestings_iterator() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.nestings_iterator"]], "number_of_blocks() (sage.combinat.set_partition.setpartitions_setn method)": [[275, "sage.combinat.set_partition.SetPartitions_setn.number_of_blocks"]], "number_of_crossings() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.number_of_crossings"]], "number_of_nestings() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.number_of_nestings"]], "openers() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.openers"]], "ordered_set_partition_action() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.ordered_set_partition_action"]], "parts (sage.combinat.set_partition.setpartitions_setparts property)": [[275, "sage.combinat.set_partition.SetPartitions_setparts.parts"]], "pipe() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.pipe"]], "plot() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.plot"]], "random_element() (sage.combinat.set_partition.setpartitions_set method)": [[275, "sage.combinat.set_partition.SetPartitions_set.random_element"]], "random_element() (sage.combinat.set_partition.setpartitions_setn method)": [[275, "sage.combinat.set_partition.SetPartitions_setn.random_element"]], "random_element() (sage.combinat.set_partition.setpartitions_setparts method)": [[275, "sage.combinat.set_partition.SetPartitions_setparts.random_element"]], "refinements() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.refinements"]], "restriction() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.restriction"]], "sage.combinat.set_partition": [[275, "module-sage.combinat.set_partition"]], "set_latex_options() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.set_latex_options"]], "shape() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.shape"]], "shape() (sage.combinat.set_partition.setpartitions_setparts method)": [[275, "sage.combinat.set_partition.SetPartitions_setparts.shape"]], "shape_partition() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.shape_partition"]], "size() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.size"]], "standard_form() (sage.combinat.set_partition.abstractsetpartition method)": [[275, "sage.combinat.set_partition.AbstractSetPartition.standard_form"]], "standardization() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.standardization"]], "strict_coarsenings() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.strict_coarsenings"]], "subset() (sage.combinat.set_partition.setpartitions_all method)": [[275, "sage.combinat.set_partition.SetPartitions_all.subset"]], "sup() (sage.combinat.set_partition.abstractsetpartition method)": [[275, "sage.combinat.set_partition.AbstractSetPartition.sup"]], "to_partition() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.to_partition"]], "to_permutation() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.to_permutation"]], "to_restricted_growth_word() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.to_restricted_growth_word"]], "to_restricted_growth_word_blocks() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.to_restricted_growth_word_blocks"]], "to_restricted_growth_word_intertwining() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.to_restricted_growth_word_intertwining"]], "to_rook_placement() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.to_rook_placement"]], "to_rook_placement_gamma() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.to_rook_placement_gamma"]], "to_rook_placement_psi() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.to_rook_placement_psi"]], "to_rook_placement_rho() (sage.combinat.set_partition.setpartition method)": [[275, "sage.combinat.set_partition.SetPartition.to_rook_placement_rho"]], "element (sage.combinat.set_partition_ordered.orderedsetpartitions attribute)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions.Element"]], "orderedsetpartition (class in sage.combinat.set_partition_ordered)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition"]], "orderedsetpartitions (class in sage.combinat.set_partition_ordered)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions"]], "orderedsetpartitions_all (class in sage.combinat.set_partition_ordered)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions_all"]], "orderedsetpartitions_all.element (class in sage.combinat.set_partition_ordered)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions_all.Element"]], "orderedsetpartitions_s (class in sage.combinat.set_partition_ordered)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions_s"]], "orderedsetpartitions_scomp (class in sage.combinat.set_partition_ordered)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions_scomp"]], "orderedsetpartitions_sn (class in sage.combinat.set_partition_ordered)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions_sn"]], "splitnk (class in sage.combinat.set_partition_ordered)": [[276, "sage.combinat.set_partition_ordered.SplitNK"]], "base_set() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.base_set"]], "base_set_cardinality() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.base_set_cardinality"]], "bottom_up_osp() (sage.combinat.set_partition_ordered.orderedsetpartition static method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.bottom_up_osp"]], "cardinality() (sage.combinat.set_partition_ordered.orderedsetpartitions_s method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions_s.cardinality"]], "cardinality() (sage.combinat.set_partition_ordered.orderedsetpartitions_scomp method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions_scomp.cardinality"]], "cardinality() (sage.combinat.set_partition_ordered.orderedsetpartitions_sn method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions_sn.cardinality"]], "check() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.check"]], "complement() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.complement"]], "fatten() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.fatten"]], "fatter() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.fatter"]], "finer() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.finer"]], "from_finite_word() (sage.combinat.set_partition_ordered.orderedsetpartitions method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions.from_finite_word"]], "is_finer() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.is_finer"]], "is_strongly_finer() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.is_strongly_finer"]], "length() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.length"]], "multiset_permutation_next_lex() (in module sage.combinat.set_partition_ordered)": [[276, "sage.combinat.set_partition_ordered.multiset_permutation_next_lex"]], "multiset_permutation_to_ordered_set_partition() (in module sage.combinat.set_partition_ordered)": [[276, "sage.combinat.set_partition_ordered.multiset_permutation_to_ordered_set_partition"]], "number_of_inversions() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.number_of_inversions"]], "reversed() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.reversed"]], "sage.combinat.set_partition_ordered": [[276, "module-sage.combinat.set_partition_ordered"]], "size() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.size"]], "strongly_fatter() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.strongly_fatter"]], "strongly_finer() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.strongly_finer"]], "subset() (sage.combinat.set_partition_ordered.orderedsetpartitions_all method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartitions_all.subset"]], "sum() (sage.combinat.set_partition_ordered.orderedsetpartition static method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.sum"]], "to_composition() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.to_composition"]], "to_packed_word() (sage.combinat.set_partition_ordered.orderedsetpartition method)": [[276, "sage.combinat.set_partition_ordered.OrderedSetPartition.to_packed_word"]], "sage.combinat.sf.all": [[277, "module-sage.combinat.sf.all"]], "generic_character (class in sage.combinat.sf.character)": [[278, "sage.combinat.sf.character.generic_character"]], "induced_trivial_character_basis (class in sage.combinat.sf.character)": [[278, "sage.combinat.sf.character.induced_trivial_character_basis"]], "irreducible_character_basis (class in sage.combinat.sf.character)": [[278, "sage.combinat.sf.character.irreducible_character_basis"]], "sage.combinat.sf.character": [[278, "module-sage.combinat.sf.character"]], "symmetricfunctionalgebra_classical (class in sage.combinat.sf.classical)": [[279, "sage.combinat.sf.classical.SymmetricFunctionAlgebra_classical"]], "symmetricfunctionalgebra_classical.element (class in sage.combinat.sf.classical)": [[279, "sage.combinat.sf.classical.SymmetricFunctionAlgebra_classical.Element"]], "init() (in module sage.combinat.sf.classical)": [[279, "sage.combinat.sf.classical.init"]], "sage.combinat.sf.classical": [[279, "module-sage.combinat.sf.classical"]], "symmetricfunctionalgebra_dual (class in sage.combinat.sf.dual)": [[280, "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual"]], "symmetricfunctionalgebra_dual.element (class in sage.combinat.sf.dual)": [[280, "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual.Element"]], "dual() (sage.combinat.sf.dual.symmetricfunctionalgebra_dual.element method)": [[280, "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual.Element.dual"]], "expand() (sage.combinat.sf.dual.symmetricfunctionalgebra_dual.element method)": [[280, "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual.Element.expand"]], "omega() (sage.combinat.sf.dual.symmetricfunctionalgebra_dual.element method)": [[280, "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual.Element.omega"]], "omega_involution() (sage.combinat.sf.dual.symmetricfunctionalgebra_dual.element method)": [[280, "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual.Element.omega_involution"]], "product() (sage.combinat.sf.dual.symmetricfunctionalgebra_dual method)": [[280, "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual.product"]], "sage.combinat.sf.dual": [[280, "module-sage.combinat.sf.dual"]], "scalar() (sage.combinat.sf.dual.symmetricfunctionalgebra_dual.element method)": [[280, "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual.Element.scalar"]], "scalar_hl() (sage.combinat.sf.dual.symmetricfunctionalgebra_dual.element method)": [[280, "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual.Element.scalar_hl"]], "transition_matrix() (sage.combinat.sf.dual.symmetricfunctionalgebra_dual method)": [[280, "sage.combinat.sf.dual.SymmetricFunctionAlgebra_dual.transition_matrix"]], "symmetricfunctionalgebra_elementary (class in sage.combinat.sf.elementary)": [[281, "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary"]], "symmetricfunctionalgebra_elementary.element (class in sage.combinat.sf.elementary)": [[281, "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary.Element"]], "coproduct_on_generators() (sage.combinat.sf.elementary.symmetricfunctionalgebra_elementary method)": [[281, "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary.coproduct_on_generators"]], "expand() (sage.combinat.sf.elementary.symmetricfunctionalgebra_elementary.element method)": [[281, "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary.Element.expand"]], "exponential_specialization() (sage.combinat.sf.elementary.symmetricfunctionalgebra_elementary.element method)": [[281, "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary.Element.exponential_specialization"]], "omega() (sage.combinat.sf.elementary.symmetricfunctionalgebra_elementary.element method)": [[281, "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary.Element.omega"]], "omega_involution() (sage.combinat.sf.elementary.symmetricfunctionalgebra_elementary.element method)": [[281, "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary.Element.omega_involution"]], "principal_specialization() (sage.combinat.sf.elementary.symmetricfunctionalgebra_elementary.element method)": [[281, "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary.Element.principal_specialization"]], "sage.combinat.sf.elementary": [[281, "module-sage.combinat.sf.elementary"]], "verschiebung() (sage.combinat.sf.elementary.symmetricfunctionalgebra_elementary.element method)": [[281, "sage.combinat.sf.elementary.SymmetricFunctionAlgebra_elementary.Element.verschiebung"]], "halllittlewood (class in sage.combinat.sf.hall_littlewood)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood"]], "halllittlewood_generic (class in sage.combinat.sf.hall_littlewood)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_generic"]], "halllittlewood_generic.element (class in sage.combinat.sf.hall_littlewood)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_generic.Element"]], "halllittlewood_p (class in sage.combinat.sf.hall_littlewood)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_p"]], "halllittlewood_p.element (class in sage.combinat.sf.hall_littlewood)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_p.Element"]], "halllittlewood_q (class in sage.combinat.sf.hall_littlewood)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_q"]], "halllittlewood_q.element (class in sage.combinat.sf.hall_littlewood)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_q.Element"]], "halllittlewood_qp (class in sage.combinat.sf.hall_littlewood)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_qp"]], "halllittlewood_qp.element (class in sage.combinat.sf.hall_littlewood)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_qp.Element"]], "p() (sage.combinat.sf.hall_littlewood.halllittlewood method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood.P"]], "q() (sage.combinat.sf.hall_littlewood.halllittlewood method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood.Q"]], "qp() (sage.combinat.sf.hall_littlewood.halllittlewood method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood.Qp"]], "base_ring() (sage.combinat.sf.hall_littlewood.halllittlewood method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood.base_ring"]], "expand() (sage.combinat.sf.hall_littlewood.halllittlewood_generic.element method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_generic.Element.expand"]], "hall_littlewood_family() (sage.combinat.sf.hall_littlewood.halllittlewood_generic method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_generic.hall_littlewood_family"]], "product() (sage.combinat.sf.hall_littlewood.halllittlewood_generic method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_generic.product"]], "sage.combinat.sf.hall_littlewood": [[282, "module-sage.combinat.sf.hall_littlewood"]], "scalar() (sage.combinat.sf.hall_littlewood.halllittlewood_generic.element method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_generic.Element.scalar"]], "scalar_hl() (sage.combinat.sf.hall_littlewood.halllittlewood_generic.element method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_generic.Element.scalar_hl"]], "symmetric_function_ring() (sage.combinat.sf.hall_littlewood.halllittlewood method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood.symmetric_function_ring"]], "transition_matrix() (sage.combinat.sf.hall_littlewood.halllittlewood_generic method)": [[282, "sage.combinat.sf.hall_littlewood.HallLittlewood_generic.transition_matrix"]], "heckecharacter (class in sage.combinat.sf.hecke)": [[283, "sage.combinat.sf.hecke.HeckeCharacter"]], "coproduct_on_generators() (sage.combinat.sf.hecke.heckecharacter method)": [[283, "sage.combinat.sf.hecke.HeckeCharacter.coproduct_on_generators"]], "sage.combinat.sf.hecke": [[283, "module-sage.combinat.sf.hecke"]], "symmetricfunctionalgebra_homogeneous (class in sage.combinat.sf.homogeneous)": [[284, "sage.combinat.sf.homogeneous.SymmetricFunctionAlgebra_homogeneous"]], "symmetricfunctionalgebra_homogeneous.element (class in sage.combinat.sf.homogeneous)": [[284, "sage.combinat.sf.homogeneous.SymmetricFunctionAlgebra_homogeneous.Element"]], "coproduct_on_generators() (sage.combinat.sf.homogeneous.symmetricfunctionalgebra_homogeneous method)": [[284, "sage.combinat.sf.homogeneous.SymmetricFunctionAlgebra_homogeneous.coproduct_on_generators"]], "expand() (sage.combinat.sf.homogeneous.symmetricfunctionalgebra_homogeneous.element method)": [[284, "sage.combinat.sf.homogeneous.SymmetricFunctionAlgebra_homogeneous.Element.expand"]], "exponential_specialization() (sage.combinat.sf.homogeneous.symmetricfunctionalgebra_homogeneous.element method)": [[284, "sage.combinat.sf.homogeneous.SymmetricFunctionAlgebra_homogeneous.Element.exponential_specialization"]], "omega() (sage.combinat.sf.homogeneous.symmetricfunctionalgebra_homogeneous.element method)": [[284, "sage.combinat.sf.homogeneous.SymmetricFunctionAlgebra_homogeneous.Element.omega"]], "omega_involution() (sage.combinat.sf.homogeneous.symmetricfunctionalgebra_homogeneous.element method)": [[284, "sage.combinat.sf.homogeneous.SymmetricFunctionAlgebra_homogeneous.Element.omega_involution"]], "principal_specialization() (sage.combinat.sf.homogeneous.symmetricfunctionalgebra_homogeneous.element method)": [[284, "sage.combinat.sf.homogeneous.SymmetricFunctionAlgebra_homogeneous.Element.principal_specialization"]], "sage.combinat.sf.homogeneous": [[284, "module-sage.combinat.sf.homogeneous"]], "j() (sage.combinat.sf.jack.jack method)": [[285, "sage.combinat.sf.jack.Jack.J"]], "jack (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.Jack"]], "jackpolynomials_generic (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.JackPolynomials_generic"]], "jackpolynomials_generic.element (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.JackPolynomials_generic.Element"]], "jackpolynomials_j (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.JackPolynomials_j"]], "jackpolynomials_j.element (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.JackPolynomials_j.Element"]], "jackpolynomials_p (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.JackPolynomials_p"]], "jackpolynomials_p.element (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.JackPolynomials_p.Element"]], "jackpolynomials_q (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.JackPolynomials_q"]], "jackpolynomials_q.element (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.JackPolynomials_q.Element"]], "jackpolynomials_qp (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.JackPolynomials_qp"]], "jackpolynomials_qp.element (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.JackPolynomials_qp.Element"]], "p() (sage.combinat.sf.jack.jack method)": [[285, "sage.combinat.sf.jack.Jack.P"]], "q() (sage.combinat.sf.jack.jack method)": [[285, "sage.combinat.sf.jack.Jack.Q"]], "qp() (sage.combinat.sf.jack.jack method)": [[285, "sage.combinat.sf.jack.Jack.Qp"]], "symmetricfunctionalgebra_zonal (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.SymmetricFunctionAlgebra_zonal"]], "symmetricfunctionalgebra_zonal.element (class in sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.SymmetricFunctionAlgebra_zonal.Element"]], "base_ring() (sage.combinat.sf.jack.jack method)": [[285, "sage.combinat.sf.jack.Jack.base_ring"]], "c1() (in module sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.c1"]], "c1() (sage.combinat.sf.jack.jackpolynomials_generic method)": [[285, "sage.combinat.sf.jack.JackPolynomials_generic.c1"]], "c2() (in module sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.c2"]], "c2() (sage.combinat.sf.jack.jackpolynomials_generic method)": [[285, "sage.combinat.sf.jack.JackPolynomials_generic.c2"]], "coproduct_by_coercion() (sage.combinat.sf.jack.jackpolynomials_generic method)": [[285, "sage.combinat.sf.jack.JackPolynomials_generic.coproduct_by_coercion"]], "coproduct_by_coercion() (sage.combinat.sf.jack.jackpolynomials_qp method)": [[285, "sage.combinat.sf.jack.JackPolynomials_qp.coproduct_by_coercion"]], "jack_family() (sage.combinat.sf.jack.jackpolynomials_generic method)": [[285, "sage.combinat.sf.jack.JackPolynomials_generic.jack_family"]], "normalize_coefficients() (in module sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.normalize_coefficients"]], "part_scalar_jack() (in module sage.combinat.sf.jack)": [[285, "sage.combinat.sf.jack.part_scalar_jack"]], "product() (sage.combinat.sf.jack.jackpolynomials_generic method)": [[285, "sage.combinat.sf.jack.JackPolynomials_generic.product"]], "product() (sage.combinat.sf.jack.jackpolynomials_p method)": [[285, "sage.combinat.sf.jack.JackPolynomials_p.product"]], "product() (sage.combinat.sf.jack.jackpolynomials_qp method)": [[285, "sage.combinat.sf.jack.JackPolynomials_qp.product"]], "product() (sage.combinat.sf.jack.symmetricfunctionalgebra_zonal method)": [[285, "sage.combinat.sf.jack.SymmetricFunctionAlgebra_zonal.product"]], "sage.combinat.sf.jack": [[285, "module-sage.combinat.sf.jack"]], "scalar_jack() (sage.combinat.sf.jack.jackpolynomials_generic.element method)": [[285, "sage.combinat.sf.jack.JackPolynomials_generic.Element.scalar_jack"]], "scalar_jack() (sage.combinat.sf.jack.jackpolynomials_p.element method)": [[285, "sage.combinat.sf.jack.JackPolynomials_p.Element.scalar_jack"]], "scalar_jack_basis() (sage.combinat.sf.jack.jackpolynomials_p method)": [[285, "sage.combinat.sf.jack.JackPolynomials_p.scalar_jack_basis"]], "scalar_zonal() (sage.combinat.sf.jack.symmetricfunctionalgebra_zonal.element method)": [[285, "sage.combinat.sf.jack.SymmetricFunctionAlgebra_zonal.Element.scalar_zonal"]], "symmetric_function_ring() (sage.combinat.sf.jack.jack method)": [[285, "sage.combinat.sf.jack.Jack.symmetric_function_ring"]], "affinegrothendieckpolynomial() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.AffineGrothendieckPolynomial"]], "affineschurfunctions (class in sage.combinat.sf.k_dual)": [[286, "sage.combinat.sf.k_dual.AffineSchurFunctions"]], "dualkschurfunctions (class in sage.combinat.sf.k_dual)": [[286, "sage.combinat.sf.k_dual.DualkSchurFunctions"]], "f() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.F"]], "kboundedquotient (class in sage.combinat.sf.k_dual)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient"]], "kboundedquotientbases (class in sage.combinat.sf.k_dual)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases"]], "kboundedquotientbases.elementmethods (class in sage.combinat.sf.k_dual)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ElementMethods"]], "kboundedquotientbases.parentmethods (class in sage.combinat.sf.k_dual)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods"]], "kboundedquotientbasis (class in sage.combinat.sf.k_dual)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBasis"]], "a_realization() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.a_realization"]], "affineschur() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.affineSchur"]], "ambient() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.ambient"]], "ambient() (sage.combinat.sf.k_dual.kboundedquotientbases.parentmethods method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods.ambient"]], "an_element() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.an_element"]], "antipode() (sage.combinat.sf.k_dual.kboundedquotientbases.parentmethods method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods.antipode"]], "coproduct() (sage.combinat.sf.k_dual.kboundedquotientbases.parentmethods method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods.coproduct"]], "counit() (sage.combinat.sf.k_dual.kboundedquotientbases.parentmethods method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods.counit"]], "degree_on_basis() (sage.combinat.sf.k_dual.kboundedquotientbases.parentmethods method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods.degree_on_basis"]], "dks() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.dks"]], "dual_k_schur() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.dual_k_Schur"]], "indices() (sage.combinat.sf.k_dual.kboundedquotientbases.parentmethods method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods.indices"]], "khlp() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.kHLP"]], "khalllittlewoodp() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.kHallLittlewoodP"]], "kmonomial (class in sage.combinat.sf.k_dual)": [[286, "sage.combinat.sf.k_dual.kMonomial"]], "kbounded_halllittlewoodp (class in sage.combinat.sf.k_dual)": [[286, "sage.combinat.sf.k_dual.kbounded_HallLittlewoodP"]], "km() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.km"]], "kmonomial() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.kmonomial"]], "lift() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.lift"]], "lift() (sage.combinat.sf.k_dual.kboundedquotientbases.parentmethods method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods.lift"]], "lift() (sage.combinat.sf.k_dual.kmonomial method)": [[286, "sage.combinat.sf.k_dual.kMonomial.lift"]], "lift() (sage.combinat.sf.k_dual.kbounded_halllittlewoodp method)": [[286, "sage.combinat.sf.k_dual.kbounded_HallLittlewoodP.lift"]], "one() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.one"]], "one_basis() (sage.combinat.sf.k_dual.kboundedquotientbases.parentmethods method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods.one_basis"]], "product() (sage.combinat.sf.k_dual.kboundedquotientbases.parentmethods method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods.product"]], "realizations() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.realizations"]], "retract() (sage.combinat.sf.k_dual.kboundedquotient method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotient.retract"]], "retract() (sage.combinat.sf.k_dual.kboundedquotientbases.parentmethods method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.ParentMethods.retract"]], "retract() (sage.combinat.sf.k_dual.kmonomial method)": [[286, "sage.combinat.sf.k_dual.kMonomial.retract"]], "retract() (sage.combinat.sf.k_dual.kbounded_halllittlewoodp method)": [[286, "sage.combinat.sf.k_dual.kbounded_HallLittlewoodP.retract"]], "sage.combinat.sf.k_dual": [[286, "module-sage.combinat.sf.k_dual"]], "super_categories() (sage.combinat.sf.k_dual.kboundedquotientbases method)": [[286, "sage.combinat.sf.k_dual.KBoundedQuotientBases.super_categories"]], "kostkafoulkespolynomial() (in module sage.combinat.sf.kfpoly)": [[287, "sage.combinat.sf.kfpoly.KostkaFoulkesPolynomial"]], "compat() (in module sage.combinat.sf.kfpoly)": [[287, "sage.combinat.sf.kfpoly.compat"]], "dom() (in module sage.combinat.sf.kfpoly)": [[287, "sage.combinat.sf.kfpoly.dom"]], "kfpoly() (in module sage.combinat.sf.kfpoly)": [[287, "sage.combinat.sf.kfpoly.kfpoly"]], "riggings() (in module sage.combinat.sf.kfpoly)": [[287, "sage.combinat.sf.kfpoly.riggings"]], "sage.combinat.sf.kfpoly": [[287, "module-sage.combinat.sf.kfpoly"]], "schur_to_hl() (in module sage.combinat.sf.kfpoly)": [[287, "sage.combinat.sf.kfpoly.schur_to_hl"]], "weight() (in module sage.combinat.sf.kfpoly)": [[287, "sage.combinat.sf.kfpoly.weight"]], "llt_class (class in sage.combinat.sf.llt)": [[288, "sage.combinat.sf.llt.LLT_class"]], "llt_cospin (class in sage.combinat.sf.llt)": [[288, "sage.combinat.sf.llt.LLT_cospin"]], "llt_cospin.element (class in sage.combinat.sf.llt)": [[288, "sage.combinat.sf.llt.LLT_cospin.Element"]], "llt_generic (class in sage.combinat.sf.llt)": [[288, "sage.combinat.sf.llt.LLT_generic"]], "llt_generic.element (class in sage.combinat.sf.llt)": [[288, "sage.combinat.sf.llt.LLT_generic.Element"]], "llt_spin (class in sage.combinat.sf.llt)": [[288, "sage.combinat.sf.llt.LLT_spin"]], "llt_spin.element (class in sage.combinat.sf.llt)": [[288, "sage.combinat.sf.llt.LLT_spin.Element"]], "base_ring() (sage.combinat.sf.llt.llt_class method)": [[288, "sage.combinat.sf.llt.LLT_class.base_ring"]], "cospin() (sage.combinat.sf.llt.llt_class method)": [[288, "sage.combinat.sf.llt.LLT_class.cospin"]], "hcospin() (sage.combinat.sf.llt.llt_class method)": [[288, "sage.combinat.sf.llt.LLT_class.hcospin"]], "hspin() (sage.combinat.sf.llt.llt_class method)": [[288, "sage.combinat.sf.llt.LLT_class.hspin"]], "level() (sage.combinat.sf.llt.llt_class method)": [[288, "sage.combinat.sf.llt.LLT_class.level"]], "level() (sage.combinat.sf.llt.llt_generic method)": [[288, "sage.combinat.sf.llt.LLT_generic.level"]], "llt_family() (sage.combinat.sf.llt.llt_generic method)": [[288, "sage.combinat.sf.llt.LLT_generic.llt_family"]], "product() (sage.combinat.sf.llt.llt_generic method)": [[288, "sage.combinat.sf.llt.LLT_generic.product"]], "sage.combinat.sf.llt": [[288, "module-sage.combinat.sf.llt"]], "spin_square() (sage.combinat.sf.llt.llt_class method)": [[288, "sage.combinat.sf.llt.LLT_class.spin_square"]], "symmetric_function_ring() (sage.combinat.sf.llt.llt_class method)": [[288, "sage.combinat.sf.llt.LLT_class.symmetric_function_ring"]], "h() (sage.combinat.sf.macdonald.macdonald method)": [[289, "sage.combinat.sf.macdonald.Macdonald.H"]], "ht() (sage.combinat.sf.macdonald.macdonald method)": [[289, "sage.combinat.sf.macdonald.Macdonald.Ht"]], "j() (sage.combinat.sf.macdonald.macdonald method)": [[289, "sage.combinat.sf.macdonald.Macdonald.J"]], "macdonald (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.Macdonald"]], "macdonaldpolynomials_generic (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_generic"]], "macdonaldpolynomials_generic.element (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_generic.Element"]], "macdonaldpolynomials_h (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_h"]], "macdonaldpolynomials_h.element (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_h.Element"]], "macdonaldpolynomials_ht (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_ht"]], "macdonaldpolynomials_ht.element (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_ht.Element"]], "macdonaldpolynomials_j (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_j"]], "macdonaldpolynomials_j.element (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_j.Element"]], "macdonaldpolynomials_p (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_p"]], "macdonaldpolynomials_p.element (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_p.Element"]], "macdonaldpolynomials_q (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_q"]], "macdonaldpolynomials_q.element (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_q.Element"]], "macdonaldpolynomials_s (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_s"]], "macdonaldpolynomials_s.element (class in sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_s.Element"]], "p() (sage.combinat.sf.macdonald.macdonald method)": [[289, "sage.combinat.sf.macdonald.Macdonald.P"]], "q() (sage.combinat.sf.macdonald.macdonald method)": [[289, "sage.combinat.sf.macdonald.Macdonald.Q"]], "s() (sage.combinat.sf.macdonald.macdonald method)": [[289, "sage.combinat.sf.macdonald.Macdonald.S"]], "base_ring() (sage.combinat.sf.macdonald.macdonald method)": [[289, "sage.combinat.sf.macdonald.Macdonald.base_ring"]], "c1() (in module sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.c1"]], "c1() (sage.combinat.sf.macdonald.macdonaldpolynomials_generic method)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_generic.c1"]], "c2() (in module sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.c2"]], "c2() (sage.combinat.sf.macdonald.macdonaldpolynomials_generic method)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_generic.c2"]], "cmunu() (in module sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.cmunu"]], "cmunu1() (in module sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.cmunu1"]], "creation() (sage.combinat.sf.macdonald.macdonaldpolynomials_s.element method)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_s.Element.creation"]], "macdonald_family() (sage.combinat.sf.macdonald.macdonaldpolynomials_generic method)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_generic.macdonald_family"]], "nabla() (sage.combinat.sf.macdonald.macdonaldpolynomials_generic.element method)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_generic.Element.nabla"]], "nabla() (sage.combinat.sf.macdonald.macdonaldpolynomials_ht.element method)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_ht.Element.nabla"]], "product() (sage.combinat.sf.macdonald.macdonaldpolynomials_generic method)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_generic.product"]], "product() (sage.combinat.sf.macdonald.macdonaldpolynomials_s method)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_s.product"]], "qt_kostka() (in module sage.combinat.sf.macdonald)": [[289, "sage.combinat.sf.macdonald.qt_kostka"]], "sage.combinat.sf.macdonald": [[289, "module-sage.combinat.sf.macdonald"]], "scalar_qt_basis() (sage.combinat.sf.macdonald.macdonaldpolynomials_p method)": [[289, "sage.combinat.sf.macdonald.MacdonaldPolynomials_p.scalar_qt_basis"]], "symmetric_function_ring() (sage.combinat.sf.macdonald.macdonald method)": [[289, "sage.combinat.sf.macdonald.Macdonald.symmetric_function_ring"]], "symmetricfunctionalgebra_monomial (class in sage.combinat.sf.monomial)": [[290, "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial"]], "symmetricfunctionalgebra_monomial.element (class in sage.combinat.sf.monomial)": [[290, "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial.Element"]], "antipode_by_coercion() (sage.combinat.sf.monomial.symmetricfunctionalgebra_monomial method)": [[290, "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial.antipode_by_coercion"]], "expand() (sage.combinat.sf.monomial.symmetricfunctionalgebra_monomial.element method)": [[290, "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial.Element.expand"]], "exponential_specialization() (sage.combinat.sf.monomial.symmetricfunctionalgebra_monomial.element method)": [[290, "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial.Element.exponential_specialization"]], "from_polynomial() (sage.combinat.sf.monomial.symmetricfunctionalgebra_monomial method)": [[290, "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial.from_polynomial"]], "from_polynomial_exp() (sage.combinat.sf.monomial.symmetricfunctionalgebra_monomial method)": [[290, "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial.from_polynomial_exp"]], "principal_specialization() (sage.combinat.sf.monomial.symmetricfunctionalgebra_monomial.element method)": [[290, "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial.Element.principal_specialization"]], "product() (sage.combinat.sf.monomial.symmetricfunctionalgebra_monomial method)": [[290, "sage.combinat.sf.monomial.SymmetricFunctionAlgebra_monomial.product"]], "sage.combinat.sf.monomial": [[290, "module-sage.combinat.sf.monomial"]], "symmetricfunctionalgebra_multiplicative (class in sage.combinat.sf.multiplicative)": [[291, "sage.combinat.sf.multiplicative.SymmetricFunctionAlgebra_multiplicative"]], "coproduct_on_basis() (sage.combinat.sf.multiplicative.symmetricfunctionalgebra_multiplicative method)": [[291, "sage.combinat.sf.multiplicative.SymmetricFunctionAlgebra_multiplicative.coproduct_on_basis"]], "product_on_basis() (sage.combinat.sf.multiplicative.symmetricfunctionalgebra_multiplicative method)": [[291, "sage.combinat.sf.multiplicative.SymmetricFunctionAlgebra_multiplicative.product_on_basis"]], "sage.combinat.sf.multiplicative": [[291, "module-sage.combinat.sf.multiplicative"]], "kboundedsubspace (class in sage.combinat.sf.new_kschur)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspace"]], "kboundedsubspacebases (class in sage.combinat.sf.new_kschur)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases"]], "kboundedsubspacebases.elementmethods (class in sage.combinat.sf.new_kschur)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ElementMethods"]], "kboundedsubspacebases.parentmethods (class in sage.combinat.sf.new_kschur)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ParentMethods"]], "k_kschur (class in sage.combinat.sf.new_kschur)": [[292, "sage.combinat.sf.new_kschur.K_kSchur"]], "k_k_schur_non_commutative_variables() (sage.combinat.sf.new_kschur.k_kschur method)": [[292, "sage.combinat.sf.new_kschur.K_kSchur.K_k_Schur_non_commutative_variables"]], "k_kschur() (sage.combinat.sf.new_kschur.kboundedsubspace method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspace.K_kschur"]], "an_element() (sage.combinat.sf.new_kschur.kboundedsubspacebases.parentmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ParentMethods.an_element"]], "antipode() (sage.combinat.sf.new_kschur.kboundedsubspacebases.parentmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ParentMethods.antipode"]], "coproduct() (sage.combinat.sf.new_kschur.kboundedsubspacebases.parentmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ParentMethods.coproduct"]], "counit() (sage.combinat.sf.new_kschur.kboundedsubspacebases.parentmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ParentMethods.counit"]], "degree_on_basis() (sage.combinat.sf.new_kschur.kboundedsubspacebases.parentmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ParentMethods.degree_on_basis"]], "expand() (sage.combinat.sf.new_kschur.kboundedsubspacebases.elementmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ElementMethods.expand"]], "hl_creation_operator() (sage.combinat.sf.new_kschur.kboundedsubspacebases.elementmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ElementMethods.hl_creation_operator"]], "homogeneous_basis_noncommutative_variables_zero_hecke() (sage.combinat.sf.new_kschur.k_kschur method)": [[292, "sage.combinat.sf.new_kschur.K_kSchur.homogeneous_basis_noncommutative_variables_zero_Hecke"]], "is_schur_positive() (sage.combinat.sf.new_kschur.kboundedsubspacebases.elementmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ElementMethods.is_schur_positive"]], "khomogeneous (class in sage.combinat.sf.new_kschur)": [[292, "sage.combinat.sf.new_kschur.kHomogeneous"]], "kschur (class in sage.combinat.sf.new_kschur)": [[292, "sage.combinat.sf.new_kschur.kSchur"]], "ksplit (class in sage.combinat.sf.new_kschur)": [[292, "sage.combinat.sf.new_kschur.kSplit"]], "khomogeneous() (sage.combinat.sf.new_kschur.kboundedsubspace method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspace.khomogeneous"]], "kschur() (sage.combinat.sf.new_kschur.kboundedsubspace method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspace.kschur"]], "ksplit() (sage.combinat.sf.new_kschur.kboundedsubspace method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspace.ksplit"]], "lift() (sage.combinat.sf.new_kschur.k_kschur method)": [[292, "sage.combinat.sf.new_kschur.K_kSchur.lift"]], "omega() (sage.combinat.sf.new_kschur.kboundedsubspacebases.elementmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ElementMethods.omega"]], "omega_t_inverse() (sage.combinat.sf.new_kschur.kboundedsubspacebases.elementmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ElementMethods.omega_t_inverse"]], "one_basis() (sage.combinat.sf.new_kschur.kboundedsubspacebases.parentmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ParentMethods.one_basis"]], "product() (sage.combinat.sf.new_kschur.k_kschur method)": [[292, "sage.combinat.sf.new_kschur.K_kSchur.product"]], "product_on_basis() (sage.combinat.sf.new_kschur.kschur method)": [[292, "sage.combinat.sf.new_kschur.kSchur.product_on_basis"]], "realizations() (sage.combinat.sf.new_kschur.kboundedsubspace method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspace.realizations"]], "retract() (sage.combinat.sf.new_kschur.kboundedsubspace method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspace.retract"]], "retract() (sage.combinat.sf.new_kschur.k_kschur method)": [[292, "sage.combinat.sf.new_kschur.K_kSchur.retract"]], "sage.combinat.sf.new_kschur": [[292, "module-sage.combinat.sf.new_kschur"]], "scalar() (sage.combinat.sf.new_kschur.kboundedsubspacebases.elementmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ElementMethods.scalar"]], "super_categories() (sage.combinat.sf.new_kschur.kboundedsubspacebases method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.super_categories"]], "transition_matrix() (sage.combinat.sf.new_kschur.kboundedsubspacebases.parentmethods method)": [[292, "sage.combinat.sf.new_kschur.KBoundedSubspaceBases.ParentMethods.transition_matrix"]], "augmentedlatticediagramfilling (class in sage.combinat.sf.ns_macdonald)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling"]], "e() (in module sage.combinat.sf.ns_macdonald)": [[293, "sage.combinat.sf.ns_macdonald.E"]], "e_integral() (in module sage.combinat.sf.ns_macdonald)": [[293, "sage.combinat.sf.ns_macdonald.E_integral"]], "ht() (in module sage.combinat.sf.ns_macdonald)": [[293, "sage.combinat.sf.ns_macdonald.Ht"]], "latticediagram (class in sage.combinat.sf.ns_macdonald)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram"]], "nonattackingbacktracker (class in sage.combinat.sf.ns_macdonald)": [[293, "sage.combinat.sf.ns_macdonald.NonattackingBacktracker"]], "nonattackingfillings() (in module sage.combinat.sf.ns_macdonald)": [[293, "sage.combinat.sf.ns_macdonald.NonattackingFillings"]], "nonattackingfillings_shape (class in sage.combinat.sf.ns_macdonald)": [[293, "sage.combinat.sf.ns_macdonald.NonattackingFillings_shape"]], "a() (sage.combinat.sf.ns_macdonald.latticediagram method)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram.a"]], "are_attacking() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.are_attacking"]], "arm() (sage.combinat.sf.ns_macdonald.latticediagram method)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram.arm"]], "arm_left() (sage.combinat.sf.ns_macdonald.latticediagram method)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram.arm_left"]], "arm_right() (sage.combinat.sf.ns_macdonald.latticediagram method)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram.arm_right"]], "attacking_boxes() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.attacking_boxes"]], "boxes() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.boxes"]], "boxes() (sage.combinat.sf.ns_macdonald.latticediagram method)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram.boxes"]], "boxes_same_and_lower_right() (sage.combinat.sf.ns_macdonald.latticediagram method)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram.boxes_same_and_lower_right"]], "coeff() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.coeff"]], "coeff_integral() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.coeff_integral"]], "coinv() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.coinv"]], "descents() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.descents"]], "flip() (sage.combinat.sf.ns_macdonald.latticediagram method)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram.flip"]], "flip() (sage.combinat.sf.ns_macdonald.nonattackingfillings_shape method)": [[293, "sage.combinat.sf.ns_macdonald.NonattackingFillings_shape.flip"]], "get_next_pos() (sage.combinat.sf.ns_macdonald.nonattackingbacktracker method)": [[293, "sage.combinat.sf.ns_macdonald.NonattackingBacktracker.get_next_pos"]], "inv() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.inv"]], "inversions() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.inversions"]], "is_non_attacking() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.is_non_attacking"]], "l() (sage.combinat.sf.ns_macdonald.latticediagram method)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram.l"]], "leg() (sage.combinat.sf.ns_macdonald.latticediagram method)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram.leg"]], "maj() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.maj"]], "permuted_filling() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.permuted_filling"]], "reading_order() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.reading_order"]], "reading_word() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.reading_word"]], "sage.combinat.sf.ns_macdonald": [[293, "module-sage.combinat.sf.ns_macdonald"]], "shape() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.shape"]], "size() (sage.combinat.sf.ns_macdonald.latticediagram method)": [[293, "sage.combinat.sf.ns_macdonald.LatticeDiagram.size"]], "weight() (sage.combinat.sf.ns_macdonald.augmentedlatticediagramfilling method)": [[293, "sage.combinat.sf.ns_macdonald.AugmentedLatticeDiagramFilling.weight"]], "symmetricfunctionalgebra_orthogonal (class in sage.combinat.sf.orthogonal)": [[294, "sage.combinat.sf.orthogonal.SymmetricFunctionAlgebra_orthogonal"]], "sage.combinat.sf.orthogonal": [[294, "module-sage.combinat.sf.orthogonal"]], "symmetricfunctionalgebra_orthotriang (class in sage.combinat.sf.orthotriang)": [[295, "sage.combinat.sf.orthotriang.SymmetricFunctionAlgebra_orthotriang"]], "symmetricfunctionalgebra_orthotriang.element (class in sage.combinat.sf.orthotriang)": [[295, "sage.combinat.sf.orthotriang.SymmetricFunctionAlgebra_orthotriang.Element"]], "product() (sage.combinat.sf.orthotriang.symmetricfunctionalgebra_orthotriang method)": [[295, "sage.combinat.sf.orthotriang.SymmetricFunctionAlgebra_orthotriang.product"]], "sage.combinat.sf.orthotriang": [[295, "module-sage.combinat.sf.orthotriang"]], "symmetricfunctionalgebra_power (class in sage.combinat.sf.powersum)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power"]], "symmetricfunctionalgebra_power.element (class in sage.combinat.sf.powersum)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element"]], "adams_operation() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power.element method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element.adams_operation"]], "antipode_on_basis() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.antipode_on_basis"]], "bottom_schur_function() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.bottom_schur_function"]], "coproduct_on_generators() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.coproduct_on_generators"]], "eval_at_permutation_roots() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power.element method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element.eval_at_permutation_roots"]], "eval_at_permutation_roots_on_generators() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.eval_at_permutation_roots_on_generators"]], "expand() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power.element method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element.expand"]], "exponential_specialization() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power.element method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element.exponential_specialization"]], "frobenius() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power.element method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element.frobenius"]], "omega() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power.element method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element.omega"]], "omega_involution() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power.element method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element.omega_involution"]], "principal_specialization() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power.element method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element.principal_specialization"]], "sage.combinat.sf.powersum": [[296, "module-sage.combinat.sf.powersum"]], "scalar() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power.element method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element.scalar"]], "verschiebung() (sage.combinat.sf.powersum.symmetricfunctionalgebra_power.element method)": [[296, "sage.combinat.sf.powersum.SymmetricFunctionAlgebra_power.Element.verschiebung"]], "symmetricfunctionalgebra_schur (class in sage.combinat.sf.schur)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur"]], "symmetricfunctionalgebra_schur.element (class in sage.combinat.sf.schur)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.Element"]], "coproduct_on_basis() (sage.combinat.sf.schur.symmetricfunctionalgebra_schur method)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.coproduct_on_basis"]], "expand() (sage.combinat.sf.schur.symmetricfunctionalgebra_schur.element method)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.Element.expand"]], "exponential_specialization() (sage.combinat.sf.schur.symmetricfunctionalgebra_schur.element method)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.Element.exponential_specialization"]], "omega() (sage.combinat.sf.schur.symmetricfunctionalgebra_schur.element method)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.Element.omega"]], "omega_involution() (sage.combinat.sf.schur.symmetricfunctionalgebra_schur.element method)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.Element.omega_involution"]], "principal_specialization() (sage.combinat.sf.schur.symmetricfunctionalgebra_schur.element method)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.Element.principal_specialization"]], "product_on_basis() (sage.combinat.sf.schur.symmetricfunctionalgebra_schur method)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.product_on_basis"]], "sage.combinat.sf.schur": [[297, "module-sage.combinat.sf.schur"]], "scalar() (sage.combinat.sf.schur.symmetricfunctionalgebra_schur.element method)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.Element.scalar"]], "verschiebung() (sage.combinat.sf.schur.symmetricfunctionalgebra_schur.element method)": [[297, "sage.combinat.sf.schur.SymmetricFunctionAlgebra_schur.Element.verschiebung"]], "schur() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.Schur"], [298, "sage.combinat.sf.sf.SymmetricFunctions.schur"]], "symmetricfunctions (class in sage.combinat.sf.sf)": [[298, "sage.combinat.sf.sf.SymmetricFunctions"]], "symmetricaconversiononbasis (class in sage.combinat.sf.sf)": [[298, "sage.combinat.sf.sf.SymmetricaConversionOnBasis"]], "witt() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.Witt"], [298, "sage.combinat.sf.sf.SymmetricFunctions.witt"]], "a_realization() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.a_realization"]], "complete() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.complete"]], "e() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.e"]], "elementary() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.elementary"]], "f() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.f"]], "forgotten() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.forgotten"]], "from_polynomial() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.from_polynomial"]], "h() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.h"]], "hall_littlewood() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.hall_littlewood"]], "hecke_character() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.hecke_character"]], "homogeneous() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.homogeneous"]], "ht() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.ht"]], "induced_trivial_character() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.induced_trivial_character"]], "irreducible_symmetric_group_character() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.irreducible_symmetric_group_character"]], "jack() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.jack"]], "kboundedquotient() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.kBoundedQuotient"]], "kboundedsubspace() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.kBoundedSubspace"]], "khomogeneous() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.khomogeneous"]], "kschur() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.kschur"]], "ksplit() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.ksplit"]], "llt() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.llt"]], "m() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.m"]], "macdonald() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.macdonald"]], "monomial() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.monomial"]], "o() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.o"]], "orthogonal() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.orthogonal"]], "p() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.p"]], "power() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.power"]], "powersum() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.powersum"]], "qbar() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.qbar"]], "register_isomorphism() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.register_isomorphism"]], "s() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.s"]], "sage.combinat.sf.sf": [[298, "module-sage.combinat.sf.sf"]], "sp() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.sp"]], "st() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.st"]], "symplectic() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.symplectic"]], "w() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.w"]], "zonal() (sage.combinat.sf.sf.symmetricfunctions method)": [[298, "sage.combinat.sf.sf.SymmetricFunctions.zonal"]], "element (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic attribute)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.Element"]], "eulerian() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.Eulerian"]], "filteredsymmetricfunctionsbases (class in sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.FilteredSymmetricFunctionsBases"]], "gradedsymmetricfunctionsbases (class in sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases"]], "gradedsymmetricfunctionsbases.elementmethods (class in sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.ElementMethods"]], "gradedsymmetricfunctionsbases.parentmethods (class in sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.ParentMethods"]], "symmetricfunctionalgebra_generic (class in sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic"]], "symmetricfunctionalgebra_generic_element (class in sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element"]], "symmetricfunctionsbases (class in sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases"]], "symmetricfunctionsbases.parentmethods (class in sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods"]], "antipode_by_coercion() (sage.combinat.sf.sfa.gradedsymmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.ParentMethods.antipode_by_coercion"]], "arithmetic_product() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.arithmetic_product"]], "basis_name() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.basis_name"]], "bernstein_creation_operator() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.bernstein_creation_operator"]], "carlitz_shareshian_wachs() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.carlitz_shareshian_wachs"]], "character_to_frobenius_image() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.character_to_frobenius_image"]], "coproduct_by_coercion() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.coproduct_by_coercion"]], "corresponding_basis_over() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.corresponding_basis_over"]], "counit() (sage.combinat.sf.sfa.gradedsymmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.ParentMethods.counit"]], "degree() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.degree"]], "degree_negation() (sage.combinat.sf.sfa.gradedsymmetricfunctionsbases.elementmethods method)": [[299, "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.ElementMethods.degree_negation"]], "degree_negation() (sage.combinat.sf.sfa.gradedsymmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.ParentMethods.degree_negation"]], "degree_on_basis() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.degree_on_basis"]], "degree_zero_coefficient() (sage.combinat.sf.sfa.gradedsymmetricfunctionsbases.elementmethods method)": [[299, "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.ElementMethods.degree_zero_coefficient"]], "derivative_with_respect_to_p1() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.derivative_with_respect_to_p1"]], "dual_basis() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.dual_basis"]], "eval_at_permutation_roots() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.eval_at_permutation_roots"]], "expand() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.expand"]], "exponential_specialization() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.exponential_specialization"]], "factor() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.factor"]], "formal_series_ring() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.formal_series_ring"]], "frobenius() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.frobenius"]], "from_polynomial() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.from_polynomial"]], "gcd() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.gcd"]], "gessel_reutenauer() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.gessel_reutenauer"]], "get_print_style() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.get_print_style"]], "higher_lie_character() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.higher_lie_character"]], "hl_creation_operator() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.hl_creation_operator"]], "inner_plethysm() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.inner_plethysm"]], "inner_tensor() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.inner_tensor"]], "internal_coproduct() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.internal_coproduct"]], "internal_product() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.internal_product"]], "is_symmetricfunction() (in module sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.is_SymmetricFunction"]], "is_symmetricfunctionalgebra() (in module sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.is_SymmetricFunctionAlgebra"]], "is_commutative() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.is_commutative"]], "is_field() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.is_field"]], "is_integral_domain() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.is_integral_domain"]], "is_schur_positive() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.is_schur_positive"]], "is_unit() (sage.combinat.sf.sfa.gradedsymmetricfunctionsbases.elementmethods method)": [[299, "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.ElementMethods.is_unit"]], "itensor() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.itensor"]], "kronecker_coproduct() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.kronecker_coproduct"]], "kronecker_product() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.kronecker_product"]], "left_padded_kronecker_product() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.left_padded_kronecker_product"]], "lehrer_solomon() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.lehrer_solomon"]], "nabla() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.nabla"]], "omega() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.omega"]], "omega_involution() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.omega_involution"]], "omega_qt() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.omega_qt"]], "one_basis() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.one_basis"]], "plethysm() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.plethysm"]], "prefix() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.prefix"]], "principal_specialization() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.principal_specialization"]], "product_by_coercion() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.product_by_coercion"]], "reduced_kronecker_product() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.reduced_kronecker_product"]], "restrict_degree() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.restrict_degree"]], "restrict_partition_lengths() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.restrict_partition_lengths"]], "restrict_parts() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.restrict_parts"]], "sage.combinat.sf.sfa": [[299, "module-sage.combinat.sf.sfa"]], "scalar() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.scalar"]], "scalar_hl() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.scalar_hl"]], "scalar_jack() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.scalar_jack"]], "scalar_qt() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.scalar_qt"]], "scalar_t() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.scalar_t"]], "set_print_style() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.set_print_style"]], "skew_by() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.skew_by"]], "skew_schur() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.skew_schur"]], "super_categories() (sage.combinat.sf.sfa.filteredsymmetricfunctionsbases method)": [[299, "sage.combinat.sf.sfa.FilteredSymmetricFunctionsBases.super_categories"]], "super_categories() (sage.combinat.sf.sfa.gradedsymmetricfunctionsbases method)": [[299, "sage.combinat.sf.sfa.GradedSymmetricFunctionsBases.super_categories"]], "super_categories() (sage.combinat.sf.sfa.symmetricfunctionsbases method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.super_categories"]], "symmetric_function_ring() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.symmetric_function_ring"]], "theta() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.theta"]], "theta_qt() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.theta_qt"]], "transition_matrix() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic.transition_matrix"]], "verschiebung() (sage.combinat.sf.sfa.symmetricfunctionalgebra_generic_element method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionAlgebra_generic_Element.verschiebung"]], "whitney_homology_character() (sage.combinat.sf.sfa.symmetricfunctionsbases.parentmethods method)": [[299, "sage.combinat.sf.sfa.SymmetricFunctionsBases.ParentMethods.whitney_homology_character"]], "zee() (in module sage.combinat.sf.sfa)": [[299, "sage.combinat.sf.sfa.zee"]], "symmetricfunctionalgebra_symplectic (class in sage.combinat.sf.symplectic)": [[300, "sage.combinat.sf.symplectic.SymmetricFunctionAlgebra_symplectic"]], "sage.combinat.sf.symplectic": [[300, "module-sage.combinat.sf.symplectic"]], "symmetricfunctionalgebra_witt (class in sage.combinat.sf.witt)": [[301, "sage.combinat.sf.witt.SymmetricFunctionAlgebra_witt"]], "coproduct() (sage.combinat.sf.witt.symmetricfunctionalgebra_witt method)": [[301, "sage.combinat.sf.witt.SymmetricFunctionAlgebra_witt.coproduct"]], "from_other_uncached() (sage.combinat.sf.witt.symmetricfunctionalgebra_witt method)": [[301, "sage.combinat.sf.witt.SymmetricFunctionAlgebra_witt.from_other_uncached"]], "sage.combinat.sf.witt": [[301, "module-sage.combinat.sf.witt"]], "verschiebung() (sage.combinat.sf.witt.symmetricfunctionalgebra_witt method)": [[301, "sage.combinat.sf.witt.SymmetricFunctionAlgebra_witt.verschiebung"]], "shardposetelement (class in sage.combinat.shard_order)": [[302, "sage.combinat.shard_order.ShardPosetElement"]], "sage.combinat.shard_order": [[302, "module-sage.combinat.shard_order"]], "shard_poset() (in module sage.combinat.shard_order)": [[302, "sage.combinat.shard_order.shard_poset"]], "shard_preorder_graph() (in module sage.combinat.shard_order)": [[302, "sage.combinat.shard_order.shard_preorder_graph"]], "crystalelementshiftedprimedtableau (class in sage.combinat.shifted_primed_tableau)": [[303, "sage.combinat.shifted_primed_tableau.CrystalElementShiftedPrimedTableau"]], "element (sage.combinat.shifted_primed_tableau.shiftedprimedtableaux attribute)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux.Element"]], "primedentry (class in sage.combinat.shifted_primed_tableau)": [[303, "sage.combinat.shifted_primed_tableau.PrimedEntry"]], "shiftedprimedtableau (class in sage.combinat.shifted_primed_tableau)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau"]], "shiftedprimedtableaux (class in sage.combinat.shifted_primed_tableau)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux"]], "shiftedprimedtableaux_all (class in sage.combinat.shifted_primed_tableau)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux_all"]], "shiftedprimedtableaux_shape (class in sage.combinat.shifted_primed_tableau)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux_shape"]], "shiftedprimedtableaux_weight (class in sage.combinat.shifted_primed_tableau)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux_weight"]], "shiftedprimedtableaux_weight_shape (class in sage.combinat.shifted_primed_tableau)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux_weight_shape"]], "check() (sage.combinat.shifted_primed_tableau.shiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau.check"]], "decrease_half() (sage.combinat.shifted_primed_tableau.primedentry method)": [[303, "sage.combinat.shifted_primed_tableau.PrimedEntry.decrease_half"]], "decrease_one() (sage.combinat.shifted_primed_tableau.primedentry method)": [[303, "sage.combinat.shifted_primed_tableau.PrimedEntry.decrease_one"]], "e() (sage.combinat.shifted_primed_tableau.crystalelementshiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.CrystalElementShiftedPrimedTableau.e"]], "f() (sage.combinat.shifted_primed_tableau.crystalelementshiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.CrystalElementShiftedPrimedTableau.f"]], "increase_half() (sage.combinat.shifted_primed_tableau.primedentry method)": [[303, "sage.combinat.shifted_primed_tableau.PrimedEntry.increase_half"]], "increase_one() (sage.combinat.shifted_primed_tableau.primedentry method)": [[303, "sage.combinat.shifted_primed_tableau.PrimedEntry.increase_one"]], "integer() (sage.combinat.shifted_primed_tableau.primedentry method)": [[303, "sage.combinat.shifted_primed_tableau.PrimedEntry.integer"]], "is_highest_weight() (sage.combinat.shifted_primed_tableau.crystalelementshiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.CrystalElementShiftedPrimedTableau.is_highest_weight"]], "is_primed() (sage.combinat.shifted_primed_tableau.primedentry method)": [[303, "sage.combinat.shifted_primed_tableau.PrimedEntry.is_primed"]], "is_standard() (sage.combinat.shifted_primed_tableau.shiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau.is_standard"]], "is_unprimed() (sage.combinat.shifted_primed_tableau.primedentry method)": [[303, "sage.combinat.shifted_primed_tableau.PrimedEntry.is_unprimed"]], "max_entry() (sage.combinat.shifted_primed_tableau.shiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau.max_entry"]], "module_generators() (sage.combinat.shifted_primed_tableau.shiftedprimedtableaux_shape method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux_shape.module_generators"]], "options (sage.combinat.shifted_primed_tableau.shiftedprimedtableaux attribute)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux.options"]], "pp() (sage.combinat.shifted_primed_tableau.shiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau.pp"]], "primed() (sage.combinat.shifted_primed_tableau.primedentry method)": [[303, "sage.combinat.shifted_primed_tableau.PrimedEntry.primed"]], "reading_word() (sage.combinat.shifted_primed_tableau.crystalelementshiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.CrystalElementShiftedPrimedTableau.reading_word"]], "restrict() (sage.combinat.shifted_primed_tableau.shiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau.restrict"]], "restriction_outer_shape() (sage.combinat.shifted_primed_tableau.shiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau.restriction_outer_shape"]], "restriction_shape() (sage.combinat.shifted_primed_tableau.shiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau.restriction_shape"]], "sage.combinat.shifted_primed_tableau": [[303, "module-sage.combinat.shifted_primed_tableau"]], "shape() (sage.combinat.shifted_primed_tableau.shiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau.shape"]], "shape() (sage.combinat.shifted_primed_tableau.shiftedprimedtableaux_shape method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableaux_shape.shape"]], "to_chain() (sage.combinat.shifted_primed_tableau.shiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau.to_chain"]], "unprimed() (sage.combinat.shifted_primed_tableau.primedentry method)": [[303, "sage.combinat.shifted_primed_tableau.PrimedEntry.unprimed"]], "weight() (sage.combinat.shifted_primed_tableau.crystalelementshiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.CrystalElementShiftedPrimedTableau.weight"]], "weight() (sage.combinat.shifted_primed_tableau.shiftedprimedtableau method)": [[303, "sage.combinat.shifted_primed_tableau.ShiftedPrimedTableau.weight"]], "setshuffleproduct (class in sage.combinat.shuffle)": [[304, "sage.combinat.shuffle.SetShuffleProduct"]], "shuffleproduct (class in sage.combinat.shuffle)": [[304, "sage.combinat.shuffle.ShuffleProduct"]], "shuffleproduct_abstract (class in sage.combinat.shuffle)": [[304, "sage.combinat.shuffle.ShuffleProduct_abstract"]], "shuffleproduct_overlapping (class in sage.combinat.shuffle)": [[304, "sage.combinat.shuffle.ShuffleProduct_overlapping"]], "shuffleproduct_overlapping_r (class in sage.combinat.shuffle)": [[304, "sage.combinat.shuffle.ShuffleProduct_overlapping_r"]], "cardinality() (sage.combinat.shuffle.setshuffleproduct method)": [[304, "sage.combinat.shuffle.SetShuffleProduct.cardinality"]], "cardinality() (sage.combinat.shuffle.shuffleproduct method)": [[304, "sage.combinat.shuffle.ShuffleProduct.cardinality"]], "sage.combinat.shuffle": [[304, "module-sage.combinat.shuffle"]], "sage.combinat.sidon_sets": [[305, "module-sage.combinat.sidon_sets"]], "sidon_sets() (in module sage.combinat.sidon_sets)": [[305, "sage.combinat.sidon_sets.sidon_sets"]], "sidon_sets_rec() (in module sage.combinat.sidon_sets)": [[305, "sage.combinat.sidon_sets.sidon_sets_rec"]], "element (sage.combinat.similarity_class_type.primarysimilarityclasstypes attribute)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassTypes.Element"]], "element (sage.combinat.similarity_class_type.similarityclasstypes attribute)": [[306, "sage.combinat.similarity_class_type.SimilarityClassTypes.Element"]], "primarysimilarityclasstype (class in sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassType"]], "primarysimilarityclasstypes (class in sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassTypes"]], "similarityclasstype (class in sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType"]], "similarityclasstypes (class in sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.SimilarityClassTypes"]], "as_partition_dictionary() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.as_partition_dictionary"]], "centralizer_algebra_dim() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.centralizer_algebra_dim"]], "centralizer_algebra_dim() (sage.combinat.similarity_class_type.primarysimilarityclasstype method)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassType.centralizer_algebra_dim"]], "centralizer_algebra_dim() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.centralizer_algebra_dim"]], "centralizer_group_card() (sage.combinat.similarity_class_type.primarysimilarityclasstype method)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassType.centralizer_group_card"]], "centralizer_group_card() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.centralizer_group_card"]], "centralizer_group_cardinality() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.centralizer_group_cardinality"]], "class_card() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.class_card"]], "degree() (sage.combinat.similarity_class_type.primarysimilarityclasstype method)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassType.degree"]], "dictionary_from_generator() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.dictionary_from_generator"]], "ext_orbit_centralizers() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.ext_orbit_centralizers"]], "ext_orbits() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.ext_orbits"]], "fq() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.fq"]], "input_parsing() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.input_parsing"]], "invariant_subspace_generating_function() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.invariant_subspace_generating_function"]], "invariant_subspace_generating_function() (sage.combinat.similarity_class_type.primarysimilarityclasstype method)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassType.invariant_subspace_generating_function"]], "invariant_subspace_generating_function() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.invariant_subspace_generating_function"]], "is_regular() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.is_regular"]], "is_semisimple() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.is_semisimple"]], "matrix_centralizer_cardinalities() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.matrix_centralizer_cardinalities"]], "matrix_centralizer_cardinalities_length_two() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.matrix_centralizer_cardinalities_length_two"]], "matrix_similarity_classes() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.matrix_similarity_classes"]], "matrix_similarity_classes_length_two() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.matrix_similarity_classes_length_two"]], "number_of_classes() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.number_of_classes"]], "number_of_matrices() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.number_of_matrices"]], "order_of_general_linear_group() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.order_of_general_linear_group"]], "partition() (sage.combinat.similarity_class_type.primarysimilarityclasstype method)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassType.partition"]], "primitives() (in module sage.combinat.similarity_class_type)": [[306, "sage.combinat.similarity_class_type.primitives"]], "rcf() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.rcf"]], "sage.combinat.similarity_class_type": [[306, "module-sage.combinat.similarity_class_type"]], "size() (sage.combinat.similarity_class_type.primarysimilarityclasstype method)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassType.size"]], "size() (sage.combinat.similarity_class_type.primarysimilarityclasstypes method)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassTypes.size"]], "size() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.size"]], "size() (sage.combinat.similarity_class_type.similarityclasstypes method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassTypes.size"]], "statistic() (sage.combinat.similarity_class_type.primarysimilarityclasstype method)": [[306, "sage.combinat.similarity_class_type.PrimarySimilarityClassType.statistic"]], "statistic() (sage.combinat.similarity_class_type.similarityclasstype method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassType.statistic"]], "sum() (sage.combinat.similarity_class_type.similarityclasstypes method)": [[306, "sage.combinat.similarity_class_type.SimilarityClassTypes.sum"]], "f() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.F"]], "sinegordonysystem (class in sage.combinat.sine_gordon)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem"]], "intervals() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.intervals"]], "na() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.na"]], "pa() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.pa"]], "plot() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.plot"]], "qa() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.qa"]], "r() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.r"]], "rk() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.rk"]], "sage.combinat.sine_gordon": [[307, "module-sage.combinat.sine_gordon"]], "triangulation() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.triangulation"]], "type() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.type"]], "vertices() (sage.combinat.sine_gordon.sinegordonysystem method)": [[307, "sage.combinat.sine_gordon.SineGordonYsystem.vertices"]], "element (sage.combinat.six_vertex_model.sixvertexmodel attribute)": [[308, "sage.combinat.six_vertex_model.SixVertexModel.Element"]], "sixvertexconfiguration (class in sage.combinat.six_vertex_model)": [[308, "sage.combinat.six_vertex_model.SixVertexConfiguration"]], "sixvertexmodel (class in sage.combinat.six_vertex_model)": [[308, "sage.combinat.six_vertex_model.SixVertexModel"]], "squareicemodel (class in sage.combinat.six_vertex_model)": [[308, "sage.combinat.six_vertex_model.SquareIceModel"]], "squareicemodel.element (class in sage.combinat.six_vertex_model)": [[308, "sage.combinat.six_vertex_model.SquareIceModel.Element"]], "boundary_conditions() (sage.combinat.six_vertex_model.sixvertexmodel method)": [[308, "sage.combinat.six_vertex_model.SixVertexModel.boundary_conditions"]], "check() (sage.combinat.six_vertex_model.sixvertexconfiguration method)": [[308, "sage.combinat.six_vertex_model.SixVertexConfiguration.check"]], "energy() (sage.combinat.six_vertex_model.sixvertexconfiguration method)": [[308, "sage.combinat.six_vertex_model.SixVertexConfiguration.energy"]], "from_alternating_sign_matrix() (sage.combinat.six_vertex_model.squareicemodel method)": [[308, "sage.combinat.six_vertex_model.SquareIceModel.from_alternating_sign_matrix"]], "partition_function() (sage.combinat.six_vertex_model.sixvertexmodel method)": [[308, "sage.combinat.six_vertex_model.SixVertexModel.partition_function"]], "plot() (sage.combinat.six_vertex_model.sixvertexconfiguration method)": [[308, "sage.combinat.six_vertex_model.SixVertexConfiguration.plot"]], "sage.combinat.six_vertex_model": [[308, "module-sage.combinat.six_vertex_model"]], "to_alternating_sign_matrix() (sage.combinat.six_vertex_model.squareicemodel.element method)": [[308, "sage.combinat.six_vertex_model.SquareIceModel.Element.to_alternating_sign_matrix"]], "to_signed_matrix() (sage.combinat.six_vertex_model.sixvertexconfiguration method)": [[308, "sage.combinat.six_vertex_model.SixVertexConfiguration.to_signed_matrix"]], "element (sage.combinat.skew_partition.skewpartitions attribute)": [[309, "sage.combinat.skew_partition.SkewPartitions.Element"]], "skewpartition (class in sage.combinat.skew_partition)": [[309, "sage.combinat.skew_partition.SkewPartition"]], "skewpartitions (class in sage.combinat.skew_partition)": [[309, "sage.combinat.skew_partition.SkewPartitions"]], "skewpartitions_all (class in sage.combinat.skew_partition)": [[309, "sage.combinat.skew_partition.SkewPartitions_all"]], "skewpartitions_n (class in sage.combinat.skew_partition)": [[309, "sage.combinat.skew_partition.SkewPartitions_n"]], "skewpartitions_rowlengths (class in sage.combinat.skew_partition)": [[309, "sage.combinat.skew_partition.SkewPartitions_rowlengths"]], "cardinality() (sage.combinat.skew_partition.skewpartitions_n method)": [[309, "sage.combinat.skew_partition.SkewPartitions_n.cardinality"]], "cell_poset() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.cell_poset"]], "cells() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.cells"]], "column_lengths() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.column_lengths"]], "columns_intersection_set() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.columns_intersection_set"]], "conjugate() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.conjugate"]], "diagram() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.diagram"]], "ferrers_diagram() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.ferrers_diagram"]], "frobenius_rank() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.frobenius_rank"]], "from_row_and_column_length() (sage.combinat.skew_partition.skewpartitions method)": [[309, "sage.combinat.skew_partition.SkewPartitions.from_row_and_column_length"]], "inner() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.inner"]], "inner_corners() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.inner_corners"]], "is_connected() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.is_connected"]], "is_overlap() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.is_overlap"]], "is_ribbon() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.is_ribbon"]], "jacobi_trudi() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.jacobi_trudi"]], "k_conjugate() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.k_conjugate"]], "options (sage.combinat.skew_partition.skewpartitions attribute)": [[309, "sage.combinat.skew_partition.SkewPartitions.options"]], "outer() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.outer"]], "outer_corners() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.outer_corners"]], "outside_corners() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.outside_corners"]], "overlap() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.overlap"]], "pieri_macdonald_coeffs() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.pieri_macdonald_coeffs"]], "pp() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.pp"]], "quotient() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.quotient"]], "row_lengths() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.row_lengths"]], "row_lengths_aux() (in module sage.combinat.skew_partition)": [[309, "sage.combinat.skew_partition.row_lengths_aux"]], "rows_intersection_set() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.rows_intersection_set"]], "sage.combinat.skew_partition": [[309, "module-sage.combinat.skew_partition"]], "size() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.size"]], "to_dag() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.to_dag"]], "to_list() (sage.combinat.skew_partition.skewpartition method)": [[309, "sage.combinat.skew_partition.SkewPartition.to_list"]], "element (sage.combinat.skew_tableau.skewtableaux attribute)": [[310, "sage.combinat.skew_tableau.SkewTableaux.Element"]], "semistandardskewtableaux (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.SemistandardSkewTableaux"]], "semistandardskewtableaux_all (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.SemistandardSkewTableaux_all"]], "semistandardskewtableaux_shape (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.SemistandardSkewTableaux_shape"]], "semistandardskewtableaux_shape_weight (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.SemistandardSkewTableaux_shape_weight"]], "semistandardskewtableaux_size (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.SemistandardSkewTableaux_size"]], "semistandardskewtableaux_size_weight (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.SemistandardSkewTableaux_size_weight"]], "skewtableau (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.SkewTableau"]], "skewtableau_class (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.SkewTableau_class"]], "skewtableaux (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.SkewTableaux"]], "standardskewtableaux (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.StandardSkewTableaux"]], "standardskewtableaux_all (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.StandardSkewTableaux_all"]], "standardskewtableaux_shape (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.StandardSkewTableaux_shape"]], "standardskewtableaux_size (class in sage.combinat.skew_tableau)": [[310, "sage.combinat.skew_tableau.StandardSkewTableaux_size"]], "backward_slide() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.backward_slide"]], "bender_knuth_involution() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.bender_knuth_involution"]], "cardinality() (sage.combinat.skew_tableau.semistandardskewtableaux_shape method)": [[310, "sage.combinat.skew_tableau.SemistandardSkewTableaux_shape.cardinality"]], "cardinality() (sage.combinat.skew_tableau.semistandardskewtableaux_size method)": [[310, "sage.combinat.skew_tableau.SemistandardSkewTableaux_size.cardinality"]], "cardinality() (sage.combinat.skew_tableau.semistandardskewtableaux_size_weight method)": [[310, "sage.combinat.skew_tableau.SemistandardSkewTableaux_size_weight.cardinality"]], "cardinality() (sage.combinat.skew_tableau.standardskewtableaux_shape method)": [[310, "sage.combinat.skew_tableau.StandardSkewTableaux_shape.cardinality"]], "cardinality() (sage.combinat.skew_tableau.standardskewtableaux_size method)": [[310, "sage.combinat.skew_tableau.StandardSkewTableaux_size.cardinality"]], "cells() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.cells"]], "cells_by_content() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.cells_by_content"]], "cells_containing() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.cells_containing"]], "check() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.check"]], "conjugate() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.conjugate"]], "entries_by_content() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.entries_by_content"]], "evaluation() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.evaluation"]], "filling() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.filling"]], "from_chain() (sage.combinat.skew_tableau.skewtableaux method)": [[310, "sage.combinat.skew_tableau.SkewTableaux.from_chain"]], "from_expr() (sage.combinat.skew_tableau.skewtableaux method)": [[310, "sage.combinat.skew_tableau.SkewTableaux.from_expr"]], "from_shape_and_word() (sage.combinat.skew_tableau.skewtableaux method)": [[310, "sage.combinat.skew_tableau.SkewTableaux.from_shape_and_word"]], "inner_shape() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.inner_shape"]], "inner_size() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.inner_size"]], "is_k_tableau() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.is_k_tableau"]], "is_ribbon() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.is_ribbon"]], "is_semistandard() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.is_semistandard"]], "is_standard() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.is_standard"]], "options (sage.combinat.skew_tableau.skewtableaux attribute)": [[310, "sage.combinat.skew_tableau.SkewTableaux.options"]], "outer_shape() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.outer_shape"]], "outer_size() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.outer_size"]], "pp() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.pp"]], "rectify() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.rectify"]], "restrict() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.restrict"]], "restriction_outer_shape() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.restriction_outer_shape"]], "restriction_shape() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.restriction_shape"]], "reverse_slide() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.reverse_slide"]], "sage.combinat.skew_tableau": [[310, "module-sage.combinat.skew_tableau"]], "shape() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.shape"]], "shuffle() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.shuffle"]], "size() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.size"]], "slide() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.slide"]], "standardization() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.standardization"]], "to_chain() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.to_chain"]], "to_expr() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.to_expr"]], "to_list() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.to_list"]], "to_permutation() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.to_permutation"]], "to_ribbon() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.to_ribbon"]], "to_tableau() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.to_tableau"]], "to_word() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.to_word"]], "to_word_by_column() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.to_word_by_column"]], "to_word_by_row() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.to_word_by_row"]], "weight() (sage.combinat.skew_tableau.skewtableau method)": [[310, "sage.combinat.skew_tableau.SkewTableau.weight"]], "a000001 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000001"]], "a000004 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000004"]], "a000005 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000005"]], "a000007 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000007"]], "a000008 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000008"]], "a000009 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000009"]], "a000010 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000010"]], "a000012 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000012"]], "a000015 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000015"]], "a000016 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000016"]], "a000027 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000027"]], "a000030 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000030"]], "a000032 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000032"]], "a000035 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000035"]], "a000040 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000040"]], "a000041 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000041"]], "a000043 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000043"]], "a000045 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000045"]], "a000069 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000069"]], "a000073 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000073"]], "a000079 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000079"]], "a000085 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000085"]], "a000100 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000100"]], "a000108 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000108"]], "a000110 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000110"]], "a000120 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000120"]], "a000124 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000124"]], "a000129 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000129"]], "a000142 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000142"]], "a000153 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000153"]], "a000165 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000165"]], "a000166 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000166"]], "a000169 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000169"]], "a000203 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000203"]], "a000204 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000204"]], "a000213 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000213"]], "a000217 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000217"]], "a000225 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000225"]], "a000244 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000244"]], "a000255 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000255"]], "a000261 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000261"]], "a000272 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000272"]], "a000290 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000290"]], "a000292 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000292"]], "a000302 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000302"]], "a000312 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000312"]], "a000326 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000326"]], "a000330 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000330"]], "a000396 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000396"]], "a000578 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000578"]], "a000583 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000583"]], "a000587 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000587"]], "a000668 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000668"]], "a000670 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000670"]], "a000720 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000720"]], "a000796 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000796"]], "a000961 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000961"]], "a000984 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A000984"]], "a001006 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001006"]], "a001045 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001045"]], "a001055 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001055"]], "a001109 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001109"]], "a001110 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001110"]], "a001147 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001147"]], "a001157 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001157"]], "a001189 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001189"]], "a001221 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001221"]], "a001222 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001222"]], "a001227 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001227"]], "a001333 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001333"]], "a001358 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001358"]], "a001405 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001405"]], "a001477 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001477"]], "a001694 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001694"]], "a001836 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001836"]], "a001906 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001906"]], "a001909 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001909"]], "a001910 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001910"]], "a001969 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A001969"]], "a002110 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A002110"]], "a002113 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A002113"]], "a002275 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A002275"]], "a002378 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A002378"]], "a002620 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A002620"]], "a002808 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A002808"]], "a003418 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A003418"]], "a004086 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A004086"]], "a004526 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A004526"]], "a005100 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A005100"]], "a005101 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A005101"]], "a005117 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A005117"]], "a005408 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A005408"]], "a005843 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A005843"]], "a006318 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A006318"]], "a006530 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A006530"]], "a006882 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A006882"]], "a007318 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A007318"]], "a008275 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A008275"]], "a008277 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A008277"]], "a008683 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A008683"]], "a010060 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A010060"]], "a015521 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A015521"]], "a015523 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A015523"]], "a015530 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A015530"]], "a015531 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A015531"]], "a015551 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A015551"]], "a018252 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A018252"]], "a020639 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A020639"]], "a046660 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A046660"]], "a049310 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A049310"]], "a051959 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A051959"]], "a055790 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A055790"]], "a061084 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A061084"]], "a064553 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A064553"]], "a079922 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A079922"]], "a079923 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A079923"]], "a082411 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A082411"]], "a083103 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A083103"]], "a083104 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A083104"]], "a083105 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A083105"]], "a083216 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A083216"]], "a090010 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A090010"]], "a090012 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A090012"]], "a090013 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A090013"]], "a090014 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A090014"]], "a090015 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A090015"]], "a090016 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A090016"]], "a109814 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A109814"]], "a111774 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A111774"]], "a111775 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A111775"]], "a111787 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.A111787"]], "exponentialnumbers (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.ExponentialNumbers"]], "extremesofpermanentssequence (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.ExtremesOfPermanentsSequence"]], "extremesofpermanentssequence2 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.ExtremesOfPermanentsSequence2"]], "recurrencesequence (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.RecurrenceSequence"]], "recurrencesequence2 (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.RecurrenceSequence2"]], "sloane (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.Sloane"]], "sloanesequence (class in sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.SloaneSequence"]], "cf() (sage.combinat.sloane_functions.a000009 method)": [[311, "sage.combinat.sloane_functions.A000009.cf"]], "df() (sage.combinat.sloane_functions.a006882 method)": [[311, "sage.combinat.sloane_functions.A006882.df"]], "f() (sage.combinat.sloane_functions.a000120 method)": [[311, "sage.combinat.sloane_functions.A000120.f"]], "fib() (sage.combinat.sloane_functions.a000045 method)": [[311, "sage.combinat.sloane_functions.A000045.fib"]], "g() (sage.combinat.sloane_functions.a001110 method)": [[311, "sage.combinat.sloane_functions.A001110.g"]], "g() (sage.combinat.sloane_functions.a051959 method)": [[311, "sage.combinat.sloane_functions.A051959.g"]], "gen() (sage.combinat.sloane_functions.extremesofpermanentssequence method)": [[311, "sage.combinat.sloane_functions.ExtremesOfPermanentsSequence.gen"]], "gen() (sage.combinat.sloane_functions.extremesofpermanentssequence2 method)": [[311, "sage.combinat.sloane_functions.ExtremesOfPermanentsSequence2.gen"]], "is_number_of_the_third_kind() (sage.combinat.sloane_functions.a111774 method)": [[311, "sage.combinat.sloane_functions.A111774.is_number_of_the_third_kind"]], "is_powerful() (sage.combinat.sloane_functions.a001694 method)": [[311, "sage.combinat.sloane_functions.A001694.is_powerful"]], "keyword (sage.combinat.sloane_functions.a007318 attribute)": [[311, "sage.combinat.sloane_functions.A007318.keyword"]], "keyword (sage.combinat.sloane_functions.a008275 attribute)": [[311, "sage.combinat.sloane_functions.A008275.keyword"]], "keyword (sage.combinat.sloane_functions.a008277 attribute)": [[311, "sage.combinat.sloane_functions.A008277.keyword"]], "keyword (sage.combinat.sloane_functions.a049310 attribute)": [[311, "sage.combinat.sloane_functions.A049310.keyword"]], "keyword (sage.combinat.sloane_functions.a061084 attribute)": [[311, "sage.combinat.sloane_functions.A061084.keyword"]], "link (sage.combinat.sloane_functions.a000027 attribute)": [[311, "sage.combinat.sloane_functions.A000027.link"]], "link (sage.combinat.sloane_functions.a001110 attribute)": [[311, "sage.combinat.sloane_functions.A001110.link"]], "list() (sage.combinat.sloane_functions.a000009 method)": [[311, "sage.combinat.sloane_functions.A000009.list"]], "list() (sage.combinat.sloane_functions.a000045 method)": [[311, "sage.combinat.sloane_functions.A000045.list"]], "list() (sage.combinat.sloane_functions.a000073 method)": [[311, "sage.combinat.sloane_functions.A000073.list"]], "list() (sage.combinat.sloane_functions.a000213 method)": [[311, "sage.combinat.sloane_functions.A000213.list"]], "list() (sage.combinat.sloane_functions.a000796 method)": [[311, "sage.combinat.sloane_functions.A000796.list"]], "list() (sage.combinat.sloane_functions.a000961 method)": [[311, "sage.combinat.sloane_functions.A000961.list"]], "list() (sage.combinat.sloane_functions.a001358 method)": [[311, "sage.combinat.sloane_functions.A001358.list"]], "list() (sage.combinat.sloane_functions.a001694 method)": [[311, "sage.combinat.sloane_functions.A001694.list"]], "list() (sage.combinat.sloane_functions.a001836 method)": [[311, "sage.combinat.sloane_functions.A001836.list"]], "list() (sage.combinat.sloane_functions.a002113 method)": [[311, "sage.combinat.sloane_functions.A002113.list"]], "list() (sage.combinat.sloane_functions.a002808 method)": [[311, "sage.combinat.sloane_functions.A002808.list"]], "list() (sage.combinat.sloane_functions.a005100 method)": [[311, "sage.combinat.sloane_functions.A005100.list"]], "list() (sage.combinat.sloane_functions.a005101 method)": [[311, "sage.combinat.sloane_functions.A005101.list"]], "list() (sage.combinat.sloane_functions.a005117 method)": [[311, "sage.combinat.sloane_functions.A005117.list"]], "list() (sage.combinat.sloane_functions.a006882 method)": [[311, "sage.combinat.sloane_functions.A006882.list"]], "list() (sage.combinat.sloane_functions.a020639 method)": [[311, "sage.combinat.sloane_functions.A020639.list"]], "list() (sage.combinat.sloane_functions.a111774 method)": [[311, "sage.combinat.sloane_functions.A111774.list"]], "list() (sage.combinat.sloane_functions.extremesofpermanentssequence method)": [[311, "sage.combinat.sloane_functions.ExtremesOfPermanentsSequence.list"]], "list() (sage.combinat.sloane_functions.recurrencesequence method)": [[311, "sage.combinat.sloane_functions.RecurrenceSequence.list"]], "list() (sage.combinat.sloane_functions.recurrencesequence2 method)": [[311, "sage.combinat.sloane_functions.RecurrenceSequence2.list"]], "list() (sage.combinat.sloane_functions.sloanesequence method)": [[311, "sage.combinat.sloane_functions.SloaneSequence.list"]], "nwf() (sage.combinat.sloane_functions.a001055 method)": [[311, "sage.combinat.sloane_functions.A001055.nwf"]], "perm_mh() (in module sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.perm_mh"]], "pi() (sage.combinat.sloane_functions.a000796 method)": [[311, "sage.combinat.sloane_functions.A000796.pi"]], "recur_gen2() (in module sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.recur_gen2"]], "recur_gen2b() (in module sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.recur_gen2b"]], "recur_gen3() (in module sage.combinat.sloane_functions)": [[311, "sage.combinat.sloane_functions.recur_gen3"]], "s() (sage.combinat.sloane_functions.a008275 method)": [[311, "sage.combinat.sloane_functions.A008275.s"]], "s2() (sage.combinat.sloane_functions.a008277 method)": [[311, "sage.combinat.sloane_functions.A008277.s2"]], "sage.combinat.sloane_functions": [[311, "module-sage.combinat.sloane_functions"]], "sage.combinat.species.all": [[312, "module-sage.combinat.species.all"]], "characteristicspecies (class in sage.combinat.species.characteristic_species)": [[313, "sage.combinat.species.characteristic_species.CharacteristicSpecies"]], "characteristicspeciesstructure (class in sage.combinat.species.characteristic_species)": [[313, "sage.combinat.species.characteristic_species.CharacteristicSpeciesStructure"]], "characteristicspecies_class (in module sage.combinat.species.characteristic_species)": [[313, "sage.combinat.species.characteristic_species.CharacteristicSpecies_class"]], "emptysetspecies (class in sage.combinat.species.characteristic_species)": [[313, "sage.combinat.species.characteristic_species.EmptySetSpecies"]], "emptysetspecies_class (in module sage.combinat.species.characteristic_species)": [[313, "sage.combinat.species.characteristic_species.EmptySetSpecies_class"]], "singletonspecies (class in sage.combinat.species.characteristic_species)": [[313, "sage.combinat.species.characteristic_species.SingletonSpecies"]], "singletonspecies_class (in module sage.combinat.species.characteristic_species)": [[313, "sage.combinat.species.characteristic_species.SingletonSpecies_class"]], "automorphism_group() (sage.combinat.species.characteristic_species.characteristicspeciesstructure method)": [[313, "sage.combinat.species.characteristic_species.CharacteristicSpeciesStructure.automorphism_group"]], "canonical_label() (sage.combinat.species.characteristic_species.characteristicspeciesstructure method)": [[313, "sage.combinat.species.characteristic_species.CharacteristicSpeciesStructure.canonical_label"]], "sage.combinat.species.characteristic_species": [[313, "module-sage.combinat.species.characteristic_species"]], "transport() (sage.combinat.species.characteristic_species.characteristicspeciesstructure method)": [[313, "sage.combinat.species.characteristic_species.CharacteristicSpeciesStructure.transport"]], "compositionspecies (class in sage.combinat.species.composition_species)": [[314, "sage.combinat.species.composition_species.CompositionSpecies"]], "compositionspeciesstructure (class in sage.combinat.species.composition_species)": [[314, "sage.combinat.species.composition_species.CompositionSpeciesStructure"]], "compositionspecies_class (in module sage.combinat.species.composition_species)": [[314, "sage.combinat.species.composition_species.CompositionSpecies_class"]], "change_labels() (sage.combinat.species.composition_species.compositionspeciesstructure method)": [[314, "sage.combinat.species.composition_species.CompositionSpeciesStructure.change_labels"]], "sage.combinat.species.composition_species": [[314, "module-sage.combinat.species.composition_species"]], "transport() (sage.combinat.species.composition_species.compositionspeciesstructure method)": [[314, "sage.combinat.species.composition_species.CompositionSpeciesStructure.transport"]], "weight_ring() (sage.combinat.species.composition_species.compositionspecies method)": [[314, "sage.combinat.species.composition_species.CompositionSpecies.weight_ring"]], "cyclespecies (class in sage.combinat.species.cycle_species)": [[315, "sage.combinat.species.cycle_species.CycleSpecies"]], "cyclespeciesstructure (class in sage.combinat.species.cycle_species)": [[315, "sage.combinat.species.cycle_species.CycleSpeciesStructure"]], "cyclespecies_class (in module sage.combinat.species.cycle_species)": [[315, "sage.combinat.species.cycle_species.CycleSpecies_class"]], "automorphism_group() (sage.combinat.species.cycle_species.cyclespeciesstructure method)": [[315, "sage.combinat.species.cycle_species.CycleSpeciesStructure.automorphism_group"]], "canonical_label() (sage.combinat.species.cycle_species.cyclespeciesstructure method)": [[315, "sage.combinat.species.cycle_species.CycleSpeciesStructure.canonical_label"]], "permutation_group_element() (sage.combinat.species.cycle_species.cyclespeciesstructure method)": [[315, "sage.combinat.species.cycle_species.CycleSpeciesStructure.permutation_group_element"]], "sage.combinat.species.cycle_species": [[315, "module-sage.combinat.species.cycle_species"]], "transport() (sage.combinat.species.cycle_species.cyclespeciesstructure method)": [[315, "sage.combinat.species.cycle_species.CycleSpeciesStructure.transport"]], "emptyspecies (class in sage.combinat.species.empty_species)": [[316, "sage.combinat.species.empty_species.EmptySpecies"]], "emptyspecies_class (in module sage.combinat.species.empty_species)": [[316, "sage.combinat.species.empty_species.EmptySpecies_class"]], "sage.combinat.species.empty_species": [[316, "module-sage.combinat.species.empty_species"]], "functorialcompositionspecies (class in sage.combinat.species.functorial_composition_species)": [[317, "sage.combinat.species.functorial_composition_species.FunctorialCompositionSpecies"]], "functorialcompositionspecies_class (in module sage.combinat.species.functorial_composition_species)": [[317, "sage.combinat.species.functorial_composition_species.FunctorialCompositionSpecies_class"]], "functorialcompositionstructure (class in sage.combinat.species.functorial_composition_species)": [[317, "sage.combinat.species.functorial_composition_species.FunctorialCompositionStructure"]], "sage.combinat.species.functorial_composition_species": [[317, "module-sage.combinat.species.functorial_composition_species"]], "weight_ring() (sage.combinat.species.functorial_composition_species.functorialcompositionspecies method)": [[317, "sage.combinat.species.functorial_composition_species.FunctorialCompositionSpecies.weight_ring"]], "cycleindexseries (class in sage.combinat.species.generating_series)": [[318, "sage.combinat.species.generating_series.CycleIndexSeries"]], "cycleindexseriesring (class in sage.combinat.species.generating_series)": [[318, "sage.combinat.species.generating_series.CycleIndexSeriesRing"]], "element (sage.combinat.species.generating_series.cycleindexseriesring attribute)": [[318, "sage.combinat.species.generating_series.CycleIndexSeriesRing.Element"]], "element (sage.combinat.species.generating_series.exponentialgeneratingseriesring attribute)": [[318, "sage.combinat.species.generating_series.ExponentialGeneratingSeriesRing.Element"]], "element (sage.combinat.species.generating_series.ordinarygeneratingseriesring attribute)": [[318, "sage.combinat.species.generating_series.OrdinaryGeneratingSeriesRing.Element"]], "exponentialcycleindexseries() (in module sage.combinat.species.generating_series)": [[318, "sage.combinat.species.generating_series.ExponentialCycleIndexSeries"]], "exponentialgeneratingseries (class in sage.combinat.species.generating_series)": [[318, "sage.combinat.species.generating_series.ExponentialGeneratingSeries"]], "exponentialgeneratingseriesring (class in sage.combinat.species.generating_series)": [[318, "sage.combinat.species.generating_series.ExponentialGeneratingSeriesRing"]], "logarithmcycleindexseries() (in module sage.combinat.species.generating_series)": [[318, "sage.combinat.species.generating_series.LogarithmCycleIndexSeries"]], "ordinarygeneratingseries (class in sage.combinat.species.generating_series)": [[318, "sage.combinat.species.generating_series.OrdinaryGeneratingSeries"]], "ordinarygeneratingseriesring (class in sage.combinat.species.generating_series)": [[318, "sage.combinat.species.generating_series.OrdinaryGeneratingSeriesRing"]], "coefficient_cycle_type() (sage.combinat.species.generating_series.cycleindexseries method)": [[318, "sage.combinat.species.generating_series.CycleIndexSeries.coefficient_cycle_type"]], "count() (sage.combinat.species.generating_series.cycleindexseries method)": [[318, "sage.combinat.species.generating_series.CycleIndexSeries.count"]], "count() (sage.combinat.species.generating_series.exponentialgeneratingseries method)": [[318, "sage.combinat.species.generating_series.ExponentialGeneratingSeries.count"]], "count() (sage.combinat.species.generating_series.ordinarygeneratingseries method)": [[318, "sage.combinat.species.generating_series.OrdinaryGeneratingSeries.count"]], "counts() (sage.combinat.species.generating_series.exponentialgeneratingseries method)": [[318, "sage.combinat.species.generating_series.ExponentialGeneratingSeries.counts"]], "counts() (sage.combinat.species.generating_series.ordinarygeneratingseries method)": [[318, "sage.combinat.species.generating_series.OrdinaryGeneratingSeries.counts"]], "derivative() (sage.combinat.species.generating_series.cycleindexseries method)": [[318, "sage.combinat.species.generating_series.CycleIndexSeries.derivative"]], "exponential() (sage.combinat.species.generating_series.cycleindexseries method)": [[318, "sage.combinat.species.generating_series.CycleIndexSeries.exponential"]], "functorial_composition() (sage.combinat.species.generating_series.exponentialgeneratingseries method)": [[318, "sage.combinat.species.generating_series.ExponentialGeneratingSeries.functorial_composition"]], "generating_series() (sage.combinat.species.generating_series.cycleindexseries method)": [[318, "sage.combinat.species.generating_series.CycleIndexSeries.generating_series"]], "isotype_generating_series() (sage.combinat.species.generating_series.cycleindexseries method)": [[318, "sage.combinat.species.generating_series.CycleIndexSeries.isotype_generating_series"]], "logarithm() (sage.combinat.species.generating_series.cycleindexseries method)": [[318, "sage.combinat.species.generating_series.CycleIndexSeries.logarithm"]], "pointing() (sage.combinat.species.generating_series.cycleindexseries method)": [[318, "sage.combinat.species.generating_series.CycleIndexSeries.pointing"]], "sage.combinat.species.generating_series": [[318, "module-sage.combinat.species.generating_series"]], "binaryforestspecies() (in module sage.combinat.species.library)": [[319, "sage.combinat.species.library.BinaryForestSpecies"]], "binarytreespecies() (in module sage.combinat.species.library)": [[319, "sage.combinat.species.library.BinaryTreeSpecies"]], "simplegraphspecies() (in module sage.combinat.species.library)": [[319, "sage.combinat.species.library.SimpleGraphSpecies"]], "sage.combinat.species.library": [[319, "module-sage.combinat.species.library"]], "linearorderspecies (class in sage.combinat.species.linear_order_species)": [[320, "sage.combinat.species.linear_order_species.LinearOrderSpecies"]], "linearorderspeciesstructure (class in sage.combinat.species.linear_order_species)": [[320, "sage.combinat.species.linear_order_species.LinearOrderSpeciesStructure"]], "linearorderspecies_class (in module sage.combinat.species.linear_order_species)": [[320, "sage.combinat.species.linear_order_species.LinearOrderSpecies_class"]], "automorphism_group() (sage.combinat.species.linear_order_species.linearorderspeciesstructure method)": [[320, "sage.combinat.species.linear_order_species.LinearOrderSpeciesStructure.automorphism_group"]], "canonical_label() (sage.combinat.species.linear_order_species.linearorderspeciesstructure method)": [[320, "sage.combinat.species.linear_order_species.LinearOrderSpeciesStructure.canonical_label"]], "sage.combinat.species.linear_order_species": [[320, "module-sage.combinat.species.linear_order_species"]], "transport() (sage.combinat.species.linear_order_species.linearorderspeciesstructure method)": [[320, "sage.combinat.species.linear_order_species.LinearOrderSpeciesStructure.transport"]], "accept_size() (in module sage.combinat.species.misc)": [[321, "sage.combinat.species.misc.accept_size"]], "change_support() (in module sage.combinat.species.misc)": [[321, "sage.combinat.species.misc.change_support"]], "sage.combinat.species.misc": [[321, "module-sage.combinat.species.misc"]], "partitionspecies (class in sage.combinat.species.partition_species)": [[322, "sage.combinat.species.partition_species.PartitionSpecies"]], "partitionspeciesstructure (class in sage.combinat.species.partition_species)": [[322, "sage.combinat.species.partition_species.PartitionSpeciesStructure"]], "partitionspecies_class (in module sage.combinat.species.partition_species)": [[322, "sage.combinat.species.partition_species.PartitionSpecies_class"]], "automorphism_group() (sage.combinat.species.partition_species.partitionspeciesstructure method)": [[322, "sage.combinat.species.partition_species.PartitionSpeciesStructure.automorphism_group"]], "canonical_label() (sage.combinat.species.partition_species.partitionspeciesstructure method)": [[322, "sage.combinat.species.partition_species.PartitionSpeciesStructure.canonical_label"]], "change_labels() (sage.combinat.species.partition_species.partitionspeciesstructure method)": [[322, "sage.combinat.species.partition_species.PartitionSpeciesStructure.change_labels"]], "sage.combinat.species.partition_species": [[322, "module-sage.combinat.species.partition_species"]], "transport() (sage.combinat.species.partition_species.partitionspeciesstructure method)": [[322, "sage.combinat.species.partition_species.PartitionSpeciesStructure.transport"]], "permutationspecies (class in sage.combinat.species.permutation_species)": [[323, "sage.combinat.species.permutation_species.PermutationSpecies"]], "permutationspeciesstructure (class in sage.combinat.species.permutation_species)": [[323, "sage.combinat.species.permutation_species.PermutationSpeciesStructure"]], "permutationspecies_class (in module sage.combinat.species.permutation_species)": [[323, "sage.combinat.species.permutation_species.PermutationSpecies_class"]], "automorphism_group() (sage.combinat.species.permutation_species.permutationspeciesstructure method)": [[323, "sage.combinat.species.permutation_species.PermutationSpeciesStructure.automorphism_group"]], "canonical_label() (sage.combinat.species.permutation_species.permutationspeciesstructure method)": [[323, "sage.combinat.species.permutation_species.PermutationSpeciesStructure.canonical_label"]], "permutation_group_element() (sage.combinat.species.permutation_species.permutationspeciesstructure method)": [[323, "sage.combinat.species.permutation_species.PermutationSpeciesStructure.permutation_group_element"]], "sage.combinat.species.permutation_species": [[323, "module-sage.combinat.species.permutation_species"]], "transport() (sage.combinat.species.permutation_species.permutationspeciesstructure method)": [[323, "sage.combinat.species.permutation_species.PermutationSpeciesStructure.transport"]], "productspecies (class in sage.combinat.species.product_species)": [[324, "sage.combinat.species.product_species.ProductSpecies"]], "productspeciesstructure (class in sage.combinat.species.product_species)": [[324, "sage.combinat.species.product_species.ProductSpeciesStructure"]], "productspecies_class (in module sage.combinat.species.product_species)": [[324, "sage.combinat.species.product_species.ProductSpecies_class"]], "automorphism_group() (sage.combinat.species.product_species.productspeciesstructure method)": [[324, "sage.combinat.species.product_species.ProductSpeciesStructure.automorphism_group"]], "canonical_label() (sage.combinat.species.product_species.productspeciesstructure method)": [[324, "sage.combinat.species.product_species.ProductSpeciesStructure.canonical_label"]], "change_labels() (sage.combinat.species.product_species.productspeciesstructure method)": [[324, "sage.combinat.species.product_species.ProductSpeciesStructure.change_labels"]], "left_factor() (sage.combinat.species.product_species.productspecies method)": [[324, "sage.combinat.species.product_species.ProductSpecies.left_factor"]], "right_factor() (sage.combinat.species.product_species.productspecies method)": [[324, "sage.combinat.species.product_species.ProductSpecies.right_factor"]], "sage.combinat.species.product_species": [[324, "module-sage.combinat.species.product_species"]], "transport() (sage.combinat.species.product_species.productspeciesstructure method)": [[324, "sage.combinat.species.product_species.ProductSpeciesStructure.transport"]], "weight_ring() (sage.combinat.species.product_species.productspecies method)": [[324, "sage.combinat.species.product_species.ProductSpecies.weight_ring"]], "combinatorialspecies (class in sage.combinat.species.recursive_species)": [[325, "sage.combinat.species.recursive_species.CombinatorialSpecies"]], "combinatorialspeciesstructure (class in sage.combinat.species.recursive_species)": [[325, "sage.combinat.species.recursive_species.CombinatorialSpeciesStructure"]], "define() (sage.combinat.species.recursive_species.combinatorialspecies method)": [[325, "sage.combinat.species.recursive_species.CombinatorialSpecies.define"]], "sage.combinat.species.recursive_species": [[325, "module-sage.combinat.species.recursive_species"]], "weight_ring() (sage.combinat.species.recursive_species.combinatorialspecies method)": [[325, "sage.combinat.species.recursive_species.CombinatorialSpecies.weight_ring"]], "setspecies (class in sage.combinat.species.set_species)": [[326, "sage.combinat.species.set_species.SetSpecies"]], "setspeciesstructure (class in sage.combinat.species.set_species)": [[326, "sage.combinat.species.set_species.SetSpeciesStructure"]], "setspecies_class (in module sage.combinat.species.set_species)": [[326, "sage.combinat.species.set_species.SetSpecies_class"]], "automorphism_group() (sage.combinat.species.set_species.setspeciesstructure method)": [[326, "sage.combinat.species.set_species.SetSpeciesStructure.automorphism_group"]], "canonical_label() (sage.combinat.species.set_species.setspeciesstructure method)": [[326, "sage.combinat.species.set_species.SetSpeciesStructure.canonical_label"]], "sage.combinat.species.set_species": [[326, "module-sage.combinat.species.set_species"]], "transport() (sage.combinat.species.set_species.setspeciesstructure method)": [[326, "sage.combinat.species.set_species.SetSpeciesStructure.transport"]], "genericcombinatorialspecies (class in sage.combinat.species.species)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies"]], "algebraic_equation_system() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.algebraic_equation_system"]], "composition() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.composition"]], "cycle_index_series() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.cycle_index_series"]], "digraph() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.digraph"]], "functorial_composition() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.functorial_composition"]], "generating_series() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.generating_series"]], "is_weighted() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.is_weighted"]], "isotype_generating_series() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.isotype_generating_series"]], "isotypes() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.isotypes"]], "product() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.product"]], "restricted() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.restricted"]], "sage.combinat.species.species": [[327, "module-sage.combinat.species.species"]], "structures() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.structures"]], "sum() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.sum"]], "weight_ring() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.weight_ring"]], "weighted() (sage.combinat.species.species.genericcombinatorialspecies method)": [[327, "sage.combinat.species.species.GenericCombinatorialSpecies.weighted"]], "genericspeciesstructure (class in sage.combinat.species.structure)": [[328, "sage.combinat.species.structure.GenericSpeciesStructure"]], "isotypeswrapper (class in sage.combinat.species.structure)": [[328, "sage.combinat.species.structure.IsotypesWrapper"]], "simpleisotypeswrapper (class in sage.combinat.species.structure)": [[328, "sage.combinat.species.structure.SimpleIsotypesWrapper"]], "simplestructureswrapper (class in sage.combinat.species.structure)": [[328, "sage.combinat.species.structure.SimpleStructuresWrapper"]], "speciesstructure (in module sage.combinat.species.structure)": [[328, "sage.combinat.species.structure.SpeciesStructure"]], "speciesstructurewrapper (class in sage.combinat.species.structure)": [[328, "sage.combinat.species.structure.SpeciesStructureWrapper"]], "specieswrapper (class in sage.combinat.species.structure)": [[328, "sage.combinat.species.structure.SpeciesWrapper"]], "structureswrapper (class in sage.combinat.species.structure)": [[328, "sage.combinat.species.structure.StructuresWrapper"]], "canonical_label() (sage.combinat.species.structure.speciesstructurewrapper method)": [[328, "sage.combinat.species.structure.SpeciesStructureWrapper.canonical_label"]], "cardinality() (sage.combinat.species.structure.specieswrapper method)": [[328, "sage.combinat.species.structure.SpeciesWrapper.cardinality"]], "change_labels() (sage.combinat.species.structure.genericspeciesstructure method)": [[328, "sage.combinat.species.structure.GenericSpeciesStructure.change_labels"]], "change_labels() (sage.combinat.species.structure.speciesstructurewrapper method)": [[328, "sage.combinat.species.structure.SpeciesStructureWrapper.change_labels"]], "is_isomorphic() (sage.combinat.species.structure.genericspeciesstructure method)": [[328, "sage.combinat.species.structure.GenericSpeciesStructure.is_isomorphic"]], "labels() (sage.combinat.species.structure.genericspeciesstructure method)": [[328, "sage.combinat.species.structure.GenericSpeciesStructure.labels"]], "labels() (sage.combinat.species.structure.specieswrapper method)": [[328, "sage.combinat.species.structure.SpeciesWrapper.labels"]], "parent() (sage.combinat.species.structure.genericspeciesstructure method)": [[328, "sage.combinat.species.structure.GenericSpeciesStructure.parent"]], "sage.combinat.species.structure": [[328, "module-sage.combinat.species.structure"]], "transport() (sage.combinat.species.structure.speciesstructurewrapper method)": [[328, "sage.combinat.species.structure.SpeciesStructureWrapper.transport"]], "subsetspecies (class in sage.combinat.species.subset_species)": [[329, "sage.combinat.species.subset_species.SubsetSpecies"]], "subsetspeciesstructure (class in sage.combinat.species.subset_species)": [[329, "sage.combinat.species.subset_species.SubsetSpeciesStructure"]], "subsetspecies_class (in module sage.combinat.species.subset_species)": [[329, "sage.combinat.species.subset_species.SubsetSpecies_class"]], "automorphism_group() (sage.combinat.species.subset_species.subsetspeciesstructure method)": [[329, "sage.combinat.species.subset_species.SubsetSpeciesStructure.automorphism_group"]], "canonical_label() (sage.combinat.species.subset_species.subsetspeciesstructure method)": [[329, "sage.combinat.species.subset_species.SubsetSpeciesStructure.canonical_label"]], "complement() (sage.combinat.species.subset_species.subsetspeciesstructure method)": [[329, "sage.combinat.species.subset_species.SubsetSpeciesStructure.complement"]], "label_subset() (sage.combinat.species.subset_species.subsetspeciesstructure method)": [[329, "sage.combinat.species.subset_species.SubsetSpeciesStructure.label_subset"]], "sage.combinat.species.subset_species": [[329, "module-sage.combinat.species.subset_species"]], "transport() (sage.combinat.species.subset_species.subsetspeciesstructure method)": [[329, "sage.combinat.species.subset_species.SubsetSpeciesStructure.transport"]], "sumspecies (class in sage.combinat.species.sum_species)": [[330, "sage.combinat.species.sum_species.SumSpecies"]], "sumspeciesstructure (class in sage.combinat.species.sum_species)": [[330, "sage.combinat.species.sum_species.SumSpeciesStructure"]], "sumspecies_class (in module sage.combinat.species.sum_species)": [[330, "sage.combinat.species.sum_species.SumSpecies_class"]], "left_summand() (sage.combinat.species.sum_species.sumspecies method)": [[330, "sage.combinat.species.sum_species.SumSpecies.left_summand"]], "right_summand() (sage.combinat.species.sum_species.sumspecies method)": [[330, "sage.combinat.species.sum_species.SumSpecies.right_summand"]], "sage.combinat.species.sum_species": [[330, "module-sage.combinat.species.sum_species"]], "weight_ring() (sage.combinat.species.sum_species.sumspecies method)": [[330, "sage.combinat.species.sum_species.SumSpecies.weight_ring"]], "submultiset_s (class in sage.combinat.subset)": [[331, "sage.combinat.subset.SubMultiset_s"]], "submultiset_sk (class in sage.combinat.subset)": [[331, "sage.combinat.subset.SubMultiset_sk"]], "subsets() (in module sage.combinat.subset)": [[331, "sage.combinat.subset.Subsets"]], "subsetssorted (class in sage.combinat.subset)": [[331, "sage.combinat.subset.SubsetsSorted"]], "subsets_s (class in sage.combinat.subset)": [[331, "sage.combinat.subset.Subsets_s"]], "subsets_sk (class in sage.combinat.subset)": [[331, "sage.combinat.subset.Subsets_sk"]], "an_element() (sage.combinat.subset.subsets_sk method)": [[331, "sage.combinat.subset.Subsets_sk.an_element"]], "cardinality() (sage.combinat.subset.submultiset_s method)": [[331, "sage.combinat.subset.SubMultiset_s.cardinality"]], "cardinality() (sage.combinat.subset.submultiset_sk method)": [[331, "sage.combinat.subset.SubMultiset_sk.cardinality"]], "cardinality() (sage.combinat.subset.subsets_s method)": [[331, "sage.combinat.subset.Subsets_s.cardinality"]], "cardinality() (sage.combinat.subset.subsets_sk method)": [[331, "sage.combinat.subset.Subsets_sk.cardinality"]], "dict_to_list() (in module sage.combinat.subset)": [[331, "sage.combinat.subset.dict_to_list"]], "element_class (sage.combinat.subset.submultiset_s attribute)": [[331, "sage.combinat.subset.SubMultiset_s.element_class"]], "element_class (sage.combinat.subset.subsetssorted attribute)": [[331, "sage.combinat.subset.SubsetsSorted.element_class"]], "element_class (sage.combinat.subset.subsets_s attribute)": [[331, "sage.combinat.subset.Subsets_s.element_class"]], "first() (sage.combinat.subset.subsetssorted method)": [[331, "sage.combinat.subset.SubsetsSorted.first"]], "first() (sage.combinat.subset.subsets_s method)": [[331, "sage.combinat.subset.Subsets_s.first"]], "first() (sage.combinat.subset.subsets_sk method)": [[331, "sage.combinat.subset.Subsets_sk.first"]], "generating_serie() (sage.combinat.subset.submultiset_s method)": [[331, "sage.combinat.subset.SubMultiset_s.generating_serie"]], "generating_serie() (sage.combinat.subset.submultiset_sk method)": [[331, "sage.combinat.subset.SubMultiset_sk.generating_serie"]], "last() (sage.combinat.subset.subsetssorted method)": [[331, "sage.combinat.subset.SubsetsSorted.last"]], "last() (sage.combinat.subset.subsets_s method)": [[331, "sage.combinat.subset.Subsets_s.last"]], "last() (sage.combinat.subset.subsets_sk method)": [[331, "sage.combinat.subset.Subsets_sk.last"]], "lattice() (sage.combinat.subset.subsets_s method)": [[331, "sage.combinat.subset.Subsets_s.lattice"]], "list_to_dict() (in module sage.combinat.subset)": [[331, "sage.combinat.subset.list_to_dict"]], "random_element() (sage.combinat.subset.submultiset_s method)": [[331, "sage.combinat.subset.SubMultiset_s.random_element"]], "random_element() (sage.combinat.subset.submultiset_sk method)": [[331, "sage.combinat.subset.SubMultiset_sk.random_element"]], "random_element() (sage.combinat.subset.subsetssorted method)": [[331, "sage.combinat.subset.SubsetsSorted.random_element"]], "random_element() (sage.combinat.subset.subsets_s method)": [[331, "sage.combinat.subset.Subsets_s.random_element"]], "random_element() (sage.combinat.subset.subsets_sk method)": [[331, "sage.combinat.subset.Subsets_sk.random_element"]], "rank() (sage.combinat.subset.subsets_s method)": [[331, "sage.combinat.subset.Subsets_s.rank"]], "rank() (sage.combinat.subset.subsets_sk method)": [[331, "sage.combinat.subset.Subsets_sk.rank"]], "sage.combinat.subset": [[331, "module-sage.combinat.subset"]], "underlying_set() (sage.combinat.subset.subsets_s method)": [[331, "sage.combinat.subset.Subsets_s.underlying_set"]], "unrank() (sage.combinat.subset.subsetssorted method)": [[331, "sage.combinat.subset.SubsetsSorted.unrank"]], "unrank() (sage.combinat.subset.subsets_s method)": [[331, "sage.combinat.subset.Subsets_s.unrank"]], "unrank() (sage.combinat.subset.subsets_sk method)": [[331, "sage.combinat.subset.Subsets_sk.unrank"]], "sage.combinat.subsets_hereditary": [[332, "module-sage.combinat.subsets_hereditary"]], "subsets_with_hereditary_property() (in module sage.combinat.subsets_hereditary)": [[332, "sage.combinat.subsets_hereditary.subsets_with_hereditary_property"]], "pairwisecompatiblesubsets (class in sage.combinat.subsets_pairwise)": [[333, "sage.combinat.subsets_pairwise.PairwiseCompatibleSubsets"]], "children() (sage.combinat.subsets_pairwise.pairwisecompatiblesubsets method)": [[333, "sage.combinat.subsets_pairwise.PairwiseCompatibleSubsets.children"]], "post_process() (sage.combinat.subsets_pairwise.pairwisecompatiblesubsets method)": [[333, "sage.combinat.subsets_pairwise.PairwiseCompatibleSubsets.post_process"]], "sage.combinat.subsets_pairwise": [[333, "module-sage.combinat.subsets_pairwise"]], "subwords() (in module sage.combinat.subword)": [[334, "sage.combinat.subword.Subwords"]], "subwords_w (class in sage.combinat.subword)": [[334, "sage.combinat.subword.Subwords_w"]], "subwords_wk (class in sage.combinat.subword)": [[334, "sage.combinat.subword.Subwords_wk"]], "cardinality() (sage.combinat.subword.subwords_w method)": [[334, "sage.combinat.subword.Subwords_w.cardinality"]], "cardinality() (sage.combinat.subword.subwords_wk method)": [[334, "sage.combinat.subword.Subwords_wk.cardinality"]], "first() (sage.combinat.subword.subwords_w method)": [[334, "sage.combinat.subword.Subwords_w.first"]], "first() (sage.combinat.subword.subwords_wk method)": [[334, "sage.combinat.subword.Subwords_wk.first"]], "last() (sage.combinat.subword.subwords_w method)": [[334, "sage.combinat.subword.Subwords_w.last"]], "last() (sage.combinat.subword.subwords_wk method)": [[334, "sage.combinat.subword.Subwords_wk.last"]], "random_element() (sage.combinat.subword.subwords_w method)": [[334, "sage.combinat.subword.Subwords_w.random_element"]], "random_element() (sage.combinat.subword.subwords_wk method)": [[334, "sage.combinat.subword.Subwords_wk.random_element"]], "sage.combinat.subword": [[334, "module-sage.combinat.subword"]], "smallest_positions() (in module sage.combinat.subword)": [[334, "sage.combinat.subword.smallest_positions"]], "element (sage.combinat.subword_complex.subwordcomplex attribute)": [[335, "sage.combinat.subword_complex.SubwordComplex.Element"]], "subwordcomplex (class in sage.combinat.subword_complex)": [[335, "sage.combinat.subword_complex.SubwordComplex"]], "subwordcomplexfacet (class in sage.combinat.subword_complex)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet"]], "barycenter() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.barycenter"]], "brick_fan() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.brick_fan"]], "brick_polytope() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.brick_polytope"]], "brick_vector() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.brick_vector"]], "brick_vectors() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.brick_vectors"]], "cartan_type() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.cartan_type"]], "cover_relations() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.cover_relations"]], "dimension() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.dimension"]], "extended_root_configuration() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.extended_root_configuration"]], "extended_weight_configuration() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.extended_weight_configuration"]], "facets() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.facets"]], "flip() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.flip"]], "greedy_facet() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.greedy_facet"]], "group() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.group"]], "increasing_flip_graph() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.increasing_flip_graph"]], "increasing_flip_poset() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.increasing_flip_poset"]], "interval() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.interval"]], "is_ball() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.is_ball"]], "is_double_root_free() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.is_double_root_free"]], "is_pure() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.is_pure"]], "is_root_independent() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.is_root_independent"]], "is_sphere() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.is_sphere"]], "is_vertex() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.is_vertex"]], "kappa_preimage() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.kappa_preimage"]], "kappa_preimages() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.kappa_preimages"]], "minkowski_summand() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.minkowski_summand"]], "pi() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.pi"]], "plot() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.plot"]], "root_cone() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.root_cone"]], "root_configuration() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.root_configuration"]], "sage.combinat.subword_complex": [[335, "module-sage.combinat.subword_complex"]], "show() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.show"]], "upper_root_configuration() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.upper_root_configuration"]], "weight_cone() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.weight_cone"]], "weight_configuration() (sage.combinat.subword_complex.subwordcomplexfacet method)": [[335, "sage.combinat.subword_complex.SubwordComplexFacet.weight_configuration"]], "word() (sage.combinat.subword_complex.subwordcomplex method)": [[335, "sage.combinat.subword_complex.SubwordComplex.word"]], "element (sage.combinat.super_tableau.semistandardsupertableaux attribute)": [[336, "sage.combinat.super_tableau.SemistandardSuperTableaux.Element"]], "element (sage.combinat.super_tableau.standardsupertableaux attribute)": [[336, "sage.combinat.super_tableau.StandardSuperTableaux.Element"]], "semistandardsupertableau (class in sage.combinat.super_tableau)": [[336, "sage.combinat.super_tableau.SemistandardSuperTableau"]], "semistandardsupertableaux (class in sage.combinat.super_tableau)": [[336, "sage.combinat.super_tableau.SemistandardSuperTableaux"]], "semistandardsupertableaux_all (class in sage.combinat.super_tableau)": [[336, "sage.combinat.super_tableau.SemistandardSuperTableaux_all"]], "standardsupertableau (class in sage.combinat.super_tableau)": [[336, "sage.combinat.super_tableau.StandardSuperTableau"]], "standardsupertableaux (class in sage.combinat.super_tableau)": [[336, "sage.combinat.super_tableau.StandardSuperTableaux"]], "standardsupertableaux_all (class in sage.combinat.super_tableau)": [[336, "sage.combinat.super_tableau.StandardSuperTableaux_all"]], "standardsupertableaux_shape (class in sage.combinat.super_tableau)": [[336, "sage.combinat.super_tableau.StandardSuperTableaux_shape"]], "standardsupertableaux_size (class in sage.combinat.super_tableau)": [[336, "sage.combinat.super_tableau.StandardSuperTableaux_size"]], "cardinality() (sage.combinat.super_tableau.standardsupertableaux_shape method)": [[336, "sage.combinat.super_tableau.StandardSuperTableaux_shape.cardinality"]], "cardinality() (sage.combinat.super_tableau.standardsupertableaux_size method)": [[336, "sage.combinat.super_tableau.StandardSuperTableaux_size.cardinality"]], "check() (sage.combinat.super_tableau.semistandardsupertableau method)": [[336, "sage.combinat.super_tableau.SemistandardSuperTableau.check"]], "check() (sage.combinat.super_tableau.standardsupertableau method)": [[336, "sage.combinat.super_tableau.StandardSuperTableau.check"]], "is_standard() (sage.combinat.super_tableau.standardsupertableau method)": [[336, "sage.combinat.super_tableau.StandardSuperTableau.is_standard"]], "sage.combinat.super_tableau": [[336, "module-sage.combinat.super_tableau"]], "element (sage.combinat.superpartition.superpartitions attribute)": [[337, "sage.combinat.superpartition.SuperPartitions.Element"]], "superpartition (class in sage.combinat.superpartition)": [[337, "sage.combinat.superpartition.SuperPartition"]], "superpartitions (class in sage.combinat.superpartition)": [[337, "sage.combinat.superpartition.SuperPartitions"]], "superpartitions_all (class in sage.combinat.superpartition)": [[337, "sage.combinat.superpartition.SuperPartitions_all"]], "superpartitions_n (class in sage.combinat.superpartition)": [[337, "sage.combinat.superpartition.SuperPartitions_n"]], "superpartitions_n_m (class in sage.combinat.superpartition)": [[337, "sage.combinat.superpartition.SuperPartitions_n_m"]], "a_part() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.a_part"]], "add_horizontal_border_strip_star() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.add_horizontal_border_strip_star"]], "add_horizontal_border_strip_star_bar() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.add_horizontal_border_strip_star_bar"]], "antisymmetric_part() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.antisymmetric_part"]], "bi_degree() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.bi_degree"]], "bosonic_degree() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.bosonic_degree"]], "bosonic_length() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.bosonic_length"]], "check() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.check"]], "conjugate() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.conjugate"]], "degree() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.degree"]], "dominates() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.dominates"]], "fermionic_degree() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.fermionic_degree"]], "fermionic_sector() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.fermionic_sector"]], "from_circled_diagram() (sage.combinat.superpartition.superpartition static method)": [[337, "sage.combinat.superpartition.SuperPartition.from_circled_diagram"]], "length() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.length"]], "options (sage.combinat.superpartition.superpartitions attribute)": [[337, "sage.combinat.superpartition.SuperPartitions.options"]], "s_part() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.s_part"]], "sage.combinat.superpartition": [[337, "module-sage.combinat.superpartition"]], "shape_circled_diagram() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.shape_circled_diagram"]], "sign() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.sign"]], "symmetric_part() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.symmetric_part"]], "to_circled_diagram() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.to_circled_diagram"]], "to_composition() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.to_composition"]], "to_list() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.to_list"]], "to_partition() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.to_partition"]], "zee() (sage.combinat.superpartition.superpartition method)": [[337, "sage.combinat.superpartition.SuperPartition.zee"]], "heckealgebrasymmetricgroupt() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroupT"]], "heckealgebrasymmetricgroup_generic (class in sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_generic"]], "heckealgebrasymmetricgroup_t (class in sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_t"]], "symmetricgroupalgebra() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra"]], "symmetricgroupalgebra_n (class in sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n"]], "a() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.a"]], "algebra_generators() (sage.combinat.symmetric_group_algebra.heckealgebrasymmetricgroup_t method)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_t.algebra_generators"]], "algebra_generators() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.algebra_generators"]], "antipode() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.antipode"]], "b() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.b"]], "binary_unshuffle_sum() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.binary_unshuffle_sum"]], "canonical_embedding() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.canonical_embedding"]], "cell_module() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.cell_module"]], "cell_module_indices() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.cell_module_indices"]], "cell_poset() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.cell_poset"]], "central_orthogonal_idempotent() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.central_orthogonal_idempotent"]], "central_orthogonal_idempotents() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.central_orthogonal_idempotents"]], "dft() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.dft"]], "e() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.e"]], "e_hat() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.e_hat"]], "e_ik() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.e_ik"]], "epsilon() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.epsilon"]], "epsilon_ik() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.epsilon_ik"]], "epsilon_ik() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.epsilon_ik"]], "jucys_murphy() (sage.combinat.symmetric_group_algebra.heckealgebrasymmetricgroup_t method)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_t.jucys_murphy"]], "jucys_murphy() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.jucys_murphy"]], "kappa() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.kappa"]], "left_action_product() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.left_action_product"]], "monomial_from_smaller_permutation() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.monomial_from_smaller_permutation"]], "one_basis() (sage.combinat.symmetric_group_algebra.heckealgebrasymmetricgroup_generic method)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_generic.one_basis"]], "pi_ik() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.pi_ik"]], "product_on_basis() (sage.combinat.symmetric_group_algebra.heckealgebrasymmetricgroup_t method)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_t.product_on_basis"]], "q() (sage.combinat.symmetric_group_algebra.heckealgebrasymmetricgroup_generic method)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_generic.q"]], "retract_direct_product() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.retract_direct_product"]], "retract_okounkov_vershik() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.retract_okounkov_vershik"]], "retract_plain() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.retract_plain"]], "right_action_product() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.right_action_product"]], "rsw_shuffling_element() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.rsw_shuffling_element"]], "sage.combinat.symmetric_group_algebra": [[338, "module-sage.combinat.symmetric_group_algebra"]], "semi_rsw_element() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.semi_rsw_element"]], "seminormal_basis() (sage.combinat.symmetric_group_algebra.symmetricgroupalgebra_n method)": [[338, "sage.combinat.symmetric_group_algebra.SymmetricGroupAlgebra_n.seminormal_basis"]], "seminormal_test() (in module sage.combinat.symmetric_group_algebra)": [[338, "sage.combinat.symmetric_group_algebra.seminormal_test"]], "t() (sage.combinat.symmetric_group_algebra.heckealgebrasymmetricgroup_t method)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_t.t"]], "t_action() (sage.combinat.symmetric_group_algebra.heckealgebrasymmetricgroup_t method)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_t.t_action"]], "t_action_on_basis() (sage.combinat.symmetric_group_algebra.heckealgebrasymmetricgroup_t method)": [[338, "sage.combinat.symmetric_group_algebra.HeckeAlgebraSymmetricGroup_t.t_action_on_basis"]], "element (sage.combinat.symmetric_group_representations.spechtrepresentations attribute)": [[339, "sage.combinat.symmetric_group_representations.SpechtRepresentations.Element"]], "element (sage.combinat.symmetric_group_representations.youngrepresentations_orthogonal attribute)": [[339, "sage.combinat.symmetric_group_representations.YoungRepresentations_Orthogonal.Element"]], "element (sage.combinat.symmetric_group_representations.youngrepresentations_seminormal attribute)": [[339, "sage.combinat.symmetric_group_representations.YoungRepresentations_Seminormal.Element"]], "spechtrepresentation (class in sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.SpechtRepresentation"]], "spechtrepresentations (class in sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.SpechtRepresentations"]], "symmetricgrouprepresentation() (in module sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.SymmetricGroupRepresentation"]], "symmetricgrouprepresentation_generic_class (class in sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.SymmetricGroupRepresentation_generic_class"]], "symmetricgrouprepresentations() (in module sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.SymmetricGroupRepresentations"]], "symmetricgrouprepresentations_class (class in sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.SymmetricGroupRepresentations_class"]], "youngrepresentation_orthogonal (class in sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.YoungRepresentation_Orthogonal"]], "youngrepresentation_seminormal (class in sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.YoungRepresentation_Seminormal"]], "youngrepresentation_generic (class in sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.YoungRepresentation_generic"]], "youngrepresentations_orthogonal (class in sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.YoungRepresentations_Orthogonal"]], "youngrepresentations_seminormal (class in sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.YoungRepresentations_Seminormal"]], "cardinality() (sage.combinat.symmetric_group_representations.symmetricgrouprepresentations_class method)": [[339, "sage.combinat.symmetric_group_representations.SymmetricGroupRepresentations_class.cardinality"]], "partition_to_vector_of_contents() (in module sage.combinat.symmetric_group_representations)": [[339, "sage.combinat.symmetric_group_representations.partition_to_vector_of_contents"]], "representation_matrix() (sage.combinat.symmetric_group_representations.spechtrepresentation method)": [[339, "sage.combinat.symmetric_group_representations.SpechtRepresentation.representation_matrix"]], "representation_matrix() (sage.combinat.symmetric_group_representations.youngrepresentation_generic method)": [[339, "sage.combinat.symmetric_group_representations.YoungRepresentation_generic.representation_matrix"]], "representation_matrix_for_simple_transposition() (sage.combinat.symmetric_group_representations.youngrepresentation_generic method)": [[339, "sage.combinat.symmetric_group_representations.YoungRepresentation_generic.representation_matrix_for_simple_transposition"]], "sage.combinat.symmetric_group_representations": [[339, "module-sage.combinat.symmetric_group_representations"]], "scalar_product() (sage.combinat.symmetric_group_representations.spechtrepresentation method)": [[339, "sage.combinat.symmetric_group_representations.SpechtRepresentation.scalar_product"]], "scalar_product_matrix() (sage.combinat.symmetric_group_representations.spechtrepresentation method)": [[339, "sage.combinat.symmetric_group_representations.SpechtRepresentation.scalar_product_matrix"]], "to_character() (sage.combinat.symmetric_group_representations.symmetricgrouprepresentation_generic_class method)": [[339, "sage.combinat.symmetric_group_representations.SymmetricGroupRepresentation_generic_class.to_character"]], "verify_representation() (sage.combinat.symmetric_group_representations.symmetricgrouprepresentation_generic_class method)": [[339, "sage.combinat.symmetric_group_representations.SymmetricGroupRepresentation_generic_class.verify_representation"]], "t_sequences_construction_from_base_sequences() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.T_sequences_construction_from_base_sequences"]], "t_sequences_construction_from_turyn_sequences() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.T_sequences_construction_from_turyn_sequences"]], "t_sequences_smallcases() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.T_sequences_smallcases"]], "base_sequences_construction() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.base_sequences_construction"]], "base_sequences_smallcases() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.base_sequences_smallcases"]], "is_t_sequences_set() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.is_T_sequences_set"]], "is_base_sequences_tuple() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.is_base_sequences_tuple"]], "is_skew() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.is_skew"]], "is_symmetric() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.is_symmetric"]], "sage.combinat.t_sequences": [[340, "module-sage.combinat.t_sequences"]], "turyn_sequences_smallcases() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.turyn_sequences_smallcases"]], "turyn_type_sequences_smallcases() (in module sage.combinat.t_sequences)": [[340, "sage.combinat.t_sequences.turyn_type_sequences_smallcases"]], "element (sage.combinat.tableau.increasingtableaux attribute)": [[341, "sage.combinat.tableau.IncreasingTableaux.Element"]], "element (sage.combinat.tableau.rowstandardtableaux attribute)": [[341, "sage.combinat.tableau.RowStandardTableaux.Element"]], "element (sage.combinat.tableau.semistandardtableaux attribute)": [[341, "sage.combinat.tableau.SemistandardTableaux.Element"]], "element (sage.combinat.tableau.standardtableaux attribute)": [[341, "sage.combinat.tableau.StandardTableaux.Element"]], "element (sage.combinat.tableau.tableaux attribute)": [[341, "sage.combinat.tableau.Tableaux.Element"]], "increasingtableau (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.IncreasingTableau"]], "increasingtableaux (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.IncreasingTableaux"]], "increasingtableaux_all (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.IncreasingTableaux_all"]], "increasingtableaux_shape (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.IncreasingTableaux_shape"]], "increasingtableaux_shape_inf (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.IncreasingTableaux_shape_inf"]], "increasingtableaux_shape_weight (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.IncreasingTableaux_shape_weight"]], "increasingtableaux_size (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.IncreasingTableaux_size"]], "increasingtableaux_size_inf (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.IncreasingTableaux_size_inf"]], "increasingtableaux_size_weight (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.IncreasingTableaux_size_weight"]], "k_bender_knuth() (sage.combinat.tableau.increasingtableau method)": [[341, "sage.combinat.tableau.IncreasingTableau.K_bender_knuth"]], "k_evacuation() (sage.combinat.tableau.increasingtableau method)": [[341, "sage.combinat.tableau.IncreasingTableau.K_evacuation"]], "k_promotion() (sage.combinat.tableau.increasingtableau method)": [[341, "sage.combinat.tableau.IncreasingTableau.K_promotion"]], "k_promotion_inverse() (sage.combinat.tableau.increasingtableau method)": [[341, "sage.combinat.tableau.IncreasingTableau.K_promotion_inverse"]], "rowstandardtableau (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.RowStandardTableau"]], "rowstandardtableaux (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.RowStandardTableaux"]], "rowstandardtableaux_all (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.RowStandardTableaux_all"]], "rowstandardtableaux_shape (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.RowStandardTableaux_shape"]], "rowstandardtableaux_size (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.RowStandardTableaux_size"]], "semistandardtableau (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.SemistandardTableau"]], "semistandardtableaux (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.SemistandardTableaux"]], "semistandardtableaux_all (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.SemistandardTableaux_all"]], "semistandardtableaux_shape (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.SemistandardTableaux_shape"]], "semistandardtableaux_shape_inf (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.SemistandardTableaux_shape_inf"]], "semistandardtableaux_shape_weight (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.SemistandardTableaux_shape_weight"]], "semistandardtableaux_size (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.SemistandardTableaux_size"]], "semistandardtableaux_size_inf (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.SemistandardTableaux_size_inf"]], "semistandardtableaux_size_weight (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.SemistandardTableaux_size_weight"]], "standardtableau (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.StandardTableau"]], "standardtableaux (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.StandardTableaux"]], "standardtableaux_all (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.StandardTableaux_all"]], "standardtableaux_shape (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.StandardTableaux_shape"]], "standardtableaux_size (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.StandardTableaux_size"]], "tableau (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.Tableau"]], "tableau_class (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.Tableau_class"]], "tableaux (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.Tableaux"]], "tableaux_all (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.Tableaux_all"]], "tableaux_size (class in sage.combinat.tableau)": [[341, "sage.combinat.tableau.Tableaux_size"]], "add_entry() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.add_entry"]], "an_element() (sage.combinat.tableau.rowstandardtableaux_size method)": [[341, "sage.combinat.tableau.RowStandardTableaux_size.an_element"]], "an_element() (sage.combinat.tableau.tableaux_all method)": [[341, "sage.combinat.tableau.Tableaux_all.an_element"]], "an_element() (sage.combinat.tableau.tableaux_size method)": [[341, "sage.combinat.tableau.Tableaux_size.an_element"]], "anti_restrict() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.anti_restrict"]], "atom() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.atom"]], "bender_knuth_involution() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.bender_knuth_involution"]], "bump() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.bump"]], "bump_multiply() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.bump_multiply"]], "cardinality() (sage.combinat.tableau.rowstandardtableaux_shape method)": [[341, "sage.combinat.tableau.RowStandardTableaux_shape.cardinality"]], "cardinality() (sage.combinat.tableau.semistandardtableaux_shape method)": [[341, "sage.combinat.tableau.SemistandardTableaux_shape.cardinality"]], "cardinality() (sage.combinat.tableau.semistandardtableaux_shape_weight method)": [[341, "sage.combinat.tableau.SemistandardTableaux_shape_weight.cardinality"]], "cardinality() (sage.combinat.tableau.semistandardtableaux_size method)": [[341, "sage.combinat.tableau.SemistandardTableaux_size.cardinality"]], "cardinality() (sage.combinat.tableau.semistandardtableaux_size_weight method)": [[341, "sage.combinat.tableau.SemistandardTableaux_size_weight.cardinality"]], "cardinality() (sage.combinat.tableau.standardtableaux_shape method)": [[341, "sage.combinat.tableau.StandardTableaux_shape.cardinality"]], "cardinality() (sage.combinat.tableau.standardtableaux_size method)": [[341, "sage.combinat.tableau.StandardTableaux_size.cardinality"]], "catabolism() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.catabolism"]], "catabolism_projector() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.catabolism_projector"]], "catabolism_sequence() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.catabolism_sequence"]], "cells() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.cells"]], "cells_containing() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.cells_containing"]], "charge() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.charge"]], "check() (sage.combinat.tableau.increasingtableau method)": [[341, "sage.combinat.tableau.IncreasingTableau.check"]], "check() (sage.combinat.tableau.rowstandardtableau method)": [[341, "sage.combinat.tableau.RowStandardTableau.check"]], "check() (sage.combinat.tableau.semistandardtableau method)": [[341, "sage.combinat.tableau.SemistandardTableau.check"]], "check() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.check"]], "check() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.check"]], "cocharge() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.cocharge"]], "codegree() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.codegree"]], "column_stabilizer() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.column_stabilizer"]], "components() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.components"]], "conjugate() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.conjugate"]], "content() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.content"]], "corners() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.corners"]], "degree() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.degree"]], "descent_set() (sage.combinat.tableau.increasingtableau method)": [[341, "sage.combinat.tableau.IncreasingTableau.descent_set"]], "descents() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.descents"]], "dominates() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.dominates"]], "down() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.down"]], "down_list() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.down_list"]], "dual_k_evacuation() (sage.combinat.tableau.increasingtableau method)": [[341, "sage.combinat.tableau.IncreasingTableau.dual_K_evacuation"]], "entries() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.entries"]], "entry() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.entry"]], "evacuation() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.evacuation"]], "evaluation() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.evaluation"]], "first_column_descent() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.first_column_descent"]], "first_row_descent() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.first_row_descent"]], "flush() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.flush"]], "from_chain() (in module sage.combinat.tableau)": [[341, "sage.combinat.tableau.from_chain"]], "from_shape_and_word() (in module sage.combinat.tableau)": [[341, "sage.combinat.tableau.from_shape_and_word"]], "height() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.height"]], "hillman_grassl() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.hillman_grassl"]], "insert_word() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.insert_word"]], "inversion_number() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.inversion_number"]], "inversions() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.inversions"]], "is_column_increasing() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.is_column_increasing"]], "is_column_strict() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.is_column_strict"]], "is_increasing() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.is_increasing"]], "is_k_tableau() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.is_k_tableau"]], "is_key_tableau() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.is_key_tableau"]], "is_rectangular() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.is_rectangular"]], "is_row_increasing() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.is_row_increasing"]], "is_row_strict() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.is_row_strict"]], "is_semistandard() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.is_semistandard"]], "is_standard() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.is_standard"]], "is_standard() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.is_standard"]], "k_weight() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.k_weight"]], "lambda_catabolism() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.lambda_catabolism"]], "last_letter_lequal() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.last_letter_lequal"]], "left_key_tableau() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.left_key_tableau"]], "leq() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.leq"]], "level() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.level"]], "list() (sage.combinat.tableau.semistandardtableaux_all method)": [[341, "sage.combinat.tableau.SemistandardTableaux_all.list"]], "list() (sage.combinat.tableau.semistandardtableaux_shape_weight method)": [[341, "sage.combinat.tableau.SemistandardTableaux_shape_weight.list"]], "list() (sage.combinat.tableau.semistandardtableaux_size_inf method)": [[341, "sage.combinat.tableau.SemistandardTableaux_size_inf.list"]], "list() (sage.combinat.tableau.standardtableaux_shape method)": [[341, "sage.combinat.tableau.StandardTableaux_shape.list"]], "major_index() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.major_index"]], "options (sage.combinat.tableau.tableaux attribute)": [[341, "sage.combinat.tableau.Tableaux.options"]], "plot() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.plot"]], "pp() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.pp"]], "promotion() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.promotion"]], "promotion() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.promotion"]], "promotion_inverse() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.promotion_inverse"]], "promotion_inverse() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.promotion_inverse"]], "promotion_operator() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.promotion_operator"]], "raise_action_from_words() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.raise_action_from_words"]], "random_element() (sage.combinat.tableau.semistandardtableaux_shape method)": [[341, "sage.combinat.tableau.SemistandardTableaux_shape.random_element"]], "random_element() (sage.combinat.tableau.semistandardtableaux_size method)": [[341, "sage.combinat.tableau.SemistandardTableaux_size.random_element"]], "random_element() (sage.combinat.tableau.standardtableaux_shape method)": [[341, "sage.combinat.tableau.StandardTableaux_shape.random_element"]], "random_element() (sage.combinat.tableau.standardtableaux_size method)": [[341, "sage.combinat.tableau.StandardTableaux_size.random_element"]], "reading_word_permutation() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.reading_word_permutation"]], "reduced_column_word() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.reduced_column_word"]], "reduced_lambda_catabolism() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.reduced_lambda_catabolism"]], "reduced_row_word() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.reduced_row_word"]], "residue() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.residue"]], "residue_sequence() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.residue_sequence"]], "restrict() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.restrict"]], "restriction_shape() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.restriction_shape"]], "reverse_bump() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.reverse_bump"]], "right_key_tableau() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.right_key_tableau"]], "rotate_180() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.rotate_180"]], "row_stabilizer() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.row_stabilizer"]], "sage.combinat.tableau": [[341, "module-sage.combinat.tableau"]], "schensted_insert() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.schensted_insert"]], "schuetzenberger_involution() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.schuetzenberger_involution"]], "seg() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.seg"]], "shape() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.shape"]], "size() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.size"]], "slide_multiply() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.slide_multiply"]], "socle() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.socle"]], "standard_descents() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.standard_descents"]], "standard_major_index() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.standard_major_index"]], "standard_number_of_descents() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.standard_number_of_descents"]], "standardization() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.standardization"]], "sulzgruber_correspondence() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.sulzgruber_correspondence"]], "symmetric_group_action_on_entries() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.symmetric_group_action_on_entries"]], "symmetric_group_action_on_values() (in module sage.combinat.tableau)": [[341, "sage.combinat.tableau.symmetric_group_action_on_values"]], "symmetric_group_action_on_values() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.symmetric_group_action_on_values"]], "to_gelfand_tsetlin_pattern() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.to_Gelfand_Tsetlin_pattern"]], "to_chain() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.to_chain"]], "to_list() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.to_list"]], "to_sign_matrix() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.to_sign_matrix"]], "to_word() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.to_word"]], "to_word_by_column() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.to_word_by_column"]], "to_word_by_row() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.to_word_by_row"]], "unmatched_places() (in module sage.combinat.tableau)": [[341, "sage.combinat.tableau.unmatched_places"]], "up() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.up"]], "up_list() (sage.combinat.tableau.standardtableau method)": [[341, "sage.combinat.tableau.StandardTableau.up_list"]], "vertical_flip() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.vertical_flip"]], "weight() (sage.combinat.tableau.tableau method)": [[341, "sage.combinat.tableau.Tableau.weight"]], "element (sage.combinat.tableau_residues.residuesequences attribute)": [[342, "sage.combinat.tableau_residues.ResidueSequences.Element"]], "residuesequence (class in sage.combinat.tableau_residues)": [[342, "sage.combinat.tableau_residues.ResidueSequence"]], "residuesequences (class in sage.combinat.tableau_residues)": [[342, "sage.combinat.tableau_residues.ResidueSequences"]], "an_element() (sage.combinat.tableau_residues.residuesequences method)": [[342, "sage.combinat.tableau_residues.ResidueSequences.an_element"]], "base_ring() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.base_ring"]], "block() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.block"]], "cell_residue() (sage.combinat.tableau_residues.residuesequences method)": [[342, "sage.combinat.tableau_residues.ResidueSequences.cell_residue"]], "check() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.check"]], "check_element() (sage.combinat.tableau_residues.residuesequences method)": [[342, "sage.combinat.tableau_residues.ResidueSequences.check_element"]], "level() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.level"]], "multicharge() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.multicharge"]], "negative() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.negative"]], "quantum_characteristic() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.quantum_characteristic"]], "residues() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.residues"]], "restrict() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.restrict"]], "restrict_row() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.restrict_row"]], "row_standard_tableaux() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.row_standard_tableaux"]], "sage.combinat.tableau_residues": [[342, "module-sage.combinat.tableau_residues"]], "size() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.size"]], "standard_tableaux() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.standard_tableaux"]], "swap_residues() (sage.combinat.tableau_residues.residuesequence method)": [[342, "sage.combinat.tableau_residues.ResidueSequence.swap_residues"]], "element (sage.combinat.tableau_tuple.rowstandardtableautuples attribute)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples.Element"]], "element (sage.combinat.tableau_tuple.standardtableautuples attribute)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples.Element"]], "element (sage.combinat.tableau_tuple.tableautuple attribute)": [[343, "sage.combinat.tableau_tuple.TableauTuple.Element"]], "element (sage.combinat.tableau_tuple.tableautuples attribute)": [[343, "sage.combinat.tableau_tuple.TableauTuples.Element"]], "rowstandardtableautuple (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuple"]], "rowstandardtableautuples (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples"]], "rowstandardtableautuples_all (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_all"]], "rowstandardtableautuples_level (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_level"]], "rowstandardtableautuples_level_size (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_level_size"]], "rowstandardtableautuples_residue (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_residue"]], "rowstandardtableautuples_residue_shape (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_residue_shape"]], "rowstandardtableautuples_shape (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_shape"]], "rowstandardtableautuples_size (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_size"]], "standardtableautuple (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuple"]], "standardtableautuples (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples"]], "standardtableautuples_all (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_all"]], "standardtableautuples_level (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_level"]], "standardtableautuples_level_size (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_level_size"]], "standardtableautuples_shape (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_shape"]], "standardtableautuples_size (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_size"]], "standardtableaux_residue (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.StandardTableaux_residue"]], "standardtableaux_residue_shape (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.StandardTableaux_residue_shape"]], "tableautuple (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.TableauTuple"]], "tableautuples (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.TableauTuples"]], "tableautuples_all (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.TableauTuples_all"]], "tableautuples_level (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.TableauTuples_level"]], "tableautuples_level_size (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.TableauTuples_level_size"]], "tableautuples_size (class in sage.combinat.tableau_tuple)": [[343, "sage.combinat.tableau_tuple.TableauTuples_size"]], "add_entry() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.add_entry"]], "an_element() (sage.combinat.tableau_tuple.rowstandardtableautuples_all method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_all.an_element"]], "an_element() (sage.combinat.tableau_tuple.rowstandardtableautuples_level method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_level.an_element"]], "an_element() (sage.combinat.tableau_tuple.rowstandardtableautuples_level_size method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_level_size.an_element"]], "an_element() (sage.combinat.tableau_tuple.rowstandardtableautuples_residue method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_residue.an_element"]], "an_element() (sage.combinat.tableau_tuple.rowstandardtableautuples_shape method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_shape.an_element"]], "an_element() (sage.combinat.tableau_tuple.rowstandardtableautuples_size method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_size.an_element"]], "an_element() (sage.combinat.tableau_tuple.standardtableautuples_level method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_level.an_element"]], "an_element() (sage.combinat.tableau_tuple.standardtableautuples_level_size method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_level_size.an_element"]], "an_element() (sage.combinat.tableau_tuple.standardtableautuples_shape method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_shape.an_element"]], "an_element() (sage.combinat.tableau_tuple.standardtableautuples_size method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_size.an_element"]], "an_element() (sage.combinat.tableau_tuple.standardtableaux_residue_shape method)": [[343, "sage.combinat.tableau_tuple.StandardTableaux_residue_shape.an_element"]], "an_element() (sage.combinat.tableau_tuple.tableautuples_all method)": [[343, "sage.combinat.tableau_tuple.TableauTuples_all.an_element"]], "an_element() (sage.combinat.tableau_tuple.tableautuples_level method)": [[343, "sage.combinat.tableau_tuple.TableauTuples_level.an_element"]], "an_element() (sage.combinat.tableau_tuple.tableautuples_level_size method)": [[343, "sage.combinat.tableau_tuple.TableauTuples_level_size.an_element"]], "an_element() (sage.combinat.tableau_tuple.tableautuples_size method)": [[343, "sage.combinat.tableau_tuple.TableauTuples_size.an_element"]], "cardinality() (sage.combinat.tableau_tuple.rowstandardtableautuples_shape method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_shape.cardinality"]], "cardinality() (sage.combinat.tableau_tuple.standardtableautuples_level_size method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_level_size.cardinality"]], "cardinality() (sage.combinat.tableau_tuple.standardtableautuples_shape method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_shape.cardinality"]], "cells_containing() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.cells_containing"]], "charge() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.charge"]], "cocharge() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.cocharge"]], "codegree() (sage.combinat.tableau_tuple.rowstandardtableautuple method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuple.codegree"]], "column_stabilizer() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.column_stabilizer"]], "components() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.components"]], "conjugate() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.conjugate"]], "content() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.content"]], "degree() (sage.combinat.tableau_tuple.rowstandardtableautuple method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuple.degree"]], "dominates() (sage.combinat.tableau_tuple.standardtableautuple method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuple.dominates"]], "entries() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.entries"]], "entry() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.entry"]], "first_column_descent() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.first_column_descent"]], "first_row_descent() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.first_row_descent"]], "inverse() (sage.combinat.tableau_tuple.rowstandardtableautuple method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuple.inverse"]], "is_column_strict() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.is_column_strict"]], "is_row_strict() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.is_row_strict"]], "is_standard() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.is_standard"]], "last() (sage.combinat.tableau_tuple.standardtableautuples_shape method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_shape.last"]], "level() (sage.combinat.tableau_tuple.rowstandardtableautuples_residue method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_residue.level"]], "level() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.level"]], "level() (sage.combinat.tableau_tuple.tableautuples method)": [[343, "sage.combinat.tableau_tuple.TableauTuples.level"]], "level_one_parent_class (sage.combinat.tableau_tuple.rowstandardtableautuples attribute)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples.level_one_parent_class"]], "level_one_parent_class (sage.combinat.tableau_tuple.standardtableautuples attribute)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples.level_one_parent_class"]], "level_one_parent_class (sage.combinat.tableau_tuple.tableautuples attribute)": [[343, "sage.combinat.tableau_tuple.TableauTuples.level_one_parent_class"]], "list() (sage.combinat.tableau_tuple.tableautuples method)": [[343, "sage.combinat.tableau_tuple.TableauTuples.list"]], "multicharge() (sage.combinat.tableau_tuple.rowstandardtableautuples_residue method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_residue.multicharge"]], "options (sage.combinat.tableau_tuple.tableautuples attribute)": [[343, "sage.combinat.tableau_tuple.TableauTuples.options"]], "pp() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.pp"]], "quantum_characteristic() (sage.combinat.tableau_tuple.rowstandardtableautuples_residue method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_residue.quantum_characteristic"]], "random_element() (sage.combinat.tableau_tuple.standardtableautuples_shape method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples_shape.random_element"]], "reduced_column_word() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.reduced_column_word"]], "reduced_row_word() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.reduced_row_word"]], "residue() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.residue"]], "residue_sequence() (sage.combinat.tableau_tuple.rowstandardtableautuple method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuple.residue_sequence"]], "residue_sequence() (sage.combinat.tableau_tuple.rowstandardtableautuples_residue method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_residue.residue_sequence"]], "restrict() (sage.combinat.tableau_tuple.standardtableautuple method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuple.restrict"]], "restrict() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.restrict"]], "row_stabilizer() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.row_stabilizer"]], "sage.combinat.tableau_tuple": [[343, "module-sage.combinat.tableau_tuple"]], "shape() (sage.combinat.tableau_tuple.rowstandardtableautuples method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples.shape"]], "shape() (sage.combinat.tableau_tuple.standardtableautuples method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuples.shape"]], "shape() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.shape"]], "size() (sage.combinat.tableau_tuple.rowstandardtableautuples_residue method)": [[343, "sage.combinat.tableau_tuple.RowStandardTableauTuples_residue.size"]], "size() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.size"]], "size() (sage.combinat.tableau_tuple.tableautuples method)": [[343, "sage.combinat.tableau_tuple.TableauTuples.size"]], "symmetric_group_action_on_entries() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.symmetric_group_action_on_entries"]], "to_chain() (sage.combinat.tableau_tuple.standardtableautuple method)": [[343, "sage.combinat.tableau_tuple.StandardTableauTuple.to_chain"]], "to_list() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.to_list"]], "to_permutation() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.to_permutation"]], "to_word() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.to_word"]], "to_word_by_column() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.to_word_by_column"]], "to_word_by_row() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.to_word_by_row"]], "up() (sage.combinat.tableau_tuple.tableautuple method)": [[343, "sage.combinat.tableau_tuple.TableauTuple.up"]], "dextersemilattice() (in module sage.combinat.tamari_lattices)": [[344, "sage.combinat.tamari_lattices.DexterSemilattice"]], "generalizedtamarilattice() (in module sage.combinat.tamari_lattices)": [[344, "sage.combinat.tamari_lattices.GeneralizedTamariLattice"]], "tamarilattice() (in module sage.combinat.tamari_lattices)": [[344, "sage.combinat.tamari_lattices.TamariLattice"]], "paths_in_triangle() (in module sage.combinat.tamari_lattices)": [[344, "sage.combinat.tamari_lattices.paths_in_triangle"]], "sage.combinat.tamari_lattices": [[344, "module-sage.combinat.tamari_lattices"]], "swap() (in module sage.combinat.tamari_lattices)": [[344, "sage.combinat.tamari_lattices.swap"]], "swap_dexter() (in module sage.combinat.tamari_lattices)": [[344, "sage.combinat.tamari_lattices.swap_dexter"]], "polyomino (class in sage.combinat.tiling)": [[345, "sage.combinat.tiling.Polyomino"]], "tilingsolver (class in sage.combinat.tiling)": [[345, "sage.combinat.tiling.TilingSolver"]], "animate() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.animate"]], "boundary() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.boundary"]], "bounding_box() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.bounding_box"]], "canonical() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.canonical"]], "canonical_isometric_copies() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.canonical_isometric_copies"]], "center() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.center"]], "color() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.color"]], "coord_to_int_dict() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.coord_to_int_dict"]], "dlx_solver() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.dlx_solver"]], "frozenset() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.frozenset"]], "int_to_coord_dict() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.int_to_coord_dict"]], "intersection() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.intersection"]], "is_suitable() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.is_suitable"]], "isometric_copies() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.isometric_copies"]], "isometric_copies_intersection() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.isometric_copies_intersection"]], "ncube_isometry_group() (in module sage.combinat.tiling)": [[345, "sage.combinat.tiling.ncube_isometry_group"]], "ncube_isometry_group_cosets() (in module sage.combinat.tiling)": [[345, "sage.combinat.tiling.ncube_isometry_group_cosets"]], "neighbor_edges() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.neighbor_edges"]], "nrows_per_piece() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.nrows_per_piece"]], "number_of_solutions() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.number_of_solutions"]], "pieces() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.pieces"]], "row_to_polyomino() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.row_to_polyomino"]], "rows() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.rows"]], "rows_for_piece() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.rows_for_piece"]], "sage.combinat.tiling": [[345, "module-sage.combinat.tiling"]], "self_surrounding() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.self_surrounding"]], "show2d() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.show2d"]], "show3d() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.show3d"]], "solve() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.solve"]], "sorted_list() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.sorted_list"]], "space() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.space"]], "starting_rows() (sage.combinat.tiling.tilingsolver method)": [[345, "sage.combinat.tiling.TilingSolver.starting_rows"]], "translated_copies() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.translated_copies"]], "translated_copies_intersection() (sage.combinat.tiling.polyomino method)": [[345, "sage.combinat.tiling.Polyomino.translated_copies_intersection"]], "sage.combinat.tools": [[346, "module-sage.combinat.tools"]], "transitive_ideal() (in module sage.combinat.tools)": [[346, "sage.combinat.tools.transitive_ideal"]], "f_triangle (class in sage.combinat.triangles_fhm)": [[347, "sage.combinat.triangles_FHM.F_triangle"]], "gamma_triangle (class in sage.combinat.triangles_fhm)": [[347, "sage.combinat.triangles_FHM.Gamma_triangle"]], "h_triangle (class in sage.combinat.triangles_fhm)": [[347, "sage.combinat.triangles_FHM.H_triangle"]], "m_triangle (class in sage.combinat.triangles_fhm)": [[347, "sage.combinat.triangles_FHM.M_triangle"]], "triangle (class in sage.combinat.triangles_fhm)": [[347, "sage.combinat.triangles_FHM.Triangle"]], "dual() (sage.combinat.triangles_fhm.m_triangle method)": [[347, "sage.combinat.triangles_FHM.M_triangle.dual"]], "f() (sage.combinat.triangles_fhm.h_triangle method)": [[347, "sage.combinat.triangles_FHM.H_triangle.f"]], "f() (sage.combinat.triangles_fhm.m_triangle method)": [[347, "sage.combinat.triangles_FHM.M_triangle.f"]], "gamma() (sage.combinat.triangles_fhm.h_triangle method)": [[347, "sage.combinat.triangles_FHM.H_triangle.gamma"]], "h() (sage.combinat.triangles_fhm.f_triangle method)": [[347, "sage.combinat.triangles_FHM.F_triangle.h"]], "h() (sage.combinat.triangles_fhm.gamma_triangle method)": [[347, "sage.combinat.triangles_FHM.Gamma_triangle.h"]], "h() (sage.combinat.triangles_fhm.m_triangle method)": [[347, "sage.combinat.triangles_FHM.M_triangle.h"]], "m() (sage.combinat.triangles_fhm.f_triangle method)": [[347, "sage.combinat.triangles_FHM.F_triangle.m"]], "m() (sage.combinat.triangles_fhm.h_triangle method)": [[347, "sage.combinat.triangles_FHM.H_triangle.m"]], "matrix() (sage.combinat.triangles_fhm.triangle method)": [[347, "sage.combinat.triangles_FHM.Triangle.matrix"]], "polynomial() (sage.combinat.triangles_fhm.triangle method)": [[347, "sage.combinat.triangles_FHM.Triangle.polynomial"]], "sage.combinat.triangles_fhm": [[347, "module-sage.combinat.triangles_FHM"]], "transmute() (sage.combinat.triangles_fhm.m_triangle method)": [[347, "sage.combinat.triangles_FHM.M_triangle.transmute"]], "transpose() (sage.combinat.triangles_fhm.h_triangle method)": [[347, "sage.combinat.triangles_FHM.H_triangle.transpose"]], "truncate() (sage.combinat.triangles_fhm.triangle method)": [[347, "sage.combinat.triangles_FHM.Triangle.truncate"]], "vector() (sage.combinat.triangles_fhm.f_triangle method)": [[347, "sage.combinat.triangles_FHM.F_triangle.vector"]], "vector() (sage.combinat.triangles_fhm.gamma_triangle method)": [[347, "sage.combinat.triangles_FHM.Gamma_triangle.vector"]], "vector() (sage.combinat.triangles_fhm.h_triangle method)": [[347, "sage.combinat.triangles_FHM.H_triangle.vector"]], "tuples (class in sage.combinat.tuple)": [[348, "sage.combinat.tuple.Tuples"]], "tuples_sk (in module sage.combinat.tuple)": [[348, "sage.combinat.tuple.Tuples_sk"]], "unorderedtuples (class in sage.combinat.tuple)": [[348, "sage.combinat.tuple.UnorderedTuples"]], "unorderedtuples_sk (in module sage.combinat.tuple)": [[348, "sage.combinat.tuple.UnorderedTuples_sk"]], "cardinality() (sage.combinat.tuple.tuples method)": [[348, "sage.combinat.tuple.Tuples.cardinality"]], "cardinality() (sage.combinat.tuple.unorderedtuples method)": [[348, "sage.combinat.tuple.UnorderedTuples.cardinality"]], "list() (sage.combinat.tuple.unorderedtuples method)": [[348, "sage.combinat.tuple.UnorderedTuples.list"]], "sage.combinat.tuple": [[348, "module-sage.combinat.tuple"]], "sage.combinat.tutorial": [[349, "module-sage.combinat.tutorial"]], "element (sage.combinat.vector_partition.vectorpartitions attribute)": [[350, "sage.combinat.vector_partition.VectorPartitions.Element"]], "integervectorsiterator() (in module sage.combinat.vector_partition)": [[350, "sage.combinat.vector_partition.IntegerVectorsIterator"]], "vectorpartition (class in sage.combinat.vector_partition)": [[350, "sage.combinat.vector_partition.VectorPartition"]], "vectorpartitions (class in sage.combinat.vector_partition)": [[350, "sage.combinat.vector_partition.VectorPartitions"]], "find_min() (in module sage.combinat.vector_partition)": [[350, "sage.combinat.vector_partition.find_min"]], "partition_at_vertex() (sage.combinat.vector_partition.vectorpartition method)": [[350, "sage.combinat.vector_partition.VectorPartition.partition_at_vertex"]], "sage.combinat.vector_partition": [[350, "module-sage.combinat.vector_partition"]], "sum() (sage.combinat.vector_partition.vectorpartition method)": [[350, "sage.combinat.vector_partition.VectorPartition.sum"]], "sage.combinat.words": [[351, "module-sage.combinat.words"]], "word_class (class in sage.combinat.words.abstract_word)": [[352, "sage.combinat.words.abstract_word.Word_class"]], "apply_morphism() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.apply_morphism"]], "complete_return_words_iterator() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.complete_return_words_iterator"]], "delta() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.delta"]], "factor_occurrences_iterator() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.factor_occurrences_iterator"]], "finite_differences() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.finite_differences"]], "first_occurrence() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.first_occurrence"]], "is_empty() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.is_empty"]], "is_finite() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.is_finite"]], "iterated_right_palindromic_closure() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.iterated_right_palindromic_closure"]], "length() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.length"]], "lex_greater() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.lex_greater"]], "lex_less() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.lex_less"]], "longest_common_prefix() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.longest_common_prefix"]], "longest_periodic_prefix() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.longest_periodic_prefix"]], "palindrome_prefixes_iterator() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.palindrome_prefixes_iterator"]], "parent() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.parent"]], "partial_sums() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.partial_sums"]], "prefixes_iterator() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.prefixes_iterator"]], "return_words_iterator() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.return_words_iterator"]], "sage.combinat.words.abstract_word": [[352, "module-sage.combinat.words.abstract_word"]], "string_rep() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.string_rep"]], "sum_digits() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.sum_digits"]], "to_integer_word() (sage.combinat.words.abstract_word.word_class method)": [[352, "sage.combinat.words.abstract_word.Word_class.to_integer_word"]], "alphabet() (in module sage.combinat.words.alphabet)": [[353, "sage.combinat.words.alphabet.Alphabet"]], "build_alphabet() (in module sage.combinat.words.alphabet)": [[353, "sage.combinat.words.alphabet.build_alphabet"]], "sage.combinat.words.alphabet": [[353, "module-sage.combinat.words.alphabet"]], "bwt() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.BWT"]], "callablefromlistofwords (class in sage.combinat.words.finite_word)": [[354, "sage.combinat.words.finite_word.CallableFromListOfWords"]], "factorization (class in sage.combinat.words.finite_word)": [[354, "sage.combinat.words.finite_word.Factorization"]], "finiteword_class (class in sage.combinat.words.finite_word)": [[354, "sage.combinat.words.finite_word.FiniteWord_class"]], "lz_decomposition() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.LZ_decomposition"]], "abelian_complexity() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.abelian_complexity"]], "abelian_vector() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.abelian_vector"]], "abelian_vectors() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.abelian_vectors"]], "apply_permutation_to_letters() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.apply_permutation_to_letters"]], "apply_permutation_to_positions() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.apply_permutation_to_positions"]], "balance() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.balance"]], "bispecial_factors() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.bispecial_factors"]], "bispecial_factors_iterator() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.bispecial_factors_iterator"]], "border() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.border"]], "charge() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.charge"]], "cocharge() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.cocharge"]], "coerce() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.coerce"]], "colored_vector() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.colored_vector"]], "commutes_with() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.commutes_with"]], "complete_return_words() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.complete_return_words"]], "concatenate() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.concatenate"]], "conjugate() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.conjugate"]], "conjugate_position() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.conjugate_position"]], "conjugates() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.conjugates"]], "conjugates_iterator() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.conjugates_iterator"]], "content() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.content"]], "count() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.count"]], "critical_exponent() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.critical_exponent"]], "crochemore_factorization() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.crochemore_factorization"]], "defect() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.defect"]], "deg_inv_lex_less() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.deg_inv_lex_less"]], "deg_lex_less() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.deg_lex_less"]], "deg_rev_lex_less() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.deg_rev_lex_less"]], "degree() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.degree"]], "delta() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.delta"]], "delta_derivate() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.delta_derivate"]], "delta_derivate_left() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.delta_derivate_left"]], "delta_derivate_right() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.delta_derivate_right"]], "delta_inv() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.delta_inv"]], "evaluation() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.evaluation"]], "evaluation_dict() (in module sage.combinat.words.finite_word)": [[354, "sage.combinat.words.finite_word.evaluation_dict"]], "evaluation_dict() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.evaluation_dict"]], "evaluation_partition() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.evaluation_partition"]], "evaluation_sparse() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.evaluation_sparse"]], "exponent() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.exponent"]], "factor_complexity() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.factor_complexity"]], "factor_iterator() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.factor_iterator"]], "factor_occurrences_in() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.factor_occurrences_in"]], "factor_set() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.factor_set"]], "find() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.find"]], "first_pos_in() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.first_pos_in"]], "foata_bijection() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.foata_bijection"]], "good_suffix_table() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.good_suffix_table"]], "has_period() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.has_period"]], "has_prefix() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.has_prefix"]], "has_suffix() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.has_suffix"]], "implicit_suffix_tree() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.implicit_suffix_tree"]], "inv_lex_less() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.inv_lex_less"]], "inversions() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.inversions"]], "is_balanced() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_balanced"]], "is_cadence() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_cadence"]], "is_christoffel() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_christoffel"]], "is_conjugate_with() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_conjugate_with"]], "is_cube() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_cube"]], "is_cube_free() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_cube_free"]], "is_empty() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_empty"]], "is_factor() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_factor"]], "is_finite() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_finite"]], "is_full() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_full"]], "is_lyndon() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_lyndon"]], "is_overlap() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_overlap"]], "is_palindrome() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_palindrome"]], "is_prefix() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_prefix"]], "is_primitive() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_primitive"]], "is_proper_prefix() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_proper_prefix"]], "is_proper_suffix() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_proper_suffix"]], "is_quasiperiodic() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_quasiperiodic"]], "is_rich() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_rich"]], "is_smooth_prefix() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_smooth_prefix"]], "is_square() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_square"]], "is_square_free() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_square_free"]], "is_sturmian_factor() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_sturmian_factor"]], "is_subword_of() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_subword_of"]], "is_suffix() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_suffix"]], "is_symmetric() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_symmetric"]], "is_tangent() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_tangent"]], "is_yamanouchi() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.is_yamanouchi"]], "iterated_left_palindromic_closure() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.iterated_left_palindromic_closure"]], "lacunas() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.lacunas"]], "last_position_dict() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.last_position_dict"]], "left_special_factors() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.left_special_factors"]], "left_special_factors_iterator() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.left_special_factors_iterator"]], "length() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.length"]], "length_border() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.length_border"]], "length_maximal_palindrome() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.length_maximal_palindrome"]], "lengths_maximal_palindromes() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.lengths_maximal_palindromes"]], "lengths_unioccurrent_lps() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.lengths_unioccurrent_lps"]], "letters() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.letters"]], "longest_backward_extension() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.longest_backward_extension"]], "longest_common_subword() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.longest_common_subword"]], "longest_common_suffix() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.longest_common_suffix"]], "longest_forward_extension() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.longest_forward_extension"]], "lps() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.lps"]], "lps_lengths() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.lps_lengths"]], "lyndon_factorization() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.lyndon_factorization"]], "major_index() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.major_index"]], "minimal_conjugate() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.minimal_conjugate"]], "minimal_period() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.minimal_period"]], "nb_factor_occurrences_in() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.nb_factor_occurrences_in"]], "nb_subword_occurrences_in() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.nb_subword_occurrences_in"]], "number_of_factor_occurrences() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.number_of_factor_occurrences"]], "number_of_factors() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.number_of_factors"]], "number_of_inversions() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.number_of_inversions"]], "number_of_left_special_factors() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.number_of_left_special_factors"]], "number_of_letter_occurrences() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.number_of_letter_occurrences"]], "number_of_right_special_factors() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.number_of_right_special_factors"]], "number_of_subword_occurrences() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.number_of_subword_occurrences"]], "order() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.order"]], "overlap_partition() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.overlap_partition"]], "palindrome_prefixes() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.palindrome_prefixes"]], "palindromes() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.palindromes"]], "palindromic_closure() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.palindromic_closure"]], "palindromic_complexity() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.palindromic_complexity"]], "palindromic_lacunas_study() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.palindromic_lacunas_study"]], "periods() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.periods"]], "phi() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.phi"]], "phi_inv() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.phi_inv"]], "prefix_function_table() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.prefix_function_table"]], "primitive() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.primitive"]], "primitive_length() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.primitive_length"]], "quasiperiods() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.quasiperiods"]], "rauzy_graph() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.rauzy_graph"]], "reduced_rauzy_graph() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.reduced_rauzy_graph"]], "return_words() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.return_words"]], "return_words_derivate() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.return_words_derivate"]], "rev_lex_less() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.rev_lex_less"]], "reversal() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.reversal"]], "rfind() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.rfind"]], "right_special_factors() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.right_special_factors"]], "right_special_factors_iterator() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.right_special_factors_iterator"]], "robinson_schensted() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.robinson_schensted"]], "sage.combinat.words.finite_word": [[354, "module-sage.combinat.words.finite_word"]], "schuetzenberger_involution() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.schuetzenberger_involution"]], "shifted_shuffle() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.shifted_shuffle"]], "shuffle() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.shuffle"]], "squares() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.squares"]], "standard_factorization() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.standard_factorization"]], "standard_permutation() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.standard_permutation"]], "sturmian_desubstitute_as_possible() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.sturmian_desubstitute_as_possible"]], "subword_complementaries() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.subword_complementaries"]], "suffix_tree() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.suffix_tree"]], "suffix_trie() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.suffix_trie"]], "swap() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.swap"]], "swap_decrease() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.swap_decrease"]], "swap_increase() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.swap_increase"]], "to_integer_list() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.to_integer_list"]], "to_integer_word() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.to_integer_word"]], "to_monoid_element() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.to_monoid_element"]], "to_ordered_set_partition() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.to_ordered_set_partition"]], "topological_entropy() (sage.combinat.words.finite_word.finiteword_class method)": [[354, "sage.combinat.words.finite_word.FiniteWord_class.topological_entropy"]], "word_to_ordered_set_partition() (in module sage.combinat.words.finite_word)": [[354, "sage.combinat.words.finite_word.word_to_ordered_set_partition"]], "infiniteword_class (class in sage.combinat.words.infinite_word)": [[355, "sage.combinat.words.infinite_word.InfiniteWord_class"]], "length() (sage.combinat.words.infinite_word.infiniteword_class method)": [[355, "sage.combinat.words.infinite_word.InfiniteWord_class.length"]], "sage.combinat.words.infinite_word": [[355, "module-sage.combinat.words.infinite_word"]], "lyndonword() (in module sage.combinat.words.lyndon_word)": [[356, "sage.combinat.words.lyndon_word.LyndonWord"]], "lyndonwords() (in module sage.combinat.words.lyndon_word)": [[356, "sage.combinat.words.lyndon_word.LyndonWords"]], "lyndonwords_class (class in sage.combinat.words.lyndon_word)": [[356, "sage.combinat.words.lyndon_word.LyndonWords_class"]], "lyndonwords_evaluation (class in sage.combinat.words.lyndon_word)": [[356, "sage.combinat.words.lyndon_word.LyndonWords_evaluation"]], "lyndonwords_nk (class in sage.combinat.words.lyndon_word)": [[356, "sage.combinat.words.lyndon_word.LyndonWords_nk"]], "standardbracketedlyndonwords() (in module sage.combinat.words.lyndon_word)": [[356, "sage.combinat.words.lyndon_word.StandardBracketedLyndonWords"]], "standardbracketedlyndonwords_nk (class in sage.combinat.words.lyndon_word)": [[356, "sage.combinat.words.lyndon_word.StandardBracketedLyndonWords_nk"]], "cardinality() (sage.combinat.words.lyndon_word.lyndonwords_evaluation method)": [[356, "sage.combinat.words.lyndon_word.LyndonWords_evaluation.cardinality"]], "cardinality() (sage.combinat.words.lyndon_word.lyndonwords_nk method)": [[356, "sage.combinat.words.lyndon_word.LyndonWords_nk.cardinality"]], "cardinality() (sage.combinat.words.lyndon_word.standardbracketedlyndonwords_nk method)": [[356, "sage.combinat.words.lyndon_word.StandardBracketedLyndonWords_nk.cardinality"]], "sage.combinat.words.lyndon_word": [[356, "module-sage.combinat.words.lyndon_word"]], "standard_bracketing() (in module sage.combinat.words.lyndon_word)": [[356, "sage.combinat.words.lyndon_word.standard_bracketing"]], "standard_unbracketing() (in module sage.combinat.words.lyndon_word)": [[356, "sage.combinat.words.lyndon_word.standard_unbracketing"]], "periodicpointiterator (class in sage.combinat.words.morphism)": [[357, "sage.combinat.words.morphism.PeriodicPointIterator"]], "wordmorphism (class in sage.combinat.words.morphism)": [[357, "sage.combinat.words.morphism.WordMorphism"]], "abelian_rotation_subspace() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.abelian_rotation_subspace"]], "codomain() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.codomain"]], "conjugate() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.conjugate"]], "domain() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.domain"]], "dual_map() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.dual_map"]], "extend_by() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.extend_by"]], "fixed_point() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.fixed_point"]], "fixed_points() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.fixed_points"]], "get_cycles() (in module sage.combinat.words.morphism)": [[357, "sage.combinat.words.morphism.get_cycles"]], "get_iterator() (sage.combinat.words.morphism.periodicpointiterator method)": [[357, "sage.combinat.words.morphism.PeriodicPointIterator.get_iterator"]], "growing_letters() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.growing_letters"]], "has_conjugate_in_classp() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.has_conjugate_in_classP"]], "has_left_conjugate() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.has_left_conjugate"]], "has_right_conjugate() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.has_right_conjugate"]], "image() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.image"]], "images() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.images"]], "immortal_letters() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.immortal_letters"]], "incidence_matrix() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.incidence_matrix"]], "infinite_repetitions_primitive_roots() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.infinite_repetitions_primitive_roots"]], "is_empty() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_empty"]], "is_endomorphism() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_endomorphism"]], "is_erasing() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_erasing"]], "is_growing() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_growing"]], "is_identity() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_identity"]], "is_in_classp() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_in_classP"]], "is_injective() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_injective"]], "is_involution() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_involution"]], "is_primitive() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_primitive"]], "is_prolongable() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_prolongable"]], "is_pushy() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_pushy"]], "is_repetitive() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_repetitive"]], "is_self_composable() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_self_composable"]], "is_unboundedly_repetitive() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_unboundedly_repetitive"]], "is_uniform() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.is_uniform"]], "language() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.language"]], "latex_layout() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.latex_layout"]], "letter_growth_types() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.letter_growth_types"]], "list_of_conjugates() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.list_of_conjugates"]], "partition_of_domain_alphabet() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.partition_of_domain_alphabet"]], "periodic_point() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.periodic_point"]], "periodic_points() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.periodic_points"]], "pisot_eigenvector_left() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.pisot_eigenvector_left"]], "pisot_eigenvector_right() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.pisot_eigenvector_right"]], "rauzy_fractal_plot() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.rauzy_fractal_plot"]], "rauzy_fractal_points() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.rauzy_fractal_points"]], "rauzy_fractal_projection() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.rauzy_fractal_projection"]], "restrict_domain() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.restrict_domain"]], "reversal() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.reversal"]], "sage.combinat.words.morphism": [[357, "module-sage.combinat.words.morphism"]], "simplify_alphabet_size() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.simplify_alphabet_size"]], "simplify_until_injective() (sage.combinat.words.morphism.wordmorphism method)": [[357, "sage.combinat.words.morphism.WordMorphism.simplify_until_injective"]], "finitewordpath_2d (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d"]], "finitewordpath_2d_callable (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d_callable"]], "finitewordpath_2d_callable_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d_callable_with_caching"]], "finitewordpath_2d_iter (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d_iter"]], "finitewordpath_2d_iter_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d_iter_with_caching"]], "finitewordpath_2d_list (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d_list"]], "finitewordpath_2d_str (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d_str"]], "finitewordpath_2d_tuple (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d_tuple"]], "finitewordpath_3d (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_3d"]], "finitewordpath_3d_callable (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_3d_callable"]], "finitewordpath_3d_callable_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_3d_callable_with_caching"]], "finitewordpath_3d_iter (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_3d_iter"]], "finitewordpath_3d_iter_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_3d_iter_with_caching"]], "finitewordpath_3d_list (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_3d_list"]], "finitewordpath_3d_str (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_3d_str"]], "finitewordpath_3d_tuple (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_3d_tuple"]], "finitewordpath_all (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_all"]], "finitewordpath_all_callable (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_all_callable"]], "finitewordpath_all_callable_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_all_callable_with_caching"]], "finitewordpath_all_iter (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_all_iter"]], "finitewordpath_all_iter_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_all_iter_with_caching"]], "finitewordpath_all_list (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_all_list"]], "finitewordpath_all_str (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_all_str"]], "finitewordpath_all_tuple (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_all_tuple"]], "finitewordpath_cube_grid (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_cube_grid"]], "finitewordpath_cube_grid_callable (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_cube_grid_callable"]], "finitewordpath_cube_grid_callable_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_cube_grid_callable_with_caching"]], "finitewordpath_cube_grid_iter (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_cube_grid_iter"]], "finitewordpath_cube_grid_iter_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_cube_grid_iter_with_caching"]], "finitewordpath_cube_grid_list (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_cube_grid_list"]], "finitewordpath_cube_grid_str (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_cube_grid_str"]], "finitewordpath_cube_grid_tuple (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_cube_grid_tuple"]], "finitewordpath_dyck (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_dyck"]], "finitewordpath_dyck_callable (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_dyck_callable"]], "finitewordpath_dyck_callable_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_dyck_callable_with_caching"]], "finitewordpath_dyck_iter (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_dyck_iter"]], "finitewordpath_dyck_iter_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_dyck_iter_with_caching"]], "finitewordpath_dyck_list (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_dyck_list"]], "finitewordpath_dyck_str (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_dyck_str"]], "finitewordpath_dyck_tuple (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_dyck_tuple"]], "finitewordpath_hexagonal_grid (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_hexagonal_grid"]], "finitewordpath_hexagonal_grid_callable (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_hexagonal_grid_callable"]], "finitewordpath_hexagonal_grid_callable_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_hexagonal_grid_callable_with_caching"]], "finitewordpath_hexagonal_grid_iter (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_hexagonal_grid_iter"]], "finitewordpath_hexagonal_grid_iter_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_hexagonal_grid_iter_with_caching"]], "finitewordpath_hexagonal_grid_list (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_hexagonal_grid_list"]], "finitewordpath_hexagonal_grid_str (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_hexagonal_grid_str"]], "finitewordpath_hexagonal_grid_tuple (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_hexagonal_grid_tuple"]], "finitewordpath_north_east (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_north_east"]], "finitewordpath_north_east_callable (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_north_east_callable"]], "finitewordpath_north_east_callable_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_north_east_callable_with_caching"]], "finitewordpath_north_east_iter (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_north_east_iter"]], "finitewordpath_north_east_iter_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_north_east_iter_with_caching"]], "finitewordpath_north_east_list (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_north_east_list"]], "finitewordpath_north_east_str (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_north_east_str"]], "finitewordpath_north_east_tuple (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_north_east_tuple"]], "finitewordpath_square_grid (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid"]], "finitewordpath_square_grid_callable (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid_callable"]], "finitewordpath_square_grid_callable_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid_callable_with_caching"]], "finitewordpath_square_grid_iter (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid_iter"]], "finitewordpath_square_grid_iter_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid_iter_with_caching"]], "finitewordpath_square_grid_list (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid_list"]], "finitewordpath_square_grid_str (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid_str"]], "finitewordpath_square_grid_tuple (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid_tuple"]], "finitewordpath_triangle_grid (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid"]], "finitewordpath_triangle_grid_callable (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid_callable"]], "finitewordpath_triangle_grid_callable_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid_callable_with_caching"]], "finitewordpath_triangle_grid_iter (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid_iter"]], "finitewordpath_triangle_grid_iter_with_caching (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid_iter_with_caching"]], "finitewordpath_triangle_grid_list (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid_list"]], "finitewordpath_triangle_grid_str (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid_str"]], "finitewordpath_triangle_grid_tuple (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid_tuple"]], "wordpaths() (in module sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.WordPaths"]], "wordpaths_all (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.WordPaths_all"]], "wordpaths_cube_grid (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.WordPaths_cube_grid"]], "wordpaths_dyck (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.WordPaths_dyck"]], "wordpaths_hexagonal_grid (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.WordPaths_hexagonal_grid"]], "wordpaths_north_east (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.WordPaths_north_east"]], "wordpaths_square_grid (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.WordPaths_square_grid"]], "wordpaths_triangle_grid (class in sage.combinat.words.paths)": [[358, "sage.combinat.words.paths.WordPaths_triangle_grid"]], "animate() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.animate"]], "area() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.area"]], "area() (sage.combinat.words.paths.finitewordpath_square_grid method)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid.area"]], "directive_vector() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.directive_vector"]], "end_point() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.end_point"]], "height() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.height"]], "height_vector() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.height_vector"]], "is_closed() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.is_closed"]], "is_closed() (sage.combinat.words.paths.finitewordpath_square_grid method)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid.is_closed"]], "is_simple() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.is_simple"]], "is_simple() (sage.combinat.words.paths.finitewordpath_square_grid method)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid.is_simple"]], "is_tangent() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.is_tangent"]], "letters_to_steps() (sage.combinat.words.paths.wordpaths_all method)": [[358, "sage.combinat.words.paths.WordPaths_all.letters_to_steps"]], "plot() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.plot"]], "plot() (sage.combinat.words.paths.finitewordpath_3d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_3d.plot"]], "plot_directive_vector() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.plot_directive_vector"]], "plot_projection() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.plot_projection"]], "points() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.points"]], "projected_path() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.projected_path"]], "projected_point_iterator() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.projected_point_iterator"]], "sage.combinat.words.paths": [[358, "module-sage.combinat.words.paths"]], "start_point() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.start_point"]], "tikz_trajectory() (sage.combinat.words.paths.finitewordpath_all method)": [[358, "sage.combinat.words.paths.FiniteWordPath_all.tikz_trajectory"]], "tikz_trajectory() (sage.combinat.words.paths.finitewordpath_square_grid method)": [[358, "sage.combinat.words.paths.FiniteWordPath_square_grid.tikz_trajectory"]], "vector_space() (sage.combinat.words.paths.wordpaths_all method)": [[358, "sage.combinat.words.paths.WordPaths_all.vector_space"]], "width() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.width"]], "width_vector() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.width_vector"]], "xmax() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.xmax"]], "xmax() (sage.combinat.words.paths.finitewordpath_triangle_grid method)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid.xmax"]], "xmin() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.xmin"]], "xmin() (sage.combinat.words.paths.finitewordpath_triangle_grid method)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid.xmin"]], "ymax() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.ymax"]], "ymax() (sage.combinat.words.paths.finitewordpath_triangle_grid method)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid.ymax"]], "ymin() (sage.combinat.words.paths.finitewordpath_2d method)": [[358, "sage.combinat.words.paths.FiniteWordPath_2d.ymin"]], "ymin() (sage.combinat.words.paths.finitewordpath_triangle_grid method)": [[358, "sage.combinat.words.paths.FiniteWordPath_triangle_grid.ymin"]], "shuffleproduct_shifted (class in sage.combinat.words.shuffle_product)": [[359, "sage.combinat.words.shuffle_product.ShuffleProduct_shifted"]], "shuffleproduct_w1w2 (class in sage.combinat.words.shuffle_product)": [[359, "sage.combinat.words.shuffle_product.ShuffleProduct_w1w2"]], "cardinality() (sage.combinat.words.shuffle_product.shuffleproduct_w1w2 method)": [[359, "sage.combinat.words.shuffle_product.ShuffleProduct_w1w2.cardinality"]], "sage.combinat.words.shuffle_product": [[359, "module-sage.combinat.words.shuffle_product"]], "decoratedsuffixtree (class in sage.combinat.words.suffix_trees)": [[360, "sage.combinat.words.suffix_trees.DecoratedSuffixTree"]], "implicitsuffixtree (class in sage.combinat.words.suffix_trees)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree"]], "lz_decomposition() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.LZ_decomposition"]], "suffixtrie (class in sage.combinat.words.suffix_trees)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie"]], "active_state() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.active_state"]], "active_state() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.active_state"]], "edge_iterator() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.edge_iterator"]], "factor_iterator() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.factor_iterator"]], "final_states() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.final_states"]], "has_suffix() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.has_suffix"]], "leftmost_covering_set() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.leftmost_covering_set"]], "node_to_word() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.node_to_word"]], "number_of_factors() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.number_of_factors"]], "plot() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.plot"]], "plot() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.plot"]], "process_letter() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.process_letter"]], "process_letter() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.process_letter"]], "sage.combinat.words.suffix_trees": [[360, "module-sage.combinat.words.suffix_trees"]], "show() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.show"]], "show() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.show"]], "square_vocabulary() (sage.combinat.words.suffix_trees.decoratedsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.DecoratedSuffixTree.square_vocabulary"]], "states() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.states"]], "states() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.states"]], "suffix_link() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.suffix_link"]], "suffix_link() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.suffix_link"]], "suffix_walk() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.suffix_walk"]], "to_digraph() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.to_digraph"]], "to_digraph() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.to_digraph"]], "to_explicit_suffix_tree() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.to_explicit_suffix_tree"]], "transition_function() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.transition_function"]], "transition_function() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.transition_function"]], "transition_function_dictionary() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.transition_function_dictionary"]], "trie_type_dict() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.trie_type_dict"]], "uncompactify() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.uncompactify"]], "word() (sage.combinat.words.suffix_trees.implicitsuffixtree method)": [[360, "sage.combinat.words.suffix_trees.ImplicitSuffixTree.word"]], "word() (sage.combinat.words.suffix_trees.suffixtrie method)": [[360, "sage.combinat.words.suffix_trees.SuffixTrie.word"]], "finiteword_callable (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.FiniteWord_callable"]], "finiteword_callable_with_caching (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.FiniteWord_callable_with_caching"]], "finiteword_char (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.FiniteWord_char"]], "finiteword_iter (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.FiniteWord_iter"]], "finiteword_iter_with_caching (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.FiniteWord_iter_with_caching"]], "finiteword_list (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.FiniteWord_list"]], "finiteword_morphic (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.FiniteWord_morphic"]], "finiteword_str (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.FiniteWord_str"]], "finiteword_tuple (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.FiniteWord_tuple"]], "infiniteword_callable (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.InfiniteWord_callable"]], "infiniteword_callable_with_caching (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.InfiniteWord_callable_with_caching"]], "infiniteword_iter (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.InfiniteWord_iter"]], "infiniteword_iter_with_caching (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.InfiniteWord_iter_with_caching"]], "infiniteword_morphic (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.InfiniteWord_morphic"]], "word() (in module sage.combinat.words.word)": [[361, "sage.combinat.words.word.Word"]], "word_iter (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.Word_iter"]], "word_iter_with_caching (class in sage.combinat.words.word)": [[361, "sage.combinat.words.word.Word_iter_with_caching"]], "sage.combinat.words.word": [[361, "module-sage.combinat.words.word"]], "worddatatype_char (class in sage.combinat.words.word_char)": [[362, "sage.combinat.words.word_char.WordDatatype_char"]], "concatenate() (sage.combinat.words.word_char.worddatatype_char method)": [[362, "sage.combinat.words.word_char.WordDatatype_char.concatenate"]], "has_prefix() (sage.combinat.words.word_char.worddatatype_char method)": [[362, "sage.combinat.words.word_char.WordDatatype_char.has_prefix"]], "is_empty() (sage.combinat.words.word_char.worddatatype_char method)": [[362, "sage.combinat.words.word_char.WordDatatype_char.is_empty"]], "is_square() (sage.combinat.words.word_char.worddatatype_char method)": [[362, "sage.combinat.words.word_char.WordDatatype_char.is_square"]], "length() (sage.combinat.words.word_char.worddatatype_char method)": [[362, "sage.combinat.words.word_char.WordDatatype_char.length"]], "letters() (sage.combinat.words.word_char.worddatatype_char method)": [[362, "sage.combinat.words.word_char.WordDatatype_char.letters"]], "longest_common_prefix() (sage.combinat.words.word_char.worddatatype_char method)": [[362, "sage.combinat.words.word_char.WordDatatype_char.longest_common_prefix"]], "longest_common_suffix() (sage.combinat.words.word_char.worddatatype_char method)": [[362, "sage.combinat.words.word_char.WordDatatype_char.longest_common_suffix"]], "reversed_word_iterator() (in module sage.combinat.words.word_char)": [[362, "sage.combinat.words.word_char.reversed_word_iterator"]], "sage.combinat.words.word_char": [[362, "module-sage.combinat.words.word_char"]], "worddatatype (class in sage.combinat.words.word_datatypes)": [[363, "sage.combinat.words.word_datatypes.WordDatatype"]], "worddatatype_list (class in sage.combinat.words.word_datatypes)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_list"]], "worddatatype_str (class in sage.combinat.words.word_datatypes)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str"]], "worddatatype_tuple (class in sage.combinat.words.word_datatypes)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_tuple"]], "find() (sage.combinat.words.word_datatypes.worddatatype_str method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str.find"]], "has_prefix() (sage.combinat.words.word_datatypes.worddatatype_str method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str.has_prefix"]], "has_suffix() (sage.combinat.words.word_datatypes.worddatatype_str method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str.has_suffix"]], "is_prefix() (sage.combinat.words.word_datatypes.worddatatype_str method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str.is_prefix"]], "is_suffix() (sage.combinat.words.word_datatypes.worddatatype_str method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str.is_suffix"]], "length() (sage.combinat.words.word_datatypes.worddatatype_list method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_list.length"]], "length() (sage.combinat.words.word_datatypes.worddatatype_str method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str.length"]], "length() (sage.combinat.words.word_datatypes.worddatatype_tuple method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_tuple.length"]], "number_of_letter_occurrences() (sage.combinat.words.word_datatypes.worddatatype_list method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_list.number_of_letter_occurrences"]], "number_of_letter_occurrences() (sage.combinat.words.word_datatypes.worddatatype_str method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str.number_of_letter_occurrences"]], "partition() (sage.combinat.words.word_datatypes.worddatatype_str method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str.partition"]], "rfind() (sage.combinat.words.word_datatypes.worddatatype_str method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str.rfind"]], "sage.combinat.words.word_datatypes": [[363, "module-sage.combinat.words.word_datatypes"]], "split() (sage.combinat.words.word_datatypes.worddatatype_str method)": [[363, "sage.combinat.words.word_datatypes.WordDatatype_str.split"]], "baumsweetword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.BaumSweetWord"]], "characteristicsturmianword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.CharacteristicSturmianWord"]], "christoffelword (sage.combinat.words.word_generators.wordgenerator attribute)": [[364, "sage.combinat.words.word_generators.WordGenerator.ChristoffelWord"]], "codingofrotationword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.CodingOfRotationWord"]], "fibonacciword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.FibonacciWord"]], "fixedpointofmorphism() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.FixedPointOfMorphism"]], "kolakoskiword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.KolakoskiWord"]], "lowerchristoffelword (class in sage.combinat.words.word_generators)": [[364, "sage.combinat.words.word_generators.LowerChristoffelWord"]], "lowerchristoffelword (sage.combinat.words.word_generators.wordgenerator attribute)": [[364, "sage.combinat.words.word_generators.WordGenerator.LowerChristoffelWord"]], "lowermechanicalword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.LowerMechanicalWord"]], "minimalsmoothprefix() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.MinimalSmoothPrefix"]], "palindromicdefectword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.PalindromicDefectWord"]], "randomword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.RandomWord"]], "standardepisturmianword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.StandardEpisturmianWord"]], "thuemorseword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.ThueMorseWord"]], "upperchristoffelword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.UpperChristoffelWord"]], "uppermechanicalword() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.UpperMechanicalWord"]], "wordgenerator (class in sage.combinat.words.word_generators)": [[364, "sage.combinat.words.word_generators.WordGenerator"]], "dual_fibonacci_tile() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.dual_fibonacci_tile"]], "fibonacci_tile() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.fibonacci_tile"]], "markoff_number() (sage.combinat.words.word_generators.lowerchristoffelword method)": [[364, "sage.combinat.words.word_generators.LowerChristoffelWord.markoff_number"]], "s_adic() (sage.combinat.words.word_generators.wordgenerator method)": [[364, "sage.combinat.words.word_generators.WordGenerator.s_adic"]], "sage.combinat.words.word_generators": [[364, "module-sage.combinat.words.word_generators"]], "standard_factorization() (sage.combinat.words.word_generators.lowerchristoffelword method)": [[364, "sage.combinat.words.word_generators.LowerChristoffelWord.standard_factorization"]], "worddatatype_callable (class in sage.combinat.words.word_infinite_datatypes)": [[365, "sage.combinat.words.word_infinite_datatypes.WordDatatype_callable"]], "worddatatype_callable_with_caching (class in sage.combinat.words.word_infinite_datatypes)": [[365, "sage.combinat.words.word_infinite_datatypes.WordDatatype_callable_with_caching"]], "worddatatype_iter (class in sage.combinat.words.word_infinite_datatypes)": [[365, "sage.combinat.words.word_infinite_datatypes.WordDatatype_iter"]], "worddatatype_iter_with_caching (class in sage.combinat.words.word_infinite_datatypes)": [[365, "sage.combinat.words.word_infinite_datatypes.WordDatatype_iter_with_caching"]], "flush() (sage.combinat.words.word_infinite_datatypes.worddatatype_callable_with_caching method)": [[365, "sage.combinat.words.word_infinite_datatypes.WordDatatype_callable_with_caching.flush"]], "flush() (sage.combinat.words.word_infinite_datatypes.worddatatype_iter_with_caching method)": [[365, "sage.combinat.words.word_infinite_datatypes.WordDatatype_iter_with_caching.flush"]], "sage.combinat.words.word_infinite_datatypes": [[365, "module-sage.combinat.words.word_infinite_datatypes"]], "wordoptions() (in module sage.combinat.words.word_options)": [[366, "sage.combinat.words.word_options.WordOptions"]], "sage.combinat.words.word_options": [[366, "module-sage.combinat.words.word_options"]], "abstractlanguage (class in sage.combinat.words.words)": [[367, "sage.combinat.words.words.AbstractLanguage"]], "finiteorinfinitewords (class in sage.combinat.words.words)": [[367, "sage.combinat.words.words.FiniteOrInfiniteWords"]], "finitewords (class in sage.combinat.words.words)": [[367, "sage.combinat.words.words.FiniteWords"]], "infinitewords (class in sage.combinat.words.words)": [[367, "sage.combinat.words.words.InfiniteWords"]], "words() (in module sage.combinat.words.words)": [[367, "sage.combinat.words.words.Words"]], "words_n (class in sage.combinat.words.words)": [[367, "sage.combinat.words.words.Words_n"]], "alphabet() (sage.combinat.words.words.abstractlanguage method)": [[367, "sage.combinat.words.words.AbstractLanguage.alphabet"]], "alphabet() (sage.combinat.words.words.words_n method)": [[367, "sage.combinat.words.words.Words_n.alphabet"]], "cardinality() (sage.combinat.words.words.finiteorinfinitewords method)": [[367, "sage.combinat.words.words.FiniteOrInfiniteWords.cardinality"]], "cardinality() (sage.combinat.words.words.finitewords method)": [[367, "sage.combinat.words.words.FiniteWords.cardinality"]], "cardinality() (sage.combinat.words.words.infinitewords method)": [[367, "sage.combinat.words.words.InfiniteWords.cardinality"]], "cardinality() (sage.combinat.words.words.words_n method)": [[367, "sage.combinat.words.words.Words_n.cardinality"]], "factors() (sage.combinat.words.words.finiteorinfinitewords method)": [[367, "sage.combinat.words.words.FiniteOrInfiniteWords.factors"]], "factors() (sage.combinat.words.words.finitewords method)": [[367, "sage.combinat.words.words.FiniteWords.factors"]], "factors() (sage.combinat.words.words.infinitewords method)": [[367, "sage.combinat.words.words.InfiniteWords.factors"]], "finite_words() (sage.combinat.words.words.finiteorinfinitewords method)": [[367, "sage.combinat.words.words.FiniteOrInfiniteWords.finite_words"]], "identity_morphism() (sage.combinat.words.words.abstractlanguage method)": [[367, "sage.combinat.words.words.AbstractLanguage.identity_morphism"]], "infinite_words() (sage.combinat.words.words.finiteorinfinitewords method)": [[367, "sage.combinat.words.words.FiniteOrInfiniteWords.infinite_words"]], "iter_morphisms() (sage.combinat.words.words.finitewords method)": [[367, "sage.combinat.words.words.FiniteWords.iter_morphisms"]], "iterate_by_length() (sage.combinat.words.words.finiteorinfinitewords method)": [[367, "sage.combinat.words.words.FiniteOrInfiniteWords.iterate_by_length"]], "iterate_by_length() (sage.combinat.words.words.finitewords method)": [[367, "sage.combinat.words.words.FiniteWords.iterate_by_length"]], "iterate_by_length() (sage.combinat.words.words.words_n method)": [[367, "sage.combinat.words.words.Words_n.iterate_by_length"]], "list() (sage.combinat.words.words.words_n method)": [[367, "sage.combinat.words.words.Words_n.list"]], "random_element() (sage.combinat.words.words.finitewords method)": [[367, "sage.combinat.words.words.FiniteWords.random_element"]], "random_element() (sage.combinat.words.words.infinitewords method)": [[367, "sage.combinat.words.words.InfiniteWords.random_element"]], "random_element() (sage.combinat.words.words.words_n method)": [[367, "sage.combinat.words.words.Words_n.random_element"]], "sage.combinat.words.words": [[367, "module-sage.combinat.words.words"]], "shift() (sage.combinat.words.words.finiteorinfinitewords method)": [[367, "sage.combinat.words.words.FiniteOrInfiniteWords.shift"]], "shift() (sage.combinat.words.words.finitewords method)": [[367, "sage.combinat.words.words.FiniteWords.shift"]], "shift() (sage.combinat.words.words.infinitewords method)": [[367, "sage.combinat.words.words.InfiniteWords.shift"]], "swapincreasingoperator (class in sage.combinat.yang_baxter_graph)": [[368, "sage.combinat.yang_baxter_graph.SwapIncreasingOperator"]], "swapoperator (class in sage.combinat.yang_baxter_graph)": [[368, "sage.combinat.yang_baxter_graph.SwapOperator"]], "yangbaxtergraph() (in module sage.combinat.yang_baxter_graph)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph"]], "yangbaxtergraph_generic (class in sage.combinat.yang_baxter_graph)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_generic"]], "yangbaxtergraph_partition (class in sage.combinat.yang_baxter_graph)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_partition"]], "edges() (sage.combinat.yang_baxter_graph.yangbaxtergraph_generic method)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_generic.edges"]], "plot() (sage.combinat.yang_baxter_graph.yangbaxtergraph_generic method)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_generic.plot"]], "position() (sage.combinat.yang_baxter_graph.swapoperator method)": [[368, "sage.combinat.yang_baxter_graph.SwapOperator.position"]], "relabel_edges() (sage.combinat.yang_baxter_graph.yangbaxtergraph_generic method)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_generic.relabel_edges"]], "relabel_vertices() (sage.combinat.yang_baxter_graph.yangbaxtergraph_generic method)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_generic.relabel_vertices"]], "relabel_vertices() (sage.combinat.yang_baxter_graph.yangbaxtergraph_partition method)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_partition.relabel_vertices"]], "root() (sage.combinat.yang_baxter_graph.yangbaxtergraph_generic method)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_generic.root"]], "sage.combinat.yang_baxter_graph": [[368, "module-sage.combinat.yang_baxter_graph"]], "successors() (sage.combinat.yang_baxter_graph.yangbaxtergraph_generic method)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_generic.successors"]], "vertex_relabelling_dict() (sage.combinat.yang_baxter_graph.yangbaxtergraph_generic method)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_generic.vertex_relabelling_dict"]], "vertex_relabelling_dict() (sage.combinat.yang_baxter_graph.yangbaxtergraph_partition method)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_partition.vertex_relabelling_dict"]], "vertices() (sage.combinat.yang_baxter_graph.yangbaxtergraph_generic method)": [[368, "sage.combinat.yang_baxter_graph.YangBaxterGraph_generic.vertices"]], "cfinitesequence (class in sage.rings.cfinite_sequence)": [[369, "sage.rings.cfinite_sequence.CFiniteSequence"]], "cfinitesequences() (in module sage.rings.cfinite_sequence)": [[369, "sage.rings.cfinite_sequence.CFiniteSequences"]], "cfinitesequences_generic (class in sage.rings.cfinite_sequence)": [[369, "sage.rings.cfinite_sequence.CFiniteSequences_generic"]], "element (sage.rings.cfinite_sequence.cfinitesequences_generic attribute)": [[369, "sage.rings.cfinite_sequence.CFiniteSequences_generic.Element"]], "an_element() (sage.rings.cfinite_sequence.cfinitesequences_generic method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequences_generic.an_element"]], "closed_form() (sage.rings.cfinite_sequence.cfinitesequence method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequence.closed_form"]], "coefficients() (sage.rings.cfinite_sequence.cfinitesequence method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequence.coefficients"]], "denominator() (sage.rings.cfinite_sequence.cfinitesequence method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequence.denominator"]], "fraction_field() (sage.rings.cfinite_sequence.cfinitesequences_generic method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequences_generic.fraction_field"]], "from_recurrence() (sage.rings.cfinite_sequence.cfinitesequences_generic method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequences_generic.from_recurrence"]], "gen() (sage.rings.cfinite_sequence.cfinitesequences_generic method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequences_generic.gen"]], "guess() (sage.rings.cfinite_sequence.cfinitesequences_generic method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequences_generic.guess"]], "ngens() (sage.rings.cfinite_sequence.cfinitesequences_generic method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequences_generic.ngens"]], "numerator() (sage.rings.cfinite_sequence.cfinitesequence method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequence.numerator"]], "ogf() (sage.rings.cfinite_sequence.cfinitesequence method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequence.ogf"]], "polynomial_ring() (sage.rings.cfinite_sequence.cfinitesequences_generic method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequences_generic.polynomial_ring"]], "recurrence_repr() (sage.rings.cfinite_sequence.cfinitesequence method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequence.recurrence_repr"]], "sage.rings.cfinite_sequence": [[369, "module-sage.rings.cfinite_sequence"]], "series() (sage.rings.cfinite_sequence.cfinitesequence method)": [[369, "sage.rings.cfinite_sequence.CFiniteSequence.series"]]}})