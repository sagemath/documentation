Search.setIndex({"docnames": ["index", "sage/groups/abelian_gps/abelian_aut", "sage/groups/abelian_gps/abelian_group", "sage/groups/abelian_gps/abelian_group_element", "sage/groups/abelian_gps/abelian_group_gap", "sage/groups/abelian_gps/abelian_group_morphism", "sage/groups/abelian_gps/dual_abelian_group", "sage/groups/abelian_gps/dual_abelian_group_element", "sage/groups/abelian_gps/element_base", "sage/groups/abelian_gps/values", "sage/groups/additive_abelian/additive_abelian_group", "sage/groups/additive_abelian/additive_abelian_wrapper", "sage/groups/affine_gps/affine_group", "sage/groups/affine_gps/euclidean_group", "sage/groups/affine_gps/group_element", "sage/groups/artin", "sage/groups/braid", "sage/groups/cactus_group", "sage/groups/class_function", "sage/groups/conjugacy_classes", "sage/groups/cubic_braid", "sage/groups/finitely_presented", "sage/groups/finitely_presented_named", "sage/groups/free_group", "sage/groups/generic", "sage/groups/group", "sage/groups/group_exp", "sage/groups/group_semidirect_product", "sage/groups/groups_catalog", "sage/groups/indexed_free_group", "sage/groups/kernel_subgroup", "sage/groups/libgap_group", "sage/groups/libgap_mixin", "sage/groups/libgap_morphism", "sage/groups/libgap_wrapper", "sage/groups/lie_gps/nilpotent_lie_group", "sage/groups/matrix_gps/binary_dihedral", "sage/groups/matrix_gps/catalog", "sage/groups/matrix_gps/coxeter_group", "sage/groups/matrix_gps/finitely_generated", "sage/groups/matrix_gps/finitely_generated_gap", "sage/groups/matrix_gps/group_element", "sage/groups/matrix_gps/group_element_gap", "sage/groups/matrix_gps/heisenberg", "sage/groups/matrix_gps/homset", "sage/groups/matrix_gps/isometries", "sage/groups/matrix_gps/linear", "sage/groups/matrix_gps/linear_gap", "sage/groups/matrix_gps/matrix_group", "sage/groups/matrix_gps/matrix_group_gap", "sage/groups/matrix_gps/morphism", "sage/groups/matrix_gps/named_group", "sage/groups/matrix_gps/named_group_gap", "sage/groups/matrix_gps/orthogonal", "sage/groups/matrix_gps/orthogonal_gap", "sage/groups/matrix_gps/symplectic", "sage/groups/matrix_gps/symplectic_gap", "sage/groups/matrix_gps/unitary", "sage/groups/matrix_gps/unitary_gap", "sage/groups/misc_gps/argument_groups", "sage/groups/misc_gps/imaginary_groups", "sage/groups/misc_gps/misc_groups", "sage/groups/pari_group", "sage/groups/perm_gps/constructor", "sage/groups/perm_gps/cubegroup", "sage/groups/perm_gps/partn_ref/canonical_augmentation", "sage/groups/perm_gps/partn_ref/data_structures", "sage/groups/perm_gps/partn_ref/refinement_graphs", "sage/groups/perm_gps/partn_ref/refinement_lists", "sage/groups/perm_gps/partn_ref/refinement_matrices", "sage/groups/perm_gps/permgroup", "sage/groups/perm_gps/permgroup_element", "sage/groups/perm_gps/permgroup_morphism", "sage/groups/perm_gps/permgroup_named", "sage/groups/perm_gps/permutation_groups_catalog", "sage/groups/perm_gps/symgp_conjugacy_class", "sage/groups/raag", "sage/groups/semimonomial_transformations/semimonomial_transformation", "sage/groups/semimonomial_transformations/semimonomial_transformation_group"], "filenames": ["index.rst", "sage/groups/abelian_gps/abelian_aut.rst", "sage/groups/abelian_gps/abelian_group.rst", "sage/groups/abelian_gps/abelian_group_element.rst", "sage/groups/abelian_gps/abelian_group_gap.rst", "sage/groups/abelian_gps/abelian_group_morphism.rst", "sage/groups/abelian_gps/dual_abelian_group.rst", "sage/groups/abelian_gps/dual_abelian_group_element.rst", "sage/groups/abelian_gps/element_base.rst", "sage/groups/abelian_gps/values.rst", "sage/groups/additive_abelian/additive_abelian_group.rst", "sage/groups/additive_abelian/additive_abelian_wrapper.rst", "sage/groups/affine_gps/affine_group.rst", "sage/groups/affine_gps/euclidean_group.rst", "sage/groups/affine_gps/group_element.rst", "sage/groups/artin.rst", "sage/groups/braid.rst", "sage/groups/cactus_group.rst", "sage/groups/class_function.rst", "sage/groups/conjugacy_classes.rst", "sage/groups/cubic_braid.rst", "sage/groups/finitely_presented.rst", "sage/groups/finitely_presented_named.rst", "sage/groups/free_group.rst", "sage/groups/generic.rst", "sage/groups/group.rst", "sage/groups/group_exp.rst", "sage/groups/group_semidirect_product.rst", "sage/groups/groups_catalog.rst", "sage/groups/indexed_free_group.rst", "sage/groups/kernel_subgroup.rst", "sage/groups/libgap_group.rst", "sage/groups/libgap_mixin.rst", "sage/groups/libgap_morphism.rst", "sage/groups/libgap_wrapper.rst", "sage/groups/lie_gps/nilpotent_lie_group.rst", "sage/groups/matrix_gps/binary_dihedral.rst", "sage/groups/matrix_gps/catalog.rst", "sage/groups/matrix_gps/coxeter_group.rst", "sage/groups/matrix_gps/finitely_generated.rst", "sage/groups/matrix_gps/finitely_generated_gap.rst", "sage/groups/matrix_gps/group_element.rst", "sage/groups/matrix_gps/group_element_gap.rst", "sage/groups/matrix_gps/heisenberg.rst", "sage/groups/matrix_gps/homset.rst", "sage/groups/matrix_gps/isometries.rst", "sage/groups/matrix_gps/linear.rst", "sage/groups/matrix_gps/linear_gap.rst", "sage/groups/matrix_gps/matrix_group.rst", "sage/groups/matrix_gps/matrix_group_gap.rst", "sage/groups/matrix_gps/morphism.rst", "sage/groups/matrix_gps/named_group.rst", "sage/groups/matrix_gps/named_group_gap.rst", "sage/groups/matrix_gps/orthogonal.rst", "sage/groups/matrix_gps/orthogonal_gap.rst", "sage/groups/matrix_gps/symplectic.rst", "sage/groups/matrix_gps/symplectic_gap.rst", "sage/groups/matrix_gps/unitary.rst", "sage/groups/matrix_gps/unitary_gap.rst", "sage/groups/misc_gps/argument_groups.rst", "sage/groups/misc_gps/imaginary_groups.rst", "sage/groups/misc_gps/misc_groups.rst", "sage/groups/pari_group.rst", "sage/groups/perm_gps/constructor.rst", "sage/groups/perm_gps/cubegroup.rst", "sage/groups/perm_gps/partn_ref/canonical_augmentation.rst", "sage/groups/perm_gps/partn_ref/data_structures.rst", "sage/groups/perm_gps/partn_ref/refinement_graphs.rst", "sage/groups/perm_gps/partn_ref/refinement_lists.rst", "sage/groups/perm_gps/partn_ref/refinement_matrices.rst", "sage/groups/perm_gps/permgroup.rst", "sage/groups/perm_gps/permgroup_element.rst", "sage/groups/perm_gps/permgroup_morphism.rst", "sage/groups/perm_gps/permgroup_named.rst", "sage/groups/perm_gps/permutation_groups_catalog.rst", "sage/groups/perm_gps/symgp_conjugacy_class.rst", "sage/groups/raag.rst", "sage/groups/semimonomial_transformations/semimonomial_transformation.rst", "sage/groups/semimonomial_transformations/semimonomial_transformation_group.rst"], "titles": ["Groups", "Automorphisms of abelian groups", "Multiplicative Abelian Groups", "Abelian group elements", "Finitely generated abelian groups with GAP.", "Homomorphisms of abelian groups", "Dual groups of Finite Multiplicative Abelian Groups", "Elements (characters) of the dual group of a finite Abelian group", "Base class for abelian group elements", "Multiplicative Abelian Groups With Values", "Additive Abelian Groups", "Wrapper class for abelian groups", "Affine Groups", "Euclidean Groups", "Elements of Affine Groups", "Artin Groups", "Braid groups", "Cactus Groups", "Class functions of groups.", "Conjugacy classes of groups", "Cubic Braid Groups", "Finitely Presented Groups", "Named Finitely Presented Groups", "Free Groups", "Miscellaneous generic functions", "Base class for groups", "Functor that converts a commutative additive group into a multiplicative group.", "Semidirect product of groups", "Examples of Groups", "Indexed Free Groups", "Kernel Subgroups", "Generic LibGAP-based Group", "Mix-in Class for GAP-based Groups", "Group homomorphisms for groups with a GAP backend", "LibGAP-based Groups", "Nilpotent Lie groups", "Binary Dihedral Groups", "Library of Interesting Groups", "Coxeter Groups As Matrix Groups", "Finitely Generated Matrix Groups", "Finitely Generated Matrix Groups with GAP", "Matrix Group Elements", "Matrix group elements implemented in GAP", "Heisenberg Group", "Matrix Group Homsets", "Groups of isometries", "Linear Groups", "Linear Groups with GAP", "Base classes for Matrix Groups", "Matrix group over a ring that GAP understands", "Homomorphisms Between Matrix Groups", "Base for Classical Matrix Groups", "Base for Classical Matrix Groups with GAP", "Orthogonal Linear Groups", "Orthogonal Linear Groups with GAP", "Symplectic Linear Groups", "Symplectic Linear Groups with GAP", "Unitary Groups <span class=\"math notranslate nohighlight\">\\(GU(n,q)\\)</span> and <span class=\"math notranslate nohighlight\">\\(SU(n,q)\\)</span>", "Unitary Groups <span class=\"math notranslate nohighlight\">\\(GU(n,q)\\)</span> and <span class=\"math notranslate nohighlight\">\\(SU(n,q)\\)</span> with GAP", "Groups of elements representing (complex) arguments.", "Groups of imaginary elements", "Miscellaneous Groups", "PARI Groups", "Constructor for permutations", "Rubik\u2019s cube group functions", "Canonical augmentation", "Data structures", "Graph-theoretic partition backtrack functions", "Partition backtrack functions for lists \u2013 a simple example of using partn_ref", "Partition backtrack functions for matrices", "Permutation groups", "Permutation group elements", "Permutation group homomorphisms", "\u201cNamed\u201d Permutation groups (such as the symmetric group, S_n)", "Catalog of permutation groups", "Conjugacy Classes Of The Symmetric Group", "Right-Angled Artin Groups", "Elements of a semimonomial transformation group", "Semimonomial transformation group"], "terms": {"exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "base": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 33, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 62, 64, 65, 67, 69, 70, 71, 72, 73, 76, 77, 78], "homomorph": [0, 2, 4, 6, 9, 17, 21, 23, 26, 27, 30, 64, 70], "gap": [0, 1, 2, 3, 5, 7, 12, 14, 16, 18, 19, 21, 22, 23, 24, 25, 31, 34, 38, 39, 41, 45, 46, 48, 50, 51, 53, 55, 57, 62, 63, 64, 66, 70, 71, 72, 73, 77, 78], "backend": [0, 45], "libgap": [0, 1, 4, 16, 18, 21, 23, 32, 33, 39, 40, 41, 42, 44, 46, 49, 50, 52, 53, 55, 57, 70, 71, 73], "gener": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 41, 42, 43, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 58, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 76, 78], "mix": 0, "pari": [0, 2, 24, 57, 70], "miscellan": [0, 28], "function": [0, 2, 3, 5, 6, 10, 11, 16, 19, 20, 21, 22, 23, 27, 32, 33, 34, 39, 40, 41, 42, 45, 50, 51, 57, 65, 70, 71, 72, 73], "free": [0, 2, 10, 12, 13, 15, 16, 17, 21, 22, 28, 33, 34, 35, 45, 64, 65, 76], "finit": [0, 1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 28, 32, 33, 34, 35, 36, 38, 41, 42, 45, 46, 48, 49, 51, 53, 55, 56, 57, 64, 65, 70, 72, 73, 76, 77, 78], "present": [0, 2, 15, 16, 20, 23, 24, 25, 28, 33, 36, 49, 70, 73, 76], "name": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 20, 21, 23, 29, 35, 40, 51, 52, 64, 67, 70, 76], "braid": [0, 28], "cubic": 0, "index": [0, 2, 9, 15, 16, 17, 18, 20, 23, 24, 34, 38, 53, 64, 71, 73, 76, 77, 78], "artin": [0, 16, 20], "right": [0, 2, 15, 16, 17, 23, 24, 27, 35, 38, 41, 42, 43, 45, 53, 55, 57, 64, 65, 70, 71, 77, 78], "angl": [0, 15, 17, 64], "cactu": [0, 22, 28, 30], "functor": [0, 18, 27], "convert": [0, 2, 4, 7, 14, 21, 22, 23, 30, 34, 35, 38, 41, 42, 50, 63, 70, 71], "commut": [0, 2, 6, 9, 12, 13, 17, 21, 25, 29, 33, 35, 38, 64, 70, 73, 76], "addit": [0, 11, 12, 13, 15, 20, 24, 25, 53, 57, 63, 64, 65, 67, 70, 71, 76], "multipl": [0, 3, 5, 7, 8, 12, 14, 16, 17, 23, 24, 27, 34, 35, 43, 53, 70, 71, 73, 77, 78], "semidirect": [0, 12, 13, 21, 70, 73, 77, 78], "product": [0, 2, 10, 12, 13, 18, 21, 24, 26, 34, 35, 38, 39, 42, 59, 64, 70, 71, 73, 77, 78], "semimonomi": 0, "transform": [0, 12, 13, 21], "element": [0, 1, 2, 4, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 43, 45, 48, 49, 50, 51, 52, 54, 57, 63, 64, 67, 70, 73, 75, 76, 78], "kernel": [0, 2, 5, 16, 17, 33, 72, 76], "subgroup": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 18, 20, 21, 23, 24, 25, 27, 32, 33, 34, 35, 39, 40, 43, 45, 48, 49, 53, 64, 70, 71, 72, 73, 76], "conjugaci": [0, 1, 16, 18, 32, 70, 73], "automorph": [0, 4, 16, 21, 27, 35, 65, 67, 69, 70, 73, 77, 78], "With": [0, 10, 70], "valu": [0, 2, 16, 17, 18, 20, 21, 22, 24, 27, 32, 35, 38, 49, 53, 65, 67, 70, 73], "dual": [0, 2, 35, 38], "charact": [0, 18, 32, 40, 70, 73], "wrapper": [0, 2, 4, 16, 18, 19, 21, 23, 27, 42, 59, 70, 71, 73], "repres": [0, 8, 12, 13, 14, 15, 16, 19, 21, 23, 24, 29, 32, 38, 46, 53, 55, 57, 63, 64, 67, 70, 71, 73, 75], "complex": [0, 6, 16, 20, 24, 39, 66, 70, 73], "argument": [0, 2, 6, 11, 12, 13, 20, 23, 24, 39, 40, 51, 53, 63, 65, 70, 72], "imaginari": 0, "catalog": [0, 22], "constructor": [0, 23, 27, 34, 51, 53, 55, 57, 70], "symmetr": [0, 16, 17, 18, 19, 22, 28, 30, 45, 53, 54, 63, 70, 71], "s_n": [0, 17, 22, 65, 77, 78], "rubik": [0, 71], "": [0, 1, 2, 4, 5, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 38, 39, 40, 41, 42, 45, 48, 49, 59, 60, 63, 65, 67, 70, 71, 72, 73, 75, 76, 77, 78], "cube": [0, 67, 71], "Of": [0, 2], "The": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 76, 77, 78], "librari": [0, 32, 34, 40, 73], "interest": [0, 64, 70], "over": [0, 1, 2, 3, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 48, 51, 53, 55, 56, 57, 60, 64, 65, 70, 71, 72, 73, 75, 76, 77, 78], "ring": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 38, 39, 40, 41, 42, 43, 45, 46, 48, 51, 52, 53, 55, 56, 57, 59, 60, 70, 71, 72, 73, 76, 77, 78], "understand": [0, 21, 23, 70], "implement": [0, 1, 2, 4, 7, 9, 10, 11, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 48, 49, 51, 65, 66, 70, 71, 73, 74, 78], "between": [0, 5, 10, 11, 15, 16, 20, 24, 33, 34, 38, 64, 67, 69, 70, 72, 76], "homset": [0, 26, 33], "binari": [0, 22, 24], "dihedr": [0, 21, 22, 24, 28, 39, 49, 70, 72, 73], "coxet": [0, 15, 17, 20, 28, 73, 76], "As": [0, 8, 12, 13, 14, 17, 70, 73], "linear": [0, 11, 12, 13, 14, 18, 24, 27, 32, 34, 39, 40, 42, 45, 48, 49, 51, 70, 72, 73], "orthogon": [0, 17, 18, 45, 51], "isometri": 0, "symplect": [0, 20, 33, 51, 73], "unitari": [0, 16, 20, 32, 33, 51, 73], "gu": [0, 20, 28, 32, 33, 51], "n": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 34, 36, 40, 42, 43, 45, 46, 53, 55, 59, 60, 63, 65, 66, 67, 69, 70, 71, 73, 75, 76, 77, 78], "q": [0, 4, 10, 11, 16, 17, 21, 22, 24, 35, 39, 40, 45, 53, 54, 55, 59, 67, 70, 71, 73], "su": [0, 28, 32, 48, 51], "heisenberg": [0, 22, 32, 35], "euclidean": [0, 28], "nilpot": [0, 28, 32, 70], "canon": [0, 16, 17, 18, 20, 22, 38, 39, 67, 69, 70], "augment": 0, "data": [0, 2, 9, 15, 17, 38, 53, 59, 65, 69, 73], "structur": [0, 3, 9, 11, 15, 21, 24, 27, 32, 42, 48, 49, 65, 70, 73, 76], "graph": [0, 15, 16, 22, 38, 41, 45, 46, 66, 69, 70, 73, 76], "theoret": [0, 5, 17, 63, 70, 72], "backtrack": 0, "list": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 32, 33, 34, 35, 38, 39, 40, 41, 42, 45, 48, 49, 63, 64, 66, 67, 69, 70, 71, 73, 75, 76], "simpl": [0, 6, 15, 16, 32, 38, 65, 67, 70, 73, 76], "us": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 46, 48, 49, 50, 52, 53, 55, 57, 59, 63, 64, 65, 67, 70, 71, 72, 73, 77], "partn_ref": [0, 65, 66, 67, 69], "matric": [0, 1, 12, 14, 16, 17, 19, 21, 22, 24, 28, 34, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 55, 57, 70, 73, 78], "classic": [0, 20, 73], "modul": [0, 2, 4, 9, 10, 12, 13, 14, 18, 19, 20, 21, 24, 25, 34, 40, 45, 49, 51, 63, 65, 66, 70, 73], "search": [0, 67, 70], "page": [0, 16], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 76, 78], "sage": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78], "abelian_gp": [1, 2, 3, 4, 5, 6, 7, 8, 9, 33], "abelian_group_gap": [1, 4, 33], "import": [1, 2, 3, 4, 5, 6, 7, 10, 11, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 39, 41, 44, 45, 48, 50, 51, 52, 57, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75], "abeliangroupgap": [1, 4, 33], "g": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 57, 62, 63, 64, 67, 70, 71, 72, 73, 75, 76, 77, 78], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "6": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 32, 33, 34, 38, 39, 40, 45, 46, 49, 51, 53, 54, 57, 59, 62, 63, 64, 67, 69, 70, 71, 72, 73], "autg": 1, "aut": [1, 4, 27, 70, 77, 78], "act": [1, 12, 13, 15, 21, 22, 27, 38, 45, 51, 53, 54, 64, 67, 70, 71, 73, 76], "domain": [1, 5, 9, 10, 11, 12, 13, 18, 20, 33, 51, 59, 63, 67, 70, 71, 72, 73, 75], "an_el": [1, 4, 7, 12, 15, 16, 19, 20, 26, 27, 30, 32, 33, 34, 41, 45, 48, 73, 77], "f": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 48, 49, 53, 55, 56, 57, 62, 64, 70, 71, 72, 75, 76, 77, 78], "pcg": [1, 4], "f1": [1, 2, 4, 5, 16, 21, 23, 33, 34, 62], "f2": [1, 2, 4, 5, 9, 16, 21, 23, 33, 34], "f3": [1, 2, 4, 16, 21, 33, 34], "Or": [1, 21], "anyth": [1, 2, 7, 11, 12, 23, 25, 33, 41, 63], "coercibl": [1, 4], "its": [1, 2, 6, 9, 14, 16, 20, 21, 24, 26, 27, 32, 33, 34, 35, 48, 63, 65, 67, 69, 70, 71, 72, 73], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 34, 35, 38, 39, 40, 41, 42, 45, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 64, 70, 71, 72, 73, 75, 76, 78], "abeliangroup": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 25, 29, 73], "f0": [1, 2, 9, 16], "additiveabeliangroup": [1, 10, 11], "1": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "0": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78], "we": [1, 2, 4, 9, 10, 11, 12, 13, 16, 17, 20, 21, 22, 23, 24, 33, 34, 38, 40, 42, 45, 46, 48, 49, 64, 67, 69, 70, 71, 73, 75, 76], "can": [1, 2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 49, 51, 59, 63, 64, 65, 67, 70, 71, 72, 73], "comput": [1, 2, 9, 11, 16, 17, 19, 21, 23, 24, 32, 39, 40, 41, 46, 63, 64, 66, 67, 69, 70, 72, 73], "conjugacy_classes_repres": [1, 32, 39, 45, 46, 51, 70, 73], "order": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 53, 55, 57, 59, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 75, 76, 78], "12": [1, 2, 3, 4, 11, 12, 13, 14, 16, 20, 21, 24, 32, 33, 36, 38, 39, 40, 41, 46, 48, 53, 57, 64, 67, 69, 70, 71, 73, 77], "creat": [1, 2, 6, 10, 11, 12, 13, 16, 20, 21, 22, 23, 26, 27, 28, 32, 35, 38, 39, 45, 59, 64, 70, 71, 72, 73, 76], "do": [1, 4, 12, 13, 14, 16, 17, 18, 20, 21, 33, 39, 41, 42, 63, 73], "same": [1, 2, 4, 7, 9, 10, 16, 20, 21, 22, 23, 24, 27, 31, 38, 39, 40, 49, 63, 64, 65, 67, 70, 71, 73, 76, 78], "them": [1, 9, 21, 23, 38, 41, 64, 70], "gen": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 19, 20, 21, 23, 24, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 57, 63, 67, 70, 71, 72, 73, 76, 77, 78], "onli": [1, 2, 5, 9, 10, 16, 17, 19, 20, 21, 23, 24, 25, 32, 34, 40, 48, 53, 67, 70, 71, 72, 73, 76, 78], "ar": [1, 2, 3, 4, 6, 8, 9, 10, 11, 15, 16, 17, 19, 20, 21, 22, 23, 24, 27, 28, 29, 32, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 53, 55, 57, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76], "support": [1, 2, 6, 21, 34, 39, 41, 71, 78], "option": [1, 2, 4, 5, 6, 9, 16, 17, 20, 21, 22, 23, 24, 27, 35, 38, 39, 40, 48, 49, 51, 53, 55, 57, 63, 64, 67, 69, 70, 73, 75, 77], "gap_package_polycycl": [1, 2, 4, 5], "traceback": [1, 2, 11, 15, 17, 19, 20, 21, 22, 24, 25, 32, 33, 35, 38, 39, 40, 41, 42, 53, 55, 57, 60, 70, 73], "most": [1, 2, 11, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 32, 33, 35, 38, 39, 40, 41, 42, 53, 55, 57, 60, 67, 69, 70, 73], "recent": [1, 2, 11, 15, 17, 19, 20, 21, 22, 24, 25, 32, 33, 35, 38, 39, 40, 41, 42, 53, 55, 57, 60, 70, 73], "call": [1, 2, 4, 7, 11, 15, 17, 19, 20, 21, 22, 23, 24, 25, 32, 33, 34, 35, 38, 39, 40, 41, 42, 53, 55, 57, 60, 63, 64, 65, 70, 71, 73, 77], "last": [1, 2, 11, 15, 16, 17, 19, 20, 21, 22, 24, 25, 32, 33, 35, 38, 39, 40, 41, 42, 53, 55, 57, 60, 64, 70, 73], "valueerror": [1, 2, 11, 15, 16, 17, 20, 21, 22, 24, 33, 39, 42, 55, 57, 60, 70, 73], "author": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 53, 55, 57, 59, 60, 64, 70, 71, 72, 73, 75, 76, 77, 78], "simon": [1, 4, 33, 39, 40, 45, 48, 70], "brandhorst": [1, 4, 33, 45], "2018": [1, 4, 15, 16, 33, 35, 39, 45, 48, 50, 51, 53, 55, 57, 59, 60, 70, 71, 76], "02": [1, 2, 3, 5, 15, 20, 24, 33, 36, 45, 70, 71, 72, 76], "17": [1, 4, 16, 32, 33, 40, 62, 64, 67, 70, 71, 73], "initi": [1, 4, 5, 10, 12, 13, 15, 17, 18, 20, 21, 22, 26, 27, 29, 30, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 48, 53, 55, 57, 59, 63, 70, 76, 77, 78], "version": [1, 4, 5, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 29, 30, 33, 35, 36, 38, 39, 40, 41, 43, 44, 46, 48, 53, 55, 57, 59, 64, 70, 71, 72, 76, 77, 78], "abelian_aut": 1, "abeliangroupautomorph": 1, "parent": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 30, 32, 33, 34, 35, 39, 40, 41, 42, 44, 45, 46, 53, 55, 57, 59, 60, 63, 65, 70, 71, 73, 76, 77], "x": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 43, 44, 45, 48, 49, 50, 53, 62, 64, 65, 70, 71, 72, 73, 75, 76, 77], "check": [1, 2, 4, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 24, 33, 34, 39, 41, 42, 45, 48, 49, 53, 57, 63, 64, 65, 70, 72, 73, 75, 78], "true": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 59, 62, 63, 64, 67, 69, 70, 71, 72, 73, 75, 77, 78], "elementlibgap": [1, 4, 23, 31, 34, 42], "input": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 55, 57, 59, 60, 63, 64, 65, 67, 69, 70, 71, 73, 75, 76], "abeliangroupautomorphismgroup_gap": 1, "bool": [1, 4, 14, 16, 41, 42, 45], "default": [1, 2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 27, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 48, 49, 53, 55, 57, 59, 63, 64, 69, 70, 71, 73, 75], "i": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78], "an": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 48, 49, 51, 53, 54, 55, 57, 59, 60, 63, 64, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77], "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78], "4": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 62, 63, 64, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78], "5": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 53, 55, 56, 57, 59, 62, 63, 64, 67, 69, 70, 71, 72, 73, 75, 76, 78], "matrix": [1, 2, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 27, 28, 32, 33, 34, 36, 37, 43, 45, 46, 53, 54, 55, 56, 57, 58, 69, 70, 71, 73, 78], "return": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "defin": [1, 2, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 32, 33, 34, 35, 38, 39, 40, 41, 45, 48, 49, 51, 53, 54, 55, 57, 59, 65, 70, 71, 73, 76, 77, 78], "self": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 46, 48, 49, 53, 62, 64, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78], "th": [1, 2, 6, 8, 9, 12, 17, 18, 20, 21, 23, 34, 36, 38, 39, 40, 70, 73, 76], "row": [1, 2, 14, 21, 22, 32, 48, 51, 52, 69, 70, 78], "expon": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 16, 32, 42, 59, 60, 70, 71, 73, 76], "vector": [1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 16, 17, 26, 27, 35, 38, 40, 43, 51, 54, 70, 73, 77, 78], "imag": [1, 5, 15, 16, 17, 20, 21, 23, 27, 33, 60, 63, 67, 69, 70, 71, 72], "output": [1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 32, 33, 34, 38, 39, 40, 41, 42, 45, 48, 49, 51, 53, 54, 55, 56, 57, 58, 63, 64, 67, 70, 71, 73, 75], "squar": [1, 16, 20, 39, 51, 53, 55, 57, 58, 64, 73], "integ": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 55, 57, 60, 64, 65, 67, 70, 71, 73], "f4": [1, 2, 20, 21, 33, 34], "compar": [1, 2, 10, 11, 66], "abeliangroupautomorphismgroup": 1, "full": [1, 4, 12, 14, 20, 21, 24, 41, 42, 48, 49, 70, 73], "instanc": [1, 2, 7, 20, 26, 33, 45, 48, 49, 51, 53, 55, 57, 59, 70, 72, 73], "abeliangroup_gap": [1, 4], "equival": [1, 16, 21, 38, 53, 70], "aut1": 1, "alia": [1, 2, 4, 6, 9, 10, 11, 12, 15, 16, 20, 21, 23, 24, 25, 26, 27, 31, 33, 34, 42, 48, 49, 53, 59, 60, 70, 71, 73, 78], "gap_group": [1, 70, 73], "categori": [1, 2, 4, 6, 9, 21, 26, 27, 29, 33, 39, 40, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 73], "ambient": [1, 2, 4, 10, 11, 12, 13, 17, 20, 26, 30, 34, 40, 48, 49, 63, 70, 71], "none": [1, 2, 4, 9, 11, 15, 16, 17, 20, 21, 23, 24, 27, 29, 33, 34, 35, 38, 39, 40, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 67, 69, 70, 72, 73, 75, 76], "cachedrepresent": [1, 51, 73], "groupmixinlibgap": [1, 4, 21, 31, 32, 49], "parentlibgap": [1, 4, 21, 23, 31, 34, 49, 70], "construct": [1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 39, 40, 42, 48, 51, 52, 57, 64, 67, 70, 71, 72, 73, 75], "directli": [1, 2, 4, 12, 16, 31, 33, 34, 48, 70, 77], "libgap_par": [1, 34], "deriv": [1, 2, 9, 10, 21, 23, 25, 31, 32, 34, 48, 49, 70], "ha": [1, 2, 3, 7, 8, 9, 11, 15, 16, 17, 20, 21, 22, 24, 34, 35, 38, 39, 40, 42, 48, 49, 59, 64, 65, 67, 70, 71, 73, 75, 76], "been": [1, 2, 11, 20, 34, 48, 49, 64], "automorphismgroupabeliangroup": 1, "covering_matrix_r": 1, "cover": [1, 4, 10], "time": [1, 2, 6, 16, 18, 20, 21, 22, 23, 24, 27, 32, 39, 40, 45, 46, 49, 51, 53, 55, 57, 64, 67, 70, 71, 73, 77, 78], "zz": [1, 2, 4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 26, 27, 29, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 48, 51, 53, 59, 60, 70, 73, 76], "where": [1, 2, 4, 9, 10, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 29, 32, 34, 36, 38, 40, 43, 48, 51, 53, 59, 64, 65, 67, 70, 71, 73, 75, 76, 78], "number": [1, 2, 6, 9, 11, 15, 16, 18, 20, 21, 22, 23, 25, 29, 32, 34, 38, 39, 40, 41, 48, 51, 52, 53, 59, 62, 63, 65, 69, 70, 71, 73, 75, 76, 78], "independ": [1, 2, 10, 11, 35], "matrixspac": [1, 12, 14, 32, 39, 40, 41, 42, 46, 48], "dens": [1, 12, 14, 41, 42, 48, 67], "is_subgroup_of": [1, 4], "consid": [1, 2, 4, 12, 16, 20, 23, 24, 36, 67, 70, 71, 73, 76], "s1": [1, 4, 15, 16, 21, 27, 65, 70, 73], "s2": [1, 4, 15, 16, 20, 21, 26, 27, 30, 65, 70, 73], "fals": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 16, 19, 20, 21, 23, 24, 25, 27, 32, 34, 38, 39, 40, 41, 44, 45, 46, 48, 49, 53, 55, 57, 59, 63, 64, 67, 68, 70, 71, 73], "abeliangroupautomorphismgroup_subgroup": 1, "thei": [1, 2, 16, 17, 20, 21, 23, 24, 34, 38, 39, 64, 65, 67, 70, 73, 76], "instead": [1, 2, 4, 6, 8, 9, 12, 13, 16, 19, 24, 33, 44, 48, 50, 70, 71, 72, 77], "tupl": [1, 2, 3, 4, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 23, 24, 32, 34, 35, 39, 42, 48, 49, 63, 67, 70, 71, 73, 75, 78], "let": [2, 6, 12, 13, 15, 16, 17, 18, 21, 23, 28, 30, 36, 38, 40, 43, 45, 70, 71, 73, 75, 76], "you": [2, 4, 6, 9, 12, 13, 16, 21, 22, 23, 24, 31, 32, 34, 40, 41, 48, 63, 64, 70, 71, 73], "form": [2, 9, 10, 15, 16, 17, 20, 21, 22, 24, 26, 27, 38, 40, 43, 45, 49, 51, 53, 54, 55, 56, 57, 58, 64, 70, 71, 73, 76], "r": [2, 10, 11, 16, 17, 20, 21, 22, 23, 24, 34, 40, 43, 46, 51, 53, 55, 57, 59, 62, 64, 70, 71, 72, 76, 77, 78], "oplu": [2, 17], "zz_": [2, 22], "k_1": 2, "cdot": [2, 11, 15, 16, 20, 21, 22, 23, 35, 59, 64, 70, 73, 75, 77, 78], "k_t": 2, "It": [2, 4, 9, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 32, 40, 65, 70, 73, 75], "customari": 2, "denot": [2, 6, 9, 17, 21, 24, 26, 27, 32, 64, 70], "infinit": [2, 4, 8, 9, 11, 15, 16, 19, 20, 21, 22, 24, 34, 40, 45, 46, 61, 70, 73], "cyclic": [2, 9, 10, 18, 21, 22, 24, 25, 28, 34, 67, 70, 72, 73], "have": [2, 3, 7, 15, 16, 17, 20, 21, 24, 31, 32, 33, 34, 38, 39, 41, 42, 45, 48, 49, 51, 52, 57, 63, 65, 70, 73, 76], "so": [2, 7, 9, 12, 13, 16, 17, 18, 19, 20, 21, 24, 27, 28, 38, 39, 48, 53, 54, 57, 64, 70, 73, 76, 77, 78], "written": [2, 3, 9, 11, 18, 42, 70, 73], "vec": 2, "k": [2, 12, 15, 17, 18, 21, 22, 24, 30, 33, 35, 36, 39, 40, 42, 45, 62, 70, 73, 76], "dot": [2, 9, 20, 23, 63, 70, 71], "zero": [2, 9, 10, 14, 22, 23, 40, 67], "t": [2, 3, 10, 11, 16, 17, 18, 20, 21, 23, 24, 27, 39, 40, 41, 42, 43, 54, 64, 66, 67, 70, 71, 72, 73], "non": [2, 3, 9, 10, 16, 17, 19, 21, 23, 24, 25, 38, 40, 49, 53, 57, 64, 70, 71, 73], "To": [2, 4, 7, 9, 16, 20, 21, 23, 30, 33, 34, 40, 70, 72], "either": [2, 9, 15, 16, 23, 24, 25, 27, 40, 63, 64, 70, 73], "specifi": [2, 9, 10, 12, 13, 16, 21, 23, 24, 27, 40, 45, 46, 51, 53, 55, 57, 63, 70, 71, 73, 75], "all": [2, 4, 6, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 32, 34, 38, 39, 40, 45, 46, 48, 53, 54, 55, 57, 59, 64, 65, 67, 70, 72, 73, 75, 76, 77, 78], "entri": [2, 8, 16, 20, 22, 23, 29, 38, 57, 69, 70, 73, 77], "togeth": [2, 12, 13, 20, 21, 64, 70, 71, 76], "total": [2, 24, 46], "isomorph": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 20, 21, 22, 23, 24, 26, 32, 39, 40, 48, 49, 53, 65, 66, 67, 68, 69, 70, 73, 76], "z": [2, 6, 7, 10, 11, 15, 16, 20, 22, 23, 24, 26, 34, 35, 36, 40, 43, 50, 59, 60, 64, 70, 71], "c2": [2, 3, 5, 7, 16, 20, 21, 64, 70, 73], "c3": [2, 3, 5, 7, 20, 21, 70, 73], "also": [2, 9, 12, 13, 16, 17, 20, 22, 23, 24, 34, 38, 39, 46, 53, 55, 57, 64, 65, 67, 70, 71, 73, 75, 76, 77, 78], "legal": [2, 64], "correspond": [2, 3, 4, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 33, 36, 46, 48, 51, 53, 55, 57, 62, 65, 70, 71, 73, 76, 77], "neutral": 2, "still": [2, 32, 35, 65, 70, 73], "take": [2, 12, 19, 21, 32, 64, 65, 67, 70, 73], "up": [2, 9, 10, 16, 17, 21, 32, 64, 65, 70, 73, 78], "label": [2, 35, 38, 62, 64, 67, 69], "g0": [2, 16, 21, 23], "g2": [2, 4, 11, 14, 15, 21, 23, 24, 33, 38, 40, 49, 67, 70, 71], "note": [2, 10, 11, 18, 20, 21, 22, 24, 25, 34, 36, 38, 40, 59, 60, 65, 67, 70, 73], "uniqu": [2, 11, 21, 22, 23, 32, 54, 70, 73, 76], "zz_6": [2, 9], "cong": [2, 73, 76], "zz_2": 2, "zz_3": 2, "previous": 2, "invari": [2, 4, 6, 10, 11, 20, 21, 22, 23, 24, 35, 40, 45, 49, 51, 53, 55, 57, 70, 73], "even": [2, 20, 21, 23, 24, 32, 40, 49, 53, 55, 70, 71, 73], "though": [2, 3, 64, 70, 73], "necessarili": [2, 11, 40], "factor": [2, 4, 9, 10, 15, 16, 20, 24, 25, 27, 40, 42, 59, 63, 70, 73], "should": [2, 5, 6, 10, 16, 19, 21, 23, 24, 25, 31, 32, 40, 48, 51, 63, 65, 70, 71, 73, 77], "now": [2, 10, 16, 21, 23, 64, 70, 71, 78], "gens_ord": [2, 4, 6, 9], "j": [2, 6, 11, 15, 16, 17, 20, 21, 23, 25, 33, 39, 60, 64, 65, 67, 69, 70, 72, 73, 76], "c4": [2, 3, 5, 9, 20, 21, 70, 76], "deprec": [2, 44, 50, 70], "elementary_divisor": [2, 4], "rang": [2, 8, 9, 15, 16, 17, 24, 29, 32, 38, 41, 64, 67, 70, 73], "ngen": [2, 6, 21, 23, 34, 39, 70, 76], "print": [2, 6, 9, 10, 16, 24, 27, 34, 35, 64, 67, 70, 71, 73, 75], "infin": [2, 4, 8, 10, 11, 12, 15, 16, 20, 21, 22, 24, 25, 29, 32, 38, 42, 43, 45, 73], "background": 2, "smith": [2, 10], "normal": [2, 4, 15, 16, 21, 23, 24, 25, 27, 30, 34, 49, 51, 53, 59, 70, 76], "accord": [2, 9, 16, 20, 32, 33, 70], "section": [2, 15, 16, 20, 33, 40], "cohen1": 2, "which": [2, 3, 6, 7, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 36, 38, 40, 42, 48, 51, 53, 54, 55, 57, 59, 64, 65, 69, 70, 71, 72, 73, 75, 76, 77], "exist": [2, 11, 16, 20, 21, 24, 33, 42, 70], "exact": [2, 17, 22], "sequenc": [2, 11, 17, 65, 67, 70], "rightarrow": [2, 45, 70], "ell": [2, 15, 38, 73, 75], "some": [2, 5, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 39, 41, 42, 49, 59, 60, 61, 64, 65, 70, 72, 73, 76], "posit": [2, 10, 16, 18, 20, 21, 22, 23, 24, 25, 27, 36, 38, 40, 42, 43, 46, 53, 55, 57, 64, 70, 71, 73], "leq": [2, 16, 17, 38, 70, 73], "For": [2, 4, 9, 12, 13, 15, 17, 20, 21, 24, 32, 33, 35, 38, 40, 49, 51, 57, 67, 69, 70, 71, 73], "decomposit": [2, 18, 63, 73], "langl": [2, 21, 22, 36, 73, 76], "a_1": [2, 9, 23], "rangl": [2, 21, 22, 36, 73, 76], "a_": [2, 9, 38, 73, 76], "mathrm": [2, 11, 12, 27, 46, 59, 70], "ord": [2, 11, 24], "a_i": [2, 23], "p_i": 2, "c_i": [2, 70], "prime": [2, 10, 12, 13, 21, 22, 24, 51, 57, 70, 73], "size": [2, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 32, 33, 34, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 53, 55, 56, 57, 64, 66, 67, 70, 71, 72, 73, 75, 77, 78], "In": [2, 9, 14, 16, 17, 20, 21, 23, 24, 27, 38, 39, 40, 53, 54, 65, 67, 70, 73, 75, 76], "situat": [2, 24, 63, 70], "phi": [2, 5, 21, 27, 30, 64, 70, 72, 76, 77, 78], "map": [2, 5, 16, 18, 20, 21, 23, 24, 29, 30, 33, 35, 39, 40, 45, 49, 64, 67, 70, 72], "x_1": [2, 12, 13, 23, 35, 40], "x_": [2, 12, 16], "relat": [2, 4, 9, 10, 11, 15, 16, 17, 20, 21, 22, 23, 24, 28, 51, 53, 64, 70, 73, 76], "m": [2, 11, 14, 15, 16, 20, 24, 32, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 53, 54, 55, 57, 64, 65, 66, 69, 70, 73, 78], "whose": [2, 8, 11, 16, 20, 24, 27, 29, 35, 43, 59, 60, 70, 73, 75, 76, 78], "other": [2, 3, 5, 10, 11, 15, 16, 17, 18, 20, 21, 22, 24, 28, 32, 34, 61, 64, 65, 67, 68, 69, 70, 72, 73, 77], "word": [2, 3, 7, 8, 15, 16, 17, 21, 23, 29, 42, 64, 65, 67, 70, 71, 76], "m_": [2, 15, 38], "ij": [2, 15, 17, 38, 73], "diagon": [2, 22, 34, 43, 53], "ii": 2, "b": [2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 38, 40, 41, 42, 45, 48, 63, 64, 67, 70, 71, 73, 75, 76], "subset": [2, 17, 38, 59, 70], "b_1": 2, "f_": [2, 67], "b_m": 2, "phi_b": 2, "y_1": [2, 35], "y_m": 2, "left": [2, 15, 16, 23, 24, 27, 35, 38, 53, 55, 57, 64, 70, 71, 73, 77, 78], "begin": [2, 12, 13, 16, 17, 20, 27, 28, 36, 43, 53, 55, 57], "arrai": [2, 20, 53, 55, 57], "cccc": 2, "11": [2, 3, 6, 7, 11, 12, 13, 14, 16, 20, 33, 38, 40, 64, 67, 69, 70, 71, 73, 75, 77, 78], "1m": 2, "21": [2, 10, 11, 16, 20, 22, 33, 42, 64, 67, 70, 71, 72, 73], "22": [2, 18, 33, 40, 64, 70, 71, 73], "2m": [2, 73], "vdot": 2, "ddot": 2, "end": [2, 9, 12, 13, 16, 17, 20, 21, 27, 36, 43, 53, 55, 57, 65], "regard": [2, 16, 64], "p_1": 2, "c_1": [2, 65, 70], "p_": 2, "c_": [2, 21, 24, 38, 49, 70, 73], "particular": [2, 9, 15, 16, 17, 20, 38, 65, 70, 73], "ker": 2, "If": [2, 3, 8, 9, 10, 12, 13, 16, 19, 20, 21, 23, 24, 27, 31, 32, 33, 34, 35, 38, 40, 46, 48, 49, 51, 62, 64, 65, 67, 70, 71, 73], "snf": 2, "s_i": [2, 15, 20, 38, 73, 76], "diag": 2, "s_1": [2, 20], "s_2": 2, "s_3": [2, 20, 32, 70], "s_r": 2, "determinant": 2, "divisor": [2, 4, 16, 73], "rank": [2, 10, 12, 13, 16, 20, 23, 29, 35, 45, 70, 73], "s_": [2, 15, 17, 20, 73], "ani": [2, 6, 11, 16, 21, 24, 32, 35, 48, 64, 65, 70, 73, 75, 76], "prescrib": [2, 6], "geq": [2, 15, 21, 22, 38, 70, 73, 76], "method": [2, 3, 5, 6, 7, 11, 16, 19, 20, 21, 22, 23, 24, 25, 32, 33, 38, 39, 40, 42, 46, 48, 49, 50, 64, 71, 72, 73, 75, 77], "obtain": [2, 6, 7, 14, 15, 16, 20, 21, 40, 41, 42, 64, 67, 70, 73], "arbitrari": [2, 6, 8, 21, 22, 23, 24, 53, 55, 57, 65, 78], "string": [2, 6, 9, 15, 16, 20, 21, 23, 24, 25, 27, 35, 40, 49, 51, 52, 53, 59, 63, 64, 70, 71, 72, 76], "more": [2, 4, 16, 17, 20, 21, 24, 26, 38, 40, 42, 46, 48, 59, 63, 64, 65, 67, 69, 70, 73], "variabl": [2, 16, 17, 21, 40, 46, 53, 55, 57, 65, 70, 73, 76], "syntax": [2, 21, 23, 35, 72], "ident": [2, 4, 10, 16, 17, 20, 21, 24, 25, 26, 27, 29, 33, 34, 35, 40, 41, 43, 45, 48, 53, 54, 70, 72, 73, 76], "case": [2, 4, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 27, 33, 40, 51, 53, 65, 67, 70, 73], "trivial": [2, 4, 8, 10, 11, 15, 16, 21, 22, 25, 29, 32, 34, 40, 48, 70, 71, 73], "represent": [2, 12, 14, 16, 17, 18, 20, 21, 22, 24, 34, 38, 39, 40, 41, 42, 48, 49, 51, 52, 64, 67, 70, 71, 73], "underli": [2, 8, 11, 12, 16, 18, 21, 22, 33, 41, 70, 73, 75, 78], "7": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 25, 26, 27, 29, 32, 33, 34, 38, 39, 40, 42, 46, 48, 49, 53, 54, 55, 57, 64, 67, 70, 71, 72, 73], "abcd": [2, 3, 6, 7, 8, 29, 70], "c5": [2, 7, 20, 21, 70, 73], "c7": [2, 7, 8, 21, 24, 49, 70, 73], "c": [2, 3, 5, 6, 7, 8, 15, 16, 19, 20, 21, 22, 23, 24, 29, 32, 34, 35, 38, 59, 63, 64, 67, 69, 70, 71, 73, 75, 76], "d": [2, 3, 6, 7, 8, 15, 16, 18, 21, 22, 23, 24, 29, 38, 46, 51, 53, 55, 57, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76], "e": [2, 3, 6, 7, 8, 9, 11, 13, 15, 16, 17, 20, 21, 24, 26, 29, 32, 33, 35, 36, 38, 40, 48, 49, 53, 57, 59, 63, 70, 71, 73, 75, 76], "refer": [2, 12, 13, 15, 16, 18, 20, 21, 22, 36, 40, 43, 46, 64, 65, 66, 67, 69, 70, 73, 76], "h": [2, 3, 4, 5, 10, 11, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 34, 35, 38, 39, 41, 43, 46, 64, 67, 70, 71, 72, 73, 76, 77, 78], "cohen": 2, "advanc": 2, "topic": 2, "theori": [2, 64, 66, 69], "springer": [2, 64, 70, 73], "2000": 2, "cohen2": 2, "cours": 2, "algebra": [2, 11, 16, 17, 21, 23, 35, 40, 73, 76], "1996": [2, 64, 70, 73], "rotman": 2, "introduct": 2, "4th": 2, "ed": 2, "1995": 2, "mani": [2, 15, 16, 34, 41, 67, 69, 70, 73, 76], "basic": [2, 6, 11, 17, 45, 66, 70, 72], "properti": [2, 15, 16, 59, 65, 70, 73, 76], "william": [2, 6, 7, 24, 39, 41, 42, 44, 46, 48, 53, 57, 70], "stein": [2, 6, 7, 24, 39, 41, 42, 44, 46, 48, 53, 55, 57, 70], "david": [2, 3, 5, 6, 7, 11, 24, 39, 40, 41, 42, 46, 48, 53, 55, 57, 64, 70, 71, 72, 73], "joyner": [2, 3, 5, 6, 7, 24, 39, 40, 41, 42, 46, 48, 53, 55, 57, 64, 70, 71, 72, 73], "2008": [2, 18, 24, 39, 48, 64, 70, 72], "ad": [2, 8, 20, 35, 39, 46, 48, 53, 64, 67, 70, 71], "user": [2, 21, 51, 53, 55, 57], "request": 2, "is_cycl": [2, 10, 21, 70, 73], "fix": [2, 3, 10, 15, 16, 17, 21, 32, 34, 40, 42, 46, 53, 55, 57, 64, 65, 70, 71, 72, 73, 76], "2006": [2, 3, 5, 6, 7, 39, 41, 44, 46, 48, 53, 55, 57, 64, 70, 71, 72, 73], "03": [2, 5, 24, 39, 46, 48, 53, 55, 57, 70, 71, 72], "monoid": [2, 21], "kohel": [2, 3, 70], "05": [2, 3, 15, 16, 24, 39, 41, 44, 46, 48, 53, 57, 64, 70, 76], "sever": [2, 10, 21, 64, 65, 70, 71], "signific": 2, "bug": [2, 3, 11, 42, 46, 53, 55, 57, 70], "08": [2, 3, 6, 24, 33, 38, 39, 43, 48, 70], "chang": [2, 21, 23, 35, 64, 73], "doc": [2, 40, 64], "random": [2, 3, 6, 12, 13, 17, 18, 20, 24, 32, 39, 40, 46, 48, 53, 64, 67, 69, 70, 73], "how": [2, 16, 21, 34, 35, 70, 71, 73], "record": 2, "10": [2, 3, 4, 6, 7, 12, 13, 14, 16, 17, 18, 20, 22, 24, 29, 32, 33, 38, 40, 53, 64, 67, 69, 70, 71, 73], "dual_group": [2, 6, 7, 8], "seriou": 2, "word_problem": [2, 3, 7, 42, 64, 71], "loeffler": [2, 11, 42], "2009": [2, 3, 24, 70, 73], "volker": [2, 3, 6, 7, 12, 13, 14, 16, 18, 23, 34, 39, 41, 42, 44, 46, 53, 55, 57], "braun": [2, 3, 6, 7, 12, 13, 14, 16, 18, 23, 34, 39, 41, 42, 44, 46, 53, 55, 57], "2012": [2, 3, 6, 7, 70, 73, 77, 78], "port": [2, 3, 6, 7, 39, 41, 44, 46, 53, 55, 57], "new": [2, 3, 6, 7, 11, 21, 39, 41, 44, 46, 48, 53, 55, 57, 64, 65, 70, 73], "immut": [2, 3, 6, 7, 8, 70], "renam": [2, 46], "abelian_group": [2, 6, 11], "given": [2, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 32, 35, 38, 39, 40, 48, 49, 51, 53, 59, 64, 65, 67, 70, 71, 73, 75, 76], "need": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 38, 39, 40, 41, 45, 46, 48, 49, 51, 53, 55, 56, 57, 59, 60, 63, 64, 65, 67, 70, 71, 72, 73, 75], "power": [2, 12, 13, 15, 16, 18, 19, 23, 24, 40, 51, 57, 73, 76], "neg": [2, 3, 9, 16, 21, 23, 24, 38, 73], "a_0": [2, 9], "typic": [2, 9, 24, 70], "increas": [2, 9, 16, 70], "pad": [2, 9], "length": [2, 8, 9, 11, 15, 16, 17, 29, 70, 71, 75], "less": [2, 9, 15, 16, 20, 64], "than": [2, 9, 10, 15, 16, 19, 20, 24, 25, 35, 48, 63, 64, 66, 67, 70, 71, 73], "altern": [2, 16, 18, 20, 21, 22, 28, 55, 62, 70, 71, 73], "give": [2, 4, 16, 20, 21, 23, 24, 35, 51, 59, 64, 70, 71], "keyword": [2, 12, 13, 16, 20, 23, 35, 38, 39, 51, 59], "must": [2, 5, 12, 13, 15, 16, 20, 21, 22, 24, 32, 35, 38, 39, 40, 51, 53, 55, 57, 64, 65, 70, 72, 73], "explicitli": [2, 20, 63, 70, 73], "type": [2, 3, 8, 11, 14, 15, 18, 19, 20, 21, 22, 23, 26, 27, 28, 31, 33, 34, 35, 37, 38, 40, 41, 42, 64, 65, 67, 70, 71, 73, 74, 75], "fi": 2, "8": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 18, 20, 21, 22, 23, 24, 32, 34, 39, 40, 51, 53, 55, 57, 62, 64, 67, 70, 71, 72, 73], "9": [2, 3, 4, 6, 7, 8, 11, 12, 16, 20, 22, 24, 26, 27, 32, 33, 38, 40, 63, 64, 67, 69, 70, 71, 73, 77, 78], "mul": [2, 77], "xy": [2, 3, 5, 64, 73], "notic": [2, 21, 70], "prepend": 2, "necessari": [2, 16, 65, 70, 73], "longer": [2, 35, 67], "abeliangroup_class": [2, 9], "generator_ord": [2, 4, 9, 11], "uniquerepresent": [2, 4, 6, 12, 17, 20, 21, 23, 26, 30, 36, 38, 43, 59, 60, 78], "chosen": [2, 67, 69], "instanti": 2, "z2xz3": [2, 4], "z6": [2, 4, 9], "is_isomorph": [2, 4, 20, 21, 22, 32, 68, 69, 70, 72, 73], "c8": [2, 7, 8, 21, 70, 73], "c9": [2, 8], "24": [2, 16, 24, 32, 33, 40, 62, 64, 70, 71, 73], "120": [2, 24, 67, 70, 73], "c12": [2, 21], "c24": 2, "c120": 2, "enumer": [2, 11, 20, 21, 33, 70, 73], "abeliangroupel": [2, 3, 9], "abeliangroup_subgroup": 2, "cardin": [2, 12, 15, 16, 19, 20, 21, 24, 32, 34, 36, 40, 43, 45, 46, 62, 70, 73], "base_r": [2, 6, 16, 20, 21, 38, 39, 40, 41, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 70, 73, 78], "suitabl": [2, 16, 24, 34, 65], "cyclotom": [2, 6, 7, 9, 20, 32, 38, 40, 48, 49, 59, 70], "field": [2, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 32, 33, 34, 35, 38, 39, 40, 41, 42, 46, 48, 49, 51, 53, 55, 56, 57, 59, 65, 70, 72, 73, 76, 77, 78], "pick": [2, 16, 70, 75], "automat": [2, 21, 24], "number_field": [2, 8, 9, 11, 15, 19, 20, 24, 27, 30, 32, 38, 40, 41, 48, 49, 53, 57, 59, 70, 72, 73], "2z": [2, 7], "degre": [2, 6, 7, 9, 10, 12, 13, 18, 20, 21, 22, 24, 27, 32, 33, 34, 39, 40, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 66, 70, 71, 72, 73, 76, 77, 78], "qq": [2, 11, 12, 13, 14, 20, 21, 23, 26, 27, 32, 35, 38, 39, 40, 42, 45, 46, 48, 50, 51, 53, 54, 55, 57, 59, 62, 72, 73], "ration": [2, 11, 12, 13, 17, 19, 21, 23, 26, 27, 32, 34, 35, 38, 40, 42, 46, 55, 57, 59, 73, 76], "elementari": [2, 4, 12, 70, 73], "here": [2, 9, 12, 16, 20, 24, 28, 33, 40, 44, 46, 64, 70, 73, 76, 77, 78], "anoth": [2, 16, 21, 32, 64, 70], "algorithm": [2, 3, 11, 16, 17, 19, 21, 24, 40, 42, 49, 64, 65, 66, 67, 69, 70, 71], "d_1": [2, 73], "d_2": [2, 73], "d_3": 2, "ldot": [2, 11, 12, 13, 17, 21, 23, 35, 40, 63, 64, 70, 73, 75, 77, 78], "compos": [2, 10], "divid": [2, 11, 16, 40], "wai": [2, 10, 12, 13, 16, 18, 20, 21, 28, 64, 65, 70, 71, 73], "describ": [2, 16, 18, 21, 24, 35, 49, 51, 53, 55, 57, 58, 61, 63, 70, 73, 76], "below": [2, 7, 16, 20, 24, 27, 40, 64, 70, 73], "just": [2, 9, 10, 12, 13, 14, 20, 21, 23, 32, 34, 42, 48, 70, 71, 73, 75], "Then": [2, 23, 27, 40, 70], "biggest": 2, "d_i": [2, 73], "maximum": [2, 69], "a_j": 2, "largest": [2, 16, 70, 73], "p": [2, 10, 11, 16, 17, 18, 20, 21, 22, 24, 32, 33, 35, 40, 59, 63, 64, 65, 67, 70, 71, 73, 75, 76], "v": [2, 3, 7, 11, 12, 13, 16, 17, 23, 24, 26, 27, 32, 35, 38, 40, 45, 48, 51, 54, 70, 71, 73, 76, 77, 78], "max": 2, "_p": 2, "text": [2, 15, 16, 17, 23, 26, 40, 53, 55, 56, 57, 76], "out": [2, 17, 21, 34, 63, 65, 73], "those": [2, 10, 11, 21, 64, 76], "get": [2, 16, 40, 64, 70, 71, 75], "smaller": [2, 20, 40, 65, 70], "repeat": [2, 10, 34, 40], "abov": [2, 21, 24, 40, 70, 73, 76], "procedur": [2, 40], "d_": [2, 73], "thank": 2, "robert": [2, 16, 64, 71], "miller": [2, 40, 64], "commun": 2, "c6": [2, 9, 20, 21, 24, 49, 70, 73], "60": [2, 4, 13, 21, 24, 67, 73], "42": [2, 8, 11, 24, 59, 64, 70, 71, 73], "a0": [2, 9, 16], "a2": [2, 6, 9, 16, 33], "look": [2, 4, 24], "histor": [2, 33], "reason": [2, 7, 33, 41, 64], "mean": [2, 21, 35, 64, 71, 73], "is_commut": [2, 6, 25, 38, 70, 73], "sinc": [2, 6, 10, 15, 16, 18, 20, 21, 34, 40, 41, 63, 70, 71, 73, 76], "is_abelian": [2, 6, 25, 32, 70, 73], "permutation_group": [2, 3, 10, 62], "whether": [2, 7, 8, 10, 14, 16, 18, 23, 24, 25, 32, 34, 38, 39, 41, 44, 48, 49, 51, 52, 59, 63, 67, 69, 70, 71], "boolean": [2, 7, 8, 10, 16, 20, 21, 23, 24, 25, 32, 34, 38, 39, 40, 41, 48, 49, 51, 52, 59, 64, 70, 71], "g1": [2, 4, 14, 15, 16, 21, 23, 33, 40, 62, 67, 70, 71], "is_subgroup": [2, 34, 70], "test": [2, 7, 8, 16, 20, 21, 23, 24, 25, 32, 34, 41, 44, 48, 66, 67, 69, 70, 71, 73], "lib": [2, 3, 7, 12, 14, 18, 21, 23, 24, 25, 33, 34, 38, 39, 40, 41, 46, 48, 49, 51, 53, 55, 57, 70], "is_trivi": [2, 4, 8, 25, 48, 70], "precis": [2, 6, 16, 20, 26, 38, 39, 40, 46, 59], "one": [2, 9, 10, 14, 15, 16, 17, 19, 20, 21, 24, 26, 27, 29, 32, 33, 34, 35, 38, 40, 41, 46, 48, 51, 52, 53, 55, 59, 63, 64, 65, 67, 70, 71, 73, 75, 76, 77], "ab": [2, 6, 7, 21, 73], "10000": 2, "number_of_subgroup": 2, "possibli": [2, 22, 40], "specif": [2, 15, 16, 59, 65, 73], "find": [2, 11, 17, 22, 24, 39, 40, 70], "count": [2, 16, 17, 23, 70, 71, 73], "contain": [2, 9, 15, 16, 17, 19, 21, 22, 23, 32, 34, 38, 42, 48, 59, 62, 63, 70, 71, 73, 75, 76], "torsion": [2, 11, 15], "itself": [2, 7, 12, 13, 16, 18, 51, 65, 70], "henc": [2, 10, 11, 53, 70, 71], "assum": [2, 16, 24, 48, 63, 67, 70], "direct": [2, 10, 16, 21, 27, 63, 67, 70, 73], "sylow": [2, 70], "reduc": [2, 11, 15, 16, 20, 21, 22, 70], "problem": [2, 3, 7, 11, 15, 16, 21, 42, 64, 71, 76], "further": [2, 23, 51, 59, 70], "lambda": [2, 18, 21, 24, 26, 27, 38, 40, 67, 70, 73, 75], "q_subgroups_of_abelian_group": 2, "sum": [2, 10, 15, 16, 18, 24, 71, 75, 76], "mu": [2, 26, 27], "combinat": [2, 15, 16, 19, 23, 41, 57, 70, 71, 73, 75], "81": [2, 24], "19": [2, 3, 11, 16, 20, 24, 33, 64, 67, 70, 71, 73], "15": [2, 6, 10, 11, 16, 20, 21, 24, 33, 38, 39, 40, 46, 48, 55, 64, 67, 70, 71, 73, 77, 78], "25": [2, 12, 20, 24, 33, 35, 40, 45, 64, 67, 70, 71, 73], "5760": 2, "45000": 2, "14": [2, 6, 11, 16, 20, 24, 33, 40, 64, 67, 69, 70, 71, 73], "permut": [2, 3, 10, 15, 16, 17, 18, 19, 20, 21, 22, 28, 30, 33, 37, 40, 53, 55, 57, 64, 65, 66, 67, 68, 69, 75, 77, 78], "q_1": 2, "q_n": 2, "respect": [2, 8, 16, 17, 20, 21, 23, 24, 35, 40, 53, 55, 57, 70, 73], "random_el": [2, 6, 11, 12, 13, 14, 17, 24, 32, 53, 70, 71], "gensh": 2, "big": [2, 21, 24, 70, 73], "30": [2, 4, 11, 16, 33, 40, 64, 66, 67, 69, 70, 71, 73], "64": [2, 6, 70, 73], "729": [2, 6], "c729": 2, "subgroup_reduc": 2, "elt": [2, 17, 29, 30, 38], "verbos": [2, 21, 40, 64, 67], "set": [2, 5, 9, 10, 11, 15, 16, 17, 19, 20, 21, 22, 23, 24, 28, 29, 32, 33, 34, 38, 39, 40, 63, 64, 65, 67, 69, 70, 71, 72, 73, 75], "forget": [2, 12, 13, 72], "origin": [2, 7, 12, 13], "routin": [2, 10], "error": [2, 15, 16, 24, 32, 33, 34, 51, 65, 70, 73], "rais": [2, 15, 16, 24, 32, 33, 34, 42, 51, 70], "linearli": 2, "perform": [2, 11, 63, 69, 70], "don": [2, 3, 24, 42, 66, 72], "know": [2, 21, 24, 70], "back": [2, 19, 24, 33, 41, 64, 70], "actual": [2, 4, 34, 42], "easi": [2, 28], "otherwis": [2, 11, 15, 16, 17, 20, 21, 24, 27, 32, 40, 51, 62, 64, 65, 68, 70, 73], "write": [2, 42, 73], "recurs": [2, 11, 16], "everi": [2, 16, 22, 26, 54, 70, 73], "project": [2, 15, 16, 17, 20, 33, 40, 64, 70, 72, 73], "onto": [2, 17, 70], "intersect": [2, 16, 24, 32, 67, 70], "well": [2, 16, 23, 25, 33, 35, 38, 51, 67, 70, 73], "send": [2, 15, 16, 23, 26, 27, 64, 70, 73], "mod": [2, 20, 21, 24, 34, 70], "lift": [2, 4, 12, 13, 15, 16, 30, 33], "aris": [2, 17], "tripl": [2, 16, 20, 40], "magnitud": 2, "slower": 2, "magma": [2, 73], "much": [2, 24, 39, 64], "faster": [2, 16, 21, 24, 32, 63, 64, 67, 70], "len": [2, 6, 16, 22, 29, 32, 38, 45, 46, 67, 70, 71, 73, 75, 78], "torsion_subgroup": [2, 11], "when": [2, 11, 15, 16, 17, 19, 20, 21, 23, 24, 33, 38, 40, 59, 60, 63, 70, 71, 73], "consist": [2, 11, 16, 20, 22, 23, 25, 33, 39, 40, 45, 46, 48, 53, 55, 57, 64, 65, 70, 73, 75], "f5": [2, 4, 34], "462": [2, 11], "subclass": [2, 34, 70], "inherit": [2, 20, 27, 34, 70], "There": [2, 6, 10, 15, 19, 21, 70, 71], "coerc": [2, 4, 10, 41], "ambient_group": [2, 20, 70], "equal": [2, 10, 11, 14, 16, 17, 21, 22, 24, 48, 67, 69, 70, 73, 78], "sub": [2, 16], "see": [2, 3, 4, 9, 15, 16, 17, 18, 20, 21, 23, 24, 27, 28, 32, 33, 34, 35, 38, 40, 44, 46, 48, 49, 50, 51, 53, 55, 57, 59, 62, 64, 67, 69, 70, 71, 73, 77, 78], "abc": [2, 3, 5, 6, 8, 29], "nth": 2, "is_abeliangroup": 2, "express": [2, 3, 11, 16, 71], "boil": 2, "down": [2, 64, 70], "follow": [2, 15, 16, 17, 22, 24, 26, 28, 36, 38, 40, 43, 45, 54, 59, 64, 65, 67, 70, 73], "analog": [2, 17], "chines": 2, "remaind": 2, "theorem": [2, 17, 73], "n_1": [2, 22, 23, 24, 70], "n_2": [2, 22, 23, 24, 70], "n_k": [2, 22, 23], "inde": [2, 10, 70], "n_i": [2, 10, 22], "g_i": [2, 11, 70], "i1": 2, "ik": 2, "n_j": 2, "d_k": 2, "c_1g_1": 2, "g_": [2, 20, 40], "solv": [2, 3, 7, 11, 24, 42, 64, 70, 71], "equat": [2, 24], "ca": [2, 73], "suffic": 2, "restrict": [2, 18, 70], "least": [2, 16, 20, 39, 65], "common": [2, 9, 10, 16, 39, 70, 73], "doe": [2, 3, 5, 7, 16, 18, 20, 21, 23, 31, 34, 35, 59, 60, 67, 70, 71, 72, 73], "perhap": [2, 70], "rather": [2, 3, 7, 19, 25, 71], "both": [2, 8, 16, 21, 32, 33, 34, 39, 70, 71, 76], "speed": [2, 64, 71], "model": [2, 76], "similar": [2, 20, 64, 70, 73], "valid": [2, 14, 16, 17, 21, 64, 67, 70], "push": [2, 3, 71], "optim": [2, 3, 42, 64, 67, 71], "determinist": [2, 3], "essenti": [2, 12, 13, 65, 66, 70, 71], "w": [2, 7, 15, 16, 19, 23, 24, 26, 27, 34, 35, 38, 40, 41, 45, 55, 57, 67, 70, 71], "prod": [2, 3, 15, 16, 42, 55, 73], "b1": [2, 15, 16], "b2": [2, 16], "b3": 2, "b4": 2, "b5": [2, 16, 20], "might": [2, 9, 16, 21, 40, 63, 70], "unpleas": 2, "effect": [2, 20, 24, 64], "cannot": [2, 18, 19, 21, 24, 40, 41, 42], "mai": [2, 16, 21, 22, 25, 28, 40, 50, 61, 64, 66, 70, 73], "slow": [2, 19, 64, 70, 73], "larg": [2, 4, 15, 21, 25, 33, 70, 71, 72, 73], "differ": [2, 10, 16, 20, 21, 24, 32, 33, 35, 38, 40, 42, 45, 49, 53, 54, 63, 67, 70, 71, 76], "wrap": [2, 5, 11, 19, 21, 23, 24, 26, 33, 34, 40, 49, 70, 72, 73, 75], "epimorphismfromfreegroup": [2, 7, 42, 64, 71], "preimagesrepres": [2, 7, 42, 64, 71], "free_abelian_monoid_el": 3, "py": [3, 7, 67, 70, 72, 73], "pow": 3, "recal": [3, 12, 13], "20": [3, 7, 8, 16, 20, 21, 24, 33, 38, 40, 64, 67, 70, 71, 73], "13": [3, 11, 16, 20, 22, 24, 33, 43, 64, 67, 70, 71, 73], "y": [3, 5, 6, 7, 11, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 35, 36, 40, 43, 45, 49, 64, 67, 70, 71, 73, 76], "23": [3, 11, 24, 40, 64, 70, 71, 73, 75], "27": [3, 13, 24, 33, 43, 64, 70, 71, 73, 77], "72": [3, 8], "abelian_group_el": [3, 7, 8], "abeliangroupelementbas": [3, 7, 8], "iter": [3, 8, 9, 11, 15, 16, 18, 19, 20, 23, 24, 32, 34, 38, 39, 42, 48, 49, 65, 70, 73, 75], "as_permut": 3, "associ": [3, 9, 15, 16, 21, 38, 41, 42, 69, 70, 71, 73, 75], "gp": [3, 73], "ap": [3, 24], "todo": [3, 41], "rewrit": [3, 21, 24, 39, 46, 48, 53, 57, 64, 70], "stuff": 3, "matrix_grp": 3, "directori": 3, "reserv": [3, 70], "letter": [3, 16, 21, 23, 70, 73], "is_abeliangroupel": 3, "provid": [4, 23, 24, 34, 45, 59, 64, 70], "python": [4, 5, 21, 23, 24, 34, 53, 64, 72], "packag": [4, 16, 20, 21, 64, 70], "polycycl": [4, 32, 70, 73], "01": [4, 24, 39, 41, 70, 76], "abeliangroupelement_gap": 4, "via": [4, 20, 21, 22, 30, 34, 39, 40, 46, 53, 55, 57, 59, 63, 64, 70, 73, 77], "handl": [4, 19, 65], "quit": [4, 12, 13], "too": [4, 20, 21, 45, 70, 73], "123": [4, 11], "789": 4, "crash": 4, "veri": [4, 6, 24, 32, 70, 72, 76], "make": [4, 16, 20, 21, 24, 25, 27, 32, 40, 48, 64, 65, 67, 69, 70, 71], "work": [4, 5, 10, 11, 16, 20, 21, 23, 24, 25, 33, 34, 39, 49, 65, 70], "could": [4, 9, 21, 71, 73], "done": [4, 5, 20, 70, 73, 77, 78], "abeliangroupelement_polycycl": 4, "effici": [4, 24, 65, 70], "12345": [4, 24], "123456789": [4, 24], "nonneg": [4, 8, 22, 70], "abeliangroupquotient_gap": 4, "quotient": [4, 10, 11, 16, 21, 22, 23, 25, 45, 59, 64, 70], "q1": [4, 35], "q2": 4, "natural_homomorph": 4, "morphism": [4, 5, 9, 11, 16, 21, 26, 30, 33, 50, 70, 72], "abeliangroupsubgroup_gap": 4, "terminologi": 4, "come": [4, 9, 16, 53, 70, 73], "framework": [4, 11, 70, 71], "notion": [4, 70], "subquoti": [4, 11], "retract": [4, 30], "li": 4, "all_subgroup": 4, "automorphism_group": [4, 69, 70], "g3": [4, 21, 73], "g4": 4, "homspac": 5, "first": [5, 10, 15, 16, 20, 21, 22, 23, 26, 32, 35, 38, 45, 53, 59, 60, 64, 66, 67, 70, 71, 72, 73], "hom": [5, 21, 26, 27, 30, 33, 77, 78], "abelian_group_morph": 5, "abeliangroupmap": 5, "abeliangroupmorph": 5, "genss": 5, "imgss": 5, "code": [5, 17, 32, 63, 64, 67, 69, 70, 72, 73], "grouphomomorphismbyimag": [5, 72], "fail": [5, 24, 72], "extend": [5, 35, 40, 65, 72, 73], "subg": 5, "yet": [5, 21, 70, 73], "object": [5, 11, 16, 19, 21, 23, 24, 25, 28, 32, 34, 39, 42, 46, 59, 62, 63, 64, 65, 67, 69, 70, 73, 75], "is_abeliangroupmorph": 5, "idea": [6, 65], "cc": [6, 7, 15, 19, 39, 59, 67, 70, 73], "g_j": 6, "sai": [6, 45, 73], "m_j": 6, "x_j": [6, 16, 23], "exp": [6, 35], "pi": [6, 36, 38, 59, 67, 76, 77, 78], "x_i": [6, 23], "These": [6, 10, 15, 20, 21, 22, 38, 57, 59, 63, 70, 73, 76], "fd": [6, 7, 8], "2520": 6, "576": 6, "real_mpfr": [6, 24], "tol": [6, 7], "1e": [6, 7], "00000000000000": [6, 24, 59], "modif": [6, 7, 41], "suggest": [6, 7, 70, 73], "dual_abelian_group": [6, 7], "dualabeliangroup_class": 6, "3z": [6, 7], "5z": [6, 7], "7z": [6, 7], "8z": [6, 7], "9z": 6, "15z": 6, "53": [6, 38, 39, 46, 59, 67, 73], "bit": [6, 38, 39, 46, 59, 70, 71], "dualabeliangroupel": [6, 7], "scalar": [6, 18, 41, 43], "dualiz": 6, "a1": [6, 16, 33], "x0": [6, 16, 21, 23, 34, 40], "x1": [6, 16, 21, 22, 23, 34, 40, 71], "1000": [6, 17, 21, 24], "inv": [6, 10], "gd": [6, 7, 67], "100": [6, 24, 46, 60], "54": [6, 73], "43": [6, 64, 70, 71, 73], "found": [6, 24, 51, 65, 70], "while": [6, 17, 39, 70, 73], "is_dualabeliangroup": 6, "x2": [6, 16, 21, 23, 34, 40, 71], "840": 7, "192": 7, "evalu": [7, 16, 32, 70], "zeta840": 7, "140": 7, "_": [7, 15, 16, 17, 18, 20, 21, 29, 38, 42, 53, 55, 56, 57, 67, 70, 75], "499999999999995": 7, "866025403784447": 7, "65": [7, 8, 73], "07": [7, 21, 39, 44, 48, 70], "dual_abelian_group_el": [7, 8], "hackish": 7, "includ": [7, 15, 21, 24, 49, 59, 64, 70], "complet": [7, 12, 13, 22, 28, 32, 34, 70, 73, 76, 77, 78], "dualabeliangroup": 7, "why": 7, "simpli": [7, 23, 70, 73], "invok": 7, "u": [7, 16, 17, 20, 23, 24, 40, 42, 59, 64, 70, 71, 76], "245": 7, "is_dualabeliangroupel": 7, "alwai": [8, 12, 15, 67, 70, 73], "onc": [8, 32, 70, 73], "element_bas": 8, "multiplicativegroupel": [8, 14, 17, 26, 34, 35, 41, 59, 71, 77], "inclus": [8, 16, 34], "exclus": [8, 34], "copi": [8, 33, 70, 73, 77], "coordin": [8, 16, 35], "multiplicative_ord": [8, 11, 24, 34, 42, 71], "often": [9, 67, 76], "would": 9, "nice": [9, 15, 70], "encapsul": [9, 59], "howev": [9, 18, 20, 21, 35, 70], "abstract": [9, 35, 59], "abeliangroupwithvalu": 9, "allow": [9, 20, 21, 64, 70, 72, 73], "decor": [9, 70], "unit": [9, 24, 59, 69, 73, 77, 78], "unit_group": 9, "think": [9, 11], "keep": [9, 21, 33, 34, 77], "track": [9, 34], "realli": [9, 19, 24, 73], "requir": [9, 10, 22, 23, 24, 26, 53, 64, 70], "pass": [9, 11, 16, 21, 23, 34, 51, 64, 70], "assign": [9, 21, 32], "coercion": [9, 11, 34, 71], "embed": [9, 11, 20, 21, 48, 70], "values_group": 9, "cf3": [9, 48, 49, 53, 57], "zeta": [9, 76], "cyclotomicfield": [9, 24, 40, 48, 49, 53, 57, 59], "z3": 9, "want": [9, 21, 23, 24, 31, 63], "whole": [9, 24, 32, 70, 73], "like": [9, 17, 24, 32, 51, 59, 60, 63, 70, 73, 77, 78], "values_embed": 9, "abeliangroupwithvaluesel": 9, "latter": [9, 20, 24, 27, 40, 65, 70], "testsuit": [9, 40, 46, 70, 73], "run": [9, 21, 24, 40, 46, 67, 69, 70, 73], "gens_valu": 9, "abeliangroupwithvaluesembed": 9, "codomain": [9, 33, 72], "abeliangroupwithvalues_class": 9, "symbol": [9, 11, 16, 20, 22, 35, 38, 40, 59, 60, 64, 69, 70, 73], "z4": 9, "polynomi": [9, 16, 20, 21, 23, 38, 40, 41, 53, 70, 71, 73], "larger": [9, 14, 48, 64, 70], "fg_pid": 10, "major": [10, 73], "additive_abelian": [10, 11], "additive_abelian_group": 10, "remember_gener": 10, "greater": [10, 22, 66, 73], "bigoplus_i": 10, "switch": 10, "realiz": [10, 20, 73], "two": [10, 16, 18, 19, 20, 21, 23, 24, 26, 32, 33, 35, 41, 49, 53, 54, 65, 67, 68, 70, 73, 77, 78], "obviou": 10, "ones": 10, "each": [10, 11, 16, 17, 20, 21, 23, 32, 39, 40, 48, 49, 65, 67, 69, 70, 71, 73, 75], "being": [10, 16, 20, 22, 26, 34, 38, 40, 51, 53, 55, 57, 70, 71, 73, 75], "minim": [10, 11, 21, 22, 24, 34, 40, 70, 73], "vari": [10, 70], "raw": 10, "pair": [10, 12, 13, 16, 21, 23, 24, 29, 51, 64, 70, 71, 73, 76], "natur": [10, 15, 16, 17, 21, 48, 54, 70, 73, 78], "repeatedli": 10, "smith_form_gen": 10, "linear_combination_of_smith_form_gen": 10, "again": [10, 21, 64, 70], "befor": [10, 21, 22, 65, 73], "additiveabeliangroupel": [10, 11], "fgp_element": 10, "additiveabeliangroup_class": 10, "fgp_module_class": 10, "machineri": 10, "submodul": [10, 45], "smallest": [10, 32, 40, 42, 70, 71, 73], "nx": 10, "55": [10, 64, 73], "33": [10, 33, 40, 64, 70, 71, 73], "is_multipl": [10, 25], "short_nam": 10, "additiveabeliangroup_fixed_gen": [10, 11], "rel": [10, 21, 32, 40, 46, 70], "variant": 10, "smithform_gen": 10, "attach": [10, 16, 20], "cover_and_relations_from_invari": 10, "util": 10, "super": [10, 16], "cr": [10, 20], "princip": [10, 12, 13, 21], "ideal": [10, 12, 13, 21], "echelon": [10, 45], "basi": [10, 11, 16, 35, 38, 45, 69, 70, 73, 76], "intend": [11, 19, 21, 24, 49, 70], "templat": 11, "One": [11, 16, 21, 24, 41, 59, 60, 67, 73], "additiveabeliangroupwrapp": 11, "long": [11, 15, 16, 20, 21, 24, 32, 46, 64, 67, 70, 73], "_add_": 11, "toi": 11, "mordel": 11, "weil": 11, "ellipt": [11, 24], "curv": [11, 24, 73], "scheme": [11, 24, 65], "ellipticcurv": [11, 24], "30a2": 11, "pt": 11, "point": [11, 16, 24, 35, 59, 63, 64, 65, 67, 70, 71, 73], "26": [11, 24, 40, 64, 65, 70, 71, 73], "3000000000000001": 11, "load": [11, 18, 23, 70], "dump": [11, 18], "known": [11, 15, 20, 21, 23, 33, 38, 73, 76, 77, 78], "http": [11, 40, 44, 50, 64, 70], "github": [11, 15, 16, 21, 24, 32, 33, 34, 39, 44, 48, 49, 50, 51, 53, 55, 57, 70, 71, 72, 77], "com": [11, 44, 50, 70], "sagemath": [11, 44, 50, 59, 60, 70], "issu": [11, 15, 16, 21, 24, 32, 33, 34, 39, 44, 48, 49, 50, 51, 53, 55, 57, 70, 71, 72, 77], "11599": 11, "comment": 11, "about": [11, 42, 48, 64, 65, 67, 70], "probabl": 11, "won": 11, "current": [11, 16, 21, 23, 38, 67, 70, 71, 73], "fiddli": 11, "adjust": 11, "abl": [11, 65], "extra": [11, 15, 41, 42, 48], "init": [11, 77], "2010": [11, 18, 39, 42, 48], "lorenz": 11, "panni": 11, "2017": [11, 24, 43], "discrete_log": [11, 24], "2023": [11, 17, 30], "from_gener": 11, "additive_abelian_wrapp": 11, "univers": [11, 20, 38, 48, 49, 64, 66, 70, 73], "zmod": [11, 24, 32], "modulo": [11, 24, 43, 55, 59, 73, 76], "g6": 11, "qqbar": [11, 40], "sqrt": [11, 16, 20, 24, 38, 40], "gf": [11, 12, 13, 14, 15, 16, 19, 20, 24, 32, 34, 39, 40, 41, 42, 43, 44, 46, 48, 51, 52, 53, 54, 55, 56, 57, 69, 70, 73, 77, 78], "419": 11, "indirect": [11, 27, 60, 70], "doctest": [11, 27, 44, 50, 60, 67, 70], "finite_r": [11, 12, 13, 20, 24, 25, 32, 33, 40, 46, 48, 56, 57, 71, 73], "420": 11, "z2": [11, 34], "additiveabeliangroupwrapperel": 11, "discrete_exp": 11, "term": [11, 16, 35, 65, 70], "7573593128807148": 11, "invers": [11, 16, 17, 19, 21, 23, 24, 27, 34, 35, 41, 64, 65, 70, 71, 73, 77], "el": [11, 20, 26, 27], "attempt": [11, 16, 19, 21, 24, 70], "_discrete_log_pgroup": 11, "suth2008": 11, "127": 11, "539": 11, "polygen": 11, "1009": 11, "modulu": [11, 16], "940": 11, "900": 11, "228": 11, "974": 11, "185": 11, "1007": 11, "214": 11, "865": 11, "802": 11, "777": 11, "notimplementederror": [11, 19, 25, 32, 40, 53, 55, 57, 73], "No": 11, "black": 11, "box": 11, "discret": [11, 24], "log": [11, 24, 35], "static": 11, "task": 11, "logarithm": [11, 24, 35], "45": [11, 13, 21, 64, 66, 67, 69, 70, 71, 73], "90": [11, 67], "wa": [11, 17, 34, 51, 63, 70, 76], "initialis": 11, "210": [11, 22, 24], "2310": 11, "487": 11, "311": 11, "205": 11, "574i1": 11, "103": [11, 24], "172": 11, "61": [11, 73], "18": [11, 20, 22, 33, 40, 64, 67, 70, 71, 73], "assert": [11, 17, 20], "19353": 11, "958713": 11, "2022": [11, 16, 24], "live": [11, 20, 21, 23, 57], "65a": 11, "elliptic_curv": 11, "ell_tors": 11, "ellipticcurvetorsionsubgroup_with_categori": 11, "element_class": [11, 14, 33], "ell_point": 11, "ellipticcurvepoint_number_field": 11, "unwrappingmorph": 11, "basis_from_gener": 11, "g_1": [11, 21, 24, 27, 36, 70], "g_n": [11, 70], "combin": [11, 70], "alpha_1": 11, "alpha_n": 11, "alpha_i": [11, 38], "suth2007": 11, "remark": [11, 17, 76], "31337": 11, "37": [11, 24, 33, 64, 70, 71, 73], "946988065073788930380545280": 11, "ordr": 11, "313157428926517503432720": 11, "3024": 11, "weil_pair": 11, "affine_gp": [12, 13, 14], "affine_group": [12, 14], "affinegroup": [12, 13, 14], "aff": 12, "space": [12, 13, 14, 15, 16, 17, 20, 24, 26, 27, 38, 39, 41, 42, 48, 51, 53, 54, 65, 70, 73, 76], "invert": [12, 13, 14, 23, 24, 39, 46, 48, 49, 55, 77], "a_v": [12, 13], "what": [12, 13, 24, 70], "gl": [12, 18, 21, 24, 27, 28, 32, 33, 34, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 55, 70], "translat": [12, 13, 14, 35, 64], "fact": [12, 13, 20, 21, 22, 73, 76], "ltime": [12, 13, 27], "mapsto": [12, 13, 14, 15, 35, 67, 73, 76], "dim": [12, 13, 21, 73], "dimension": [12, 13, 16, 35, 73, 76], "pmatrix": [12, 13, 36, 43], "x_n": [12, 13, 23, 35, 40], "compon": [12, 16, 21, 77], "hyperplan": [12, 15], "seen": [12, 59], "someth": [12, 13, 14, 23, 51], "dimens": [12, 13, 16, 20, 26, 27, 40, 51, 53, 70], "var": [12, 13, 16, 20, 35, 46, 51, 53, 55, 57], "inform": [12, 13, 20, 40, 42, 51, 64, 70, 71], "special": [12, 13, 14, 18, 24, 27, 32, 34, 39, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 72, 73], "affinespac": [12, 13], "shorthand": [12, 13, 23, 43], "wikipedia": [12, 13, 15, 16, 17, 18, 21, 22, 36, 43, 70, 73, 76], "articl": [12, 13, 15, 16, 17, 18, 21, 22, 24, 36, 43, 70, 73, 76], "affinegroupel": [12, 14], "172882428468750000000000000000": 12, "nrow": 12, "ncol": 12, "determin": [12, 16, 18, 21, 22, 23, 39, 40, 46, 51, 52, 53, 54, 55, 57, 59, 60, 64, 65, 67, 70, 73], "linear_spac": [12, 14], "ax": [12, 14, 16, 22, 73], "group_el": [12, 14, 41], "matrix_spac": [12, 48], "reflect": [12, 13, 17, 20, 28, 38, 65, 71, 73], "household": 12, "perpendicular": 12, "16": [12, 16, 20, 21, 24, 29, 32, 33, 40, 64, 67, 70, 71, 73], "some_el": [12, 15, 16], "vector_spac": 12, "euclidean_group": 13, "euclideangroup": 13, "affin": [13, 15, 28, 38, 48, 51, 53], "preserv": [13, 45, 53, 54, 55, 56, 57, 58], "metric": 13, "e3": [13, 21, 48, 49, 53, 57, 76], "77": 13, "40": [13, 15, 16, 24, 33, 40, 64, 70, 71, 73], "48": [13, 32, 34, 46, 64, 67, 70, 71, 73], "correct": [14, 16, 64, 66], "accept": [14, 22, 26, 51, 53, 55, 57], "column": [14, 18, 21, 22, 32, 38, 43, 48, 51, 52, 69, 70, 78], "reconstruct": 14, "affinegroup_with_categori": 14, "convers": [14, 20, 30, 38], "matrixgroup": [14, 19, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 48], "part": [14, 60, 65, 70, 75], "standard": [14, 15, 16, 22, 24, 38, 42, 53, 63, 73, 76], "composit": [14, 40, 70, 73], "garsid": 15, "travi": [15, 17, 29, 30, 36, 38, 41, 75, 76], "scrimshaw": [15, 17, 29, 30, 36, 38, 41, 75, 76], "artingroup": [15, 76], "coxeter_matrix": [15, 38, 73], "finitelypresentedgroup": [15, 20, 21, 70], "a_m": 15, "mid": [15, 16, 21, 22, 70, 73, 76], "underbrac": 15, "s_j": [15, 76], "ji": [15, 73], "usual": [15, 34, 35, 41, 42, 53, 71, 73], "convent": [15, 16, 38, 53, 70, 71, 73, 76], "infti": [15, 29, 38], "impli": 15, "w_m": 15, "impos": 15, "furthermor": [15, 36, 53], "i_1": [15, 21, 23], "i_": 15, "classifi": [15, 67], "spheric": 15, "conjectur": 15, "center": [15, 32, 43, 46, 64, 70, 73], "solvabl": [15, 16, 32, 70, 73, 76], "h_": [15, 70], "h_w": 15, "complement": [15, 17, 67], "gp2012": 15, "therein": [15, 20], "coxeter_data": 15, "prefix": [15, 16, 23, 26, 27, 29], "explicit": [15, 70, 73], "artin_group": [15, 76], "rightangledartingroup": [15, 76], "artingroupel": [15, 76], "as_permutation_group": [15, 16, 20, 21, 22, 39, 40, 48, 70], "gamma": [15, 65, 67, 69, 76], "cyclegraph": [15, 76], "coxeter_group": [15, 16, 38], "coxeter_typ": 15, "index_set": [15, 20, 23, 27, 29, 38, 71, 73], "s3": [15, 16, 18, 20, 21, 24, 30, 40, 49, 62, 70, 73], "finitelypresentedgroupel": [15, 20, 21], "coxeter_group_el": 15, "under": [15, 16, 17, 33, 40, 67, 69, 70, 71, 76], "reduced_word": [15, 16], "c1": [15, 16, 20, 70], "symmetricgroup": [15, 16, 17, 18, 19, 22, 30, 32, 40, 63, 64, 67, 70, 71, 73, 75], "braidgroup": [15, 16, 20], "c0": [15, 16, 20], "possibl": [15, 16, 20, 21, 23, 32, 38, 40, 51, 53, 59, 64, 70, 75], "recov": [15, 16, 17, 70], "exponent_sum": 15, "finitetypeartingroup": [15, 16], "delta": [15, 16, 76], "caylei": [15, 16, 46, 70], "local": [15, 16, 21], "16059": [15, 16], "def": [15, 16, 24, 26, 27, 34, 70, 73], "ball": [15, 16, 59], "radiu": [15, 16], "ret": [15, 16], "add": [15, 16, 17, 21, 32, 41, 48, 53, 55, 57, 64, 70], "alphabet": [15, 16], "ga": 15, "cayley_graph": [15, 16, 46], "digraph": [15, 16, 46, 67], "32": [15, 20, 24, 40, 64, 70, 71, 73], "vertic": [15, 16, 46, 64, 67, 76], "nontrivi": [15, 16, 34, 40, 70, 73], "tree": [15, 16, 65], "freegroup": [15, 16, 21, 23, 24, 25, 31, 33, 34, 49, 70], "finitetypeartingroupel": [15, 16], "s0": [15, 16], "left_normal_form": [15, 16], "rest": [15, 16, 66], "lot": [16, 64], "strand": [16, 20], "oper": [16, 18, 20, 21, 23, 24, 25, 34, 39, 40, 41, 48, 51, 65, 70], "indic": [16, 21, 23, 24, 27, 28, 29, 35, 64, 65, 67, 70], "action": [16, 17, 26, 27, 38, 40, 45, 64, 67, 70, 73, 78], "mappingclassgroupact": 16, "explan": [16, 20, 21], "b0": 16, "miguel": [16, 21, 23], "angel": [16, 21, 23], "marco": [16, 21, 23], "buzunariz": [16, 21, 23], "s\u00f8ren": 16, "fugled": 16, "j\u00f8rgensen": 16, "lipshitz": 16, "thierri": 16, "monteil": 16, "__hash__": 16, "ensur": [16, 21, 32, 65], "sebastian": [16, 20, 33, 39, 48, 51, 53, 55, 57, 70, 71], "oehm": [16, 20, 33, 39, 48, 51, 53, 55, 57, 70, 71], "juli": 16, "nov": 16, "burau_matrix": [16, 20], "25760": 16, "26657": 16, "moritz": 16, "firsch": 16, "sept": 16, "2021": 16, "color": [16, 64], "jone": 16, "links_gould_polynomi": 16, "lkb_matrix": 16, "lawrenc": 16, "krammer": 16, "bigelow": 16, "e_": 16, "lexicograph": [16, 21, 73], "laurent": [16, 21], "By": [16, 17, 19, 20, 23, 42, 63, 70], "separ": [16, 34], "comma": 16, "big2003": 16, "tl_matrix": 16, "drain_siz": 16, "variab": 16, "spars": [16, 67], "temperlei": 16, "lieb": 16, "certain": [16, 20, 67], "satisfi": [16, 21, 64, 65, 76], "rule": [16, 21], "tl_basis_with_drain": 16, "detail": [16, 21, 23, 24, 40, 44, 49, 50, 59, 64, 65, 70, 77], "eigenvalu": [16, 40], "appropri": [16, 65], "result": [16, 17, 20, 21, 23, 24, 32, 40, 63, 65, 69, 70, 71, 73], "burau": [16, 20], "tl": 16, "paramet": [16, 23, 24, 35, 53, 59, 70, 73], "expect": [16, 17, 70, 73], "guess": 16, "calcul": [16, 20, 24, 69], "few": [16, 21, 24, 49, 64, 70], "b_4": 16, "laurentpolynomialr": [16, 21, 23], "b_8": 16, "big1999": 16, "psi1": 16, "psi2": 16, "w1": 16, "w2": 16, "jon2005": 16, "alexander_polynomi": 16, "alexand": [16, 21, 70, 73], "closur": 16, "unnorm": 16, "plu": [16, 24], "minu": [16, 71], "constant": [16, 22, 59, 60, 64, 65], "coeffici": [16, 21, 23, 35, 38, 40, 70, 73, 76], "multipli": [16, 21, 41, 71], "trefoil": 16, "next": [16, 24, 38, 42, 46, 65, 70, 71, 73, 75], "figur": [16, 34], "knot": 16, "our": 16, "kinoshita": 16, "terasaka": 16, "annular_khovanov_complex": 16, "qagrad": 16, "annular": 16, "khovanov": 16, "bg2013": 16, "quantum": 16, "grade": 16, "chain": [16, 64], "dictionari": [16, 21, 63, 64, 67, 71], "kei": [16, 17, 21, 28, 59, 67, 76], "nonzero": [16, 18, 22, 59, 65], "homologi": [16, 70], "annular_khovanov_homologi": 16, "homogi": 16, "around": [16, 42], "unreduc": 16, "e_1": 16, "e_i": [16, 23, 40, 76], "squier": [16, 20], "squ1984": 16, "root": [16, 20, 26, 27, 34, 36, 38, 40, 59], "yield": [16, 34, 65, 70, 73], "format": [16, 21, 24, 49, 64, 67, 69, 70], "madj": 16, "adjoin": [16, 20, 70], "hermitian": [16, 20, 57, 58], "inject_vari": [16, 21, 23], "burau_represent": 16, "central": [16, 18, 20, 32, 70, 73], "colored_jones_polynomi": 16, "try_invers": 16, "trace": 16, "hl2018": 16, "notat": [16, 20, 21, 22, 24, 26, 40, 49, 53, 63, 64, 70, 71], "simplifi": [16, 21, 70], "bookkeep": 16, "figure_eight": 16, "components_in_closur": 16, "three": [16, 20, 65, 67, 70, 73], "disjoint": [16, 17, 70, 71, 76], "unknot": 16, "k11n42": 16, "conjugating_braid": 16, "conjug": [16, 34, 35, 57, 70], "o": [16, 24, 34, 40, 45, 67, 70], "d1": [16, 67], "l": [16, 17, 19, 21, 26, 27, 34, 35, 38, 40, 45, 64, 66, 70, 71, 72, 73], "conjugatingbraid": 16, "_element_from_libbraid": 16, "tietz": [16, 21, 23, 34], "d2": [16, 67], "deformed_burau_matrix": 16, "deform": 16, "_algebra": 16, "db": 16, "ap_0": 16, "ap_5": 16, "bp_0": 16, "ap_1": 16, "cm_3": 16, "bp_4": 16, "bm_2": 16, "bm_3": 16, "cp_5": 16, "am_3": 16, "nondeform": 16, "subs_gen": 16, "gen_str": 16, "str": [16, 64], "els": [16, 20, 33, 73], "elif": 16, "db_base": 16, "db_simp": 16, "change_r": 16, "gcd": [16, 73], "greatest": 16, "is_conjug": [16, 34], "is_period": 16, "period": 16, "is_pseudoanosov": 16, "pseudo": [16, 40, 70], "anosov": 16, "is_reduc": 16, "jones_polynomi": 16, "skein_norm": 16, "replac": [16, 21, 23], "agre": [16, 27], "lic1997": 16, "slightli": 16, "had": 16, "kauffman": 16, "bracket": 16, "depend": [16, 20, 21, 40, 67, 70, 71, 77], "unspecifi": 16, "fraction": [16, 40], "unlink": 16, "hopf": 16, "link": 16, "mirror": 16, "k11n34": 16, "conwai": 16, "b11n42": 16, "b11n34": 16, "lcm": [16, 24, 32, 70], "libbraid": 16, "l1": [16, 70], "s4": [16, 18, 20, 22, 62, 70, 73], "links_gould_matrix": 16, "superalgebra": 16, "mathfrak": [16, 35], "sl": [16, 20, 25, 28, 32, 34, 39, 46, 48, 51, 70], "_q": 16, "mw2012": 16, "per": 16, "variat": 16, "choic": [16, 21, 53, 64, 65, 73], "hopflg": 16, "univari": [16, 21, 40, 53, 73], "yrbar": 16, "multivari": [16, 21, 23, 71], "s0r": 16, "s1r": 16, "yr": 16, "varnam": 16, "use_symbol": 16, "gould": 16, "t0": [16, 20, 23], "t1": [16, 20, 21, 23], "markov_trac": 16, "markov": 16, "rescal": 16, "mt": 16, "mirror_imag": 16, "involut": 16, "braidgroup_class": [16, 20], "mirror_involut": 16, "amphicheir": 16, "k12a_427": 16, "bm": 16, "induc": [16, 18, 23, 70], "plot": [16, 46, 64], "rainbow": 16, "orient": 16, "bottom": [16, 64, 70], "top": [16, 64, 70], "aspect_ratio": 16, "kwd": [16, 23, 25, 29, 31, 33, 35, 39, 51, 59, 70], "avail": [16, 20, 21, 22, 28, 32, 39, 46, 53, 55, 57, 64, 70, 73], "bezier_path": 16, "line": [16, 63, 71, 72], "individu": [16, 70], "float": 16, "goe": 16, "aspect": [16, 73], "ratio": 16, "graphic": [16, 46, 64], "primit": [16, 20, 36, 40, 46, 64, 70, 73], "red": [16, 64], "blue": [16, 64], "plot3d": [16, 46, 64], "3d": [16, 64], "bezier3d": 16, "graphics3d": [16, 46, 64], "pure_conjugating_braid": 16, "pure": [16, 17, 60], "revers": [16, 70, 71, 73], "anti": [16, 18], "k8_17": 16, "br": [16, 64], "right_normal_form": 16, "rigid": [16, 76], "sliding_circuit": 16, "slide": 16, "circuit": 16, "super_summit_set": 16, "summit": 16, "thurston_typ": 16, "tropical_coordin": 16, "tropic": 16, "b_n": 16, "2n": [16, 22, 36, 73], "tc": 16, "semir": 16, "dw2007": 16, "deh2011": 16, "ultra_summit_set": 16, "orbit": [16, 40, 67, 70, 71], "ultra": 16, "gb": 16, "31": [16, 24, 33, 64, 70, 71, 73], "summand": [16, 60], "mark": [16, 26, 27], "highest": [16, 18], "trival": 16, "wenzl": 16, "projector": 16, "wan2010": 16, "practic": [16, 40, 66, 67, 69, 73], "consecut": 16, "moreov": 16, "b_5": 16, "hopefulli": [16, 21], "formula": [16, 70, 73], "dimension_of_tl_spac": 16, "tl_represent": 16, "illustr": [16, 71, 73], "purpos": [16, 32, 59, 60, 64, 65, 70], "drain": 16, "28": [16, 24, 33, 38, 40, 64, 70, 71, 73], "endomorph": [16, 21, 26, 33, 35, 77, 78], "entir": 16, "diagram_algebra": 16, "da": 16, "total_dim": 16, "temperley_lieb_diagram": 16, "epimorph": [16, 20, 21], "through": [16, 20, 22, 24, 32, 70, 73], "defn": [16, 21, 35, 70, 72, 77, 78], "gquotient": [16, 21], "mapping_class_act": 16, "punctur": 16, "disk": 16, "fundament": [16, 24, 38, 73], "yourself": [16, 34], "simpler": [16, 21], "mirr": 16, "presentation_two_gener": 16, "hom1": 16, "hom2": 16, "That": [16, 70], "sigma_i": 16, "x3": [16, 21, 23], "rightquantumword": 16, "definit": [16, 20, 21, 34, 35, 38, 48, 53, 57, 70, 76, 78], "monomi": [16, 21, 40, 70, 77, 78], "fig_8": 16, "bp_1": 16, "cp_1": 16, "bp_3": 16, "cp_3": 16, "ap_3": 16, "bm_0": 16, "cm_0": 16, "am_0": 16, "cm_2": 16, "am_2": 16, "ep": [16, 24], "mathcal": 16, "_n": 16, "cp_0": 16, "bp_2": 16, "cp_2": 16, "ap_2": 16, "bm_1": 16, "cm_1": 16, "am_1": 16, "rqw": 16, "parallel": 16, "qw": 16, "dict": [16, 21, 23, 24, 64, 67, 71], "outlin": 16, "int": [16, 64, 65, 71], "item": [16, 21, 24, 64, 70], "cactus_group": 17, "cactusgroup": 17, "fruit": [17, 22, 30], "j_n": [17, 22], "pq": 17, "kl": 17, "interv": [17, 59], "subseteq": 17, "j_3": 17, "j3": [17, 22, 30, 73], "misc": [17, 28, 30, 76], "s12": [17, 22, 30], "s13": [17, 22, 30], "s23": [17, 22, 30], "group_gener": [17, 26, 27, 29, 30], "verifi": [17, 35, 67, 69, 70, 73], "lemma": [17, 67], "white2015": 17, "show": [17, 20, 64, 70, 73], "j_5": 17, "1q": 17, "j5": 17, "to_matrix": [17, 53, 55, 57], "geometr": 17, "to_permut": 17, "j7": 17, "p3": 17, "mult": 17, "r2l": 17, "l2r": [17, 64], "bilinear_form": [17, 38], "bilinear": [17, 38, 45, 51, 53, 54, 55, 57, 58], "almost": 17, "reorder": [17, 64], "remov": [17, 70], "djs2003": 17, "permute_rows_and_column": 17, "geometric_representation_gener": 17, "span": [17, 45], "epsilon_v": 17, "_v": 17, "e_v": 17, "epsilon_u": 17, "epsilon_": 17, "f_v": 17, "rho": [17, 24], "faith": [17, 38, 70], "blow": 17, "ran": 17, "max_test": 17, "15000": 17, "did": 17, "counterexampl": 17, "visit": [17, 70], "cur": 17, "mat": [17, 48], "rg": 17, "break": [17, 73], "pop": 17, "zip": 17, "val": 17, "continu": 17, "matp": 17, "set_immut": 17, "inject": [17, 70], "famili": [17, 20, 27, 29, 38, 61, 70, 73, 76], "max_length": 17, "right_angled_coxeter_group": 17, "emb": [17, 70, 76], "most2019": 17, "diagram": [17, 38, 64], "cocycl": 17, "bcl2022": 17, "purecactusgroup": 17, "kernelsubgroup": [17, 30], "pj_n": 17, "surject": 17, "split": [17, 20, 59, 60, 66, 67, 70, 73], "longrightarrow": [17, 70], "pj3": [17, 30], "purecactu": [17, 28, 30], "indexerror": 17, "schreier": 17, "s_lemma": 17, "travers": 17, "lex": 17, "minimum": [17, 70], "corollari": 17, "classfunct": 18, "tabl": [18, 70, 73], "therefor": [18, 65], "somewhat": 18, "franco": 18, "saliola": 18, "novemb": 18, "octob": 18, "bugfix": 18, "exterior": [18, 76], "class_funct": [18, 32], "cyclicpermutationgroup": [18, 21, 22, 24, 40, 49, 70, 72, 73], "conjugacy_class": [18, 19, 32, 70, 73, 75], "chi": [18, 32, 40], "classfunction_gap": 18, "sageobject": [18, 34, 64], "adams_oper": 18, "adam": 18, "psi": [18, 27, 77, 78], "turn": [18, 21, 64, 65, 67, 73], "char": 18, "irreducible_charact": [18, 32, 70], "zeta5": [18, 70], "decompos": 18, "central_charact": 18, "trivial_charact": [18, 32, 70], "appear": [18, 70], "s5": [18, 20], "irr": [18, 70], "determinant_charact": 18, "exterior_pow": 18, "induct": 18, "supergroup": 18, "adjoint": [18, 35], "xi": [18, 21], "irreducible_constitu": 18, "ic": 18, "is_irreduc": 18, "norm": [18, 38], "a5": 18, "alternatinggroup": [18, 21, 22, 32, 70, 71, 73], "scalar_product": 18, "symmetric_pow": 18, "tensor_product": 18, "chi1": 18, "chi2": 18, "chi3": 18, "zeta8": 18, "classfunction_libgap": 18, "charactert": [18, 70], "gapelement_list": 18, "tensor": 18, "conjugacyclass": [19, 75], "main": [19, 24, 45, 59, 60], "conjugacyclassgap": [19, 75], "go": [19, 28, 48, 53, 54], "wherea": [19, 20], "fallback": 19, "naiv": [19, 67, 70], "butler": 19, "paper": [19, 76], "quicker": 19, "cycl": [19, 63, 64, 70, 71, 73, 75, 76], "fall": [19, 24, 33], "whenev": 19, "is_rat": 19, "close": 19, "is_real": 19, "real": [19, 38, 46, 48, 53, 59, 60], "taken": [19, 38, 70], "weylgroup": [19, 27, 28, 34], "3840": [19, 67], "memori": [19, 21, 24, 65], "intens": 19, "devot": 20, "firstli": 20, "investig": 20, "proceed": [20, 65, 66], "fourth": 20, "canadian": 20, "mathemat": [20, 39, 70], "congress": 20, "vancouv": 20, "1957": 20, "pp": [20, 65, 66, 67, 69], "95": 20, "122": 20, "wise": 20, "four": [20, 22, 70, 73], "five": 20, "sp": [20, 21, 28, 32, 33, 51, 55, 56], "c_3": [20, 70, 73], "todai": 20, "irreduc": [20, 21, 32, 40, 70, 73], "shephard": [20, 73], "todd": [20, 73], "classif": [20, 73], "uniti": [20, 36, 40, 59], "einig": 20, "endlich": 20, "faktorgruppen": 20, "der": 20, "zopfgruppen": 20, "math": [20, 24, 40, 67, 70], "163": 20, "1978": 20, "291": 20, "302": 20, "assion": 20, "seri": [20, 40, 70], "lll": 20, "mbox": 20, "t_2": 20, "t_3": 20, "t_1": 20, "t_i": 20, "he": 20, "hi": [20, 21], "resp": [20, 27, 38, 71], "help": [20, 40, 64, 70, 73], "gap3": 20, "chevi": 20, "instal": [20, 70], "interfac": [20, 31, 34, 39, 48, 49, 70], "as_classical_group": 20, "as_matrix_group": [20, 46, 48, 53], "as_reflection_group": 20, "cox1957": 20, "ass1978": 20, "2019": [20, 39, 71], "cubic_braid": 20, "assiongroup": 20, "cubicbraidgroup": 20, "short": 20, "hand": 20, "cut": 20, "cbg_type": 20, "s3x": 20, "assiongroupu": 20, "assionu": 20, "u3": 20, "u3x": 20, "cubicbraidel": 20, "ele1": 20, "ele2": 20, "preimag": [20, 33], "root_bur": 20, "characterist": [20, 21, 40, 53, 54, 73], "coset": [20, 21, 69, 70], "belong": [20, 70], "indetermin": [20, 40, 73], "sixth": 20, "twelfth": 20, "six": 20, "document": [20, 21, 24, 40, 49, 59, 62, 70], "buma": 20, "zeta3": [20, 48, 49, 53, 57, 59, 70], "sqrt3": 20, "r64": 20, "bumaad": 20, "zeta12": 20, "enum": 20, "due": [20, 22, 67, 70, 73], "activ": 20, "easili": [20, 39, 70], "u0": 20, "u1": 20, "u2": 20, "forc": [20, 21], "psp": [20, 28, 33, 70, 73], "centralizing_el": 20, "enlarg": 20, "pgu": [20, 28, 33, 70, 71, 73], "ucf": [20, 48, 49, 57], "stand": 20, "u3cl": 20, "u3clemb": 20, "ucl": 20, "u4": 20, "u4cl": 20, "c4cl": 20, "c5mch5": 20, "m_back": 20, "u5": 20, "u5mch3": 20, "use_class": 20, "pc3": 20, "occurr": 20, "info": 20, "messag": [20, 73], "r3": [20, 22], "st4": 20, "cartan_matrix": 20, "simple_root": 20, "simple_coroot": 20, "mr": 20, "c3cl": 20, "view": [20, 64, 70, 73], "r4": 20, "invariant_form": [20, 46, 51, 53, 54, 55, 56, 57, 58], "classical_invariant_form": 20, "braid_group": 20, "bu": 20, "ub": [20, 24, 64], "avoid": 20, "wait": 20, "s15": 20, "109777561863482259035023554842176139436811616256000": 20, "hilfssatz": 20, "insid": [20, 70, 73], "classical_group": 20, "cm": 20, "degener": [20, 53, 57], "caus": 20, "is_singular": 20, "codegre": [20, 73], "sens": [20, 32, 38, 40, 53], "cubic_braid_subgroup": 20, "nstrand": 20, "is_finit": [20, 25, 32, 38, 46, 51], "simple_reflect": [20, 26, 27, 38, 71, 73], "select": 20, "typeerror": [20, 22, 35, 38, 40, 41, 53, 55, 57, 70], "free_group": [21, 23, 34], "thing": [21, 67], "access": [21, 28, 32, 34, 37, 70, 74], "fp": [21, 34], "lowercentralseri": 21, "hold": [21, 48, 54], "gapelement_integ": 21, "abelian": [21, 22, 23, 24, 25, 29, 32, 33, 70, 73, 76], "g_ab": 21, "m1": [21, 23, 32, 39, 40, 73], "m2": [21, 23, 32, 39, 40, 48], "guarante": [21, 40, 70], "finish": [21, 65], "undecid": [21, 25], "process": [21, 64, 65, 71, 73], "until": 21, "exhaust": [21, 65], "presentation_of_a_group": 21, "word_problem_for_group": 21, "finitely_pres": 21, "gapel": [21, 23, 33, 34, 63, 70], "abelian_alexander_matrix": 21, "gauss": 21, "elimin": 21, "eras": 21, "abelian_invari": [21, 23], "i_j": [21, 23], "abelianization_map": 21, "abelianization_to_algebra": 21, "alexander_matrix": 21, "im_gen": [21, 23], "fox": [21, 23], "introduc": 21, "t2": [21, 23], "t3": [21, 23], "t4": 21, "limit": [21, 24, 66, 73, 78], "4096000": 21, "maxim": [21, 34, 40, 70, 73], "abort": 21, "permutationgroup": [21, 39, 48, 70, 71, 72, 73], "exce": 21, "exceed": 21, "decid": 21, "prepar": 21, "consum": [21, 40, 64], "without": [21, 40, 73], "sensibl": 21, "answer": [21, 70], "characteristic_varieti": 21, "matrix_id": 21, "groebner": 21, "varieti": [21, 64], "cs1999a": 21, "mathbb": 21, "toru": 21, "system": [21, 26, 27, 35, 38, 40, 64, 70], "v_k": 21, "ignor": [21, 48, 53, 67, 70], "gr\u00f6bner": 21, "stop": 21, "empti": 21, "direct_product": [21, 24, 49, 70, 72, 73], "new_nam": 21, "directproduct": [21, 34, 70], "joh1990": 21, "proposit": 21, "ask": 21, "old": [21, 71], "klein": [21, 22, 73], "examin": 21, "But": [21, 24, 63, 70], "davi": [21, 22, 70], "shurbert": [21, 22, 70], "2013": [21, 22, 26, 27, 29, 38, 39, 41, 42, 44, 46, 53, 55, 57, 70, 76, 77], "x4": [21, 23], "rewriting_system": 21, "confluent": 21, "reduct": 21, "make_conflu": 21, "semidirect_product": [21, 70], "cartesian": [21, 27, 70], "h_1": [21, 27, 70], "g_2": [21, 24, 27, 36, 70], "h_2": [21, 27, 70], "implicitli": 21, "slot": 21, "second": [21, 26, 35, 39, 59, 60, 63, 64, 67, 70], "costli": 21, "bypass": 21, "confid": [21, 70], "permutationgroup_gener": [21, 63, 64, 70, 72, 73], "depth": [21, 67, 70], "d4": [21, 24, 45, 49, 70, 72], "alpha1": [21, 70], "alpha2": [21, 70], "dicycl": [21, 22, 28, 70, 73], "alpha": [21, 27, 38, 70, 73, 77, 78], "dihedralgroup": [21, 22, 24, 40, 49, 70, 71, 72, 73], "off": [21, 67], "expens": [21, 33, 70, 72], "behavior": 21, "unpredict": [21, 70], "invalid": 21, "caught": 21, "simplification_isomorph": 21, "complic": [21, 42, 65, 70], "e0": [21, 76], "e1": [21, 76], "e2": [21, 76], "e4": 21, "e5": [21, 48, 49, 57], "e6": 21, "e7": 21, "e8": 21, "e9": 21, "sorted_present": 21, "sort": [21, 29, 40, 64, 67, 70, 71, 73, 75, 76], "structure_descript": [21, 24, 49, 70], "latex": [21, 24, 49, 51, 52, 53, 55, 56, 57, 70], "tri": [21, 24, 40, 49, 70], "structuredescript": [21, 24, 49, 70], "build": [21, 22, 24, 49, 63, 65, 70], "produc": [21, 24, 40, 49, 64, 70], "latexexpr": [21, 24, 49, 70], "mainli": [21, 24, 49, 70], "small": [21, 22, 24, 32, 40, 46, 49, 70, 73], "surpris": [21, 24, 49, 70], "d3": [21, 24, 49, 70], "17573": [21, 24, 49, 70], "And": [21, 22, 24, 49, 70, 72], "a8": [21, 24, 49, 70], "freegroupel": [21, 23], "groupmorphismwithgensimag": 21, "setmorph": [21, 26, 33], "rewritingsystem": 21, "knuth": 21, "bendix_completion_algorithm": 21, "shortlex": 21, "kbmag": 21, "compil": 21, "finitely_presented_group": 21, "after": [21, 64, 70], "bendix": 21, "is_conflu": 21, "appli": [21, 26, 65, 70], "try": [21, 24, 40, 42, 64, 65, 71, 73], "intern": [21, 70], "grant": 21, "although": [21, 73], "occas": 21, "interrupt": 21, "manual": [21, 40], "makeconflu": 21, "wrap_fpgroup": 21, "libgap_fpgroup": 21, "comparison": [21, 23], "libgap_free_group": [21, 23], "id": [21, 23, 32, 70, 73], "put": [21, 23, 70], "implic": [21, 23], "_set_compare_by_id": [21, 23], "safe": [21, 23], "recommend": [21, 23], "a_cub": 21, "generatorsofgroup": [21, 40], "tab": [22, 28, 37, 74], "made": [22, 24, 64, 65, 70, 73, 76], "engin": 22, "tw1980": [22, 70, 73], "a_n": [22, 23, 73], "c_n": [22, 70, 73], "nonabelian": [22, 39, 70, 73], "4n": [22, 36, 73], "d_n": [22, 73], "fgabelian": [22, 28], "c_2": [22, 65, 70, 73], "kleinfour": [22, 28, 73], "quaternion": [22, 28, 39, 73], "06": [22, 64, 70, 72, 73], "desir": 22, "finitely_presented_nam": 22, "cyclicpresent": 22, "alternatingpresent": 22, "a6": 22, "360": [22, 73], "binarydihedralpresent": 22, "bd_n": [22, 36], "typo": [22, 36, 64], "sun2010": [22, 36], "binarydihedr": [22, 36], "cactuspresent": 22, "dicyclicpresent": 22, "dihedralpresent": 22, "finitelygeneratedabelianpresent": 22, "int_list": 22, "variou": [22, 27, 28, 41, 51, 70], "unabl": [22, 35, 38], "finitelygeneratedheisenbergpresent": 22, "heisenberggroup": [22, 43], "y1": [22, 67], "r1": [22, 64], "r2": [22, 64], "hp": 22, "hnp": 22, "heisenberg_group": [22, 43], "kleinfourpresent": 22, "quaternionpresent": 22, "quaterniongroup": [22, 73], "symmetricpresent": 22, "identity_matrix": [23, 48], "m3": [23, 32, 39], "preferenti": 23, "fox_deriv": 23, "x_2": [23, 35], "a_2": 23, "partial_j": 23, "delta_": 23, "qquad": [23, 26, 35, 36, 73], "uv": 23, "lie": [23, 28], "infer": 23, "syllabl": 23, "x_k": 23, "subword": 23, "singl": [23, 39, 40, 63], "freegroup_class": 23, "generator_nam": 23, "divis": [23, 24, 28], "is_freegroup": 23, "wrap_freegroup": 23, "collect": [24, 61, 76], "group": [24, 30, 63, 65, 66, 67, 68, 69], "multiplication_nam": 24, "addition_nam": 24, "caller": 24, "op": 24, "finder": 24, "linear_rel": 24, "order_from_multipl": 24, "order_from_bound": 24, "781": 24, "672": [24, 53], "39": [24, 33, 64, 70, 71, 73], "36": [24, 32, 33, 40, 64, 70, 71, 73], "3227": 24, "plist": 24, "prime_factor": 24, "hasse_bound": 24, "bsg": [24, 67], "bound": 24, "babi": 24, "step": [24, 35], "giant": 24, "na": 24, "lb": 24, "le": 24, "lower": [24, 40, 70], "upper": [24, 43, 70], "except": [24, 48, 73, 76], "soft": 24, "next_prim": 24, "230": 24, "500": [24, 70], "229": 24, "lift_x": 24, "69327408": 24, "john": [24, 64], "cremona": 24, "priori": 24, "nb": 24, "vastli": 24, "pohlig": 24, "hellman": 24, "pollard": 24, "kangaroo": 24, "997": 24, "2356": 24, "121": 24, "50": [24, 69, 70, 73], "quadraticfield": [24, 40], "eta": 24, "detect": 24, "11515": 24, "55224": 24, "negat": 24, "dlog": 24, "smooth": 24, "63": [24, 64, 73], "2005": [24, 70, 73], "29": [24, 32, 64, 70, 71, 73], "julien": 24, "grijalva": 24, "09": [24, 35, 41, 53, 64, 73, 76], "discrete_log_gener": 24, "discrete_log_lambda": 24, "hash_funct": 24, "built": [24, 65, 70], "hash": [24, 73], "amount": [24, 32, 70, 73], "coupl": 24, "critic": 24, "1234567": 24, "1200000": 24, "1250000": 24, "89": 24, "2011": [24, 67, 70], "704966": 24, "yann": 24, "laigl": 24, "chapui": 24, "discrete_log_rho": 24, "adapt": 24, "edlyn": 24, "tesk": 24, "1234": 24, "46591": 24, "50021": 24, "10577": 24, "23999": 24, "28893": 24, "14601": 24, "41019": 24, "30188": 24, "3081": 24, "736": 24, "27092": 24, "bewar": [24, 71], "integermodr": [24, 55], "171980": 24, "31002": 24, "15501": 24, "123456": 24, "failur": [24, 65], "happen": 24, "better": [24, 70], "has_ord": 24, "exactli": [24, 59, 70], "71": 24, "57": [24, 73], "14981": 24, "321": 24, "70": [24, 40], "mq": 24, "additive_ord": 24, "merge_point": 24, "p1": [24, 35, 70], "p2": [24, 70], "suppli": [24, 34], "g_3": 24, "n_3": 24, "hbox": 24, "ob": 24, "oc": 24, "728": 24, "od": 24, "discrete_logarithm": 24, "realfield": 24, "0625000000000": 24, "idempot": 24, "fast": [24, 64, 70], "389a1": 24, "645656132358737542773209599489": 24, "22817025904944891235367494656": 24, "525532176124281192881231818644174845702936831": 24, "3446581505217248068297884384990762467229696": 24, "528978757629498440949529703029165608170166527": 24, "p0": 24, "101": 24, "102": 24, "104": 24, "105": 24, "106": 24, "107": 24, "108": 24, "109": 24, "height": 24, "000000000000000": 24, "35": [24, 64, 70, 71, 73], "361": 24, "5720": 24, "6859": 24, "47503": 24, "16641": 24, "9862190": 24, "2146689": 24, "0000000000000": 24, "previou": [24, 70, 76], "200": 24, "250": 24, "kept": [24, 51, 53, 55, 57], "compat": [24, 63, 70, 71, 76], "prefer": 24, "cach": [24, 70], "subsequ": 24, "1279": 24, "mersenn": 24, "42391158275216203514294433200": 24, "algebraicgroup": 25, "finitegroup": [25, 70, 78], "develop": 25, "overrid": [25, 27, 32], "principl": 25, "thu": [25, 38, 70, 71, 73], "termin": [25, 65], "is_group": 25, "shimozono": [26, 27], "group_exp": [26, 27], "groupexp": [26, 27], "exponenti": [26, 35], "creation": [26, 35, 71], "kind": [26, 33, 35, 65], "accomplish": 26, "_apply_functor": 26, "ez": [26, 27], "manipul": [26, 73], "achiev": [26, 70], "_apply_functor_to_morph": 26, "rootsystem": [26, 27], "ambient_spac": 26, "weyl_group": [26, 27], "my_act": 26, "commutativeadditivegroup": 26, "groupexpel": 26, "elementwrapp": [26, 30], "eg": [26, 64], "groupexp_class": 26, "weight_lattic": 26, "weight": [26, 38], "lattic": [26, 27], "__mul__": 26, "group_semidirect_product": 27, "groupsemidirectproduct": 27, "twist": 27, "act_to_right": 27, "prefix0": 27, "prefix1": 27, "print_tupl": 27, "cartesianproduct": 27, "1_h": 27, "1_g": 27, "former": 27, "rtime": [27, 73], "syntact": [27, 71], "align": 27, "g_1g_2": [27, 70], "prefixl": 27, "style": 27, "ev": 27, "cartan_typ": [27, 73], "cartantyp": 27, "ww": 27, "functori": 27, "twofold": 27, "groupsemidirectproductel": 27, "__main__": 27, "cartesian_project": 27, "opposite_semidirect_product": 27, "exchang": 27, "hop": 27, "upon": [27, 70], "to_opposit": 27, "opposit": [27, 76], "root_lattic": 27, "weyl": [27, 73], "discov": [28, 69], "quickli": [28, 70], "press": [28, 64, 66, 70, 73], "primari": [28, 40], "complexreflect": [28, 73], "mathieu": [28, 73], "suzuki": [28, 70, 73], "pgl": [28, 32, 33, 70, 73], "psl": [28, 70, 72, 73], "psu": [28, 70, 73], "transit": [28, 62, 70, 73], "rubikscub": [28, 64], "quaterniongf3": [28, 39], "coxetergroup": [28, 38, 41, 48], "reflectiongroup": 28, "rightangledartin": [28, 76], "additiveabelian": 28, "additivecycl": 28, "semimonomialtransform": [28, 77, 78], "indexed_free_group": 29, "indexedfreeabeliangroup": 29, "indexedgroup": 29, "indexedfreeabelianmonoidel": 29, "indexedfreegroup": 29, "indexedfreemonoidel": 29, "to_word_list": 29, "sign": [29, 48, 59, 70, 71], "indexedmonoid": 29, "lazi": [29, 40], "unless": [29, 70, 73], "kernel_subgroup": 30, "defining_morph": 30, "_from_cactus_group_el": 30, "__call__": [30, 70], "dedic": 31, "your": [31, 32, 34, 70, 72], "own": [31, 34, 65], "g_gap": 31, "libgap_group": [31, 32, 34, 40, 49], "grouplibgap": [31, 32, 34], "grouplibgap_with_categori": 31, "arg": [31, 33, 51, 59, 70], "properli": [32, 71], "libgap_mixin": 32, "enumeratedset": 32, "parentmethod": 32, "51840": 32, "12130560": 32, "480": 32, "finitefield": 32, "character_t": [32, 40, 70, 73], "gx": [32, 70], "vert": [32, 70], "conjugacy_classes_subgroup": [32, 70], "group_id": [32, 70], "identifi": [32, 73], "smallgroup": [32, 73], "gaperror": [32, 73], "identif": [32, 70], "cyclicgroup": [32, 34], "is_nilpot": [32, 70], "is_p_group": 32, "is_perfect": [32, 70], "perfect": [32, 70], "is_polycycl": [32, 70], "is_solv": [32, 70, 73], "is_simpl": [32, 70], "is_supersolv": [32, 70], "supersolv": [32, 70], "5241": 32, "mg": [32, 70], "10515": 32, "9437": 32, "contigu": [32, 70], "execut": [32, 70], "vast": [32, 70], "Its": [32, 70], "instruct": [32, 70], "studi": [32, 70], "exhibit": [32, 70], "26750": [33, 70, 71], "natural_map": 33, "libgap_morph": [33, 44, 50, 70], "grouphomset_libgap": [33, 44, 70], "homsetwithbas": 33, "groupmorphism_libgap": 33, "overload": 33, "nat": 33, "grouphomset_libgap_with_categori": 33, "gap_hom": [33, 72], "pr": 33, "34": [33, 40, 64, 67, 70, 71, 73], "pushforward": 33, "sect": 33, "helper": [34, 50, 57, 67, 73], "libgap_wrapp": [34, 70], "fooelement": 34, "foogroup": 34, "__init__": [34, 63], "lg": 34, "dummi": 34, "superclass": 34, "pc": [34, 73], "_repr_": 34, "libgap_el": 34, "xg": 34, "is_on": [34, 41, 59], "3x3": 34, "96": 34, "nth_root": 34, "usabl": 34, "__reduce__": 34, "serial": 34, "pickl": 34, "nativ": 34, "recreat": 34, "f6": 34, "relatorsoffpgroup": 34, "start": [34, 65, 73], "Not": 34, "bigger": [34, 40], "maximal_normal_subgroup": [34, 70], "proper": [34, 70], "49": [34, 46, 64, 73], "minimal_normal_subgroup": [34, 70], "19270": 34, "itertool": 34, "subgroup_gen": 34, "diagonal_matrix": 34, "eero": 35, "hakavuori": 35, "lie_gp": 35, "nilpotent_lie_group": 35, "nilpotentliegroup": 35, "differentiablemanifold": 35, "topolog": 35, "rr": [35, 38, 46, 53, 59, 73], "chart_exp1": 35, "chart_exp2": 35, "lie_algebra": 35, "lie_group": 35, "default_chart": 35, "chart": 35, "x_0": 35, "set_default_chart": 35, "frame": 35, "left_invariant_fram": 35, "right_invariant_fram": 35, "displai": [35, 64, 69, 70, 71], "exp1_fram": 35, "exp2_fram": 35, "y_0": 35, "y_2": 35, "l_g": 35, "left_transl": 35, "diffeomorph": 35, "differenti": 35, "x_l": 35, "left_invariant_extens": 35, "x_r": 35, "right_invariant_extens": 35, "vanish": 35, "manifoldpoint": 35, "liealgebra": 35, "operatornam": [35, 73], "_g": 35, "admit": [35, 36], "ad_g": 35, "x_12": 35, "x_112": 35, "x_122": 35, "x_1x_1": 35, "x_nx_n": 35, "y_12": 35, "ghg": 35, "c_g": 35, "chart1": 35, "chart2": 35, "noth": [35, 64], "extens": [35, 40], "custom": [35, 65], "manifold": 35, "vector_fram": 35, "livf": 35, "coord_fram": 35, "z_0": 35, "z_1": 35, "z_2": 35, "w_a": 35, "w_b": 35, "w_c": 35, "gh": [35, 70], "l_h": 35, "rivf": 35, "xr_1": 35, "xr_2": 35, "xr_12": 35, "right_transl": 35, "hg": [35, 70], "r_g": 35, "r_h": 35, "2016": [36, 41], "matrix_gp": [36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "binary_dihedr": 36, "binarydihedralgroup": 36, "finitelygeneratedmatrixgroup_gap": [36, 40, 43, 45, 47, 48, 49, 54, 56, 58], "zeta_": [36, 53, 57], "zeta_4": 36, "zeta_k": 36, "avatar": 36, "dol2009": 36, "dicyclic_group": 36, "binary_dihedral_group": 36, "coxetermatrixgroup": 38, "finitelygeneratedmatrixgroup_gener": [38, 39], "alpha_": 38, "inner": [38, 70], "alpha_t": 38, "co": [38, 64, 67], "frac": [38, 40], "st": [38, 67], "sigma_": 38, "cartan": [38, 73], "quadrat": [38, 53, 54, 55, 56, 76], "edg": [38, 64, 67, 76], "treat": [38, 73], "coxeter_diagram": 38, "becaus": [38, 60, 65, 73, 78], "cup": 38, "oo": [38, 40], "236067977499790": 38, "matrixgroupelement_gener": [38, 41, 48], "action_on_root_indic": 38, "side": [38, 48, 70, 71], "w0": 38, "canonical_matrix": 38, "descent": [38, 71, 73], "node": 38, "dynkin": 38, "first_desc": 38, "descript": [38, 59, 62, 70, 73], "has_right_desc": 38, "sum_": [38, 40, 70, 73], "semidefinit": 38, "canonical_represent": 38, "fundamental_weight": 38, "positive_root": 38, "simple_root_index": 38, "design": 39, "sl2z": 39, "_contains_": [39, 48], "2007": [39, 48, 64, 70, 71, 73], "invariant_gener": [39, 40, 48], "martin": [39, 40, 48], "albrecht": [39, 40, 48], "king": [39, 40, 48, 70], "module_composition_factor": [39, 40, 48], "meatax": [39, 40, 48], "improv": [39, 48], "reynold": [39, 40, 48], "singular": [39, 40, 48], "_permutation_group_element_": 39, "25706": [39, 70], "revis": [39, 41], "26903": 39, "27143": 39, "finitely_gener": 39, "generator_matric": 39, "matrixgroup_gener": [39, 48, 49, 51], "h1": 39, "h2": 39, "formal": [39, 59, 73], "nonsens": 39, "sl2c": 39, "attributeerror": 39, "linearmatrixgroup_generic_with_categori": 39, "attribut": [39, 46, 65], "quaternionmatrixgroupgf3": 39, "symmetri": [39, 70, 73], "d_4": [39, 70, 73], "commonli": [39, 76], "ay": 39, "jai": 39, "kai": 39, "normalize_square_matric": 39, "m4": 39, "finitely_generated_gap": 40, "matrixgroup_gap": [40, 49, 52], "finitelygeneratedmatrixgroup_gap_with_categori": 40, "seed": [40, 65, 70], "occur": [40, 65, 73], "hard": 40, "harder": 40, "context": 40, "low": 40, "invoc": 40, "imf": 40, "function_factori": 40, "imfmatrixgroup": 40, "gg": 40, "21499084800": 40, "psmaller": 40, "144": [40, 46], "integr": [40, 51], "concern": [40, 71], "involv": [40, 70], "smallerdegreepermutationrepresent": 40, "reproduc": [40, 70], "good": [40, 65, 70], "bad": 40, "secondari": 40, "invariant_algebra_reynold": 40, "invariant_r": 40, "finvar": 40, "gen1": 40, "gen2": 40, "gen3": 40, "stu1993": 40, "modular": [40, 73], "arxiv": 40, "0703035": 40, "invariants_of_degre": 40, "deg": [40, 71], "gr": 40, "ct": [40, 70], "match": 40, "izeta3": 40, "www": [40, 64], "org": [40, 64], "ref": 40, "chap69": 40, "html": [40, 64], "molien_seri": [40, 70], "return_seri": 40, "prec": 40, "molien": [40, 70], "det": [40, 70, 73], "tg": 40, "omega": 40, "k_i": [40, 76], "prod_": [40, 73], "dec1998": 40, "lazili": 40, "tetrahedr": 40, "tetra": 40, "mol": 40, "taylor": 40, "octahedr": 40, "octa": 40, "icosahedr": 40, "z5": 40, "ico": 40, "reynolds_oper": 40, "poli": 40, "compositum": 40, "absolut": [40, 71], "rebecca": 40, "lauren": 40, "ben": 40, "hutz": 40, "zeta4": 40, "1666666666666667": 40, "2886751345948129": 40, "ll": 40, "unsupport": 41, "operand": 41, "similarli": [41, 64, 73], "address": 41, "rework": 41, "hierarchi": 41, "cython": [41, 71], "414213562373095": 41, "huge": 41, "charpoli": [41, 42], "is_matrixgroupel": 41, "helloooo": 41, "group_element_gap": 42, "matrixgroupelement_gap": [42, 49], "flatten": [42, 75], "solut": [42, 64], "hilder": 43, "vitor": 43, "lima": 43, "pereira": 43, "i_n": 43, "243": 43, "1024": 43, "corner": [43, 64], "along": [43, 69], "is_matrixgrouphomset": 44, "deprecationwarn": [44, 50, 70], "matrixgrouphomset": 44, "pleas": 44, "25444": [44, 50], "integrallattic": 45, "orthogonal_group": 45, "1152": 45, "groupactiononquotientmodul": 45, "quotient_modul": 45, "is_left": 45, "groupofisometri": 45, "invariant_bilinear_form": [45, 53, 54], "invariant_quotient_modul": 45, "groupactiononsubmodul": 45, "invariant_submodul": 45, "orthogonalmatrixgroup_gap": [45, 54], "regist": 45, "bil": 45, "extrem": [46, 53, 55, 57], "refactor": [46, 53, 55, 57], "kl1990": 46, "car1972": 46, "11064475422000000000000000": 46, "color_by_label": 46, "vertex_s": 46, "vertex_label": 46, "linearmatrixgroup_gener": [46, 47], "sage_nam": [46, 47, 51, 52, 53, 54, 55, 56, 57, 58], "latex_str": [46, 47, 51, 52, 53, 54, 55, 56, 57, 58], "namedmatrixgroup_gener": [46, 51, 52, 53, 55, 57], "372000": 46, "1956712595698146962015219062429586341124018007182049478916067369638713066737882363393519966343657677430907011270206265834819092046250232049187967718149558134226774650845658791865745408000000": 46, "_3": 46, "linear_gap": 47, "linearmatrixgroup_gap": 47, "gap_command_str": [47, 52, 54, 56, 58], "namedmatrixgroup_gap": [47, 52, 54, 56, 58], "25894": 48, "matrix_group": [48, 51], "matrixgroup_bas": 48, "assumpt": [48, 65], "throw": 48, "awai": [48, 65], "encod": [48, 76], "sign_represent": [48, 70], "twosid": [48, 70], "_default_sign": 48, "universalcyclotomicfield": [48, 49, 57], "is_matrixgroup": 48, "matrix_group_gap": 49, "to_libgap": 50, "famou": 51, "named_group": 51, "subcategori": 51, "isinst": [51, 52], "etc": 51, "normalize_args_invariant_form": 51, "becom": [51, 73], "26028": [51, 53, 55, 57], "normalize_args_vectorspac": 51, "named_group_gap": 52, "command": [52, 70], "ari": 53, "disambigu": 53, "inequival": 53, "third": 53, "odd": [53, 70, 73], "_latex_": [53, 57], "__str__": [53, 57], "_og": 53, "cmd": 53, "relev": [53, 65], "distinguish": 53, "go3": 53, "go3m": 53, "pm": [53, 55, 57, 73], "orthogonalmatrixgroup_gener": [53, 54], "bold": [53, 55, 56, 57], "rrr": [53, 57], "invariant_quadratic_form": [53, 54], "so3": 53, "so3m": 53, "normalize_args_": 53, "orthogonal_gap": 54, "transpos": 55, "276595200": 55, "modifi": [55, 57, 70], "special_linear": [55, 57], "sp4m": 55, "sp4": 55, "symplecticmatrixgroup_gener": [55, 56], "sp43": 55, "rrrr": 55, "symplectic_gap": 56, "symplecticmatrixgroup_gap": 56, "378000": 57, "minor": 57, "_ug": 57, "_check_matrix": 57, "nondegener": [57, 73], "sesquilinear": [57, 73], "beta": [57, 77, 78], "gm": 57, "unitarymatrixgroup_gener": [57, 58], "su4": 57, "finite_field_sqrt": 57, "unitary_gap": 58, "unitarymatrixgroup_gap": 58, "g32": 58, "rootsofunitygroup": 59, "unitcirclegroup": 59, "circl": 59, "mathit": 59, "argumentbyelementgroup": 59, "factori": [59, 67, 69, 70, 78], "argumentgroup": 59, "conveni": 59, "asymptot": [59, 60], "growth": [59, 60], "lvert": 59, "rvert": 59, "influenc": [59, 60], "daniel": [59, 60], "krenn": [59, 60], "misc_gp": [59, 60], "argument_group": 59, "abstractargu": 59, "abstractargumentgroup": 59, "argumentbyel": 59, "plane": 59, "argumentgroupfactori": 59, "uniquefactori": 59, "analyz": [59, 64], "interpret": [59, 70], "signgroup": 59, "uu": 59, "uu_p": 59, "arg_p": 59, "carri": 59, "uu_qq": 59, "aa": 59, "arg_rr": 59, "rif": 59, "real_interval_field": 59, "rbf": 59, "arg_cc": 59, "cif": 59, "cbf": 59, "create_key_and_extra_arg": 59, "create_object": 59, "rootofun": 59, "unitcirclepoint": 59, "exponent_denomin": 59, "denomin": 59, "exponent_numer": 59, "numer": [59, 73], "is_minus_on": 59, "420000000000000": 59, "333333333333333": 59, "re": 60, "im": [60, 77], "imaginary_group": 60, "imaginaryel": 60, "additivegroupel": 60, "imaginarygroup": 60, "imag_part": 60, "real_part": 60, "fit": [61, 70], "elsewher": 61, "polgaloi": [62, 70], "pari_group": 62, "parigroup": [62, 70], "polynomialr": [62, 71], "galois_group": [62, 72], "human": 62, "readabl": 62, "44": [62, 64, 70, 71, 73], "signatur": [62, 65], "transitive_numb": [62, 73], "ntk": 62, "permutationgroupel": [63, 70, 71], "flavor": 63, "combinatori": [63, 64], "perm_gp": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75], "mandatori": 63, "standardize_gener": 63, "convert_dict": 63, "as_cycl": 63, "_gap_": [63, 70, 71], "string_to_tupl": 63, "trademark": 64, "shall": 64, "omit": [64, 70], "simplic": 64, "clockwis": 64, "quarter": 64, "face": 64, "front": [64, 70], "move": [64, 70], "read": 64, "cubegroup": 64, "pars": 64, "singmast": 64, "xyz": 64, "facet": 64, "rotat": 64, "flip": 64, "display2d": 64, "rear": [64, 70], "38": [64, 70, 71, 73], "41": [64, 70, 71, 73], "46": [64, 70, 71, 73], "47": [64, 70, 71, 73], "rewritten": 64, "edit": 64, "clean": 64, "bradshaw": [64, 71], "rewrot": 64, "docstr": [64, 70], "versatil": 64, "cleanup": 64, "cameron": [64, 70, 73], "york": [64, 70, 73], "cambridg": [64, 66, 70, 73], "1999": [64, 70, 73], "wielandt": [64, 70, 73], "academ": [64, 70, 73], "1964": [64, 70, 73], "dixon": [64, 70, 73], "mortim": [64, 70, 73], "verlag": [64, 70, 73], "berlin": [64, 70, 73], "adventur": 64, "hopkin": 64, "univ": 64, "2002": 64, "mv": 64, "2d": 64, "bdflru": 64, "t2b": 64, "state": 64, "gen_nam": 64, "mode": 64, "quiet": 64, "r0": 64, "xa": 64, "yb": 64, "perm_group": 64, "plot3d_cub": 64, "titl": 64, "mostli": 64, "draw": 64, "pictur": 64, "superflip": 64, "spot": 64, "26q": 64, "20f": 64, "plot_cub": 64, "2u": 64, "uf": 64, "fr": 64, "repr2d": 64, "explain": 64, "trick": [64, 72], "stabil": [64, 70], "discuss": [64, 67], "intuit": 64, "histori": 64, "show3d": 64, "cubi": 64, "sticker": 64, "025": 64, "scrambl": 64, "hybrid": 64, "timeout": 64, "kociemba": 64, "dietz": 64, "dik": 64, "winter": 64, "program": [64, 72], "eric": 64, "cubex": 64, "michael": 64, "reid": 64, "highli": 64, "undo": 64, "color_of_squar": 64, "lpurpl": 64, "yellow": 64, "green": 64, "orang": 64, "create_poli": 64, "polygon": [64, 70], "ur": 64, "cubie_cent": 64, "cubie_color": 64, "state0": 64, "cubie_fac": 64, "index2singmast": 64, "fdr": 64, "dlf": 64, "inv_list": 64, "lst": [64, 70, 76], "perm": [64, 66, 67, 77, 78], "plot3d_cubi": 64, "cnt": 64, "clr": 64, "rgbcolor": 64, "fur": 64, "clrf": 64, "clru": 64, "clrr": 64, "polygon_plot3d": 64, "tilt": 64, "kwarg": 64, "drawn": [64, 70], "ie": [64, 70, 73], "rotation_list": 64, "sin": 64, "theta": 64, "49999999999999994": 64, "7071067811865475": 64, "8660254037844387": 64, "7071067811865476": 64, "xproj": 64, "rot": 64, "6123724356957945": 64, "yproj": 64, "378497416975604": 64, "question": 65, "loos": 65, "automorphism_group_canonical_label": 65, "mention": 65, "refine_and_return_invari": 65, "partitionstack": 65, "void": 65, "cells_to_refine_bi": 65, "ctrb_len": 65, "compare_structur": 65, "gamma_1": 65, "gamma_2": 65, "all_children_are_equival": 65, "bint": 65, "frequent": 65, "mem_err": 65, "pointer": 65, "alloc": 65, "serv": 65, "alreadi": [65, 67, 71], "ctypedef": 65, "struct": 65, "generate_children": 65, "aut_gp_and_can_lab": 65, "receiv": 65, "updat": 65, "child": 65, "null": 65, "At": 65, "clear": 65, "dealloc": 65, "softwar": 65, "canonical_generator_data": 65, "thought": [65, 73], "apply_augment": 65, "aug": 65, "free_object": 65, "children": 65, "reject": 65, "content": 65, "free_iter_data": 65, "free_aug": 65, "canonical_par": 65, "level": 65, "never": [65, 77], "realloc": 65, "strive": 65, "segment": 65, "canonical_augment": 65, "mckai": [65, 66, 67, 69], "brendan": [65, 66, 67, 69], "vol": [65, 66, 67, 69, 70], "1998": 65, "306": 65, "324": 65, "congressu": [66, 67, 69], "numerantium": [66, 67, 69], "1981": [66, 67, 69], "87": [66, 67, 69], "fredman": 66, "sak": 66, "cell": 66, "probe": 66, "dynam": 66, "twenti": 66, "annual": 66, "acm": 66, "symposium": 66, "345": 66, "354": 66, "1989": 66, "seress": 66, "ako": 66, "data_structur": 66, "op_repres": 66, "merg": [66, 70], "demonstr": 66, "ps_repres": 66, "partit": [66, 70, 71, 73, 75], "sc_test_list_perm": 66, "limit_complain": 66, "test_contain": 66, "refinement_graph": 67, "graphstruct": 67, "all_labeled_graph": 67, "approach": 67, "importantli": 67, "benchmark": 67, "search_tre": 67, "glist": 67, "giso": 67, "inn": 67, "gi": 67, "append": 67, "coarsest_equitable_refin": 67, "coarsest": 67, "equit": 67, "refin": 67, "thorough": 67, "sparse_graph": 67, "sparsegraph": 67, "generate_dense_graphs_edge_addit": 67, "loop": 67, "indicate_mem_err": 67, "544": 67, "5096": 67, "156": [67, 70], "1044": 67, "ghz": 67, "12346": 67, "generate_dense_graphs_vert_addit": 67, "base_g": 67, "209": 67, "1253": 67, "13599": 67, "get_orbit": 67, "partn": 67, "ordering2": 67, "dig": 67, "use_indicator_funct": 67, "add_edg": 67, "orbit_partit": 67, "list_perm": 67, "vertex": [67, 76], "petersengraph": [67, 70], "random_test": [67, 69], "num": 67, "n_max": 67, "perms_per_graph": 67, "sure": [67, 69], "densiti": [67, 69], "randomli": [67, 69, 73], "uniformli": [67, 69], "g_in": 67, "lab": 67, "dict_rep": 67, "certif": 67, "arbitrarili": 67, "cgraph": 67, "dense_graph": 67, "densegraph": 67, "dodecahedron": 67, "dodecahedralgraph": [67, 70], "cubegraph": 67, "relabel": [67, 69, 70], "edge_iter": 67, "add_arc": 67, "asp": 67, "bsp": 67, "bde": 67, "bdg": 67, "has_arc": 67, "graph6_str": 67, "pg__oq": 67, "ae": 67, "ec": 67, "ac": [67, 73], "384": [67, 73], "46080": 67, "chri": 67, "godsil": 67, "hoffmansingletongraph": 67, "alq": 67, "cliques_maximum": 67, "y0": 67, "connected_components_subgraph": 67, "border": 67, "fll": 67, "num_vert": 67, "faga": 67, "pco": 67, "cp": 67, "aga": 67, "_qo": 67, "cca": 67, "bo": 67, "inplac": 67, "dkw": 67, "refinement_list": 68, "biject": [68, 70], "refinement_matric": 69, "leon": 69, "jeffrei": 69, "1991": 69, "533": 69, "583": 69, "matrixstruct": 69, "strong": [69, 70], "canonical_relabel": 69, "01100": 69, "00011": 69, "store": [69, 73], "nrows_max": 69, "ncols_max": 69, "nsymbols_max": 69, "perms_per_matrix": 69, "density_rang": 69, "distinct": [69, 73], "doubl": 69, "permgp_nam": 70, "direct_product_permgroup": 70, "joke": 70, "hot": 70, "chunki": 70, "soup": 70, "renteln": 70, "dund": 70, "foolproof": 70, "sampl": 70, "folk": 70, "humor": 70, "amer": 70, "soc": 70, "52": [70, 73], "as_finitely_presented_group": 70, "blocks_al": 70, "block": 70, "imprimit": 70, "cohomologi": [70, 76], "cohomology_part": 70, "composition_seri": 70, "derived_seri": 70, "fitting_subgroup": 70, "fixed_point": 70, "frattini_subgroup": [70, 73], "frattini": [70, 73], "gens_smal": 70, "group_primitive_id": [70, 73], "databas": [70, 73], "has_el": 70, "parentag": 70, "holomorph": 70, "h_n": 70, "hap": 70, "grouphomologi": 70, "graham": 70, "elli": 70, "homology_part": 70, "is_elementary_abelian": 70, "is_monomi": 70, "is_norm": 70, "is_pgroup": 70, "subnorm": 70, "is_primit": 70, "is_regular": 70, "regularli": 70, "is_semi_regular": 70, "semi": [70, 73], "is_transit": 70, "isomorphism_to": [70, 72], "isomorphism_type_info_simple_group": 70, "largest_moved_point": 70, "lower_central_seri": 70, "minimal_generating_set": 70, "non_fixed_point": 70, "normal_subgroup": 70, "poincare_seri": 70, "poincar\u00e9": 70, "representative_act": 70, "socl": 70, "solvable_rad": 70, "radic": 70, "strong_generating_system": 70, "permutationgroup_subgroup": 70, "sylow_subgroup": 70, "transvers": 70, "upper_central_seri": 70, "04": 70, "conjugacy_class_repres": 70, "reorgan": [70, 71], "subdirectori": 70, "__contains__": 70, "_cmp_": 70, "ramification_module_decomposition_modular_curv": [70, 73], "ramification_module_decomposition_hurwitz_curv": [70, 73], "mathieugroup": [70, 73], "bobbi": [70, 73], "moretti": [70, 73], "kleinfourgroup": [70, 73], "kiran": 70, "kedlaya": 70, "is_normal_subgroup": 70, "harvei": 70, "mike": 70, "hansen": 70, "nick": [70, 73], "patch": 70, "nathan": 70, "dunfield": 70, "cayley_t": 70, "quotient_group": 70, "file": 70, "from_gap_list": 70, "report": 70, "palenstijn": 70, "__cmp__": 70, "nicola": 70, "bori": 70, "stabilis": 70, "christoph": 70, "swenson": 70, "copyright": 70, "googl": 70, "inc": 70, "javier": 70, "lopez": 70, "pena": 70, "_coerce_map_from_": 70, "christian": 70, "stump": 70, "_hom_": 70, "_subgroup_constructor": 70, "okai": [70, 73], "ree": [70, 73], "permgroup": [70, 72], "canonic": [70, 71, 73], "duplic": 70, "current_randst": 70, "set_seed_gap": 70, "derivedseri": 70, "generatorssmallest": 70, "permutationgroup_act": 70, "setpartit": 70, "regular": [70, 73], "isomorphismfpgroupbygener": 70, "generaldihedralgroup": [70, 73], "m12": 70, "behaviour": 70, "clearli": 70, "is_vertex_transit": 70, "ag": 70, "suppos": 70, "v_1": 70, "v_n": 70, "rho_1": 70, "rho_n": 70, "suffici": 70, "character_table_valu": 70, "gap_packag": [70, 73], "spkg": 70, "gap_package_hap": 70, "resolut": 70, "2004": 70, "1077": 70, "1118": 70, "hamilton": 70, "nuigalwai": 70, "primer": 70, "ucdavi": 70, "edu": 70, "0706": 70, "0549": 70, "statement": 70, "dicyclicgroup": [70, 73], "matter": 70, "junk": 70, "set_random_se": 70, "cl": 70, "correspondingli": 70, "relationship": 70, "strng": 70, "permutationgroupfunctor": 70, "place": 70, "consequ": 70, "across": 70, "within": 70, "outer": 70, "versu": 70, "sophist": 70, "gon": 70, "straight": 70, "quarter_turn": 70, "rc": 70, "lc": 70, "rc_sort": 70, "lc_sort": 70, "tetrahedron": 70, "face_turn": 70, "rob": [70, 73], "beezer": [70, 73], "choos": 70, "iota1": 70, "iota2": 70, "pr1": [70, 72], "pr2": 70, "p8": 70, "65784756654489600": 70, "sym": 70, "a4": 70, "neither": 70, "irredund": 70, "nor": [70, 73], "proven": [70, 73], "linux": 70, "solari": 70, "primitivegroup": [70, 73], "warn": 70, "meth": 70, "33831": 70, "has_regular_subgroup": 70, "return_group": 70, "isn": 70, "petersen": 70, "rtimes_": 70, "thoma": [70, 77, 78], "wood": 70, "shiva": 70, "publish": 70, "1980": 70, "tell": 70, "c_5": 70, "shown": [70, 73, 76], "kevin": [70, 73], "halasz": [70, 73], "h_7": 70, "s_5": [70, 71], "enough": [70, 73], "strict": 70, "s_4": [70, 73], "istransit": 70, "rec": 70, "shortnam": 70, "sg": 70, "bf": 70, "breadth": 70, "df": 70, "completegraph": [70, 76], "sometim": [70, 76], "molienseri": 70, "15817": 70, "s4m": 70, "nh": 70, "isnorm": 70, "member": 70, "onpoint": 70, "ontupl": 70, "onset": 70, "onpair": 70, "onsetsset": 70, "onsetsdisjointset": 70, "onsetstupl": 70, "ontuplesset": 70, "ontuplestupl": 70, "On": 70, "union": 70, "nonstandard": 70, "orb": 70, "h_k": 70, "representativeact": 70, "skip": 70, "benefici": 70, "far": [70, 73], "n_": 70, "semidirectproduct": 70, "permutationgroupmorphism_im_gen": [70, 72], "successfulli": 70, "sake": 70, "c2000": 70, "permutationgroupmorph": [70, 72], "smallest_moved_point": 70, "s10": 70, "30240": 70, "base_of_group": 70, "po": 70, "_1": 70, "_2": 70, "_d": 70, "_i": 70, "g_0": 70, "supset": 70, "transitivegroup": [70, 73], "minut": 70, "commod": 70, "hardwar": 70, "30030": 70, "twice": [70, 73], "coprim": 70, "sylowsubgroup": 70, "d_8": 70, "1728": 70, "src": 70, "hap_decor": 70, "foo": 70, "load_hap": 70, "synonym": 71, "27234": 71, "43252003274489856000": 71, "srang": 71, "permgroup_el": 71, "rationalfield": 71, "sigma": [71, 77, 78], "cycle_str": 71, "singleton": 71, "cycle_tupl": 71, "cycle_typ": 71, "as_list": 71, "is_list": 71, "p_libgap": 71, "has_desc": 71, "_test_has_desc": 71, "swap": 71, "contribut": 71, "sum_c": 71, "symmetricgroupel": [71, 73], "absolute_length": 71, "shortest": 71, "absolute_l": 71, "has_left_desc": 71, "from_reduced_word": 71, "is_permutationgroupel": 71, "make_permgroup_el": 71, "unpickl": 71, "pre": 71, "make_permgroup_element_v2": 71, "permgroup_morph": 72, "28324": 72, "splitting_field": 72, "permutationgroupmorphism_from_gap": 72, "programm": 72, "usag": 72, "domain_group": 72, "range_group": 72, "gap_hom_command": 72, "permutationgroupmorphism_id": 72, "is_permutationgroupmorph": 72, "s_x": 73, "a_x": 73, "dih": 73, "4m": 73, "splitmetacyclicgroup": 73, "semidihedralgroup": 73, "centr": 73, "suzukigroup": 73, "b_2": 73, "2k": 73, "sz": 73, "complexreflectiongroup": 73, "g_m": 73, "smallpermutationgroup": 73, "permgp": 73, "permgroup_nam": 73, "permutationgroup_symalt": 73, "thereof": 73, "permutationgroup_uniqu": 73, "adjac": 73, "transposit": 73, "mn": 73, "29160": 73, "join": 73, "648": 73, "61440": 73, "complex_reflection_group": 73, "nm": 73, "as_abeliangroup": 73, "fewer": 73, "d_6": 73, "a_4": 73, "c_4": 73, "con": 73, "4096": 73, "half": 73, "unlik": 73, "240": 73, "enter": 73, "nonident": 73, "ba": 73, "bc": 73, "cb": 73, "broken": 73, "c_m": 73, "themselv": 73, "c34": 73, "c46": 73, "c14": 73, "c17": 73, "427680": 73, "jankogroup": 73, "janko": 73, "j1": 73, "j2": 73, "j4": 73, "among": 73, "gap_package_atlasrep": 73, "internet": 73, "175560": 73, "95040": 73, "permutationgroup_plg": 73, "ground": 73, "permutationgroup_pug": 73, "ramif": 73, "hurwitz": 73, "pmod": 73, "born": 73, "equivari": 73, "conj": 73, "mi": 73, "pi_i": 73, "irrrepn": 73, "pi_1": 73, "pi_n": 73, "ami": 73, "ksir": 73, "roger": 73, "vogel": 73, "riemann": 73, "roch": 73, "preprint": 73, "smallish": 73, "editor": 73, "shaska": 73, "lectur": 73, "worldscientif": 73, "25920": 73, "matrix_degre": 73, "field_of_definit": 73, "primitivegroupsiter": 73, "primitivegroupsal": 73, "disjointunionenumeratedset": 73, "facad": 73, "__iter__": 73, "primitivegroupsofdegre": 73, "agl": 73, "manner": 73, "neg_on": 73, "semidihedr": 73, "sent": 73, "notabl": 73, "gor1980": 73, "gap_id": 73, "sgl": 73, "later": 73, "releas": 73, "numgp": 73, "numbersmallgroup": 73, "gap_small_group": 73, "pcgroup": 73, "168": 73, "metacycl": 73, "Be": 73, "awar": 73, "possess": 73, "strictli": 73, "speak": 73, "58": 73, "59": 73, "62": 73, "56": 73, "51": 73, "32537600": 73, "group_of_lie_typ": 73, "ree_group": 73, "suzukisporadicgroup": 73, "sporad": 73, "suzukisporad": 73, "1782": 73, "40320": 73, "s8": 73, "advantag": 73, "featur": 73, "symmetricgroupalgebra": 73, "cellular": 73, "semigroup": 73, "conjugacy_classes_iter": 73, "major_index": 73, "gadget": 73, "young_subgroup": 73, "comp": 73, "young": 73, "transitivegroupsal": 73, "transitivegroupsofdegre": 73, "301": 73, "vincent": 75, "delecroix": 75, "2014": 75, "symgp_conjugacy_class": 75, "permutationsconjugacyclass": 75, "symmetricgroupconjugacyclassmixin": 75, "symmetricgroupconjugacyclass": 75, "mixin": 75, "conjugacy_class_iter": 75, "conjugacy_class_s": 75, "abcdef": 75, "default_repres": 75, "lambda_1": 75, "lambda_2": 75, "lambda_": 75, "abbrevi": 76, "raag": 76, "partial": 76, "cohomologyraag": 76, "combinatorialfreemodul": 76, "wedg": 76, "e_j": 76, "cartier": 76, "foata": 76, "cq2019": 76, "cohomologyraagel": 76, "algebra_gener": 76, "degree_on_basi": 76, "cliqu": 76, "one_basi": 76, "g_v": 76, "g_u": 76, "notin": 76, "rich": 76, "despit": 76, "dro1987": 76, "bb1997": 76, "fp_2": 76, "freeli": 76, "cocompactli": 76, "cat": 76, "biautomat": 76, "v_i": 76, "v_j": 76, "cp2001": 76, "vw1994": 76, "gather": 76, "v0": 76, "v1": 76, "v2": 76, "v3": 76, "cha2006": 76, "angled_artin_group": 76, "v4": 76, "vx": 76, "vy": 76, "vzeta": 76, "one_el": 76, "circ": [77, 78], "psi_": [77, 78], "elementwis": [77, 78], "psi_0": [77, 78], "psi_1": [77, 78], "semimonomialtransformationgroup": [77, 78], "feulner": [77, 78], "15576": 77, "dissolv": 77, "semimonomial_transform": [77, 78], "autom": [77, 78], "get_autom": 77, "get_perm": 77, "get_v": 77, "get_v_invers": 77, "invert_v": 77, "unchang": 77, "semimonomial_transformation_group": 78, "semimonomialactionmat": 78, "semimonomialactionvec": 78, "v_0": 78, "v_": 78, "phi_0": 78, "phi_": 78}, "objects": {"sage.groups.abelian_gps": [[1, 0, 0, "-", "abelian_aut"], [2, 0, 0, "-", "abelian_group"], [3, 0, 0, "-", "abelian_group_element"], [4, 0, 0, "-", "abelian_group_gap"], [5, 0, 0, "-", "abelian_group_morphism"], [6, 0, 0, "-", "dual_abelian_group"], [7, 0, 0, "-", "dual_abelian_group_element"], [8, 0, 0, "-", "element_base"], [9, 0, 0, "-", "values"]], "sage.groups.abelian_gps.abelian_aut": [[1, 1, 1, "", "AbelianGroupAutomorphism"], [1, 1, 1, "", "AbelianGroupAutomorphismGroup"], [1, 1, 1, "", "AbelianGroupAutomorphismGroup_gap"], [1, 1, 1, "", "AbelianGroupAutomorphismGroup_subgroup"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphism": [[1, 2, 1, "", "matrix"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup": [[1, 3, 1, "", "Element"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap": [[1, 3, 1, "", "Element"], [1, 2, 1, "", "covering_matrix_ring"], [1, 2, 1, "", "domain"], [1, 2, 1, "", "is_subgroup_of"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_subgroup": [[1, 3, 1, "", "Element"]], "sage.groups.abelian_gps.abelian_group": [[2, 4, 1, "", "AbelianGroup"], [2, 1, 1, "", "AbelianGroup_class"], [2, 1, 1, "", "AbelianGroup_subgroup"], [2, 4, 1, "", "is_AbelianGroup"], [2, 4, 1, "", "word_problem"]], "sage.groups.abelian_gps.abelian_group.AbelianGroup_class": [[2, 3, 1, "", "Element"], [2, 3, 1, "", "Subgroup"], [2, 2, 1, "", "cardinality"], [2, 2, 1, "", "dual_group"], [2, 2, 1, "", "elementary_divisors"], [2, 2, 1, "", "exponent"], [2, 2, 1, "", "gen"], [2, 2, 1, "", "gens"], [2, 2, 1, "", "gens_orders"], [2, 2, 1, "", "identity"], [2, 2, 1, "", "invariants"], [2, 2, 1, "", "is_commutative"], [2, 2, 1, "", "is_cyclic"], [2, 2, 1, "", "is_isomorphic"], [2, 2, 1, "", "is_subgroup"], [2, 2, 1, "", "is_trivial"], [2, 2, 1, "", "list"], [2, 2, 1, "", "ngens"], [2, 2, 1, "", "number_of_subgroups"], [2, 2, 1, "", "order"], [2, 2, 1, "", "permutation_group"], [2, 2, 1, "", "random_element"], [2, 2, 1, "", "subgroup"], [2, 2, 1, "", "subgroup_reduced"], [2, 2, 1, "", "subgroups"], [2, 2, 1, "", "torsion_subgroup"]], "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup": [[2, 2, 1, "", "ambient_group"], [2, 2, 1, "", "equals"], [2, 2, 1, "", "gen"], [2, 2, 1, "", "gens"]], "sage.groups.abelian_gps.abelian_group_element": [[3, 1, 1, "", "AbelianGroupElement"], [3, 4, 1, "", "is_AbelianGroupElement"]], "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement": [[3, 2, 1, "", "as_permutation"], [3, 2, 1, "", "word_problem"]], "sage.groups.abelian_gps.abelian_group_gap": [[4, 1, 1, "", "AbelianGroupElement_gap"], [4, 1, 1, "", "AbelianGroupElement_polycyclic"], [4, 1, 1, "", "AbelianGroupGap"], [4, 1, 1, "", "AbelianGroupQuotient_gap"], [4, 1, 1, "", "AbelianGroupSubgroup_gap"], [4, 1, 1, "", "AbelianGroup_gap"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap": [[4, 2, 1, "", "exponents"], [4, 2, 1, "", "order"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_polycyclic": [[4, 2, 1, "", "exponents"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap": [[4, 2, 1, "", "cover"], [4, 2, 1, "", "lift"], [4, 2, 1, "", "natural_homomorphism"], [4, 2, 1, "", "relations"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap": [[4, 2, 1, "", "lift"], [4, 2, 1, "", "retract"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap": [[4, 3, 1, "", "Element"], [4, 2, 1, "", "all_subgroups"], [4, 2, 1, "", "aut"], [4, 2, 1, "", "automorphism_group"], [4, 2, 1, "", "elementary_divisors"], [4, 2, 1, "", "exponent"], [4, 2, 1, "", "gens_orders"], [4, 2, 1, "", "identity"], [4, 2, 1, "", "is_subgroup_of"], [4, 2, 1, "", "is_trivial"], [4, 2, 1, "", "quotient"], [4, 2, 1, "", "subgroup"]], "sage.groups.abelian_gps.abelian_group_morphism": [[5, 1, 1, "", "AbelianGroupMap"], [5, 1, 1, "", "AbelianGroupMorphism"], [5, 4, 1, "", "is_AbelianGroupMorphism"]], "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism": [[5, 2, 1, "", "image"], [5, 2, 1, "", "kernel"]], "sage.groups.abelian_gps.dual_abelian_group": [[6, 1, 1, "", "DualAbelianGroup_class"], [6, 4, 1, "", "is_DualAbelianGroup"]], "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class": [[6, 3, 1, "", "Element"], [6, 2, 1, "", "base_ring"], [6, 2, 1, "", "gen"], [6, 2, 1, "", "gens"], [6, 2, 1, "", "gens_orders"], [6, 2, 1, "", "group"], [6, 2, 1, "", "invariants"], [6, 2, 1, "", "is_commutative"], [6, 2, 1, "", "list"], [6, 2, 1, "", "ngens"], [6, 2, 1, "", "order"], [6, 2, 1, "", "random_element"]], "sage.groups.abelian_gps.dual_abelian_group_element": [[7, 1, 1, "", "DualAbelianGroupElement"], [7, 4, 1, "", "is_DualAbelianGroupElement"]], "sage.groups.abelian_gps.dual_abelian_group_element.DualAbelianGroupElement": [[7, 2, 1, "", "word_problem"]], "sage.groups.abelian_gps.element_base": [[8, 1, 1, "", "AbelianGroupElementBase"]], "sage.groups.abelian_gps.element_base.AbelianGroupElementBase": [[8, 2, 1, "", "exponents"], [8, 2, 1, "", "is_trivial"], [8, 2, 1, "", "list"], [8, 2, 1, "", "multiplicative_order"], [8, 2, 1, "", "order"]], "sage.groups.abelian_gps.values": [[9, 4, 1, "", "AbelianGroupWithValues"], [9, 1, 1, "", "AbelianGroupWithValuesElement"], [9, 1, 1, "", "AbelianGroupWithValuesEmbedding"], [9, 1, 1, "", "AbelianGroupWithValues_class"]], "sage.groups.abelian_gps.values.AbelianGroupWithValuesElement": [[9, 2, 1, "", "value"]], "sage.groups.abelian_gps.values.AbelianGroupWithValues_class": [[9, 3, 1, "", "Element"], [9, 2, 1, "", "gen"], [9, 2, 1, "", "gens_values"], [9, 2, 1, "", "values_embedding"], [9, 2, 1, "", "values_group"]], "sage.groups.additive_abelian": [[10, 0, 0, "-", "additive_abelian_group"], [11, 0, 0, "-", "additive_abelian_wrapper"]], "sage.groups.additive_abelian.additive_abelian_group": [[10, 4, 1, "", "AdditiveAbelianGroup"], [10, 1, 1, "", "AdditiveAbelianGroupElement"], [10, 1, 1, "", "AdditiveAbelianGroup_class"], [10, 1, 1, "", "AdditiveAbelianGroup_fixed_gens"], [10, 4, 1, "", "cover_and_relations_from_invariants"]], "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class": [[10, 3, 1, "", "Element"], [10, 2, 1, "", "exponent"], [10, 2, 1, "", "is_cyclic"], [10, 2, 1, "", "is_multiplicative"], [10, 2, 1, "", "order"], [10, 2, 1, "", "short_name"]], "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens": [[10, 2, 1, "", "gens"], [10, 2, 1, "", "identity"], [10, 2, 1, "", "permutation_group"]], "sage.groups.additive_abelian.additive_abelian_wrapper": [[11, 1, 1, "", "AdditiveAbelianGroupWrapper"], [11, 1, 1, "", "AdditiveAbelianGroupWrapperElement"], [11, 1, 1, "", "UnwrappingMorphism"], [11, 4, 1, "", "basis_from_generators"]], "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper": [[11, 3, 1, "", "Element"], [11, 2, 1, "", "discrete_exp"], [11, 2, 1, "", "discrete_log"], [11, 2, 1, "", "from_generators"], [11, 2, 1, "", "generator_orders"], [11, 2, 1, "", "torsion_subgroup"], [11, 2, 1, "", "universe"]], "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapperElement": [[11, 2, 1, "", "element"]], "sage.groups.affine_gps": [[12, 0, 0, "-", "affine_group"], [13, 0, 0, "-", "euclidean_group"], [14, 0, 0, "-", "group_element"]], "sage.groups.affine_gps.affine_group": [[12, 1, 1, "", "AffineGroup"]], "sage.groups.affine_gps.affine_group.AffineGroup": [[12, 3, 1, "", "Element"], [12, 2, 1, "", "cardinality"], [12, 2, 1, "", "degree"], [12, 2, 1, "", "linear"], [12, 2, 1, "", "linear_space"], [12, 2, 1, "", "matrix_space"], [12, 2, 1, "", "random_element"], [12, 2, 1, "", "reflection"], [12, 2, 1, "", "some_elements"], [12, 2, 1, "", "translation"], [12, 2, 1, "", "vector_space"]], "sage.groups.affine_gps.euclidean_group": [[13, 1, 1, "", "EuclideanGroup"]], "sage.groups.affine_gps.euclidean_group.EuclideanGroup": [[13, 2, 1, "", "random_element"]], "sage.groups.affine_gps.group_element": [[14, 1, 1, "", "AffineGroupElement"]], "sage.groups.affine_gps.group_element.AffineGroupElement": [[14, 2, 1, "", "A"], [14, 2, 1, "", "b"], [14, 2, 1, "", "list"], [14, 2, 1, "", "matrix"]], "sage.groups": [[15, 0, 0, "-", "artin"], [16, 0, 0, "-", "braid"], [17, 0, 0, "-", "cactus_group"], [18, 0, 0, "-", "class_function"], [19, 0, 0, "-", "conjugacy_classes"], [20, 0, 0, "-", "cubic_braid"], [21, 0, 0, "-", "finitely_presented"], [22, 0, 0, "-", "finitely_presented_named"], [23, 0, 0, "-", "free_group"], [24, 0, 0, "-", "generic"], [25, 0, 0, "-", "group"], [26, 0, 0, "-", "group_exp"], [27, 0, 0, "-", "group_semidirect_product"], [28, 0, 0, "-", "groups_catalog"], [29, 0, 0, "-", "indexed_free_group"], [30, 0, 0, "-", "kernel_subgroup"], [31, 0, 0, "-", "libgap_group"], [32, 0, 0, "-", "libgap_mixin"], [33, 0, 0, "-", "libgap_morphism"], [34, 0, 0, "-", "libgap_wrapper"], [62, 0, 0, "-", "pari_group"], [76, 0, 0, "-", "raag"]], "sage.groups.artin": [[15, 1, 1, "", "ArtinGroup"], [15, 1, 1, "", "ArtinGroupElement"], [15, 1, 1, "", "FiniteTypeArtinGroup"], [15, 1, 1, "", "FiniteTypeArtinGroupElement"]], "sage.groups.artin.ArtinGroup": [[15, 3, 1, "", "Element"], [15, 2, 1, "", "an_element"], [15, 2, 1, "", "as_permutation_group"], [15, 2, 1, "", "cardinality"], [15, 2, 1, "", "coxeter_group"], [15, 2, 1, "", "coxeter_matrix"], [15, 2, 1, "", "coxeter_type"], [15, 2, 1, "", "index_set"], [15, 2, 1, "", "order"], [15, 2, 1, "", "some_elements"]], "sage.groups.artin.ArtinGroupElement": [[15, 2, 1, "", "coxeter_group_element"], [15, 2, 1, "", "exponent_sum"]], "sage.groups.artin.FiniteTypeArtinGroup": [[15, 3, 1, "", "Element"], [15, 2, 1, "", "delta"]], "sage.groups.artin.FiniteTypeArtinGroupElement": [[15, 2, 1, "", "left_normal_form"]], "sage.groups.braid": [[16, 1, 1, "", "Braid"], [16, 4, 1, "", "BraidGroup"], [16, 1, 1, "", "BraidGroup_class"], [16, 1, 1, "", "MappingClassGroupAction"], [16, 1, 1, "", "RightQuantumWord"]], "sage.groups.braid.Braid": [[16, 2, 1, "", "LKB_matrix"], [16, 2, 1, "", "TL_matrix"], [16, 2, 1, "", "alexander_polynomial"], [16, 2, 1, "", "annular_khovanov_complex"], [16, 2, 1, "", "annular_khovanov_homology"], [16, 2, 1, "", "burau_matrix"], [16, 2, 1, "", "centralizer"], [16, 2, 1, "", "colored_jones_polynomial"], [16, 2, 1, "", "components_in_closure"], [16, 2, 1, "", "conjugating_braid"], [16, 2, 1, "", "deformed_burau_matrix"], [16, 2, 1, "", "gcd"], [16, 2, 1, "", "is_conjugated"], [16, 2, 1, "", "is_periodic"], [16, 2, 1, "", "is_pseudoanosov"], [16, 2, 1, "", "is_reducible"], [16, 2, 1, "", "jones_polynomial"], [16, 2, 1, "", "lcm"], [16, 2, 1, "", "left_normal_form"], [16, 2, 1, "", "links_gould_matrix"], [16, 2, 1, "", "links_gould_polynomial"], [16, 2, 1, "", "markov_trace"], [16, 2, 1, "", "mirror_image"], [16, 2, 1, "", "permutation"], [16, 2, 1, "", "plot"], [16, 2, 1, "", "plot3d"], [16, 2, 1, "", "pure_conjugating_braid"], [16, 2, 1, "", "reverse"], [16, 2, 1, "", "right_normal_form"], [16, 2, 1, "", "rigidity"], [16, 2, 1, "", "sliding_circuits"], [16, 2, 1, "", "strands"], [16, 2, 1, "", "super_summit_set"], [16, 2, 1, "", "thurston_type"], [16, 2, 1, "", "tropical_coordinates"], [16, 2, 1, "", "ultra_summit_set"]], "sage.groups.braid.BraidGroup_class": [[16, 3, 1, "", "Element"], [16, 2, 1, "", "TL_basis_with_drain"], [16, 2, 1, "", "TL_representation"], [16, 2, 1, "", "an_element"], [16, 2, 1, "", "as_permutation_group"], [16, 2, 1, "", "cardinality"], [16, 2, 1, "", "dimension_of_TL_space"], [16, 2, 1, "", "epimorphisms"], [16, 2, 1, "", "mapping_class_action"], [16, 2, 1, "", "mirror_involution"], [16, 2, 1, "", "order"], [16, 2, 1, "", "presentation_two_generators"], [16, 2, 1, "", "some_elements"], [16, 2, 1, "", "strands"]], "sage.groups.braid.RightQuantumWord": [[16, 2, 1, "", "eps"], [16, 2, 1, "", "reduced_word"], [16, 2, 1, "", "tuples"]], "sage.groups.cactus_group": [[17, 1, 1, "", "CactusGroup"], [17, 1, 1, "", "PureCactusGroup"]], "sage.groups.cactus_group.CactusGroup": [[17, 1, 1, "", "Element"], [17, 2, 1, "", "bilinear_form"], [17, 2, 1, "", "gen"], [17, 2, 1, "", "gens"], [17, 2, 1, "", "geometric_representation_generators"], [17, 2, 1, "", "group_generators"], [17, 2, 1, "", "n"], [17, 2, 1, "", "one"], [17, 2, 1, "", "random_element"], [17, 2, 1, "", "right_angled_coxeter_group"]], "sage.groups.cactus_group.CactusGroup.Element": [[17, 2, 1, "", "to_matrix"], [17, 2, 1, "", "to_permutation"]], "sage.groups.cactus_group.PureCactusGroup": [[17, 2, 1, "", "gen"], [17, 2, 1, "", "gens"], [17, 2, 1, "", "n"]], "sage.groups.class_function": [[18, 4, 1, "", "ClassFunction"], [18, 1, 1, "", "ClassFunction_gap"], [18, 1, 1, "", "ClassFunction_libgap"]], "sage.groups.class_function.ClassFunction_gap": [[18, 2, 1, "", "adams_operation"], [18, 2, 1, "", "central_character"], [18, 2, 1, "", "decompose"], [18, 2, 1, "", "degree"], [18, 2, 1, "", "determinant_character"], [18, 2, 1, "", "domain"], [18, 2, 1, "", "exterior_power"], [18, 2, 1, "", "induct"], [18, 2, 1, "", "irreducible_constituents"], [18, 2, 1, "", "is_irreducible"], [18, 2, 1, "", "norm"], [18, 2, 1, "", "restrict"], [18, 2, 1, "", "scalar_product"], [18, 2, 1, "", "symmetric_power"], [18, 2, 1, "", "tensor_product"], [18, 2, 1, "", "values"]], "sage.groups.class_function.ClassFunction_libgap": [[18, 2, 1, "", "adams_operation"], [18, 2, 1, "", "central_character"], [18, 2, 1, "", "decompose"], [18, 2, 1, "", "degree"], [18, 2, 1, "", "determinant_character"], [18, 2, 1, "", "domain"], [18, 2, 1, "", "exterior_power"], [18, 2, 1, "", "gap"], [18, 2, 1, "", "induct"], [18, 2, 1, "", "irreducible_constituents"], [18, 2, 1, "", "is_irreducible"], [18, 2, 1, "", "norm"], [18, 2, 1, "", "restrict"], [18, 2, 1, "", "scalar_product"], [18, 2, 1, "", "symmetric_power"], [18, 2, 1, "", "tensor_product"], [18, 2, 1, "", "values"]], "sage.groups.conjugacy_classes": [[19, 1, 1, "", "ConjugacyClass"], [19, 1, 1, "", "ConjugacyClassGAP"]], "sage.groups.conjugacy_classes.ConjugacyClass": [[19, 2, 1, "", "an_element"], [19, 2, 1, "", "is_rational"], [19, 2, 1, "", "is_real"], [19, 2, 1, "", "list"], [19, 2, 1, "", "representative"], [19, 2, 1, "", "set"]], "sage.groups.conjugacy_classes.ConjugacyClassGAP": [[19, 2, 1, "", "cardinality"], [19, 2, 1, "", "set"]], "sage.groups.cubic_braid": [[20, 4, 1, "", "AssionGroupS"], [20, 4, 1, "", "AssionGroupU"], [20, 1, 1, "", "CubicBraidElement"], [20, 1, 1, "", "CubicBraidGroup"]], "sage.groups.cubic_braid.CubicBraidElement": [[20, 2, 1, "", "braid"], [20, 2, 1, "", "burau_matrix"]], "sage.groups.cubic_braid.CubicBraidGroup": [[20, 3, 1, "", "Element"], [20, 2, 1, "", "as_classical_group"], [20, 2, 1, "", "as_matrix_group"], [20, 2, 1, "", "as_permutation_group"], [20, 2, 1, "", "as_reflection_group"], [20, 2, 1, "", "braid_group"], [20, 2, 1, "", "cardinality"], [20, 2, 1, "", "centralizing_element"], [20, 2, 1, "", "classical_invariant_form"], [20, 2, 1, "", "codegrees"], [20, 2, 1, "", "cubic_braid_subgroup"], [20, 2, 1, "", "degrees"], [20, 2, 1, "", "index_set"], [20, 2, 1, "", "is_finite"], [20, 2, 1, "", "order"], [20, 2, 1, "", "simple_reflections"], [20, 2, 1, "", "strands"], [20, 1, 1, "", "type"]], "sage.groups.cubic_braid.CubicBraidGroup.type": [[20, 3, 1, "", "AssionS"], [20, 3, 1, "", "AssionU"], [20, 3, 1, "", "Coxeter"]], "sage.groups.finitely_presented": [[21, 1, 1, "", "FinitelyPresentedGroup"], [21, 1, 1, "", "FinitelyPresentedGroupElement"], [21, 1, 1, "", "GroupMorphismWithGensImages"], [21, 1, 1, "", "RewritingSystem"], [21, 4, 1, "", "wrap_FpGroup"]], "sage.groups.finitely_presented.FinitelyPresentedGroup": [[21, 3, 1, "", "Element"], [21, 2, 1, "", "abelian_alexander_matrix"], [21, 2, 1, "", "abelian_invariants"], [21, 2, 1, "", "abelianization_map"], [21, 2, 1, "", "abelianization_to_algebra"], [21, 2, 1, "", "alexander_matrix"], [21, 2, 1, "", "as_permutation_group"], [21, 2, 1, "", "cardinality"], [21, 2, 1, "", "characteristic_varieties"], [21, 2, 1, "", "direct_product"], [21, 2, 1, "", "epimorphisms"], [21, 2, 1, "", "free_group"], [21, 2, 1, "", "order"], [21, 2, 1, "", "relations"], [21, 2, 1, "", "rewriting_system"], [21, 2, 1, "", "semidirect_product"], [21, 2, 1, "", "simplification_isomorphism"], [21, 2, 1, "", "simplified"], [21, 2, 1, "", "sorted_presentation"], [21, 2, 1, "", "structure_description"]], "sage.groups.finitely_presented.FinitelyPresentedGroupElement": [[21, 2, 1, "", "Tietze"]], "sage.groups.finitely_presented.RewritingSystem": [[21, 2, 1, "", "finitely_presented_group"], [21, 2, 1, "", "free_group"], [21, 2, 1, "", "gap"], [21, 2, 1, "", "is_confluent"], [21, 2, 1, "", "make_confluent"], [21, 2, 1, "", "reduce"], [21, 2, 1, "", "rules"]], "sage.groups.finitely_presented_named": [[22, 4, 1, "", "AlternatingPresentation"], [22, 4, 1, "", "BinaryDihedralPresentation"], [22, 4, 1, "", "CactusPresentation"], [22, 4, 1, "", "CyclicPresentation"], [22, 4, 1, "", "DiCyclicPresentation"], [22, 4, 1, "", "DihedralPresentation"], [22, 4, 1, "", "FinitelyGeneratedAbelianPresentation"], [22, 4, 1, "", "FinitelyGeneratedHeisenbergPresentation"], [22, 4, 1, "", "KleinFourPresentation"], [22, 4, 1, "", "QuaternionPresentation"], [22, 4, 1, "", "SymmetricPresentation"]], "sage.groups.free_group": [[23, 4, 1, "", "FreeGroup"], [23, 1, 1, "", "FreeGroupElement"], [23, 1, 1, "", "FreeGroup_class"], [23, 4, 1, "", "is_FreeGroup"], [23, 4, 1, "", "wrap_FreeGroup"]], "sage.groups.free_group.FreeGroupElement": [[23, 2, 1, "", "Tietze"], [23, 2, 1, "", "fox_derivative"], [23, 2, 1, "", "syllables"]], "sage.groups.free_group.FreeGroup_class": [[23, 3, 1, "", "Element"], [23, 2, 1, "", "abelian_invariants"], [23, 2, 1, "", "quotient"], [23, 2, 1, "", "rank"]], "sage.groups.generic": [[24, 4, 1, "", "bsgs"], [24, 4, 1, "", "discrete_log"], [24, 4, 1, "", "discrete_log_generic"], [24, 4, 1, "", "discrete_log_lambda"], [24, 4, 1, "", "discrete_log_rho"], [24, 4, 1, "", "has_order"], [24, 4, 1, "", "linear_relation"], [24, 4, 1, "", "merge_points"], [24, 4, 1, "", "multiple"], [24, 1, 1, "", "multiples"], [24, 4, 1, "", "order_from_bounds"], [24, 4, 1, "", "order_from_multiple"], [24, 4, 1, "", "structure_description"]], "sage.groups.generic.multiples": [[24, 2, 1, "", "next"]], "sage.groups.group": [[25, 1, 1, "", "AbelianGroup"], [25, 1, 1, "", "AlgebraicGroup"], [25, 1, 1, "", "FiniteGroup"], [25, 1, 1, "", "Group"], [25, 4, 1, "", "is_Group"]], "sage.groups.group.AbelianGroup": [[25, 2, 1, "", "is_abelian"]], "sage.groups.group.FiniteGroup": [[25, 2, 1, "", "is_finite"]], "sage.groups.group.Group": [[25, 2, 1, "", "is_abelian"], [25, 2, 1, "", "is_commutative"], [25, 2, 1, "", "is_finite"], [25, 2, 1, "", "is_multiplicative"], [25, 2, 1, "", "is_trivial"], [25, 2, 1, "", "order"], [25, 2, 1, "", "quotient"]], "sage.groups.group_exp": [[26, 1, 1, "", "GroupExp"], [26, 1, 1, "", "GroupExpElement"], [26, 1, 1, "", "GroupExp_Class"]], "sage.groups.group_exp.GroupExp_Class": [[26, 3, 1, "", "Element"], [26, 2, 1, "", "an_element"], [26, 2, 1, "", "group_generators"], [26, 2, 1, "", "one"], [26, 2, 1, "", "product"]], "sage.groups.group_semidirect_product": [[27, 1, 1, "", "GroupSemidirectProduct"], [27, 1, 1, "", "GroupSemidirectProductElement"]], "sage.groups.group_semidirect_product.GroupSemidirectProduct": [[27, 3, 1, "", "Element"], [27, 2, 1, "", "act_to_right"], [27, 2, 1, "", "construction"], [27, 2, 1, "", "group_generators"], [27, 2, 1, "", "one"], [27, 2, 1, "", "opposite_semidirect_product"], [27, 2, 1, "", "product"]], "sage.groups.group_semidirect_product.GroupSemidirectProductElement": [[27, 2, 1, "", "to_opposite"]], "sage.groups.indexed_free_group": [[29, 1, 1, "", "IndexedFreeAbelianGroup"], [29, 1, 1, "", "IndexedFreeGroup"], [29, 1, 1, "", "IndexedGroup"]], "sage.groups.indexed_free_group.IndexedFreeAbelianGroup": [[29, 1, 1, "", "Element"], [29, 2, 1, "", "gen"], [29, 2, 1, "", "one"]], "sage.groups.indexed_free_group.IndexedFreeGroup": [[29, 1, 1, "", "Element"], [29, 2, 1, "", "gen"], [29, 2, 1, "", "one"]], "sage.groups.indexed_free_group.IndexedFreeGroup.Element": [[29, 2, 1, "", "length"], [29, 2, 1, "", "to_word_list"]], "sage.groups.indexed_free_group.IndexedGroup": [[29, 2, 1, "", "gens"], [29, 2, 1, "", "group_generators"], [29, 2, 1, "", "order"], [29, 2, 1, "", "rank"]], "sage.groups.kernel_subgroup": [[30, 1, 1, "", "KernelSubgroup"]], "sage.groups.kernel_subgroup.KernelSubgroup": [[30, 1, 1, "", "Element"], [30, 2, 1, "", "ambient"], [30, 2, 1, "", "defining_morphism"], [30, 2, 1, "", "gens"], [30, 2, 1, "", "lift"], [30, 2, 1, "", "retract"]], "sage.groups.libgap_group": [[31, 1, 1, "", "GroupLibGAP"]], "sage.groups.libgap_group.GroupLibGAP": [[31, 3, 1, "", "Element"]], "sage.groups.libgap_mixin": [[32, 1, 1, "", "GroupMixinLibGAP"]], "sage.groups.libgap_mixin.GroupMixinLibGAP": [[32, 2, 1, "", "cardinality"], [32, 2, 1, "", "center"], [32, 2, 1, "", "centralizer"], [32, 2, 1, "", "character"], [32, 2, 1, "", "character_table"], [32, 2, 1, "", "class_function"], [32, 2, 1, "", "conjugacy_class"], [32, 2, 1, "", "conjugacy_classes"], [32, 2, 1, "", "conjugacy_classes_representatives"], [32, 2, 1, "", "conjugacy_classes_subgroups"], [32, 2, 1, "", "exponent"], [32, 2, 1, "", "group_id"], [32, 2, 1, "", "id"], [32, 2, 1, "", "intersection"], [32, 2, 1, "", "irreducible_characters"], [32, 2, 1, "", "is_abelian"], [32, 2, 1, "", "is_finite"], [32, 2, 1, "", "is_isomorphic"], [32, 2, 1, "", "is_nilpotent"], [32, 2, 1, "", "is_p_group"], [32, 2, 1, "", "is_perfect"], [32, 2, 1, "", "is_polycyclic"], [32, 2, 1, "", "is_simple"], [32, 2, 1, "", "is_solvable"], [32, 2, 1, "", "is_supersolvable"], [32, 2, 1, "", "list"], [32, 2, 1, "", "order"], [32, 2, 1, "", "random_element"], [32, 2, 1, "", "subgroups"], [32, 2, 1, "", "trivial_character"]], "sage.groups.libgap_morphism": [[33, 1, 1, "", "GroupHomset_libgap"], [33, 1, 1, "", "GroupMorphism_libgap"]], "sage.groups.libgap_morphism.GroupHomset_libgap": [[33, 3, 1, "", "Element"], [33, 2, 1, "", "natural_map"]], "sage.groups.libgap_morphism.GroupMorphism_libgap": [[33, 2, 1, "", "gap"], [33, 2, 1, "", "image"], [33, 2, 1, "", "kernel"], [33, 2, 1, "", "lift"], [33, 2, 1, "", "preimage"], [33, 2, 1, "", "pushforward"], [33, 2, 1, "", "section"]], "sage.groups.libgap_wrapper": [[34, 1, 1, "", "ElementLibGAP"], [34, 1, 1, "", "ParentLibGAP"]], "sage.groups.libgap_wrapper.ElementLibGAP": [[34, 2, 1, "", "gap"], [34, 2, 1, "", "inverse"], [34, 2, 1, "", "is_conjugate"], [34, 2, 1, "", "is_one"], [34, 2, 1, "", "multiplicative_order"], [34, 2, 1, "", "normalizer"], [34, 2, 1, "", "nth_roots"], [34, 2, 1, "", "order"]], "sage.groups.libgap_wrapper.ParentLibGAP": [[34, 2, 1, "", "ambient"], [34, 2, 1, "", "gap"], [34, 2, 1, "", "gen"], [34, 2, 1, "", "generators"], [34, 2, 1, "", "gens"], [34, 2, 1, "", "is_subgroup"], [34, 2, 1, "", "maximal_normal_subgroups"], [34, 2, 1, "", "minimal_normal_subgroups"], [34, 2, 1, "", "ngens"], [34, 2, 1, "", "one"], [34, 2, 1, "", "subgroup"]], "sage.groups.lie_gps": [[35, 0, 0, "-", "nilpotent_lie_group"]], "sage.groups.lie_gps.nilpotent_lie_group": [[35, 1, 1, "", "NilpotentLieGroup"]], "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup": [[35, 1, 1, "", "Element"], [35, 2, 1, "", "adjoint"], [35, 2, 1, "", "chart_exp1"], [35, 2, 1, "", "chart_exp2"], [35, 2, 1, "", "conjugation"], [35, 2, 1, "", "exp"], [35, 2, 1, "", "gens"], [35, 2, 1, "", "left_invariant_extension"], [35, 2, 1, "", "left_invariant_frame"], [35, 2, 1, "", "left_translation"], [35, 2, 1, "", "lie_algebra"], [35, 2, 1, "", "livf"], [35, 2, 1, "", "log"], [35, 2, 1, "", "one"], [35, 2, 1, "", "right_invariant_extension"], [35, 2, 1, "", "right_invariant_frame"], [35, 2, 1, "", "right_translation"], [35, 2, 1, "", "rivf"], [35, 2, 1, "", "step"]], "sage.groups.matrix_gps": [[36, 0, 0, "-", "binary_dihedral"], [37, 0, 0, "-", "catalog"], [38, 0, 0, "-", "coxeter_group"], [39, 0, 0, "-", "finitely_generated"], [40, 0, 0, "-", "finitely_generated_gap"], [41, 0, 0, "-", "group_element"], [42, 0, 0, "-", "group_element_gap"], [43, 0, 0, "-", "heisenberg"], [44, 0, 0, "-", "homset"], [45, 0, 0, "-", "isometries"], [46, 0, 0, "-", "linear"], [47, 0, 0, "-", "linear_gap"], [48, 0, 0, "-", "matrix_group"], [49, 0, 0, "-", "matrix_group_gap"], [50, 0, 0, "-", "morphism"], [51, 0, 0, "-", "named_group"], [52, 0, 0, "-", "named_group_gap"], [53, 0, 0, "-", "orthogonal"], [54, 0, 0, "-", "orthogonal_gap"], [55, 0, 0, "-", "symplectic"], [56, 0, 0, "-", "symplectic_gap"], [57, 0, 0, "-", "unitary"], [58, 0, 0, "-", "unitary_gap"]], "sage.groups.matrix_gps.binary_dihedral": [[36, 1, 1, "", "BinaryDihedralGroup"]], "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup": [[36, 2, 1, "", "cardinality"], [36, 2, 1, "", "order"]], "sage.groups.matrix_gps.coxeter_group": [[38, 1, 1, "", "CoxeterMatrixGroup"]], "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup": [[38, 1, 1, "", "Element"], [38, 2, 1, "", "bilinear_form"], [38, 2, 1, "", "canonical_representation"], [38, 2, 1, "", "coxeter_matrix"], [38, 2, 1, "", "fundamental_weight"], [38, 2, 1, "", "fundamental_weights"], [38, 2, 1, "", "is_commutative"], [38, 2, 1, "", "is_finite"], [38, 2, 1, "", "order"], [38, 2, 1, "", "positive_roots"], [38, 2, 1, "", "reflections"], [38, 2, 1, "", "roots"], [38, 2, 1, "", "simple_reflection"], [38, 2, 1, "", "simple_root_index"]], "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element": [[38, 2, 1, "", "action_on_root_indices"], [38, 2, 1, "", "canonical_matrix"], [38, 2, 1, "", "descents"], [38, 2, 1, "", "first_descent"], [38, 2, 1, "", "has_right_descent"]], "sage.groups.matrix_gps.finitely_generated": [[39, 1, 1, "", "FinitelyGeneratedMatrixGroup_generic"], [39, 4, 1, "", "MatrixGroup"], [39, 4, 1, "", "QuaternionMatrixGroupGF3"], [39, 4, 1, "", "normalize_square_matrices"]], "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic": [[39, 2, 1, "", "gen"], [39, 2, 1, "", "gens"], [39, 2, 1, "", "ngens"]], "sage.groups.matrix_gps.finitely_generated_gap": [[40, 1, 1, "", "FinitelyGeneratedMatrixGroup_gap"]], "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap": [[40, 2, 1, "", "as_permutation_group"], [40, 2, 1, "", "invariant_generators"], [40, 2, 1, "", "invariants_of_degree"], [40, 2, 1, "", "module_composition_factors"], [40, 2, 1, "", "molien_series"], [40, 2, 1, "", "reynolds_operator"]], "sage.groups.matrix_gps.group_element": [[41, 1, 1, "", "MatrixGroupElement_generic"], [41, 4, 1, "", "is_MatrixGroupElement"]], "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic": [[41, 2, 1, "", "inverse"], [41, 2, 1, "", "is_one"], [41, 2, 1, "", "list"], [41, 2, 1, "", "matrix"]], "sage.groups.matrix_gps.group_element_gap": [[42, 1, 1, "", "MatrixGroupElement_gap"]], "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap": [[42, 2, 1, "", "list"], [42, 2, 1, "", "matrix"], [42, 2, 1, "", "multiplicative_order"], [42, 2, 1, "", "word_problem"]], "sage.groups.matrix_gps.heisenberg": [[43, 1, 1, "", "HeisenbergGroup"]], "sage.groups.matrix_gps.heisenberg.HeisenbergGroup": [[43, 2, 1, "", "cardinality"], [43, 2, 1, "", "center"], [43, 2, 1, "", "order"]], "sage.groups.matrix_gps.homset": [[44, 4, 1, "", "is_MatrixGroupHomset"]], "sage.groups.matrix_gps.isometries": [[45, 1, 1, "", "GroupActionOnQuotientModule"], [45, 1, 1, "", "GroupActionOnSubmodule"], [45, 1, 1, "", "GroupOfIsometries"]], "sage.groups.matrix_gps.isometries.GroupOfIsometries": [[45, 2, 1, "", "invariant_bilinear_form"]], "sage.groups.matrix_gps.linear": [[46, 4, 1, "", "GL"], [46, 1, 1, "", "LinearMatrixGroup_generic"], [46, 4, 1, "", "SL"]], "sage.groups.matrix_gps.linear.LinearMatrixGroup_generic": [[46, 2, 1, "", "cardinality"], [46, 2, 1, "", "order"]], "sage.groups.matrix_gps.linear_gap": [[47, 1, 1, "", "LinearMatrixGroup_gap"]], "sage.groups.matrix_gps.matrix_group": [[48, 1, 1, "", "MatrixGroup_base"], [48, 1, 1, "", "MatrixGroup_generic"], [48, 4, 1, "", "is_MatrixGroup"]], "sage.groups.matrix_gps.matrix_group.MatrixGroup_base": [[48, 2, 1, "", "ambient"], [48, 2, 1, "", "as_matrix_group"], [48, 2, 1, "", "sign_representation"], [48, 2, 1, "", "subgroup"]], "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic": [[48, 3, 1, "", "Element"], [48, 2, 1, "", "degree"], [48, 2, 1, "", "is_trivial"], [48, 2, 1, "", "matrix_space"]], "sage.groups.matrix_gps.matrix_group_gap": [[49, 1, 1, "", "MatrixGroup_gap"]], "sage.groups.matrix_gps.matrix_group_gap.MatrixGroup_gap": [[49, 3, 1, "", "Element"], [49, 2, 1, "", "structure_description"], [49, 2, 1, "", "subgroup"]], "sage.groups.matrix_gps.morphism": [[50, 4, 1, "", "to_libgap"]], "sage.groups.matrix_gps.named_group": [[51, 1, 1, "", "NamedMatrixGroup_generic"], [51, 4, 1, "", "normalize_args_invariant_form"], [51, 4, 1, "", "normalize_args_vectorspace"]], "sage.groups.matrix_gps.named_group_gap": [[52, 1, 1, "", "NamedMatrixGroup_gap"]], "sage.groups.matrix_gps.orthogonal": [[53, 4, 1, "", "GO"], [53, 1, 1, "", "OrthogonalMatrixGroup_generic"], [53, 4, 1, "", "SO"], [53, 4, 1, "", "normalize_args_e"]], "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic": [[53, 2, 1, "", "invariant_bilinear_form"], [53, 2, 1, "", "invariant_form"], [53, 2, 1, "", "invariant_quadratic_form"]], "sage.groups.matrix_gps.orthogonal_gap": [[54, 1, 1, "", "OrthogonalMatrixGroup_gap"]], "sage.groups.matrix_gps.orthogonal_gap.OrthogonalMatrixGroup_gap": [[54, 2, 1, "", "invariant_bilinear_form"], [54, 2, 1, "", "invariant_form"], [54, 2, 1, "", "invariant_quadratic_form"]], "sage.groups.matrix_gps.symplectic": [[55, 4, 1, "", "Sp"], [55, 1, 1, "", "SymplecticMatrixGroup_generic"]], "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_generic": [[55, 2, 1, "", "invariant_form"]], "sage.groups.matrix_gps.symplectic_gap": [[56, 1, 1, "", "SymplecticMatrixGroup_gap"]], "sage.groups.matrix_gps.symplectic_gap.SymplecticMatrixGroup_gap": [[56, 2, 1, "", "invariant_form"]], "sage.groups.matrix_gps.unitary": [[57, 4, 1, "", "GU"], [57, 4, 1, "", "SU"], [57, 1, 1, "", "UnitaryMatrixGroup_generic"], [57, 4, 1, "", "finite_field_sqrt"]], "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_generic": [[57, 2, 1, "", "invariant_form"]], "sage.groups.matrix_gps.unitary_gap": [[58, 1, 1, "", "UnitaryMatrixGroup_gap"]], "sage.groups.matrix_gps.unitary_gap.UnitaryMatrixGroup_gap": [[58, 2, 1, "", "invariant_form"]], "sage.groups.misc_gps": [[59, 0, 0, "-", "argument_groups"], [60, 0, 0, "-", "imaginary_groups"], [61, 0, 0, "-", "misc_groups"]], "sage.groups.misc_gps.argument_groups": [[59, 1, 1, "", "AbstractArgument"], [59, 1, 1, "", "AbstractArgumentGroup"], [59, 1, 1, "", "ArgumentByElement"], [59, 1, 1, "", "ArgumentByElementGroup"], [59, 5, 1, "", "ArgumentGroup"], [59, 1, 1, "", "ArgumentGroupFactory"], [59, 1, 1, "", "RootOfUnity"], [59, 1, 1, "", "RootsOfUnityGroup"], [59, 1, 1, "", "Sign"], [59, 1, 1, "", "SignGroup"], [59, 1, 1, "", "UnitCircleGroup"], [59, 1, 1, "", "UnitCirclePoint"]], "sage.groups.misc_gps.argument_groups.AbstractArgumentGroup": [[59, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.ArgumentByElementGroup": [[59, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory": [[59, 2, 1, "", "create_key_and_extra_args"], [59, 2, 1, "", "create_object"]], "sage.groups.misc_gps.argument_groups.RootOfUnity": [[59, 2, 1, "", "exponent_denominator"], [59, 2, 1, "", "exponent_numerator"]], "sage.groups.misc_gps.argument_groups.RootsOfUnityGroup": [[59, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.Sign": [[59, 2, 1, "", "is_minus_one"], [59, 2, 1, "", "is_one"]], "sage.groups.misc_gps.argument_groups.SignGroup": [[59, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.UnitCircleGroup": [[59, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.UnitCirclePoint": [[59, 6, 1, "", "exponent"], [59, 2, 1, "", "is_minus_one"], [59, 2, 1, "", "is_one"]], "sage.groups.misc_gps.imaginary_groups": [[60, 1, 1, "", "ImaginaryElement"], [60, 1, 1, "", "ImaginaryGroup"]], "sage.groups.misc_gps.imaginary_groups.ImaginaryElement": [[60, 2, 1, "", "imag"], [60, 2, 1, "", "real"]], "sage.groups.misc_gps.imaginary_groups.ImaginaryGroup": [[60, 3, 1, "", "Element"]], "sage.groups.pari_group": [[62, 1, 1, "", "PariGroup"]], "sage.groups.pari_group.PariGroup": [[62, 2, 1, "", "cardinality"], [62, 2, 1, "", "degree"], [62, 2, 1, "", "label"], [62, 2, 1, "", "order"], [62, 2, 1, "", "permutation_group"], [62, 2, 1, "", "signature"], [62, 2, 1, "", "transitive_number"]], "sage.groups.perm_gps": [[63, 0, 0, "-", "constructor"], [64, 0, 0, "-", "cubegroup"], [70, 0, 0, "-", "permgroup"], [71, 0, 0, "-", "permgroup_element"], [72, 0, 0, "-", "permgroup_morphism"], [73, 0, 0, "-", "permgroup_named"], [74, 0, 0, "-", "permutation_groups_catalog"], [75, 0, 0, "-", "symgp_conjugacy_class"]], "sage.groups.perm_gps.constructor": [[63, 4, 1, "", "PermutationGroupElement"], [63, 4, 1, "", "standardize_generator"], [63, 4, 1, "", "string_to_tuples"]], "sage.groups.perm_gps.cubegroup": [[64, 1, 1, "", "CubeGroup"], [64, 1, 1, "", "RubiksCube"], [64, 4, 1, "", "color_of_square"], [64, 4, 1, "", "create_poly"], [64, 4, 1, "", "cubie_centers"], [64, 4, 1, "", "cubie_colors"], [64, 4, 1, "", "cubie_faces"], [64, 4, 1, "", "index2singmaster"], [64, 4, 1, "", "inv_list"], [64, 4, 1, "", "plot3d_cubie"], [64, 4, 1, "", "polygon_plot3d"], [64, 4, 1, "", "rotation_list"], [64, 4, 1, "", "xproj"], [64, 4, 1, "", "yproj"]], "sage.groups.perm_gps.cubegroup.CubeGroup": [[64, 2, 1, "", "B"], [64, 2, 1, "", "D"], [64, 2, 1, "", "F"], [64, 2, 1, "", "L"], [64, 2, 1, "", "R"], [64, 2, 1, "", "U"], [64, 2, 1, "", "display2d"], [64, 2, 1, "", "faces"], [64, 2, 1, "", "facets"], [64, 2, 1, "", "gen_names"], [64, 2, 1, "", "legal"], [64, 2, 1, "", "move"], [64, 2, 1, "", "parse"], [64, 2, 1, "", "plot3d_cube"], [64, 2, 1, "", "plot_cube"], [64, 2, 1, "", "repr2d"], [64, 2, 1, "", "solve"]], "sage.groups.perm_gps.cubegroup.RubiksCube": [[64, 2, 1, "", "cubie"], [64, 2, 1, "", "facets"], [64, 2, 1, "", "move"], [64, 2, 1, "", "plot"], [64, 2, 1, "", "plot3d"], [64, 2, 1, "", "scramble"], [64, 2, 1, "", "show"], [64, 2, 1, "", "show3d"], [64, 2, 1, "", "solve"], [64, 2, 1, "", "undo"]], "sage.groups.perm_gps.partn_ref": [[65, 0, 0, "-", "canonical_augmentation"], [66, 0, 0, "-", "data_structures"], [67, 0, 0, "-", "refinement_graphs"], [68, 0, 0, "-", "refinement_lists"], [69, 0, 0, "-", "refinement_matrices"]], "sage.groups.perm_gps.partn_ref.data_structures": [[66, 4, 1, "", "OP_represent"], [66, 4, 1, "", "PS_represent"], [66, 4, 1, "", "SC_test_list_perms"]], "sage.groups.perm_gps.partn_ref.refinement_graphs": [[67, 1, 1, "", "GraphStruct"], [67, 4, 1, "", "all_labeled_graphs"], [67, 4, 1, "", "coarsest_equitable_refinement"], [67, 4, 1, "", "generate_dense_graphs_edge_addition"], [67, 4, 1, "", "generate_dense_graphs_vert_addition"], [67, 4, 1, "", "get_orbits"], [67, 4, 1, "", "isomorphic"], [67, 4, 1, "", "orbit_partition"], [67, 4, 1, "", "random_tests"], [67, 4, 1, "", "search_tree"]], "sage.groups.perm_gps.partn_ref.refinement_lists": [[68, 4, 1, "", "is_isomorphic"]], "sage.groups.perm_gps.partn_ref.refinement_matrices": [[69, 1, 1, "", "MatrixStruct"], [69, 4, 1, "", "random_tests"]], "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct": [[69, 2, 1, "", "automorphism_group"], [69, 2, 1, "", "canonical_relabeling"], [69, 2, 1, "", "display"], [69, 2, 1, "", "is_isomorphic"], [69, 2, 1, "", "run"]], "sage.groups.perm_gps.permgroup": [[70, 4, 1, "", "PermutationGroup"], [70, 1, 1, "", "PermutationGroup_action"], [70, 1, 1, "", "PermutationGroup_generic"], [70, 1, 1, "", "PermutationGroup_subgroup"], [70, 4, 1, "", "direct_product_permgroups"], [70, 4, 1, "", "from_gap_list"], [70, 4, 1, "", "hap_decorator"], [70, 4, 1, "", "load_hap"]], "sage.groups.perm_gps.permgroup.PermutationGroup_action": [[70, 2, 1, "", "orbits"]], "sage.groups.perm_gps.permgroup.PermutationGroup_generic": [[70, 3, 1, "", "Element"], [70, 3, 1, "", "Subgroup"], [70, 2, 1, "", "as_finitely_presented_group"], [70, 2, 1, "", "base"], [70, 2, 1, "", "blocks_all"], [70, 2, 1, "", "cardinality"], [70, 2, 1, "", "center"], [70, 2, 1, "", "centralizer"], [70, 2, 1, "", "character"], [70, 2, 1, "", "character_table"], [70, 2, 1, "", "cohomology"], [70, 2, 1, "", "cohomology_part"], [70, 2, 1, "", "commutator"], [70, 2, 1, "", "composition_series"], [70, 2, 1, "", "conjugacy_class"], [70, 2, 1, "", "conjugacy_classes"], [70, 2, 1, "", "conjugacy_classes_representatives"], [70, 2, 1, "", "conjugacy_classes_subgroups"], [70, 2, 1, "", "conjugate"], [70, 2, 1, "", "construction"], [70, 2, 1, "", "cosets"], [70, 2, 1, "", "degree"], [70, 2, 1, "", "derived_series"], [70, 2, 1, "", "direct_product"], [70, 2, 1, "", "domain"], [70, 2, 1, "", "exponent"], [70, 2, 1, "", "fitting_subgroup"], [70, 2, 1, "", "fixed_points"], [70, 2, 1, "", "frattini_subgroup"], [70, 2, 1, "", "gap"], [70, 2, 1, "", "gen"], [70, 2, 1, "", "gens"], [70, 2, 1, "", "gens_small"], [70, 2, 1, "", "group_id"], [70, 2, 1, "", "group_primitive_id"], [70, 2, 1, "", "has_element"], [70, 2, 1, "", "has_regular_subgroup"], [70, 2, 1, "", "holomorph"], [70, 2, 1, "", "homology"], [70, 2, 1, "", "homology_part"], [70, 2, 1, "", "id"], [70, 2, 1, "", "identity"], [70, 2, 1, "", "intersection"], [70, 2, 1, "", "irreducible_characters"], [70, 2, 1, "", "is_abelian"], [70, 2, 1, "", "is_commutative"], [70, 2, 1, "", "is_cyclic"], [70, 2, 1, "", "is_elementary_abelian"], [70, 2, 1, "", "is_isomorphic"], [70, 2, 1, "", "is_monomial"], [70, 2, 1, "", "is_nilpotent"], [70, 2, 1, "", "is_normal"], [70, 2, 1, "", "is_perfect"], [70, 2, 1, "", "is_pgroup"], [70, 2, 1, "", "is_polycyclic"], [70, 2, 1, "", "is_primitive"], [70, 2, 1, "", "is_regular"], [70, 2, 1, "", "is_semi_regular"], [70, 2, 1, "", "is_simple"], [70, 2, 1, "", "is_solvable"], [70, 2, 1, "", "is_subgroup"], [70, 2, 1, "", "is_supersolvable"], [70, 2, 1, "", "is_transitive"], [70, 2, 1, "", "is_trivial"], [70, 2, 1, "", "isomorphism_to"], [70, 2, 1, "", "isomorphism_type_info_simple_group"], [70, 2, 1, "", "iteration"], [70, 2, 1, "", "largest_moved_point"], [70, 2, 1, "", "list"], [70, 2, 1, "", "lower_central_series"], [70, 2, 1, "", "maximal_normal_subgroups"], [70, 2, 1, "", "minimal_generating_set"], [70, 2, 1, "", "minimal_normal_subgroups"], [70, 2, 1, "", "molien_series"], [70, 2, 1, "", "ngens"], [70, 2, 1, "", "non_fixed_points"], [70, 2, 1, "", "normal_subgroups"], [70, 2, 1, "", "normalizer"], [70, 2, 1, "", "normalizes"], [70, 2, 1, "", "one"], [70, 2, 1, "", "orbit"], [70, 2, 1, "", "orbits"], [70, 2, 1, "", "order"], [70, 2, 1, "", "poincare_series"], [70, 2, 1, "", "quotient"], [70, 2, 1, "", "random_element"], [70, 2, 1, "", "representative_action"], [70, 2, 1, "", "semidirect_product"], [70, 2, 1, "", "sign_representation"], [70, 2, 1, "", "smallest_moved_point"], [70, 2, 1, "", "socle"], [70, 2, 1, "", "solvable_radical"], [70, 2, 1, "", "stabilizer"], [70, 2, 1, "", "strong_generating_system"], [70, 2, 1, "", "structure_description"], [70, 2, 1, "", "subgroup"], [70, 2, 1, "", "subgroups"], [70, 2, 1, "", "sylow_subgroup"], [70, 2, 1, "", "transversals"], [70, 2, 1, "", "trivial_character"], [70, 2, 1, "", "upper_central_series"]], "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup": [[70, 2, 1, "", "ambient_group"], [70, 2, 1, "", "is_normal"]], "sage.groups.perm_gps.permgroup_element": [[71, 1, 1, "", "PermutationGroupElement"], [71, 1, 1, "", "SymmetricGroupElement"], [71, 4, 1, "", "is_PermutationGroupElement"], [71, 4, 1, "", "make_permgroup_element"], [71, 4, 1, "", "make_permgroup_element_v2"]], "sage.groups.perm_gps.permgroup_element.PermutationGroupElement": [[71, 2, 1, "", "cycle_string"], [71, 2, 1, "", "cycle_tuples"], [71, 2, 1, "", "cycle_type"], [71, 2, 1, "", "cycles"], [71, 2, 1, "", "dict"], [71, 2, 1, "", "domain"], [71, 2, 1, "", "gap"], [71, 2, 1, "", "has_descent"], [71, 2, 1, "", "inverse"], [71, 2, 1, "", "matrix"], [71, 2, 1, "", "multiplicative_order"], [71, 2, 1, "", "orbit"], [71, 2, 1, "", "sign"], [71, 2, 1, "", "tuple"], [71, 2, 1, "", "word_problem"]], "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement": [[71, 2, 1, "", "absolute_length"], [71, 2, 1, "", "has_left_descent"]], "sage.groups.perm_gps.permgroup_morphism": [[72, 1, 1, "", "PermutationGroupMorphism"], [72, 1, 1, "", "PermutationGroupMorphism_from_gap"], [72, 1, 1, "", "PermutationGroupMorphism_id"], [72, 1, 1, "", "PermutationGroupMorphism_im_gens"], [72, 4, 1, "", "is_PermutationGroupMorphism"]], "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism": [[72, 2, 1, "", "image"], [72, 2, 1, "", "kernel"]], "sage.groups.perm_gps.permgroup_named": [[73, 1, 1, "", "AlternatingGroup"], [73, 1, 1, "", "ComplexReflectionGroup"], [73, 1, 1, "", "CyclicPermutationGroup"], [73, 1, 1, "", "DiCyclicGroup"], [73, 1, 1, "", "DihedralGroup"], [73, 1, 1, "", "GeneralDihedralGroup"], [73, 1, 1, "", "JankoGroup"], [73, 1, 1, "", "KleinFourGroup"], [73, 1, 1, "", "MathieuGroup"], [73, 1, 1, "", "PGL"], [73, 1, 1, "", "PGU"], [73, 1, 1, "", "PSL"], [73, 3, 1, "", "PSP"], [73, 1, 1, "", "PSU"], [73, 1, 1, "", "PSp"], [73, 1, 1, "", "PermutationGroup_plg"], [73, 1, 1, "", "PermutationGroup_pug"], [73, 1, 1, "", "PermutationGroup_symalt"], [73, 1, 1, "", "PermutationGroup_unique"], [73, 1, 1, "", "PrimitiveGroup"], [73, 4, 1, "", "PrimitiveGroups"], [73, 1, 1, "", "PrimitiveGroupsAll"], [73, 1, 1, "", "PrimitiveGroupsOfDegree"], [73, 1, 1, "", "QuaternionGroup"], [73, 1, 1, "", "SemidihedralGroup"], [73, 1, 1, "", "SmallPermutationGroup"], [73, 1, 1, "", "SplitMetacyclicGroup"], [73, 1, 1, "", "SuzukiGroup"], [73, 1, 1, "", "SuzukiSporadicGroup"], [73, 1, 1, "", "SymmetricGroup"], [73, 1, 1, "", "TransitiveGroup"], [73, 4, 1, "", "TransitiveGroups"], [73, 1, 1, "", "TransitiveGroupsAll"], [73, 1, 1, "", "TransitiveGroupsOfDegree"]], "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup": [[73, 2, 1, "", "codegrees"], [73, 2, 1, "", "degrees"], [73, 2, 1, "", "index_set"], [73, 2, 1, "", "simple_reflection"]], "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup": [[73, 2, 1, "", "as_AbelianGroup"], [73, 2, 1, "", "is_abelian"], [73, 2, 1, "", "is_commutative"]], "sage.groups.perm_gps.permgroup_named.DiCyclicGroup": [[73, 2, 1, "", "is_abelian"], [73, 2, 1, "", "is_commutative"]], "sage.groups.perm_gps.permgroup_named.PSL": [[73, 2, 1, "", "ramification_module_decomposition_hurwitz_curve"], [73, 2, 1, "", "ramification_module_decomposition_modular_curve"]], "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg": [[73, 2, 1, "", "base_ring"], [73, 2, 1, "", "matrix_degree"]], "sage.groups.perm_gps.permgroup_named.PermutationGroup_pug": [[73, 2, 1, "", "field_of_definition"]], "sage.groups.perm_gps.permgroup_named.PrimitiveGroup": [[73, 2, 1, "", "group_primitive_id"]], "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsOfDegree": [[73, 2, 1, "", "cardinality"]], "sage.groups.perm_gps.permgroup_named.SmallPermutationGroup": [[73, 2, 1, "", "gap_small_group"], [73, 2, 1, "", "order"]], "sage.groups.perm_gps.permgroup_named.SuzukiGroup": [[73, 2, 1, "", "base_ring"]], "sage.groups.perm_gps.permgroup_named.SymmetricGroup": [[73, 3, 1, "", "Element"], [73, 2, 1, "", "algebra"], [73, 2, 1, "", "cartan_type"], [73, 2, 1, "", "conjugacy_class"], [73, 2, 1, "", "conjugacy_classes"], [73, 2, 1, "", "conjugacy_classes_iterator"], [73, 2, 1, "", "conjugacy_classes_representatives"], [73, 2, 1, "", "coxeter_matrix"], [73, 2, 1, "", "index_set"], [73, 2, 1, "", "major_index"], [73, 2, 1, "", "reflections"], [73, 2, 1, "", "simple_reflection"], [73, 2, 1, "", "young_subgroup"]], "sage.groups.perm_gps.permgroup_named.TransitiveGroup": [[73, 2, 1, "", "degree"], [73, 2, 1, "", "transitive_number"]], "sage.groups.perm_gps.permgroup_named.TransitiveGroupsOfDegree": [[73, 2, 1, "", "cardinality"]], "sage.groups.perm_gps.symgp_conjugacy_class": [[75, 1, 1, "", "PermutationsConjugacyClass"], [75, 1, 1, "", "SymmetricGroupConjugacyClass"], [75, 1, 1, "", "SymmetricGroupConjugacyClassMixin"], [75, 4, 1, "", "conjugacy_class_iterator"], [75, 4, 1, "", "default_representative"]], "sage.groups.perm_gps.symgp_conjugacy_class.PermutationsConjugacyClass": [[75, 2, 1, "", "set"]], "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClass": [[75, 2, 1, "", "set"]], "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClassMixin": [[75, 2, 1, "", "partition"]], "sage.groups.raag": [[76, 1, 1, "", "CohomologyRAAG"], [76, 1, 1, "", "RightAngledArtinGroup"]], "sage.groups.raag.CohomologyRAAG": [[76, 1, 1, "", "Element"], [76, 2, 1, "", "algebra_generators"], [76, 2, 1, "", "degree_on_basis"], [76, 2, 1, "", "gen"], [76, 2, 1, "", "gens"], [76, 2, 1, "", "ngens"], [76, 2, 1, "", "one_basis"]], "sage.groups.raag.RightAngledArtinGroup": [[76, 1, 1, "", "Element"], [76, 2, 1, "", "cohomology"], [76, 2, 1, "", "gen"], [76, 2, 1, "", "gens"], [76, 2, 1, "", "graph"], [76, 2, 1, "", "ngens"], [76, 2, 1, "", "one"], [76, 2, 1, "", "one_element"]], "sage.groups.semimonomial_transformations": [[77, 0, 0, "-", "semimonomial_transformation"], [78, 0, 0, "-", "semimonomial_transformation_group"]], "sage.groups.semimonomial_transformations.semimonomial_transformation": [[77, 1, 1, "", "SemimonomialTransformation"]], "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation": [[77, 2, 1, "", "get_autom"], [77, 2, 1, "", "get_perm"], [77, 2, 1, "", "get_v"], [77, 2, 1, "", "get_v_inverse"], [77, 2, 1, "", "invert_v"]], "sage.groups.semimonomial_transformations.semimonomial_transformation_group": [[78, 1, 1, "", "SemimonomialActionMat"], [78, 1, 1, "", "SemimonomialActionVec"], [78, 1, 1, "", "SemimonomialTransformationGroup"]], "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup": [[78, 3, 1, "", "Element"], [78, 2, 1, "", "base_ring"], [78, 2, 1, "", "degree"], [78, 2, 1, "", "gens"], [78, 2, 1, "", "order"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"group": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78], "abelian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "permut": [0, 63, 70, 71, 72, 73, 74], "matrix": [0, 38, 39, 40, 41, 42, 44, 48, 49, 50, 51, 52], "affin": [0, 12, 14], "lie": [0, 35], "partit": [0, 67, 68, 69], "refin": 0, "intern": 0, "indic": 0, "tabl": 0, "automorph": 1, "multipl": [2, 6, 9, 26], "todo": [2, 4, 5, 11, 16, 19, 21, 27, 38, 73, 78], "element": [3, 7, 8, 14, 41, 42, 59, 60, 71, 77], "finit": [4, 6, 7, 21, 22, 39, 40], "gener": [4, 24, 31, 39, 40], "gap": [4, 32, 33, 40, 42, 47, 49, 52, 54, 56, 58], "homomorph": [5, 33, 50, 72], "dual": [6, 7], "charact": 7, "base": [8, 25, 31, 32, 34, 48, 51, 52], "class": [8, 11, 18, 19, 25, 32, 48, 59, 60, 75], "With": 9, "valu": 9, "addit": [10, 26], "wrapper": 11, "euclidean": 13, "artin": [15, 76], "braid": [16, 20], "cactu": 17, "function": [18, 24, 64, 67, 68, 69], "conjugaci": [19, 75], "cubic": 20, "present": [21, 22], "name": [22, 73], "free": [23, 29], "miscellan": [24, 61], "functor": 26, "convert": 26, "commut": 26, "semidirect": 27, "product": 27, "exampl": [28, 68], "index": [29, 70], "kernel": 30, "subgroup": 30, "libgap": [31, 34], "mix": 32, "backend": 33, "nilpot": 35, "binari": 36, "dihedr": 36, "librari": 37, "interest": 37, "coxet": 38, "As": 38, "implement": 42, "heisenberg": 43, "homset": 44, "isometri": 45, "linear": [46, 47, 53, 54, 55, 56], "over": 49, "ring": 49, "understand": 49, "between": 50, "classic": [51, 52], "orthogon": [53, 54], "symplect": [55, 56], "unitari": [57, 58], "gu": [57, 58], "n": [57, 58], "q": [57, 58], "su": [57, 58], "repres": 59, "complex": 59, "argument": 59, "method": [59, 60, 70], "imaginari": 60, "pari": 62, "constructor": 63, "rubik": 64, "": 64, "cube": 64, "canon": 65, "augment": 65, "data": 66, "structur": 66, "graph": 67, "theoret": 67, "backtrack": [67, 68, 69], "list": 68, "simpl": 68, "us": 68, "partn_ref": 68, "matric": 69, "symmetr": [73, 75], "s_n": 73, "catalog": 74, "Of": 75, "The": 75, "right": 76, "angl": 76, "semimonomi": [77, 78], "transform": [77, 78]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Groups": [[0, "groups"]], "Abelian Groups": [[0, "abelian-groups"]], "Permutation Groups": [[0, "permutation-groups"]], "Matrix and Affine Groups": [[0, "matrix-and-affine-groups"]], "Lie Groups": [[0, "lie-groups"]], "Partition Refinement": [[0, "partition-refinement"]], "Internals": [[0, "internals"]], "Indices and Tables": [[0, "indices-and-tables"]], "Automorphisms of abelian groups": [[1, "automorphisms-of-abelian-groups"]], "Multiplicative Abelian Groups": [[2, "multiplicative-abelian-groups"]], "Todo": [[2, "id2"], [2, "id3"], [4, "id1"], [5, "id1"], [5, "id2"], [11, "id1"], [16, "id18"], [16, "id19"], [19, "id1"], [21, "id3"], [27, "id1"], [38, "id1"], [73, "id4"], [73, "id5"], [78, "id1"], [78, "id2"]], "Abelian group elements": [[3, "abelian-group-elements"]], "Finitely generated abelian groups with GAP.": [[4, "finitely-generated-abelian-groups-with-gap"]], "Homomorphisms of abelian groups": [[5, "homomorphisms-of-abelian-groups"]], "Dual groups of Finite Multiplicative Abelian Groups": [[6, "dual-groups-of-finite-multiplicative-abelian-groups"]], "Elements (characters) of the dual group of a finite Abelian group": [[7, "elements-characters-of-the-dual-group-of-a-finite-abelian-group"]], "Base class for abelian group elements": [[8, "base-class-for-abelian-group-elements"]], "Multiplicative Abelian Groups With Values": [[9, "multiplicative-abelian-groups-with-values"]], "Additive Abelian Groups": [[10, "additive-abelian-groups"]], "Wrapper class for abelian groups": [[11, "wrapper-class-for-abelian-groups"]], "Affine Groups": [[12, "affine-groups"]], "Euclidean Groups": [[13, "euclidean-groups"]], "Elements of Affine Groups": [[14, "elements-of-affine-groups"]], "Artin Groups": [[15, "artin-groups"]], "Braid groups": [[16, "braid-groups"]], "Cactus Groups": [[17, "cactus-groups"]], "Class functions of groups.": [[18, "class-functions-of-groups"]], "Conjugacy classes of groups": [[19, "conjugacy-classes-of-groups"]], "Cubic Braid Groups": [[20, "cubic-braid-groups"]], "Finitely Presented Groups": [[21, "finitely-presented-groups"]], "Named Finitely Presented Groups": [[22, "named-finitely-presented-groups"]], "Free Groups": [[23, "free-groups"]], "Miscellaneous generic functions": [[24, "miscellaneous-generic-functions"]], "Base class for groups": [[25, "base-class-for-groups"]], "Functor that converts a commutative additive group into a multiplicative group.": [[26, "functor-that-converts-a-commutative-additive-group-into-a-multiplicative-group"]], "Semidirect product of groups": [[27, "semidirect-product-of-groups"]], "Examples of Groups": [[28, "examples-of-groups"]], "Indexed Free Groups": [[29, "indexed-free-groups"]], "Kernel Subgroups": [[30, "kernel-subgroups"]], "Generic LibGAP-based Group": [[31, "generic-libgap-based-group"]], "Mix-in Class for GAP-based Groups": [[32, "mix-in-class-for-gap-based-groups"]], "Group homomorphisms for groups with a GAP backend": [[33, "group-homomorphisms-for-groups-with-a-gap-backend"]], "LibGAP-based Groups": [[34, "libgap-based-groups"]], "Nilpotent Lie groups": [[35, "nilpotent-lie-groups"]], "Binary Dihedral Groups": [[36, "binary-dihedral-groups"]], "Library of Interesting Groups": [[37, "library-of-interesting-groups"]], "Coxeter Groups As Matrix Groups": [[38, "coxeter-groups-as-matrix-groups"]], "Finitely Generated Matrix Groups": [[39, "finitely-generated-matrix-groups"]], "Finitely Generated Matrix Groups with GAP": [[40, "finitely-generated-matrix-groups-with-gap"]], "Matrix Group Elements": [[41, "matrix-group-elements"]], "Matrix group elements implemented in GAP": [[42, "matrix-group-elements-implemented-in-gap"]], "Heisenberg Group": [[43, "heisenberg-group"]], "Matrix Group Homsets": [[44, "matrix-group-homsets"]], "Groups of isometries": [[45, "groups-of-isometries"]], "Linear Groups": [[46, "linear-groups"]], "Linear Groups with GAP": [[47, "linear-groups-with-gap"]], "Base classes for Matrix Groups": [[48, "base-classes-for-matrix-groups"]], "Matrix group over a ring that GAP understands": [[49, "matrix-group-over-a-ring-that-gap-understands"]], "Homomorphisms Between Matrix Groups": [[50, "homomorphisms-between-matrix-groups"]], "Base for Classical Matrix Groups": [[51, "base-for-classical-matrix-groups"]], "Base for Classical Matrix Groups with GAP": [[52, "base-for-classical-matrix-groups-with-gap"]], "Orthogonal Linear Groups": [[53, "orthogonal-linear-groups"]], "Orthogonal Linear Groups with GAP": [[54, "orthogonal-linear-groups-with-gap"]], "Symplectic Linear Groups": [[55, "symplectic-linear-groups"]], "Symplectic Linear Groups with GAP": [[56, "symplectic-linear-groups-with-gap"]], "Unitary Groups GU(n,q) and SU(n,q)": [[57, "unitary-groups-gu-n-q-and-su-n-q"]], "Unitary Groups GU(n,q) and SU(n,q) with GAP": [[58, "unitary-groups-gu-n-q-and-su-n-q-with-gap"]], "Groups of elements representing (complex) arguments.": [[59, "groups-of-elements-representing-complex-arguments"]], "Classes and Methods": [[59, "classes-and-methods"], [60, "classes-and-methods"]], "Groups of imaginary elements": [[60, "groups-of-imaginary-elements"]], "Miscellaneous Groups": [[61, "miscellaneous-groups"]], "PARI Groups": [[62, "pari-groups"]], "Constructor for permutations": [[63, "constructor-for-permutations"]], "Rubik\u2019s cube group functions": [[64, "rubik-s-cube-group-functions"]], "Canonical augmentation": [[65, "canonical-augmentation"]], "Data structures": [[66, "data-structures"]], "Graph-theoretic partition backtrack functions": [[67, "graph-theoretic-partition-backtrack-functions"]], "Partition backtrack functions for lists \u2013 a simple example of using partn_ref": [[68, "partition-backtrack-functions-for-lists-a-simple-example-of-using-partn-ref"]], "Partition backtrack functions for matrices": [[69, "partition-backtrack-functions-for-matrices"]], "Permutation groups": [[70, "permutation-groups"]], "Index of methods": [[70, "index-of-methods"]], "Permutation group elements": [[71, "permutation-group-elements"]], "Permutation group homomorphisms": [[72, "permutation-group-homomorphisms"]], "\u201cNamed\u201d Permutation groups (such as the symmetric group, S_n)": [[73, "named-permutation-groups-such-as-the-symmetric-group-s-n"]], "Catalog of permutation groups": [[74, "catalog-of-permutation-groups"]], "Conjugacy Classes Of The Symmetric Group": [[75, "conjugacy-classes-of-the-symmetric-group"]], "Right-Angled Artin Groups": [[76, "right-angled-artin-groups"]], "Elements of a semimonomial transformation group": [[77, "elements-of-a-semimonomial-transformation-group"]], "Semimonomial transformation group": [[78, "semimonomial-transformation-group"]]}, "indexentries": {"abeliangroupautomorphism (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphism"]], "abeliangroupautomorphismgroup (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup"]], "abeliangroupautomorphismgroup_gap (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap"]], "abeliangroupautomorphismgroup_subgroup (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_subgroup"]], "element (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup attribute)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup.Element"]], "element (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap attribute)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.Element"]], "element (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_subgroup attribute)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_subgroup.Element"]], "covering_matrix_ring() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.covering_matrix_ring"]], "domain() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.domain"]], "is_subgroup_of() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.is_subgroup_of"]], "matrix() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphism method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphism.matrix"]], "module": [[1, "module-sage.groups.abelian_gps.abelian_aut"], [2, "module-sage.groups.abelian_gps.abelian_group"], [3, "module-sage.groups.abelian_gps.abelian_group_element"], [4, "module-sage.groups.abelian_gps.abelian_group_gap"], [5, "module-sage.groups.abelian_gps.abelian_group_morphism"], [6, "module-sage.groups.abelian_gps.dual_abelian_group"], [7, "module-sage.groups.abelian_gps.dual_abelian_group_element"], [8, "module-sage.groups.abelian_gps.element_base"], [9, "module-sage.groups.abelian_gps.values"], [10, "module-sage.groups.additive_abelian.additive_abelian_group"], [11, "module-sage.groups.additive_abelian.additive_abelian_wrapper"], [12, "module-sage.groups.affine_gps.affine_group"], [13, "module-sage.groups.affine_gps.euclidean_group"], [14, "module-sage.groups.affine_gps.group_element"], [15, "module-sage.groups.artin"], [16, "module-sage.groups.braid"], [17, "module-sage.groups.cactus_group"], [18, "module-sage.groups.class_function"], [19, "module-sage.groups.conjugacy_classes"], [20, "module-sage.groups.cubic_braid"], [21, "module-sage.groups.finitely_presented"], [22, "module-sage.groups.finitely_presented_named"], [23, "module-sage.groups.free_group"], [24, "module-sage.groups.generic"], [25, "module-sage.groups.group"], [26, "module-sage.groups.group_exp"], [27, "module-sage.groups.group_semidirect_product"], [28, "module-sage.groups.groups_catalog"], [29, "module-sage.groups.indexed_free_group"], [30, "module-sage.groups.kernel_subgroup"], [31, "module-sage.groups.libgap_group"], [32, "module-sage.groups.libgap_mixin"], [33, "module-sage.groups.libgap_morphism"], [34, "module-sage.groups.libgap_wrapper"], [35, "module-sage.groups.lie_gps.nilpotent_lie_group"], [36, "module-sage.groups.matrix_gps.binary_dihedral"], [37, "module-sage.groups.matrix_gps.catalog"], [38, "module-sage.groups.matrix_gps.coxeter_group"], [39, "module-sage.groups.matrix_gps.finitely_generated"], [40, "module-sage.groups.matrix_gps.finitely_generated_gap"], [41, "module-sage.groups.matrix_gps.group_element"], [42, "module-sage.groups.matrix_gps.group_element_gap"], [43, "module-sage.groups.matrix_gps.heisenberg"], [44, "module-sage.groups.matrix_gps.homset"], [45, "module-sage.groups.matrix_gps.isometries"], [46, "module-sage.groups.matrix_gps.linear"], [47, "module-sage.groups.matrix_gps.linear_gap"], [48, "module-sage.groups.matrix_gps.matrix_group"], [49, "module-sage.groups.matrix_gps.matrix_group_gap"], [50, "module-sage.groups.matrix_gps.morphism"], [51, "module-sage.groups.matrix_gps.named_group"], [52, "module-sage.groups.matrix_gps.named_group_gap"], [53, "module-sage.groups.matrix_gps.orthogonal"], [54, "module-sage.groups.matrix_gps.orthogonal_gap"], [55, "module-sage.groups.matrix_gps.symplectic"], [56, "module-sage.groups.matrix_gps.symplectic_gap"], [57, "module-sage.groups.matrix_gps.unitary"], [58, "module-sage.groups.matrix_gps.unitary_gap"], [59, "module-sage.groups.misc_gps.argument_groups"], [60, "module-sage.groups.misc_gps.imaginary_groups"], [61, "module-sage.groups.misc_gps.misc_groups"], [62, "module-sage.groups.pari_group"], [63, "module-sage.groups.perm_gps.constructor"], [64, "module-sage.groups.perm_gps.cubegroup"], [65, "module-sage.groups.perm_gps.partn_ref.canonical_augmentation"], [66, "module-sage.groups.perm_gps.partn_ref.data_structures"], [67, "module-sage.groups.perm_gps.partn_ref.refinement_graphs"], [68, "module-sage.groups.perm_gps.partn_ref.refinement_lists"], [69, "module-sage.groups.perm_gps.partn_ref.refinement_matrices"], [70, "module-sage.groups.perm_gps.permgroup"], [71, "module-sage.groups.perm_gps.permgroup_element"], [72, "module-sage.groups.perm_gps.permgroup_morphism"], [73, "module-sage.groups.perm_gps.permgroup_named"], [74, "module-sage.groups.perm_gps.permutation_groups_catalog"], [75, "module-sage.groups.perm_gps.symgp_conjugacy_class"], [76, "module-sage.groups.raag"], [77, "module-sage.groups.semimonomial_transformations.semimonomial_transformation"], [78, "module-sage.groups.semimonomial_transformations.semimonomial_transformation_group"]], "sage.groups.abelian_gps.abelian_aut": [[1, "module-sage.groups.abelian_gps.abelian_aut"]], "abeliangroup() (in module sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup"]], "abeliangroup_class (class in sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class"]], "abeliangroup_subgroup (class in sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup"]], "element (sage.groups.abelian_gps.abelian_group.abeliangroup_class attribute)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.Element"]], "subgroup (sage.groups.abelian_gps.abelian_group.abeliangroup_class attribute)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.Subgroup"]], "ambient_group() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.ambient_group"]], "cardinality() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.cardinality"]], "dual_group() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.dual_group"]], "elementary_divisors() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.elementary_divisors"]], "equals() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.equals"]], "exponent() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.exponent"]], "gen() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.gen"]], "gen() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.gen"]], "gens() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.gens"]], "gens() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.gens"]], "gens_orders() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.gens_orders"]], "identity() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.identity"]], "invariants() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.invariants"]], "is_abeliangroup() (in module sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.is_AbelianGroup"]], "is_commutative() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_commutative"]], "is_cyclic() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_cyclic"]], "is_isomorphic() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_isomorphic"]], "is_subgroup() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_subgroup"]], "is_trivial() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_trivial"]], "list() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.list"]], "ngens() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.ngens"]], "number_of_subgroups() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.number_of_subgroups"]], "order() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.order"]], "permutation_group() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.permutation_group"]], "random_element() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.random_element"]], "sage.groups.abelian_gps.abelian_group": [[2, "module-sage.groups.abelian_gps.abelian_group"]], "subgroup() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.subgroup"]], "subgroup_reduced() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.subgroup_reduced"]], "subgroups() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.subgroups"]], "torsion_subgroup() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.torsion_subgroup"]], "word_problem() (in module sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.word_problem"]], "abeliangroupelement (class in sage.groups.abelian_gps.abelian_group_element)": [[3, "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement"]], "as_permutation() (sage.groups.abelian_gps.abelian_group_element.abeliangroupelement method)": [[3, "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement.as_permutation"]], "is_abeliangroupelement() (in module sage.groups.abelian_gps.abelian_group_element)": [[3, "sage.groups.abelian_gps.abelian_group_element.is_AbelianGroupElement"]], "sage.groups.abelian_gps.abelian_group_element": [[3, "module-sage.groups.abelian_gps.abelian_group_element"]], "word_problem() (sage.groups.abelian_gps.abelian_group_element.abeliangroupelement method)": [[3, "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement.word_problem"]], "abeliangroupelement_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap"]], "abeliangroupelement_polycyclic (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_polycyclic"]], "abeliangroupgap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupGap"]], "abeliangroupquotient_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap"]], "abeliangroupsubgroup_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap"]], "abeliangroup_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap"]], "element (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap attribute)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.Element"]], "all_subgroups() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.all_subgroups"]], "aut() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.aut"]], "automorphism_group() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.automorphism_group"]], "cover() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.cover"]], "elementary_divisors() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.elementary_divisors"]], "exponent() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.exponent"]], "exponents() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupelement_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap.exponents"]], "exponents() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupelement_polycyclic method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_polycyclic.exponents"]], "gens_orders() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.gens_orders"]], "identity() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.identity"]], "is_subgroup_of() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.is_subgroup_of"]], "is_trivial() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.is_trivial"]], "lift() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.lift"]], "lift() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupsubgroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap.lift"]], "natural_homomorphism() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.natural_homomorphism"]], "order() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupelement_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap.order"]], "quotient() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.quotient"]], "relations() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.relations"]], "retract() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupsubgroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap.retract"]], "sage.groups.abelian_gps.abelian_group_gap": [[4, "module-sage.groups.abelian_gps.abelian_group_gap"]], "subgroup() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.subgroup"]], "abeliangroupmap (class in sage.groups.abelian_gps.abelian_group_morphism)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMap"]], "abeliangroupmorphism (class in sage.groups.abelian_gps.abelian_group_morphism)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism"]], "image() (sage.groups.abelian_gps.abelian_group_morphism.abeliangroupmorphism method)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism.image"]], "is_abeliangroupmorphism() (in module sage.groups.abelian_gps.abelian_group_morphism)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.is_AbelianGroupMorphism"]], "kernel() (sage.groups.abelian_gps.abelian_group_morphism.abeliangroupmorphism method)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism.kernel"]], "sage.groups.abelian_gps.abelian_group_morphism": [[5, "module-sage.groups.abelian_gps.abelian_group_morphism"]], "dualabeliangroup_class (class in sage.groups.abelian_gps.dual_abelian_group)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class"]], "element (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class attribute)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.Element"]], "base_ring() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.base_ring"]], "gen() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.gen"]], "gens() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.gens"]], "gens_orders() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.gens_orders"]], "group() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.group"]], "invariants() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.invariants"]], "is_dualabeliangroup() (in module sage.groups.abelian_gps.dual_abelian_group)": [[6, "sage.groups.abelian_gps.dual_abelian_group.is_DualAbelianGroup"]], "is_commutative() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.is_commutative"]], "list() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.list"]], "ngens() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.ngens"]], "order() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.order"]], "random_element() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.random_element"]], "sage.groups.abelian_gps.dual_abelian_group": [[6, "module-sage.groups.abelian_gps.dual_abelian_group"]], "dualabeliangroupelement (class in sage.groups.abelian_gps.dual_abelian_group_element)": [[7, "sage.groups.abelian_gps.dual_abelian_group_element.DualAbelianGroupElement"]], "is_dualabeliangroupelement() (in module sage.groups.abelian_gps.dual_abelian_group_element)": [[7, "sage.groups.abelian_gps.dual_abelian_group_element.is_DualAbelianGroupElement"]], "sage.groups.abelian_gps.dual_abelian_group_element": [[7, "module-sage.groups.abelian_gps.dual_abelian_group_element"]], "word_problem() (sage.groups.abelian_gps.dual_abelian_group_element.dualabeliangroupelement method)": [[7, "sage.groups.abelian_gps.dual_abelian_group_element.DualAbelianGroupElement.word_problem"]], "abeliangroupelementbase (class in sage.groups.abelian_gps.element_base)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase"]], "exponents() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.exponents"]], "is_trivial() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.is_trivial"]], "list() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.list"]], "multiplicative_order() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.multiplicative_order"]], "order() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.order"]], "sage.groups.abelian_gps.element_base": [[8, "module-sage.groups.abelian_gps.element_base"]], "abeliangroupwithvalues() (in module sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues"]], "abeliangroupwithvalueselement (class in sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValuesElement"]], "abeliangroupwithvaluesembedding (class in sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValuesEmbedding"]], "abeliangroupwithvalues_class (class in sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class"]], "element (sage.groups.abelian_gps.values.abeliangroupwithvalues_class attribute)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.Element"]], "gen() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.gen"]], "gens_values() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.gens_values"]], "sage.groups.abelian_gps.values": [[9, "module-sage.groups.abelian_gps.values"]], "value() (sage.groups.abelian_gps.values.abeliangroupwithvalueselement method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValuesElement.value"]], "values_embedding() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.values_embedding"]], "values_group() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.values_group"]], "additiveabeliangroup() (in module sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup"]], "additiveabeliangroupelement (class in sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroupElement"]], "additiveabeliangroup_class (class in sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class"]], "additiveabeliangroup_fixed_gens (class in sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens"]], "element (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class attribute)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.Element"]], "cover_and_relations_from_invariants() (in module sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.cover_and_relations_from_invariants"]], "exponent() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.exponent"]], "gens() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_fixed_gens method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens.gens"]], "identity() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_fixed_gens method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens.identity"]], "is_cyclic() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.is_cyclic"]], "is_multiplicative() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.is_multiplicative"]], "order() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.order"]], "permutation_group() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_fixed_gens method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens.permutation_group"]], "sage.groups.additive_abelian.additive_abelian_group": [[10, "module-sage.groups.additive_abelian.additive_abelian_group"]], "short_name() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.short_name"]], "additiveabeliangroupwrapper (class in sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper"]], "additiveabeliangroupwrapperelement (class in sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapperElement"]], "element (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper attribute)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.Element"]], "unwrappingmorphism (class in sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.UnwrappingMorphism"]], "basis_from_generators() (in module sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.basis_from_generators"]], "discrete_exp() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.discrete_exp"]], "discrete_log() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.discrete_log"]], "element() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapperelement method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapperElement.element"]], "from_generators() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper static method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.from_generators"]], "generator_orders() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.generator_orders"]], "sage.groups.additive_abelian.additive_abelian_wrapper": [[11, "module-sage.groups.additive_abelian.additive_abelian_wrapper"]], "torsion_subgroup() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.torsion_subgroup"]], "universe() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.universe"]], "affinegroup (class in sage.groups.affine_gps.affine_group)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup"]], "element (sage.groups.affine_gps.affine_group.affinegroup attribute)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.Element"]], "cardinality() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.cardinality"]], "degree() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.degree"]], "linear() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.linear"]], "linear_space() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.linear_space"]], "matrix_space() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.matrix_space"]], "random_element() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.random_element"]], "reflection() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.reflection"]], "sage.groups.affine_gps.affine_group": [[12, "module-sage.groups.affine_gps.affine_group"]], "some_elements() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.some_elements"]], "translation() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.translation"]], "vector_space() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.vector_space"]], "euclideangroup (class in sage.groups.affine_gps.euclidean_group)": [[13, "sage.groups.affine_gps.euclidean_group.EuclideanGroup"]], "random_element() (sage.groups.affine_gps.euclidean_group.euclideangroup method)": [[13, "sage.groups.affine_gps.euclidean_group.EuclideanGroup.random_element"]], "sage.groups.affine_gps.euclidean_group": [[13, "module-sage.groups.affine_gps.euclidean_group"]], "a() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.A"]], "affinegroupelement (class in sage.groups.affine_gps.group_element)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement"]], "b() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.b"]], "list() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.list"]], "matrix() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.matrix"]], "sage.groups.affine_gps.group_element": [[14, "module-sage.groups.affine_gps.group_element"]], "artingroup (class in sage.groups.artin)": [[15, "sage.groups.artin.ArtinGroup"]], "artingroupelement (class in sage.groups.artin)": [[15, "sage.groups.artin.ArtinGroupElement"]], "element (sage.groups.artin.artingroup attribute)": [[15, "sage.groups.artin.ArtinGroup.Element"]], "element (sage.groups.artin.finitetypeartingroup attribute)": [[15, "sage.groups.artin.FiniteTypeArtinGroup.Element"]], "finitetypeartingroup (class in sage.groups.artin)": [[15, "sage.groups.artin.FiniteTypeArtinGroup"]], "finitetypeartingroupelement (class in sage.groups.artin)": [[15, "sage.groups.artin.FiniteTypeArtinGroupElement"]], "an_element() (sage.groups.artin.artingroup method)": [[15, "sage.groups.artin.ArtinGroup.an_element"]], "as_permutation_group() (sage.groups.artin.artingroup method)": [[15, "sage.groups.artin.ArtinGroup.as_permutation_group"]], "cardinality() (sage.groups.artin.artingroup method)": [[15, "sage.groups.artin.ArtinGroup.cardinality"]], "coxeter_group() (sage.groups.artin.artingroup method)": [[15, "sage.groups.artin.ArtinGroup.coxeter_group"]], "coxeter_group_element() (sage.groups.artin.artingroupelement method)": [[15, "sage.groups.artin.ArtinGroupElement.coxeter_group_element"]], "coxeter_matrix() (sage.groups.artin.artingroup method)": [[15, "sage.groups.artin.ArtinGroup.coxeter_matrix"]], "coxeter_type() (sage.groups.artin.artingroup method)": [[15, "sage.groups.artin.ArtinGroup.coxeter_type"]], "delta() (sage.groups.artin.finitetypeartingroup method)": [[15, "sage.groups.artin.FiniteTypeArtinGroup.delta"]], "exponent_sum() (sage.groups.artin.artingroupelement method)": [[15, "sage.groups.artin.ArtinGroupElement.exponent_sum"]], "index_set() (sage.groups.artin.artingroup method)": [[15, "sage.groups.artin.ArtinGroup.index_set"]], "left_normal_form() (sage.groups.artin.finitetypeartingroupelement method)": [[15, "sage.groups.artin.FiniteTypeArtinGroupElement.left_normal_form"]], "order() (sage.groups.artin.artingroup method)": [[15, "sage.groups.artin.ArtinGroup.order"]], "sage.groups.artin": [[15, "module-sage.groups.artin"]], "some_elements() (sage.groups.artin.artingroup method)": [[15, "sage.groups.artin.ArtinGroup.some_elements"]], "braid (class in sage.groups.braid)": [[16, "sage.groups.braid.Braid"]], "braidgroup() (in module sage.groups.braid)": [[16, "sage.groups.braid.BraidGroup"]], "braidgroup_class (class in sage.groups.braid)": [[16, "sage.groups.braid.BraidGroup_class"]], "element (sage.groups.braid.braidgroup_class attribute)": [[16, "sage.groups.braid.BraidGroup_class.Element"]], "lkb_matrix() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.LKB_matrix"]], "mappingclassgroupaction (class in sage.groups.braid)": [[16, "sage.groups.braid.MappingClassGroupAction"]], "rightquantumword (class in sage.groups.braid)": [[16, "sage.groups.braid.RightQuantumWord"]], "tl_basis_with_drain() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.TL_basis_with_drain"]], "tl_matrix() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.TL_matrix"]], "tl_representation() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.TL_representation"]], "alexander_polynomial() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.alexander_polynomial"]], "an_element() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.an_element"]], "annular_khovanov_complex() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.annular_khovanov_complex"]], "annular_khovanov_homology() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.annular_khovanov_homology"]], "as_permutation_group() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.as_permutation_group"]], "burau_matrix() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.burau_matrix"]], "cardinality() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.cardinality"]], "centralizer() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.centralizer"]], "colored_jones_polynomial() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.colored_jones_polynomial"]], "components_in_closure() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.components_in_closure"]], "conjugating_braid() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.conjugating_braid"]], "deformed_burau_matrix() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.deformed_burau_matrix"]], "dimension_of_tl_space() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.dimension_of_TL_space"]], "epimorphisms() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.epimorphisms"]], "eps() (sage.groups.braid.rightquantumword method)": [[16, "sage.groups.braid.RightQuantumWord.eps"]], "gcd() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.gcd"]], "is_conjugated() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.is_conjugated"]], "is_periodic() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.is_periodic"]], "is_pseudoanosov() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.is_pseudoanosov"]], "is_reducible() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.is_reducible"]], "jones_polynomial() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.jones_polynomial"]], "lcm() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.lcm"]], "left_normal_form() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.left_normal_form"]], "links_gould_matrix() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.links_gould_matrix"]], "links_gould_polynomial() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.links_gould_polynomial"]], "mapping_class_action() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.mapping_class_action"]], "markov_trace() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.markov_trace"]], "mirror_image() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.mirror_image"]], "mirror_involution() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.mirror_involution"]], "order() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.order"]], "permutation() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.permutation"]], "plot() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.plot"]], "plot3d() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.plot3d"]], "presentation_two_generators() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.presentation_two_generators"]], "pure_conjugating_braid() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.pure_conjugating_braid"]], "reduced_word() (sage.groups.braid.rightquantumword method)": [[16, "sage.groups.braid.RightQuantumWord.reduced_word"]], "reverse() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.reverse"]], "right_normal_form() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.right_normal_form"]], "rigidity() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.rigidity"]], "sage.groups.braid": [[16, "module-sage.groups.braid"]], "sliding_circuits() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.sliding_circuits"]], "some_elements() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.some_elements"]], "strands() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.strands"]], "strands() (sage.groups.braid.braidgroup_class method)": [[16, "sage.groups.braid.BraidGroup_class.strands"]], "super_summit_set() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.super_summit_set"]], "thurston_type() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.thurston_type"]], "tropical_coordinates() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.tropical_coordinates"]], "tuples() (sage.groups.braid.rightquantumword method)": [[16, "sage.groups.braid.RightQuantumWord.tuples"]], "ultra_summit_set() (sage.groups.braid.braid method)": [[16, "sage.groups.braid.Braid.ultra_summit_set"]], "cactusgroup (class in sage.groups.cactus_group)": [[17, "sage.groups.cactus_group.CactusGroup"]], "cactusgroup.element (class in sage.groups.cactus_group)": [[17, "sage.groups.cactus_group.CactusGroup.Element"]], "purecactusgroup (class in sage.groups.cactus_group)": [[17, "sage.groups.cactus_group.PureCactusGroup"]], "bilinear_form() (sage.groups.cactus_group.cactusgroup method)": [[17, "sage.groups.cactus_group.CactusGroup.bilinear_form"]], "gen() (sage.groups.cactus_group.cactusgroup method)": [[17, "sage.groups.cactus_group.CactusGroup.gen"]], "gen() (sage.groups.cactus_group.purecactusgroup method)": [[17, "sage.groups.cactus_group.PureCactusGroup.gen"]], "gens() (sage.groups.cactus_group.cactusgroup method)": [[17, "sage.groups.cactus_group.CactusGroup.gens"]], "gens() (sage.groups.cactus_group.purecactusgroup method)": [[17, "sage.groups.cactus_group.PureCactusGroup.gens"]], "geometric_representation_generators() (sage.groups.cactus_group.cactusgroup method)": [[17, "sage.groups.cactus_group.CactusGroup.geometric_representation_generators"]], "group_generators() (sage.groups.cactus_group.cactusgroup method)": [[17, "sage.groups.cactus_group.CactusGroup.group_generators"]], "n() (sage.groups.cactus_group.cactusgroup method)": [[17, "sage.groups.cactus_group.CactusGroup.n"]], "n() (sage.groups.cactus_group.purecactusgroup method)": [[17, "sage.groups.cactus_group.PureCactusGroup.n"]], "one() (sage.groups.cactus_group.cactusgroup method)": [[17, "sage.groups.cactus_group.CactusGroup.one"]], "random_element() (sage.groups.cactus_group.cactusgroup method)": [[17, "sage.groups.cactus_group.CactusGroup.random_element"]], "right_angled_coxeter_group() (sage.groups.cactus_group.cactusgroup method)": [[17, "sage.groups.cactus_group.CactusGroup.right_angled_coxeter_group"]], "sage.groups.cactus_group": [[17, "module-sage.groups.cactus_group"]], "to_matrix() (sage.groups.cactus_group.cactusgroup.element method)": [[17, "sage.groups.cactus_group.CactusGroup.Element.to_matrix"]], "to_permutation() (sage.groups.cactus_group.cactusgroup.element method)": [[17, "sage.groups.cactus_group.CactusGroup.Element.to_permutation"]], "classfunction() (in module sage.groups.class_function)": [[18, "sage.groups.class_function.ClassFunction"]], "classfunction_gap (class in sage.groups.class_function)": [[18, "sage.groups.class_function.ClassFunction_gap"]], "classfunction_libgap (class in sage.groups.class_function)": [[18, "sage.groups.class_function.ClassFunction_libgap"]], "adams_operation() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.adams_operation"]], "adams_operation() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.adams_operation"]], "central_character() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.central_character"]], "central_character() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.central_character"]], "decompose() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.decompose"]], "decompose() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.decompose"]], "degree() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.degree"]], "degree() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.degree"]], "determinant_character() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.determinant_character"]], "determinant_character() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.determinant_character"]], "domain() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.domain"]], "domain() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.domain"]], "exterior_power() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.exterior_power"]], "exterior_power() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.exterior_power"]], "gap() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.gap"]], "induct() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.induct"]], "induct() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.induct"]], "irreducible_constituents() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.irreducible_constituents"]], "irreducible_constituents() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.irreducible_constituents"]], "is_irreducible() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.is_irreducible"]], "is_irreducible() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.is_irreducible"]], "norm() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.norm"]], "norm() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.norm"]], "restrict() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.restrict"]], "restrict() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.restrict"]], "sage.groups.class_function": [[18, "module-sage.groups.class_function"]], "scalar_product() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.scalar_product"]], "scalar_product() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.scalar_product"]], "symmetric_power() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.symmetric_power"]], "symmetric_power() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.symmetric_power"]], "tensor_product() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.tensor_product"]], "tensor_product() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.tensor_product"]], "values() (sage.groups.class_function.classfunction_gap method)": [[18, "sage.groups.class_function.ClassFunction_gap.values"]], "values() (sage.groups.class_function.classfunction_libgap method)": [[18, "sage.groups.class_function.ClassFunction_libgap.values"]], "conjugacyclass (class in sage.groups.conjugacy_classes)": [[19, "sage.groups.conjugacy_classes.ConjugacyClass"]], "conjugacyclassgap (class in sage.groups.conjugacy_classes)": [[19, "sage.groups.conjugacy_classes.ConjugacyClassGAP"]], "an_element() (sage.groups.conjugacy_classes.conjugacyclass method)": [[19, "sage.groups.conjugacy_classes.ConjugacyClass.an_element"]], "cardinality() (sage.groups.conjugacy_classes.conjugacyclassgap method)": [[19, "sage.groups.conjugacy_classes.ConjugacyClassGAP.cardinality"]], "is_rational() (sage.groups.conjugacy_classes.conjugacyclass method)": [[19, "sage.groups.conjugacy_classes.ConjugacyClass.is_rational"]], "is_real() (sage.groups.conjugacy_classes.conjugacyclass method)": [[19, "sage.groups.conjugacy_classes.ConjugacyClass.is_real"]], "list() (sage.groups.conjugacy_classes.conjugacyclass method)": [[19, "sage.groups.conjugacy_classes.ConjugacyClass.list"]], "representative() (sage.groups.conjugacy_classes.conjugacyclass method)": [[19, "sage.groups.conjugacy_classes.ConjugacyClass.representative"]], "sage.groups.conjugacy_classes": [[19, "module-sage.groups.conjugacy_classes"]], "set() (sage.groups.conjugacy_classes.conjugacyclass method)": [[19, "sage.groups.conjugacy_classes.ConjugacyClass.set"]], "set() (sage.groups.conjugacy_classes.conjugacyclassgap method)": [[19, "sage.groups.conjugacy_classes.ConjugacyClassGAP.set"]], "assiongroups() (in module sage.groups.cubic_braid)": [[20, "sage.groups.cubic_braid.AssionGroupS"]], "assiongroupu() (in module sage.groups.cubic_braid)": [[20, "sage.groups.cubic_braid.AssionGroupU"]], "assions (sage.groups.cubic_braid.cubicbraidgroup.type attribute)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.type.AssionS"]], "assionu (sage.groups.cubic_braid.cubicbraidgroup.type attribute)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.type.AssionU"]], "coxeter (sage.groups.cubic_braid.cubicbraidgroup.type attribute)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.type.Coxeter"]], "cubicbraidelement (class in sage.groups.cubic_braid)": [[20, "sage.groups.cubic_braid.CubicBraidElement"]], "cubicbraidgroup (class in sage.groups.cubic_braid)": [[20, "sage.groups.cubic_braid.CubicBraidGroup"]], "cubicbraidgroup.type (class in sage.groups.cubic_braid)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.type"]], "element (sage.groups.cubic_braid.cubicbraidgroup attribute)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.Element"]], "as_classical_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.as_classical_group"]], "as_matrix_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.as_matrix_group"]], "as_permutation_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.as_permutation_group"]], "as_reflection_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.as_reflection_group"]], "braid() (sage.groups.cubic_braid.cubicbraidelement method)": [[20, "sage.groups.cubic_braid.CubicBraidElement.braid"]], "braid_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.braid_group"]], "burau_matrix() (sage.groups.cubic_braid.cubicbraidelement method)": [[20, "sage.groups.cubic_braid.CubicBraidElement.burau_matrix"]], "cardinality() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.cardinality"]], "centralizing_element() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.centralizing_element"]], "classical_invariant_form() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.classical_invariant_form"]], "codegrees() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.codegrees"]], "cubic_braid_subgroup() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.cubic_braid_subgroup"]], "degrees() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.degrees"]], "index_set() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.index_set"]], "is_finite() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.is_finite"]], "order() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.order"]], "sage.groups.cubic_braid": [[20, "module-sage.groups.cubic_braid"]], "simple_reflections() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.simple_reflections"]], "strands() (sage.groups.cubic_braid.cubicbraidgroup method)": [[20, "sage.groups.cubic_braid.CubicBraidGroup.strands"]], "element (sage.groups.finitely_presented.finitelypresentedgroup attribute)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.Element"]], "finitelypresentedgroup (class in sage.groups.finitely_presented)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup"]], "finitelypresentedgroupelement (class in sage.groups.finitely_presented)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroupElement"]], "groupmorphismwithgensimages (class in sage.groups.finitely_presented)": [[21, "sage.groups.finitely_presented.GroupMorphismWithGensImages"]], "rewritingsystem (class in sage.groups.finitely_presented)": [[21, "sage.groups.finitely_presented.RewritingSystem"]], "tietze() (sage.groups.finitely_presented.finitelypresentedgroupelement method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroupElement.Tietze"]], "abelian_alexander_matrix() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.abelian_alexander_matrix"]], "abelian_invariants() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.abelian_invariants"]], "abelianization_map() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.abelianization_map"]], "abelianization_to_algebra() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.abelianization_to_algebra"]], "alexander_matrix() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.alexander_matrix"]], "as_permutation_group() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.as_permutation_group"]], "cardinality() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.cardinality"]], "characteristic_varieties() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.characteristic_varieties"]], "direct_product() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.direct_product"]], "epimorphisms() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.epimorphisms"]], "finitely_presented_group() (sage.groups.finitely_presented.rewritingsystem method)": [[21, "sage.groups.finitely_presented.RewritingSystem.finitely_presented_group"]], "free_group() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.free_group"]], "free_group() (sage.groups.finitely_presented.rewritingsystem method)": [[21, "sage.groups.finitely_presented.RewritingSystem.free_group"]], "gap() (sage.groups.finitely_presented.rewritingsystem method)": [[21, "sage.groups.finitely_presented.RewritingSystem.gap"]], "is_confluent() (sage.groups.finitely_presented.rewritingsystem method)": [[21, "sage.groups.finitely_presented.RewritingSystem.is_confluent"]], "make_confluent() (sage.groups.finitely_presented.rewritingsystem method)": [[21, "sage.groups.finitely_presented.RewritingSystem.make_confluent"]], "order() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.order"]], "reduce() (sage.groups.finitely_presented.rewritingsystem method)": [[21, "sage.groups.finitely_presented.RewritingSystem.reduce"]], "relations() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.relations"]], "rewriting_system() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.rewriting_system"]], "rules() (sage.groups.finitely_presented.rewritingsystem method)": [[21, "sage.groups.finitely_presented.RewritingSystem.rules"]], "sage.groups.finitely_presented": [[21, "module-sage.groups.finitely_presented"]], "semidirect_product() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.semidirect_product"]], "simplification_isomorphism() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.simplification_isomorphism"]], "simplified() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.simplified"]], "sorted_presentation() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.sorted_presentation"]], "structure_description() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[21, "sage.groups.finitely_presented.FinitelyPresentedGroup.structure_description"]], "wrap_fpgroup() (in module sage.groups.finitely_presented)": [[21, "sage.groups.finitely_presented.wrap_FpGroup"]], "alternatingpresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.AlternatingPresentation"]], "binarydihedralpresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.BinaryDihedralPresentation"]], "cactuspresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.CactusPresentation"]], "cyclicpresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.CyclicPresentation"]], "dicyclicpresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.DiCyclicPresentation"]], "dihedralpresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.DihedralPresentation"]], "finitelygeneratedabelianpresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.FinitelyGeneratedAbelianPresentation"]], "finitelygeneratedheisenbergpresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.FinitelyGeneratedHeisenbergPresentation"]], "kleinfourpresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.KleinFourPresentation"]], "quaternionpresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.QuaternionPresentation"]], "symmetricpresentation() (in module sage.groups.finitely_presented_named)": [[22, "sage.groups.finitely_presented_named.SymmetricPresentation"]], "sage.groups.finitely_presented_named": [[22, "module-sage.groups.finitely_presented_named"]], "element (sage.groups.free_group.freegroup_class attribute)": [[23, "sage.groups.free_group.FreeGroup_class.Element"]], "freegroup() (in module sage.groups.free_group)": [[23, "sage.groups.free_group.FreeGroup"]], "freegroupelement (class in sage.groups.free_group)": [[23, "sage.groups.free_group.FreeGroupElement"]], "freegroup_class (class in sage.groups.free_group)": [[23, "sage.groups.free_group.FreeGroup_class"]], "tietze() (sage.groups.free_group.freegroupelement method)": [[23, "sage.groups.free_group.FreeGroupElement.Tietze"]], "abelian_invariants() (sage.groups.free_group.freegroup_class method)": [[23, "sage.groups.free_group.FreeGroup_class.abelian_invariants"]], "fox_derivative() (sage.groups.free_group.freegroupelement method)": [[23, "sage.groups.free_group.FreeGroupElement.fox_derivative"]], "is_freegroup() (in module sage.groups.free_group)": [[23, "sage.groups.free_group.is_FreeGroup"]], "quotient() (sage.groups.free_group.freegroup_class method)": [[23, "sage.groups.free_group.FreeGroup_class.quotient"]], "rank() (sage.groups.free_group.freegroup_class method)": [[23, "sage.groups.free_group.FreeGroup_class.rank"]], "sage.groups.free_group": [[23, "module-sage.groups.free_group"]], "syllables() (sage.groups.free_group.freegroupelement method)": [[23, "sage.groups.free_group.FreeGroupElement.syllables"]], "wrap_freegroup() (in module sage.groups.free_group)": [[23, "sage.groups.free_group.wrap_FreeGroup"]], "bsgs() (in module sage.groups.generic)": [[24, "sage.groups.generic.bsgs"]], "discrete_log() (in module sage.groups.generic)": [[24, "sage.groups.generic.discrete_log"]], "discrete_log_generic() (in module sage.groups.generic)": [[24, "sage.groups.generic.discrete_log_generic"]], "discrete_log_lambda() (in module sage.groups.generic)": [[24, "sage.groups.generic.discrete_log_lambda"]], "discrete_log_rho() (in module sage.groups.generic)": [[24, "sage.groups.generic.discrete_log_rho"]], "has_order() (in module sage.groups.generic)": [[24, "sage.groups.generic.has_order"]], "linear_relation() (in module sage.groups.generic)": [[24, "sage.groups.generic.linear_relation"]], "merge_points() (in module sage.groups.generic)": [[24, "sage.groups.generic.merge_points"]], "multiple() (in module sage.groups.generic)": [[24, "sage.groups.generic.multiple"]], "multiples (class in sage.groups.generic)": [[24, "sage.groups.generic.multiples"]], "next() (sage.groups.generic.multiples method)": [[24, "sage.groups.generic.multiples.next"]], "order_from_bounds() (in module sage.groups.generic)": [[24, "sage.groups.generic.order_from_bounds"]], "order_from_multiple() (in module sage.groups.generic)": [[24, "sage.groups.generic.order_from_multiple"]], "sage.groups.generic": [[24, "module-sage.groups.generic"]], "structure_description() (in module sage.groups.generic)": [[24, "sage.groups.generic.structure_description"]], "abeliangroup (class in sage.groups.group)": [[25, "sage.groups.group.AbelianGroup"]], "algebraicgroup (class in sage.groups.group)": [[25, "sage.groups.group.AlgebraicGroup"]], "finitegroup (class in sage.groups.group)": [[25, "sage.groups.group.FiniteGroup"]], "group (class in sage.groups.group)": [[25, "sage.groups.group.Group"]], "is_group() (in module sage.groups.group)": [[25, "sage.groups.group.is_Group"]], "is_abelian() (sage.groups.group.abeliangroup method)": [[25, "sage.groups.group.AbelianGroup.is_abelian"]], "is_abelian() (sage.groups.group.group method)": [[25, "sage.groups.group.Group.is_abelian"]], "is_commutative() (sage.groups.group.group method)": [[25, "sage.groups.group.Group.is_commutative"]], "is_finite() (sage.groups.group.finitegroup method)": [[25, "sage.groups.group.FiniteGroup.is_finite"]], "is_finite() (sage.groups.group.group method)": [[25, "sage.groups.group.Group.is_finite"]], "is_multiplicative() (sage.groups.group.group method)": [[25, "sage.groups.group.Group.is_multiplicative"]], "is_trivial() (sage.groups.group.group method)": [[25, "sage.groups.group.Group.is_trivial"]], "order() (sage.groups.group.group method)": [[25, "sage.groups.group.Group.order"]], "quotient() (sage.groups.group.group method)": [[25, "sage.groups.group.Group.quotient"]], "sage.groups.group": [[25, "module-sage.groups.group"]], "element (sage.groups.group_exp.groupexp_class attribute)": [[26, "sage.groups.group_exp.GroupExp_Class.Element"]], "groupexp (class in sage.groups.group_exp)": [[26, "sage.groups.group_exp.GroupExp"]], "groupexpelement (class in sage.groups.group_exp)": [[26, "sage.groups.group_exp.GroupExpElement"]], "groupexp_class (class in sage.groups.group_exp)": [[26, "sage.groups.group_exp.GroupExp_Class"]], "an_element() (sage.groups.group_exp.groupexp_class method)": [[26, "sage.groups.group_exp.GroupExp_Class.an_element"]], "group_generators() (sage.groups.group_exp.groupexp_class method)": [[26, "sage.groups.group_exp.GroupExp_Class.group_generators"]], "one() (sage.groups.group_exp.groupexp_class method)": [[26, "sage.groups.group_exp.GroupExp_Class.one"]], "product() (sage.groups.group_exp.groupexp_class method)": [[26, "sage.groups.group_exp.GroupExp_Class.product"]], "sage.groups.group_exp": [[26, "module-sage.groups.group_exp"]], "element (sage.groups.group_semidirect_product.groupsemidirectproduct attribute)": [[27, "sage.groups.group_semidirect_product.GroupSemidirectProduct.Element"]], "groupsemidirectproduct (class in sage.groups.group_semidirect_product)": [[27, "sage.groups.group_semidirect_product.GroupSemidirectProduct"]], "groupsemidirectproductelement (class in sage.groups.group_semidirect_product)": [[27, "sage.groups.group_semidirect_product.GroupSemidirectProductElement"]], "act_to_right() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[27, "sage.groups.group_semidirect_product.GroupSemidirectProduct.act_to_right"]], "construction() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[27, "sage.groups.group_semidirect_product.GroupSemidirectProduct.construction"]], "group_generators() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[27, "sage.groups.group_semidirect_product.GroupSemidirectProduct.group_generators"]], "one() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[27, "sage.groups.group_semidirect_product.GroupSemidirectProduct.one"]], "opposite_semidirect_product() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[27, "sage.groups.group_semidirect_product.GroupSemidirectProduct.opposite_semidirect_product"]], "product() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[27, "sage.groups.group_semidirect_product.GroupSemidirectProduct.product"]], "sage.groups.group_semidirect_product": [[27, "module-sage.groups.group_semidirect_product"]], "to_opposite() (sage.groups.group_semidirect_product.groupsemidirectproductelement method)": [[27, "sage.groups.group_semidirect_product.GroupSemidirectProductElement.to_opposite"]], "sage.groups.groups_catalog": [[28, "module-sage.groups.groups_catalog"]], "indexedfreeabeliangroup (class in sage.groups.indexed_free_group)": [[29, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup"]], "indexedfreeabeliangroup.element (class in sage.groups.indexed_free_group)": [[29, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup.Element"]], "indexedfreegroup (class in sage.groups.indexed_free_group)": [[29, "sage.groups.indexed_free_group.IndexedFreeGroup"]], "indexedfreegroup.element (class in sage.groups.indexed_free_group)": [[29, "sage.groups.indexed_free_group.IndexedFreeGroup.Element"]], "indexedgroup (class in sage.groups.indexed_free_group)": [[29, "sage.groups.indexed_free_group.IndexedGroup"]], "gen() (sage.groups.indexed_free_group.indexedfreeabeliangroup method)": [[29, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup.gen"]], "gen() (sage.groups.indexed_free_group.indexedfreegroup method)": [[29, "sage.groups.indexed_free_group.IndexedFreeGroup.gen"]], "gens() (sage.groups.indexed_free_group.indexedgroup method)": [[29, "sage.groups.indexed_free_group.IndexedGroup.gens"]], "group_generators() (sage.groups.indexed_free_group.indexedgroup method)": [[29, "sage.groups.indexed_free_group.IndexedGroup.group_generators"]], "length() (sage.groups.indexed_free_group.indexedfreegroup.element method)": [[29, "sage.groups.indexed_free_group.IndexedFreeGroup.Element.length"]], "one() (sage.groups.indexed_free_group.indexedfreeabeliangroup method)": [[29, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup.one"]], "one() (sage.groups.indexed_free_group.indexedfreegroup method)": [[29, "sage.groups.indexed_free_group.IndexedFreeGroup.one"]], "order() (sage.groups.indexed_free_group.indexedgroup method)": [[29, "sage.groups.indexed_free_group.IndexedGroup.order"]], "rank() (sage.groups.indexed_free_group.indexedgroup method)": [[29, "sage.groups.indexed_free_group.IndexedGroup.rank"]], "sage.groups.indexed_free_group": [[29, "module-sage.groups.indexed_free_group"]], "to_word_list() (sage.groups.indexed_free_group.indexedfreegroup.element method)": [[29, "sage.groups.indexed_free_group.IndexedFreeGroup.Element.to_word_list"]], "kernelsubgroup (class in sage.groups.kernel_subgroup)": [[30, "sage.groups.kernel_subgroup.KernelSubgroup"]], "kernelsubgroup.element (class in sage.groups.kernel_subgroup)": [[30, "sage.groups.kernel_subgroup.KernelSubgroup.Element"]], "ambient() (sage.groups.kernel_subgroup.kernelsubgroup method)": [[30, "sage.groups.kernel_subgroup.KernelSubgroup.ambient"]], "defining_morphism() (sage.groups.kernel_subgroup.kernelsubgroup method)": [[30, "sage.groups.kernel_subgroup.KernelSubgroup.defining_morphism"]], "gens() (sage.groups.kernel_subgroup.kernelsubgroup method)": [[30, "sage.groups.kernel_subgroup.KernelSubgroup.gens"]], "lift() (sage.groups.kernel_subgroup.kernelsubgroup method)": [[30, "sage.groups.kernel_subgroup.KernelSubgroup.lift"]], "retract() (sage.groups.kernel_subgroup.kernelsubgroup method)": [[30, "sage.groups.kernel_subgroup.KernelSubgroup.retract"]], "sage.groups.kernel_subgroup": [[30, "module-sage.groups.kernel_subgroup"]], "element (sage.groups.libgap_group.grouplibgap attribute)": [[31, "sage.groups.libgap_group.GroupLibGAP.Element"]], "grouplibgap (class in sage.groups.libgap_group)": [[31, "sage.groups.libgap_group.GroupLibGAP"]], "sage.groups.libgap_group": [[31, "module-sage.groups.libgap_group"]], "groupmixinlibgap (class in sage.groups.libgap_mixin)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP"]], "cardinality() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.cardinality"]], "center() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.center"]], "centralizer() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.centralizer"]], "character() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.character"]], "character_table() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.character_table"]], "class_function() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.class_function"]], "conjugacy_class() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.conjugacy_class"]], "conjugacy_classes() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.conjugacy_classes"]], "conjugacy_classes_representatives() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.conjugacy_classes_representatives"]], "conjugacy_classes_subgroups() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.conjugacy_classes_subgroups"]], "exponent() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.exponent"]], "group_id() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.group_id"]], "id() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.id"]], "intersection() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.intersection"]], "irreducible_characters() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.irreducible_characters"]], "is_abelian() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_abelian"]], "is_finite() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_finite"]], "is_isomorphic() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_isomorphic"]], "is_nilpotent() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_nilpotent"]], "is_p_group() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_p_group"]], "is_perfect() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_perfect"]], "is_polycyclic() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_polycyclic"]], "is_simple() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_simple"]], "is_solvable() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_solvable"]], "is_supersolvable() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_supersolvable"]], "list() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.list"]], "order() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.order"]], "random_element() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.random_element"]], "sage.groups.libgap_mixin": [[32, "module-sage.groups.libgap_mixin"]], "subgroups() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.subgroups"]], "trivial_character() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[32, "sage.groups.libgap_mixin.GroupMixinLibGAP.trivial_character"]], "element (sage.groups.libgap_morphism.grouphomset_libgap attribute)": [[33, "sage.groups.libgap_morphism.GroupHomset_libgap.Element"]], "grouphomset_libgap (class in sage.groups.libgap_morphism)": [[33, "sage.groups.libgap_morphism.GroupHomset_libgap"]], "groupmorphism_libgap (class in sage.groups.libgap_morphism)": [[33, "sage.groups.libgap_morphism.GroupMorphism_libgap"]], "gap() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[33, "sage.groups.libgap_morphism.GroupMorphism_libgap.gap"]], "image() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[33, "sage.groups.libgap_morphism.GroupMorphism_libgap.image"]], "kernel() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[33, "sage.groups.libgap_morphism.GroupMorphism_libgap.kernel"]], "lift() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[33, "sage.groups.libgap_morphism.GroupMorphism_libgap.lift"]], "natural_map() (sage.groups.libgap_morphism.grouphomset_libgap method)": [[33, "sage.groups.libgap_morphism.GroupHomset_libgap.natural_map"]], "preimage() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[33, "sage.groups.libgap_morphism.GroupMorphism_libgap.preimage"]], "pushforward() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[33, "sage.groups.libgap_morphism.GroupMorphism_libgap.pushforward"]], "sage.groups.libgap_morphism": [[33, "module-sage.groups.libgap_morphism"]], "section() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[33, "sage.groups.libgap_morphism.GroupMorphism_libgap.section"]], "elementlibgap (class in sage.groups.libgap_wrapper)": [[34, "sage.groups.libgap_wrapper.ElementLibGAP"]], "parentlibgap (class in sage.groups.libgap_wrapper)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP"]], "ambient() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.ambient"]], "gap() (sage.groups.libgap_wrapper.elementlibgap method)": [[34, "sage.groups.libgap_wrapper.ElementLibGAP.gap"]], "gap() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.gap"]], "gen() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.gen"]], "generators() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.generators"]], "gens() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.gens"]], "inverse() (sage.groups.libgap_wrapper.elementlibgap method)": [[34, "sage.groups.libgap_wrapper.ElementLibGAP.inverse"]], "is_conjugate() (sage.groups.libgap_wrapper.elementlibgap method)": [[34, "sage.groups.libgap_wrapper.ElementLibGAP.is_conjugate"]], "is_one() (sage.groups.libgap_wrapper.elementlibgap method)": [[34, "sage.groups.libgap_wrapper.ElementLibGAP.is_one"]], "is_subgroup() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.is_subgroup"]], "maximal_normal_subgroups() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.maximal_normal_subgroups"]], "minimal_normal_subgroups() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.minimal_normal_subgroups"]], "multiplicative_order() (sage.groups.libgap_wrapper.elementlibgap method)": [[34, "sage.groups.libgap_wrapper.ElementLibGAP.multiplicative_order"]], "ngens() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.ngens"]], "normalizer() (sage.groups.libgap_wrapper.elementlibgap method)": [[34, "sage.groups.libgap_wrapper.ElementLibGAP.normalizer"]], "nth_roots() (sage.groups.libgap_wrapper.elementlibgap method)": [[34, "sage.groups.libgap_wrapper.ElementLibGAP.nth_roots"]], "one() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.one"]], "order() (sage.groups.libgap_wrapper.elementlibgap method)": [[34, "sage.groups.libgap_wrapper.ElementLibGAP.order"]], "sage.groups.libgap_wrapper": [[34, "module-sage.groups.libgap_wrapper"]], "subgroup() (sage.groups.libgap_wrapper.parentlibgap method)": [[34, "sage.groups.libgap_wrapper.ParentLibGAP.subgroup"]], "nilpotentliegroup (class in sage.groups.lie_gps.nilpotent_lie_group)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup"]], "nilpotentliegroup.element (class in sage.groups.lie_gps.nilpotent_lie_group)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.Element"]], "adjoint() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.adjoint"]], "chart_exp1() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.chart_exp1"]], "chart_exp2() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.chart_exp2"]], "conjugation() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.conjugation"]], "exp() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.exp"]], "gens() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.gens"]], "left_invariant_extension() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.left_invariant_extension"]], "left_invariant_frame() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.left_invariant_frame"]], "left_translation() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.left_translation"]], "lie_algebra() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.lie_algebra"]], "livf() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.livf"]], "log() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.log"]], "one() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.one"]], "right_invariant_extension() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.right_invariant_extension"]], "right_invariant_frame() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.right_invariant_frame"]], "right_translation() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.right_translation"]], "rivf() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.rivf"]], "sage.groups.lie_gps.nilpotent_lie_group": [[35, "module-sage.groups.lie_gps.nilpotent_lie_group"]], "step() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[35, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.step"]], "binarydihedralgroup (class in sage.groups.matrix_gps.binary_dihedral)": [[36, "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup"]], "cardinality() (sage.groups.matrix_gps.binary_dihedral.binarydihedralgroup method)": [[36, "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup.cardinality"]], "order() (sage.groups.matrix_gps.binary_dihedral.binarydihedralgroup method)": [[36, "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup.order"]], "sage.groups.matrix_gps.binary_dihedral": [[36, "module-sage.groups.matrix_gps.binary_dihedral"]], "sage.groups.matrix_gps.catalog": [[37, "module-sage.groups.matrix_gps.catalog"]], "coxetermatrixgroup (class in sage.groups.matrix_gps.coxeter_group)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup"]], "coxetermatrixgroup.element (class in sage.groups.matrix_gps.coxeter_group)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element"]], "action_on_root_indices() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.action_on_root_indices"]], "bilinear_form() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.bilinear_form"]], "canonical_matrix() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.canonical_matrix"]], "canonical_representation() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.canonical_representation"]], "coxeter_matrix() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.coxeter_matrix"]], "descents() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.descents"]], "first_descent() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.first_descent"]], "fundamental_weight() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.fundamental_weight"]], "fundamental_weights() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.fundamental_weights"]], "has_right_descent() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.has_right_descent"]], "is_commutative() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.is_commutative"]], "is_finite() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.is_finite"]], "order() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.order"]], "positive_roots() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.positive_roots"]], "reflections() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.reflections"]], "roots() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.roots"]], "sage.groups.matrix_gps.coxeter_group": [[38, "module-sage.groups.matrix_gps.coxeter_group"]], "simple_reflection() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.simple_reflection"]], "simple_root_index() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[38, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.simple_root_index"]], "finitelygeneratedmatrixgroup_generic (class in sage.groups.matrix_gps.finitely_generated)": [[39, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic"]], "matrixgroup() (in module sage.groups.matrix_gps.finitely_generated)": [[39, "sage.groups.matrix_gps.finitely_generated.MatrixGroup"]], "quaternionmatrixgroupgf3() (in module sage.groups.matrix_gps.finitely_generated)": [[39, "sage.groups.matrix_gps.finitely_generated.QuaternionMatrixGroupGF3"]], "gen() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_generic method)": [[39, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic.gen"]], "gens() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_generic method)": [[39, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic.gens"]], "ngens() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_generic method)": [[39, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic.ngens"]], "normalize_square_matrices() (in module sage.groups.matrix_gps.finitely_generated)": [[39, "sage.groups.matrix_gps.finitely_generated.normalize_square_matrices"]], "sage.groups.matrix_gps.finitely_generated": [[39, "module-sage.groups.matrix_gps.finitely_generated"]], "finitelygeneratedmatrixgroup_gap (class in sage.groups.matrix_gps.finitely_generated_gap)": [[40, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap"]], "as_permutation_group() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[40, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.as_permutation_group"]], "invariant_generators() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[40, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.invariant_generators"]], "invariants_of_degree() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[40, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.invariants_of_degree"]], "module_composition_factors() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[40, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.module_composition_factors"]], "molien_series() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[40, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.molien_series"]], "reynolds_operator() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[40, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.reynolds_operator"]], "sage.groups.matrix_gps.finitely_generated_gap": [[40, "module-sage.groups.matrix_gps.finitely_generated_gap"]], "matrixgroupelement_generic (class in sage.groups.matrix_gps.group_element)": [[41, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic"]], "inverse() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[41, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.inverse"]], "is_matrixgroupelement() (in module sage.groups.matrix_gps.group_element)": [[41, "sage.groups.matrix_gps.group_element.is_MatrixGroupElement"]], "is_one() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[41, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.is_one"]], "list() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[41, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.list"]], "matrix() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[41, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.matrix"]], "sage.groups.matrix_gps.group_element": [[41, "module-sage.groups.matrix_gps.group_element"]], "matrixgroupelement_gap (class in sage.groups.matrix_gps.group_element_gap)": [[42, "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap"]], "list() (sage.groups.matrix_gps.group_element_gap.matrixgroupelement_gap method)": [[42, "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap.list"]], "matrix() (sage.groups.matrix_gps.group_element_gap.matrixgroupelement_gap method)": [[42, "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap.matrix"]], "multiplicative_order() (sage.groups.matrix_gps.group_element_gap.matrixgroupelement_gap method)": [[42, "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap.multiplicative_order"]], "sage.groups.matrix_gps.group_element_gap": [[42, "module-sage.groups.matrix_gps.group_element_gap"]], "word_problem() (sage.groups.matrix_gps.group_element_gap.matrixgroupelement_gap method)": [[42, "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap.word_problem"]], "heisenberggroup (class in sage.groups.matrix_gps.heisenberg)": [[43, "sage.groups.matrix_gps.heisenberg.HeisenbergGroup"]], "cardinality() (sage.groups.matrix_gps.heisenberg.heisenberggroup method)": [[43, "sage.groups.matrix_gps.heisenberg.HeisenbergGroup.cardinality"]], "center() (sage.groups.matrix_gps.heisenberg.heisenberggroup method)": [[43, "sage.groups.matrix_gps.heisenberg.HeisenbergGroup.center"]], "order() (sage.groups.matrix_gps.heisenberg.heisenberggroup method)": [[43, "sage.groups.matrix_gps.heisenberg.HeisenbergGroup.order"]], "sage.groups.matrix_gps.heisenberg": [[43, "module-sage.groups.matrix_gps.heisenberg"]], "is_matrixgrouphomset() (in module sage.groups.matrix_gps.homset)": [[44, "sage.groups.matrix_gps.homset.is_MatrixGroupHomset"]], "sage.groups.matrix_gps.homset": [[44, "module-sage.groups.matrix_gps.homset"]], "groupactiononquotientmodule (class in sage.groups.matrix_gps.isometries)": [[45, "sage.groups.matrix_gps.isometries.GroupActionOnQuotientModule"]], "groupactiononsubmodule (class in sage.groups.matrix_gps.isometries)": [[45, "sage.groups.matrix_gps.isometries.GroupActionOnSubmodule"]], "groupofisometries (class in sage.groups.matrix_gps.isometries)": [[45, "sage.groups.matrix_gps.isometries.GroupOfIsometries"]], "invariant_bilinear_form() (sage.groups.matrix_gps.isometries.groupofisometries method)": [[45, "sage.groups.matrix_gps.isometries.GroupOfIsometries.invariant_bilinear_form"]], "sage.groups.matrix_gps.isometries": [[45, "module-sage.groups.matrix_gps.isometries"]], "gl() (in module sage.groups.matrix_gps.linear)": [[46, "sage.groups.matrix_gps.linear.GL"]], "linearmatrixgroup_generic (class in sage.groups.matrix_gps.linear)": [[46, "sage.groups.matrix_gps.linear.LinearMatrixGroup_generic"]], "sl() (in module sage.groups.matrix_gps.linear)": [[46, "sage.groups.matrix_gps.linear.SL"]], "cardinality() (sage.groups.matrix_gps.linear.linearmatrixgroup_generic method)": [[46, "sage.groups.matrix_gps.linear.LinearMatrixGroup_generic.cardinality"]], "order() (sage.groups.matrix_gps.linear.linearmatrixgroup_generic method)": [[46, "sage.groups.matrix_gps.linear.LinearMatrixGroup_generic.order"]], "sage.groups.matrix_gps.linear": [[46, "module-sage.groups.matrix_gps.linear"]], "linearmatrixgroup_gap (class in sage.groups.matrix_gps.linear_gap)": [[47, "sage.groups.matrix_gps.linear_gap.LinearMatrixGroup_gap"]], "sage.groups.matrix_gps.linear_gap": [[47, "module-sage.groups.matrix_gps.linear_gap"]], "element (sage.groups.matrix_gps.matrix_group.matrixgroup_generic attribute)": [[48, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic.Element"]], "matrixgroup_base (class in sage.groups.matrix_gps.matrix_group)": [[48, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base"]], "matrixgroup_generic (class in sage.groups.matrix_gps.matrix_group)": [[48, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic"]], "ambient() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[48, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.ambient"]], "as_matrix_group() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[48, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.as_matrix_group"]], "degree() (sage.groups.matrix_gps.matrix_group.matrixgroup_generic method)": [[48, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic.degree"]], "is_matrixgroup() (in module sage.groups.matrix_gps.matrix_group)": [[48, "sage.groups.matrix_gps.matrix_group.is_MatrixGroup"]], "is_trivial() (sage.groups.matrix_gps.matrix_group.matrixgroup_generic method)": [[48, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic.is_trivial"]], "matrix_space() (sage.groups.matrix_gps.matrix_group.matrixgroup_generic method)": [[48, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic.matrix_space"]], "sage.groups.matrix_gps.matrix_group": [[48, "module-sage.groups.matrix_gps.matrix_group"]], "sign_representation() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[48, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.sign_representation"]], "subgroup() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[48, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.subgroup"]], "element (sage.groups.matrix_gps.matrix_group_gap.matrixgroup_gap attribute)": [[49, "sage.groups.matrix_gps.matrix_group_gap.MatrixGroup_gap.Element"]], "matrixgroup_gap (class in sage.groups.matrix_gps.matrix_group_gap)": [[49, "sage.groups.matrix_gps.matrix_group_gap.MatrixGroup_gap"]], "sage.groups.matrix_gps.matrix_group_gap": [[49, "module-sage.groups.matrix_gps.matrix_group_gap"]], "structure_description() (sage.groups.matrix_gps.matrix_group_gap.matrixgroup_gap method)": [[49, "sage.groups.matrix_gps.matrix_group_gap.MatrixGroup_gap.structure_description"]], "subgroup() (sage.groups.matrix_gps.matrix_group_gap.matrixgroup_gap method)": [[49, "sage.groups.matrix_gps.matrix_group_gap.MatrixGroup_gap.subgroup"]], "sage.groups.matrix_gps.morphism": [[50, "module-sage.groups.matrix_gps.morphism"]], "to_libgap() (in module sage.groups.matrix_gps.morphism)": [[50, "sage.groups.matrix_gps.morphism.to_libgap"]], "namedmatrixgroup_generic (class in sage.groups.matrix_gps.named_group)": [[51, "sage.groups.matrix_gps.named_group.NamedMatrixGroup_generic"]], "normalize_args_invariant_form() (in module sage.groups.matrix_gps.named_group)": [[51, "sage.groups.matrix_gps.named_group.normalize_args_invariant_form"]], "normalize_args_vectorspace() (in module sage.groups.matrix_gps.named_group)": [[51, "sage.groups.matrix_gps.named_group.normalize_args_vectorspace"]], "sage.groups.matrix_gps.named_group": [[51, "module-sage.groups.matrix_gps.named_group"]], "namedmatrixgroup_gap (class in sage.groups.matrix_gps.named_group_gap)": [[52, "sage.groups.matrix_gps.named_group_gap.NamedMatrixGroup_gap"]], "sage.groups.matrix_gps.named_group_gap": [[52, "module-sage.groups.matrix_gps.named_group_gap"]], "go() (in module sage.groups.matrix_gps.orthogonal)": [[53, "sage.groups.matrix_gps.orthogonal.GO"]], "orthogonalmatrixgroup_generic (class in sage.groups.matrix_gps.orthogonal)": [[53, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic"]], "so() (in module sage.groups.matrix_gps.orthogonal)": [[53, "sage.groups.matrix_gps.orthogonal.SO"]], "invariant_bilinear_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_generic method)": [[53, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic.invariant_bilinear_form"]], "invariant_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_generic method)": [[53, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic.invariant_form"]], "invariant_quadratic_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_generic method)": [[53, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic.invariant_quadratic_form"]], "normalize_args_e() (in module sage.groups.matrix_gps.orthogonal)": [[53, "sage.groups.matrix_gps.orthogonal.normalize_args_e"]], "sage.groups.matrix_gps.orthogonal": [[53, "module-sage.groups.matrix_gps.orthogonal"]], "orthogonalmatrixgroup_gap (class in sage.groups.matrix_gps.orthogonal_gap)": [[54, "sage.groups.matrix_gps.orthogonal_gap.OrthogonalMatrixGroup_gap"]], "invariant_bilinear_form() (sage.groups.matrix_gps.orthogonal_gap.orthogonalmatrixgroup_gap method)": [[54, "sage.groups.matrix_gps.orthogonal_gap.OrthogonalMatrixGroup_gap.invariant_bilinear_form"]], "invariant_form() (sage.groups.matrix_gps.orthogonal_gap.orthogonalmatrixgroup_gap method)": [[54, "sage.groups.matrix_gps.orthogonal_gap.OrthogonalMatrixGroup_gap.invariant_form"]], "invariant_quadratic_form() (sage.groups.matrix_gps.orthogonal_gap.orthogonalmatrixgroup_gap method)": [[54, "sage.groups.matrix_gps.orthogonal_gap.OrthogonalMatrixGroup_gap.invariant_quadratic_form"]], "sage.groups.matrix_gps.orthogonal_gap": [[54, "module-sage.groups.matrix_gps.orthogonal_gap"]], "sp() (in module sage.groups.matrix_gps.symplectic)": [[55, "sage.groups.matrix_gps.symplectic.Sp"]], "symplecticmatrixgroup_generic (class in sage.groups.matrix_gps.symplectic)": [[55, "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_generic"]], "invariant_form() (sage.groups.matrix_gps.symplectic.symplecticmatrixgroup_generic method)": [[55, "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_generic.invariant_form"]], "sage.groups.matrix_gps.symplectic": [[55, "module-sage.groups.matrix_gps.symplectic"]], "symplecticmatrixgroup_gap (class in sage.groups.matrix_gps.symplectic_gap)": [[56, "sage.groups.matrix_gps.symplectic_gap.SymplecticMatrixGroup_gap"]], "invariant_form() (sage.groups.matrix_gps.symplectic_gap.symplecticmatrixgroup_gap method)": [[56, "sage.groups.matrix_gps.symplectic_gap.SymplecticMatrixGroup_gap.invariant_form"]], "sage.groups.matrix_gps.symplectic_gap": [[56, "module-sage.groups.matrix_gps.symplectic_gap"]], "gu() (in module sage.groups.matrix_gps.unitary)": [[57, "sage.groups.matrix_gps.unitary.GU"]], "su() (in module sage.groups.matrix_gps.unitary)": [[57, "sage.groups.matrix_gps.unitary.SU"]], "unitarymatrixgroup_generic (class in sage.groups.matrix_gps.unitary)": [[57, "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_generic"]], "finite_field_sqrt() (in module sage.groups.matrix_gps.unitary)": [[57, "sage.groups.matrix_gps.unitary.finite_field_sqrt"]], "invariant_form() (sage.groups.matrix_gps.unitary.unitarymatrixgroup_generic method)": [[57, "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_generic.invariant_form"]], "sage.groups.matrix_gps.unitary": [[57, "module-sage.groups.matrix_gps.unitary"]], "unitarymatrixgroup_gap (class in sage.groups.matrix_gps.unitary_gap)": [[58, "sage.groups.matrix_gps.unitary_gap.UnitaryMatrixGroup_gap"]], "invariant_form() (sage.groups.matrix_gps.unitary_gap.unitarymatrixgroup_gap method)": [[58, "sage.groups.matrix_gps.unitary_gap.UnitaryMatrixGroup_gap.invariant_form"]], "sage.groups.matrix_gps.unitary_gap": [[58, "module-sage.groups.matrix_gps.unitary_gap"]], "abstractargument (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.AbstractArgument"]], "abstractargumentgroup (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.AbstractArgumentGroup"]], "argumentbyelement (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.ArgumentByElement"]], "argumentbyelementgroup (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.ArgumentByElementGroup"]], "argumentgroup (in module sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.ArgumentGroup"]], "argumentgroupfactory (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory"]], "element (sage.groups.misc_gps.argument_groups.abstractargumentgroup attribute)": [[59, "sage.groups.misc_gps.argument_groups.AbstractArgumentGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.argumentbyelementgroup attribute)": [[59, "sage.groups.misc_gps.argument_groups.ArgumentByElementGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.rootsofunitygroup attribute)": [[59, "sage.groups.misc_gps.argument_groups.RootsOfUnityGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.signgroup attribute)": [[59, "sage.groups.misc_gps.argument_groups.SignGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.unitcirclegroup attribute)": [[59, "sage.groups.misc_gps.argument_groups.UnitCircleGroup.Element"]], "rootofunity (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.RootOfUnity"]], "rootsofunitygroup (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.RootsOfUnityGroup"]], "sign (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.Sign"]], "signgroup (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.SignGroup"]], "unitcirclegroup (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.UnitCircleGroup"]], "unitcirclepoint (class in sage.groups.misc_gps.argument_groups)": [[59, "sage.groups.misc_gps.argument_groups.UnitCirclePoint"]], "create_key_and_extra_args() (sage.groups.misc_gps.argument_groups.argumentgroupfactory method)": [[59, "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory.create_key_and_extra_args"]], "create_object() (sage.groups.misc_gps.argument_groups.argumentgroupfactory method)": [[59, "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory.create_object"]], "exponent (sage.groups.misc_gps.argument_groups.unitcirclepoint property)": [[59, "sage.groups.misc_gps.argument_groups.UnitCirclePoint.exponent"]], "exponent_denominator() (sage.groups.misc_gps.argument_groups.rootofunity method)": [[59, "sage.groups.misc_gps.argument_groups.RootOfUnity.exponent_denominator"]], "exponent_numerator() (sage.groups.misc_gps.argument_groups.rootofunity method)": [[59, "sage.groups.misc_gps.argument_groups.RootOfUnity.exponent_numerator"]], "is_minus_one() (sage.groups.misc_gps.argument_groups.sign method)": [[59, "sage.groups.misc_gps.argument_groups.Sign.is_minus_one"]], "is_minus_one() (sage.groups.misc_gps.argument_groups.unitcirclepoint method)": [[59, "sage.groups.misc_gps.argument_groups.UnitCirclePoint.is_minus_one"]], "is_one() (sage.groups.misc_gps.argument_groups.sign method)": [[59, "sage.groups.misc_gps.argument_groups.Sign.is_one"]], "is_one() (sage.groups.misc_gps.argument_groups.unitcirclepoint method)": [[59, "sage.groups.misc_gps.argument_groups.UnitCirclePoint.is_one"]], "sage.groups.misc_gps.argument_groups": [[59, "module-sage.groups.misc_gps.argument_groups"]], "element (sage.groups.misc_gps.imaginary_groups.imaginarygroup attribute)": [[60, "sage.groups.misc_gps.imaginary_groups.ImaginaryGroup.Element"]], "imaginaryelement (class in sage.groups.misc_gps.imaginary_groups)": [[60, "sage.groups.misc_gps.imaginary_groups.ImaginaryElement"]], "imaginarygroup (class in sage.groups.misc_gps.imaginary_groups)": [[60, "sage.groups.misc_gps.imaginary_groups.ImaginaryGroup"]], "imag() (sage.groups.misc_gps.imaginary_groups.imaginaryelement method)": [[60, "sage.groups.misc_gps.imaginary_groups.ImaginaryElement.imag"]], "real() (sage.groups.misc_gps.imaginary_groups.imaginaryelement method)": [[60, "sage.groups.misc_gps.imaginary_groups.ImaginaryElement.real"]], "sage.groups.misc_gps.imaginary_groups": [[60, "module-sage.groups.misc_gps.imaginary_groups"]], "sage.groups.misc_gps.misc_groups": [[61, "module-sage.groups.misc_gps.misc_groups"]], "parigroup (class in sage.groups.pari_group)": [[62, "sage.groups.pari_group.PariGroup"]], "cardinality() (sage.groups.pari_group.parigroup method)": [[62, "sage.groups.pari_group.PariGroup.cardinality"]], "degree() (sage.groups.pari_group.parigroup method)": [[62, "sage.groups.pari_group.PariGroup.degree"]], "label() (sage.groups.pari_group.parigroup method)": [[62, "sage.groups.pari_group.PariGroup.label"]], "order() (sage.groups.pari_group.parigroup method)": [[62, "sage.groups.pari_group.PariGroup.order"]], "permutation_group() (sage.groups.pari_group.parigroup method)": [[62, "sage.groups.pari_group.PariGroup.permutation_group"]], "sage.groups.pari_group": [[62, "module-sage.groups.pari_group"]], "signature() (sage.groups.pari_group.parigroup method)": [[62, "sage.groups.pari_group.PariGroup.signature"]], "transitive_number() (sage.groups.pari_group.parigroup method)": [[62, "sage.groups.pari_group.PariGroup.transitive_number"]], "permutationgroupelement() (in module sage.groups.perm_gps.constructor)": [[63, "sage.groups.perm_gps.constructor.PermutationGroupElement"]], "sage.groups.perm_gps.constructor": [[63, "module-sage.groups.perm_gps.constructor"]], "standardize_generator() (in module sage.groups.perm_gps.constructor)": [[63, "sage.groups.perm_gps.constructor.standardize_generator"]], "string_to_tuples() (in module sage.groups.perm_gps.constructor)": [[63, "sage.groups.perm_gps.constructor.string_to_tuples"]], "b() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.B"]], "cubegroup (class in sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup"]], "d() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.D"]], "f() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.F"]], "l() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.L"]], "r() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.R"]], "rubikscube (class in sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube"]], "u() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.U"]], "color_of_square() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.color_of_square"]], "create_poly() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.create_poly"]], "cubie() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube.cubie"]], "cubie_centers() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.cubie_centers"]], "cubie_colors() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.cubie_colors"]], "cubie_faces() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.cubie_faces"]], "display2d() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.display2d"]], "faces() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.faces"]], "facets() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.facets"]], "facets() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube.facets"]], "gen_names() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.gen_names"]], "index2singmaster() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.index2singmaster"]], "inv_list() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.inv_list"]], "legal() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.legal"]], "move() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.move"]], "move() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube.move"]], "parse() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.parse"]], "plot() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube.plot"]], "plot3d() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube.plot3d"]], "plot3d_cube() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.plot3d_cube"]], "plot3d_cubie() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.plot3d_cubie"]], "plot_cube() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.plot_cube"]], "polygon_plot3d() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.polygon_plot3d"]], "repr2d() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.repr2d"]], "rotation_list() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.rotation_list"]], "sage.groups.perm_gps.cubegroup": [[64, "module-sage.groups.perm_gps.cubegroup"]], "scramble() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube.scramble"]], "show() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube.show"]], "show3d() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube.show3d"]], "solve() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[64, "sage.groups.perm_gps.cubegroup.CubeGroup.solve"]], "solve() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube.solve"]], "undo() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[64, "sage.groups.perm_gps.cubegroup.RubiksCube.undo"]], "xproj() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.xproj"]], "yproj() (in module sage.groups.perm_gps.cubegroup)": [[64, "sage.groups.perm_gps.cubegroup.yproj"]], "sage.groups.perm_gps.partn_ref.canonical_augmentation": [[65, "module-sage.groups.perm_gps.partn_ref.canonical_augmentation"]], "op_represent() (in module sage.groups.perm_gps.partn_ref.data_structures)": [[66, "sage.groups.perm_gps.partn_ref.data_structures.OP_represent"]], "ps_represent() (in module sage.groups.perm_gps.partn_ref.data_structures)": [[66, "sage.groups.perm_gps.partn_ref.data_structures.PS_represent"]], "sc_test_list_perms() (in module sage.groups.perm_gps.partn_ref.data_structures)": [[66, "sage.groups.perm_gps.partn_ref.data_structures.SC_test_list_perms"]], "sage.groups.perm_gps.partn_ref.data_structures": [[66, "module-sage.groups.perm_gps.partn_ref.data_structures"]], "graphstruct (class in sage.groups.perm_gps.partn_ref.refinement_graphs)": [[67, "sage.groups.perm_gps.partn_ref.refinement_graphs.GraphStruct"]], "all_labeled_graphs() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[67, "sage.groups.perm_gps.partn_ref.refinement_graphs.all_labeled_graphs"]], "coarsest_equitable_refinement() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[67, "sage.groups.perm_gps.partn_ref.refinement_graphs.coarsest_equitable_refinement"]], "generate_dense_graphs_edge_addition() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[67, "sage.groups.perm_gps.partn_ref.refinement_graphs.generate_dense_graphs_edge_addition"]], "generate_dense_graphs_vert_addition() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[67, "sage.groups.perm_gps.partn_ref.refinement_graphs.generate_dense_graphs_vert_addition"]], "get_orbits() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[67, "sage.groups.perm_gps.partn_ref.refinement_graphs.get_orbits"]], "isomorphic() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[67, "sage.groups.perm_gps.partn_ref.refinement_graphs.isomorphic"]], "orbit_partition() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[67, "sage.groups.perm_gps.partn_ref.refinement_graphs.orbit_partition"]], "random_tests() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[67, "sage.groups.perm_gps.partn_ref.refinement_graphs.random_tests"]], "sage.groups.perm_gps.partn_ref.refinement_graphs": [[67, "module-sage.groups.perm_gps.partn_ref.refinement_graphs"]], "search_tree() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[67, "sage.groups.perm_gps.partn_ref.refinement_graphs.search_tree"]], "is_isomorphic() (in module sage.groups.perm_gps.partn_ref.refinement_lists)": [[68, "sage.groups.perm_gps.partn_ref.refinement_lists.is_isomorphic"]], "sage.groups.perm_gps.partn_ref.refinement_lists": [[68, "module-sage.groups.perm_gps.partn_ref.refinement_lists"]], "matrixstruct (class in sage.groups.perm_gps.partn_ref.refinement_matrices)": [[69, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct"]], "automorphism_group() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[69, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.automorphism_group"]], "canonical_relabeling() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[69, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.canonical_relabeling"]], "display() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[69, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.display"]], "is_isomorphic() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[69, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.is_isomorphic"]], "random_tests() (in module sage.groups.perm_gps.partn_ref.refinement_matrices)": [[69, "sage.groups.perm_gps.partn_ref.refinement_matrices.random_tests"]], "run() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[69, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.run"]], "sage.groups.perm_gps.partn_ref.refinement_matrices": [[69, "module-sage.groups.perm_gps.partn_ref.refinement_matrices"]], "element (sage.groups.perm_gps.permgroup.permutationgroup_generic attribute)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.Element"]], "permutationgroup() (in module sage.groups.perm_gps.permgroup)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup"]], "permutationgroup_action (class in sage.groups.perm_gps.permgroup)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_action"]], "permutationgroup_generic (class in sage.groups.perm_gps.permgroup)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic"]], "permutationgroup_subgroup (class in sage.groups.perm_gps.permgroup)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup"]], "subgroup (sage.groups.perm_gps.permgroup.permutationgroup_generic attribute)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.Subgroup"]], "ambient_group() (sage.groups.perm_gps.permgroup.permutationgroup_subgroup method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup.ambient_group"]], "as_finitely_presented_group() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.as_finitely_presented_group"]], "base() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.base"]], "blocks_all() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.blocks_all"]], "cardinality() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cardinality"]], "center() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.center"]], "centralizer() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.centralizer"]], "character() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.character"]], "character_table() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.character_table"]], "cohomology() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cohomology"]], "cohomology_part() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cohomology_part"]], "commutator() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.commutator"]], "composition_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.composition_series"]], "conjugacy_class() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_class"]], "conjugacy_classes() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_classes"]], "conjugacy_classes_representatives() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_classes_representatives"]], "conjugacy_classes_subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_classes_subgroups"]], "conjugate() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugate"]], "construction() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.construction"]], "cosets() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cosets"]], "degree() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.degree"]], "derived_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.derived_series"]], "direct_product() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.direct_product"]], "direct_product_permgroups() (in module sage.groups.perm_gps.permgroup)": [[70, "sage.groups.perm_gps.permgroup.direct_product_permgroups"]], "domain() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.domain"]], "exponent() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.exponent"]], "fitting_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.fitting_subgroup"]], "fixed_points() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.fixed_points"]], "frattini_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.frattini_subgroup"]], "from_gap_list() (in module sage.groups.perm_gps.permgroup)": [[70, "sage.groups.perm_gps.permgroup.from_gap_list"]], "gap() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gap"]], "gen() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gen"]], "gens() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gens"]], "gens_small() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gens_small"]], "group_id() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.group_id"]], "group_primitive_id() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.group_primitive_id"]], "hap_decorator() (in module sage.groups.perm_gps.permgroup)": [[70, "sage.groups.perm_gps.permgroup.hap_decorator"]], "has_element() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.has_element"]], "has_regular_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.has_regular_subgroup"]], "holomorph() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.holomorph"]], "homology() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.homology"]], "homology_part() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.homology_part"]], "id() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.id"]], "identity() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.identity"]], "intersection() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.intersection"]], "irreducible_characters() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.irreducible_characters"]], "is_abelian() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_abelian"]], "is_commutative() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_commutative"]], "is_cyclic() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_cyclic"]], "is_elementary_abelian() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_elementary_abelian"]], "is_isomorphic() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_isomorphic"]], "is_monomial() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_monomial"]], "is_nilpotent() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_nilpotent"]], "is_normal() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_normal"]], "is_normal() (sage.groups.perm_gps.permgroup.permutationgroup_subgroup method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup.is_normal"]], "is_perfect() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_perfect"]], "is_pgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_pgroup"]], "is_polycyclic() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_polycyclic"]], "is_primitive() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_primitive"]], "is_regular() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_regular"]], "is_semi_regular() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_semi_regular"]], "is_simple() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_simple"]], "is_solvable() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_solvable"]], "is_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_subgroup"]], "is_supersolvable() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_supersolvable"]], "is_transitive() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_transitive"]], "is_trivial() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_trivial"]], "isomorphism_to() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.isomorphism_to"]], "isomorphism_type_info_simple_group() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.isomorphism_type_info_simple_group"]], "iteration() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.iteration"]], "largest_moved_point() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.largest_moved_point"]], "list() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.list"]], "load_hap() (in module sage.groups.perm_gps.permgroup)": [[70, "sage.groups.perm_gps.permgroup.load_hap"]], "lower_central_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.lower_central_series"]], "maximal_normal_subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.maximal_normal_subgroups"]], "minimal_generating_set() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.minimal_generating_set"]], "minimal_normal_subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.minimal_normal_subgroups"]], "molien_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.molien_series"]], "ngens() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.ngens"]], "non_fixed_points() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.non_fixed_points"]], "normal_subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.normal_subgroups"]], "normalizer() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.normalizer"]], "normalizes() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.normalizes"]], "one() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.one"]], "orbit() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.orbit"]], "orbits() (sage.groups.perm_gps.permgroup.permutationgroup_action method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_action.orbits"]], "orbits() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.orbits"]], "order() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.order"]], "poincare_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.poincare_series"]], "quotient() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.quotient"]], "random_element() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.random_element"]], "representative_action() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.representative_action"]], "sage.groups.perm_gps.permgroup": [[70, "module-sage.groups.perm_gps.permgroup"]], "semidirect_product() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.semidirect_product"]], "sign_representation() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.sign_representation"]], "smallest_moved_point() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.smallest_moved_point"]], "socle() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.socle"]], "solvable_radical() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.solvable_radical"]], "stabilizer() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.stabilizer"]], "strong_generating_system() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.strong_generating_system"]], "structure_description() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.structure_description"]], "subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.subgroup"]], "subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.subgroups"]], "sylow_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.sylow_subgroup"]], "transversals() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.transversals"]], "trivial_character() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.trivial_character"]], "upper_central_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[70, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.upper_central_series"]], "permutationgroupelement (class in sage.groups.perm_gps.permgroup_element)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement"]], "symmetricgroupelement (class in sage.groups.perm_gps.permgroup_element)": [[71, "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement"]], "absolute_length() (sage.groups.perm_gps.permgroup_element.symmetricgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement.absolute_length"]], "cycle_string() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycle_string"]], "cycle_tuples() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycle_tuples"]], "cycle_type() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycle_type"]], "cycles() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycles"]], "dict() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.dict"]], "domain() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.domain"]], "gap() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.gap"]], "has_descent() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.has_descent"]], "has_left_descent() (sage.groups.perm_gps.permgroup_element.symmetricgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement.has_left_descent"]], "inverse() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.inverse"]], "is_permutationgroupelement() (in module sage.groups.perm_gps.permgroup_element)": [[71, "sage.groups.perm_gps.permgroup_element.is_PermutationGroupElement"]], "make_permgroup_element() (in module sage.groups.perm_gps.permgroup_element)": [[71, "sage.groups.perm_gps.permgroup_element.make_permgroup_element"]], "make_permgroup_element_v2() (in module sage.groups.perm_gps.permgroup_element)": [[71, "sage.groups.perm_gps.permgroup_element.make_permgroup_element_v2"]], "matrix() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.matrix"]], "multiplicative_order() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.multiplicative_order"]], "orbit() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.orbit"]], "sage.groups.perm_gps.permgroup_element": [[71, "module-sage.groups.perm_gps.permgroup_element"]], "sign() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.sign"]], "tuple() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.tuple"]], "word_problem() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[71, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.word_problem"]], "permutationgroupmorphism (class in sage.groups.perm_gps.permgroup_morphism)": [[72, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism"]], "permutationgroupmorphism_from_gap (class in sage.groups.perm_gps.permgroup_morphism)": [[72, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism_from_gap"]], "permutationgroupmorphism_id (class in sage.groups.perm_gps.permgroup_morphism)": [[72, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism_id"]], "permutationgroupmorphism_im_gens (class in sage.groups.perm_gps.permgroup_morphism)": [[72, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism_im_gens"]], "image() (sage.groups.perm_gps.permgroup_morphism.permutationgroupmorphism method)": [[72, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism.image"]], "is_permutationgroupmorphism() (in module sage.groups.perm_gps.permgroup_morphism)": [[72, "sage.groups.perm_gps.permgroup_morphism.is_PermutationGroupMorphism"]], "kernel() (sage.groups.perm_gps.permgroup_morphism.permutationgroupmorphism method)": [[72, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism.kernel"]], "sage.groups.perm_gps.permgroup_morphism": [[72, "module-sage.groups.perm_gps.permgroup_morphism"]], "alternatinggroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.AlternatingGroup"]], "complexreflectiongroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup"]], "cyclicpermutationgroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup"]], "dicyclicgroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.DiCyclicGroup"]], "dihedralgroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.DihedralGroup"]], "element (sage.groups.perm_gps.permgroup_named.symmetricgroup attribute)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.Element"]], "generaldihedralgroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.GeneralDihedralGroup"]], "jankogroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.JankoGroup"]], "kleinfourgroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.KleinFourGroup"]], "mathieugroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.MathieuGroup"]], "pgl (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PGL"]], "pgu (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PGU"]], "psl (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PSL"]], "psp (in module sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PSP"]], "psu (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PSU"]], "psp (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PSp"]], "permutationgroup_plg (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg"]], "permutationgroup_pug (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PermutationGroup_pug"]], "permutationgroup_symalt (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PermutationGroup_symalt"]], "permutationgroup_unique (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PermutationGroup_unique"]], "primitivegroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PrimitiveGroup"]], "primitivegroups() (in module sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PrimitiveGroups"]], "primitivegroupsall (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsAll"]], "primitivegroupsofdegree (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsOfDegree"]], "quaterniongroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.QuaternionGroup"]], "semidihedralgroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.SemidihedralGroup"]], "smallpermutationgroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.SmallPermutationGroup"]], "splitmetacyclicgroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.SplitMetacyclicGroup"]], "suzukigroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.SuzukiGroup"]], "suzukisporadicgroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.SuzukiSporadicGroup"]], "symmetricgroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup"]], "transitivegroup (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.TransitiveGroup"]], "transitivegroups() (in module sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.TransitiveGroups"]], "transitivegroupsall (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.TransitiveGroupsAll"]], "transitivegroupsofdegree (class in sage.groups.perm_gps.permgroup_named)": [[73, "sage.groups.perm_gps.permgroup_named.TransitiveGroupsOfDegree"]], "algebra() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.algebra"]], "as_abeliangroup() (sage.groups.perm_gps.permgroup_named.cyclicpermutationgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup.as_AbelianGroup"]], "base_ring() (sage.groups.perm_gps.permgroup_named.permutationgroup_plg method)": [[73, "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg.base_ring"]], "base_ring() (sage.groups.perm_gps.permgroup_named.suzukigroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SuzukiGroup.base_ring"]], "cardinality() (sage.groups.perm_gps.permgroup_named.primitivegroupsofdegree method)": [[73, "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsOfDegree.cardinality"]], "cardinality() (sage.groups.perm_gps.permgroup_named.transitivegroupsofdegree method)": [[73, "sage.groups.perm_gps.permgroup_named.TransitiveGroupsOfDegree.cardinality"]], "cartan_type() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.cartan_type"]], "codegrees() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[73, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.codegrees"]], "conjugacy_class() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_class"]], "conjugacy_classes() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_classes"]], "conjugacy_classes_iterator() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_classes_iterator"]], "conjugacy_classes_representatives() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_classes_representatives"]], "coxeter_matrix() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.coxeter_matrix"]], "degree() (sage.groups.perm_gps.permgroup_named.transitivegroup method)": [[73, "sage.groups.perm_gps.permgroup_named.TransitiveGroup.degree"]], "degrees() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[73, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.degrees"]], "field_of_definition() (sage.groups.perm_gps.permgroup_named.permutationgroup_pug method)": [[73, "sage.groups.perm_gps.permgroup_named.PermutationGroup_pug.field_of_definition"]], "gap_small_group() (sage.groups.perm_gps.permgroup_named.smallpermutationgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SmallPermutationGroup.gap_small_group"]], "group_primitive_id() (sage.groups.perm_gps.permgroup_named.primitivegroup method)": [[73, "sage.groups.perm_gps.permgroup_named.PrimitiveGroup.group_primitive_id"]], "index_set() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[73, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.index_set"]], "index_set() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.index_set"]], "is_abelian() (sage.groups.perm_gps.permgroup_named.cyclicpermutationgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup.is_abelian"]], "is_abelian() (sage.groups.perm_gps.permgroup_named.dicyclicgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.DiCyclicGroup.is_abelian"]], "is_commutative() (sage.groups.perm_gps.permgroup_named.cyclicpermutationgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup.is_commutative"]], "is_commutative() (sage.groups.perm_gps.permgroup_named.dicyclicgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.DiCyclicGroup.is_commutative"]], "major_index() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.major_index"]], "matrix_degree() (sage.groups.perm_gps.permgroup_named.permutationgroup_plg method)": [[73, "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg.matrix_degree"]], "order() (sage.groups.perm_gps.permgroup_named.smallpermutationgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SmallPermutationGroup.order"]], "ramification_module_decomposition_hurwitz_curve() (sage.groups.perm_gps.permgroup_named.psl method)": [[73, "sage.groups.perm_gps.permgroup_named.PSL.ramification_module_decomposition_hurwitz_curve"]], "ramification_module_decomposition_modular_curve() (sage.groups.perm_gps.permgroup_named.psl method)": [[73, "sage.groups.perm_gps.permgroup_named.PSL.ramification_module_decomposition_modular_curve"]], "reflections() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.reflections"]], "sage.groups.perm_gps.permgroup_named": [[73, "module-sage.groups.perm_gps.permgroup_named"]], "simple_reflection() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[73, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.simple_reflection"]], "simple_reflection() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.simple_reflection"]], "transitive_number() (sage.groups.perm_gps.permgroup_named.transitivegroup method)": [[73, "sage.groups.perm_gps.permgroup_named.TransitiveGroup.transitive_number"]], "young_subgroup() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[73, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.young_subgroup"]], "sage.groups.perm_gps.permutation_groups_catalog": [[74, "module-sage.groups.perm_gps.permutation_groups_catalog"]], "permutationsconjugacyclass (class in sage.groups.perm_gps.symgp_conjugacy_class)": [[75, "sage.groups.perm_gps.symgp_conjugacy_class.PermutationsConjugacyClass"]], "symmetricgroupconjugacyclass (class in sage.groups.perm_gps.symgp_conjugacy_class)": [[75, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClass"]], "symmetricgroupconjugacyclassmixin (class in sage.groups.perm_gps.symgp_conjugacy_class)": [[75, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClassMixin"]], "conjugacy_class_iterator() (in module sage.groups.perm_gps.symgp_conjugacy_class)": [[75, "sage.groups.perm_gps.symgp_conjugacy_class.conjugacy_class_iterator"]], "default_representative() (in module sage.groups.perm_gps.symgp_conjugacy_class)": [[75, "sage.groups.perm_gps.symgp_conjugacy_class.default_representative"]], "partition() (sage.groups.perm_gps.symgp_conjugacy_class.symmetricgroupconjugacyclassmixin method)": [[75, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClassMixin.partition"]], "sage.groups.perm_gps.symgp_conjugacy_class": [[75, "module-sage.groups.perm_gps.symgp_conjugacy_class"]], "set() (sage.groups.perm_gps.symgp_conjugacy_class.permutationsconjugacyclass method)": [[75, "sage.groups.perm_gps.symgp_conjugacy_class.PermutationsConjugacyClass.set"]], "set() (sage.groups.perm_gps.symgp_conjugacy_class.symmetricgroupconjugacyclass method)": [[75, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClass.set"]], "cohomologyraag (class in sage.groups.raag)": [[76, "sage.groups.raag.CohomologyRAAG"]], "cohomologyraag.element (class in sage.groups.raag)": [[76, "sage.groups.raag.CohomologyRAAG.Element"]], "rightangledartingroup (class in sage.groups.raag)": [[76, "sage.groups.raag.RightAngledArtinGroup"]], "rightangledartingroup.element (class in sage.groups.raag)": [[76, "sage.groups.raag.RightAngledArtinGroup.Element"]], "algebra_generators() (sage.groups.raag.cohomologyraag method)": [[76, "sage.groups.raag.CohomologyRAAG.algebra_generators"]], "cohomology() (sage.groups.raag.rightangledartingroup method)": [[76, "sage.groups.raag.RightAngledArtinGroup.cohomology"]], "degree_on_basis() (sage.groups.raag.cohomologyraag method)": [[76, "sage.groups.raag.CohomologyRAAG.degree_on_basis"]], "gen() (sage.groups.raag.cohomologyraag method)": [[76, "sage.groups.raag.CohomologyRAAG.gen"]], "gen() (sage.groups.raag.rightangledartingroup method)": [[76, "sage.groups.raag.RightAngledArtinGroup.gen"]], "gens() (sage.groups.raag.cohomologyraag method)": [[76, "sage.groups.raag.CohomologyRAAG.gens"]], "gens() (sage.groups.raag.rightangledartingroup method)": [[76, "sage.groups.raag.RightAngledArtinGroup.gens"]], "graph() (sage.groups.raag.rightangledartingroup method)": [[76, "sage.groups.raag.RightAngledArtinGroup.graph"]], "ngens() (sage.groups.raag.cohomologyraag method)": [[76, "sage.groups.raag.CohomologyRAAG.ngens"]], "ngens() (sage.groups.raag.rightangledartingroup method)": [[76, "sage.groups.raag.RightAngledArtinGroup.ngens"]], "one() (sage.groups.raag.rightangledartingroup method)": [[76, "sage.groups.raag.RightAngledArtinGroup.one"]], "one_basis() (sage.groups.raag.cohomologyraag method)": [[76, "sage.groups.raag.CohomologyRAAG.one_basis"]], "one_element() (sage.groups.raag.rightangledartingroup method)": [[76, "sage.groups.raag.RightAngledArtinGroup.one_element"]], "sage.groups.raag": [[76, "module-sage.groups.raag"]], "semimonomialtransformation (class in sage.groups.semimonomial_transformations.semimonomial_transformation)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation"]], "get_autom() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_autom"]], "get_perm() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_perm"]], "get_v() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_v"]], "get_v_inverse() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_v_inverse"]], "invert_v() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.invert_v"]], "sage.groups.semimonomial_transformations.semimonomial_transformation": [[77, "module-sage.groups.semimonomial_transformations.semimonomial_transformation"]], "element (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup attribute)": [[78, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.Element"]], "semimonomialactionmat (class in sage.groups.semimonomial_transformations.semimonomial_transformation_group)": [[78, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialActionMat"]], "semimonomialactionvec (class in sage.groups.semimonomial_transformations.semimonomial_transformation_group)": [[78, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialActionVec"]], "semimonomialtransformationgroup (class in sage.groups.semimonomial_transformations.semimonomial_transformation_group)": [[78, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup"]], "base_ring() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[78, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.base_ring"]], "degree() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[78, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.degree"]], "gens() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[78, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.gens"]], "order() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[78, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.order"]], "sage.groups.semimonomial_transformations.semimonomial_transformation_group": [[78, "module-sage.groups.semimonomial_transformations.semimonomial_transformation_group"]]}})