Search.setIndex({"docnames": ["index", "sage/groups/abelian_gps/abelian_aut", "sage/groups/abelian_gps/abelian_group", "sage/groups/abelian_gps/abelian_group_element", "sage/groups/abelian_gps/abelian_group_gap", "sage/groups/abelian_gps/abelian_group_morphism", "sage/groups/abelian_gps/dual_abelian_group", "sage/groups/abelian_gps/dual_abelian_group_element", "sage/groups/abelian_gps/element_base", "sage/groups/abelian_gps/values", "sage/groups/additive_abelian/additive_abelian_group", "sage/groups/additive_abelian/additive_abelian_wrapper", "sage/groups/affine_gps/affine_group", "sage/groups/affine_gps/euclidean_group", "sage/groups/affine_gps/group_element", "sage/groups/braid", "sage/groups/cactus_group", "sage/groups/class_function", "sage/groups/conjugacy_classes", "sage/groups/cubic_braid", "sage/groups/finitely_presented", "sage/groups/finitely_presented_named", "sage/groups/free_group", "sage/groups/generic", "sage/groups/group", "sage/groups/group_exp", "sage/groups/group_semidirect_product", "sage/groups/groups_catalog", "sage/groups/indexed_free_group", "sage/groups/kernel_subgroup", "sage/groups/libgap_group", "sage/groups/libgap_mixin", "sage/groups/libgap_morphism", "sage/groups/libgap_wrapper", "sage/groups/lie_gps/nilpotent_lie_group", "sage/groups/matrix_gps/binary_dihedral", "sage/groups/matrix_gps/catalog", "sage/groups/matrix_gps/coxeter_group", "sage/groups/matrix_gps/finitely_generated", "sage/groups/matrix_gps/finitely_generated_gap", "sage/groups/matrix_gps/group_element", "sage/groups/matrix_gps/group_element_gap", "sage/groups/matrix_gps/heisenberg", "sage/groups/matrix_gps/homset", "sage/groups/matrix_gps/isometries", "sage/groups/matrix_gps/linear", "sage/groups/matrix_gps/linear_gap", "sage/groups/matrix_gps/matrix_group", "sage/groups/matrix_gps/matrix_group_gap", "sage/groups/matrix_gps/morphism", "sage/groups/matrix_gps/named_group", "sage/groups/matrix_gps/named_group_gap", "sage/groups/matrix_gps/orthogonal", "sage/groups/matrix_gps/orthogonal_gap", "sage/groups/matrix_gps/symplectic", "sage/groups/matrix_gps/symplectic_gap", "sage/groups/matrix_gps/unitary", "sage/groups/matrix_gps/unitary_gap", "sage/groups/misc_gps/argument_groups", "sage/groups/misc_gps/imaginary_groups", "sage/groups/misc_gps/misc_groups", "sage/groups/pari_group", "sage/groups/perm_gps/constructor", "sage/groups/perm_gps/cubegroup", "sage/groups/perm_gps/partn_ref/canonical_augmentation", "sage/groups/perm_gps/partn_ref/data_structures", "sage/groups/perm_gps/partn_ref/refinement_graphs", "sage/groups/perm_gps/partn_ref/refinement_lists", "sage/groups/perm_gps/partn_ref/refinement_matrices", "sage/groups/perm_gps/permgroup", "sage/groups/perm_gps/permgroup_element", "sage/groups/perm_gps/permgroup_morphism", "sage/groups/perm_gps/permgroup_named", "sage/groups/perm_gps/permutation_groups_catalog", "sage/groups/perm_gps/symgp_conjugacy_class", "sage/groups/raag", "sage/groups/semimonomial_transformations/semimonomial_transformation", "sage/groups/semimonomial_transformations/semimonomial_transformation_group"], "filenames": ["index.rst", "sage/groups/abelian_gps/abelian_aut.rst", "sage/groups/abelian_gps/abelian_group.rst", "sage/groups/abelian_gps/abelian_group_element.rst", "sage/groups/abelian_gps/abelian_group_gap.rst", "sage/groups/abelian_gps/abelian_group_morphism.rst", "sage/groups/abelian_gps/dual_abelian_group.rst", "sage/groups/abelian_gps/dual_abelian_group_element.rst", "sage/groups/abelian_gps/element_base.rst", "sage/groups/abelian_gps/values.rst", "sage/groups/additive_abelian/additive_abelian_group.rst", "sage/groups/additive_abelian/additive_abelian_wrapper.rst", "sage/groups/affine_gps/affine_group.rst", "sage/groups/affine_gps/euclidean_group.rst", "sage/groups/affine_gps/group_element.rst", "sage/groups/braid.rst", "sage/groups/cactus_group.rst", "sage/groups/class_function.rst", "sage/groups/conjugacy_classes.rst", "sage/groups/cubic_braid.rst", "sage/groups/finitely_presented.rst", "sage/groups/finitely_presented_named.rst", "sage/groups/free_group.rst", "sage/groups/generic.rst", "sage/groups/group.rst", "sage/groups/group_exp.rst", "sage/groups/group_semidirect_product.rst", "sage/groups/groups_catalog.rst", "sage/groups/indexed_free_group.rst", "sage/groups/kernel_subgroup.rst", "sage/groups/libgap_group.rst", "sage/groups/libgap_mixin.rst", "sage/groups/libgap_morphism.rst", "sage/groups/libgap_wrapper.rst", "sage/groups/lie_gps/nilpotent_lie_group.rst", "sage/groups/matrix_gps/binary_dihedral.rst", "sage/groups/matrix_gps/catalog.rst", "sage/groups/matrix_gps/coxeter_group.rst", "sage/groups/matrix_gps/finitely_generated.rst", "sage/groups/matrix_gps/finitely_generated_gap.rst", "sage/groups/matrix_gps/group_element.rst", "sage/groups/matrix_gps/group_element_gap.rst", "sage/groups/matrix_gps/heisenberg.rst", "sage/groups/matrix_gps/homset.rst", "sage/groups/matrix_gps/isometries.rst", "sage/groups/matrix_gps/linear.rst", "sage/groups/matrix_gps/linear_gap.rst", "sage/groups/matrix_gps/matrix_group.rst", "sage/groups/matrix_gps/matrix_group_gap.rst", "sage/groups/matrix_gps/morphism.rst", "sage/groups/matrix_gps/named_group.rst", "sage/groups/matrix_gps/named_group_gap.rst", "sage/groups/matrix_gps/orthogonal.rst", "sage/groups/matrix_gps/orthogonal_gap.rst", "sage/groups/matrix_gps/symplectic.rst", "sage/groups/matrix_gps/symplectic_gap.rst", "sage/groups/matrix_gps/unitary.rst", "sage/groups/matrix_gps/unitary_gap.rst", "sage/groups/misc_gps/argument_groups.rst", "sage/groups/misc_gps/imaginary_groups.rst", "sage/groups/misc_gps/misc_groups.rst", "sage/groups/pari_group.rst", "sage/groups/perm_gps/constructor.rst", "sage/groups/perm_gps/cubegroup.rst", "sage/groups/perm_gps/partn_ref/canonical_augmentation.rst", "sage/groups/perm_gps/partn_ref/data_structures.rst", "sage/groups/perm_gps/partn_ref/refinement_graphs.rst", "sage/groups/perm_gps/partn_ref/refinement_lists.rst", "sage/groups/perm_gps/partn_ref/refinement_matrices.rst", "sage/groups/perm_gps/permgroup.rst", "sage/groups/perm_gps/permgroup_element.rst", "sage/groups/perm_gps/permgroup_morphism.rst", "sage/groups/perm_gps/permgroup_named.rst", "sage/groups/perm_gps/permutation_groups_catalog.rst", "sage/groups/perm_gps/symgp_conjugacy_class.rst", "sage/groups/raag.rst", "sage/groups/semimonomial_transformations/semimonomial_transformation.rst", "sage/groups/semimonomial_transformations/semimonomial_transformation_group.rst"], "titles": ["Groups", "Automorphisms of abelian groups", "Multiplicative Abelian Groups", "Abelian group elements", "Finitely generated abelian groups with GAP.", "Homomorphisms of abelian groups", "Dual groups of Finite Multiplicative Abelian Groups", "Elements (characters) of the dual group of a finite Abelian group", "Base class for abelian group elements", "Multiplicative Abelian Groups With Values", "Additive Abelian Groups", "Wrapper class for abelian groups", "Affine Groups", "Euclidean Groups", "Elements of Affine Groups", "Braid groups", "Cactus Groups", "Class functions of groups.", "Conjugacy classes of groups", "Cubic Braid Groups", "Finitely Presented Groups", "Named Finitely Presented Groups", "Free Groups", "Miscellaneous generic functions", "Base class for groups", "Functor that converts a commutative additive group into a multiplicative group.", "Semidirect product of groups", "Examples of Groups", "Indexed Free Groups", "Kernel Subgroups", "Generic LibGAP-based Group", "Mix-in Class for GAP-based Groups", "Group homomorphisms for groups with a GAP backend", "LibGAP-based Groups", "Nilpotent Lie groups", "Binary Dihedral Groups", "Library of Interesting Groups", "Coxeter Groups As Matrix Groups", "Finitely Generated Matrix Groups", "Finitely Generated Matrix Groups with GAP", "Matrix Group Elements", "Matrix group elements implemented in GAP", "Heisenberg Group", "Matrix Group Homsets", "Groups of isometries", "Linear Groups", "Linear Groups with GAP", "Base classes for Matrix Groups", "Matrix group over a ring that GAP understands", "Homomorphisms Between Matrix Groups", "Base for Classical Matrix Groups", "Base for Classical Matrix Groups with GAP", "Orthogonal Linear Groups", "Orthogonal Linear Groups with GAP", "Symplectic Linear Groups", "Symplectic Linear Groups with GAP", "Unitary Groups <span class=\"math notranslate nohighlight\">\\(GU(n,q)\\)</span> and <span class=\"math notranslate nohighlight\">\\(SU(n,q)\\)</span>", "Unitary Groups <span class=\"math notranslate nohighlight\">\\(GU(n,q)\\)</span> and <span class=\"math notranslate nohighlight\">\\(SU(n,q)\\)</span> with GAP", "Groups of elements representing (complex) arguments.", "Groups of imaginary elements", "Miscellaneous Groups", "PARI Groups", "Constructor for permutations", "Rubik\u2019s cube group functions", "Canonical augmentation", "Data structures", "Graph-theoretic partition backtrack functions", "Partition backtrack functions for lists \u2013 a simple example of using partn_ref", "Partition backtrack functions for matrices", "Permutation groups", "Permutation group elements", "Permutation group homomorphisms", "\u201cNamed\u201d Permutation groups (such as the symmetric group, S_n)", "Catalog of permutation groups", "Conjugacy Classes Of The Symmetric Group", "Right-Angled Artin Groups", "Elements of a semimonomial transformation group", "Semimonomial transformation group"], "terms": {"exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "base": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 19, 20, 22, 23, 25, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 63, 64, 66, 68, 69, 70, 71, 72, 75, 76, 77], "homomorph": [0, 2, 4, 6, 9, 16, 20, 22, 25, 26, 29, 63, 69], "gap": [0, 1, 2, 3, 5, 7, 15, 17, 18, 20, 21, 22, 23, 30, 33, 38, 44, 47, 49, 52, 54, 56, 61, 62, 63, 65, 69, 70, 71, 72, 76, 77], "backend": [0, 44], "libgap": [0, 1, 4, 17, 20, 22, 31, 32, 38, 39, 40, 41, 43, 45, 48, 49, 51, 52, 54, 56, 69, 70, 72], "gener": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 40, 41, 44, 45, 46, 47, 48, 50, 52, 53, 54, 56, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 77], "mix": 0, "pari": [0, 2, 69], "miscellan": [0, 27], "function": [0, 2, 3, 5, 6, 10, 11, 15, 18, 19, 20, 21, 22, 26, 31, 32, 33, 38, 39, 40, 41, 44, 49, 50, 56, 64, 69, 70, 71, 72], "free": [0, 2, 10, 12, 13, 15, 16, 20, 21, 27, 32, 33, 34, 44, 63, 64, 75], "finit": [0, 1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 27, 31, 32, 34, 35, 37, 40, 41, 44, 45, 47, 48, 50, 52, 54, 55, 56, 63, 64, 69, 71, 72, 75, 76, 77], "present": [0, 2, 15, 19, 22, 23, 27, 32, 35, 48, 69, 72, 75], "name": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 19, 20, 22, 28, 34, 39, 50, 51, 63, 66, 69, 75], "braid": [0, 27], "cubic": 0, "index": [0, 2, 9, 15, 16, 17, 19, 22, 23, 33, 37, 52, 63, 70, 72, 75, 76, 77], "right": [0, 2, 15, 16, 22, 23, 26, 34, 37, 40, 41, 44, 52, 54, 56, 63, 64, 69, 70, 76, 77], "angl": [0, 16, 63], "artin": [0, 15, 19], "cactu": [0, 21, 27, 29], "functor": [0, 17, 26], "convert": [0, 2, 4, 7, 14, 20, 21, 22, 29, 33, 34, 37, 40, 41, 49, 62, 69, 70], "commut": [0, 2, 6, 9, 12, 13, 16, 20, 24, 28, 32, 34, 37, 63, 69, 72, 75], "addit": [0, 11, 12, 13, 19, 23, 24, 52, 56, 62, 63, 64, 66, 69, 70, 75], "multipl": [0, 3, 5, 7, 8, 12, 14, 15, 16, 22, 23, 26, 33, 34, 42, 52, 69, 70, 72, 76, 77], "semidirect": [0, 12, 13, 20, 69, 72, 76, 77], "product": [0, 2, 10, 12, 13, 17, 20, 23, 25, 33, 34, 37, 38, 41, 58, 63, 69, 70, 72, 76, 77], "semimonomi": 0, "transform": [0, 12, 13, 20], "element": [0, 1, 2, 4, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 42, 44, 47, 48, 49, 50, 51, 53, 56, 62, 63, 66, 69, 72, 74, 75, 77], "kernel": [0, 2, 5, 15, 16, 32, 71, 75], "subgroup": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 17, 19, 20, 22, 23, 24, 26, 31, 32, 33, 34, 38, 39, 44, 47, 48, 52, 63, 69, 70, 71, 72, 75], "conjugaci": [0, 1, 15, 17, 31, 69, 72], "automorph": [0, 4, 15, 20, 26, 34, 64, 66, 68, 69, 72, 76, 77], "With": [0, 10, 69], "valu": [0, 2, 15, 16, 17, 19, 20, 21, 23, 26, 31, 34, 37, 48, 52, 64, 66, 69, 72], "dual": [0, 2, 34, 37], "charact": [0, 17, 31, 39, 69, 72], "wrapper": [0, 2, 4, 15, 17, 18, 20, 22, 26, 41, 58, 69, 70, 72], "repres": [0, 8, 12, 13, 14, 15, 18, 20, 22, 23, 28, 31, 37, 45, 52, 54, 56, 62, 63, 66, 69, 70, 72, 74], "complex": [0, 6, 15, 19, 23, 38, 65, 69, 72], "argument": [0, 2, 6, 11, 12, 13, 19, 22, 23, 38, 39, 50, 52, 62, 64, 69, 71], "imaginari": 0, "catalog": [0, 21], "constructor": [0, 22, 26, 33, 50, 52, 54, 56, 69], "symmetr": [0, 15, 16, 17, 18, 21, 27, 29, 44, 52, 53, 62, 69, 70], "s_n": [0, 16, 21, 64, 76, 77], "rubik": [0, 70], "": [0, 1, 2, 4, 5, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 32, 37, 38, 39, 40, 41, 44, 47, 48, 58, 59, 62, 64, 66, 69, 70, 71, 72, 74, 75, 76, 77], "cube": [0, 66, 70], "Of": [0, 2], "The": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77], "librari": [0, 33, 39, 72], "interest": [0, 63, 69], "over": [0, 1, 2, 3, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 52, 54, 55, 56, 59, 63, 64, 69, 70, 71, 72, 74, 75, 76, 77], "ring": [0, 1, 2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 28, 31, 32, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 51, 52, 54, 56, 58, 59, 69, 72, 75, 76, 77], "understand": [0, 20, 22, 69], "implement": [0, 1, 2, 4, 7, 9, 10, 11, 15, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 47, 48, 50, 64, 65, 69, 70, 72, 73, 77], "between": [0, 5, 10, 11, 15, 19, 23, 32, 33, 37, 63, 66, 68, 69, 71, 75], "homset": [0, 25, 32], "binari": [0, 21, 23], "dihedr": [0, 20, 21, 23, 27, 38, 48, 69, 71, 72], "coxet": [0, 16, 19, 27, 72, 75], "As": [0, 8, 12, 13, 14, 16, 69, 72], "linear": [0, 11, 12, 13, 14, 17, 23, 26, 31, 38, 39, 41, 44, 47, 48, 50, 69, 71, 72], "orthogon": [0, 16, 17, 44, 50], "isometri": 0, "symplect": [0, 19, 32, 50, 72], "unitari": [0, 15, 19, 31, 32, 50, 72], "gu": [0, 19, 27, 31, 32, 50], "n": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 15, 16, 17, 19, 21, 22, 23, 33, 35, 39, 41, 42, 44, 45, 52, 54, 58, 59, 62, 64, 65, 66, 68, 69, 70, 72, 74, 75, 76, 77], "q": [0, 4, 10, 11, 15, 16, 20, 21, 23, 34, 38, 39, 44, 52, 53, 54, 58, 66, 69, 70, 72], "su": [0, 27, 31, 47, 50], "heisenberg": [0, 21, 34], "euclidean": [0, 27], "nilpot": [0, 27, 31, 69], "canon": [0, 16, 17, 19, 21, 37, 38, 66, 68, 69], "augment": 0, "data": [0, 2, 9, 16, 37, 52, 58, 64, 68, 72], "structur": [0, 3, 9, 11, 20, 23, 26, 41, 47, 48, 64, 69, 72, 75], "graph": [0, 15, 37, 45, 65, 68, 69, 75], "theoret": [0, 5, 16, 62, 69, 71], "backtrack": 0, "list": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 31, 32, 33, 34, 37, 38, 39, 40, 41, 44, 47, 48, 62, 63, 65, 66, 68, 69, 70, 72, 74, 75], "simpl": [0, 6, 15, 31, 37, 64, 66, 69, 72, 75], "us": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 41, 43, 45, 47, 48, 49, 51, 52, 54, 56, 58, 62, 63, 64, 66, 69, 70, 71, 72, 76], "partn_ref": [0, 64, 65, 66, 68], "matric": [0, 1, 12, 14, 15, 16, 18, 20, 21, 23, 27, 33, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 54, 56, 69, 72, 77], "classic": [0, 19, 72], "modul": [0, 2, 4, 9, 10, 12, 13, 14, 17, 18, 19, 33, 39, 44, 50, 62, 64, 65, 72], "search": [0, 66, 69], "page": [0, 15], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 77], "sage": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77], "abelian_gp": [1, 2, 3, 4, 5, 6, 7, 8, 9, 32], "abelian_group_gap": [1, 4, 32], "import": [1, 2, 3, 4, 5, 6, 7, 10, 11, 15, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 38, 40, 43, 44, 47, 49, 50, 51, 56, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74], "abeliangroupgap": [1, 4, 32], "g": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 56, 61, 62, 63, 66, 69, 70, 71, 72, 74, 75, 76, 77], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77], "6": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 31, 32, 37, 38, 39, 44, 45, 48, 50, 52, 53, 56, 58, 61, 62, 63, 66, 68, 69, 70, 71, 72], "autg": 1, "aut": [1, 4, 26, 69, 76, 77], "act": [1, 12, 13, 20, 21, 26, 37, 44, 50, 52, 53, 63, 66, 69, 70, 72, 75], "domain": [1, 5, 9, 10, 11, 12, 13, 17, 19, 32, 50, 58, 62, 66, 69, 70, 71, 72, 74], "an_el": [1, 4, 7, 12, 15, 18, 19, 25, 26, 29, 32, 33, 40, 44, 47, 72, 76], "f": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 20, 22, 23, 24, 25, 28, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 47, 48, 52, 54, 55, 56, 61, 63, 69, 70, 71, 74, 75, 76, 77], "pcg": [1, 4], "f1": [1, 2, 4, 5, 15, 22, 32, 33, 61], "f2": [1, 2, 4, 5, 9, 15, 22, 32, 33], "f3": [1, 2, 4, 15, 32, 33], "Or": [1, 20], "anyth": [1, 2, 7, 11, 12, 22, 24, 32, 40, 62], "coercibl": [1, 4], "its": [1, 2, 6, 9, 14, 15, 19, 20, 23, 25, 26, 31, 32, 33, 34, 47, 62, 64, 66, 68, 69, 70, 71, 72], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 41, 44, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 63, 69, 70, 71, 72, 74, 75, 77], "abeliangroup": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 24, 28], "f0": [1, 2, 9, 15], "additiveabeliangroup": [1, 10, 11], "1": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77], "0": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77], "we": [1, 2, 4, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 32, 33, 37, 39, 41, 44, 45, 47, 48, 63, 66, 68, 69, 70, 72, 74, 75], "can": [1, 2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 47, 48, 50, 58, 62, 63, 64, 66, 69, 70, 71, 72], "comput": [1, 2, 9, 11, 15, 16, 18, 20, 22, 23, 31, 38, 39, 40, 45, 62, 63, 65, 66, 68, 69, 71, 72], "conjugacy_classes_repres": [1, 31, 38, 44, 45, 50, 69, 72], "order": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 23, 24, 28, 29, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 54, 56, 58, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 74, 75, 77], "12": [1, 2, 3, 4, 11, 12, 13, 14, 15, 19, 20, 23, 31, 32, 35, 37, 38, 39, 40, 45, 47, 52, 56, 63, 66, 68, 69, 70, 72, 76], "creat": [1, 2, 6, 10, 11, 12, 13, 15, 19, 20, 21, 22, 25, 26, 27, 34, 37, 38, 44, 58, 63, 69, 70, 71, 72, 75], "do": [1, 4, 12, 13, 14, 15, 16, 17, 19, 20, 32, 38, 40, 41, 62, 72], "same": [1, 2, 4, 7, 9, 10, 15, 19, 20, 21, 22, 23, 26, 30, 37, 38, 39, 48, 62, 63, 64, 66, 69, 70, 72, 75, 77], "them": [1, 9, 20, 22, 37, 40, 63, 69], "gen": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 18, 19, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 56, 62, 66, 69, 70, 71, 72, 75, 76, 77], "onli": [1, 2, 5, 9, 10, 15, 16, 18, 19, 20, 22, 23, 31, 33, 39, 52, 66, 69, 70, 71, 72, 75, 77], "ar": [1, 2, 3, 4, 6, 8, 9, 10, 11, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 28, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 48, 52, 54, 56, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74, 75], "support": [1, 2, 6, 20, 33, 38, 40, 70, 77], "option": [1, 2, 4, 6, 9, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 45, 47, 48, 50, 52, 54, 56, 62, 63, 66, 68, 69, 72, 74, 76], "gap_packag": [1, 4, 69, 72], "traceback": [1, 2, 11, 16, 18, 19, 20, 21, 23, 24, 31, 32, 34, 37, 38, 39, 40, 41, 52, 54, 56, 59, 69, 72], "most": [1, 2, 11, 15, 16, 18, 19, 20, 21, 22, 23, 24, 31, 32, 34, 37, 38, 39, 40, 41, 52, 54, 56, 59, 66, 68, 69, 72], "recent": [1, 2, 11, 16, 18, 19, 20, 21, 23, 24, 31, 32, 34, 37, 38, 39, 40, 41, 52, 54, 56, 59, 69, 72], "call": [1, 2, 4, 7, 11, 16, 18, 19, 20, 21, 22, 23, 24, 31, 32, 33, 34, 37, 38, 39, 40, 41, 52, 54, 56, 59, 62, 63, 64, 69, 70, 72, 76], "last": [1, 2, 11, 15, 16, 18, 19, 20, 21, 23, 24, 31, 32, 34, 37, 38, 39, 40, 41, 52, 54, 56, 59, 63, 69, 72], "valueerror": [1, 2, 15, 16, 19, 20, 21, 23, 32, 38, 41, 54, 56, 59, 69, 72], "author": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 50, 52, 54, 56, 58, 59, 63, 69, 70, 71, 72, 74, 75, 76, 77], "simon": [1, 4, 32, 38, 39, 44, 47, 69], "brandhorst": [1, 4, 32, 44], "2018": [1, 4, 15, 32, 34, 38, 44, 47, 49, 50, 52, 54, 56, 58, 59, 69, 70, 75], "02": [1, 2, 3, 5, 19, 23, 32, 35, 44, 69, 70, 71, 75], "17": [1, 4, 15, 31, 32, 39, 61, 63, 66, 69, 70, 72], "initi": [1, 4, 5, 10, 12, 13, 16, 17, 19, 20, 21, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 40, 42, 43, 45, 47, 52, 54, 56, 58, 62, 69, 75, 76, 77], "version": [1, 4, 5, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 25, 26, 28, 29, 32, 34, 35, 37, 38, 39, 40, 42, 43, 45, 47, 52, 54, 56, 58, 63, 69, 70, 71, 75, 76, 77], "abelian_aut": 1, "abeliangroupautomorph": 1, "parent": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 38, 39, 40, 41, 43, 44, 45, 52, 54, 56, 58, 59, 62, 64, 69, 70, 72, 75, 76], "x": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 44, 47, 48, 49, 52, 61, 63, 64, 69, 70, 71, 72, 74, 75, 76], "check": [1, 2, 4, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 23, 32, 33, 38, 40, 41, 44, 47, 48, 52, 56, 62, 63, 64, 69, 71, 72, 74, 77], "true": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 54, 56, 58, 61, 62, 63, 66, 68, 69, 70, 71, 72, 74, 76, 77], "elementlibgap": [1, 4, 22, 30, 33, 41], "input": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 54, 56, 58, 59, 62, 63, 64, 66, 68, 69, 70, 72, 74, 75], "abeliangroupautomorphismgroup_gap": 1, "bool": [1, 4, 14, 15, 40, 41, 44], "default": [1, 2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 26, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 47, 48, 52, 54, 56, 58, 62, 63, 68, 69, 70, 72, 74], "i": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77], "an": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 52, 53, 54, 56, 58, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76], "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77], "4": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 31, 32, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 61, 62, 63, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77], "5": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 31, 32, 34, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 52, 54, 55, 56, 58, 61, 62, 63, 66, 68, 69, 70, 71, 72, 74, 75, 77], "matrix": [1, 2, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 31, 32, 33, 35, 36, 42, 44, 45, 52, 53, 54, 55, 56, 57, 68, 69, 70, 72, 77], "return": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77], "defin": [1, 2, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 31, 32, 33, 34, 37, 38, 39, 40, 44, 47, 48, 50, 52, 53, 54, 56, 58, 64, 69, 70, 72, 75, 76, 77], "self": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 47, 48, 52, 61, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77], "th": [1, 2, 6, 8, 9, 12, 16, 17, 19, 20, 22, 33, 35, 37, 38, 39, 69, 72, 75], "row": [1, 2, 14, 21, 31, 47, 50, 51, 68, 69, 77], "expon": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 41, 58, 59, 69, 70, 72, 75], "vector": [1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 25, 26, 34, 37, 39, 42, 50, 53, 69, 72, 76, 77], "imag": [1, 5, 15, 16, 19, 20, 22, 26, 32, 59, 62, 66, 68, 69, 70, 71], "output": [1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 37, 38, 39, 40, 41, 44, 47, 48, 50, 52, 53, 54, 55, 56, 57, 62, 63, 66, 69, 70, 72, 74], "squar": [1, 15, 19, 38, 50, 52, 54, 56, 57, 63, 72], "integ": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 54, 56, 59, 63, 64, 66, 69, 70, 72], "f4": [1, 2, 19, 32, 33], "compar": [1, 2, 10, 11, 65], "abeliangroupautomorphismgroup": 1, "full": [1, 4, 12, 14, 19, 20, 23, 40, 41, 47, 48, 69, 72], "instanc": [1, 2, 7, 19, 25, 32, 44, 47, 48, 50, 52, 54, 56, 58, 69, 71, 72], "abeliangroup_gap": [1, 4], "equival": [1, 15, 20, 37, 52, 69], "aut1": 1, "alia": [1, 2, 4, 6, 9, 10, 11, 12, 15, 19, 20, 22, 23, 24, 25, 26, 30, 32, 33, 41, 47, 48, 52, 58, 59, 69, 70, 72, 77], "gap_group": [1, 69, 72], "categori": [1, 2, 4, 9, 20, 25, 26, 28, 32, 38, 39, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 69, 72], "ambient": [1, 2, 4, 10, 11, 12, 13, 16, 19, 25, 29, 33, 39, 47, 48, 62, 69, 70], "none": [1, 2, 4, 9, 11, 15, 16, 19, 20, 22, 23, 26, 28, 32, 33, 34, 37, 38, 39, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 66, 68, 69, 71, 72, 74, 75], "cachedrepresent": [1, 50, 72], "groupmixinlibgap": [1, 4, 20, 30, 31, 48], "parentlibgap": [1, 4, 20, 22, 30, 33, 48, 69], "construct": [1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 26, 37, 38, 39, 41, 47, 50, 51, 56, 63, 66, 69, 70, 71, 72, 74], "directli": [1, 2, 4, 12, 15, 30, 32, 33, 47, 69, 76], "libgap_par": [1, 33], "deriv": [1, 2, 9, 10, 20, 22, 24, 30, 31, 33, 47, 48, 69], "ha": [1, 2, 3, 7, 8, 9, 11, 15, 16, 19, 20, 21, 23, 33, 34, 37, 38, 39, 41, 47, 48, 58, 63, 64, 66, 69, 70, 72, 74, 75], "been": [1, 2, 11, 19, 33, 47, 48, 63], "automorphismgroupabeliangroup": 1, "covering_matrix_r": 1, "cover": [1, 4, 10], "time": [1, 2, 6, 15, 17, 19, 20, 21, 22, 23, 26, 31, 38, 39, 44, 45, 48, 50, 52, 54, 56, 63, 66, 69, 72, 76, 77], "zz": [1, 2, 4, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 28, 31, 32, 33, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 52, 58, 59, 69, 72, 75], "where": [1, 2, 4, 9, 10, 12, 13, 15, 16, 19, 20, 21, 22, 23, 28, 31, 33, 35, 37, 39, 42, 47, 50, 52, 58, 63, 64, 66, 69, 70, 72, 74, 75, 77], "number": [1, 2, 6, 9, 11, 15, 17, 19, 20, 21, 22, 24, 28, 31, 33, 37, 38, 39, 40, 47, 50, 51, 52, 58, 61, 62, 64, 68, 69, 70, 72, 74, 75, 77], "independ": [1, 2, 10, 11, 34], "matrixspac": [1, 12, 14, 31, 38, 39, 40, 41, 45, 47], "dens": [1, 12, 14, 40, 41, 47, 66], "is_subgroup_of": [1, 4], "consid": [1, 2, 4, 12, 15, 19, 22, 23, 35, 66, 69, 70, 72, 75], "s1": [1, 4, 15, 20, 26, 64, 69, 72], "s2": [1, 4, 15, 19, 20, 25, 26, 29, 64, 69, 72], "fals": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 15, 18, 19, 20, 22, 23, 24, 26, 31, 33, 37, 38, 39, 40, 43, 44, 45, 47, 48, 52, 54, 56, 58, 62, 63, 66, 67, 69, 70, 72], "abeliangroupautomorphismgroup_subgroup": 1, "thei": [1, 2, 15, 16, 19, 20, 22, 23, 33, 37, 38, 63, 64, 66, 69, 72, 75], "instead": [1, 2, 4, 6, 8, 9, 12, 13, 15, 18, 23, 32, 43, 47, 49, 69, 70, 71, 76], "tupl": [1, 2, 3, 4, 6, 7, 8, 9, 10, 15, 16, 17, 19, 20, 22, 23, 31, 33, 34, 38, 41, 47, 48, 62, 66, 69, 70, 72, 74, 77], "let": [2, 6, 12, 13, 15, 16, 17, 22, 27, 29, 35, 37, 39, 42, 44, 69, 70, 72, 74, 75], "you": [2, 4, 6, 9, 12, 13, 15, 20, 21, 22, 23, 30, 31, 33, 39, 40, 47, 62, 63, 69, 70, 72], "form": [2, 9, 10, 15, 16, 19, 20, 21, 23, 25, 26, 37, 39, 42, 44, 48, 50, 52, 53, 54, 55, 56, 57, 63, 69, 70, 72, 75], "r": [2, 10, 11, 15, 16, 19, 20, 21, 22, 23, 33, 39, 42, 45, 50, 52, 54, 56, 58, 61, 63, 69, 70, 71, 75, 76, 77], "oplu": [2, 16], "zz_": [2, 21], "k_1": 2, "cdot": [2, 11, 15, 19, 20, 21, 22, 34, 58, 63, 69, 72, 74, 76, 77], "k_t": 2, "It": [2, 4, 9, 15, 16, 17, 18, 19, 20, 22, 23, 39, 64, 69, 72, 74], "customari": 2, "denot": [2, 6, 9, 16, 20, 23, 25, 26, 31, 63, 69], "infinit": [2, 4, 8, 9, 11, 15, 18, 19, 20, 21, 23, 39, 44, 45, 60, 72], "cyclic": [2, 9, 10, 17, 20, 21, 23, 27, 33, 66, 69, 71, 72], "have": [2, 3, 7, 15, 16, 19, 20, 23, 30, 31, 32, 33, 37, 38, 40, 41, 44, 47, 48, 50, 51, 56, 62, 64, 69, 72, 75], "so": [2, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 23, 26, 27, 37, 38, 47, 52, 53, 56, 63, 69, 72, 75, 76, 77], "written": [2, 3, 9, 11, 17, 41, 69, 72], "vec": 2, "k": [2, 12, 16, 17, 20, 21, 23, 29, 32, 34, 35, 38, 39, 41, 44, 61, 69, 72, 75], "dot": [2, 9, 19, 22, 62, 69, 70], "zero": [2, 9, 10, 14, 21, 22, 39, 66], "t": [2, 3, 10, 11, 15, 16, 17, 19, 22, 23, 26, 38, 39, 40, 41, 42, 53, 63, 65, 66, 69, 70, 71, 72], "non": [2, 3, 9, 10, 15, 16, 18, 20, 22, 23, 37, 39, 48, 52, 56, 63, 69, 70, 72], "To": [2, 4, 7, 9, 19, 20, 22, 29, 32, 33, 39, 69, 71], "either": [2, 9, 15, 22, 23, 24, 26, 39, 62, 63, 69, 72], "specifi": [2, 9, 10, 12, 13, 15, 20, 22, 23, 26, 39, 44, 45, 50, 52, 54, 56, 62, 69, 70, 72, 74], "all": [2, 4, 6, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 31, 33, 37, 38, 39, 44, 45, 47, 52, 53, 54, 56, 58, 63, 64, 66, 69, 71, 72, 74, 75, 76, 77], "entri": [2, 8, 15, 19, 21, 22, 28, 37, 56, 68, 69, 72, 76], "togeth": [2, 12, 13, 19, 63, 69, 70, 75], "total": [2, 23, 45], "isomorph": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 19, 20, 21, 22, 23, 25, 31, 38, 39, 47, 48, 52, 64, 65, 66, 67, 68, 69, 72, 75], "z": [2, 6, 7, 10, 11, 15, 19, 21, 22, 23, 25, 33, 34, 35, 39, 42, 49, 58, 59, 63, 69, 70], "c2": [2, 3, 5, 7, 15, 19, 20, 63, 69, 72], "c3": [2, 3, 5, 7, 19, 20, 69, 72], "also": [2, 9, 12, 13, 15, 16, 19, 21, 22, 23, 33, 37, 38, 45, 52, 54, 56, 63, 64, 66, 69, 70, 72, 74, 75, 76, 77], "legal": [2, 63], "correspond": [2, 3, 4, 6, 7, 8, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 32, 35, 45, 47, 50, 52, 54, 56, 61, 64, 69, 70, 72, 75, 76], "neutral": 2, "still": [2, 34, 64, 69, 72], "take": [2, 12, 18, 20, 63, 64, 66, 69, 72], "up": [2, 9, 10, 15, 16, 20, 63, 64, 69, 72, 77], "label": [2, 34, 37, 61, 63, 66, 68], "g0": [2, 15, 20, 22], "g2": [2, 4, 11, 14, 20, 22, 23, 32, 37, 39, 48, 66, 69, 70], "note": [2, 10, 11, 17, 19, 20, 21, 23, 24, 33, 35, 37, 39, 58, 59, 64, 66, 69, 72], "uniqu": [2, 11, 20, 21, 22, 53, 69, 72, 75], "zz_6": [2, 9], "cong": [2, 72, 75], "zz_2": 2, "zz_3": 2, "previous": 2, "invari": [2, 4, 6, 10, 11, 19, 20, 21, 22, 23, 34, 39, 44, 48, 50, 52, 54, 56, 69, 72], "even": [2, 19, 20, 22, 23, 39, 48, 52, 54, 69, 70, 72], "though": [2, 3, 63, 69, 72], "necessarili": [2, 11, 39], "factor": [2, 4, 9, 10, 15, 19, 23, 24, 26, 39, 41, 58, 62, 69, 72], "should": [2, 5, 6, 10, 15, 18, 20, 22, 23, 24, 30, 31, 39, 47, 50, 62, 64, 69, 70, 72, 76], "now": [2, 10, 15, 20, 22, 63, 69, 70, 77], "gens_ord": [2, 4, 6, 9], "j": [2, 6, 11, 15, 16, 19, 20, 22, 32, 38, 59, 63, 64, 66, 68, 69, 71, 72, 75], "c4": [2, 3, 5, 9, 19, 20, 69, 75], "deprec": [2, 43, 49, 69], "elementary_divisor": [2, 4], "rang": [2, 8, 9, 15, 16, 23, 28, 31, 37, 40, 63, 66, 69, 72], "ngen": [2, 6, 20, 22, 33, 38, 69, 75], "print": [2, 6, 9, 10, 15, 23, 26, 33, 34, 63, 66, 69, 70, 72, 74], "infin": [2, 4, 8, 10, 11, 12, 15, 19, 20, 21, 23, 24, 28, 31, 37, 41, 42, 44, 72], "background": 2, "smith": [2, 10], "normal": [2, 4, 15, 20, 22, 23, 24, 26, 29, 33, 48, 50, 52, 58, 69, 75], "accord": [2, 9, 15, 19, 32, 69], "section": [2, 15, 19, 32, 39], "cohen1": 2, "which": [2, 3, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 28, 32, 35, 37, 39, 41, 47, 50, 52, 53, 54, 56, 58, 63, 64, 68, 69, 70, 71, 72, 74, 75, 76], "exist": [2, 11, 15, 19, 20, 23, 32, 41, 69], "exact": [2, 16, 21], "sequenc": [2, 11, 16, 64, 66, 69], "rightarrow": [2, 44, 69], "ell": [2, 37, 72, 74], "some": [2, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 38, 40, 41, 48, 58, 59, 60, 63, 64, 69, 71, 72, 75], "posit": [2, 10, 15, 17, 19, 20, 21, 22, 23, 24, 26, 35, 37, 39, 41, 42, 45, 52, 54, 56, 63, 69, 70, 72], "leq": [2, 15, 16, 37, 69, 72], "For": [2, 4, 9, 12, 13, 16, 19, 20, 23, 32, 34, 37, 39, 48, 50, 56, 66, 68, 69, 70, 72], "decomposit": [2, 17, 62, 72], "langl": [2, 20, 21, 35, 72, 75], "a_1": [2, 9, 22], "rangl": [2, 20, 21, 35, 72, 75], "a_": [2, 9, 37, 72, 75], "mathrm": [2, 11, 12, 26, 45, 58, 69], "ord": [2, 11, 23], "a_i": [2, 22], "p_i": 2, "c_i": [2, 69], "prime": [2, 10, 12, 13, 21, 23, 50, 56, 69, 72], "size": [2, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 31, 32, 33, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 63, 65, 66, 69, 70, 71, 72, 74, 76, 77], "In": [2, 9, 14, 15, 16, 19, 20, 22, 23, 26, 37, 38, 39, 52, 53, 64, 66, 69, 72, 74, 75], "situat": [2, 23, 62, 69], "phi": [2, 5, 20, 26, 29, 63, 69, 71, 75, 76, 77], "map": [2, 5, 15, 17, 19, 20, 22, 23, 28, 29, 32, 34, 38, 39, 44, 48, 63, 66, 69, 71], "x_1": [2, 12, 13, 22, 34, 39], "x_": [2, 12, 15], "relat": [2, 4, 9, 10, 11, 15, 16, 19, 20, 21, 22, 23, 27, 50, 52, 63, 69, 72, 75], "m": [2, 11, 14, 15, 19, 23, 31, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 52, 53, 54, 56, 63, 64, 65, 68, 69, 72, 77], "whose": [2, 8, 11, 15, 19, 23, 26, 28, 34, 42, 58, 59, 69, 72, 74, 75, 77], "other": [2, 3, 5, 10, 11, 15, 16, 17, 19, 20, 21, 23, 27, 31, 33, 60, 63, 64, 66, 67, 68, 69, 71, 72, 76], "word": [2, 3, 7, 8, 15, 16, 20, 22, 28, 41, 63, 64, 66, 69, 70, 75], "m_": [2, 37], "ij": [2, 16, 37, 72], "diagon": [2, 21, 33, 52], "ii": 2, "b": [2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 28, 30, 31, 32, 33, 34, 37, 39, 40, 41, 44, 47, 62, 63, 66, 69, 70, 72, 74, 75], "subset": [2, 16, 37, 58, 69], "b_1": 2, "f_": [2, 66], "b_m": 2, "phi_b": 2, "y_1": [2, 34], "y_m": 2, "left": [2, 15, 22, 23, 26, 34, 37, 52, 54, 56, 63, 69, 70, 72, 76, 77], "begin": [2, 12, 13, 15, 16, 19, 26, 27, 35, 42, 52, 54, 56], "arrai": [2, 19, 52, 54, 56], "cccc": 2, "11": [2, 3, 6, 7, 11, 12, 13, 14, 15, 19, 32, 37, 39, 63, 66, 68, 69, 70, 72, 74, 76, 77], "1m": 2, "21": [2, 10, 11, 15, 19, 21, 32, 41, 63, 66, 69, 70, 71, 72], "22": [2, 17, 32, 39, 63, 69, 70, 72], "2m": [2, 72], "vdot": 2, "ddot": 2, "end": [2, 9, 12, 13, 15, 16, 19, 20, 26, 35, 42, 52, 54, 56, 64], "regard": [2, 15, 63], "p_1": 2, "c_1": [2, 64, 69], "p_": 2, "c_": [2, 20, 23, 37, 48, 69, 72], "particular": [2, 9, 15, 16, 19, 37, 64, 69, 72], "ker": 2, "If": [2, 3, 8, 9, 10, 12, 13, 15, 18, 19, 20, 22, 23, 26, 30, 31, 32, 33, 34, 37, 39, 45, 47, 48, 50, 61, 63, 64, 66, 69, 70, 72], "snf": 2, "s_i": [2, 19, 37, 72, 75], "diag": 2, "s_1": [2, 19], "s_2": 2, "s_3": [2, 19, 31, 69], "s_r": 2, "determinant": 2, "divisor": [2, 4, 15, 72], "rank": [2, 10, 12, 13, 15, 19, 22, 28, 34, 44, 69, 72], "s_": [2, 16, 19, 72], "ani": [2, 6, 11, 15, 20, 23, 31, 34, 47, 63, 64, 69, 72, 74, 75], "prescrib": [2, 6], "geq": [2, 21, 37, 69, 72, 75], "method": [2, 3, 5, 6, 7, 11, 15, 18, 19, 20, 21, 22, 23, 31, 32, 37, 38, 39, 41, 45, 47, 48, 49, 63, 70, 71, 72, 74, 76], "obtain": [2, 6, 7, 14, 15, 19, 20, 39, 40, 41, 63, 66, 69, 72], "arbitrari": [2, 6, 8, 20, 21, 22, 23, 52, 54, 56, 64, 77], "string": [2, 6, 9, 15, 19, 20, 22, 23, 24, 26, 34, 39, 48, 50, 51, 52, 58, 62, 63, 69, 70, 71, 75], "more": [2, 4, 15, 16, 19, 20, 23, 25, 37, 39, 41, 45, 47, 58, 62, 63, 64, 66, 68, 69, 72], "variabl": [2, 15, 16, 20, 39, 45, 52, 54, 56, 64, 69, 72, 75], "syntax": [2, 20, 22, 34, 71], "ident": [2, 4, 10, 15, 16, 19, 20, 23, 25, 26, 28, 32, 33, 34, 39, 40, 42, 44, 52, 53, 69, 71, 72, 75], "case": [2, 4, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 26, 32, 39, 50, 52, 64, 66, 69, 72], "trivial": [2, 4, 8, 10, 11, 15, 20, 21, 28, 31, 33, 39, 69, 70, 72], "represent": [2, 12, 14, 15, 16, 17, 19, 20, 21, 23, 33, 37, 38, 39, 40, 41, 47, 48, 50, 51, 63, 66, 69, 70, 72], "underli": [2, 8, 11, 12, 15, 17, 20, 21, 32, 40, 69, 72, 74, 77], "7": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 26, 28, 31, 32, 37, 38, 39, 41, 45, 47, 48, 52, 53, 54, 56, 63, 66, 69, 70, 71, 72], "abcd": [2, 3, 6, 7, 8, 28, 69], "c5": [2, 7, 19, 20, 69, 72], "c7": [2, 7, 8, 20, 23, 48, 69, 72], "c": [2, 3, 5, 6, 7, 8, 15, 18, 19, 20, 21, 22, 23, 28, 33, 34, 37, 58, 62, 63, 66, 68, 69, 70, 72, 74, 75], "d": [2, 3, 6, 7, 8, 15, 17, 20, 21, 22, 23, 28, 37, 45, 50, 52, 54, 56, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75], "e": [2, 3, 6, 7, 8, 9, 11, 13, 15, 16, 19, 20, 23, 25, 28, 32, 34, 35, 37, 39, 47, 48, 52, 56, 58, 62, 69, 70, 72, 74, 75], "refer": [2, 12, 13, 15, 17, 19, 20, 21, 35, 39, 42, 45, 63, 64, 65, 66, 68, 69, 72, 75], "h": [2, 3, 4, 5, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 37, 38, 40, 42, 45, 63, 66, 69, 70, 71, 72, 75, 76, 77], "cohen": 2, "advanc": 2, "topic": 2, "theori": [2, 63, 65, 68], "springer": [2, 63, 69, 72], "2000": 2, "cohen2": 2, "cours": 2, "algebra": [2, 11, 15, 16, 20, 22, 34, 39, 72, 75], "1996": [2, 63, 69, 72], "rotman": 2, "introduct": 2, "4th": 2, "ed": 2, "1995": 2, "mani": [2, 15, 40, 66, 68, 72, 75], "basic": [2, 6, 11, 16, 44, 65, 69, 71], "properti": [2, 15, 58, 64, 69, 72, 75], "william": [2, 6, 7, 23, 38, 40, 41, 43, 45, 47, 52, 56, 69], "stein": [2, 6, 7, 23, 38, 40, 41, 43, 45, 47, 52, 54, 56, 69], "david": [2, 3, 5, 6, 7, 11, 23, 38, 39, 40, 41, 45, 47, 52, 54, 56, 63, 69, 70, 71, 72], "joyner": [2, 3, 5, 6, 7, 23, 38, 39, 40, 41, 45, 47, 52, 54, 56, 63, 69, 70, 71, 72], "2008": [2, 17, 23, 38, 47, 63, 69, 71], "ad": [2, 8, 19, 34, 38, 45, 47, 52, 63, 66, 69, 70], "user": [2, 20, 50, 52, 54, 56], "request": 2, "is_cycl": [2, 10, 20, 69, 72], "fix": [2, 3, 10, 15, 16, 20, 31, 33, 39, 41, 45, 52, 54, 56, 63, 64, 69, 70, 71, 72, 75], "2006": [2, 3, 5, 6, 7, 38, 40, 43, 45, 47, 52, 54, 56, 63, 69, 70, 71, 72], "03": [2, 5, 23, 38, 45, 47, 52, 54, 56, 69, 70, 71], "monoid": [2, 20], "kohel": [2, 3, 69], "05": [2, 3, 15, 23, 38, 40, 43, 45, 47, 52, 56, 63, 69, 75], "sever": [2, 10, 63, 64, 69, 70], "signific": 2, "bug": [2, 3, 11, 41, 45, 52, 54, 56, 69], "08": [2, 3, 6, 23, 32, 37, 38, 42, 47, 69], "chang": [2, 20, 22, 34, 63, 72], "doc": [2, 39, 63], "random": [2, 3, 6, 12, 13, 16, 17, 19, 23, 31, 38, 39, 45, 47, 52, 63, 66, 68, 69, 72], "how": [2, 15, 20, 33, 34, 69, 70, 72], "record": 2, "10": [2, 3, 4, 6, 7, 12, 13, 14, 15, 16, 17, 19, 21, 23, 28, 31, 32, 37, 39, 52, 63, 66, 68, 69, 70, 72], "dual_group": [2, 6, 7, 8], "seriou": 2, "word_problem": [2, 3, 7, 41, 63, 70], "loeffler": [2, 11, 41], "2009": [2, 3, 23, 69, 72], "volker": [2, 3, 6, 7, 12, 13, 14, 15, 17, 22, 33, 38, 40, 41, 43, 45, 52, 54, 56], "braun": [2, 3, 6, 7, 12, 13, 14, 15, 17, 22, 33, 38, 40, 41, 43, 45, 52, 54, 56], "2012": [2, 3, 6, 7, 69, 72, 76, 77], "port": [2, 3, 6, 7, 38, 40, 43, 45, 52, 54, 56], "new": [2, 3, 6, 7, 11, 20, 38, 40, 43, 45, 47, 52, 54, 56, 63, 64, 69, 72], "immut": [2, 3, 6, 7, 8, 69], "renam": [2, 45], "abelian_group": [2, 6, 11], "given": [2, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 25, 31, 34, 37, 38, 39, 47, 48, 50, 52, 58, 63, 64, 66, 69, 70, 72, 74, 75], "need": [2, 3, 4, 9, 10, 11, 15, 23, 30, 33, 45, 52, 54, 56, 62, 64, 66, 69], "power": [2, 12, 13, 15, 17, 18, 22, 23, 39, 50, 56, 72, 75], "neg": [2, 3, 9, 15, 20, 22, 23, 37, 72], "a_0": [2, 9], "typic": [2, 9, 23, 69], "increas": [2, 9, 15, 69], "pad": [2, 9], "length": [2, 8, 9, 11, 15, 16, 28, 69, 70, 74], "less": [2, 9, 15, 19, 63], "than": [2, 9, 10, 15, 18, 19, 23, 24, 34, 47, 62, 63, 65, 66, 69, 70, 72], "altern": [2, 15, 17, 19, 20, 21, 27, 54, 61, 69, 70, 72], "give": [2, 4, 15, 19, 20, 22, 23, 34, 50, 58, 63, 69, 70], "keyword": [2, 12, 13, 15, 19, 22, 34, 37, 38, 50, 58], "must": [2, 5, 12, 13, 15, 19, 20, 21, 23, 31, 34, 37, 38, 39, 50, 52, 54, 56, 63, 64, 69, 71, 72], "explicitli": [2, 19, 62, 69, 72], "type": [2, 3, 8, 11, 14, 17, 18, 19, 20, 21, 22, 25, 26, 27, 30, 32, 33, 34, 36, 37, 39, 40, 41, 63, 64, 66, 69, 70, 72, 73, 74], "fi": 2, "8": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 31, 33, 38, 39, 50, 52, 54, 56, 61, 63, 66, 69, 70, 71, 72], "9": [2, 3, 4, 6, 7, 8, 11, 12, 15, 19, 21, 23, 25, 26, 31, 32, 37, 39, 62, 63, 66, 68, 69, 70, 72, 76, 77], "mul": [2, 76], "xy": [2, 3, 5, 63, 72], "notic": [2, 20, 69], "prepend": 2, "necessari": [2, 15, 64, 69, 72], "longer": [2, 34, 66], "abeliangroup_class": [2, 9], "generator_ord": [2, 4, 9, 11], "uniquerepresent": [2, 4, 6, 12, 16, 19, 20, 22, 25, 29, 35, 37, 42, 58, 59, 77], "chosen": [2, 66, 68], "instanti": 2, "z2xz3": [2, 4], "z6": [2, 4, 9], "is_isomorph": [2, 4, 19, 20, 21, 31, 67, 68, 69, 71, 72], "c8": [2, 7, 8, 20, 69, 72], "c9": [2, 8], "24": [2, 15, 23, 31, 32, 39, 61, 63, 69, 70, 72], "120": [2, 23, 66, 69, 72], "c12": [2, 20], "c24": 2, "c120": 2, "enumer": [2, 11, 19, 20, 32, 69, 72], "abeliangroupel": [2, 3, 9], "abeliangroup_subgroup": 2, "cardin": [2, 12, 15, 18, 19, 20, 23, 31, 33, 35, 39, 42, 44, 45, 61, 69, 72], "base_r": [2, 6, 15, 19, 37, 38, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 69, 72, 77], "suitabl": [2, 15, 23, 33, 64], "cyclotom": [2, 6, 7, 9, 19, 31, 37, 39, 47, 48, 58, 69], "field": [2, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 41, 45, 47, 48, 50, 52, 54, 55, 56, 58, 64, 69, 71, 72, 75, 76, 77], "pick": [2, 15, 69, 74], "automat": [2, 20, 23], "2z": [2, 7], "degre": [2, 6, 7, 9, 10, 12, 13, 17, 19, 20, 21, 23, 26, 31, 32, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 69, 70, 71, 72, 75, 76, 77], "qq": [2, 11, 12, 13, 14, 19, 22, 25, 26, 31, 34, 37, 38, 39, 41, 44, 45, 47, 49, 50, 52, 53, 54, 56, 58, 61, 71, 72], "ration": [2, 11, 12, 13, 16, 18, 22, 25, 26, 31, 33, 34, 37, 39, 41, 45, 54, 56, 58, 72, 75], "elementari": [2, 4, 12, 69, 72], "here": [2, 9, 12, 15, 19, 23, 27, 32, 39, 43, 45, 63, 69, 72, 75, 76, 77], "anoth": [2, 15, 20, 31, 63, 69], "algorithm": [2, 3, 11, 15, 16, 18, 20, 23, 39, 41, 48, 63, 64, 65, 66, 68, 69, 70], "d_1": [2, 72], "d_2": [2, 72], "d_3": 2, "ldot": [2, 11, 12, 13, 16, 20, 22, 34, 39, 62, 63, 69, 72, 74, 76, 77], "compos": [2, 10], "divid": [2, 11, 15, 39], "wai": [2, 10, 12, 13, 15, 17, 19, 20, 27, 63, 64, 69, 70, 72], "describ": [2, 15, 17, 20, 23, 34, 48, 50, 52, 54, 56, 57, 60, 62, 69, 72, 75], "below": [2, 7, 15, 19, 23, 26, 39, 63, 69, 72], "just": [2, 9, 10, 12, 13, 14, 19, 20, 22, 31, 33, 41, 47, 69, 70, 72, 74], "Then": [2, 22, 26, 39, 69], "biggest": 2, "d_i": [2, 72], "maximum": [2, 68], "a_j": 2, "largest": [2, 15, 69, 72], "p": [2, 10, 11, 15, 16, 17, 19, 20, 21, 23, 31, 32, 34, 39, 58, 62, 63, 64, 66, 69, 70, 72, 74, 75], "v": [2, 3, 7, 11, 12, 13, 15, 16, 22, 23, 25, 26, 31, 34, 37, 39, 44, 47, 50, 53, 69, 70, 72, 75, 76, 77], "max": 2, "_p": 2, "text": [2, 15, 16, 22, 25, 39, 52, 54, 55, 56, 75], "out": [2, 16, 20, 33, 62, 64, 72], "those": [2, 10, 11, 20, 63, 75], "get": [2, 15, 39, 63, 69, 70, 74], "smaller": [2, 19, 39, 64, 69], "repeat": [2, 10, 33, 39], "abov": [2, 20, 23, 39, 69, 72, 75], "procedur": [2, 39], "d_": [2, 72], "thank": 2, "robert": [2, 15, 63, 70], "miller": [2, 39, 63], "commun": 2, "c6": [2, 9, 19, 20, 23, 48, 69, 72], "60": [2, 4, 13, 20, 23, 66, 72], "42": [2, 8, 11, 58, 63, 69, 70, 72], "a0": [2, 9, 15], "a2": [2, 6, 9, 15, 32], "look": [2, 4, 23], "histor": [2, 32], "reason": [2, 7, 32, 40, 63], "mean": [2, 20, 34, 63, 70, 72], "is_commut": [2, 6, 24, 37, 69, 72], "sinc": [2, 6, 10, 15, 17, 19, 20, 33, 39, 40, 62, 69, 70, 72, 75], "is_abelian": [2, 6, 24, 31, 69, 72], "permutation_group": [2, 3, 10, 61], "whether": [2, 7, 8, 10, 14, 15, 17, 22, 23, 24, 31, 33, 37, 38, 40, 43, 47, 48, 50, 51, 58, 62, 66, 68, 69, 70], "boolean": [2, 7, 8, 10, 15, 19, 20, 22, 23, 24, 31, 33, 37, 38, 39, 40, 47, 48, 50, 51, 58, 63, 69, 70], "g1": [2, 4, 14, 15, 20, 22, 32, 39, 61, 66, 69, 70], "is_subgroup": [2, 33, 69], "test": [2, 7, 8, 15, 19, 20, 22, 23, 24, 31, 33, 40, 43, 47, 65, 66, 68, 69, 70, 72], "is_trivi": [2, 4, 8], "precis": [2, 6, 15, 19, 25, 37, 38, 39, 45, 58], "one": [2, 9, 10, 14, 15, 16, 18, 19, 20, 23, 25, 26, 28, 32, 33, 34, 37, 39, 40, 45, 47, 50, 51, 52, 54, 58, 62, 63, 64, 66, 69, 70, 72, 74, 75, 76], "ab": [2, 6, 7, 72], "10000": 2, "number_of_subgroup": 2, "possibli": [2, 21, 39], "specif": [2, 15, 58, 64, 72], "find": [2, 11, 16, 21, 23, 38, 39, 69], "count": [2, 15, 16, 22, 69, 70, 72], "contain": [2, 9, 15, 16, 18, 20, 21, 22, 31, 33, 37, 41, 47, 58, 61, 62, 69, 70, 72, 74, 75], "torsion": [2, 11], "itself": [2, 7, 12, 13, 15, 17, 50, 64, 69], "henc": [2, 10, 11, 52, 69, 70], "assum": [2, 15, 23, 47, 62, 66, 69], "direct": [2, 10, 15, 20, 26, 62, 66, 69, 72], "sylow": [2, 69], "reduc": [2, 11, 15, 19, 20, 21, 69], "problem": [2, 3, 7, 11, 15, 20, 41, 63, 70, 75], "further": [2, 22, 50, 58, 69], "lambda": [2, 17, 20, 23, 25, 26, 37, 39, 66, 69, 72, 74], "q_subgroups_of_abelian_group": 2, "sum": [2, 10, 15, 17, 23, 70, 74, 75], "mu": [2, 25, 26], "81": [2, 23], "19": [2, 3, 11, 15, 19, 32, 63, 66, 69, 70, 72], "15": [2, 6, 10, 11, 15, 19, 20, 23, 32, 37, 38, 39, 45, 47, 54, 63, 66, 69, 70, 72, 76, 77], "25": [2, 12, 19, 23, 32, 34, 39, 44, 63, 66, 69, 70, 72], "5760": 2, "45000": 2, "14": [2, 6, 11, 15, 19, 23, 32, 39, 63, 66, 68, 69, 70, 72], "permut": [2, 3, 10, 15, 16, 17, 18, 19, 20, 21, 27, 29, 32, 36, 39, 52, 54, 56, 63, 64, 65, 66, 67, 68, 74, 76, 77], "q_1": 2, "q_n": 2, "respect": [2, 8, 15, 16, 19, 20, 22, 34, 39, 52, 54, 56, 69, 72], "random_el": [2, 6, 11, 12, 13, 14, 16, 23, 31, 52, 69, 70], "gensh": 2, "big": [2, 20, 23, 69, 72], "30": [2, 4, 11, 15, 32, 39, 63, 65, 66, 68, 69, 70, 72], "64": [2, 6, 69, 72], "729": [2, 6], "c729": 2, "subgroup_reduc": 2, "elt": [2, 16, 28, 29, 37], "verbos": [2, 39, 63, 66], "set": [2, 5, 9, 10, 11, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28, 31, 32, 33, 37, 38, 39, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74], "forget": [2, 12, 13, 71], "origin": [2, 7, 12, 13], "routin": [2, 10], "error": [2, 15, 23, 31, 32, 50, 64, 69, 72], "rais": [2, 15, 23, 31, 32, 41, 50, 69], "linearli": 2, "perform": [2, 11, 62, 68, 69], "don": [2, 3, 23, 41, 65, 71], "know": [2, 20, 23, 69], "back": [2, 18, 23, 32, 40, 63, 69], "actual": [2, 4, 33, 41], "easi": [2, 27], "otherwis": [2, 11, 15, 16, 19, 20, 23, 26, 31, 39, 50, 61, 63, 64, 67, 69, 72], "write": [2, 41, 72], "recurs": [2, 11, 15], "everi": [2, 15, 21, 25, 53, 69, 72], "project": [2, 15, 16, 19, 32, 39, 63, 69, 71, 72], "onto": [2, 16, 69], "intersect": [2, 15, 23, 31, 66, 69], "well": [2, 15, 22, 24, 32, 34, 37, 50, 66, 69, 72], "send": [2, 22, 25, 26, 63, 69, 72], "mod": [2, 19, 20, 23, 33, 69], "lift": [2, 4, 12, 13, 15, 29, 32], "aris": [2, 16], "tripl": [2, 15, 19, 39], "magnitud": 2, "slower": 2, "magma": [2, 72], "much": [2, 38, 63], "faster": [2, 15, 20, 23, 62, 63, 66, 69], "len": [2, 6, 15, 21, 28, 31, 37, 44, 45, 66, 69, 70, 72, 74, 77], "torsion_subgroup": [2, 11], "when": [2, 11, 15, 16, 18, 19, 22, 23, 32, 37, 39, 58, 59, 62, 69, 70, 72], "consist": [2, 11, 15, 19, 21, 22, 32, 38, 39, 44, 45, 52, 54, 56, 63, 64, 69, 72, 74], "f5": [2, 4, 33], "462": [2, 11], "subclass": [2, 33, 69], "inherit": [2, 19, 26, 33, 69], "There": [2, 6, 10, 18, 69, 70], "coerc": [2, 4, 10, 40], "ambient_group": [2, 19, 69], "equal": [2, 10, 11, 14, 15, 16, 21, 47, 66, 68, 69, 72, 77], "sub": [2, 15], "see": [2, 3, 4, 9, 11, 15, 16, 17, 19, 20, 22, 23, 26, 27, 31, 32, 33, 34, 37, 39, 43, 45, 47, 48, 49, 50, 52, 54, 56, 58, 61, 63, 66, 68, 69, 70, 72, 76, 77], "abc": [2, 3, 5, 6, 8, 28], "nth": 2, "is_abeliangroup": 2, "express": [2, 3, 11, 15, 70], "boil": 2, "down": [2, 63, 69], "follow": [2, 15, 16, 21, 23, 25, 27, 35, 37, 39, 42, 44, 53, 58, 63, 64, 66, 69, 72], "analog": [2, 16], "chines": 2, "remaind": 2, "theorem": [2, 16, 72], "n_1": [2, 21, 22, 23, 69], "n_2": [2, 21, 22, 23, 69], "n_k": [2, 21, 22], "inde": [2, 10, 69], "n_i": [2, 10, 21], "g_i": [2, 11, 69], "i1": 2, "ik": 2, "n_j": 2, "d_k": 2, "c_1g_1": 2, "g_": [2, 19, 39], "solv": [2, 3, 7, 11, 23, 41, 63, 69, 70], "equat": [2, 23], "ca": [2, 72], "suffic": 2, "restrict": [2, 17, 69], "least": [2, 15, 19, 38, 64], "common": [2, 9, 10, 15, 38, 69, 72], "doe": [2, 3, 5, 7, 15, 17, 19, 20, 22, 30, 33, 34, 58, 59, 66, 69, 70, 71, 72], "perhap": [2, 69], "rather": [2, 3, 7, 18, 24, 70], "both": [2, 8, 15, 20, 32, 33, 38, 69, 70, 75], "speed": [2, 63, 70], "model": [2, 75], "similar": [2, 19, 63, 69, 72], "valid": [2, 14, 15, 16, 20, 63, 66, 69], "push": [2, 3, 70], "optim": [2, 3, 41, 63, 66, 70], "determinist": [2, 3], "essenti": [2, 12, 13, 64, 65, 70], "w": [2, 7, 15, 18, 22, 23, 25, 26, 33, 34, 37, 39, 40, 44, 54, 56, 66, 69, 70], "prod": [2, 3, 15, 41, 54, 72], "b1": [2, 15], "b2": [2, 15], "b3": 2, "b4": 2, "b5": [2, 15, 19], "might": [2, 9, 15, 20, 39, 62, 69], "unpleas": 2, "effect": [2, 19, 23, 63], "cannot": [2, 17, 18, 20, 23, 39, 40, 41], "mai": [2, 15, 20, 21, 27, 39, 49, 60, 63, 65, 69, 72], "slow": [2, 18, 63, 69, 72], "larg": [2, 4, 20, 24, 32, 69, 70, 71, 72], "differ": [2, 10, 15, 19, 20, 23, 31, 32, 34, 37, 39, 41, 44, 48, 52, 53, 62, 66, 69, 70, 75], "wrap": [2, 5, 11, 18, 20, 22, 23, 25, 32, 33, 39, 48, 69, 71, 72, 74], "epimorphismfromfreegroup": [2, 7, 41, 63, 70], "preimagesrepres": [2, 7, 41, 63, 70], "free_abelian_monoid_el": 3, "py": [3, 7, 66, 69, 71, 72], "pow": 3, "recal": [3, 12, 13], "20": [3, 7, 8, 15, 19, 20, 23, 32, 37, 39, 63, 66, 69, 70, 72], "13": [3, 11, 15, 19, 21, 23, 32, 42, 63, 66, 69, 70, 72], "y": [3, 5, 6, 7, 11, 15, 16, 17, 20, 21, 22, 23, 25, 26, 34, 35, 39, 42, 44, 48, 63, 66, 69, 70, 72, 75], "23": [3, 11, 23, 39, 63, 69, 70, 72, 74], "27": [3, 13, 23, 32, 42, 63, 69, 70, 72, 76], "72": [3, 8], "abelian_group_el": [3, 7, 8], "abeliangroupelementbas": [3, 7, 8], "iter": [3, 8, 9, 11, 15, 17, 18, 19, 22, 23, 31, 33, 37, 38, 41, 47, 48, 64, 69, 72, 74], "as_permut": 3, "associ": [3, 9, 15, 37, 40, 41, 68, 69, 70, 72, 74], "gp": [3, 72], "ap": [3, 23], "todo": [3, 40], "rewrit": [3, 20, 23, 38, 45, 47, 52, 56, 63, 69], "stuff": 3, "matrix_grp": 3, "directori": 3, "reserv": [3, 69], "letter": [3, 15, 20, 22, 69, 72], "is_abeliangroupel": 3, "provid": [4, 22, 23, 33, 44, 58, 63, 69], "python": [4, 5, 20, 22, 23, 33, 52, 63, 71], "packag": [4, 15, 19, 20, 63, 69], "polycycl": [4, 31, 69, 72], "01": [4, 23, 38, 40, 69, 75], "abeliangroupelement_gap": 4, "via": [4, 19, 20, 21, 29, 33, 38, 39, 45, 52, 54, 56, 58, 62, 63, 69, 72, 76], "handl": [4, 18, 64], "quit": [4, 12, 13], "too": [4, 19, 20, 44, 69, 72], "123": [4, 11], "789": 4, "crash": 4, "veri": [4, 6, 23, 69, 71, 75], "make": [4, 15, 19, 20, 23, 24, 26, 31, 39, 47, 63, 64, 66, 68, 69, 70], "work": [4, 5, 10, 11, 15, 19, 20, 22, 23, 24, 32, 33, 38, 48, 64, 69], "could": [4, 9, 20, 70, 72], "done": [4, 5, 19, 69, 72, 76, 77], "abeliangroupelement_polycycl": 4, "effici": [4, 23, 64, 69], "12345": [4, 23], "123456789": [4, 23], "nonneg": [4, 8, 21, 69], "abeliangroupquotient_gap": 4, "quotient": [4, 10, 11, 15, 20, 21, 22, 24, 44, 58, 63, 69], "q1": [4, 34], "q2": 4, "natural_homomorph": 4, "morphism": [4, 5, 9, 11, 20, 25, 29, 32, 49, 69, 71], "abeliangroupsubgroup_gap": 4, "terminologi": 4, "come": [4, 9, 15, 52, 69, 72], "framework": [4, 11, 69, 70], "notion": [4, 69], "subquoti": [4, 11], "retract": [4, 29], "li": 4, "all_subgroup": 4, "automorphism_group": [4, 68, 69], "g3": [4, 20, 72], "g4": 4, "homspac": 5, "first": [5, 10, 15, 19, 20, 21, 22, 25, 31, 34, 37, 44, 52, 58, 59, 63, 65, 66, 69, 70, 71, 72], "hom": [5, 20, 25, 26, 29, 32, 76, 77], "abelian_group_morph": 5, "abeliangroupmap": 5, "abeliangroupmorph": 5, "genss": 5, "imgss": 5, "code": [5, 16, 62, 63, 66, 68, 69, 71, 72], "grouphomomorphismbyimag": [5, 71], "fail": [5, 23, 71], "extend": [5, 34, 39, 64, 71, 72], "subg": 5, "yet": [5, 20, 69, 72], "object": [5, 11, 15, 18, 20, 22, 23, 24, 27, 31, 33, 38, 41, 45, 58, 61, 62, 63, 64, 66, 68, 69, 72, 74], "is_abeliangroupmorph": 5, "idea": [6, 64], "cc": [6, 7, 18, 38, 58, 66, 69, 72], "g_j": 6, "sai": [6, 44, 72], "m_j": 6, "x_j": [6, 15, 22], "exp": [6, 34], "pi": [6, 35, 37, 58, 66, 75, 76, 77], "x_i": [6, 22], "These": [6, 10, 19, 20, 21, 37, 56, 58, 62, 69, 72, 75], "fd": [6, 7, 8], "2520": 6, "576": 6, "tol": [6, 7], "1e": [6, 7], "00000000000000": [6, 23, 58], "modif": [6, 7, 40], "suggest": [6, 7, 69, 72], "dual_abelian_group": [6, 7], "dualabeliangroup_class": 6, "3z": [6, 7], "5z": [6, 7], "7z": [6, 7], "8z": [6, 7], "9z": 6, "15z": 6, "53": [6, 37, 38, 45, 58, 66, 72], "bit": [6, 37, 38, 45, 58, 69, 70], "dualabeliangroupel": [6, 7], "scalar": [6, 17, 40, 42], "dualiz": 6, "a1": [6, 15, 32], "x0": [6, 15, 20, 22, 33, 39], "x1": [6, 15, 20, 21, 22, 33, 39, 70], "1000": [6, 16, 20, 23], "inv": [6, 10], "gd": [6, 7, 66], "100": [6, 23, 45, 59], "54": [6, 72], "43": [6, 63, 69, 70, 72], "found": [6, 23, 50, 64, 69], "while": [6, 16, 38, 69, 72], "is_dualabeliangroup": 6, "x2": [6, 15, 20, 22, 33, 39, 70], "840": 7, "192": 7, "evalu": [7, 15, 31, 69], "zeta840": 7, "140": 7, "_": [7, 15, 16, 17, 19, 20, 28, 37, 41, 52, 54, 55, 56, 66, 69, 74], "499999999999995": 7, "866025403784447": 7, "65": [7, 8, 72], "07": [7, 20, 38, 43, 47, 69], "dual_abelian_group_el": [7, 8], "hackish": 7, "includ": [7, 20, 23, 48, 58, 63, 69], "complet": [7, 12, 13, 21, 27, 33, 69, 72, 75, 76, 77], "dualabeliangroup": 7, "why": 7, "simpli": [7, 22, 69, 72], "invok": 7, "u": [7, 15, 16, 19, 22, 23, 39, 41, 58, 63, 69, 70, 75], "245": 7, "is_dualabeliangroupel": 7, "alwai": [8, 12, 66, 69, 72], "onc": [8, 69, 72], "element_bas": 8, "multiplicativegroupel": [8, 14, 16, 25, 33, 34, 40, 58, 70, 76], "inclus": [8, 15, 33], "exclus": [8, 33], "copi": [8, 32, 69, 72, 76], "coordin": [8, 15, 34], "multiplicative_ord": [8, 11, 23, 33, 41, 70], "often": [9, 66, 75], "would": 9, "nice": [9, 69], "encapsul": [9, 58], "howev": [9, 17, 19, 20, 34, 69], "abstract": [9, 34, 58], "abeliangroupwithvalu": 9, "allow": [9, 19, 20, 63, 69, 71, 72], "decor": [9, 69], "unit": [9, 23, 58, 68, 72, 76, 77], "number_field": [9, 40, 47, 52, 56], "unit_group": 9, "think": [9, 11], "keep": [9, 20, 32, 33, 76], "track": [9, 33], "realli": [9, 18, 23, 72], "requir": [9, 10, 21, 22, 23, 25, 52, 63, 69], "pass": [9, 11, 15, 20, 22, 33, 50, 63, 69], "assign": [9, 20], "coercion": [9, 11, 33, 70], "embed": [9, 11, 19, 20, 47, 69], "values_group": 9, "cf3": [9, 47, 48, 52, 56], "zeta": [9, 75], "cyclotomicfield": [9, 23, 39, 47, 48, 52, 56, 58], "z3": 9, "want": [9, 20, 22, 23, 30, 62], "whole": [9, 23, 69, 72], "like": [9, 16, 23, 50, 58, 59, 62, 69, 72, 76, 77], "values_embed": 9, "abeliangroupwithvaluesel": 9, "latter": [9, 19, 23, 26, 39, 64, 69], "testsuit": [9, 39, 45, 69, 72], "run": [9, 20, 23, 39, 45, 66, 68, 69, 72], "gens_valu": 9, "abeliangroupwithvaluesembed": 9, "codomain": [9, 32, 71], "abeliangroupwithvalues_class": 9, "symbol": [9, 15, 21, 34, 63, 68, 69, 72], "z4": 9, "polynomi": [9, 15, 19, 22, 37, 39, 40, 52, 69, 70, 72], "larger": [9, 14, 47, 63, 69], "fg_pid": 10, "major": [10, 72], "additive_abelian": [10, 11], "additive_abelian_group": 10, "remember_gener": 10, "greater": [10, 21, 65, 72], "bigoplus_i": 10, "switch": 10, "realiz": [10, 19, 72], "two": [10, 15, 17, 18, 19, 20, 22, 23, 25, 31, 32, 34, 40, 48, 52, 53, 64, 66, 67, 69, 72, 76, 77], "obviou": 10, "ones": 10, "each": [10, 11, 15, 16, 19, 20, 22, 31, 38, 39, 47, 48, 64, 66, 68, 69, 70, 72, 74], "being": [10, 15, 19, 21, 25, 33, 37, 39, 50, 52, 54, 56, 69, 70, 72, 74], "minim": [10, 11, 21, 23, 33, 39, 69, 72], "vari": [10, 69], "raw": 10, "pair": [10, 12, 13, 15, 20, 22, 23, 28, 50, 63, 69, 70, 72, 75], "natur": [10, 15, 16, 20, 47, 53, 69, 72, 77], "repeatedli": 10, "smith_form_gen": 10, "linear_combination_of_smith_form_gen": 10, "again": [10, 20, 63, 69], "befor": [10, 20, 21, 64, 72], "additiveabeliangroupel": [10, 11], "fgp_element": 10, "additiveabeliangroup_class": 10, "fgp_module_class": 10, "machineri": 10, "submodul": [10, 44], "smallest": [10, 39, 41, 69, 70, 72], "nx": 10, "55": [10, 63, 72], "33": [10, 32, 39, 63, 69, 70, 72], "is_multipl": [10, 24], "short_nam": 10, "additiveabeliangroup_fixed_gen": [10, 11], "rel": [10, 20, 39, 45, 69], "variant": 10, "smithform_gen": 10, "attach": [10, 15, 19], "cover_and_relations_from_invari": 10, "util": 10, "super": [10, 15], "cr": [10, 19], "princip": [10, 12, 13], "ideal": [10, 12, 13], "echelon": [10, 44], "basi": [10, 11, 15, 34, 37, 44, 68, 69, 72, 75], "intend": [11, 18, 20, 23, 48, 69], "templat": 11, "One": [11, 15, 20, 23, 40, 58, 59, 66, 72], "additiveabeliangroupwrapp": 11, "long": [11, 15, 19, 20, 23, 31, 45, 63, 66, 69, 72], "_add_": 11, "toi": 11, "mordel": 11, "weil": 11, "ellipt": [11, 23], "curv": [11, 23, 72], "ellipticcurv": [11, 23], "30a2": 11, "pt": 11, "point": [11, 15, 23, 34, 58, 62, 63, 64, 66, 69, 70, 72], "26": [11, 23, 39, 63, 64, 69, 70, 72], "3000000000000001": 11, "load": [11, 17, 22, 69], "dump": [11, 17], "known": [11, 19, 20, 22, 32, 37, 72, 75, 76, 77], "http": [11, 39, 43, 49, 63, 69], "github": [11, 15, 20, 23, 31, 32, 33, 38, 43, 47, 48, 49, 50, 52, 54, 56, 69, 70, 71, 76], "com": [11, 43, 49, 69], "sagemath": [11, 43, 49, 58, 59, 69], "issu": [11, 15, 20, 23, 31, 32, 33, 38, 43, 47, 48, 49, 50, 52, 54, 56, 69, 70, 71, 76], "11599": 11, "comment": 11, "about": [11, 41, 47, 63, 64, 66, 69], "probabl": 11, "won": 11, "current": [11, 15, 20, 22, 37, 66, 69, 70, 72], "fiddli": 11, "adjust": 11, "abl": [11, 64], "extra": [11, 40, 41, 47], "init": [11, 76], "2010": [11, 17, 38, 41, 47], "lorenz": 11, "panni": 11, "2017": [11, 23, 42], "discrete_log": [11, 23], "2023": [11, 16, 29], "from_gener": 11, "additive_abelian_wrapp": 11, "univers": [11, 19, 37, 47, 48, 63, 65, 69, 72], "zmod": [11, 31], "modulo": [11, 23, 42, 54, 58, 72, 75], "g6": 11, "qqbar": [11, 39], "sqrt": [11, 15, 19, 23, 37, 39], "gf": [11, 12, 13, 14, 15, 18, 19, 23, 31, 33, 38, 39, 40, 41, 42, 43, 45, 47, 50, 51, 52, 53, 54, 55, 56, 68, 69, 72, 76, 77], "419": 11, "indirect": [11, 26, 59, 69], "doctest": [11, 26, 43, 49, 59, 66, 69], "420": 11, "z2": 11, "additiveabeliangroupwrapperel": 11, "discrete_exp": 11, "term": [11, 15, 34, 64, 69], "7573593128807148": 11, "invers": [11, 15, 16, 18, 20, 22, 23, 26, 33, 34, 40, 63, 64, 69, 70, 72, 76], "el": [11, 19, 25, 26], "attempt": [11, 15, 18, 20, 23, 69], "_discrete_log_pgroup": 11, "suth2008": 11, "127": 11, "539": 11, "1009": 11, "modulu": [11, 15], "940": 11, "900": 11, "228": 11, "974": 11, "185": 11, "1007": 11, "214": 11, "865": 11, "802": 11, "777": 11, "typeerror": [11, 19, 21, 34, 37, 39, 40, 52, 54, 56, 69], "Not": [11, 33], "notimplementederror": [11, 18, 24, 31, 39, 52, 54, 56, 72], "No": 11, "black": 11, "box": 11, "discret": [11, 23], "log": [11, 23, 34], "static": 11, "task": 11, "logarithm": [11, 23, 34], "45": [11, 13, 20, 63, 65, 66, 68, 69, 70, 72], "90": [11, 66], "wa": [11, 16, 33, 50, 62, 69, 75], "initialis": 11, "210": [11, 21, 23], "2310": 11, "487": 11, "311": 11, "205": 11, "574i1": 11, "103": [11, 23], "172": 11, "61": [11, 72], "18": [11, 19, 21, 32, 39, 63, 66, 69, 70, 72], "assert": [11, 16, 19], "19353": 11, "958713": 11, "2022": [11, 15, 23], "live": [11, 19, 20, 22, 56], "65a": 11, "scheme": [11, 64], "elliptic_curv": 11, "ell_tors": 11, "ellipticcurvetorsionsubgroup_with_categori": 11, "element_class": [11, 14, 32], "ell_point": 11, "ellipticcurvepoint_number_field": 11, "unwrappingmorph": 11, "basis_from_gener": 11, "g_1": [11, 20, 23, 26, 35, 69], "g_n": [11, 69], "combin": [11, 69], "alpha_1": 11, "alpha_n": 11, "alpha_i": [11, 37], "suth2007": 11, "remark": [11, 16, 75], "31337": 11, "37": [11, 23, 32, 63, 69, 70, 72], "946988065073788930380545280": 11, "ordr": 11, "313157428926517503432720": 11, "3024": 11, "weil_pair": 11, "affine_gp": [12, 13, 14], "affine_group": [12, 14], "affinegroup": [12, 13, 14], "aff": 12, "space": [12, 13, 14, 15, 16, 19, 23, 25, 26, 37, 38, 40, 41, 47, 50, 52, 53, 64, 69, 72, 75], "invert": [12, 13, 14, 22, 23, 38, 45, 47, 48, 54, 76], "a_v": [12, 13], "what": [12, 13, 23, 69], "gl": [12, 17, 20, 23, 26, 27, 31, 32, 33, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 51, 54, 69], "translat": [12, 13, 14, 34, 63], "fact": [12, 13, 19, 20, 21, 72, 75], "ltime": [12, 13, 26], "mapsto": [12, 13, 14, 34, 66, 72, 75], "dim": [12, 13, 72], "dimension": [12, 13, 15, 34, 72, 75], "pmatrix": [12, 13, 35, 42], "x_n": [12, 13, 22, 34, 39], "compon": [12, 15, 76], "hyperplan": 12, "seen": [12, 58], "someth": [12, 13, 14, 22, 50], "dimens": [12, 13, 15, 19, 25, 26, 39, 50, 52, 69], "var": [12, 13, 15, 19, 34, 45, 50, 52, 54, 56], "inform": [12, 13, 19, 39, 41, 50, 63, 69, 70], "special": [12, 13, 14, 17, 23, 26, 31, 38, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 71, 72], "affinespac": [12, 13], "finite_r": [12, 13, 14, 24, 38, 40, 45, 47, 50, 52, 54, 56], "shorthand": [12, 13, 22, 42], "wikipedia": [12, 13, 15, 16, 17, 20, 21, 35, 42, 69, 72, 75], "articl": [12, 13, 15, 16, 17, 20, 21, 23, 35, 42, 69, 72, 75], "affinegroupel": [12, 14], "172882428468750000000000000000": 12, "nrow": 12, "ncol": 12, "determin": [12, 15, 17, 20, 21, 22, 38, 39, 45, 50, 51, 52, 53, 54, 56, 58, 59, 63, 64, 66, 69, 72], "linear_spac": [12, 14], "ax": [12, 14, 15, 21, 72], "group_el": [12, 14, 40], "matrix_spac": [12, 47], "reflect": [12, 13, 16, 19, 27, 37, 64, 70, 72], "household": 12, "perpendicular": 12, "16": [12, 15, 19, 20, 23, 28, 31, 32, 39, 63, 66, 69, 70, 72], "some_el": [12, 15], "vector_spac": 12, "euclidean_group": 13, "euclideangroup": 13, "affin": [13, 27, 37, 47, 50, 52], "preserv": [13, 44, 52, 53, 54, 55, 56, 57], "metric": 13, "e3": [13, 20, 47, 48, 52, 56, 75], "77": 13, "40": [13, 15, 23, 32, 39, 63, 69, 70, 72], "48": [13, 31, 33, 45, 63, 66, 69, 70, 72], "correct": [14, 15, 63, 65], "accept": [14, 21, 25, 50, 52, 54, 56], "column": [14, 17, 21, 31, 37, 42, 47, 50, 51, 68, 69, 77], "reconstruct": 14, "affinegroup_with_categori": 14, "convers": [14, 19, 29, 37], "matrixgroup": [14, 18, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 47], "part": [14, 59, 64, 69, 74], "standard": [14, 15, 21, 23, 37, 41, 52, 62, 72, 75], "composit": [14, 39, 69, 72], "lot": [15, 63], "strand": [15, 19], "braidgroup": [15, 19], "oper": [15, 17, 19, 20, 22, 23, 24, 33, 38, 39, 40, 47, 50, 64, 69], "indic": [15, 22, 23, 26, 27, 28, 34, 63, 64, 66, 69], "s0": 15, "action": [15, 16, 25, 26, 37, 39, 44, 63, 66, 69, 72, 77], "mappingclassgroupact": 15, "explan": [15, 19, 20], "b0": 15, "freegroup": [15, 20, 22, 23, 24, 30, 32, 33, 48, 69], "miguel": [15, 20, 22], "angel": [15, 20, 22], "marco": [15, 20, 22], "buzunariz": [15, 20, 22], "s\u00f8ren": 15, "fugled": 15, "j\u00f8rgensen": 15, "lipshitz": 15, "thierri": 15, "monteil": 15, "add": [15, 16, 20, 31, 40, 47, 52, 54, 56, 63, 69], "__hash__": 15, "ensur": [15, 31, 64], "caylei": [15, 45, 69], "sebastian": [15, 19, 32, 38, 47, 50, 52, 54, 56, 69, 70], "oehm": [15, 19, 32, 38, 47, 50, 52, 54, 56, 69, 70], "juli": 15, "nov": 15, "burau_matrix": [15, 19], "25760": 15, "26657": 15, "moritz": 15, "firsch": 15, "sept": 15, "2021": 15, "color": [15, 63], "jone": 15, "links_gould_polynomi": 15, "finitetypeartingroupel": 15, "lkb_matrix": 15, "lawrenc": 15, "krammer": 15, "bigelow": 15, "e_": 15, "mid": [15, 20, 21, 69, 72, 75], "lexicograph": [15, 20, 72], "laurent": 15, "By": [15, 16, 18, 19, 22, 41, 62, 69], "separ": [15, 33], "comma": 15, "big2003": 15, "tl_matrix": 15, "drain_siz": 15, "variab": 15, "spars": [15, 66], "temperlei": 15, "lieb": 15, "certain": [15, 19, 66], "satisfi": [15, 20, 63, 64, 75], "rule": [15, 20], "tl_basis_with_drain": 15, "detail": [15, 20, 22, 23, 39, 43, 48, 49, 58, 63, 64, 69, 76], "convent": [15, 37, 52, 69, 70, 72, 75], "eigenvalu": [15, 39], "appropri": [15, 64], "result": [15, 16, 19, 20, 22, 23, 39, 62, 64, 68, 69, 70, 72], "burau": [15, 19], "tl": 15, "paramet": [15, 22, 23, 34, 52, 58, 69, 72], "expect": [15, 16, 69, 72], "guess": 15, "calcul": [15, 19, 23, 68], "few": [15, 20, 23, 48, 63, 69], "b_4": 15, "laurentpolynomialr": [15, 20, 22], "b_8": 15, "big1999": 15, "psi1": 15, "psi2": 15, "w1": 15, "w2": 15, "jon2005": 15, "alexander_polynomi": 15, "alexand": [15, 20, 69, 72], "closur": 15, "unnorm": 15, "plu": [15, 23], "minu": [15, 70], "constant": [15, 21, 58, 59, 63, 64], "coeffici": [15, 20, 22, 34, 37, 39, 69, 72, 75], "multipli": [15, 20, 40, 70], "trefoil": 15, "next": [15, 23, 37, 41, 45, 64, 69, 70, 72, 74], "figur": [15, 33], "knot": 15, "our": 15, "kinoshita": 15, "terasaka": 15, "annular_khovanov_complex": 15, "qagrad": 15, "annular": 15, "khovanov": 15, "bg2013": 15, "quantum": 15, "grade": 15, "chain": [15, 63], "dictionari": [15, 20, 62, 63, 66, 70], "kei": [15, 16, 20, 27, 58, 66, 75], "nonzero": [15, 17, 21, 58, 64], "homologi": [15, 69], "annular_khovanov_homologi": 15, "homogi": 15, "around": [15, 41], "unreduc": 15, "e_1": 15, "e_i": [15, 22, 39, 75], "squier": [15, 19], "squ1984": 15, "root": [15, 19, 25, 26, 33, 35, 37, 39, 58], "yield": [15, 64, 69, 72], "format": [15, 20, 23, 48, 63, 66, 68, 69], "madj": 15, "adjoin": [15, 19, 69], "hermitian": [15, 19, 56, 57], "inject_vari": [15, 20, 22], "burau_represent": 15, "central": [15, 17, 19, 69, 72], "colored_jones_polynomi": 15, "try_invers": 15, "trace": 15, "hl2018": 15, "notat": [15, 19, 20, 21, 23, 25, 39, 48, 52, 62, 63, 69, 70], "simplifi": [15, 20, 69], "bookkeep": 15, "figure_eight": 15, "components_in_closur": 15, "three": [15, 19, 64, 66, 69, 72], "disjoint": [15, 16, 69, 70, 75], "unknot": 15, "k11n42": 15, "conjugating_braid": 15, "conjug": [15, 33, 34, 56, 69], "o": [15, 23, 33, 39, 44, 66, 69, 72], "d1": [15, 66], "l": [15, 16, 18, 25, 26, 33, 34, 37, 39, 44, 63, 65, 69, 70, 71, 72], "conjugatingbraid": 15, "_element_from_libbraid": 15, "tietz": [15, 20, 22, 33], "d2": [15, 66], "deformed_burau_matrix": 15, "deform": 15, "_algebra": 15, "db": 15, "ap_0": 15, "ap_5": 15, "bp_0": 15, "ap_1": 15, "cm_3": 15, "bp_4": 15, "bm_2": 15, "bm_3": 15, "cp_5": 15, "am_3": 15, "nondeform": 15, "def": [15, 23, 25, 26, 33, 69, 72], "subs_gen": 15, "gen_str": 15, "str": [15, 63], "els": [15, 19, 32, 72], "elif": 15, "db_base": 15, "db_simp": 15, "change_r": 15, "gcd": [15, 72], "greatest": 15, "is_conjug": [15, 33], "is_period": 15, "period": 15, "is_pseudoanosov": 15, "pseudo": [15, 39, 69], "anosov": 15, "is_reduc": 15, "jones_polynomi": 15, "skein_norm": 15, "replac": [15, 20, 22], "agre": [15, 26], "lic1997": 15, "slightli": 15, "had": 15, "kauffman": 15, "bracket": 15, "depend": [15, 19, 20, 39, 66, 69, 70, 76], "unspecifi": 15, "fraction": [15, 39], "unlink": 15, "hopf": 15, "link": 15, "mirror": 15, "k11n34": 15, "conwai": 15, "b11n42": 15, "b11n34": 15, "lcm": [15, 23, 69], "left_normal_form": 15, "libbraid": 15, "delta": [15, 75], "rest": [15, 65], "l1": [15, 69], "s3": [15, 17, 19, 20, 23, 29, 39, 48, 61, 69, 72], "s4": [15, 17, 19, 21, 61, 69, 72], "links_gould_matrix": 15, "superalgebra": 15, "mathfrak": [15, 34], "sl": [15, 19, 24, 27, 31, 38, 45, 50, 69], "_q": 15, "mw2012": 15, "per": 15, "variat": 15, "choic": [15, 20, 52, 63, 64, 72], "hopflg": 15, "univari": [15, 39, 52, 72], "yrbar": 15, "multivari": [15, 22, 70], "s0r": 15, "s1r": 15, "yr": 15, "varnam": 15, "use_symbol": 15, "gould": 15, "t0": [15, 19, 22], "t1": [15, 19, 20, 22], "markov_trac": 15, "markov": 15, "rescal": 15, "mt": 15, "mirror_imag": 15, "under": [15, 16, 32, 39, 66, 68, 69, 70, 75], "involut": 15, "braidgroup_class": [15, 19], "mirror_involut": 15, "amphicheir": 15, "k12a_427": 15, "bm": 15, "induc": [15, 17, 22, 69], "coxeter_group": [15, 37], "symmetricgroup": [15, 16, 17, 18, 21, 29, 31, 39, 62, 63, 66, 69, 70, 72, 74], "plot": [15, 45, 63], "rainbow": 15, "orient": 15, "bottom": [15, 63, 69], "top": [15, 63, 69], "aspect_ratio": 15, "kwd": [15, 22, 24, 28, 30, 32, 34, 38, 50, 58, 69], "avail": [15, 19, 20, 21, 27, 38, 45, 52, 54, 56, 63, 69, 72], "possibl": [15, 19, 20, 22, 37, 39, 50, 52, 58, 63, 69, 74], "bezier_path": 15, "line": [15, 62, 70, 71], "individu": [15, 69], "float": 15, "goe": 15, "aspect": [15, 72], "ratio": 15, "graphic": [15, 45, 63], "primit": [15, 19, 35, 39, 45, 63, 69, 72], "red": [15, 63], "blue": [15, 63], "plot3d": [15, 45, 63], "3d": [15, 63], "bezier3d": 15, "graphics3d": [15, 45, 63], "pure_conjugating_braid": 15, "pure": [15, 16, 59], "revers": [15, 69, 70, 72], "anti": [15, 17], "k8_17": 15, "br": [15, 63], "right_normal_form": 15, "rigid": [15, 75], "sliding_circuit": 15, "slide": 15, "circuit": 15, "super_summit_set": 15, "summit": 15, "thurston_typ": 15, "tropical_coordin": 15, "tropic": 15, "b_n": 15, "2n": [15, 21, 35, 72], "tc": 15, "semir": 15, "dw2007": 15, "deh2011": 15, "ultra_summit_set": 15, "orbit": [15, 39, 66, 69, 70], "ultra": 15, "prefix": [15, 22, 25, 26, 28], "solvabl": [15, 31, 69, 72, 75], "local": 15, "16059": 15, "ball": [15, 58], "radiu": 15, "ret": 15, "alphabet": 15, "gb": 15, "cayley_graph": [15, 45], "digraph": [15, 45, 66], "31": [15, 23, 32, 63, 69, 70, 72], "vertic": [15, 45, 63, 66, 75], "nontrivi": [15, 39, 69, 72], "tree": [15, 64], "finitetypeartingroup": 15, "summand": [15, 59], "mark": [15, 25, 26], "highest": [15, 17], "trival": 15, "wenzl": 15, "projector": 15, "wan2010": 15, "practic": [15, 39, 65, 66, 68, 72], "consecut": 15, "moreov": 15, "b_5": 15, "hopefulli": [15, 20], "formula": [15, 69, 72], "dimension_of_tl_spac": 15, "tl_represent": 15, "illustr": [15, 70, 72], "purpos": [15, 58, 59, 63, 64, 69], "as_permutation_group": [15, 19, 20, 21, 38, 39, 47, 69], "drain": 15, "28": [15, 23, 32, 37, 39, 63, 69, 70, 72], "endomorph": [15, 25, 32, 34, 76, 77], "entir": 15, "combinat": [15, 40, 47, 52, 54, 56], "diagram_algebra": 15, "da": 15, "total_dim": 15, "temperley_lieb_diagram": 15, "mapping_class_act": 15, "punctur": 15, "disk": 15, "fundament": [15, 23, 37, 72], "yourself": [15, 33], "simpler": [15, 20], "mirr": 15, "That": [15, 69], "sigma_i": 15, "x3": [15, 20, 22], "rightquantumword": 15, "definit": [15, 19, 33, 34, 37, 47, 52, 56, 69, 75, 77], "monomi": [15, 39, 69, 76, 77], "fig_8": 15, "bp_1": 15, "cp_1": 15, "bp_3": 15, "cp_3": 15, "ap_3": 15, "bm_0": 15, "cm_0": 15, "am_0": 15, "cm_2": 15, "am_2": 15, "ep": [15, 23], "mathcal": 15, "_n": 15, "cp_0": 15, "bp_2": 15, "cp_2": 15, "ap_2": 15, "bm_1": 15, "cm_1": 15, "am_1": 15, "rqw": 15, "parallel": 15, "reduced_word": 15, "qw": 15, "dict": [15, 20, 22, 23, 63, 66, 70], "outlin": 15, "int": [15, 63, 64, 70], "item": [15, 20, 23, 63, 69], "travi": [16, 28, 29, 35, 37, 40, 74, 75], "scrimshaw": [16, 28, 29, 35, 37, 40, 74, 75], "cactus_group": 16, "cactusgroup": 16, "fruit": [16, 21, 29], "j_n": [16, 21], "pq": 16, "kl": 16, "interv": [16, 58], "subseteq": 16, "j_3": 16, "j3": [16, 21, 29, 72], "misc": [16, 27, 29, 75], "s12": [16, 21, 29], "s13": [16, 21, 29], "s23": [16, 21, 29], "group_gener": [16, 25, 26, 28, 29], "verifi": [16, 34, 66, 68, 69, 72], "lemma": [16, 66], "white2015": 16, "show": [16, 19, 63, 69, 72], "j_5": 16, "1q": 16, "j5": 16, "to_matrix": [16, 52, 54, 56], "geometr": 16, "to_permut": 16, "j7": 16, "p3": 16, "mult": 16, "r2l": 16, "l2r": [16, 63], "bilinear_form": [16, 37], "bilinear": [16, 37, 44, 50, 52, 53, 54, 56, 57], "almost": 16, "reorder": [16, 63], "remov": [16, 69], "recov": [16, 69], "djs2003": 16, "permute_rows_and_column": 16, "geometric_representation_gener": 16, "span": [16, 44], "epsilon_v": 16, "_v": 16, "e_v": 16, "epsilon_u": 16, "epsilon_": 16, "f_v": 16, "complement": [16, 66], "rho": [16, 23], "faith": [16, 37, 69], "blow": 16, "ran": 16, "max_test": 16, "15000": 16, "did": 16, "counterexampl": 16, "visit": [16, 69], "cur": 16, "mat": [16, 47], "rg": 16, "break": [16, 72], "pop": 16, "zip": 16, "val": 16, "continu": 16, "matp": 16, "set_immut": 16, "inject": [16, 69], "famili": [16, 19, 26, 28, 37, 60, 69, 72, 75], "max_length": 16, "right_angled_coxeter_group": 16, "emb": [16, 69, 75], "most2019": 16, "diagram": [16, 37, 63], "cocycl": 16, "bcl2022": 16, "purecactusgroup": 16, "kernelsubgroup": [16, 29], "pj_n": 16, "surject": 16, "split": [16, 19, 58, 59, 65, 66, 69, 72], "longrightarrow": [16, 69], "pj3": [16, 29], "purecactu": [16, 27, 29], "indexerror": 16, "schreier": 16, "s_lemma": 16, "travers": 16, "lex": 16, "minimum": [16, 69], "corollari": 16, "classfunct": 17, "tabl": [17, 69, 72], "therefor": [17, 64], "somewhat": 17, "franco": 17, "saliola": 17, "novemb": 17, "octob": 17, "bugfix": 17, "exterior": [17, 75], "class_funct": [17, 31], "cyclicpermutationgroup": [17, 20, 21, 23, 39, 48, 69, 71, 72], "conjugacy_class": [17, 18, 31, 69, 72, 74], "chi": [17, 31, 39], "classfunction_gap": 17, "sageobject": [17, 33, 63], "adams_oper": 17, "adam": 17, "psi": [17, 26, 76, 77], "turn": [17, 20, 63, 64, 66, 72], "char": 17, "irreducible_charact": [17, 31, 69], "zeta5": [17, 69], "decompos": 17, "central_charact": 17, "trivial_charact": [17, 31, 69], "appear": [17, 69], "s5": [17, 19], "irr": [17, 69], "determinant_charact": 17, "exterior_pow": 17, "induct": 17, "supergroup": 17, "adjoint": [17, 34], "xi": 17, "irreducible_constitu": 17, "ic": 17, "is_irreduc": 17, "norm": [17, 37], "a5": 17, "alternatinggroup": [17, 20, 21, 31, 69, 70, 72], "scalar_product": 17, "symmetric_pow": 17, "tensor_product": 17, "chi1": 17, "chi2": 17, "chi3": 17, "zeta8": 17, "classfunction_libgap": 17, "charactert": [17, 69], "interfac": [17, 19, 30, 33, 38, 47, 48, 69], "gapel": [17, 20, 22, 32, 33, 62, 69], "tensor": 17, "conjugacyclass": [18, 74], "main": [18, 23, 44, 58, 59], "conjugacyclassgap": [18, 74], "go": [18, 27, 47, 52, 53], "wherea": [18, 19], "fallback": 18, "naiv": [18, 66, 69], "butler": 18, "paper": [18, 75], "quicker": 18, "cycl": [18, 62, 63, 69, 70, 72, 74, 75], "fall": [18, 23, 32], "whenev": 18, "is_rat": 18, "close": 18, "is_real": 18, "real": [18, 37, 45, 47, 52, 58, 59], "taken": [18, 37, 69], "weylgroup": [18, 26, 27, 33], "3840": [18, 66], "memori": [18, 20, 23, 64], "intens": 18, "devot": 19, "firstli": 19, "investig": 19, "proceed": [19, 64, 65], "fourth": 19, "canadian": 19, "mathemat": [19, 38, 69], "congress": 19, "vancouv": 19, "1957": 19, "pp": [19, 64, 65, 66, 68], "95": 19, "122": 19, "wise": 19, "four": [19, 21, 69, 72], "five": 19, "sp": [19, 20, 27, 31, 32, 50, 54, 55], "c_3": [19, 69, 72], "todai": 19, "irreduc": [19, 31, 39, 69, 72], "shephard": [19, 72], "todd": [19, 72], "classif": [19, 72], "32": [19, 23, 39, 63, 69, 70, 72], "uniti": [19, 35, 39, 58], "einig": 19, "endlich": 19, "faktorgruppen": 19, "der": 19, "zopfgruppen": 19, "math": [19, 23, 39, 66, 69], "163": 19, "1978": 19, "291": 19, "302": 19, "assion": 19, "seri": [19, 39, 69], "lll": 19, "mbox": 19, "t_2": 19, "t_3": 19, "t_1": 19, "t_i": 19, "he": 19, "epimorph": [19, 20], "hi": [19, 20], "resp": [19, 26, 37, 70], "therein": 19, "help": [19, 39, 63, 69, 72], "gap3": 19, "chevi": 19, "instal": [19, 69], "as_classical_group": 19, "as_matrix_group": [19, 45, 47, 52], "as_reflection_group": 19, "cox1957": 19, "ass1978": 19, "2019": [19, 38, 70], "cubic_braid": 19, "assiongroup": 19, "cubicbraidgroup": 19, "short": 19, "hand": 19, "cut": 19, "cbg_type": 19, "s3x": 19, "assiongroupu": 19, "assionu": 19, "u3": 19, "u3x": 19, "cubicbraidel": 19, "finitelypresentedgroupel": [19, 20], "c1": [19, 69], "ele1": 19, "ele2": 19, "preimag": [19, 32], "root_bur": 19, "characterist": [19, 39, 52, 53, 72], "coset": [19, 20, 68, 69], "belong": [19, 69], "indetermin": [19, 39, 72], "sixth": 19, "twelfth": 19, "six": 19, "document": [19, 20, 23, 39, 48, 58, 61, 69], "buma": 19, "zeta3": [19, 47, 48, 52, 56, 58, 69], "sqrt3": 19, "r64": 19, "bumaad": 19, "zeta12": 19, "finitelypresentedgroup": [19, 20, 69], "enum": 19, "due": [19, 21, 66, 69, 72], "activ": 19, "easili": [19, 38, 69], "c0": 19, "u0": 19, "u1": 19, "u2": 19, "forc": [19, 20], "psp": [19, 27, 32, 69, 72], "centralizing_el": 19, "enlarg": 19, "pgu": [19, 27, 32, 69, 70, 72], "ucf": [19, 47, 48, 56], "stand": 19, "u3cl": 19, "u3clemb": 19, "ucl": 19, "u4": 19, "u4cl": 19, "c4cl": 19, "c5mch5": 19, "m_back": 19, "u5": 19, "u5mch3": 19, "through": [19, 21, 23, 69, 72], "use_class": 19, "pc3": 19, "occurr": 19, "info": 19, "messag": [19, 72], "r3": [19, 21], "st4": 19, "cartan_matrix": 19, "simple_root": 19, "simple_coroot": 19, "mr": 19, "c3cl": 19, "view": [19, 63, 69, 72], "r4": 19, "invariant_form": [19, 45, 50, 52, 53, 54, 55, 56, 57], "classical_invariant_form": 19, "braid_group": 19, "bu": 19, "ub": [19, 23, 63], "avoid": 19, "wait": 19, "s15": 19, "109777561863482259035023554842176139436811616256000": 19, "hilfssatz": 19, "insid": [19, 69, 72], "classical_group": 19, "cm": 19, "degener": [19, 52, 56], "caus": 19, "is_singular": 19, "codegre": [19, 72], "sens": [19, 31, 37, 39, 52], "cubic_braid_subgroup": 19, "nstrand": 19, "index_set": [19, 22, 26, 28, 37, 70, 72], "is_finit": [19, 24, 31, 37, 45, 50], "simple_reflect": [19, 25, 26, 37, 70, 72], "select": 19, "free_group": [20, 22, 33], "thing": [20, 66], "access": [20, 27, 31, 33, 36, 69, 73], "fp": [20, 33], "lowercentralseri": 20, "hold": [20, 47, 53], "lib": [20, 22, 32, 33, 39, 69], "gapelement_integ": 20, "abelian": [20, 21, 22, 23, 24, 28, 31, 32, 69, 72, 75], "g_ab": 20, "m1": [20, 22, 31, 38, 39, 72], "m2": [20, 22, 31, 38, 39, 47], "guarante": [20, 39, 69], "finish": [20, 64], "undecid": 20, "process": [20, 63, 64, 70, 72], "until": 20, "exhaust": [20, 64], "presentation_of_a_group": 20, "word_problem_for_group": 20, "finitely_pres": 20, "abelian_invari": [20, 22], "i_1": [20, 22], "i_j": [20, 22], "alexander_matrix": 20, "im_gen": [20, 22], "fox": [20, 22], "introduc": 20, "t2": [20, 22], "t3": [20, 22], "t4": 20, "limit": [20, 23, 65, 72, 77], "4096000": 20, "maxim": [20, 39, 69, 72], "abort": 20, "permutationgroup": [20, 38, 47, 69, 70, 71, 72], "exce": 20, "exceed": 20, "decid": 20, "prepar": 20, "consum": [20, 39, 63], "without": [20, 39, 72], "sensibl": 20, "answer": [20, 69], "direct_product": [20, 23, 48, 69, 71, 72], "new_nam": 20, "directproduct": [20, 33, 69], "joh1990": 20, "proposit": 20, "ask": 20, "old": [20, 70], "klein": [20, 21, 72], "examin": 20, "But": [20, 23, 62, 69], "davi": [20, 21, 69], "shurbert": [20, 21, 69], "2013": [20, 21, 25, 26, 28, 37, 38, 40, 41, 43, 45, 52, 54, 56, 69, 75, 76], "defn": [20, 34, 69, 71, 76, 77], "gquotient": 20, "x4": [20, 22], "rewriting_system": 20, "system": [20, 25, 26, 34, 37, 39, 63, 69], "confluent": 20, "reduct": 20, "make_conflu": 20, "semidirect_product": [20, 69], "cartesian": [20, 26, 69], "h_1": [20, 26, 69], "g_2": [20, 23, 26, 35, 69], "h_2": [20, 26, 69], "implicitli": 20, "slot": 20, "second": [20, 25, 34, 38, 58, 59, 62, 63, 66, 69], "costli": 20, "bypass": 20, "confid": [20, 69], "permutationgroup_gener": [20, 62, 63, 69, 71, 72], "depth": [20, 66, 69], "d4": [20, 23, 44, 48, 69, 71], "alpha1": [20, 69], "alpha2": [20, 69], "dicycl": [20, 21, 27, 69, 72], "alpha": [20, 26, 37, 69, 72, 76, 77], "dihedralgroup": [20, 21, 23, 39, 48, 69, 70, 71, 72], "off": [20, 66], "expens": [20, 32, 69, 71], "behavior": 20, "unpredict": [20, 69], "invalid": 20, "caught": 20, "simplification_isomorph": 20, "complic": [20, 41, 64, 69], "e0": [20, 75], "e1": [20, 75], "e2": [20, 75], "e4": 20, "e5": [20, 47, 48, 56], "e6": 20, "e7": 20, "e8": 20, "e9": 20, "structure_descript": [20, 23, 48, 69], "latex": [20, 23, 48, 50, 51, 52, 54, 55, 56, 69], "tri": [20, 23, 39, 48, 69], "structuredescript": [20, 23, 48, 69], "build": [20, 21, 23, 48, 62, 64, 69], "produc": [20, 23, 39, 48, 63, 69], "latexexpr": [20, 23, 48, 69], "mainli": [20, 23, 48, 69], "small": [20, 21, 23, 39, 45, 48, 69, 72], "surpris": [20, 23, 48, 69], "d3": [20, 23, 48, 69], "17573": [20, 23, 48, 69], "And": [20, 21, 23, 48, 69, 71], "a8": [20, 23, 48, 69], "freegroupel": [20, 22], "groupmorphismwithgensimag": 20, "setmorph": [20, 25, 32], "rewritingsystem": 20, "knuth": 20, "bendix_completion_algorithm": 20, "shortlex": 20, "kbmag": 20, "compil": 20, "finitely_presented_group": 20, "after": [20, 63, 69], "bendix": 20, "is_conflu": 20, "appli": [20, 25, 64, 69], "try": [20, 23, 39, 41, 63, 64, 70, 72], "intern": [20, 69], "grant": 20, "although": [20, 72], "occas": 20, "interrupt": 20, "manual": [20, 39], "makeconflu": 20, "sort": [20, 28, 39, 63, 66, 69, 70, 72, 74, 75], "wrap_fpgroup": 20, "libgap_fpgroup": 20, "comparison": [20, 22], "libgap_free_group": [20, 22], "id": [20, 22, 69, 72], "put": [20, 22, 69], "implic": [20, 22], "_set_compare_by_id": [20, 22], "safe": [20, 22], "recommend": [20, 22], "a_cub": 20, "generatorsofgroup": [20, 39], "tab": [21, 27, 36, 73], "made": [21, 23, 63, 64, 69, 72, 75], "engin": 21, "tw1980": [21, 69, 72], "a_n": [21, 22, 72], "c_n": [21, 69, 72], "nonabelian": [21, 38, 69, 72], "4n": [21, 35, 72], "d_n": [21, 72], "fgabelian": [21, 27], "c_2": [21, 64, 69, 72], "kleinfour": [21, 27, 72], "quaternion": [21, 27, 38, 72], "06": [21, 63, 69, 71, 72], "desir": 21, "finitely_presented_nam": 21, "cyclicpresent": 21, "alternatingpresent": 21, "a6": 21, "360": [21, 72], "binarydihedralpresent": 21, "bd_n": [21, 35], "typo": [21, 35, 63], "sun2010": [21, 35], "binarydihedr": [21, 35], "cactuspresent": 21, "dicyclicpresent": 21, "dihedralpresent": 21, "finitelygeneratedabelianpresent": 21, "int_list": 21, "variou": [21, 26, 27, 40, 50, 69], "unabl": [21, 34, 37], "finitelygeneratedheisenbergpresent": 21, "heisenberggroup": [21, 42], "y1": [21, 66], "r1": [21, 63], "r2": [21, 63], "hp": 21, "hnp": 21, "heisenberg_group": [21, 42], "kleinfourpresent": 21, "quaternionpresent": 21, "quaterniongroup": [21, 72], "symmetricpresent": 21, "identity_matrix": 22, "m3": [22, 31, 38], "preferenti": 22, "fox_deriv": 22, "x_2": [22, 34], "a_2": 22, "partial_j": 22, "delta_": 22, "qquad": [22, 25, 34, 35, 72], "uv": 22, "lie": [22, 27], "infer": 22, "syllabl": 22, "x_k": 22, "subword": 22, "singl": [22, 38, 39, 62], "freegroup_class": 22, "generator_nam": 22, "divis": [22, 23, 27], "is_freegroup": 22, "wrap_freegroup": 22, "collect": [23, 60, 75], "group": [23, 29, 62, 64, 65, 66, 67, 68], "multiplication_nam": 23, "addition_nam": 23, "caller": 23, "op": 23, "finder": 23, "linear_rel": 23, "order_from_multipl": 23, "order_from_bound": 23, "781": 23, "672": [23, 52], "39": [23, 32, 63, 69, 70, 72], "36": [23, 31, 32, 39, 63, 69, 70, 72], "3227": 23, "plist": 23, "prime_factor": 23, "hasse_bound": 23, "bsg": [23, 66], "bound": 23, "babi": 23, "step": [23, 34], "giant": 23, "na": 23, "lb": 23, "le": 23, "lower": [23, 39, 69], "upper": [23, 69], "except": [23, 47, 72, 75], "soft": 23, "next_prim": 23, "230": 23, "500": [23, 69], "229": 23, "lift_x": 23, "69327408": 23, "john": [23, 63], "cremona": 23, "priori": 23, "nb": 23, "vastli": 23, "pohlig": 23, "hellman": 23, "pollard": 23, "kangaroo": 23, "997": 23, "2356": 23, "121": 23, "50": [23, 68, 69, 72], "quadraticfield": [23, 39], "eta": 23, "detect": 23, "11515": 23, "55224": 23, "negat": 23, "dlog": 23, "smooth": 23, "63": [23, 63, 72], "2005": [23, 69, 72], "29": [23, 63, 69, 70, 72], "julien": 23, "grijalva": 23, "09": [23, 34, 40, 52, 63, 72, 75], "discrete_log_gener": 23, "discrete_log_lambda": 23, "hash_funct": 23, "built": [23, 64, 69], "hash": [23, 72], "amount": [23, 69, 72], "coupl": 23, "critic": 23, "1234567": 23, "1200000": 23, "1250000": 23, "89": 23, "2011": [23, 66, 69], "704966": 23, "yann": 23, "laigl": 23, "chapui": 23, "discrete_log_rho": 23, "adapt": 23, "edlyn": 23, "tesk": 23, "1234": 23, "46591": 23, "50021": 23, "10577": 23, "23999": 23, "28893": 23, "14601": 23, "41019": 23, "30188": 23, "3081": 23, "736": 23, "27092": 23, "bewar": [23, 70], "integermodr": [23, 54], "171980": 23, "31002": 23, "15501": 23, "123456": 23, "failur": [23, 64], "happen": 23, "better": [23, 69], "mq": 23, "additive_ord": 23, "merge_point": 23, "p1": [23, 34, 69], "p2": [23, 69], "suppli": [23, 33], "g_3": 23, "n_3": 23, "hbox": 23, "ob": 23, "oc": 23, "728": 23, "od": 23, "discrete_logarithm": 23, "realfield": 23, "0625000000000": 23, "idempot": 23, "fast": [23, 63, 69], "389a1": 23, "645656132358737542773209599489": 23, "22817025904944891235367494656": 23, "525532176124281192881231818644174845702936831": 23, "3446581505217248068297884384990762467229696": 23, "528978757629498440949529703029165608170166527": 23, "p0": 23, "101": 23, "102": 23, "104": 23, "105": 23, "106": 23, "107": 23, "108": 23, "109": 23, "height": 23, "000000000000000": 23, "35": [23, 63, 69, 70, 72], "361": 23, "5720": 23, "6859": 23, "47503": 23, "16641": 23, "9862190": 23, "2146689": 23, "0000000000000": 23, "previou": [23, 69, 75], "200": 23, "250": 23, "kept": [23, 50, 52, 54, 56], "compat": [23, 62, 69, 70, 75], "prefer": 23, "cach": [23, 69], "subsequ": 23, "1279": 23, "mersenn": 23, "42391158275216203514294433200": 23, "algebraicgroup": 24, "finitegroup": [24, 69, 77], "develop": 24, "overrid": [24, 26, 31], "is_group": 24, "shimozono": [25, 26], "group_exp": [25, 26], "groupexp": [25, 26], "exponenti": [25, 34], "creation": [25, 34, 70], "kind": [25, 32, 34, 64], "accomplish": 25, "_apply_functor": 25, "ez": [25, 26], "manipul": [25, 72], "achiev": [25, 69], "_apply_functor_to_morph": 25, "rootsystem": [25, 26], "ambient_spac": 25, "weyl_group": [25, 26], "my_act": 25, "commutativeadditivegroup": 25, "groupexpel": 25, "elementwrapp": [25, 29], "eg": [25, 63], "groupexp_class": 25, "weight_lattic": 25, "weight": [25, 37], "lattic": [25, 26], "__mul__": 25, "group_semidirect_product": 26, "groupsemidirectproduct": 26, "twist": 26, "act_to_right": 26, "prefix0": 26, "prefix1": 26, "print_tupl": 26, "cartesianproduct": 26, "1_h": 26, "1_g": 26, "former": 26, "rtime": [26, 72], "syntact": [26, 70], "align": 26, "g_1g_2": [26, 69], "prefixl": 26, "style": 26, "ev": 26, "cartan_typ": [26, 72], "cartantyp": 26, "ww": 26, "functori": 26, "twofold": 26, "groupsemidirectproductel": 26, "__main__": 26, "cartesian_project": 26, "opposite_semidirect_product": 26, "exchang": 26, "hop": 26, "upon": [26, 69], "to_opposit": 26, "opposit": [26, 75], "root_lattic": 26, "weyl": [26, 72], "discov": [27, 68], "quickli": [27, 69], "press": [27, 63, 65, 69, 72], "primari": [27, 39], "complexreflect": [27, 72], "mathieu": [27, 72], "suzuki": [27, 69, 72], "pgl": [27, 32, 69, 72], "psl": [27, 69, 71, 72], "psu": [27, 69, 72], "transit": [27, 61, 69, 72], "rubikscub": [27, 63], "quaterniongf3": [27, 38], "coxetergroup": [27, 37, 40], "reflectiongroup": 27, "rightangledartin": [27, 75], "additiveabelian": 27, "additivecycl": 27, "semimonomialtransform": [27, 76, 77], "indexed_free_group": 28, "indexedfreeabeliangroup": 28, "indexedgroup": 28, "indexedfreeabelianmonoidel": 28, "indexedfreegroup": 28, "indexedfreemonoidel": 28, "to_word_list": 28, "sign": [28, 47, 58, 69, 70], "indexedmonoid": 28, "lazi": [28, 39], "infti": [28, 37], "unless": [28, 69, 72], "kernel_subgroup": 29, "defining_morph": 29, "_from_cactus_group_el": 29, "__call__": [29, 69], "dedic": 30, "your": [30, 31, 33, 69, 71], "own": [30, 33, 64], "g_gap": 30, "libgap_group": [30, 31, 33, 39, 48], "grouplibgap": [30, 31, 33], "grouplibgap_with_categori": 30, "arg": [30, 32, 50, 58, 69], "properli": [31, 70], "libgap_mixin": 31, "enumeratedset": 31, "parentmethod": 31, "51840": 31, "12130560": 31, "480": 31, "center": [31, 45, 63, 69, 72], "finitefield": 31, "character_t": [31, 39, 69, 72], "gx": [31, 69], "vert": [31, 69], "cyclicgroup": [31, 33], "is_nilpot": [31, 69], "is_p_group": 31, "is_perfect": [31, 69], "perfect": [31, 69], "is_polycycl": [31, 69], "is_solv": [31, 69, 72], "is_simpl": [31, 69], "is_supersolv": [31, 69], "supersolv": [31, 69], "5241": 31, "mg": [31, 69], "10515": 31, "9437": 31, "26750": [32, 69, 70], "natural_map": 32, "libgap_morph": [32, 43, 49, 69], "grouphomset_libgap": [32, 43, 69], "homsetwithbas": 32, "groupmorphism_libgap": 32, "overload": 32, "nat": 32, "grouphomset_libgap_with_categori": 32, "gap_hom": [32, 71], "pr": 32, "34": [32, 39, 63, 66, 69, 70, 72], "pushforward": 32, "sect": 32, "helper": [33, 49, 56, 66, 72], "libgap_wrapp": [33, 69], "fooelement": 33, "foogroup": 33, "__init__": [33, 62], "lg": 33, "dummi": 33, "superclass": 33, "pc": [33, 72], "_repr_": 33, "libgap_el": 33, "xg": 33, "is_on": [33, 40, 58], "3x3": 33, "96": 33, "nth_root": 33, "usabl": 33, "__reduce__": 33, "serial": 33, "pickl": 33, "nativ": 33, "recreat": 33, "f6": 33, "relatorsoffpgroup": 33, "start": [33, 64, 72], "usual": [33, 34, 40, 41, 52, 70, 72], "bigger": [33, 39], "19270": 33, "itertool": 33, "subgroup_gen": 33, "diagonal_matrix": 33, "eero": 34, "hakavuori": 34, "lie_gp": 34, "nilpotent_lie_group": 34, "nilpotentliegroup": 34, "differentiablemanifold": 34, "topolog": 34, "rr": [34, 37, 45, 52, 58, 72], "chart_exp1": 34, "chart_exp2": 34, "lie_algebra": 34, "lie_group": 34, "default_chart": 34, "chart": 34, "x_0": 34, "set_default_chart": 34, "frame": 34, "left_invariant_fram": 34, "right_invariant_fram": 34, "displai": [34, 63, 68, 69, 70], "exp1_fram": 34, "exp2_fram": 34, "y_0": 34, "y_2": 34, "l_g": 34, "left_transl": 34, "diffeomorph": 34, "differenti": 34, "x_l": 34, "left_invariant_extens": 34, "x_r": 34, "right_invariant_extens": 34, "vanish": 34, "manifoldpoint": 34, "liealgebra": 34, "operatornam": [34, 72], "_g": 34, "admit": [34, 35], "ad_g": 34, "x_12": 34, "x_112": 34, "x_122": 34, "x_1x_1": 34, "x_nx_n": 34, "y_12": 34, "ghg": 34, "c_g": 34, "chart1": 34, "chart2": 34, "noth": [34, 63], "extens": [34, 39], "custom": [34, 64], "manifold": 34, "vector_fram": 34, "livf": 34, "coord_fram": 34, "z_0": 34, "z_1": 34, "z_2": 34, "w_a": 34, "w_b": 34, "w_c": 34, "gh": [34, 69], "l_h": 34, "rivf": 34, "xr_1": 34, "xr_2": 34, "xr_12": 34, "right_transl": 34, "hg": [34, 69], "r_g": 34, "r_h": 34, "2016": [35, 40], "matrix_gp": [35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "binary_dihedr": 35, "binarydihedralgroup": 35, "finitelygeneratedmatrixgroup_gap": [35, 39, 42, 44, 46, 47, 48, 53, 55, 57], "zeta_": [35, 52, 56], "zeta_4": 35, "zeta_k": 35, "furthermor": [35, 52], "avatar": 35, "dol2009": 35, "dicyclic_group": 35, "binary_dihedral_group": 35, "coxetermatrixgroup": 37, "coxeter_matrix": [37, 72], "finitelygeneratedmatrixgroup_gener": [37, 38], "alpha_": 37, "inner": [37, 69], "alpha_t": 37, "co": [37, 63, 66], "frac": [37, 39], "st": [37, 66], "sigma_": 37, "cartan": [37, 72], "quadrat": [37, 52, 53, 54, 55, 75], "edg": [37, 63, 66, 75], "treat": [37, 72], "coxeter_diagram": 37, "becaus": [37, 59, 64, 72, 77], "cup": 37, "oo": [37, 39], "236067977499790": 37, "matrixgroupelement_gener": [37, 40, 47], "action_on_root_indic": 37, "side": [37, 47, 69, 70], "w0": 37, "canonical_matrix": 37, "descent": [37, 70, 72], "node": 37, "dynkin": 37, "first_desc": 37, "descript": [37, 58, 61, 69, 72], "has_right_desc": 37, "sum_": [37, 39, 69, 72], "thu": [37, 69, 70, 72], "semidefinit": 37, "canonical_represent": 37, "fundamental_weight": 37, "positive_root": 37, "simple_root_index": 37, "design": 38, "sl2z": 38, "_contains_": [38, 47], "2007": [38, 47, 63, 69, 70, 72], "invariant_gener": [38, 39, 47], "martin": [38, 39, 47], "albrecht": [38, 39, 47], "king": [38, 39, 47, 69], "module_composition_factor": [38, 39, 47], "meatax": [38, 39, 47], "improv": [38, 47], "reynold": [38, 39, 47], "singular": [38, 39, 47], "_permutation_group_element_": 38, "25706": [38, 69], "revis": [38, 40], "26903": 38, "27143": 38, "finitely_gener": 38, "generator_matric": 38, "matrixgroup_gener": [38, 47, 48, 50], "h1": 38, "h2": 38, "formal": [38, 58, 72], "nonsens": 38, "sl2c": 38, "attributeerror": 38, "linearmatrixgroup_generic_with_categori": 38, "attribut": [38, 45, 64], "quaternionmatrixgroupgf3": 38, "symmetri": [38, 69, 72], "d_4": [38, 69, 72], "commonli": [38, 75], "ay": 38, "jai": 38, "kai": 38, "normalize_square_matric": 38, "m4": 38, "finitely_generated_gap": 39, "matrixgroup_gap": [39, 48, 51], "finitelygeneratedmatrixgroup_gap_with_categori": 39, "seed": [39, 64, 69], "occur": [39, 64, 72], "hard": 39, "harder": 39, "context": 39, "low": 39, "invoc": 39, "imf": 39, "function_factori": 39, "imfmatrixgroup": 39, "gg": 39, "21499084800": 39, "psmaller": 39, "144": [39, 45], "80": 39, "integr": [39, 50], "concern": [39, 70], "involv": [39, 69], "smallerdegreepermutationrepresent": 39, "reproduc": [39, 69], "good": [39, 64, 69], "bad": 39, "secondari": 39, "invariant_algebra_reynold": 39, "invariant_r": 39, "finvar": 39, "gen1": 39, "gen2": 39, "gen3": 39, "70": 39, "stu1993": 39, "modular": [39, 72], "arxiv": 39, "0703035": 39, "invariants_of_degre": 39, "deg": [39, 70], "gr": 39, "ct": [39, 69], "match": 39, "izeta3": 39, "www": [39, 63], "org": [39, 63], "ref": 39, "chap69": 39, "html": [39, 63], "molien_seri": [39, 69], "return_seri": 39, "prec": 39, "molien": [39, 69], "det": [39, 69, 72], "tg": 39, "omega": 39, "k_i": [39, 75], "prod_": [39, 72], "dec1998": 39, "lazili": 39, "tetrahedr": 39, "tetra": 39, "mol": 39, "taylor": 39, "octahedr": 39, "octa": 39, "icosahedr": 39, "z5": 39, "ico": 39, "reynolds_oper": 39, "poli": 39, "compositum": 39, "absolut": [39, 70], "rebecca": 39, "lauren": 39, "ben": 39, "hutz": 39, "zeta4": 39, "1666666666666667": 39, "2886751345948129": 39, "ll": 39, "unsupport": 40, "operand": 40, "similarli": [40, 63, 72], "address": 40, "rework": 40, "hierarchi": 40, "cython": [40, 70], "414213562373095": 40, "huge": 40, "charpoli": [40, 41], "is_matrixgroupel": 40, "helloooo": 40, "group_element_gap": 41, "matrixgroupelement_gap": [41, 48], "flatten": [41, 74], "solut": [41, 63], "hilder": 42, "vitor": 42, "lima": 42, "pereira": 42, "i_n": 42, "243": 42, "1024": 42, "is_matrixgrouphomset": 43, "deprecationwarn": [43, 49, 69], "matrixgrouphomset": 43, "pleas": 43, "25444": [43, 49], "integrallattic": 44, "orthogonal_group": 44, "1152": 44, "groupactiononquotientmodul": 44, "quotient_modul": 44, "is_left": 44, "groupofisometri": 44, "invariant_bilinear_form": [44, 52, 53], "invariant_quotient_modul": 44, "groupactiononsubmodul": 44, "invariant_submodul": 44, "orthogonalmatrixgroup_gap": [44, 53], "regist": 44, "bil": 44, "49": [45, 63, 72], "extrem": [45, 52, 54, 56], "refactor": [45, 52, 54, 56], "kl1990": 45, "car1972": 45, "11064475422000000000000000": 45, "color_by_label": 45, "vertex_s": 45, "vertex_label": 45, "linearmatrixgroup_gener": [45, 46], "sage_nam": [45, 46, 50, 51, 52, 53, 54, 55, 56, 57], "latex_str": [45, 46, 50, 51, 52, 53, 54, 55, 56, 57], "namedmatrixgroup_gener": [45, 50, 51, 52, 54, 56], "1956712595698146962015219062429586341124018007182049478916067369638713066737882363393519966343657677430907011270206265834819092046250232049187967718149558134226774650845658791865745408000000": 45, "_3": 45, "linear_gap": 46, "linearmatrixgroup_gap": 46, "gap_command_str": [46, 51, 53, 55, 57], "namedmatrixgroup_gap": [46, 51, 53, 55, 57], "25894": 47, "matrix_group": [47, 50], "matrixgroup_bas": 47, "assumpt": [47, 64], "throw": 47, "awai": [47, 64], "encod": [47, 75], "sign_represent": [47, 69], "twosid": [47, 69], "ignor": [47, 52, 66, 69], "_default_sign": 47, "universalcyclotomicfield": [47, 48, 56], "is_matrixgroup": 47, "matrix_group_gap": 48, "to_libgap": 49, "famou": 50, "named_group": 50, "subcategori": 50, "isinst": [50, 51], "etc": 50, "normalize_args_invariant_form": 50, "becom": [50, 72], "26028": [50, 52, 54, 56], "normalize_args_vectorspac": 50, "named_group_gap": 51, "command": [51, 69], "ari": 52, "disambigu": 52, "inequival": 52, "third": 52, "odd": [52, 69, 72], "_latex_": [52, 56], "__str__": [52, 56], "_og": 52, "cmd": 52, "relev": [52, 64], "distinguish": 52, "go3": 52, "go3m": 52, "pm": [52, 54, 56, 72], "orthogonalmatrixgroup_gener": [52, 53], "bold": [52, 54, 55, 56], "rrr": [52, 56], "invariant_quadratic_form": [52, 53], "so3": 52, "so3m": 52, "normalize_args_": 52, "orthogonal_gap": 53, "transpos": 54, "276595200": 54, "modifi": [54, 56, 69], "special_linear": [54, 56], "sp4m": 54, "sp4": 54, "symplecticmatrixgroup_gener": [54, 55], "sp43": 54, "rrrr": 54, "symplectic_gap": 55, "symplecticmatrixgroup_gap": 55, "378000": 56, "minor": 56, "_ug": 56, "_check_matrix": 56, "nondegener": [56, 72], "sesquilinear": [56, 72], "beta": [56, 76, 77], "gm": 56, "unitarymatrixgroup_gener": [56, 57], "su4": 56, "finite_field_sqrt": 56, "unitary_gap": 57, "unitarymatrixgroup_gap": 57, "g32": 57, "rootsofunitygroup": 58, "unitcirclegroup": 58, "circl": 58, "mathit": 58, "argumentbyelementgroup": 58, "factori": [58, 66, 68, 69, 77], "argumentgroup": 58, "conveni": 58, "asymptot": [58, 59], "growth": [58, 59], "lvert": 58, "rvert": 58, "influenc": [58, 59], "daniel": [58, 59], "krenn": [58, 59], "misc_gp": [58, 59], "argument_group": 58, "abstractargu": 58, "abstractargumentgroup": 58, "argumentbyel": 58, "plane": 58, "argumentgroupfactori": 58, "uniquefactori": 58, "analyz": [58, 63], "interpret": [58, 69], "signgroup": 58, "uu": 58, "uu_p": 58, "arg_p": 58, "exactli": [58, 69], "carri": 58, "uu_qq": 58, "aa": 58, "arg_rr": 58, "rif": 58, "rbf": 58, "arg_cc": 58, "cif": 58, "cbf": 58, "create_key_and_extra_arg": 58, "create_object": 58, "rootofun": 58, "unitcirclepoint": 58, "exponent_denomin": 58, "denomin": 58, "exponent_numer": 58, "numer": [58, 72], "is_minus_on": 58, "420000000000000": 58, "333333333333333": 58, "re": 59, "im": [59, 76], "imaginary_group": 59, "imaginaryel": 59, "additivegroupel": 59, "imaginarygroup": 59, "imag_part": 59, "real_part": 59, "fit": [60, 69], "elsewher": 60, "polgaloi": [61, 69], "pari_group": 61, "parigroup": [61, 69], "polynomialr": [61, 70], "galois_group": [61, 71], "human": 61, "readabl": 61, "44": [61, 63, 69, 70, 72], "signatur": [61, 64], "transitive_numb": [61, 72], "ntk": 61, "permutationgroupel": [62, 69, 70], "flavor": 62, "combinatori": [62, 63], "perm_gp": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74], "mandatori": 62, "standardize_gener": 62, "convert_dict": 62, "as_cycl": 62, "_gap_": [62, 69, 70], "string_to_tupl": 62, "trademark": 63, "shall": 63, "omit": [63, 69], "simplic": 63, "clockwis": 63, "quarter": 63, "face": 63, "front": [63, 69], "move": [63, 69], "read": 63, "cubegroup": 63, "pars": 63, "singmast": 63, "corner": 63, "xyz": 63, "facet": 63, "rotat": 63, "flip": 63, "display2d": 63, "rear": [63, 69], "38": [63, 69, 70, 72], "41": [63, 69, 70, 72], "46": [63, 69, 70, 72], "47": [63, 69, 70, 72], "rewritten": 63, "edit": 63, "clean": 63, "bradshaw": [63, 70], "rewrot": 63, "docstr": [63, 69], "versatil": 63, "cleanup": 63, "cameron": [63, 69, 72], "york": [63, 69, 72], "cambridg": [63, 65, 69, 72], "1999": [63, 69, 72], "wielandt": [63, 69, 72], "academ": [63, 69, 72], "1964": [63, 69, 72], "dixon": [63, 69, 72], "mortim": [63, 69, 72], "verlag": [63, 69, 72], "berlin": [63, 69, 72], "adventur": 63, "hopkin": 63, "univ": 63, "2002": 63, "mv": 63, "2d": 63, "bdflru": 63, "t2b": 63, "state": 63, "gen_nam": 63, "mode": 63, "quiet": 63, "r0": 63, "xa": 63, "yb": 63, "varieti": 63, "perm_group": 63, "plot3d_cub": 63, "titl": 63, "mostli": 63, "draw": 63, "pictur": 63, "superflip": 63, "spot": 63, "26q": 63, "20f": 63, "plot_cub": 63, "2u": 63, "uf": 63, "fr": 63, "repr2d": 63, "explain": 63, "trick": [63, 71], "stabil": [63, 69], "discuss": [63, 66], "intuit": 63, "histori": 63, "show3d": 63, "cubi": 63, "sticker": 63, "025": 63, "scrambl": 63, "hybrid": 63, "timeout": 63, "kociemba": 63, "dietz": 63, "dik": 63, "winter": 63, "program": [63, 71], "eric": 63, "cubex": 63, "michael": 63, "reid": 63, "highli": 63, "undo": 63, "color_of_squar": 63, "lpurpl": 63, "yellow": 63, "green": 63, "orang": 63, "create_poli": 63, "polygon": [63, 69], "ur": 63, "cubie_cent": 63, "cubie_color": 63, "state0": 63, "cubie_fac": 63, "index2singmast": 63, "fdr": 63, "dlf": 63, "inv_list": 63, "lst": [63, 69, 75], "perm": [63, 65, 66, 76, 77], "plot3d_cubi": 63, "cnt": 63, "clr": 63, "rgbcolor": 63, "fur": 63, "clrf": 63, "clru": 63, "clrr": 63, "polygon_plot3d": 63, "tilt": 63, "kwarg": 63, "drawn": [63, 69], "ie": [63, 69, 72], "rotation_list": 63, "sin": 63, "theta": 63, "49999999999999994": 63, "7071067811865475": 63, "8660254037844387": 63, "7071067811865476": 63, "xproj": 63, "rot": 63, "6123724356957945": 63, "yproj": 63, "378497416975604": 63, "question": 64, "loos": 64, "automorphism_group_canonical_label": 64, "mention": 64, "refine_and_return_invari": 64, "partitionstack": 64, "void": 64, "cells_to_refine_bi": 64, "ctrb_len": 64, "compare_structur": 64, "gamma_1": 64, "gamma_2": 64, "all_children_are_equival": 64, "bint": 64, "frequent": 64, "mem_err": 64, "pointer": 64, "alloc": 64, "serv": 64, "alreadi": [64, 66, 70], "termin": 64, "ctypedef": 64, "struct": 64, "generate_children": 64, "aut_gp_and_can_lab": 64, "receiv": 64, "updat": 64, "gamma": [64, 66, 68, 75], "child": 64, "null": 64, "At": 64, "clear": 64, "dealloc": 64, "softwar": 64, "canonical_generator_data": 64, "thought": [64, 72], "apply_augment": 64, "aug": 64, "free_object": 64, "children": 64, "reject": 64, "content": 64, "free_iter_data": 64, "free_aug": 64, "canonical_par": 64, "level": 64, "never": [64, 76], "realloc": 64, "strive": 64, "segment": 64, "canonical_augment": 64, "mckai": [64, 65, 66, 68], "brendan": [64, 65, 66, 68], "vol": [64, 65, 66, 68, 69], "1998": 64, "306": 64, "324": 64, "congressu": [65, 66, 68], "numerantium": [65, 66, 68], "1981": [65, 66, 68], "87": [65, 66, 68], "fredman": 65, "sak": 65, "cell": 65, "probe": 65, "dynam": 65, "twenti": 65, "annual": 65, "acm": 65, "symposium": 65, "345": 65, "354": 65, "1989": 65, "seress": 65, "ako": 65, "data_structur": 65, "op_repres": 65, "merg": [65, 69], "demonstr": 65, "ps_repres": 65, "partit": [65, 69, 70, 72, 74], "sc_test_list_perm": 65, "limit_complain": 65, "test_contain": 65, "refinement_graph": 66, "graphstruct": 66, "all_labeled_graph": 66, "classifi": 66, "approach": 66, "importantli": 66, "benchmark": 66, "search_tre": 66, "glist": 66, "giso": 66, "inn": 66, "gi": 66, "append": 66, "coarsest_equitable_refin": 66, "coarsest": 66, "equit": 66, "refin": 66, "thorough": 66, "sparse_graph": 66, "sparsegraph": 66, "generate_dense_graphs_edge_addit": 66, "loop": 66, "indicate_mem_err": 66, "544": 66, "5096": 66, "156": [66, 69], "1044": 66, "ghz": 66, "12346": 66, "generate_dense_graphs_vert_addit": 66, "base_g": 66, "209": 66, "1253": 66, "13599": 66, "get_orbit": 66, "partn": 66, "ordering2": 66, "dig": 66, "use_indicator_funct": 66, "add_edg": 66, "orbit_partit": 66, "list_perm": 66, "vertex": [66, 75], "petersengraph": [66, 69], "random_test": [66, 68], "num": 66, "n_max": 66, "perms_per_graph": 66, "sure": [66, 68], "densiti": [66, 68], "randomli": [66, 68, 72], "uniformli": [66, 68], "g_in": 66, "lab": 66, "dict_rep": 66, "certif": 66, "arbitrarili": 66, "cgraph": 66, "dense_graph": 66, "densegraph": 66, "dodecahedron": 66, "dodecahedralgraph": [66, 69], "cubegraph": 66, "relabel": [66, 68, 69], "edge_iter": 66, "add_arc": 66, "asp": 66, "bsp": 66, "bde": 66, "bdg": 66, "has_arc": 66, "graph6_str": 66, "pg__oq": 66, "ae": 66, "ec": 66, "ac": [66, 72], "384": [66, 72], "46080": 66, "chri": 66, "godsil": 66, "hoffmansingletongraph": 66, "alq": 66, "cliques_maximum": 66, "y0": 66, "connected_components_subgraph": 66, "border": 66, "fll": 66, "num_vert": 66, "faga": 66, "pco": 66, "cp": 66, "aga": 66, "_qo": 66, "cca": 66, "bo": 66, "inplac": 66, "dkw": 66, "refinement_list": 67, "biject": [67, 69], "refinement_matric": 68, "leon": 68, "jeffrei": 68, "1991": 68, "533": 68, "583": 68, "matrixstruct": 68, "along": 68, "strong": [68, 69], "canonical_relabel": 68, "01100": 68, "00011": 68, "store": [68, 72], "nrows_max": 68, "ncols_max": 68, "nsymbols_max": 68, "perms_per_matrix": 68, "density_rang": 68, "distinct": [68, 72], "doubl": 68, "permgp_nam": 69, "direct_product_permgroup": 69, "joke": 69, "hot": 69, "chunki": 69, "soup": 69, "renteln": 69, "dund": 69, "foolproof": 69, "sampl": 69, "folk": 69, "humor": 69, "amer": 69, "soc": 69, "52": [69, 72], "as_finitely_presented_group": 69, "blocks_al": 69, "block": 69, "imprimit": 69, "cohomologi": [69, 75], "cohomology_part": 69, "composition_seri": 69, "conjugacy_classes_subgroup": 69, "derived_seri": 69, "fitting_subgroup": 69, "fixed_point": 69, "frattini_subgroup": [69, 72], "frattini": [69, 72], "gens_smal": 69, "group_id": 69, "group_primitive_id": [69, 72], "databas": [69, 72], "has_el": 69, "parentag": 69, "holomorph": 69, "h_n": 69, "hap": 69, "grouphomologi": 69, "graham": 69, "elli": 69, "homology_part": 69, "is_elementary_abelian": 69, "is_monomi": 69, "is_norm": 69, "is_pgroup": 69, "subnorm": 69, "is_primit": 69, "is_regular": 69, "regularli": 69, "is_semi_regular": 69, "semi": [69, 72], "is_transit": 69, "isomorphism_to": [69, 71], "isomorphism_type_info_simple_group": 69, "largest_moved_point": 69, "lower_central_seri": 69, "minimal_generating_set": 69, "non_fixed_point": 69, "normal_subgroup": 69, "poincare_seri": 69, "poincar\u00e9": 69, "representative_act": 69, "socl": 69, "solvable_rad": 69, "radic": 69, "strong_generating_system": 69, "permutationgroup_subgroup": 69, "sylow_subgroup": 69, "transvers": 69, "upper_central_seri": 69, "04": 69, "conjugacy_class_repres": 69, "reorgan": [69, 70], "subdirectori": 69, "__contains__": 69, "_cmp_": 69, "ramification_module_decomposition_modular_curv": [69, 72], "ramification_module_decomposition_hurwitz_curv": [69, 72], "mathieugroup": [69, 72], "bobbi": [69, 72], "moretti": [69, 72], "kleinfourgroup": [69, 72], "kiran": 69, "kedlaya": 69, "is_normal_subgroup": 69, "harvei": 69, "mike": 69, "hansen": 69, "nick": [69, 72], "patch": 69, "nathan": 69, "dunfield": 69, "cayley_t": 69, "quotient_group": 69, "file": 69, "from_gap_list": 69, "report": 69, "palenstijn": 69, "__cmp__": 69, "nicola": 69, "bori": 69, "stabilis": 69, "christoph": 69, "swenson": 69, "copyright": 69, "googl": 69, "inc": 69, "javier": 69, "lopez": 69, "pena": 69, "_coerce_map_from_": 69, "christian": 69, "stump": 69, "_hom_": 69, "_subgroup_constructor": 69, "okai": [69, 72], "ree": [69, 72], "explicit": [69, 72], "permgroup": [69, 71], "canonic": [69, 70, 72], "duplic": 69, "current_randst": 69, "set_seed_gap": 69, "derivedseri": 69, "generatorssmallest": 69, "permutationgroup_act": 69, "setpartit": 69, "regular": [69, 72], "isomorphismfpgroupbygener": 69, "generaldihedralgroup": [69, 72], "m12": 69, "behaviour": 69, "clearli": 69, "is_vertex_transit": 69, "ag": 69, "suppos": 69, "v_1": 69, "v_n": 69, "rho_1": 69, "rho_n": 69, "suffici": 69, "character_table_valu": 69, "spkg": 69, "resolut": 69, "2004": 69, "1077": 69, "1118": 69, "hamilton": 69, "nuigalwai": 69, "primer": 69, "ucdavi": 69, "edu": 69, "0706": 69, "0549": 69, "statement": 69, "execut": 69, "dicyclicgroup": [69, 72], "matter": 69, "junk": 69, "set_random_se": 69, "cl": 69, "correspondingli": 69, "relationship": 69, "strng": 69, "permutationgroupfunctor": 69, "place": 69, "consequ": 69, "across": 69, "within": 69, "outer": 69, "versu": 69, "instruct": 69, "sophist": 69, "gon": 69, "straight": 69, "studi": 69, "quarter_turn": 69, "rc": 69, "lc": 69, "rc_sort": 69, "lc_sort": 69, "tetrahedron": 69, "face_turn": 69, "rob": [69, 72], "beezer": [69, 72], "choos": 69, "iota1": 69, "iota2": 69, "pr1": [69, 71], "pr2": 69, "p8": 69, "65784756654489600": 69, "sym": 69, "a4": 69, "neither": 69, "irredund": 69, "nor": [69, 72], "proven": [69, 72], "linux": 69, "solari": 69, "identif": 69, "primitivegroup": [69, 72], "warn": 69, "meth": 69, "33831": 69, "has_regular_subgroup": 69, "return_group": 69, "isn": 69, "petersen": 69, "rtimes_": 69, "thoma": [69, 76, 77], "wood": 69, "shiva": 69, "publish": 69, "1980": 69, "tell": 69, "c_5": 69, "shown": [69, 72, 75], "kevin": [69, 72], "halasz": [69, 72], "h_7": 69, "s_5": [69, 70], "enough": [69, 72], "strict": 69, "s_4": [69, 72], "proper": 69, "istransit": 69, "rec": 69, "shortnam": 69, "sg": 69, "bf": 69, "breadth": 69, "df": 69, "completegraph": [69, 75], "sometim": [69, 75], "molienseri": 69, "15817": 69, "s4m": 69, "nh": 69, "isnorm": 69, "member": 69, "onpoint": 69, "ontupl": 69, "onset": 69, "onpair": 69, "onsetsset": 69, "onsetsdisjointset": 69, "onsetstupl": 69, "ontuplesset": 69, "ontuplestupl": 69, "On": 69, "union": 69, "nonstandard": 69, "orb": 69, "h_k": 69, "representativeact": 69, "skip": 69, "benefici": 69, "far": [69, 72], "h_": 69, "n_": 69, "semidirectproduct": 69, "permutationgroupmorphism_im_gen": [69, 71], "successfulli": 69, "sake": 69, "c2000": 69, "permutationgroupmorph": [69, 71], "smallest_moved_point": 69, "s10": 69, "30240": 69, "base_of_group": 69, "po": 69, "_1": 69, "_2": 69, "_d": 69, "_i": 69, "g_0": 69, "supset": 69, "transitivegroup": [69, 72], "contigu": 69, "vast": 69, "Its": 69, "minut": 69, "commod": 69, "hardwar": 69, "30030": 69, "twice": [69, 72], "exhibit": 69, "coprim": 69, "sylowsubgroup": 69, "d_8": 69, "1728": 69, "src": 69, "hap_decor": 69, "foo": 69, "load_hap": 69, "synonym": 70, "27234": 70, "43252003274489856000": 70, "srang": 70, "permgroup_el": 70, "rationalfield": 70, "sigma": [70, 76, 77], "cycle_str": 70, "singleton": 70, "cycle_tupl": 70, "cycle_typ": 70, "as_list": 70, "is_list": 70, "p_libgap": 70, "has_desc": 70, "_test_has_desc": 70, "swap": 70, "contribut": 70, "sum_c": 70, "symmetricgroupel": [70, 72], "absolute_length": 70, "shortest": 70, "absolute_l": 70, "has_left_desc": 70, "from_reduced_word": 70, "is_permutationgroupel": 70, "make_permgroup_el": 70, "unpickl": 70, "pre": 70, "make_permgroup_element_v2": 70, "permgroup_morph": 71, "28324": 71, "splitting_field": 71, "permutationgroupmorphism_from_gap": 71, "programm": 71, "usag": 71, "domain_group": 71, "range_group": 71, "gap_hom_command": 71, "permutationgroupmorphism_id": 71, "is_permutationgroupmorph": 71, "s_x": 72, "a_x": 72, "dih": 72, "4m": 72, "splitmetacyclicgroup": 72, "semidihedralgroup": 72, "centr": 72, "suzukigroup": 72, "b_2": 72, "2k": 72, "sz": 72, "complexreflectiongroup": 72, "g_m": 72, "smallpermutationgroup": 72, "permgp": 72, "permgroup_nam": 72, "permutationgroup_symalt": 72, "thereof": 72, "permutationgroup_uniqu": 72, "adjac": 72, "transposit": 72, "mn": 72, "29160": 72, "join": 72, "648": 72, "61440": 72, "complex_reflection_group": 72, "nm": 72, "as_abeliangroup": 72, "fewer": 72, "d_6": 72, "a_4": 72, "c_4": 72, "con": 72, "4096": 72, "half": 72, "unlik": 72, "240": 72, "enter": 72, "nonident": 72, "ba": 72, "bc": 72, "cb": 72, "broken": 72, "c_m": 72, "themselv": 72, "c34": 72, "c46": 72, "c14": 72, "c17": 72, "427680": 72, "jankogroup": 72, "janko": 72, "j1": 72, "j2": 72, "j4": 72, "among": 72, "internet": 72, "175560": 72, "95040": 72, "permutationgroup_plg": 72, "ground": 72, "permutationgroup_pug": 72, "ramif": 72, "hurwitz": 72, "pmod": 72, "born": 72, "equivari": 72, "conj": 72, "mi": 72, "pi_i": 72, "irrrepn": 72, "pi_1": 72, "pi_n": 72, "ami": 72, "ksir": 72, "roger": 72, "vogel": 72, "riemann": 72, "roch": 72, "preprint": 72, "smallish": 72, "editor": 72, "shaska": 72, "lectur": 72, "worldscientif": 72, "25920": 72, "matrix_degre": 72, "field_of_definit": 72, "gaperror": 72, "primitivegroupsiter": 72, "primitivegroupsal": 72, "disjointunionenumeratedset": 72, "facad": 72, "__iter__": 72, "primitivegroupsofdegre": 72, "agl": 72, "ji": 72, "manner": 72, "neg_on": 72, "semidihedr": 72, "sent": 72, "notabl": 72, "gor1980": 72, "gap_id": 72, "smallgroup": 72, "sgl": 72, "identifi": 72, "later": 72, "releas": 72, "numgp": 72, "numbersmallgroup": 72, "gap_small_group": 72, "pcgroup": 72, "168": 72, "metacycl": 72, "Be": 72, "awar": 72, "possess": 72, "strictli": 72, "speak": 72, "58": 72, "59": 72, "62": 72, "56": 72, "51": 72, "57": 72, "32537600": 72, "group_of_lie_typ": 72, "ree_group": 72, "suzukisporadicgroup": 72, "sporad": 72, "suzukisporad": 72, "1782": 72, "40320": 72, "s8": 72, "advantag": 72, "featur": 72, "symmetricgroupalgebra": 72, "cellular": 72, "semigroup": 72, "conjugacy_classes_iter": 72, "major_index": 72, "gadget": 72, "young_subgroup": 72, "comp": 72, "young": 72, "transitivegroupsal": 72, "transitivegroupsofdegre": 72, "301": 72, "vincent": 74, "delecroix": 74, "2014": 74, "symgp_conjugacy_class": 74, "permutationsconjugacyclass": 74, "symmetricgroupconjugacyclassmixin": 74, "symmetricgroupconjugacyclass": 74, "mixin": 74, "conjugacy_class_iter": 74, "conjugacy_class_s": 74, "abcdef": 74, "default_repres": 74, "lambda_1": 74, "lambda_2": 74, "lambda_": 74, "abbrevi": 75, "raag": 75, "partial": 75, "artingroup": 75, "cohomologyraag": 75, "combinatorialfreemodul": 75, "wedg": 75, "e_j": 75, "cartier": 75, "foata": 75, "cq2019": 75, "cohomologyraagel": 75, "algebra_gener": 75, "cyclegraph": 75, "degree_on_basi": 75, "cliqu": 75, "one_basi": 75, "rightangledartingroup": 75, "g_v": 75, "g_u": 75, "notin": 75, "rich": 75, "despit": 75, "dro1987": 75, "bb1997": 75, "fp_2": 75, "freeli": 75, "cocompactli": 75, "cat": 75, "biautomat": 75, "v_i": 75, "v_j": 75, "s_j": 75, "cp2001": 75, "vw1994": 75, "gather": 75, "v0": 75, "v1": 75, "v2": 75, "v3": 75, "cha2006": 75, "artin_group": 75, "angled_artin_group": 75, "artingroupel": 75, "v4": 75, "vx": 75, "vy": 75, "vzeta": 75, "one_el": 75, "circ": [76, 77], "psi_": [76, 77], "elementwis": [76, 77], "psi_0": [76, 77], "psi_1": [76, 77], "semimonomialtransformationgroup": [76, 77], "feulner": [76, 77], "15576": 76, "dissolv": 76, "semimonomial_transform": [76, 77], "autom": [76, 77], "get_autom": 76, "get_perm": 76, "get_v": 76, "get_v_invers": 76, "invert_v": 76, "unchang": 76, "semimonomial_transformation_group": 77, "semimonomialactionmat": 77, "semimonomialactionvec": 77, "v_0": 77, "v_": 77, "phi_0": 77, "phi_": 77}, "objects": {"sage.groups.abelian_gps": [[1, 0, 0, "-", "abelian_aut"], [2, 0, 0, "-", "abelian_group"], [3, 0, 0, "-", "abelian_group_element"], [4, 0, 0, "-", "abelian_group_gap"], [5, 0, 0, "-", "abelian_group_morphism"], [6, 0, 0, "-", "dual_abelian_group"], [7, 0, 0, "-", "dual_abelian_group_element"], [8, 0, 0, "-", "element_base"], [9, 0, 0, "-", "values"]], "sage.groups.abelian_gps.abelian_aut": [[1, 1, 1, "", "AbelianGroupAutomorphism"], [1, 1, 1, "", "AbelianGroupAutomorphismGroup"], [1, 1, 1, "", "AbelianGroupAutomorphismGroup_gap"], [1, 1, 1, "", "AbelianGroupAutomorphismGroup_subgroup"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphism": [[1, 2, 1, "", "matrix"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup": [[1, 3, 1, "", "Element"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap": [[1, 3, 1, "", "Element"], [1, 2, 1, "", "covering_matrix_ring"], [1, 2, 1, "", "domain"], [1, 2, 1, "", "is_subgroup_of"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_subgroup": [[1, 3, 1, "", "Element"]], "sage.groups.abelian_gps.abelian_group": [[2, 4, 1, "", "AbelianGroup"], [2, 1, 1, "", "AbelianGroup_class"], [2, 1, 1, "", "AbelianGroup_subgroup"], [2, 4, 1, "", "is_AbelianGroup"], [2, 4, 1, "", "word_problem"]], "sage.groups.abelian_gps.abelian_group.AbelianGroup_class": [[2, 3, 1, "", "Element"], [2, 3, 1, "", "Subgroup"], [2, 2, 1, "", "cardinality"], [2, 2, 1, "", "dual_group"], [2, 2, 1, "", "elementary_divisors"], [2, 2, 1, "", "exponent"], [2, 2, 1, "", "gen"], [2, 2, 1, "", "gens"], [2, 2, 1, "", "gens_orders"], [2, 2, 1, "", "identity"], [2, 2, 1, "", "invariants"], [2, 2, 1, "", "is_commutative"], [2, 2, 1, "", "is_cyclic"], [2, 2, 1, "", "is_isomorphic"], [2, 2, 1, "", "is_subgroup"], [2, 2, 1, "", "is_trivial"], [2, 2, 1, "", "list"], [2, 2, 1, "", "ngens"], [2, 2, 1, "", "number_of_subgroups"], [2, 2, 1, "", "order"], [2, 2, 1, "", "permutation_group"], [2, 2, 1, "", "random_element"], [2, 2, 1, "", "subgroup"], [2, 2, 1, "", "subgroup_reduced"], [2, 2, 1, "", "subgroups"], [2, 2, 1, "", "torsion_subgroup"]], "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup": [[2, 2, 1, "", "ambient_group"], [2, 2, 1, "", "equals"], [2, 2, 1, "", "gen"], [2, 2, 1, "", "gens"]], "sage.groups.abelian_gps.abelian_group_element": [[3, 1, 1, "", "AbelianGroupElement"], [3, 4, 1, "", "is_AbelianGroupElement"]], "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement": [[3, 2, 1, "", "as_permutation"], [3, 2, 1, "", "word_problem"]], "sage.groups.abelian_gps.abelian_group_gap": [[4, 1, 1, "", "AbelianGroupElement_gap"], [4, 1, 1, "", "AbelianGroupElement_polycyclic"], [4, 1, 1, "", "AbelianGroupGap"], [4, 1, 1, "", "AbelianGroupQuotient_gap"], [4, 1, 1, "", "AbelianGroupSubgroup_gap"], [4, 1, 1, "", "AbelianGroup_gap"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap": [[4, 2, 1, "", "exponents"], [4, 2, 1, "", "order"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_polycyclic": [[4, 2, 1, "", "exponents"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap": [[4, 2, 1, "", "cover"], [4, 2, 1, "", "lift"], [4, 2, 1, "", "natural_homomorphism"], [4, 2, 1, "", "relations"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap": [[4, 2, 1, "", "lift"], [4, 2, 1, "", "retract"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap": [[4, 3, 1, "", "Element"], [4, 2, 1, "", "all_subgroups"], [4, 2, 1, "", "aut"], [4, 2, 1, "", "automorphism_group"], [4, 2, 1, "", "elementary_divisors"], [4, 2, 1, "", "exponent"], [4, 2, 1, "", "gens_orders"], [4, 2, 1, "", "identity"], [4, 2, 1, "", "is_subgroup_of"], [4, 2, 1, "", "is_trivial"], [4, 2, 1, "", "quotient"], [4, 2, 1, "", "subgroup"]], "sage.groups.abelian_gps.abelian_group_morphism": [[5, 1, 1, "", "AbelianGroupMap"], [5, 1, 1, "", "AbelianGroupMorphism"], [5, 4, 1, "", "is_AbelianGroupMorphism"]], "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism": [[5, 2, 1, "", "image"], [5, 2, 1, "", "kernel"]], "sage.groups.abelian_gps.dual_abelian_group": [[6, 1, 1, "", "DualAbelianGroup_class"], [6, 4, 1, "", "is_DualAbelianGroup"]], "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class": [[6, 3, 1, "", "Element"], [6, 2, 1, "", "base_ring"], [6, 2, 1, "", "gen"], [6, 2, 1, "", "gens"], [6, 2, 1, "", "gens_orders"], [6, 2, 1, "", "group"], [6, 2, 1, "", "invariants"], [6, 2, 1, "", "is_commutative"], [6, 2, 1, "", "list"], [6, 2, 1, "", "ngens"], [6, 2, 1, "", "order"], [6, 2, 1, "", "random_element"]], "sage.groups.abelian_gps.dual_abelian_group_element": [[7, 1, 1, "", "DualAbelianGroupElement"], [7, 4, 1, "", "is_DualAbelianGroupElement"]], "sage.groups.abelian_gps.dual_abelian_group_element.DualAbelianGroupElement": [[7, 2, 1, "", "word_problem"]], "sage.groups.abelian_gps.element_base": [[8, 1, 1, "", "AbelianGroupElementBase"]], "sage.groups.abelian_gps.element_base.AbelianGroupElementBase": [[8, 2, 1, "", "exponents"], [8, 2, 1, "", "is_trivial"], [8, 2, 1, "", "list"], [8, 2, 1, "", "multiplicative_order"], [8, 2, 1, "", "order"]], "sage.groups.abelian_gps.values": [[9, 4, 1, "", "AbelianGroupWithValues"], [9, 1, 1, "", "AbelianGroupWithValuesElement"], [9, 1, 1, "", "AbelianGroupWithValuesEmbedding"], [9, 1, 1, "", "AbelianGroupWithValues_class"]], "sage.groups.abelian_gps.values.AbelianGroupWithValuesElement": [[9, 2, 1, "", "value"]], "sage.groups.abelian_gps.values.AbelianGroupWithValues_class": [[9, 3, 1, "", "Element"], [9, 2, 1, "", "gen"], [9, 2, 1, "", "gens_values"], [9, 2, 1, "", "values_embedding"], [9, 2, 1, "", "values_group"]], "sage.groups.additive_abelian": [[10, 0, 0, "-", "additive_abelian_group"], [11, 0, 0, "-", "additive_abelian_wrapper"]], "sage.groups.additive_abelian.additive_abelian_group": [[10, 4, 1, "", "AdditiveAbelianGroup"], [10, 1, 1, "", "AdditiveAbelianGroupElement"], [10, 1, 1, "", "AdditiveAbelianGroup_class"], [10, 1, 1, "", "AdditiveAbelianGroup_fixed_gens"], [10, 4, 1, "", "cover_and_relations_from_invariants"]], "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class": [[10, 3, 1, "", "Element"], [10, 2, 1, "", "exponent"], [10, 2, 1, "", "is_cyclic"], [10, 2, 1, "", "is_multiplicative"], [10, 2, 1, "", "order"], [10, 2, 1, "", "short_name"]], "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens": [[10, 2, 1, "", "gens"], [10, 2, 1, "", "identity"], [10, 2, 1, "", "permutation_group"]], "sage.groups.additive_abelian.additive_abelian_wrapper": [[11, 1, 1, "", "AdditiveAbelianGroupWrapper"], [11, 1, 1, "", "AdditiveAbelianGroupWrapperElement"], [11, 1, 1, "", "UnwrappingMorphism"], [11, 4, 1, "", "basis_from_generators"]], "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper": [[11, 3, 1, "", "Element"], [11, 2, 1, "", "discrete_exp"], [11, 2, 1, "", "discrete_log"], [11, 2, 1, "", "from_generators"], [11, 2, 1, "", "generator_orders"], [11, 2, 1, "", "torsion_subgroup"], [11, 2, 1, "", "universe"]], "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapperElement": [[11, 2, 1, "", "element"]], "sage.groups.affine_gps": [[12, 0, 0, "-", "affine_group"], [13, 0, 0, "-", "euclidean_group"], [14, 0, 0, "-", "group_element"]], "sage.groups.affine_gps.affine_group": [[12, 1, 1, "", "AffineGroup"]], "sage.groups.affine_gps.affine_group.AffineGroup": [[12, 3, 1, "", "Element"], [12, 2, 1, "", "cardinality"], [12, 2, 1, "", "degree"], [12, 2, 1, "", "linear"], [12, 2, 1, "", "linear_space"], [12, 2, 1, "", "matrix_space"], [12, 2, 1, "", "random_element"], [12, 2, 1, "", "reflection"], [12, 2, 1, "", "some_elements"], [12, 2, 1, "", "translation"], [12, 2, 1, "", "vector_space"]], "sage.groups.affine_gps.euclidean_group": [[13, 1, 1, "", "EuclideanGroup"]], "sage.groups.affine_gps.euclidean_group.EuclideanGroup": [[13, 2, 1, "", "random_element"]], "sage.groups.affine_gps.group_element": [[14, 1, 1, "", "AffineGroupElement"]], "sage.groups.affine_gps.group_element.AffineGroupElement": [[14, 2, 1, "", "A"], [14, 2, 1, "", "b"], [14, 2, 1, "", "list"], [14, 2, 1, "", "matrix"]], "sage.groups": [[15, 0, 0, "-", "braid"], [16, 0, 0, "-", "cactus_group"], [17, 0, 0, "-", "class_function"], [18, 0, 0, "-", "conjugacy_classes"], [19, 0, 0, "-", "cubic_braid"], [20, 0, 0, "-", "finitely_presented"], [21, 0, 0, "-", "finitely_presented_named"], [22, 0, 0, "-", "free_group"], [23, 0, 0, "-", "generic"], [24, 0, 0, "-", "group"], [25, 0, 0, "-", "group_exp"], [26, 0, 0, "-", "group_semidirect_product"], [27, 0, 0, "-", "groups_catalog"], [28, 0, 0, "-", "indexed_free_group"], [29, 0, 0, "-", "kernel_subgroup"], [30, 0, 0, "-", "libgap_group"], [31, 0, 0, "-", "libgap_mixin"], [32, 0, 0, "-", "libgap_morphism"], [33, 0, 0, "-", "libgap_wrapper"], [61, 0, 0, "-", "pari_group"], [75, 0, 0, "-", "raag"]], "sage.groups.braid": [[15, 1, 1, "", "Braid"], [15, 4, 1, "", "BraidGroup"], [15, 1, 1, "", "BraidGroup_class"], [15, 1, 1, "", "MappingClassGroupAction"], [15, 1, 1, "", "RightQuantumWord"]], "sage.groups.braid.Braid": [[15, 2, 1, "", "LKB_matrix"], [15, 2, 1, "", "TL_matrix"], [15, 2, 1, "", "alexander_polynomial"], [15, 2, 1, "", "annular_khovanov_complex"], [15, 2, 1, "", "annular_khovanov_homology"], [15, 2, 1, "", "burau_matrix"], [15, 2, 1, "", "centralizer"], [15, 2, 1, "", "colored_jones_polynomial"], [15, 2, 1, "", "components_in_closure"], [15, 2, 1, "", "conjugating_braid"], [15, 2, 1, "", "deformed_burau_matrix"], [15, 2, 1, "", "gcd"], [15, 2, 1, "", "is_conjugated"], [15, 2, 1, "", "is_periodic"], [15, 2, 1, "", "is_pseudoanosov"], [15, 2, 1, "", "is_reducible"], [15, 2, 1, "", "jones_polynomial"], [15, 2, 1, "", "lcm"], [15, 2, 1, "", "left_normal_form"], [15, 2, 1, "", "links_gould_matrix"], [15, 2, 1, "", "links_gould_polynomial"], [15, 2, 1, "", "markov_trace"], [15, 2, 1, "", "mirror_image"], [15, 2, 1, "", "permutation"], [15, 2, 1, "", "plot"], [15, 2, 1, "", "plot3d"], [15, 2, 1, "", "pure_conjugating_braid"], [15, 2, 1, "", "reverse"], [15, 2, 1, "", "right_normal_form"], [15, 2, 1, "", "rigidity"], [15, 2, 1, "", "sliding_circuits"], [15, 2, 1, "", "strands"], [15, 2, 1, "", "super_summit_set"], [15, 2, 1, "", "thurston_type"], [15, 2, 1, "", "tropical_coordinates"], [15, 2, 1, "", "ultra_summit_set"]], "sage.groups.braid.BraidGroup_class": [[15, 3, 1, "", "Element"], [15, 2, 1, "", "TL_basis_with_drain"], [15, 2, 1, "", "TL_representation"], [15, 2, 1, "", "an_element"], [15, 2, 1, "", "as_permutation_group"], [15, 2, 1, "", "cardinality"], [15, 2, 1, "", "dimension_of_TL_space"], [15, 2, 1, "", "mapping_class_action"], [15, 2, 1, "", "mirror_involution"], [15, 2, 1, "", "order"], [15, 2, 1, "", "some_elements"], [15, 2, 1, "", "strands"]], "sage.groups.braid.RightQuantumWord": [[15, 2, 1, "", "eps"], [15, 2, 1, "", "reduced_word"], [15, 2, 1, "", "tuples"]], "sage.groups.cactus_group": [[16, 1, 1, "", "CactusGroup"], [16, 1, 1, "", "PureCactusGroup"]], "sage.groups.cactus_group.CactusGroup": [[16, 1, 1, "", "Element"], [16, 2, 1, "", "bilinear_form"], [16, 2, 1, "", "gen"], [16, 2, 1, "", "gens"], [16, 2, 1, "", "geometric_representation_generators"], [16, 2, 1, "", "group_generators"], [16, 2, 1, "", "n"], [16, 2, 1, "", "one"], [16, 2, 1, "", "random_element"], [16, 2, 1, "", "right_angled_coxeter_group"]], "sage.groups.cactus_group.CactusGroup.Element": [[16, 2, 1, "", "to_matrix"], [16, 2, 1, "", "to_permutation"]], "sage.groups.cactus_group.PureCactusGroup": [[16, 2, 1, "", "gen"], [16, 2, 1, "", "gens"], [16, 2, 1, "", "n"]], "sage.groups.class_function": [[17, 4, 1, "", "ClassFunction"], [17, 1, 1, "", "ClassFunction_gap"], [17, 1, 1, "", "ClassFunction_libgap"]], "sage.groups.class_function.ClassFunction_gap": [[17, 2, 1, "", "adams_operation"], [17, 2, 1, "", "central_character"], [17, 2, 1, "", "decompose"], [17, 2, 1, "", "degree"], [17, 2, 1, "", "determinant_character"], [17, 2, 1, "", "domain"], [17, 2, 1, "", "exterior_power"], [17, 2, 1, "", "induct"], [17, 2, 1, "", "irreducible_constituents"], [17, 2, 1, "", "is_irreducible"], [17, 2, 1, "", "norm"], [17, 2, 1, "", "restrict"], [17, 2, 1, "", "scalar_product"], [17, 2, 1, "", "symmetric_power"], [17, 2, 1, "", "tensor_product"], [17, 2, 1, "", "values"]], "sage.groups.class_function.ClassFunction_libgap": [[17, 2, 1, "", "adams_operation"], [17, 2, 1, "", "central_character"], [17, 2, 1, "", "decompose"], [17, 2, 1, "", "degree"], [17, 2, 1, "", "determinant_character"], [17, 2, 1, "", "domain"], [17, 2, 1, "", "exterior_power"], [17, 2, 1, "", "gap"], [17, 2, 1, "", "induct"], [17, 2, 1, "", "irreducible_constituents"], [17, 2, 1, "", "is_irreducible"], [17, 2, 1, "", "norm"], [17, 2, 1, "", "restrict"], [17, 2, 1, "", "scalar_product"], [17, 2, 1, "", "symmetric_power"], [17, 2, 1, "", "tensor_product"], [17, 2, 1, "", "values"]], "sage.groups.conjugacy_classes": [[18, 1, 1, "", "ConjugacyClass"], [18, 1, 1, "", "ConjugacyClassGAP"]], "sage.groups.conjugacy_classes.ConjugacyClass": [[18, 2, 1, "", "an_element"], [18, 2, 1, "", "is_rational"], [18, 2, 1, "", "is_real"], [18, 2, 1, "", "list"], [18, 2, 1, "", "representative"], [18, 2, 1, "", "set"]], "sage.groups.conjugacy_classes.ConjugacyClassGAP": [[18, 2, 1, "", "cardinality"], [18, 2, 1, "", "set"]], "sage.groups.cubic_braid": [[19, 4, 1, "", "AssionGroupS"], [19, 4, 1, "", "AssionGroupU"], [19, 1, 1, "", "CubicBraidElement"], [19, 1, 1, "", "CubicBraidGroup"]], "sage.groups.cubic_braid.CubicBraidElement": [[19, 2, 1, "", "braid"], [19, 2, 1, "", "burau_matrix"]], "sage.groups.cubic_braid.CubicBraidGroup": [[19, 3, 1, "", "Element"], [19, 2, 1, "", "as_classical_group"], [19, 2, 1, "", "as_matrix_group"], [19, 2, 1, "", "as_permutation_group"], [19, 2, 1, "", "as_reflection_group"], [19, 2, 1, "", "braid_group"], [19, 2, 1, "", "cardinality"], [19, 2, 1, "", "centralizing_element"], [19, 2, 1, "", "classical_invariant_form"], [19, 2, 1, "", "codegrees"], [19, 2, 1, "", "cubic_braid_subgroup"], [19, 2, 1, "", "degrees"], [19, 2, 1, "", "index_set"], [19, 2, 1, "", "is_finite"], [19, 2, 1, "", "order"], [19, 2, 1, "", "simple_reflections"], [19, 2, 1, "", "strands"], [19, 1, 1, "", "type"]], "sage.groups.cubic_braid.CubicBraidGroup.type": [[19, 3, 1, "", "AssionS"], [19, 3, 1, "", "AssionU"], [19, 3, 1, "", "Coxeter"]], "sage.groups.finitely_presented": [[20, 1, 1, "", "FinitelyPresentedGroup"], [20, 1, 1, "", "FinitelyPresentedGroupElement"], [20, 1, 1, "", "GroupMorphismWithGensImages"], [20, 1, 1, "", "RewritingSystem"], [20, 4, 1, "", "wrap_FpGroup"]], "sage.groups.finitely_presented.FinitelyPresentedGroup": [[20, 3, 1, "", "Element"], [20, 2, 1, "", "abelian_invariants"], [20, 2, 1, "", "alexander_matrix"], [20, 2, 1, "", "as_permutation_group"], [20, 2, 1, "", "cardinality"], [20, 2, 1, "", "direct_product"], [20, 2, 1, "", "epimorphisms"], [20, 2, 1, "", "free_group"], [20, 2, 1, "", "order"], [20, 2, 1, "", "relations"], [20, 2, 1, "", "rewriting_system"], [20, 2, 1, "", "semidirect_product"], [20, 2, 1, "", "simplification_isomorphism"], [20, 2, 1, "", "simplified"], [20, 2, 1, "", "structure_description"]], "sage.groups.finitely_presented.FinitelyPresentedGroupElement": [[20, 2, 1, "", "Tietze"]], "sage.groups.finitely_presented.RewritingSystem": [[20, 2, 1, "", "finitely_presented_group"], [20, 2, 1, "", "free_group"], [20, 2, 1, "", "gap"], [20, 2, 1, "", "is_confluent"], [20, 2, 1, "", "make_confluent"], [20, 2, 1, "", "reduce"], [20, 2, 1, "", "rules"]], "sage.groups.finitely_presented_named": [[21, 4, 1, "", "AlternatingPresentation"], [21, 4, 1, "", "BinaryDihedralPresentation"], [21, 4, 1, "", "CactusPresentation"], [21, 4, 1, "", "CyclicPresentation"], [21, 4, 1, "", "DiCyclicPresentation"], [21, 4, 1, "", "DihedralPresentation"], [21, 4, 1, "", "FinitelyGeneratedAbelianPresentation"], [21, 4, 1, "", "FinitelyGeneratedHeisenbergPresentation"], [21, 4, 1, "", "KleinFourPresentation"], [21, 4, 1, "", "QuaternionPresentation"], [21, 4, 1, "", "SymmetricPresentation"]], "sage.groups.free_group": [[22, 4, 1, "", "FreeGroup"], [22, 1, 1, "", "FreeGroupElement"], [22, 1, 1, "", "FreeGroup_class"], [22, 4, 1, "", "is_FreeGroup"], [22, 4, 1, "", "wrap_FreeGroup"]], "sage.groups.free_group.FreeGroupElement": [[22, 2, 1, "", "Tietze"], [22, 2, 1, "", "fox_derivative"], [22, 2, 1, "", "syllables"]], "sage.groups.free_group.FreeGroup_class": [[22, 3, 1, "", "Element"], [22, 2, 1, "", "abelian_invariants"], [22, 2, 1, "", "quotient"], [22, 2, 1, "", "rank"]], "sage.groups.generic": [[23, 4, 1, "", "bsgs"], [23, 4, 1, "", "discrete_log"], [23, 4, 1, "", "discrete_log_generic"], [23, 4, 1, "", "discrete_log_lambda"], [23, 4, 1, "", "discrete_log_rho"], [23, 4, 1, "", "linear_relation"], [23, 4, 1, "", "merge_points"], [23, 4, 1, "", "multiple"], [23, 1, 1, "", "multiples"], [23, 4, 1, "", "order_from_bounds"], [23, 4, 1, "", "order_from_multiple"], [23, 4, 1, "", "structure_description"]], "sage.groups.generic.multiples": [[23, 2, 1, "", "next"]], "sage.groups.group": [[24, 1, 1, "", "AbelianGroup"], [24, 1, 1, "", "AlgebraicGroup"], [24, 1, 1, "", "FiniteGroup"], [24, 1, 1, "", "Group"], [24, 4, 1, "", "is_Group"]], "sage.groups.group.AbelianGroup": [[24, 2, 1, "", "is_abelian"]], "sage.groups.group.FiniteGroup": [[24, 2, 1, "", "is_finite"]], "sage.groups.group.Group": [[24, 2, 1, "", "is_abelian"], [24, 2, 1, "", "is_commutative"], [24, 2, 1, "", "is_finite"], [24, 2, 1, "", "is_multiplicative"], [24, 2, 1, "", "order"], [24, 2, 1, "", "quotient"]], "sage.groups.group_exp": [[25, 1, 1, "", "GroupExp"], [25, 1, 1, "", "GroupExpElement"], [25, 1, 1, "", "GroupExp_Class"]], "sage.groups.group_exp.GroupExp_Class": [[25, 3, 1, "", "Element"], [25, 2, 1, "", "an_element"], [25, 2, 1, "", "group_generators"], [25, 2, 1, "", "one"], [25, 2, 1, "", "product"]], "sage.groups.group_semidirect_product": [[26, 1, 1, "", "GroupSemidirectProduct"], [26, 1, 1, "", "GroupSemidirectProductElement"]], "sage.groups.group_semidirect_product.GroupSemidirectProduct": [[26, 3, 1, "", "Element"], [26, 2, 1, "", "act_to_right"], [26, 2, 1, "", "construction"], [26, 2, 1, "", "group_generators"], [26, 2, 1, "", "one"], [26, 2, 1, "", "opposite_semidirect_product"], [26, 2, 1, "", "product"]], "sage.groups.group_semidirect_product.GroupSemidirectProductElement": [[26, 2, 1, "", "to_opposite"]], "sage.groups.indexed_free_group": [[28, 1, 1, "", "IndexedFreeAbelianGroup"], [28, 1, 1, "", "IndexedFreeGroup"], [28, 1, 1, "", "IndexedGroup"]], "sage.groups.indexed_free_group.IndexedFreeAbelianGroup": [[28, 1, 1, "", "Element"], [28, 2, 1, "", "gen"], [28, 2, 1, "", "one"]], "sage.groups.indexed_free_group.IndexedFreeGroup": [[28, 1, 1, "", "Element"], [28, 2, 1, "", "gen"], [28, 2, 1, "", "one"]], "sage.groups.indexed_free_group.IndexedFreeGroup.Element": [[28, 2, 1, "", "length"], [28, 2, 1, "", "to_word_list"]], "sage.groups.indexed_free_group.IndexedGroup": [[28, 2, 1, "", "gens"], [28, 2, 1, "", "group_generators"], [28, 2, 1, "", "order"], [28, 2, 1, "", "rank"]], "sage.groups.kernel_subgroup": [[29, 1, 1, "", "KernelSubgroup"]], "sage.groups.kernel_subgroup.KernelSubgroup": [[29, 1, 1, "", "Element"], [29, 2, 1, "", "ambient"], [29, 2, 1, "", "defining_morphism"], [29, 2, 1, "", "gens"], [29, 2, 1, "", "lift"], [29, 2, 1, "", "retract"]], "sage.groups.libgap_group": [[30, 1, 1, "", "GroupLibGAP"]], "sage.groups.libgap_group.GroupLibGAP": [[30, 3, 1, "", "Element"]], "sage.groups.libgap_mixin": [[31, 1, 1, "", "GroupMixinLibGAP"]], "sage.groups.libgap_mixin.GroupMixinLibGAP": [[31, 2, 1, "", "cardinality"], [31, 2, 1, "", "center"], [31, 2, 1, "", "character"], [31, 2, 1, "", "character_table"], [31, 2, 1, "", "class_function"], [31, 2, 1, "", "conjugacy_class"], [31, 2, 1, "", "conjugacy_classes"], [31, 2, 1, "", "conjugacy_classes_representatives"], [31, 2, 1, "", "intersection"], [31, 2, 1, "", "irreducible_characters"], [31, 2, 1, "", "is_abelian"], [31, 2, 1, "", "is_finite"], [31, 2, 1, "", "is_isomorphic"], [31, 2, 1, "", "is_nilpotent"], [31, 2, 1, "", "is_p_group"], [31, 2, 1, "", "is_perfect"], [31, 2, 1, "", "is_polycyclic"], [31, 2, 1, "", "is_simple"], [31, 2, 1, "", "is_solvable"], [31, 2, 1, "", "is_supersolvable"], [31, 2, 1, "", "list"], [31, 2, 1, "", "order"], [31, 2, 1, "", "random_element"], [31, 2, 1, "", "trivial_character"]], "sage.groups.libgap_morphism": [[32, 1, 1, "", "GroupHomset_libgap"], [32, 1, 1, "", "GroupMorphism_libgap"]], "sage.groups.libgap_morphism.GroupHomset_libgap": [[32, 3, 1, "", "Element"], [32, 2, 1, "", "natural_map"]], "sage.groups.libgap_morphism.GroupMorphism_libgap": [[32, 2, 1, "", "gap"], [32, 2, 1, "", "image"], [32, 2, 1, "", "kernel"], [32, 2, 1, "", "lift"], [32, 2, 1, "", "preimage"], [32, 2, 1, "", "pushforward"], [32, 2, 1, "", "section"]], "sage.groups.libgap_wrapper": [[33, 1, 1, "", "ElementLibGAP"], [33, 1, 1, "", "ParentLibGAP"]], "sage.groups.libgap_wrapper.ElementLibGAP": [[33, 2, 1, "", "gap"], [33, 2, 1, "", "inverse"], [33, 2, 1, "", "is_conjugate"], [33, 2, 1, "", "is_one"], [33, 2, 1, "", "multiplicative_order"], [33, 2, 1, "", "normalizer"], [33, 2, 1, "", "nth_roots"], [33, 2, 1, "", "order"]], "sage.groups.libgap_wrapper.ParentLibGAP": [[33, 2, 1, "", "ambient"], [33, 2, 1, "", "gap"], [33, 2, 1, "", "gen"], [33, 2, 1, "", "generators"], [33, 2, 1, "", "gens"], [33, 2, 1, "", "is_subgroup"], [33, 2, 1, "", "ngens"], [33, 2, 1, "", "one"], [33, 2, 1, "", "subgroup"]], "sage.groups.lie_gps": [[34, 0, 0, "-", "nilpotent_lie_group"]], "sage.groups.lie_gps.nilpotent_lie_group": [[34, 1, 1, "", "NilpotentLieGroup"]], "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup": [[34, 1, 1, "", "Element"], [34, 2, 1, "", "adjoint"], [34, 2, 1, "", "chart_exp1"], [34, 2, 1, "", "chart_exp2"], [34, 2, 1, "", "conjugation"], [34, 2, 1, "", "exp"], [34, 2, 1, "", "gens"], [34, 2, 1, "", "left_invariant_extension"], [34, 2, 1, "", "left_invariant_frame"], [34, 2, 1, "", "left_translation"], [34, 2, 1, "", "lie_algebra"], [34, 2, 1, "", "livf"], [34, 2, 1, "", "log"], [34, 2, 1, "", "one"], [34, 2, 1, "", "right_invariant_extension"], [34, 2, 1, "", "right_invariant_frame"], [34, 2, 1, "", "right_translation"], [34, 2, 1, "", "rivf"], [34, 2, 1, "", "step"]], "sage.groups.matrix_gps": [[35, 0, 0, "-", "binary_dihedral"], [36, 0, 0, "-", "catalog"], [37, 0, 0, "-", "coxeter_group"], [38, 0, 0, "-", "finitely_generated"], [39, 0, 0, "-", "finitely_generated_gap"], [40, 0, 0, "-", "group_element"], [41, 0, 0, "-", "group_element_gap"], [42, 0, 0, "-", "heisenberg"], [43, 0, 0, "-", "homset"], [44, 0, 0, "-", "isometries"], [45, 0, 0, "-", "linear"], [46, 0, 0, "-", "linear_gap"], [47, 0, 0, "-", "matrix_group"], [48, 0, 0, "-", "matrix_group_gap"], [49, 0, 0, "-", "morphism"], [50, 0, 0, "-", "named_group"], [51, 0, 0, "-", "named_group_gap"], [52, 0, 0, "-", "orthogonal"], [53, 0, 0, "-", "orthogonal_gap"], [54, 0, 0, "-", "symplectic"], [55, 0, 0, "-", "symplectic_gap"], [56, 0, 0, "-", "unitary"], [57, 0, 0, "-", "unitary_gap"]], "sage.groups.matrix_gps.binary_dihedral": [[35, 1, 1, "", "BinaryDihedralGroup"]], "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup": [[35, 2, 1, "", "cardinality"], [35, 2, 1, "", "order"]], "sage.groups.matrix_gps.coxeter_group": [[37, 1, 1, "", "CoxeterMatrixGroup"]], "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup": [[37, 1, 1, "", "Element"], [37, 2, 1, "", "bilinear_form"], [37, 2, 1, "", "canonical_representation"], [37, 2, 1, "", "coxeter_matrix"], [37, 2, 1, "", "fundamental_weight"], [37, 2, 1, "", "fundamental_weights"], [37, 2, 1, "", "is_commutative"], [37, 2, 1, "", "is_finite"], [37, 2, 1, "", "order"], [37, 2, 1, "", "positive_roots"], [37, 2, 1, "", "reflections"], [37, 2, 1, "", "roots"], [37, 2, 1, "", "simple_reflection"], [37, 2, 1, "", "simple_root_index"]], "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element": [[37, 2, 1, "", "action_on_root_indices"], [37, 2, 1, "", "canonical_matrix"], [37, 2, 1, "", "descents"], [37, 2, 1, "", "first_descent"], [37, 2, 1, "", "has_right_descent"]], "sage.groups.matrix_gps.finitely_generated": [[38, 1, 1, "", "FinitelyGeneratedMatrixGroup_generic"], [38, 4, 1, "", "MatrixGroup"], [38, 4, 1, "", "QuaternionMatrixGroupGF3"], [38, 4, 1, "", "normalize_square_matrices"]], "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic": [[38, 2, 1, "", "gen"], [38, 2, 1, "", "gens"], [38, 2, 1, "", "ngens"]], "sage.groups.matrix_gps.finitely_generated_gap": [[39, 1, 1, "", "FinitelyGeneratedMatrixGroup_gap"]], "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap": [[39, 2, 1, "", "as_permutation_group"], [39, 2, 1, "", "invariant_generators"], [39, 2, 1, "", "invariants_of_degree"], [39, 2, 1, "", "module_composition_factors"], [39, 2, 1, "", "molien_series"], [39, 2, 1, "", "reynolds_operator"]], "sage.groups.matrix_gps.group_element": [[40, 1, 1, "", "MatrixGroupElement_generic"], [40, 4, 1, "", "is_MatrixGroupElement"]], "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic": [[40, 2, 1, "", "inverse"], [40, 2, 1, "", "is_one"], [40, 2, 1, "", "list"], [40, 2, 1, "", "matrix"]], "sage.groups.matrix_gps.group_element_gap": [[41, 1, 1, "", "MatrixGroupElement_gap"]], "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap": [[41, 2, 1, "", "list"], [41, 2, 1, "", "matrix"], [41, 2, 1, "", "multiplicative_order"], [41, 2, 1, "", "word_problem"]], "sage.groups.matrix_gps.heisenberg": [[42, 1, 1, "", "HeisenbergGroup"]], "sage.groups.matrix_gps.heisenberg.HeisenbergGroup": [[42, 2, 1, "", "cardinality"], [42, 2, 1, "", "order"]], "sage.groups.matrix_gps.homset": [[43, 4, 1, "", "is_MatrixGroupHomset"]], "sage.groups.matrix_gps.isometries": [[44, 1, 1, "", "GroupActionOnQuotientModule"], [44, 1, 1, "", "GroupActionOnSubmodule"], [44, 1, 1, "", "GroupOfIsometries"]], "sage.groups.matrix_gps.isometries.GroupOfIsometries": [[44, 2, 1, "", "invariant_bilinear_form"]], "sage.groups.matrix_gps.linear": [[45, 4, 1, "", "GL"], [45, 1, 1, "", "LinearMatrixGroup_generic"], [45, 4, 1, "", "SL"]], "sage.groups.matrix_gps.linear_gap": [[46, 1, 1, "", "LinearMatrixGroup_gap"]], "sage.groups.matrix_gps.matrix_group": [[47, 1, 1, "", "MatrixGroup_base"], [47, 1, 1, "", "MatrixGroup_generic"], [47, 4, 1, "", "is_MatrixGroup"]], "sage.groups.matrix_gps.matrix_group.MatrixGroup_base": [[47, 2, 1, "", "ambient"], [47, 2, 1, "", "as_matrix_group"], [47, 2, 1, "", "sign_representation"], [47, 2, 1, "", "subgroup"]], "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic": [[47, 3, 1, "", "Element"], [47, 2, 1, "", "degree"], [47, 2, 1, "", "matrix_space"]], "sage.groups.matrix_gps.matrix_group_gap": [[48, 1, 1, "", "MatrixGroup_gap"]], "sage.groups.matrix_gps.matrix_group_gap.MatrixGroup_gap": [[48, 3, 1, "", "Element"], [48, 2, 1, "", "structure_description"], [48, 2, 1, "", "subgroup"]], "sage.groups.matrix_gps.morphism": [[49, 4, 1, "", "to_libgap"]], "sage.groups.matrix_gps.named_group": [[50, 1, 1, "", "NamedMatrixGroup_generic"], [50, 4, 1, "", "normalize_args_invariant_form"], [50, 4, 1, "", "normalize_args_vectorspace"]], "sage.groups.matrix_gps.named_group_gap": [[51, 1, 1, "", "NamedMatrixGroup_gap"]], "sage.groups.matrix_gps.orthogonal": [[52, 4, 1, "", "GO"], [52, 1, 1, "", "OrthogonalMatrixGroup_generic"], [52, 4, 1, "", "SO"], [52, 4, 1, "", "normalize_args_e"]], "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic": [[52, 2, 1, "", "invariant_bilinear_form"], [52, 2, 1, "", "invariant_form"], [52, 2, 1, "", "invariant_quadratic_form"]], "sage.groups.matrix_gps.orthogonal_gap": [[53, 1, 1, "", "OrthogonalMatrixGroup_gap"]], "sage.groups.matrix_gps.orthogonal_gap.OrthogonalMatrixGroup_gap": [[53, 2, 1, "", "invariant_bilinear_form"], [53, 2, 1, "", "invariant_form"], [53, 2, 1, "", "invariant_quadratic_form"]], "sage.groups.matrix_gps.symplectic": [[54, 4, 1, "", "Sp"], [54, 1, 1, "", "SymplecticMatrixGroup_generic"]], "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_generic": [[54, 2, 1, "", "invariant_form"]], "sage.groups.matrix_gps.symplectic_gap": [[55, 1, 1, "", "SymplecticMatrixGroup_gap"]], "sage.groups.matrix_gps.symplectic_gap.SymplecticMatrixGroup_gap": [[55, 2, 1, "", "invariant_form"]], "sage.groups.matrix_gps.unitary": [[56, 4, 1, "", "GU"], [56, 4, 1, "", "SU"], [56, 1, 1, "", "UnitaryMatrixGroup_generic"], [56, 4, 1, "", "finite_field_sqrt"]], "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_generic": [[56, 2, 1, "", "invariant_form"]], "sage.groups.matrix_gps.unitary_gap": [[57, 1, 1, "", "UnitaryMatrixGroup_gap"]], "sage.groups.matrix_gps.unitary_gap.UnitaryMatrixGroup_gap": [[57, 2, 1, "", "invariant_form"]], "sage.groups.misc_gps": [[58, 0, 0, "-", "argument_groups"], [59, 0, 0, "-", "imaginary_groups"], [60, 0, 0, "-", "misc_groups"]], "sage.groups.misc_gps.argument_groups": [[58, 1, 1, "", "AbstractArgument"], [58, 1, 1, "", "AbstractArgumentGroup"], [58, 1, 1, "", "ArgumentByElement"], [58, 1, 1, "", "ArgumentByElementGroup"], [58, 5, 1, "", "ArgumentGroup"], [58, 1, 1, "", "ArgumentGroupFactory"], [58, 1, 1, "", "RootOfUnity"], [58, 1, 1, "", "RootsOfUnityGroup"], [58, 1, 1, "", "Sign"], [58, 1, 1, "", "SignGroup"], [58, 1, 1, "", "UnitCircleGroup"], [58, 1, 1, "", "UnitCirclePoint"]], "sage.groups.misc_gps.argument_groups.AbstractArgumentGroup": [[58, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.ArgumentByElementGroup": [[58, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory": [[58, 2, 1, "", "create_key_and_extra_args"], [58, 2, 1, "", "create_object"]], "sage.groups.misc_gps.argument_groups.RootOfUnity": [[58, 2, 1, "", "exponent_denominator"], [58, 2, 1, "", "exponent_numerator"]], "sage.groups.misc_gps.argument_groups.RootsOfUnityGroup": [[58, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.Sign": [[58, 2, 1, "", "is_minus_one"], [58, 2, 1, "", "is_one"]], "sage.groups.misc_gps.argument_groups.SignGroup": [[58, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.UnitCircleGroup": [[58, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.UnitCirclePoint": [[58, 6, 1, "", "exponent"], [58, 2, 1, "", "is_minus_one"], [58, 2, 1, "", "is_one"]], "sage.groups.misc_gps.imaginary_groups": [[59, 1, 1, "", "ImaginaryElement"], [59, 1, 1, "", "ImaginaryGroup"]], "sage.groups.misc_gps.imaginary_groups.ImaginaryElement": [[59, 2, 1, "", "imag"], [59, 2, 1, "", "real"]], "sage.groups.misc_gps.imaginary_groups.ImaginaryGroup": [[59, 3, 1, "", "Element"]], "sage.groups.pari_group": [[61, 1, 1, "", "PariGroup"]], "sage.groups.pari_group.PariGroup": [[61, 2, 1, "", "cardinality"], [61, 2, 1, "", "degree"], [61, 2, 1, "", "label"], [61, 2, 1, "", "order"], [61, 2, 1, "", "permutation_group"], [61, 2, 1, "", "signature"], [61, 2, 1, "", "transitive_number"]], "sage.groups.perm_gps": [[62, 0, 0, "-", "constructor"], [63, 0, 0, "-", "cubegroup"], [69, 0, 0, "-", "permgroup"], [70, 0, 0, "-", "permgroup_element"], [71, 0, 0, "-", "permgroup_morphism"], [72, 0, 0, "-", "permgroup_named"], [73, 0, 0, "-", "permutation_groups_catalog"], [74, 0, 0, "-", "symgp_conjugacy_class"]], "sage.groups.perm_gps.constructor": [[62, 4, 1, "", "PermutationGroupElement"], [62, 4, 1, "", "standardize_generator"], [62, 4, 1, "", "string_to_tuples"]], "sage.groups.perm_gps.cubegroup": [[63, 1, 1, "", "CubeGroup"], [63, 1, 1, "", "RubiksCube"], [63, 4, 1, "", "color_of_square"], [63, 4, 1, "", "create_poly"], [63, 4, 1, "", "cubie_centers"], [63, 4, 1, "", "cubie_colors"], [63, 4, 1, "", "cubie_faces"], [63, 4, 1, "", "index2singmaster"], [63, 4, 1, "", "inv_list"], [63, 4, 1, "", "plot3d_cubie"], [63, 4, 1, "", "polygon_plot3d"], [63, 4, 1, "", "rotation_list"], [63, 4, 1, "", "xproj"], [63, 4, 1, "", "yproj"]], "sage.groups.perm_gps.cubegroup.CubeGroup": [[63, 2, 1, "", "B"], [63, 2, 1, "", "D"], [63, 2, 1, "", "F"], [63, 2, 1, "", "L"], [63, 2, 1, "", "R"], [63, 2, 1, "", "U"], [63, 2, 1, "", "display2d"], [63, 2, 1, "", "faces"], [63, 2, 1, "", "facets"], [63, 2, 1, "", "gen_names"], [63, 2, 1, "", "legal"], [63, 2, 1, "", "move"], [63, 2, 1, "", "parse"], [63, 2, 1, "", "plot3d_cube"], [63, 2, 1, "", "plot_cube"], [63, 2, 1, "", "repr2d"], [63, 2, 1, "", "solve"]], "sage.groups.perm_gps.cubegroup.RubiksCube": [[63, 2, 1, "", "cubie"], [63, 2, 1, "", "facets"], [63, 2, 1, "", "move"], [63, 2, 1, "", "plot"], [63, 2, 1, "", "plot3d"], [63, 2, 1, "", "scramble"], [63, 2, 1, "", "show"], [63, 2, 1, "", "show3d"], [63, 2, 1, "", "solve"], [63, 2, 1, "", "undo"]], "sage.groups.perm_gps.partn_ref": [[64, 0, 0, "-", "canonical_augmentation"], [65, 0, 0, "-", "data_structures"], [66, 0, 0, "-", "refinement_graphs"], [67, 0, 0, "-", "refinement_lists"], [68, 0, 0, "-", "refinement_matrices"]], "sage.groups.perm_gps.partn_ref.data_structures": [[65, 4, 1, "", "OP_represent"], [65, 4, 1, "", "PS_represent"], [65, 4, 1, "", "SC_test_list_perms"]], "sage.groups.perm_gps.partn_ref.refinement_graphs": [[66, 1, 1, "", "GraphStruct"], [66, 4, 1, "", "all_labeled_graphs"], [66, 4, 1, "", "coarsest_equitable_refinement"], [66, 4, 1, "", "generate_dense_graphs_edge_addition"], [66, 4, 1, "", "generate_dense_graphs_vert_addition"], [66, 4, 1, "", "get_orbits"], [66, 4, 1, "", "isomorphic"], [66, 4, 1, "", "orbit_partition"], [66, 4, 1, "", "random_tests"], [66, 4, 1, "", "search_tree"]], "sage.groups.perm_gps.partn_ref.refinement_lists": [[67, 4, 1, "", "is_isomorphic"]], "sage.groups.perm_gps.partn_ref.refinement_matrices": [[68, 1, 1, "", "MatrixStruct"], [68, 4, 1, "", "random_tests"]], "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct": [[68, 2, 1, "", "automorphism_group"], [68, 2, 1, "", "canonical_relabeling"], [68, 2, 1, "", "display"], [68, 2, 1, "", "is_isomorphic"], [68, 2, 1, "", "run"]], "sage.groups.perm_gps.permgroup": [[69, 4, 1, "", "PermutationGroup"], [69, 1, 1, "", "PermutationGroup_action"], [69, 1, 1, "", "PermutationGroup_generic"], [69, 1, 1, "", "PermutationGroup_subgroup"], [69, 4, 1, "", "direct_product_permgroups"], [69, 4, 1, "", "from_gap_list"], [69, 4, 1, "", "hap_decorator"], [69, 4, 1, "", "load_hap"]], "sage.groups.perm_gps.permgroup.PermutationGroup_action": [[69, 2, 1, "", "orbits"]], "sage.groups.perm_gps.permgroup.PermutationGroup_generic": [[69, 3, 1, "", "Element"], [69, 3, 1, "", "Subgroup"], [69, 2, 1, "", "as_finitely_presented_group"], [69, 2, 1, "", "base"], [69, 2, 1, "", "blocks_all"], [69, 2, 1, "", "cardinality"], [69, 2, 1, "", "center"], [69, 2, 1, "", "centralizer"], [69, 2, 1, "", "character"], [69, 2, 1, "", "character_table"], [69, 2, 1, "", "cohomology"], [69, 2, 1, "", "cohomology_part"], [69, 2, 1, "", "commutator"], [69, 2, 1, "", "composition_series"], [69, 2, 1, "", "conjugacy_class"], [69, 2, 1, "", "conjugacy_classes"], [69, 2, 1, "", "conjugacy_classes_representatives"], [69, 2, 1, "", "conjugacy_classes_subgroups"], [69, 2, 1, "", "conjugate"], [69, 2, 1, "", "construction"], [69, 2, 1, "", "cosets"], [69, 2, 1, "", "degree"], [69, 2, 1, "", "derived_series"], [69, 2, 1, "", "direct_product"], [69, 2, 1, "", "domain"], [69, 2, 1, "", "exponent"], [69, 2, 1, "", "fitting_subgroup"], [69, 2, 1, "", "fixed_points"], [69, 2, 1, "", "frattini_subgroup"], [69, 2, 1, "", "gap"], [69, 2, 1, "", "gen"], [69, 2, 1, "", "gens"], [69, 2, 1, "", "gens_small"], [69, 2, 1, "", "group_id"], [69, 2, 1, "", "group_primitive_id"], [69, 2, 1, "", "has_element"], [69, 2, 1, "", "has_regular_subgroup"], [69, 2, 1, "", "holomorph"], [69, 2, 1, "", "homology"], [69, 2, 1, "", "homology_part"], [69, 2, 1, "", "id"], [69, 2, 1, "", "identity"], [69, 2, 1, "", "intersection"], [69, 2, 1, "", "irreducible_characters"], [69, 2, 1, "", "is_abelian"], [69, 2, 1, "", "is_commutative"], [69, 2, 1, "", "is_cyclic"], [69, 2, 1, "", "is_elementary_abelian"], [69, 2, 1, "", "is_isomorphic"], [69, 2, 1, "", "is_monomial"], [69, 2, 1, "", "is_nilpotent"], [69, 2, 1, "", "is_normal"], [69, 2, 1, "", "is_perfect"], [69, 2, 1, "", "is_pgroup"], [69, 2, 1, "", "is_polycyclic"], [69, 2, 1, "", "is_primitive"], [69, 2, 1, "", "is_regular"], [69, 2, 1, "", "is_semi_regular"], [69, 2, 1, "", "is_simple"], [69, 2, 1, "", "is_solvable"], [69, 2, 1, "", "is_subgroup"], [69, 2, 1, "", "is_supersolvable"], [69, 2, 1, "", "is_transitive"], [69, 2, 1, "", "isomorphism_to"], [69, 2, 1, "", "isomorphism_type_info_simple_group"], [69, 2, 1, "", "iteration"], [69, 2, 1, "", "largest_moved_point"], [69, 2, 1, "", "list"], [69, 2, 1, "", "lower_central_series"], [69, 2, 1, "", "minimal_generating_set"], [69, 2, 1, "", "molien_series"], [69, 2, 1, "", "ngens"], [69, 2, 1, "", "non_fixed_points"], [69, 2, 1, "", "normal_subgroups"], [69, 2, 1, "", "normalizer"], [69, 2, 1, "", "normalizes"], [69, 2, 1, "", "one"], [69, 2, 1, "", "orbit"], [69, 2, 1, "", "orbits"], [69, 2, 1, "", "order"], [69, 2, 1, "", "poincare_series"], [69, 2, 1, "", "quotient"], [69, 2, 1, "", "random_element"], [69, 2, 1, "", "representative_action"], [69, 2, 1, "", "semidirect_product"], [69, 2, 1, "", "sign_representation"], [69, 2, 1, "", "smallest_moved_point"], [69, 2, 1, "", "socle"], [69, 2, 1, "", "solvable_radical"], [69, 2, 1, "", "stabilizer"], [69, 2, 1, "", "strong_generating_system"], [69, 2, 1, "", "structure_description"], [69, 2, 1, "", "subgroup"], [69, 2, 1, "", "subgroups"], [69, 2, 1, "", "sylow_subgroup"], [69, 2, 1, "", "transversals"], [69, 2, 1, "", "trivial_character"], [69, 2, 1, "", "upper_central_series"]], "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup": [[69, 2, 1, "", "ambient_group"], [69, 2, 1, "", "is_normal"]], "sage.groups.perm_gps.permgroup_element": [[70, 1, 1, "", "PermutationGroupElement"], [70, 1, 1, "", "SymmetricGroupElement"], [70, 4, 1, "", "is_PermutationGroupElement"], [70, 4, 1, "", "make_permgroup_element"], [70, 4, 1, "", "make_permgroup_element_v2"]], "sage.groups.perm_gps.permgroup_element.PermutationGroupElement": [[70, 2, 1, "", "cycle_string"], [70, 2, 1, "", "cycle_tuples"], [70, 2, 1, "", "cycle_type"], [70, 2, 1, "", "cycles"], [70, 2, 1, "", "dict"], [70, 2, 1, "", "domain"], [70, 2, 1, "", "gap"], [70, 2, 1, "", "has_descent"], [70, 2, 1, "", "inverse"], [70, 2, 1, "", "matrix"], [70, 2, 1, "", "multiplicative_order"], [70, 2, 1, "", "orbit"], [70, 2, 1, "", "sign"], [70, 2, 1, "", "tuple"], [70, 2, 1, "", "word_problem"]], "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement": [[70, 2, 1, "", "absolute_length"], [70, 2, 1, "", "has_left_descent"]], "sage.groups.perm_gps.permgroup_morphism": [[71, 1, 1, "", "PermutationGroupMorphism"], [71, 1, 1, "", "PermutationGroupMorphism_from_gap"], [71, 1, 1, "", "PermutationGroupMorphism_id"], [71, 1, 1, "", "PermutationGroupMorphism_im_gens"], [71, 4, 1, "", "is_PermutationGroupMorphism"]], "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism": [[71, 2, 1, "", "image"], [71, 2, 1, "", "kernel"]], "sage.groups.perm_gps.permgroup_named": [[72, 1, 1, "", "AlternatingGroup"], [72, 1, 1, "", "ComplexReflectionGroup"], [72, 1, 1, "", "CyclicPermutationGroup"], [72, 1, 1, "", "DiCyclicGroup"], [72, 1, 1, "", "DihedralGroup"], [72, 1, 1, "", "GeneralDihedralGroup"], [72, 1, 1, "", "JankoGroup"], [72, 1, 1, "", "KleinFourGroup"], [72, 1, 1, "", "MathieuGroup"], [72, 1, 1, "", "PGL"], [72, 1, 1, "", "PGU"], [72, 1, 1, "", "PSL"], [72, 3, 1, "", "PSP"], [72, 1, 1, "", "PSU"], [72, 1, 1, "", "PSp"], [72, 1, 1, "", "PermutationGroup_plg"], [72, 1, 1, "", "PermutationGroup_pug"], [72, 1, 1, "", "PermutationGroup_symalt"], [72, 1, 1, "", "PermutationGroup_unique"], [72, 1, 1, "", "PrimitiveGroup"], [72, 4, 1, "", "PrimitiveGroups"], [72, 1, 1, "", "PrimitiveGroupsAll"], [72, 1, 1, "", "PrimitiveGroupsOfDegree"], [72, 1, 1, "", "QuaternionGroup"], [72, 1, 1, "", "SemidihedralGroup"], [72, 1, 1, "", "SmallPermutationGroup"], [72, 1, 1, "", "SplitMetacyclicGroup"], [72, 1, 1, "", "SuzukiGroup"], [72, 1, 1, "", "SuzukiSporadicGroup"], [72, 1, 1, "", "SymmetricGroup"], [72, 1, 1, "", "TransitiveGroup"], [72, 4, 1, "", "TransitiveGroups"], [72, 1, 1, "", "TransitiveGroupsAll"], [72, 1, 1, "", "TransitiveGroupsOfDegree"]], "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup": [[72, 2, 1, "", "codegrees"], [72, 2, 1, "", "degrees"], [72, 2, 1, "", "index_set"], [72, 2, 1, "", "simple_reflection"]], "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup": [[72, 2, 1, "", "as_AbelianGroup"], [72, 2, 1, "", "is_abelian"], [72, 2, 1, "", "is_commutative"]], "sage.groups.perm_gps.permgroup_named.DiCyclicGroup": [[72, 2, 1, "", "is_abelian"], [72, 2, 1, "", "is_commutative"]], "sage.groups.perm_gps.permgroup_named.PSL": [[72, 2, 1, "", "ramification_module_decomposition_hurwitz_curve"], [72, 2, 1, "", "ramification_module_decomposition_modular_curve"]], "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg": [[72, 2, 1, "", "base_ring"], [72, 2, 1, "", "matrix_degree"]], "sage.groups.perm_gps.permgroup_named.PermutationGroup_pug": [[72, 2, 1, "", "field_of_definition"]], "sage.groups.perm_gps.permgroup_named.PrimitiveGroup": [[72, 2, 1, "", "group_primitive_id"]], "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsOfDegree": [[72, 2, 1, "", "cardinality"]], "sage.groups.perm_gps.permgroup_named.SmallPermutationGroup": [[72, 2, 1, "", "gap_small_group"], [72, 2, 1, "", "order"]], "sage.groups.perm_gps.permgroup_named.SuzukiGroup": [[72, 2, 1, "", "base_ring"]], "sage.groups.perm_gps.permgroup_named.SymmetricGroup": [[72, 3, 1, "", "Element"], [72, 2, 1, "", "algebra"], [72, 2, 1, "", "cartan_type"], [72, 2, 1, "", "conjugacy_class"], [72, 2, 1, "", "conjugacy_classes"], [72, 2, 1, "", "conjugacy_classes_iterator"], [72, 2, 1, "", "conjugacy_classes_representatives"], [72, 2, 1, "", "coxeter_matrix"], [72, 2, 1, "", "index_set"], [72, 2, 1, "", "major_index"], [72, 2, 1, "", "reflections"], [72, 2, 1, "", "simple_reflection"], [72, 2, 1, "", "young_subgroup"]], "sage.groups.perm_gps.permgroup_named.TransitiveGroup": [[72, 2, 1, "", "degree"], [72, 2, 1, "", "transitive_number"]], "sage.groups.perm_gps.permgroup_named.TransitiveGroupsOfDegree": [[72, 2, 1, "", "cardinality"]], "sage.groups.perm_gps.symgp_conjugacy_class": [[74, 1, 1, "", "PermutationsConjugacyClass"], [74, 1, 1, "", "SymmetricGroupConjugacyClass"], [74, 1, 1, "", "SymmetricGroupConjugacyClassMixin"], [74, 4, 1, "", "conjugacy_class_iterator"], [74, 4, 1, "", "default_representative"]], "sage.groups.perm_gps.symgp_conjugacy_class.PermutationsConjugacyClass": [[74, 2, 1, "", "set"]], "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClass": [[74, 2, 1, "", "set"]], "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClassMixin": [[74, 2, 1, "", "partition"]], "sage.groups.raag": [[75, 1, 1, "", "CohomologyRAAG"], [75, 1, 1, "", "RightAngledArtinGroup"]], "sage.groups.raag.CohomologyRAAG": [[75, 1, 1, "", "Element"], [75, 2, 1, "", "algebra_generators"], [75, 2, 1, "", "degree_on_basis"], [75, 2, 1, "", "gen"], [75, 2, 1, "", "gens"], [75, 2, 1, "", "ngens"], [75, 2, 1, "", "one_basis"]], "sage.groups.raag.RightAngledArtinGroup": [[75, 1, 1, "", "Element"], [75, 2, 1, "", "cohomology"], [75, 2, 1, "", "gen"], [75, 2, 1, "", "gens"], [75, 2, 1, "", "graph"], [75, 2, 1, "", "ngens"], [75, 2, 1, "", "one"], [75, 2, 1, "", "one_element"]], "sage.groups.semimonomial_transformations": [[76, 0, 0, "-", "semimonomial_transformation"], [77, 0, 0, "-", "semimonomial_transformation_group"]], "sage.groups.semimonomial_transformations.semimonomial_transformation": [[76, 1, 1, "", "SemimonomialTransformation"]], "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation": [[76, 2, 1, "", "get_autom"], [76, 2, 1, "", "get_perm"], [76, 2, 1, "", "get_v"], [76, 2, 1, "", "get_v_inverse"], [76, 2, 1, "", "invert_v"]], "sage.groups.semimonomial_transformations.semimonomial_transformation_group": [[77, 1, 1, "", "SemimonomialActionMat"], [77, 1, 1, "", "SemimonomialActionVec"], [77, 1, 1, "", "SemimonomialTransformationGroup"]], "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup": [[77, 3, 1, "", "Element"], [77, 2, 1, "", "base_ring"], [77, 2, 1, "", "degree"], [77, 2, 1, "", "gens"], [77, 2, 1, "", "order"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"group": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77], "abelian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "permut": [0, 62, 69, 70, 71, 72, 73], "matrix": [0, 37, 38, 39, 40, 41, 43, 47, 48, 49, 50, 51], "affin": [0, 12, 14], "lie": [0, 34], "partit": [0, 66, 67, 68], "refin": 0, "intern": 0, "indic": 0, "tabl": 0, "automorph": 1, "multipl": [2, 6, 9, 25], "todo": [2, 4, 5, 11, 15, 18, 20, 26, 37, 72, 77], "element": [3, 7, 8, 14, 40, 41, 58, 59, 70, 76], "finit": [4, 6, 7, 20, 21, 38, 39], "gener": [4, 23, 30, 38, 39], "gap": [4, 31, 32, 39, 41, 46, 48, 51, 53, 55, 57], "homomorph": [5, 32, 49, 71], "dual": [6, 7], "charact": 7, "base": [8, 24, 30, 31, 33, 47, 50, 51], "class": [8, 11, 17, 18, 24, 31, 47, 58, 59, 74], "With": 9, "valu": 9, "addit": [10, 25], "wrapper": 11, "euclidean": 13, "braid": [15, 19], "cactu": 16, "function": [17, 23, 63, 66, 67, 68], "conjugaci": [18, 74], "cubic": 19, "present": [20, 21], "name": [21, 72], "free": [22, 28], "miscellan": [23, 60], "functor": 25, "convert": 25, "commut": 25, "semidirect": 26, "product": 26, "exampl": [27, 67], "index": [28, 69], "kernel": 29, "subgroup": 29, "libgap": [30, 33], "mix": 31, "backend": 32, "nilpot": 34, "binari": 35, "dihedr": 35, "librari": 36, "interest": 36, "coxet": 37, "As": 37, "implement": 41, "heisenberg": 42, "homset": 43, "isometri": 44, "linear": [45, 46, 52, 53, 54, 55], "over": 48, "ring": 48, "understand": 48, "between": 49, "classic": [50, 51], "orthogon": [52, 53], "symplect": [54, 55], "unitari": [56, 57], "gu": [56, 57], "n": [56, 57], "q": [56, 57], "su": [56, 57], "repres": 58, "complex": 58, "argument": 58, "method": [58, 59, 69], "imaginari": 59, "pari": 61, "constructor": 62, "rubik": 63, "": 63, "cube": 63, "canon": 64, "augment": 64, "data": 65, "structur": 65, "graph": 66, "theoret": 66, "backtrack": [66, 67, 68], "list": 67, "simpl": 67, "us": 67, "partn_ref": 67, "matric": 68, "symmetr": [72, 74], "s_n": 72, "catalog": 73, "Of": 74, "The": 74, "right": 75, "angl": 75, "artin": 75, "semimonomi": [76, 77], "transform": [76, 77]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Groups": [[0, "groups"]], "Abelian Groups": [[0, "abelian-groups"]], "Permutation Groups": [[0, "permutation-groups"]], "Matrix and Affine Groups": [[0, "matrix-and-affine-groups"]], "Lie Groups": [[0, "lie-groups"]], "Partition Refinement": [[0, "partition-refinement"]], "Internals": [[0, "internals"]], "Indices and Tables": [[0, "indices-and-tables"]], "Automorphisms of abelian groups": [[1, "automorphisms-of-abelian-groups"]], "Multiplicative Abelian Groups": [[2, "multiplicative-abelian-groups"]], "Todo": [[2, "id2"], [2, "id3"], [4, "id1"], [5, "id1"], [5, "id2"], [11, "id1"], [15, "id18"], [15, "id19"], [18, "id1"], [20, "id2"], [26, "id1"], [37, "id1"], [72, "id4"], [72, "id5"], [77, "id1"], [77, "id2"]], "Abelian group elements": [[3, "abelian-group-elements"]], "Finitely generated abelian groups with GAP.": [[4, "finitely-generated-abelian-groups-with-gap"]], "Homomorphisms of abelian groups": [[5, "homomorphisms-of-abelian-groups"]], "Dual groups of Finite Multiplicative Abelian Groups": [[6, "dual-groups-of-finite-multiplicative-abelian-groups"]], "Elements (characters) of the dual group of a finite Abelian group": [[7, "elements-characters-of-the-dual-group-of-a-finite-abelian-group"]], "Base class for abelian group elements": [[8, "base-class-for-abelian-group-elements"]], "Multiplicative Abelian Groups With Values": [[9, "multiplicative-abelian-groups-with-values"]], "Additive Abelian Groups": [[10, "additive-abelian-groups"]], "Wrapper class for abelian groups": [[11, "wrapper-class-for-abelian-groups"]], "Affine Groups": [[12, "affine-groups"]], "Euclidean Groups": [[13, "euclidean-groups"]], "Elements of Affine Groups": [[14, "elements-of-affine-groups"]], "Braid groups": [[15, "braid-groups"]], "Cactus Groups": [[16, "cactus-groups"]], "Class functions of groups.": [[17, "class-functions-of-groups"]], "Conjugacy classes of groups": [[18, "conjugacy-classes-of-groups"]], "Cubic Braid Groups": [[19, "cubic-braid-groups"]], "Finitely Presented Groups": [[20, "finitely-presented-groups"]], "Named Finitely Presented Groups": [[21, "named-finitely-presented-groups"]], "Free Groups": [[22, "free-groups"]], "Miscellaneous generic functions": [[23, "miscellaneous-generic-functions"]], "Base class for groups": [[24, "base-class-for-groups"]], "Functor that converts a commutative additive group into a multiplicative group.": [[25, "functor-that-converts-a-commutative-additive-group-into-a-multiplicative-group"]], "Semidirect product of groups": [[26, "semidirect-product-of-groups"]], "Examples of Groups": [[27, "examples-of-groups"]], "Indexed Free Groups": [[28, "indexed-free-groups"]], "Kernel Subgroups": [[29, "kernel-subgroups"]], "Generic LibGAP-based Group": [[30, "generic-libgap-based-group"]], "Mix-in Class for GAP-based Groups": [[31, "mix-in-class-for-gap-based-groups"]], "Group homomorphisms for groups with a GAP backend": [[32, "group-homomorphisms-for-groups-with-a-gap-backend"]], "LibGAP-based Groups": [[33, "libgap-based-groups"]], "Nilpotent Lie groups": [[34, "nilpotent-lie-groups"]], "Binary Dihedral Groups": [[35, "binary-dihedral-groups"]], "Library of Interesting Groups": [[36, "library-of-interesting-groups"]], "Coxeter Groups As Matrix Groups": [[37, "coxeter-groups-as-matrix-groups"]], "Finitely Generated Matrix Groups": [[38, "finitely-generated-matrix-groups"]], "Finitely Generated Matrix Groups with GAP": [[39, "finitely-generated-matrix-groups-with-gap"]], "Matrix Group Elements": [[40, "matrix-group-elements"]], "Matrix group elements implemented in GAP": [[41, "matrix-group-elements-implemented-in-gap"]], "Heisenberg Group": [[42, "heisenberg-group"]], "Matrix Group Homsets": [[43, "matrix-group-homsets"]], "Groups of isometries": [[44, "groups-of-isometries"]], "Linear Groups": [[45, "linear-groups"]], "Linear Groups with GAP": [[46, "linear-groups-with-gap"]], "Base classes for Matrix Groups": [[47, "base-classes-for-matrix-groups"]], "Matrix group over a ring that GAP understands": [[48, "matrix-group-over-a-ring-that-gap-understands"]], "Homomorphisms Between Matrix Groups": [[49, "homomorphisms-between-matrix-groups"]], "Base for Classical Matrix Groups": [[50, "base-for-classical-matrix-groups"]], "Base for Classical Matrix Groups with GAP": [[51, "base-for-classical-matrix-groups-with-gap"]], "Orthogonal Linear Groups": [[52, "orthogonal-linear-groups"]], "Orthogonal Linear Groups with GAP": [[53, "orthogonal-linear-groups-with-gap"]], "Symplectic Linear Groups": [[54, "symplectic-linear-groups"]], "Symplectic Linear Groups with GAP": [[55, "symplectic-linear-groups-with-gap"]], "Unitary Groups GU(n,q) and SU(n,q)": [[56, "unitary-groups-gu-n-q-and-su-n-q"]], "Unitary Groups GU(n,q) and SU(n,q) with GAP": [[57, "unitary-groups-gu-n-q-and-su-n-q-with-gap"]], "Groups of elements representing (complex) arguments.": [[58, "groups-of-elements-representing-complex-arguments"]], "Classes and Methods": [[58, "classes-and-methods"], [59, "classes-and-methods"]], "Groups of imaginary elements": [[59, "groups-of-imaginary-elements"]], "Miscellaneous Groups": [[60, "miscellaneous-groups"]], "PARI Groups": [[61, "pari-groups"]], "Constructor for permutations": [[62, "constructor-for-permutations"]], "Rubik\u2019s cube group functions": [[63, "rubik-s-cube-group-functions"]], "Canonical augmentation": [[64, "canonical-augmentation"]], "Data structures": [[65, "data-structures"]], "Graph-theoretic partition backtrack functions": [[66, "graph-theoretic-partition-backtrack-functions"]], "Partition backtrack functions for lists \u2013 a simple example of using partn_ref": [[67, "partition-backtrack-functions-for-lists-a-simple-example-of-using-partn-ref"]], "Partition backtrack functions for matrices": [[68, "partition-backtrack-functions-for-matrices"]], "Permutation groups": [[69, "permutation-groups"]], "Index of methods": [[69, "index-of-methods"]], "Permutation group elements": [[70, "permutation-group-elements"]], "Permutation group homomorphisms": [[71, "permutation-group-homomorphisms"]], "\u201cNamed\u201d Permutation groups (such as the symmetric group, S_n)": [[72, "named-permutation-groups-such-as-the-symmetric-group-s-n"]], "Catalog of permutation groups": [[73, "catalog-of-permutation-groups"]], "Conjugacy Classes Of The Symmetric Group": [[74, "conjugacy-classes-of-the-symmetric-group"]], "Right-Angled Artin Groups": [[75, "right-angled-artin-groups"]], "Elements of a semimonomial transformation group": [[76, "elements-of-a-semimonomial-transformation-group"]], "Semimonomial transformation group": [[77, "semimonomial-transformation-group"]]}, "indexentries": {"abeliangroupautomorphism (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphism"]], "abeliangroupautomorphismgroup (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup"]], "abeliangroupautomorphismgroup_gap (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap"]], "abeliangroupautomorphismgroup_subgroup (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_subgroup"]], "element (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup attribute)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup.Element"]], "element (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap attribute)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.Element"]], "element (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_subgroup attribute)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_subgroup.Element"]], "covering_matrix_ring() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.covering_matrix_ring"]], "domain() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.domain"]], "is_subgroup_of() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.is_subgroup_of"]], "matrix() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphism method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphism.matrix"]], "module": [[1, "module-sage.groups.abelian_gps.abelian_aut"], [2, "module-sage.groups.abelian_gps.abelian_group"], [3, "module-sage.groups.abelian_gps.abelian_group_element"], [4, "module-sage.groups.abelian_gps.abelian_group_gap"], [5, "module-sage.groups.abelian_gps.abelian_group_morphism"], [6, "module-sage.groups.abelian_gps.dual_abelian_group"], [7, "module-sage.groups.abelian_gps.dual_abelian_group_element"], [8, "module-sage.groups.abelian_gps.element_base"], [9, "module-sage.groups.abelian_gps.values"], [10, "module-sage.groups.additive_abelian.additive_abelian_group"], [11, "module-sage.groups.additive_abelian.additive_abelian_wrapper"], [12, "module-sage.groups.affine_gps.affine_group"], [13, "module-sage.groups.affine_gps.euclidean_group"], [14, "module-sage.groups.affine_gps.group_element"], [15, "module-sage.groups.braid"], [16, "module-sage.groups.cactus_group"], [17, "module-sage.groups.class_function"], [18, "module-sage.groups.conjugacy_classes"], [19, "module-sage.groups.cubic_braid"], [20, "module-sage.groups.finitely_presented"], [21, "module-sage.groups.finitely_presented_named"], [22, "module-sage.groups.free_group"], [23, "module-sage.groups.generic"], [24, "module-sage.groups.group"], [25, "module-sage.groups.group_exp"], [26, "module-sage.groups.group_semidirect_product"], [27, "module-sage.groups.groups_catalog"], [28, "module-sage.groups.indexed_free_group"], [29, "module-sage.groups.kernel_subgroup"], [30, "module-sage.groups.libgap_group"], [31, "module-sage.groups.libgap_mixin"], [32, "module-sage.groups.libgap_morphism"], [33, "module-sage.groups.libgap_wrapper"], [34, "module-sage.groups.lie_gps.nilpotent_lie_group"], [35, "module-sage.groups.matrix_gps.binary_dihedral"], [36, "module-sage.groups.matrix_gps.catalog"], [37, "module-sage.groups.matrix_gps.coxeter_group"], [38, "module-sage.groups.matrix_gps.finitely_generated"], [39, "module-sage.groups.matrix_gps.finitely_generated_gap"], [40, "module-sage.groups.matrix_gps.group_element"], [41, "module-sage.groups.matrix_gps.group_element_gap"], [42, "module-sage.groups.matrix_gps.heisenberg"], [43, "module-sage.groups.matrix_gps.homset"], [44, "module-sage.groups.matrix_gps.isometries"], [45, "module-sage.groups.matrix_gps.linear"], [46, "module-sage.groups.matrix_gps.linear_gap"], [47, "module-sage.groups.matrix_gps.matrix_group"], [48, "module-sage.groups.matrix_gps.matrix_group_gap"], [49, "module-sage.groups.matrix_gps.morphism"], [50, "module-sage.groups.matrix_gps.named_group"], [51, "module-sage.groups.matrix_gps.named_group_gap"], [52, "module-sage.groups.matrix_gps.orthogonal"], [53, "module-sage.groups.matrix_gps.orthogonal_gap"], [54, "module-sage.groups.matrix_gps.symplectic"], [55, "module-sage.groups.matrix_gps.symplectic_gap"], [56, "module-sage.groups.matrix_gps.unitary"], [57, "module-sage.groups.matrix_gps.unitary_gap"], [58, "module-sage.groups.misc_gps.argument_groups"], [59, "module-sage.groups.misc_gps.imaginary_groups"], [60, "module-sage.groups.misc_gps.misc_groups"], [61, "module-sage.groups.pari_group"], [62, "module-sage.groups.perm_gps.constructor"], [63, "module-sage.groups.perm_gps.cubegroup"], [64, "module-sage.groups.perm_gps.partn_ref.canonical_augmentation"], [65, "module-sage.groups.perm_gps.partn_ref.data_structures"], [66, "module-sage.groups.perm_gps.partn_ref.refinement_graphs"], [67, "module-sage.groups.perm_gps.partn_ref.refinement_lists"], [68, "module-sage.groups.perm_gps.partn_ref.refinement_matrices"], [69, "module-sage.groups.perm_gps.permgroup"], [70, "module-sage.groups.perm_gps.permgroup_element"], [71, "module-sage.groups.perm_gps.permgroup_morphism"], [72, "module-sage.groups.perm_gps.permgroup_named"], [73, "module-sage.groups.perm_gps.permutation_groups_catalog"], [74, "module-sage.groups.perm_gps.symgp_conjugacy_class"], [75, "module-sage.groups.raag"], [76, "module-sage.groups.semimonomial_transformations.semimonomial_transformation"], [77, "module-sage.groups.semimonomial_transformations.semimonomial_transformation_group"]], "sage.groups.abelian_gps.abelian_aut": [[1, "module-sage.groups.abelian_gps.abelian_aut"]], "abeliangroup() (in module sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup"]], "abeliangroup_class (class in sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class"]], "abeliangroup_subgroup (class in sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup"]], "element (sage.groups.abelian_gps.abelian_group.abeliangroup_class attribute)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.Element"]], "subgroup (sage.groups.abelian_gps.abelian_group.abeliangroup_class attribute)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.Subgroup"]], "ambient_group() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.ambient_group"]], "cardinality() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.cardinality"]], "dual_group() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.dual_group"]], "elementary_divisors() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.elementary_divisors"]], "equals() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.equals"]], "exponent() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.exponent"]], "gen() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.gen"]], "gen() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.gen"]], "gens() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.gens"]], "gens() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.gens"]], "gens_orders() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.gens_orders"]], "identity() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.identity"]], "invariants() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.invariants"]], "is_abeliangroup() (in module sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.is_AbelianGroup"]], "is_commutative() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_commutative"]], "is_cyclic() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_cyclic"]], "is_isomorphic() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_isomorphic"]], "is_subgroup() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_subgroup"]], "is_trivial() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_trivial"]], "list() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.list"]], "ngens() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.ngens"]], "number_of_subgroups() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.number_of_subgroups"]], "order() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.order"]], "permutation_group() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.permutation_group"]], "random_element() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.random_element"]], "sage.groups.abelian_gps.abelian_group": [[2, "module-sage.groups.abelian_gps.abelian_group"]], "subgroup() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.subgroup"]], "subgroup_reduced() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.subgroup_reduced"]], "subgroups() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.subgroups"]], "torsion_subgroup() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.torsion_subgroup"]], "word_problem() (in module sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.word_problem"]], "abeliangroupelement (class in sage.groups.abelian_gps.abelian_group_element)": [[3, "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement"]], "as_permutation() (sage.groups.abelian_gps.abelian_group_element.abeliangroupelement method)": [[3, "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement.as_permutation"]], "is_abeliangroupelement() (in module sage.groups.abelian_gps.abelian_group_element)": [[3, "sage.groups.abelian_gps.abelian_group_element.is_AbelianGroupElement"]], "sage.groups.abelian_gps.abelian_group_element": [[3, "module-sage.groups.abelian_gps.abelian_group_element"]], "word_problem() (sage.groups.abelian_gps.abelian_group_element.abeliangroupelement method)": [[3, "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement.word_problem"]], "abeliangroupelement_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap"]], "abeliangroupelement_polycyclic (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_polycyclic"]], "abeliangroupgap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupGap"]], "abeliangroupquotient_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap"]], "abeliangroupsubgroup_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap"]], "abeliangroup_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap"]], "element (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap attribute)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.Element"]], "all_subgroups() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.all_subgroups"]], "aut() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.aut"]], "automorphism_group() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.automorphism_group"]], "cover() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.cover"]], "elementary_divisors() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.elementary_divisors"]], "exponent() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.exponent"]], "exponents() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupelement_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap.exponents"]], "exponents() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupelement_polycyclic method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_polycyclic.exponents"]], "gens_orders() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.gens_orders"]], "identity() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.identity"]], "is_subgroup_of() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.is_subgroup_of"]], "is_trivial() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.is_trivial"]], "lift() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.lift"]], "lift() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupsubgroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap.lift"]], "natural_homomorphism() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.natural_homomorphism"]], "order() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupelement_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap.order"]], "quotient() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.quotient"]], "relations() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.relations"]], "retract() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupsubgroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap.retract"]], "sage.groups.abelian_gps.abelian_group_gap": [[4, "module-sage.groups.abelian_gps.abelian_group_gap"]], "subgroup() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.subgroup"]], "abeliangroupmap (class in sage.groups.abelian_gps.abelian_group_morphism)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMap"]], "abeliangroupmorphism (class in sage.groups.abelian_gps.abelian_group_morphism)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism"]], "image() (sage.groups.abelian_gps.abelian_group_morphism.abeliangroupmorphism method)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism.image"]], "is_abeliangroupmorphism() (in module sage.groups.abelian_gps.abelian_group_morphism)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.is_AbelianGroupMorphism"]], "kernel() (sage.groups.abelian_gps.abelian_group_morphism.abeliangroupmorphism method)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism.kernel"]], "sage.groups.abelian_gps.abelian_group_morphism": [[5, "module-sage.groups.abelian_gps.abelian_group_morphism"]], "dualabeliangroup_class (class in sage.groups.abelian_gps.dual_abelian_group)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class"]], "element (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class attribute)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.Element"]], "base_ring() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.base_ring"]], "gen() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.gen"]], "gens() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.gens"]], "gens_orders() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.gens_orders"]], "group() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.group"]], "invariants() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.invariants"]], "is_dualabeliangroup() (in module sage.groups.abelian_gps.dual_abelian_group)": [[6, "sage.groups.abelian_gps.dual_abelian_group.is_DualAbelianGroup"]], "is_commutative() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.is_commutative"]], "list() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.list"]], "ngens() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.ngens"]], "order() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.order"]], "random_element() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.random_element"]], "sage.groups.abelian_gps.dual_abelian_group": [[6, "module-sage.groups.abelian_gps.dual_abelian_group"]], "dualabeliangroupelement (class in sage.groups.abelian_gps.dual_abelian_group_element)": [[7, "sage.groups.abelian_gps.dual_abelian_group_element.DualAbelianGroupElement"]], "is_dualabeliangroupelement() (in module sage.groups.abelian_gps.dual_abelian_group_element)": [[7, "sage.groups.abelian_gps.dual_abelian_group_element.is_DualAbelianGroupElement"]], "sage.groups.abelian_gps.dual_abelian_group_element": [[7, "module-sage.groups.abelian_gps.dual_abelian_group_element"]], "word_problem() (sage.groups.abelian_gps.dual_abelian_group_element.dualabeliangroupelement method)": [[7, "sage.groups.abelian_gps.dual_abelian_group_element.DualAbelianGroupElement.word_problem"]], "abeliangroupelementbase (class in sage.groups.abelian_gps.element_base)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase"]], "exponents() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.exponents"]], "is_trivial() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.is_trivial"]], "list() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.list"]], "multiplicative_order() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.multiplicative_order"]], "order() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.order"]], "sage.groups.abelian_gps.element_base": [[8, "module-sage.groups.abelian_gps.element_base"]], "abeliangroupwithvalues() (in module sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues"]], "abeliangroupwithvalueselement (class in sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValuesElement"]], "abeliangroupwithvaluesembedding (class in sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValuesEmbedding"]], "abeliangroupwithvalues_class (class in sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class"]], "element (sage.groups.abelian_gps.values.abeliangroupwithvalues_class attribute)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.Element"]], "gen() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.gen"]], "gens_values() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.gens_values"]], "sage.groups.abelian_gps.values": [[9, "module-sage.groups.abelian_gps.values"]], "value() (sage.groups.abelian_gps.values.abeliangroupwithvalueselement method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValuesElement.value"]], "values_embedding() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.values_embedding"]], "values_group() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.values_group"]], "additiveabeliangroup() (in module sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup"]], "additiveabeliangroupelement (class in sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroupElement"]], "additiveabeliangroup_class (class in sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class"]], "additiveabeliangroup_fixed_gens (class in sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens"]], "element (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class attribute)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.Element"]], "cover_and_relations_from_invariants() (in module sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.cover_and_relations_from_invariants"]], "exponent() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.exponent"]], "gens() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_fixed_gens method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens.gens"]], "identity() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_fixed_gens method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens.identity"]], "is_cyclic() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.is_cyclic"]], "is_multiplicative() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.is_multiplicative"]], "order() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.order"]], "permutation_group() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_fixed_gens method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens.permutation_group"]], "sage.groups.additive_abelian.additive_abelian_group": [[10, "module-sage.groups.additive_abelian.additive_abelian_group"]], "short_name() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.short_name"]], "additiveabeliangroupwrapper (class in sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper"]], "additiveabeliangroupwrapperelement (class in sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapperElement"]], "element (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper attribute)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.Element"]], "unwrappingmorphism (class in sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.UnwrappingMorphism"]], "basis_from_generators() (in module sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.basis_from_generators"]], "discrete_exp() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.discrete_exp"]], "discrete_log() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.discrete_log"]], "element() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapperelement method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapperElement.element"]], "from_generators() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper static method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.from_generators"]], "generator_orders() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.generator_orders"]], "sage.groups.additive_abelian.additive_abelian_wrapper": [[11, "module-sage.groups.additive_abelian.additive_abelian_wrapper"]], "torsion_subgroup() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.torsion_subgroup"]], "universe() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.universe"]], "affinegroup (class in sage.groups.affine_gps.affine_group)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup"]], "element (sage.groups.affine_gps.affine_group.affinegroup attribute)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.Element"]], "cardinality() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.cardinality"]], "degree() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.degree"]], "linear() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.linear"]], "linear_space() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.linear_space"]], "matrix_space() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.matrix_space"]], "random_element() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.random_element"]], "reflection() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.reflection"]], "sage.groups.affine_gps.affine_group": [[12, "module-sage.groups.affine_gps.affine_group"]], "some_elements() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.some_elements"]], "translation() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.translation"]], "vector_space() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.vector_space"]], "euclideangroup (class in sage.groups.affine_gps.euclidean_group)": [[13, "sage.groups.affine_gps.euclidean_group.EuclideanGroup"]], "random_element() (sage.groups.affine_gps.euclidean_group.euclideangroup method)": [[13, "sage.groups.affine_gps.euclidean_group.EuclideanGroup.random_element"]], "sage.groups.affine_gps.euclidean_group": [[13, "module-sage.groups.affine_gps.euclidean_group"]], "a() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.A"]], "affinegroupelement (class in sage.groups.affine_gps.group_element)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement"]], "b() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.b"]], "list() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.list"]], "matrix() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.matrix"]], "sage.groups.affine_gps.group_element": [[14, "module-sage.groups.affine_gps.group_element"]], "braid (class in sage.groups.braid)": [[15, "sage.groups.braid.Braid"]], "braidgroup() (in module sage.groups.braid)": [[15, "sage.groups.braid.BraidGroup"]], "braidgroup_class (class in sage.groups.braid)": [[15, "sage.groups.braid.BraidGroup_class"]], "element (sage.groups.braid.braidgroup_class attribute)": [[15, "sage.groups.braid.BraidGroup_class.Element"]], "lkb_matrix() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.LKB_matrix"]], "mappingclassgroupaction (class in sage.groups.braid)": [[15, "sage.groups.braid.MappingClassGroupAction"]], "rightquantumword (class in sage.groups.braid)": [[15, "sage.groups.braid.RightQuantumWord"]], "tl_basis_with_drain() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.TL_basis_with_drain"]], "tl_matrix() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.TL_matrix"]], "tl_representation() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.TL_representation"]], "alexander_polynomial() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.alexander_polynomial"]], "an_element() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.an_element"]], "annular_khovanov_complex() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.annular_khovanov_complex"]], "annular_khovanov_homology() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.annular_khovanov_homology"]], "as_permutation_group() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.as_permutation_group"]], "burau_matrix() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.burau_matrix"]], "cardinality() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.cardinality"]], "centralizer() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.centralizer"]], "colored_jones_polynomial() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.colored_jones_polynomial"]], "components_in_closure() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.components_in_closure"]], "conjugating_braid() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.conjugating_braid"]], "deformed_burau_matrix() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.deformed_burau_matrix"]], "dimension_of_tl_space() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.dimension_of_TL_space"]], "eps() (sage.groups.braid.rightquantumword method)": [[15, "sage.groups.braid.RightQuantumWord.eps"]], "gcd() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.gcd"]], "is_conjugated() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.is_conjugated"]], "is_periodic() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.is_periodic"]], "is_pseudoanosov() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.is_pseudoanosov"]], "is_reducible() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.is_reducible"]], "jones_polynomial() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.jones_polynomial"]], "lcm() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.lcm"]], "left_normal_form() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.left_normal_form"]], "links_gould_matrix() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.links_gould_matrix"]], "links_gould_polynomial() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.links_gould_polynomial"]], "mapping_class_action() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.mapping_class_action"]], "markov_trace() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.markov_trace"]], "mirror_image() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.mirror_image"]], "mirror_involution() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.mirror_involution"]], "order() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.order"]], "permutation() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.permutation"]], "plot() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.plot"]], "plot3d() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.plot3d"]], "pure_conjugating_braid() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.pure_conjugating_braid"]], "reduced_word() (sage.groups.braid.rightquantumword method)": [[15, "sage.groups.braid.RightQuantumWord.reduced_word"]], "reverse() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.reverse"]], "right_normal_form() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.right_normal_form"]], "rigidity() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.rigidity"]], "sage.groups.braid": [[15, "module-sage.groups.braid"]], "sliding_circuits() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.sliding_circuits"]], "some_elements() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.some_elements"]], "strands() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.strands"]], "strands() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.strands"]], "super_summit_set() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.super_summit_set"]], "thurston_type() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.thurston_type"]], "tropical_coordinates() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.tropical_coordinates"]], "tuples() (sage.groups.braid.rightquantumword method)": [[15, "sage.groups.braid.RightQuantumWord.tuples"]], "ultra_summit_set() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.ultra_summit_set"]], "cactusgroup (class in sage.groups.cactus_group)": [[16, "sage.groups.cactus_group.CactusGroup"]], "cactusgroup.element (class in sage.groups.cactus_group)": [[16, "sage.groups.cactus_group.CactusGroup.Element"]], "purecactusgroup (class in sage.groups.cactus_group)": [[16, "sage.groups.cactus_group.PureCactusGroup"]], "bilinear_form() (sage.groups.cactus_group.cactusgroup method)": [[16, "sage.groups.cactus_group.CactusGroup.bilinear_form"]], "gen() (sage.groups.cactus_group.cactusgroup method)": [[16, "sage.groups.cactus_group.CactusGroup.gen"]], "gen() (sage.groups.cactus_group.purecactusgroup method)": [[16, "sage.groups.cactus_group.PureCactusGroup.gen"]], "gens() (sage.groups.cactus_group.cactusgroup method)": [[16, "sage.groups.cactus_group.CactusGroup.gens"]], "gens() (sage.groups.cactus_group.purecactusgroup method)": [[16, "sage.groups.cactus_group.PureCactusGroup.gens"]], "geometric_representation_generators() (sage.groups.cactus_group.cactusgroup method)": [[16, "sage.groups.cactus_group.CactusGroup.geometric_representation_generators"]], "group_generators() (sage.groups.cactus_group.cactusgroup method)": [[16, "sage.groups.cactus_group.CactusGroup.group_generators"]], "n() (sage.groups.cactus_group.cactusgroup method)": [[16, "sage.groups.cactus_group.CactusGroup.n"]], "n() (sage.groups.cactus_group.purecactusgroup method)": [[16, "sage.groups.cactus_group.PureCactusGroup.n"]], "one() (sage.groups.cactus_group.cactusgroup method)": [[16, "sage.groups.cactus_group.CactusGroup.one"]], "random_element() (sage.groups.cactus_group.cactusgroup method)": [[16, "sage.groups.cactus_group.CactusGroup.random_element"]], "right_angled_coxeter_group() (sage.groups.cactus_group.cactusgroup method)": [[16, "sage.groups.cactus_group.CactusGroup.right_angled_coxeter_group"]], "sage.groups.cactus_group": [[16, "module-sage.groups.cactus_group"]], "to_matrix() (sage.groups.cactus_group.cactusgroup.element method)": [[16, "sage.groups.cactus_group.CactusGroup.Element.to_matrix"]], "to_permutation() (sage.groups.cactus_group.cactusgroup.element method)": [[16, "sage.groups.cactus_group.CactusGroup.Element.to_permutation"]], "classfunction() (in module sage.groups.class_function)": [[17, "sage.groups.class_function.ClassFunction"]], "classfunction_gap (class in sage.groups.class_function)": [[17, "sage.groups.class_function.ClassFunction_gap"]], "classfunction_libgap (class in sage.groups.class_function)": [[17, "sage.groups.class_function.ClassFunction_libgap"]], "adams_operation() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.adams_operation"]], "adams_operation() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.adams_operation"]], "central_character() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.central_character"]], "central_character() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.central_character"]], "decompose() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.decompose"]], "decompose() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.decompose"]], "degree() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.degree"]], "degree() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.degree"]], "determinant_character() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.determinant_character"]], "determinant_character() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.determinant_character"]], "domain() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.domain"]], "domain() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.domain"]], "exterior_power() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.exterior_power"]], "exterior_power() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.exterior_power"]], "gap() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.gap"]], "induct() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.induct"]], "induct() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.induct"]], "irreducible_constituents() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.irreducible_constituents"]], "irreducible_constituents() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.irreducible_constituents"]], "is_irreducible() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.is_irreducible"]], "is_irreducible() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.is_irreducible"]], "norm() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.norm"]], "norm() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.norm"]], "restrict() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.restrict"]], "restrict() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.restrict"]], "sage.groups.class_function": [[17, "module-sage.groups.class_function"]], "scalar_product() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.scalar_product"]], "scalar_product() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.scalar_product"]], "symmetric_power() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.symmetric_power"]], "symmetric_power() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.symmetric_power"]], "tensor_product() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.tensor_product"]], "tensor_product() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.tensor_product"]], "values() (sage.groups.class_function.classfunction_gap method)": [[17, "sage.groups.class_function.ClassFunction_gap.values"]], "values() (sage.groups.class_function.classfunction_libgap method)": [[17, "sage.groups.class_function.ClassFunction_libgap.values"]], "conjugacyclass (class in sage.groups.conjugacy_classes)": [[18, "sage.groups.conjugacy_classes.ConjugacyClass"]], "conjugacyclassgap (class in sage.groups.conjugacy_classes)": [[18, "sage.groups.conjugacy_classes.ConjugacyClassGAP"]], "an_element() (sage.groups.conjugacy_classes.conjugacyclass method)": [[18, "sage.groups.conjugacy_classes.ConjugacyClass.an_element"]], "cardinality() (sage.groups.conjugacy_classes.conjugacyclassgap method)": [[18, "sage.groups.conjugacy_classes.ConjugacyClassGAP.cardinality"]], "is_rational() (sage.groups.conjugacy_classes.conjugacyclass method)": [[18, "sage.groups.conjugacy_classes.ConjugacyClass.is_rational"]], "is_real() (sage.groups.conjugacy_classes.conjugacyclass method)": [[18, "sage.groups.conjugacy_classes.ConjugacyClass.is_real"]], "list() (sage.groups.conjugacy_classes.conjugacyclass method)": [[18, "sage.groups.conjugacy_classes.ConjugacyClass.list"]], "representative() (sage.groups.conjugacy_classes.conjugacyclass method)": [[18, "sage.groups.conjugacy_classes.ConjugacyClass.representative"]], "sage.groups.conjugacy_classes": [[18, "module-sage.groups.conjugacy_classes"]], "set() (sage.groups.conjugacy_classes.conjugacyclass method)": [[18, "sage.groups.conjugacy_classes.ConjugacyClass.set"]], "set() (sage.groups.conjugacy_classes.conjugacyclassgap method)": [[18, "sage.groups.conjugacy_classes.ConjugacyClassGAP.set"]], "assiongroups() (in module sage.groups.cubic_braid)": [[19, "sage.groups.cubic_braid.AssionGroupS"]], "assiongroupu() (in module sage.groups.cubic_braid)": [[19, "sage.groups.cubic_braid.AssionGroupU"]], "assions (sage.groups.cubic_braid.cubicbraidgroup.type attribute)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.type.AssionS"]], "assionu (sage.groups.cubic_braid.cubicbraidgroup.type attribute)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.type.AssionU"]], "coxeter (sage.groups.cubic_braid.cubicbraidgroup.type attribute)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.type.Coxeter"]], "cubicbraidelement (class in sage.groups.cubic_braid)": [[19, "sage.groups.cubic_braid.CubicBraidElement"]], "cubicbraidgroup (class in sage.groups.cubic_braid)": [[19, "sage.groups.cubic_braid.CubicBraidGroup"]], "cubicbraidgroup.type (class in sage.groups.cubic_braid)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.type"]], "element (sage.groups.cubic_braid.cubicbraidgroup attribute)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.Element"]], "as_classical_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.as_classical_group"]], "as_matrix_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.as_matrix_group"]], "as_permutation_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.as_permutation_group"]], "as_reflection_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.as_reflection_group"]], "braid() (sage.groups.cubic_braid.cubicbraidelement method)": [[19, "sage.groups.cubic_braid.CubicBraidElement.braid"]], "braid_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.braid_group"]], "burau_matrix() (sage.groups.cubic_braid.cubicbraidelement method)": [[19, "sage.groups.cubic_braid.CubicBraidElement.burau_matrix"]], "cardinality() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.cardinality"]], "centralizing_element() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.centralizing_element"]], "classical_invariant_form() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.classical_invariant_form"]], "codegrees() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.codegrees"]], "cubic_braid_subgroup() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.cubic_braid_subgroup"]], "degrees() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.degrees"]], "index_set() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.index_set"]], "is_finite() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.is_finite"]], "order() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.order"]], "sage.groups.cubic_braid": [[19, "module-sage.groups.cubic_braid"]], "simple_reflections() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.simple_reflections"]], "strands() (sage.groups.cubic_braid.cubicbraidgroup method)": [[19, "sage.groups.cubic_braid.CubicBraidGroup.strands"]], "element (sage.groups.finitely_presented.finitelypresentedgroup attribute)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.Element"]], "finitelypresentedgroup (class in sage.groups.finitely_presented)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup"]], "finitelypresentedgroupelement (class in sage.groups.finitely_presented)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroupElement"]], "groupmorphismwithgensimages (class in sage.groups.finitely_presented)": [[20, "sage.groups.finitely_presented.GroupMorphismWithGensImages"]], "rewritingsystem (class in sage.groups.finitely_presented)": [[20, "sage.groups.finitely_presented.RewritingSystem"]], "tietze() (sage.groups.finitely_presented.finitelypresentedgroupelement method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroupElement.Tietze"]], "abelian_invariants() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.abelian_invariants"]], "alexander_matrix() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.alexander_matrix"]], "as_permutation_group() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.as_permutation_group"]], "cardinality() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.cardinality"]], "direct_product() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.direct_product"]], "epimorphisms() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.epimorphisms"]], "finitely_presented_group() (sage.groups.finitely_presented.rewritingsystem method)": [[20, "sage.groups.finitely_presented.RewritingSystem.finitely_presented_group"]], "free_group() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.free_group"]], "free_group() (sage.groups.finitely_presented.rewritingsystem method)": [[20, "sage.groups.finitely_presented.RewritingSystem.free_group"]], "gap() (sage.groups.finitely_presented.rewritingsystem method)": [[20, "sage.groups.finitely_presented.RewritingSystem.gap"]], "is_confluent() (sage.groups.finitely_presented.rewritingsystem method)": [[20, "sage.groups.finitely_presented.RewritingSystem.is_confluent"]], "make_confluent() (sage.groups.finitely_presented.rewritingsystem method)": [[20, "sage.groups.finitely_presented.RewritingSystem.make_confluent"]], "order() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.order"]], "reduce() (sage.groups.finitely_presented.rewritingsystem method)": [[20, "sage.groups.finitely_presented.RewritingSystem.reduce"]], "relations() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.relations"]], "rewriting_system() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.rewriting_system"]], "rules() (sage.groups.finitely_presented.rewritingsystem method)": [[20, "sage.groups.finitely_presented.RewritingSystem.rules"]], "sage.groups.finitely_presented": [[20, "module-sage.groups.finitely_presented"]], "semidirect_product() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.semidirect_product"]], "simplification_isomorphism() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.simplification_isomorphism"]], "simplified() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.simplified"]], "structure_description() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[20, "sage.groups.finitely_presented.FinitelyPresentedGroup.structure_description"]], "wrap_fpgroup() (in module sage.groups.finitely_presented)": [[20, "sage.groups.finitely_presented.wrap_FpGroup"]], "alternatingpresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.AlternatingPresentation"]], "binarydihedralpresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.BinaryDihedralPresentation"]], "cactuspresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.CactusPresentation"]], "cyclicpresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.CyclicPresentation"]], "dicyclicpresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.DiCyclicPresentation"]], "dihedralpresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.DihedralPresentation"]], "finitelygeneratedabelianpresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.FinitelyGeneratedAbelianPresentation"]], "finitelygeneratedheisenbergpresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.FinitelyGeneratedHeisenbergPresentation"]], "kleinfourpresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.KleinFourPresentation"]], "quaternionpresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.QuaternionPresentation"]], "symmetricpresentation() (in module sage.groups.finitely_presented_named)": [[21, "sage.groups.finitely_presented_named.SymmetricPresentation"]], "sage.groups.finitely_presented_named": [[21, "module-sage.groups.finitely_presented_named"]], "element (sage.groups.free_group.freegroup_class attribute)": [[22, "sage.groups.free_group.FreeGroup_class.Element"]], "freegroup() (in module sage.groups.free_group)": [[22, "sage.groups.free_group.FreeGroup"]], "freegroupelement (class in sage.groups.free_group)": [[22, "sage.groups.free_group.FreeGroupElement"]], "freegroup_class (class in sage.groups.free_group)": [[22, "sage.groups.free_group.FreeGroup_class"]], "tietze() (sage.groups.free_group.freegroupelement method)": [[22, "sage.groups.free_group.FreeGroupElement.Tietze"]], "abelian_invariants() (sage.groups.free_group.freegroup_class method)": [[22, "sage.groups.free_group.FreeGroup_class.abelian_invariants"]], "fox_derivative() (sage.groups.free_group.freegroupelement method)": [[22, "sage.groups.free_group.FreeGroupElement.fox_derivative"]], "is_freegroup() (in module sage.groups.free_group)": [[22, "sage.groups.free_group.is_FreeGroup"]], "quotient() (sage.groups.free_group.freegroup_class method)": [[22, "sage.groups.free_group.FreeGroup_class.quotient"]], "rank() (sage.groups.free_group.freegroup_class method)": [[22, "sage.groups.free_group.FreeGroup_class.rank"]], "sage.groups.free_group": [[22, "module-sage.groups.free_group"]], "syllables() (sage.groups.free_group.freegroupelement method)": [[22, "sage.groups.free_group.FreeGroupElement.syllables"]], "wrap_freegroup() (in module sage.groups.free_group)": [[22, "sage.groups.free_group.wrap_FreeGroup"]], "bsgs() (in module sage.groups.generic)": [[23, "sage.groups.generic.bsgs"]], "discrete_log() (in module sage.groups.generic)": [[23, "sage.groups.generic.discrete_log"]], "discrete_log_generic() (in module sage.groups.generic)": [[23, "sage.groups.generic.discrete_log_generic"]], "discrete_log_lambda() (in module sage.groups.generic)": [[23, "sage.groups.generic.discrete_log_lambda"]], "discrete_log_rho() (in module sage.groups.generic)": [[23, "sage.groups.generic.discrete_log_rho"]], "linear_relation() (in module sage.groups.generic)": [[23, "sage.groups.generic.linear_relation"]], "merge_points() (in module sage.groups.generic)": [[23, "sage.groups.generic.merge_points"]], "multiple() (in module sage.groups.generic)": [[23, "sage.groups.generic.multiple"]], "multiples (class in sage.groups.generic)": [[23, "sage.groups.generic.multiples"]], "next() (sage.groups.generic.multiples method)": [[23, "sage.groups.generic.multiples.next"]], "order_from_bounds() (in module sage.groups.generic)": [[23, "sage.groups.generic.order_from_bounds"]], "order_from_multiple() (in module sage.groups.generic)": [[23, "sage.groups.generic.order_from_multiple"]], "sage.groups.generic": [[23, "module-sage.groups.generic"]], "structure_description() (in module sage.groups.generic)": [[23, "sage.groups.generic.structure_description"]], "abeliangroup (class in sage.groups.group)": [[24, "sage.groups.group.AbelianGroup"]], "algebraicgroup (class in sage.groups.group)": [[24, "sage.groups.group.AlgebraicGroup"]], "finitegroup (class in sage.groups.group)": [[24, "sage.groups.group.FiniteGroup"]], "group (class in sage.groups.group)": [[24, "sage.groups.group.Group"]], "is_group() (in module sage.groups.group)": [[24, "sage.groups.group.is_Group"]], "is_abelian() (sage.groups.group.abeliangroup method)": [[24, "sage.groups.group.AbelianGroup.is_abelian"]], "is_abelian() (sage.groups.group.group method)": [[24, "sage.groups.group.Group.is_abelian"]], "is_commutative() (sage.groups.group.group method)": [[24, "sage.groups.group.Group.is_commutative"]], "is_finite() (sage.groups.group.finitegroup method)": [[24, "sage.groups.group.FiniteGroup.is_finite"]], "is_finite() (sage.groups.group.group method)": [[24, "sage.groups.group.Group.is_finite"]], "is_multiplicative() (sage.groups.group.group method)": [[24, "sage.groups.group.Group.is_multiplicative"]], "order() (sage.groups.group.group method)": [[24, "sage.groups.group.Group.order"]], "quotient() (sage.groups.group.group method)": [[24, "sage.groups.group.Group.quotient"]], "sage.groups.group": [[24, "module-sage.groups.group"]], "element (sage.groups.group_exp.groupexp_class attribute)": [[25, "sage.groups.group_exp.GroupExp_Class.Element"]], "groupexp (class in sage.groups.group_exp)": [[25, "sage.groups.group_exp.GroupExp"]], "groupexpelement (class in sage.groups.group_exp)": [[25, "sage.groups.group_exp.GroupExpElement"]], "groupexp_class (class in sage.groups.group_exp)": [[25, "sage.groups.group_exp.GroupExp_Class"]], "an_element() (sage.groups.group_exp.groupexp_class method)": [[25, "sage.groups.group_exp.GroupExp_Class.an_element"]], "group_generators() (sage.groups.group_exp.groupexp_class method)": [[25, "sage.groups.group_exp.GroupExp_Class.group_generators"]], "one() (sage.groups.group_exp.groupexp_class method)": [[25, "sage.groups.group_exp.GroupExp_Class.one"]], "product() (sage.groups.group_exp.groupexp_class method)": [[25, "sage.groups.group_exp.GroupExp_Class.product"]], "sage.groups.group_exp": [[25, "module-sage.groups.group_exp"]], "element (sage.groups.group_semidirect_product.groupsemidirectproduct attribute)": [[26, "sage.groups.group_semidirect_product.GroupSemidirectProduct.Element"]], "groupsemidirectproduct (class in sage.groups.group_semidirect_product)": [[26, "sage.groups.group_semidirect_product.GroupSemidirectProduct"]], "groupsemidirectproductelement (class in sage.groups.group_semidirect_product)": [[26, "sage.groups.group_semidirect_product.GroupSemidirectProductElement"]], "act_to_right() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[26, "sage.groups.group_semidirect_product.GroupSemidirectProduct.act_to_right"]], "construction() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[26, "sage.groups.group_semidirect_product.GroupSemidirectProduct.construction"]], "group_generators() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[26, "sage.groups.group_semidirect_product.GroupSemidirectProduct.group_generators"]], "one() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[26, "sage.groups.group_semidirect_product.GroupSemidirectProduct.one"]], "opposite_semidirect_product() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[26, "sage.groups.group_semidirect_product.GroupSemidirectProduct.opposite_semidirect_product"]], "product() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[26, "sage.groups.group_semidirect_product.GroupSemidirectProduct.product"]], "sage.groups.group_semidirect_product": [[26, "module-sage.groups.group_semidirect_product"]], "to_opposite() (sage.groups.group_semidirect_product.groupsemidirectproductelement method)": [[26, "sage.groups.group_semidirect_product.GroupSemidirectProductElement.to_opposite"]], "sage.groups.groups_catalog": [[27, "module-sage.groups.groups_catalog"]], "indexedfreeabeliangroup (class in sage.groups.indexed_free_group)": [[28, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup"]], "indexedfreeabeliangroup.element (class in sage.groups.indexed_free_group)": [[28, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup.Element"]], "indexedfreegroup (class in sage.groups.indexed_free_group)": [[28, "sage.groups.indexed_free_group.IndexedFreeGroup"]], "indexedfreegroup.element (class in sage.groups.indexed_free_group)": [[28, "sage.groups.indexed_free_group.IndexedFreeGroup.Element"]], "indexedgroup (class in sage.groups.indexed_free_group)": [[28, "sage.groups.indexed_free_group.IndexedGroup"]], "gen() (sage.groups.indexed_free_group.indexedfreeabeliangroup method)": [[28, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup.gen"]], "gen() (sage.groups.indexed_free_group.indexedfreegroup method)": [[28, "sage.groups.indexed_free_group.IndexedFreeGroup.gen"]], "gens() (sage.groups.indexed_free_group.indexedgroup method)": [[28, "sage.groups.indexed_free_group.IndexedGroup.gens"]], "group_generators() (sage.groups.indexed_free_group.indexedgroup method)": [[28, "sage.groups.indexed_free_group.IndexedGroup.group_generators"]], "length() (sage.groups.indexed_free_group.indexedfreegroup.element method)": [[28, "sage.groups.indexed_free_group.IndexedFreeGroup.Element.length"]], "one() (sage.groups.indexed_free_group.indexedfreeabeliangroup method)": [[28, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup.one"]], "one() (sage.groups.indexed_free_group.indexedfreegroup method)": [[28, "sage.groups.indexed_free_group.IndexedFreeGroup.one"]], "order() (sage.groups.indexed_free_group.indexedgroup method)": [[28, "sage.groups.indexed_free_group.IndexedGroup.order"]], "rank() (sage.groups.indexed_free_group.indexedgroup method)": [[28, "sage.groups.indexed_free_group.IndexedGroup.rank"]], "sage.groups.indexed_free_group": [[28, "module-sage.groups.indexed_free_group"]], "to_word_list() (sage.groups.indexed_free_group.indexedfreegroup.element method)": [[28, "sage.groups.indexed_free_group.IndexedFreeGroup.Element.to_word_list"]], "kernelsubgroup (class in sage.groups.kernel_subgroup)": [[29, "sage.groups.kernel_subgroup.KernelSubgroup"]], "kernelsubgroup.element (class in sage.groups.kernel_subgroup)": [[29, "sage.groups.kernel_subgroup.KernelSubgroup.Element"]], "ambient() (sage.groups.kernel_subgroup.kernelsubgroup method)": [[29, "sage.groups.kernel_subgroup.KernelSubgroup.ambient"]], "defining_morphism() (sage.groups.kernel_subgroup.kernelsubgroup method)": [[29, "sage.groups.kernel_subgroup.KernelSubgroup.defining_morphism"]], "gens() (sage.groups.kernel_subgroup.kernelsubgroup method)": [[29, "sage.groups.kernel_subgroup.KernelSubgroup.gens"]], "lift() (sage.groups.kernel_subgroup.kernelsubgroup method)": [[29, "sage.groups.kernel_subgroup.KernelSubgroup.lift"]], "retract() (sage.groups.kernel_subgroup.kernelsubgroup method)": [[29, "sage.groups.kernel_subgroup.KernelSubgroup.retract"]], "sage.groups.kernel_subgroup": [[29, "module-sage.groups.kernel_subgroup"]], "element (sage.groups.libgap_group.grouplibgap attribute)": [[30, "sage.groups.libgap_group.GroupLibGAP.Element"]], "grouplibgap (class in sage.groups.libgap_group)": [[30, "sage.groups.libgap_group.GroupLibGAP"]], "sage.groups.libgap_group": [[30, "module-sage.groups.libgap_group"]], "groupmixinlibgap (class in sage.groups.libgap_mixin)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP"]], "cardinality() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.cardinality"]], "center() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.center"]], "character() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.character"]], "character_table() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.character_table"]], "class_function() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.class_function"]], "conjugacy_class() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.conjugacy_class"]], "conjugacy_classes() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.conjugacy_classes"]], "conjugacy_classes_representatives() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.conjugacy_classes_representatives"]], "intersection() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.intersection"]], "irreducible_characters() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.irreducible_characters"]], "is_abelian() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_abelian"]], "is_finite() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_finite"]], "is_isomorphic() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_isomorphic"]], "is_nilpotent() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_nilpotent"]], "is_p_group() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_p_group"]], "is_perfect() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_perfect"]], "is_polycyclic() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_polycyclic"]], "is_simple() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_simple"]], "is_solvable() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_solvable"]], "is_supersolvable() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_supersolvable"]], "list() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.list"]], "order() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.order"]], "random_element() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.random_element"]], "sage.groups.libgap_mixin": [[31, "module-sage.groups.libgap_mixin"]], "trivial_character() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[31, "sage.groups.libgap_mixin.GroupMixinLibGAP.trivial_character"]], "element (sage.groups.libgap_morphism.grouphomset_libgap attribute)": [[32, "sage.groups.libgap_morphism.GroupHomset_libgap.Element"]], "grouphomset_libgap (class in sage.groups.libgap_morphism)": [[32, "sage.groups.libgap_morphism.GroupHomset_libgap"]], "groupmorphism_libgap (class in sage.groups.libgap_morphism)": [[32, "sage.groups.libgap_morphism.GroupMorphism_libgap"]], "gap() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[32, "sage.groups.libgap_morphism.GroupMorphism_libgap.gap"]], "image() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[32, "sage.groups.libgap_morphism.GroupMorphism_libgap.image"]], "kernel() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[32, "sage.groups.libgap_morphism.GroupMorphism_libgap.kernel"]], "lift() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[32, "sage.groups.libgap_morphism.GroupMorphism_libgap.lift"]], "natural_map() (sage.groups.libgap_morphism.grouphomset_libgap method)": [[32, "sage.groups.libgap_morphism.GroupHomset_libgap.natural_map"]], "preimage() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[32, "sage.groups.libgap_morphism.GroupMorphism_libgap.preimage"]], "pushforward() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[32, "sage.groups.libgap_morphism.GroupMorphism_libgap.pushforward"]], "sage.groups.libgap_morphism": [[32, "module-sage.groups.libgap_morphism"]], "section() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[32, "sage.groups.libgap_morphism.GroupMorphism_libgap.section"]], "elementlibgap (class in sage.groups.libgap_wrapper)": [[33, "sage.groups.libgap_wrapper.ElementLibGAP"]], "parentlibgap (class in sage.groups.libgap_wrapper)": [[33, "sage.groups.libgap_wrapper.ParentLibGAP"]], "ambient() (sage.groups.libgap_wrapper.parentlibgap method)": [[33, "sage.groups.libgap_wrapper.ParentLibGAP.ambient"]], "gap() (sage.groups.libgap_wrapper.elementlibgap method)": [[33, "sage.groups.libgap_wrapper.ElementLibGAP.gap"]], "gap() (sage.groups.libgap_wrapper.parentlibgap method)": [[33, "sage.groups.libgap_wrapper.ParentLibGAP.gap"]], "gen() (sage.groups.libgap_wrapper.parentlibgap method)": [[33, "sage.groups.libgap_wrapper.ParentLibGAP.gen"]], "generators() (sage.groups.libgap_wrapper.parentlibgap method)": [[33, "sage.groups.libgap_wrapper.ParentLibGAP.generators"]], "gens() (sage.groups.libgap_wrapper.parentlibgap method)": [[33, "sage.groups.libgap_wrapper.ParentLibGAP.gens"]], "inverse() (sage.groups.libgap_wrapper.elementlibgap method)": [[33, "sage.groups.libgap_wrapper.ElementLibGAP.inverse"]], "is_conjugate() (sage.groups.libgap_wrapper.elementlibgap method)": [[33, "sage.groups.libgap_wrapper.ElementLibGAP.is_conjugate"]], "is_one() (sage.groups.libgap_wrapper.elementlibgap method)": [[33, "sage.groups.libgap_wrapper.ElementLibGAP.is_one"]], "is_subgroup() (sage.groups.libgap_wrapper.parentlibgap method)": [[33, "sage.groups.libgap_wrapper.ParentLibGAP.is_subgroup"]], "multiplicative_order() (sage.groups.libgap_wrapper.elementlibgap method)": [[33, "sage.groups.libgap_wrapper.ElementLibGAP.multiplicative_order"]], "ngens() (sage.groups.libgap_wrapper.parentlibgap method)": [[33, "sage.groups.libgap_wrapper.ParentLibGAP.ngens"]], "normalizer() (sage.groups.libgap_wrapper.elementlibgap method)": [[33, "sage.groups.libgap_wrapper.ElementLibGAP.normalizer"]], "nth_roots() (sage.groups.libgap_wrapper.elementlibgap method)": [[33, "sage.groups.libgap_wrapper.ElementLibGAP.nth_roots"]], "one() (sage.groups.libgap_wrapper.parentlibgap method)": [[33, "sage.groups.libgap_wrapper.ParentLibGAP.one"]], "order() (sage.groups.libgap_wrapper.elementlibgap method)": [[33, "sage.groups.libgap_wrapper.ElementLibGAP.order"]], "sage.groups.libgap_wrapper": [[33, "module-sage.groups.libgap_wrapper"]], "subgroup() (sage.groups.libgap_wrapper.parentlibgap method)": [[33, "sage.groups.libgap_wrapper.ParentLibGAP.subgroup"]], "nilpotentliegroup (class in sage.groups.lie_gps.nilpotent_lie_group)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup"]], "nilpotentliegroup.element (class in sage.groups.lie_gps.nilpotent_lie_group)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.Element"]], "adjoint() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.adjoint"]], "chart_exp1() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.chart_exp1"]], "chart_exp2() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.chart_exp2"]], "conjugation() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.conjugation"]], "exp() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.exp"]], "gens() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.gens"]], "left_invariant_extension() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.left_invariant_extension"]], "left_invariant_frame() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.left_invariant_frame"]], "left_translation() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.left_translation"]], "lie_algebra() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.lie_algebra"]], "livf() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.livf"]], "log() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.log"]], "one() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.one"]], "right_invariant_extension() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.right_invariant_extension"]], "right_invariant_frame() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.right_invariant_frame"]], "right_translation() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.right_translation"]], "rivf() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.rivf"]], "sage.groups.lie_gps.nilpotent_lie_group": [[34, "module-sage.groups.lie_gps.nilpotent_lie_group"]], "step() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[34, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.step"]], "binarydihedralgroup (class in sage.groups.matrix_gps.binary_dihedral)": [[35, "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup"]], "cardinality() (sage.groups.matrix_gps.binary_dihedral.binarydihedralgroup method)": [[35, "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup.cardinality"]], "order() (sage.groups.matrix_gps.binary_dihedral.binarydihedralgroup method)": [[35, "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup.order"]], "sage.groups.matrix_gps.binary_dihedral": [[35, "module-sage.groups.matrix_gps.binary_dihedral"]], "sage.groups.matrix_gps.catalog": [[36, "module-sage.groups.matrix_gps.catalog"]], "coxetermatrixgroup (class in sage.groups.matrix_gps.coxeter_group)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup"]], "coxetermatrixgroup.element (class in sage.groups.matrix_gps.coxeter_group)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element"]], "action_on_root_indices() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.action_on_root_indices"]], "bilinear_form() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.bilinear_form"]], "canonical_matrix() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.canonical_matrix"]], "canonical_representation() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.canonical_representation"]], "coxeter_matrix() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.coxeter_matrix"]], "descents() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.descents"]], "first_descent() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.first_descent"]], "fundamental_weight() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.fundamental_weight"]], "fundamental_weights() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.fundamental_weights"]], "has_right_descent() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.has_right_descent"]], "is_commutative() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.is_commutative"]], "is_finite() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.is_finite"]], "order() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.order"]], "positive_roots() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.positive_roots"]], "reflections() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.reflections"]], "roots() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.roots"]], "sage.groups.matrix_gps.coxeter_group": [[37, "module-sage.groups.matrix_gps.coxeter_group"]], "simple_reflection() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.simple_reflection"]], "simple_root_index() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[37, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.simple_root_index"]], "finitelygeneratedmatrixgroup_generic (class in sage.groups.matrix_gps.finitely_generated)": [[38, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic"]], "matrixgroup() (in module sage.groups.matrix_gps.finitely_generated)": [[38, "sage.groups.matrix_gps.finitely_generated.MatrixGroup"]], "quaternionmatrixgroupgf3() (in module sage.groups.matrix_gps.finitely_generated)": [[38, "sage.groups.matrix_gps.finitely_generated.QuaternionMatrixGroupGF3"]], "gen() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_generic method)": [[38, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic.gen"]], "gens() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_generic method)": [[38, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic.gens"]], "ngens() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_generic method)": [[38, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic.ngens"]], "normalize_square_matrices() (in module sage.groups.matrix_gps.finitely_generated)": [[38, "sage.groups.matrix_gps.finitely_generated.normalize_square_matrices"]], "sage.groups.matrix_gps.finitely_generated": [[38, "module-sage.groups.matrix_gps.finitely_generated"]], "finitelygeneratedmatrixgroup_gap (class in sage.groups.matrix_gps.finitely_generated_gap)": [[39, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap"]], "as_permutation_group() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[39, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.as_permutation_group"]], "invariant_generators() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[39, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.invariant_generators"]], "invariants_of_degree() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[39, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.invariants_of_degree"]], "module_composition_factors() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[39, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.module_composition_factors"]], "molien_series() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[39, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.molien_series"]], "reynolds_operator() (sage.groups.matrix_gps.finitely_generated_gap.finitelygeneratedmatrixgroup_gap method)": [[39, "sage.groups.matrix_gps.finitely_generated_gap.FinitelyGeneratedMatrixGroup_gap.reynolds_operator"]], "sage.groups.matrix_gps.finitely_generated_gap": [[39, "module-sage.groups.matrix_gps.finitely_generated_gap"]], "matrixgroupelement_generic (class in sage.groups.matrix_gps.group_element)": [[40, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic"]], "inverse() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[40, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.inverse"]], "is_matrixgroupelement() (in module sage.groups.matrix_gps.group_element)": [[40, "sage.groups.matrix_gps.group_element.is_MatrixGroupElement"]], "is_one() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[40, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.is_one"]], "list() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[40, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.list"]], "matrix() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[40, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.matrix"]], "sage.groups.matrix_gps.group_element": [[40, "module-sage.groups.matrix_gps.group_element"]], "matrixgroupelement_gap (class in sage.groups.matrix_gps.group_element_gap)": [[41, "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap"]], "list() (sage.groups.matrix_gps.group_element_gap.matrixgroupelement_gap method)": [[41, "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap.list"]], "matrix() (sage.groups.matrix_gps.group_element_gap.matrixgroupelement_gap method)": [[41, "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap.matrix"]], "multiplicative_order() (sage.groups.matrix_gps.group_element_gap.matrixgroupelement_gap method)": [[41, "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap.multiplicative_order"]], "sage.groups.matrix_gps.group_element_gap": [[41, "module-sage.groups.matrix_gps.group_element_gap"]], "word_problem() (sage.groups.matrix_gps.group_element_gap.matrixgroupelement_gap method)": [[41, "sage.groups.matrix_gps.group_element_gap.MatrixGroupElement_gap.word_problem"]], "heisenberggroup (class in sage.groups.matrix_gps.heisenberg)": [[42, "sage.groups.matrix_gps.heisenberg.HeisenbergGroup"]], "cardinality() (sage.groups.matrix_gps.heisenberg.heisenberggroup method)": [[42, "sage.groups.matrix_gps.heisenberg.HeisenbergGroup.cardinality"]], "order() (sage.groups.matrix_gps.heisenberg.heisenberggroup method)": [[42, "sage.groups.matrix_gps.heisenberg.HeisenbergGroup.order"]], "sage.groups.matrix_gps.heisenberg": [[42, "module-sage.groups.matrix_gps.heisenberg"]], "is_matrixgrouphomset() (in module sage.groups.matrix_gps.homset)": [[43, "sage.groups.matrix_gps.homset.is_MatrixGroupHomset"]], "sage.groups.matrix_gps.homset": [[43, "module-sage.groups.matrix_gps.homset"]], "groupactiononquotientmodule (class in sage.groups.matrix_gps.isometries)": [[44, "sage.groups.matrix_gps.isometries.GroupActionOnQuotientModule"]], "groupactiononsubmodule (class in sage.groups.matrix_gps.isometries)": [[44, "sage.groups.matrix_gps.isometries.GroupActionOnSubmodule"]], "groupofisometries (class in sage.groups.matrix_gps.isometries)": [[44, "sage.groups.matrix_gps.isometries.GroupOfIsometries"]], "invariant_bilinear_form() (sage.groups.matrix_gps.isometries.groupofisometries method)": [[44, "sage.groups.matrix_gps.isometries.GroupOfIsometries.invariant_bilinear_form"]], "sage.groups.matrix_gps.isometries": [[44, "module-sage.groups.matrix_gps.isometries"]], "gl() (in module sage.groups.matrix_gps.linear)": [[45, "sage.groups.matrix_gps.linear.GL"]], "linearmatrixgroup_generic (class in sage.groups.matrix_gps.linear)": [[45, "sage.groups.matrix_gps.linear.LinearMatrixGroup_generic"]], "sl() (in module sage.groups.matrix_gps.linear)": [[45, "sage.groups.matrix_gps.linear.SL"]], "sage.groups.matrix_gps.linear": [[45, "module-sage.groups.matrix_gps.linear"]], "linearmatrixgroup_gap (class in sage.groups.matrix_gps.linear_gap)": [[46, "sage.groups.matrix_gps.linear_gap.LinearMatrixGroup_gap"]], "sage.groups.matrix_gps.linear_gap": [[46, "module-sage.groups.matrix_gps.linear_gap"]], "element (sage.groups.matrix_gps.matrix_group.matrixgroup_generic attribute)": [[47, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic.Element"]], "matrixgroup_base (class in sage.groups.matrix_gps.matrix_group)": [[47, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base"]], "matrixgroup_generic (class in sage.groups.matrix_gps.matrix_group)": [[47, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic"]], "ambient() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[47, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.ambient"]], "as_matrix_group() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[47, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.as_matrix_group"]], "degree() (sage.groups.matrix_gps.matrix_group.matrixgroup_generic method)": [[47, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic.degree"]], "is_matrixgroup() (in module sage.groups.matrix_gps.matrix_group)": [[47, "sage.groups.matrix_gps.matrix_group.is_MatrixGroup"]], "matrix_space() (sage.groups.matrix_gps.matrix_group.matrixgroup_generic method)": [[47, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic.matrix_space"]], "sage.groups.matrix_gps.matrix_group": [[47, "module-sage.groups.matrix_gps.matrix_group"]], "sign_representation() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[47, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.sign_representation"]], "subgroup() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[47, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.subgroup"]], "element (sage.groups.matrix_gps.matrix_group_gap.matrixgroup_gap attribute)": [[48, "sage.groups.matrix_gps.matrix_group_gap.MatrixGroup_gap.Element"]], "matrixgroup_gap (class in sage.groups.matrix_gps.matrix_group_gap)": [[48, "sage.groups.matrix_gps.matrix_group_gap.MatrixGroup_gap"]], "sage.groups.matrix_gps.matrix_group_gap": [[48, "module-sage.groups.matrix_gps.matrix_group_gap"]], "structure_description() (sage.groups.matrix_gps.matrix_group_gap.matrixgroup_gap method)": [[48, "sage.groups.matrix_gps.matrix_group_gap.MatrixGroup_gap.structure_description"]], "subgroup() (sage.groups.matrix_gps.matrix_group_gap.matrixgroup_gap method)": [[48, "sage.groups.matrix_gps.matrix_group_gap.MatrixGroup_gap.subgroup"]], "sage.groups.matrix_gps.morphism": [[49, "module-sage.groups.matrix_gps.morphism"]], "to_libgap() (in module sage.groups.matrix_gps.morphism)": [[49, "sage.groups.matrix_gps.morphism.to_libgap"]], "namedmatrixgroup_generic (class in sage.groups.matrix_gps.named_group)": [[50, "sage.groups.matrix_gps.named_group.NamedMatrixGroup_generic"]], "normalize_args_invariant_form() (in module sage.groups.matrix_gps.named_group)": [[50, "sage.groups.matrix_gps.named_group.normalize_args_invariant_form"]], "normalize_args_vectorspace() (in module sage.groups.matrix_gps.named_group)": [[50, "sage.groups.matrix_gps.named_group.normalize_args_vectorspace"]], "sage.groups.matrix_gps.named_group": [[50, "module-sage.groups.matrix_gps.named_group"]], "namedmatrixgroup_gap (class in sage.groups.matrix_gps.named_group_gap)": [[51, "sage.groups.matrix_gps.named_group_gap.NamedMatrixGroup_gap"]], "sage.groups.matrix_gps.named_group_gap": [[51, "module-sage.groups.matrix_gps.named_group_gap"]], "go() (in module sage.groups.matrix_gps.orthogonal)": [[52, "sage.groups.matrix_gps.orthogonal.GO"]], "orthogonalmatrixgroup_generic (class in sage.groups.matrix_gps.orthogonal)": [[52, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic"]], "so() (in module sage.groups.matrix_gps.orthogonal)": [[52, "sage.groups.matrix_gps.orthogonal.SO"]], "invariant_bilinear_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_generic method)": [[52, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic.invariant_bilinear_form"]], "invariant_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_generic method)": [[52, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic.invariant_form"]], "invariant_quadratic_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_generic method)": [[52, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic.invariant_quadratic_form"]], "normalize_args_e() (in module sage.groups.matrix_gps.orthogonal)": [[52, "sage.groups.matrix_gps.orthogonal.normalize_args_e"]], "sage.groups.matrix_gps.orthogonal": [[52, "module-sage.groups.matrix_gps.orthogonal"]], "orthogonalmatrixgroup_gap (class in sage.groups.matrix_gps.orthogonal_gap)": [[53, "sage.groups.matrix_gps.orthogonal_gap.OrthogonalMatrixGroup_gap"]], "invariant_bilinear_form() (sage.groups.matrix_gps.orthogonal_gap.orthogonalmatrixgroup_gap method)": [[53, "sage.groups.matrix_gps.orthogonal_gap.OrthogonalMatrixGroup_gap.invariant_bilinear_form"]], "invariant_form() (sage.groups.matrix_gps.orthogonal_gap.orthogonalmatrixgroup_gap method)": [[53, "sage.groups.matrix_gps.orthogonal_gap.OrthogonalMatrixGroup_gap.invariant_form"]], "invariant_quadratic_form() (sage.groups.matrix_gps.orthogonal_gap.orthogonalmatrixgroup_gap method)": [[53, "sage.groups.matrix_gps.orthogonal_gap.OrthogonalMatrixGroup_gap.invariant_quadratic_form"]], "sage.groups.matrix_gps.orthogonal_gap": [[53, "module-sage.groups.matrix_gps.orthogonal_gap"]], "sp() (in module sage.groups.matrix_gps.symplectic)": [[54, "sage.groups.matrix_gps.symplectic.Sp"]], "symplecticmatrixgroup_generic (class in sage.groups.matrix_gps.symplectic)": [[54, "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_generic"]], "invariant_form() (sage.groups.matrix_gps.symplectic.symplecticmatrixgroup_generic method)": [[54, "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_generic.invariant_form"]], "sage.groups.matrix_gps.symplectic": [[54, "module-sage.groups.matrix_gps.symplectic"]], "symplecticmatrixgroup_gap (class in sage.groups.matrix_gps.symplectic_gap)": [[55, "sage.groups.matrix_gps.symplectic_gap.SymplecticMatrixGroup_gap"]], "invariant_form() (sage.groups.matrix_gps.symplectic_gap.symplecticmatrixgroup_gap method)": [[55, "sage.groups.matrix_gps.symplectic_gap.SymplecticMatrixGroup_gap.invariant_form"]], "sage.groups.matrix_gps.symplectic_gap": [[55, "module-sage.groups.matrix_gps.symplectic_gap"]], "gu() (in module sage.groups.matrix_gps.unitary)": [[56, "sage.groups.matrix_gps.unitary.GU"]], "su() (in module sage.groups.matrix_gps.unitary)": [[56, "sage.groups.matrix_gps.unitary.SU"]], "unitarymatrixgroup_generic (class in sage.groups.matrix_gps.unitary)": [[56, "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_generic"]], "finite_field_sqrt() (in module sage.groups.matrix_gps.unitary)": [[56, "sage.groups.matrix_gps.unitary.finite_field_sqrt"]], "invariant_form() (sage.groups.matrix_gps.unitary.unitarymatrixgroup_generic method)": [[56, "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_generic.invariant_form"]], "sage.groups.matrix_gps.unitary": [[56, "module-sage.groups.matrix_gps.unitary"]], "unitarymatrixgroup_gap (class in sage.groups.matrix_gps.unitary_gap)": [[57, "sage.groups.matrix_gps.unitary_gap.UnitaryMatrixGroup_gap"]], "invariant_form() (sage.groups.matrix_gps.unitary_gap.unitarymatrixgroup_gap method)": [[57, "sage.groups.matrix_gps.unitary_gap.UnitaryMatrixGroup_gap.invariant_form"]], "sage.groups.matrix_gps.unitary_gap": [[57, "module-sage.groups.matrix_gps.unitary_gap"]], "abstractargument (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.AbstractArgument"]], "abstractargumentgroup (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.AbstractArgumentGroup"]], "argumentbyelement (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.ArgumentByElement"]], "argumentbyelementgroup (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.ArgumentByElementGroup"]], "argumentgroup (in module sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.ArgumentGroup"]], "argumentgroupfactory (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory"]], "element (sage.groups.misc_gps.argument_groups.abstractargumentgroup attribute)": [[58, "sage.groups.misc_gps.argument_groups.AbstractArgumentGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.argumentbyelementgroup attribute)": [[58, "sage.groups.misc_gps.argument_groups.ArgumentByElementGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.rootsofunitygroup attribute)": [[58, "sage.groups.misc_gps.argument_groups.RootsOfUnityGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.signgroup attribute)": [[58, "sage.groups.misc_gps.argument_groups.SignGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.unitcirclegroup attribute)": [[58, "sage.groups.misc_gps.argument_groups.UnitCircleGroup.Element"]], "rootofunity (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.RootOfUnity"]], "rootsofunitygroup (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.RootsOfUnityGroup"]], "sign (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.Sign"]], "signgroup (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.SignGroup"]], "unitcirclegroup (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.UnitCircleGroup"]], "unitcirclepoint (class in sage.groups.misc_gps.argument_groups)": [[58, "sage.groups.misc_gps.argument_groups.UnitCirclePoint"]], "create_key_and_extra_args() (sage.groups.misc_gps.argument_groups.argumentgroupfactory method)": [[58, "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory.create_key_and_extra_args"]], "create_object() (sage.groups.misc_gps.argument_groups.argumentgroupfactory method)": [[58, "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory.create_object"]], "exponent (sage.groups.misc_gps.argument_groups.unitcirclepoint property)": [[58, "sage.groups.misc_gps.argument_groups.UnitCirclePoint.exponent"]], "exponent_denominator() (sage.groups.misc_gps.argument_groups.rootofunity method)": [[58, "sage.groups.misc_gps.argument_groups.RootOfUnity.exponent_denominator"]], "exponent_numerator() (sage.groups.misc_gps.argument_groups.rootofunity method)": [[58, "sage.groups.misc_gps.argument_groups.RootOfUnity.exponent_numerator"]], "is_minus_one() (sage.groups.misc_gps.argument_groups.sign method)": [[58, "sage.groups.misc_gps.argument_groups.Sign.is_minus_one"]], "is_minus_one() (sage.groups.misc_gps.argument_groups.unitcirclepoint method)": [[58, "sage.groups.misc_gps.argument_groups.UnitCirclePoint.is_minus_one"]], "is_one() (sage.groups.misc_gps.argument_groups.sign method)": [[58, "sage.groups.misc_gps.argument_groups.Sign.is_one"]], "is_one() (sage.groups.misc_gps.argument_groups.unitcirclepoint method)": [[58, "sage.groups.misc_gps.argument_groups.UnitCirclePoint.is_one"]], "sage.groups.misc_gps.argument_groups": [[58, "module-sage.groups.misc_gps.argument_groups"]], "element (sage.groups.misc_gps.imaginary_groups.imaginarygroup attribute)": [[59, "sage.groups.misc_gps.imaginary_groups.ImaginaryGroup.Element"]], "imaginaryelement (class in sage.groups.misc_gps.imaginary_groups)": [[59, "sage.groups.misc_gps.imaginary_groups.ImaginaryElement"]], "imaginarygroup (class in sage.groups.misc_gps.imaginary_groups)": [[59, "sage.groups.misc_gps.imaginary_groups.ImaginaryGroup"]], "imag() (sage.groups.misc_gps.imaginary_groups.imaginaryelement method)": [[59, "sage.groups.misc_gps.imaginary_groups.ImaginaryElement.imag"]], "real() (sage.groups.misc_gps.imaginary_groups.imaginaryelement method)": [[59, "sage.groups.misc_gps.imaginary_groups.ImaginaryElement.real"]], "sage.groups.misc_gps.imaginary_groups": [[59, "module-sage.groups.misc_gps.imaginary_groups"]], "sage.groups.misc_gps.misc_groups": [[60, "module-sage.groups.misc_gps.misc_groups"]], "parigroup (class in sage.groups.pari_group)": [[61, "sage.groups.pari_group.PariGroup"]], "cardinality() (sage.groups.pari_group.parigroup method)": [[61, "sage.groups.pari_group.PariGroup.cardinality"]], "degree() (sage.groups.pari_group.parigroup method)": [[61, "sage.groups.pari_group.PariGroup.degree"]], "label() (sage.groups.pari_group.parigroup method)": [[61, "sage.groups.pari_group.PariGroup.label"]], "order() (sage.groups.pari_group.parigroup method)": [[61, "sage.groups.pari_group.PariGroup.order"]], "permutation_group() (sage.groups.pari_group.parigroup method)": [[61, "sage.groups.pari_group.PariGroup.permutation_group"]], "sage.groups.pari_group": [[61, "module-sage.groups.pari_group"]], "signature() (sage.groups.pari_group.parigroup method)": [[61, "sage.groups.pari_group.PariGroup.signature"]], "transitive_number() (sage.groups.pari_group.parigroup method)": [[61, "sage.groups.pari_group.PariGroup.transitive_number"]], "permutationgroupelement() (in module sage.groups.perm_gps.constructor)": [[62, "sage.groups.perm_gps.constructor.PermutationGroupElement"]], "sage.groups.perm_gps.constructor": [[62, "module-sage.groups.perm_gps.constructor"]], "standardize_generator() (in module sage.groups.perm_gps.constructor)": [[62, "sage.groups.perm_gps.constructor.standardize_generator"]], "string_to_tuples() (in module sage.groups.perm_gps.constructor)": [[62, "sage.groups.perm_gps.constructor.string_to_tuples"]], "b() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.B"]], "cubegroup (class in sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup"]], "d() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.D"]], "f() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.F"]], "l() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.L"]], "r() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.R"]], "rubikscube (class in sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube"]], "u() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.U"]], "color_of_square() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.color_of_square"]], "create_poly() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.create_poly"]], "cubie() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube.cubie"]], "cubie_centers() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.cubie_centers"]], "cubie_colors() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.cubie_colors"]], "cubie_faces() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.cubie_faces"]], "display2d() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.display2d"]], "faces() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.faces"]], "facets() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.facets"]], "facets() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube.facets"]], "gen_names() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.gen_names"]], "index2singmaster() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.index2singmaster"]], "inv_list() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.inv_list"]], "legal() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.legal"]], "move() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.move"]], "move() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube.move"]], "parse() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.parse"]], "plot() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube.plot"]], "plot3d() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube.plot3d"]], "plot3d_cube() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.plot3d_cube"]], "plot3d_cubie() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.plot3d_cubie"]], "plot_cube() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.plot_cube"]], "polygon_plot3d() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.polygon_plot3d"]], "repr2d() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.repr2d"]], "rotation_list() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.rotation_list"]], "sage.groups.perm_gps.cubegroup": [[63, "module-sage.groups.perm_gps.cubegroup"]], "scramble() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube.scramble"]], "show() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube.show"]], "show3d() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube.show3d"]], "solve() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[63, "sage.groups.perm_gps.cubegroup.CubeGroup.solve"]], "solve() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube.solve"]], "undo() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[63, "sage.groups.perm_gps.cubegroup.RubiksCube.undo"]], "xproj() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.xproj"]], "yproj() (in module sage.groups.perm_gps.cubegroup)": [[63, "sage.groups.perm_gps.cubegroup.yproj"]], "sage.groups.perm_gps.partn_ref.canonical_augmentation": [[64, "module-sage.groups.perm_gps.partn_ref.canonical_augmentation"]], "op_represent() (in module sage.groups.perm_gps.partn_ref.data_structures)": [[65, "sage.groups.perm_gps.partn_ref.data_structures.OP_represent"]], "ps_represent() (in module sage.groups.perm_gps.partn_ref.data_structures)": [[65, "sage.groups.perm_gps.partn_ref.data_structures.PS_represent"]], "sc_test_list_perms() (in module sage.groups.perm_gps.partn_ref.data_structures)": [[65, "sage.groups.perm_gps.partn_ref.data_structures.SC_test_list_perms"]], "sage.groups.perm_gps.partn_ref.data_structures": [[65, "module-sage.groups.perm_gps.partn_ref.data_structures"]], "graphstruct (class in sage.groups.perm_gps.partn_ref.refinement_graphs)": [[66, "sage.groups.perm_gps.partn_ref.refinement_graphs.GraphStruct"]], "all_labeled_graphs() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[66, "sage.groups.perm_gps.partn_ref.refinement_graphs.all_labeled_graphs"]], "coarsest_equitable_refinement() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[66, "sage.groups.perm_gps.partn_ref.refinement_graphs.coarsest_equitable_refinement"]], "generate_dense_graphs_edge_addition() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[66, "sage.groups.perm_gps.partn_ref.refinement_graphs.generate_dense_graphs_edge_addition"]], "generate_dense_graphs_vert_addition() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[66, "sage.groups.perm_gps.partn_ref.refinement_graphs.generate_dense_graphs_vert_addition"]], "get_orbits() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[66, "sage.groups.perm_gps.partn_ref.refinement_graphs.get_orbits"]], "isomorphic() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[66, "sage.groups.perm_gps.partn_ref.refinement_graphs.isomorphic"]], "orbit_partition() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[66, "sage.groups.perm_gps.partn_ref.refinement_graphs.orbit_partition"]], "random_tests() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[66, "sage.groups.perm_gps.partn_ref.refinement_graphs.random_tests"]], "sage.groups.perm_gps.partn_ref.refinement_graphs": [[66, "module-sage.groups.perm_gps.partn_ref.refinement_graphs"]], "search_tree() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[66, "sage.groups.perm_gps.partn_ref.refinement_graphs.search_tree"]], "is_isomorphic() (in module sage.groups.perm_gps.partn_ref.refinement_lists)": [[67, "sage.groups.perm_gps.partn_ref.refinement_lists.is_isomorphic"]], "sage.groups.perm_gps.partn_ref.refinement_lists": [[67, "module-sage.groups.perm_gps.partn_ref.refinement_lists"]], "matrixstruct (class in sage.groups.perm_gps.partn_ref.refinement_matrices)": [[68, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct"]], "automorphism_group() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[68, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.automorphism_group"]], "canonical_relabeling() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[68, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.canonical_relabeling"]], "display() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[68, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.display"]], "is_isomorphic() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[68, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.is_isomorphic"]], "random_tests() (in module sage.groups.perm_gps.partn_ref.refinement_matrices)": [[68, "sage.groups.perm_gps.partn_ref.refinement_matrices.random_tests"]], "run() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[68, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.run"]], "sage.groups.perm_gps.partn_ref.refinement_matrices": [[68, "module-sage.groups.perm_gps.partn_ref.refinement_matrices"]], "element (sage.groups.perm_gps.permgroup.permutationgroup_generic attribute)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.Element"]], "permutationgroup() (in module sage.groups.perm_gps.permgroup)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup"]], "permutationgroup_action (class in sage.groups.perm_gps.permgroup)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_action"]], "permutationgroup_generic (class in sage.groups.perm_gps.permgroup)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic"]], "permutationgroup_subgroup (class in sage.groups.perm_gps.permgroup)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup"]], "subgroup (sage.groups.perm_gps.permgroup.permutationgroup_generic attribute)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.Subgroup"]], "ambient_group() (sage.groups.perm_gps.permgroup.permutationgroup_subgroup method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup.ambient_group"]], "as_finitely_presented_group() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.as_finitely_presented_group"]], "base() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.base"]], "blocks_all() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.blocks_all"]], "cardinality() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cardinality"]], "center() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.center"]], "centralizer() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.centralizer"]], "character() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.character"]], "character_table() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.character_table"]], "cohomology() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cohomology"]], "cohomology_part() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cohomology_part"]], "commutator() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.commutator"]], "composition_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.composition_series"]], "conjugacy_class() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_class"]], "conjugacy_classes() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_classes"]], "conjugacy_classes_representatives() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_classes_representatives"]], "conjugacy_classes_subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_classes_subgroups"]], "conjugate() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugate"]], "construction() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.construction"]], "cosets() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cosets"]], "degree() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.degree"]], "derived_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.derived_series"]], "direct_product() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.direct_product"]], "direct_product_permgroups() (in module sage.groups.perm_gps.permgroup)": [[69, "sage.groups.perm_gps.permgroup.direct_product_permgroups"]], "domain() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.domain"]], "exponent() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.exponent"]], "fitting_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.fitting_subgroup"]], "fixed_points() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.fixed_points"]], "frattini_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.frattini_subgroup"]], "from_gap_list() (in module sage.groups.perm_gps.permgroup)": [[69, "sage.groups.perm_gps.permgroup.from_gap_list"]], "gap() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gap"]], "gen() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gen"]], "gens() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gens"]], "gens_small() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gens_small"]], "group_id() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.group_id"]], "group_primitive_id() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.group_primitive_id"]], "hap_decorator() (in module sage.groups.perm_gps.permgroup)": [[69, "sage.groups.perm_gps.permgroup.hap_decorator"]], "has_element() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.has_element"]], "has_regular_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.has_regular_subgroup"]], "holomorph() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.holomorph"]], "homology() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.homology"]], "homology_part() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.homology_part"]], "id() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.id"]], "identity() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.identity"]], "intersection() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.intersection"]], "irreducible_characters() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.irreducible_characters"]], "is_abelian() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_abelian"]], "is_commutative() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_commutative"]], "is_cyclic() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_cyclic"]], "is_elementary_abelian() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_elementary_abelian"]], "is_isomorphic() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_isomorphic"]], "is_monomial() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_monomial"]], "is_nilpotent() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_nilpotent"]], "is_normal() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_normal"]], "is_normal() (sage.groups.perm_gps.permgroup.permutationgroup_subgroup method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup.is_normal"]], "is_perfect() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_perfect"]], "is_pgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_pgroup"]], "is_polycyclic() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_polycyclic"]], "is_primitive() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_primitive"]], "is_regular() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_regular"]], "is_semi_regular() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_semi_regular"]], "is_simple() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_simple"]], "is_solvable() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_solvable"]], "is_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_subgroup"]], "is_supersolvable() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_supersolvable"]], "is_transitive() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_transitive"]], "isomorphism_to() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.isomorphism_to"]], "isomorphism_type_info_simple_group() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.isomorphism_type_info_simple_group"]], "iteration() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.iteration"]], "largest_moved_point() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.largest_moved_point"]], "list() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.list"]], "load_hap() (in module sage.groups.perm_gps.permgroup)": [[69, "sage.groups.perm_gps.permgroup.load_hap"]], "lower_central_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.lower_central_series"]], "minimal_generating_set() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.minimal_generating_set"]], "molien_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.molien_series"]], "ngens() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.ngens"]], "non_fixed_points() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.non_fixed_points"]], "normal_subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.normal_subgroups"]], "normalizer() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.normalizer"]], "normalizes() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.normalizes"]], "one() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.one"]], "orbit() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.orbit"]], "orbits() (sage.groups.perm_gps.permgroup.permutationgroup_action method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_action.orbits"]], "orbits() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.orbits"]], "order() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.order"]], "poincare_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.poincare_series"]], "quotient() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.quotient"]], "random_element() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.random_element"]], "representative_action() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.representative_action"]], "sage.groups.perm_gps.permgroup": [[69, "module-sage.groups.perm_gps.permgroup"]], "semidirect_product() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.semidirect_product"]], "sign_representation() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.sign_representation"]], "smallest_moved_point() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.smallest_moved_point"]], "socle() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.socle"]], "solvable_radical() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.solvable_radical"]], "stabilizer() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.stabilizer"]], "strong_generating_system() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.strong_generating_system"]], "structure_description() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.structure_description"]], "subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.subgroup"]], "subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.subgroups"]], "sylow_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.sylow_subgroup"]], "transversals() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.transversals"]], "trivial_character() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.trivial_character"]], "upper_central_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[69, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.upper_central_series"]], "permutationgroupelement (class in sage.groups.perm_gps.permgroup_element)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement"]], "symmetricgroupelement (class in sage.groups.perm_gps.permgroup_element)": [[70, "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement"]], "absolute_length() (sage.groups.perm_gps.permgroup_element.symmetricgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement.absolute_length"]], "cycle_string() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycle_string"]], "cycle_tuples() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycle_tuples"]], "cycle_type() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycle_type"]], "cycles() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycles"]], "dict() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.dict"]], "domain() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.domain"]], "gap() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.gap"]], "has_descent() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.has_descent"]], "has_left_descent() (sage.groups.perm_gps.permgroup_element.symmetricgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement.has_left_descent"]], "inverse() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.inverse"]], "is_permutationgroupelement() (in module sage.groups.perm_gps.permgroup_element)": [[70, "sage.groups.perm_gps.permgroup_element.is_PermutationGroupElement"]], "make_permgroup_element() (in module sage.groups.perm_gps.permgroup_element)": [[70, "sage.groups.perm_gps.permgroup_element.make_permgroup_element"]], "make_permgroup_element_v2() (in module sage.groups.perm_gps.permgroup_element)": [[70, "sage.groups.perm_gps.permgroup_element.make_permgroup_element_v2"]], "matrix() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.matrix"]], "multiplicative_order() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.multiplicative_order"]], "orbit() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.orbit"]], "sage.groups.perm_gps.permgroup_element": [[70, "module-sage.groups.perm_gps.permgroup_element"]], "sign() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.sign"]], "tuple() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.tuple"]], "word_problem() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[70, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.word_problem"]], "permutationgroupmorphism (class in sage.groups.perm_gps.permgroup_morphism)": [[71, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism"]], "permutationgroupmorphism_from_gap (class in sage.groups.perm_gps.permgroup_morphism)": [[71, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism_from_gap"]], "permutationgroupmorphism_id (class in sage.groups.perm_gps.permgroup_morphism)": [[71, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism_id"]], "permutationgroupmorphism_im_gens (class in sage.groups.perm_gps.permgroup_morphism)": [[71, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism_im_gens"]], "image() (sage.groups.perm_gps.permgroup_morphism.permutationgroupmorphism method)": [[71, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism.image"]], "is_permutationgroupmorphism() (in module sage.groups.perm_gps.permgroup_morphism)": [[71, "sage.groups.perm_gps.permgroup_morphism.is_PermutationGroupMorphism"]], "kernel() (sage.groups.perm_gps.permgroup_morphism.permutationgroupmorphism method)": [[71, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism.kernel"]], "sage.groups.perm_gps.permgroup_morphism": [[71, "module-sage.groups.perm_gps.permgroup_morphism"]], "alternatinggroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.AlternatingGroup"]], "complexreflectiongroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup"]], "cyclicpermutationgroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup"]], "dicyclicgroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.DiCyclicGroup"]], "dihedralgroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.DihedralGroup"]], "element (sage.groups.perm_gps.permgroup_named.symmetricgroup attribute)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.Element"]], "generaldihedralgroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.GeneralDihedralGroup"]], "jankogroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.JankoGroup"]], "kleinfourgroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.KleinFourGroup"]], "mathieugroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.MathieuGroup"]], "pgl (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PGL"]], "pgu (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PGU"]], "psl (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PSL"]], "psp (in module sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PSP"]], "psu (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PSU"]], "psp (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PSp"]], "permutationgroup_plg (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg"]], "permutationgroup_pug (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PermutationGroup_pug"]], "permutationgroup_symalt (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PermutationGroup_symalt"]], "permutationgroup_unique (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PermutationGroup_unique"]], "primitivegroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PrimitiveGroup"]], "primitivegroups() (in module sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PrimitiveGroups"]], "primitivegroupsall (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsAll"]], "primitivegroupsofdegree (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsOfDegree"]], "quaterniongroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.QuaternionGroup"]], "semidihedralgroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.SemidihedralGroup"]], "smallpermutationgroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.SmallPermutationGroup"]], "splitmetacyclicgroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.SplitMetacyclicGroup"]], "suzukigroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.SuzukiGroup"]], "suzukisporadicgroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.SuzukiSporadicGroup"]], "symmetricgroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup"]], "transitivegroup (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.TransitiveGroup"]], "transitivegroups() (in module sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.TransitiveGroups"]], "transitivegroupsall (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.TransitiveGroupsAll"]], "transitivegroupsofdegree (class in sage.groups.perm_gps.permgroup_named)": [[72, "sage.groups.perm_gps.permgroup_named.TransitiveGroupsOfDegree"]], "algebra() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.algebra"]], "as_abeliangroup() (sage.groups.perm_gps.permgroup_named.cyclicpermutationgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup.as_AbelianGroup"]], "base_ring() (sage.groups.perm_gps.permgroup_named.permutationgroup_plg method)": [[72, "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg.base_ring"]], "base_ring() (sage.groups.perm_gps.permgroup_named.suzukigroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SuzukiGroup.base_ring"]], "cardinality() (sage.groups.perm_gps.permgroup_named.primitivegroupsofdegree method)": [[72, "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsOfDegree.cardinality"]], "cardinality() (sage.groups.perm_gps.permgroup_named.transitivegroupsofdegree method)": [[72, "sage.groups.perm_gps.permgroup_named.TransitiveGroupsOfDegree.cardinality"]], "cartan_type() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.cartan_type"]], "codegrees() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[72, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.codegrees"]], "conjugacy_class() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_class"]], "conjugacy_classes() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_classes"]], "conjugacy_classes_iterator() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_classes_iterator"]], "conjugacy_classes_representatives() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_classes_representatives"]], "coxeter_matrix() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.coxeter_matrix"]], "degree() (sage.groups.perm_gps.permgroup_named.transitivegroup method)": [[72, "sage.groups.perm_gps.permgroup_named.TransitiveGroup.degree"]], "degrees() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[72, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.degrees"]], "field_of_definition() (sage.groups.perm_gps.permgroup_named.permutationgroup_pug method)": [[72, "sage.groups.perm_gps.permgroup_named.PermutationGroup_pug.field_of_definition"]], "gap_small_group() (sage.groups.perm_gps.permgroup_named.smallpermutationgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SmallPermutationGroup.gap_small_group"]], "group_primitive_id() (sage.groups.perm_gps.permgroup_named.primitivegroup method)": [[72, "sage.groups.perm_gps.permgroup_named.PrimitiveGroup.group_primitive_id"]], "index_set() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[72, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.index_set"]], "index_set() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.index_set"]], "is_abelian() (sage.groups.perm_gps.permgroup_named.cyclicpermutationgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup.is_abelian"]], "is_abelian() (sage.groups.perm_gps.permgroup_named.dicyclicgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.DiCyclicGroup.is_abelian"]], "is_commutative() (sage.groups.perm_gps.permgroup_named.cyclicpermutationgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup.is_commutative"]], "is_commutative() (sage.groups.perm_gps.permgroup_named.dicyclicgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.DiCyclicGroup.is_commutative"]], "major_index() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.major_index"]], "matrix_degree() (sage.groups.perm_gps.permgroup_named.permutationgroup_plg method)": [[72, "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg.matrix_degree"]], "order() (sage.groups.perm_gps.permgroup_named.smallpermutationgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SmallPermutationGroup.order"]], "ramification_module_decomposition_hurwitz_curve() (sage.groups.perm_gps.permgroup_named.psl method)": [[72, "sage.groups.perm_gps.permgroup_named.PSL.ramification_module_decomposition_hurwitz_curve"]], "ramification_module_decomposition_modular_curve() (sage.groups.perm_gps.permgroup_named.psl method)": [[72, "sage.groups.perm_gps.permgroup_named.PSL.ramification_module_decomposition_modular_curve"]], "reflections() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.reflections"]], "sage.groups.perm_gps.permgroup_named": [[72, "module-sage.groups.perm_gps.permgroup_named"]], "simple_reflection() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[72, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.simple_reflection"]], "simple_reflection() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.simple_reflection"]], "transitive_number() (sage.groups.perm_gps.permgroup_named.transitivegroup method)": [[72, "sage.groups.perm_gps.permgroup_named.TransitiveGroup.transitive_number"]], "young_subgroup() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[72, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.young_subgroup"]], "sage.groups.perm_gps.permutation_groups_catalog": [[73, "module-sage.groups.perm_gps.permutation_groups_catalog"]], "permutationsconjugacyclass (class in sage.groups.perm_gps.symgp_conjugacy_class)": [[74, "sage.groups.perm_gps.symgp_conjugacy_class.PermutationsConjugacyClass"]], "symmetricgroupconjugacyclass (class in sage.groups.perm_gps.symgp_conjugacy_class)": [[74, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClass"]], "symmetricgroupconjugacyclassmixin (class in sage.groups.perm_gps.symgp_conjugacy_class)": [[74, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClassMixin"]], "conjugacy_class_iterator() (in module sage.groups.perm_gps.symgp_conjugacy_class)": [[74, "sage.groups.perm_gps.symgp_conjugacy_class.conjugacy_class_iterator"]], "default_representative() (in module sage.groups.perm_gps.symgp_conjugacy_class)": [[74, "sage.groups.perm_gps.symgp_conjugacy_class.default_representative"]], "partition() (sage.groups.perm_gps.symgp_conjugacy_class.symmetricgroupconjugacyclassmixin method)": [[74, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClassMixin.partition"]], "sage.groups.perm_gps.symgp_conjugacy_class": [[74, "module-sage.groups.perm_gps.symgp_conjugacy_class"]], "set() (sage.groups.perm_gps.symgp_conjugacy_class.permutationsconjugacyclass method)": [[74, "sage.groups.perm_gps.symgp_conjugacy_class.PermutationsConjugacyClass.set"]], "set() (sage.groups.perm_gps.symgp_conjugacy_class.symmetricgroupconjugacyclass method)": [[74, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClass.set"]], "cohomologyraag (class in sage.groups.raag)": [[75, "sage.groups.raag.CohomologyRAAG"]], "cohomologyraag.element (class in sage.groups.raag)": [[75, "sage.groups.raag.CohomologyRAAG.Element"]], "rightangledartingroup (class in sage.groups.raag)": [[75, "sage.groups.raag.RightAngledArtinGroup"]], "rightangledartingroup.element (class in sage.groups.raag)": [[75, "sage.groups.raag.RightAngledArtinGroup.Element"]], "algebra_generators() (sage.groups.raag.cohomologyraag method)": [[75, "sage.groups.raag.CohomologyRAAG.algebra_generators"]], "cohomology() (sage.groups.raag.rightangledartingroup method)": [[75, "sage.groups.raag.RightAngledArtinGroup.cohomology"]], "degree_on_basis() (sage.groups.raag.cohomologyraag method)": [[75, "sage.groups.raag.CohomologyRAAG.degree_on_basis"]], "gen() (sage.groups.raag.cohomologyraag method)": [[75, "sage.groups.raag.CohomologyRAAG.gen"]], "gen() (sage.groups.raag.rightangledartingroup method)": [[75, "sage.groups.raag.RightAngledArtinGroup.gen"]], "gens() (sage.groups.raag.cohomologyraag method)": [[75, "sage.groups.raag.CohomologyRAAG.gens"]], "gens() (sage.groups.raag.rightangledartingroup method)": [[75, "sage.groups.raag.RightAngledArtinGroup.gens"]], "graph() (sage.groups.raag.rightangledartingroup method)": [[75, "sage.groups.raag.RightAngledArtinGroup.graph"]], "ngens() (sage.groups.raag.cohomologyraag method)": [[75, "sage.groups.raag.CohomologyRAAG.ngens"]], "ngens() (sage.groups.raag.rightangledartingroup method)": [[75, "sage.groups.raag.RightAngledArtinGroup.ngens"]], "one() (sage.groups.raag.rightangledartingroup method)": [[75, "sage.groups.raag.RightAngledArtinGroup.one"]], "one_basis() (sage.groups.raag.cohomologyraag method)": [[75, "sage.groups.raag.CohomologyRAAG.one_basis"]], "one_element() (sage.groups.raag.rightangledartingroup method)": [[75, "sage.groups.raag.RightAngledArtinGroup.one_element"]], "sage.groups.raag": [[75, "module-sage.groups.raag"]], "semimonomialtransformation (class in sage.groups.semimonomial_transformations.semimonomial_transformation)": [[76, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation"]], "get_autom() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[76, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_autom"]], "get_perm() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[76, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_perm"]], "get_v() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[76, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_v"]], "get_v_inverse() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[76, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_v_inverse"]], "invert_v() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[76, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.invert_v"]], "sage.groups.semimonomial_transformations.semimonomial_transformation": [[76, "module-sage.groups.semimonomial_transformations.semimonomial_transformation"]], "element (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup attribute)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.Element"]], "semimonomialactionmat (class in sage.groups.semimonomial_transformations.semimonomial_transformation_group)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialActionMat"]], "semimonomialactionvec (class in sage.groups.semimonomial_transformations.semimonomial_transformation_group)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialActionVec"]], "semimonomialtransformationgroup (class in sage.groups.semimonomial_transformations.semimonomial_transformation_group)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup"]], "base_ring() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.base_ring"]], "degree() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.degree"]], "gens() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.gens"]], "order() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[77, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.order"]], "sage.groups.semimonomial_transformations.semimonomial_transformation_group": [[77, "module-sage.groups.semimonomial_transformations.semimonomial_transformation_group"]]}})