Search.setIndex({"docnames": ["index", "sage/groups/abelian_gps/abelian_aut", "sage/groups/abelian_gps/abelian_group", "sage/groups/abelian_gps/abelian_group_element", "sage/groups/abelian_gps/abelian_group_gap", "sage/groups/abelian_gps/abelian_group_morphism", "sage/groups/abelian_gps/dual_abelian_group", "sage/groups/abelian_gps/dual_abelian_group_element", "sage/groups/abelian_gps/element_base", "sage/groups/abelian_gps/values", "sage/groups/additive_abelian/additive_abelian_group", "sage/groups/additive_abelian/additive_abelian_wrapper", "sage/groups/affine_gps/affine_group", "sage/groups/affine_gps/euclidean_group", "sage/groups/affine_gps/group_element", "sage/groups/braid", "sage/groups/class_function", "sage/groups/conjugacy_classes", "sage/groups/cubic_braid", "sage/groups/finitely_presented", "sage/groups/finitely_presented_named", "sage/groups/free_group", "sage/groups/generic", "sage/groups/group", "sage/groups/group_exp", "sage/groups/group_semidirect_product", "sage/groups/groups_catalog", "sage/groups/indexed_free_group", "sage/groups/libgap_group", "sage/groups/libgap_mixin", "sage/groups/libgap_morphism", "sage/groups/libgap_wrapper", "sage/groups/lie_gps/nilpotent_lie_group", "sage/groups/matrix_gps/binary_dihedral", "sage/groups/matrix_gps/catalog", "sage/groups/matrix_gps/coxeter_group", "sage/groups/matrix_gps/finitely_generated", "sage/groups/matrix_gps/group_element", "sage/groups/matrix_gps/heisenberg", "sage/groups/matrix_gps/homset", "sage/groups/matrix_gps/isometries", "sage/groups/matrix_gps/linear", "sage/groups/matrix_gps/matrix_group", "sage/groups/matrix_gps/morphism", "sage/groups/matrix_gps/named_group", "sage/groups/matrix_gps/orthogonal", "sage/groups/matrix_gps/symplectic", "sage/groups/matrix_gps/unitary", "sage/groups/misc_gps/argument_groups", "sage/groups/misc_gps/imaginary_groups", "sage/groups/misc_gps/misc_groups", "sage/groups/pari_group", "sage/groups/perm_gps/constructor", "sage/groups/perm_gps/cubegroup", "sage/groups/perm_gps/partn_ref/canonical_augmentation", "sage/groups/perm_gps/partn_ref/data_structures", "sage/groups/perm_gps/partn_ref/refinement_graphs", "sage/groups/perm_gps/partn_ref/refinement_lists", "sage/groups/perm_gps/partn_ref/refinement_matrices", "sage/groups/perm_gps/permgroup", "sage/groups/perm_gps/permgroup_element", "sage/groups/perm_gps/permgroup_morphism", "sage/groups/perm_gps/permgroup_named", "sage/groups/perm_gps/permutation_groups_catalog", "sage/groups/perm_gps/symgp_conjugacy_class", "sage/groups/raag", "sage/groups/semimonomial_transformations/semimonomial_transformation", "sage/groups/semimonomial_transformations/semimonomial_transformation_group"], "filenames": ["index.rst", "sage/groups/abelian_gps/abelian_aut.rst", "sage/groups/abelian_gps/abelian_group.rst", "sage/groups/abelian_gps/abelian_group_element.rst", "sage/groups/abelian_gps/abelian_group_gap.rst", "sage/groups/abelian_gps/abelian_group_morphism.rst", "sage/groups/abelian_gps/dual_abelian_group.rst", "sage/groups/abelian_gps/dual_abelian_group_element.rst", "sage/groups/abelian_gps/element_base.rst", "sage/groups/abelian_gps/values.rst", "sage/groups/additive_abelian/additive_abelian_group.rst", "sage/groups/additive_abelian/additive_abelian_wrapper.rst", "sage/groups/affine_gps/affine_group.rst", "sage/groups/affine_gps/euclidean_group.rst", "sage/groups/affine_gps/group_element.rst", "sage/groups/braid.rst", "sage/groups/class_function.rst", "sage/groups/conjugacy_classes.rst", "sage/groups/cubic_braid.rst", "sage/groups/finitely_presented.rst", "sage/groups/finitely_presented_named.rst", "sage/groups/free_group.rst", "sage/groups/generic.rst", "sage/groups/group.rst", "sage/groups/group_exp.rst", "sage/groups/group_semidirect_product.rst", "sage/groups/groups_catalog.rst", "sage/groups/indexed_free_group.rst", "sage/groups/libgap_group.rst", "sage/groups/libgap_mixin.rst", "sage/groups/libgap_morphism.rst", "sage/groups/libgap_wrapper.rst", "sage/groups/lie_gps/nilpotent_lie_group.rst", "sage/groups/matrix_gps/binary_dihedral.rst", "sage/groups/matrix_gps/catalog.rst", "sage/groups/matrix_gps/coxeter_group.rst", "sage/groups/matrix_gps/finitely_generated.rst", "sage/groups/matrix_gps/group_element.rst", "sage/groups/matrix_gps/heisenberg.rst", "sage/groups/matrix_gps/homset.rst", "sage/groups/matrix_gps/isometries.rst", "sage/groups/matrix_gps/linear.rst", "sage/groups/matrix_gps/matrix_group.rst", "sage/groups/matrix_gps/morphism.rst", "sage/groups/matrix_gps/named_group.rst", "sage/groups/matrix_gps/orthogonal.rst", "sage/groups/matrix_gps/symplectic.rst", "sage/groups/matrix_gps/unitary.rst", "sage/groups/misc_gps/argument_groups.rst", "sage/groups/misc_gps/imaginary_groups.rst", "sage/groups/misc_gps/misc_groups.rst", "sage/groups/pari_group.rst", "sage/groups/perm_gps/constructor.rst", "sage/groups/perm_gps/cubegroup.rst", "sage/groups/perm_gps/partn_ref/canonical_augmentation.rst", "sage/groups/perm_gps/partn_ref/data_structures.rst", "sage/groups/perm_gps/partn_ref/refinement_graphs.rst", "sage/groups/perm_gps/partn_ref/refinement_lists.rst", "sage/groups/perm_gps/partn_ref/refinement_matrices.rst", "sage/groups/perm_gps/permgroup.rst", "sage/groups/perm_gps/permgroup_element.rst", "sage/groups/perm_gps/permgroup_morphism.rst", "sage/groups/perm_gps/permgroup_named.rst", "sage/groups/perm_gps/permutation_groups_catalog.rst", "sage/groups/perm_gps/symgp_conjugacy_class.rst", "sage/groups/raag.rst", "sage/groups/semimonomial_transformations/semimonomial_transformation.rst", "sage/groups/semimonomial_transformations/semimonomial_transformation_group.rst"], "titles": ["Groups", "Automorphisms of abelian groups", "Multiplicative Abelian Groups", "Abelian group elements", "Finitely generated abelian groups with GAP.", "Homomorphisms of abelian groups", "Dual groups of Finite Multiplicative Abelian Groups", "Elements (characters) of the dual group of a finite Abelian group", "Base class for abelian group elements", "Multiplicative Abelian Groups With Values", "Additive Abelian Groups", "Wrapper class for abelian groups", "Affine Groups", "Euclidean Groups", "Elements of Affine Groups", "Braid groups", "Class functions of groups.", "Conjugacy classes of groups", "Cubic Braid Groups", "Finitely Presented Groups", "Named Finitely Presented Groups", "Free Groups", "Miscellaneous generic functions", "Base class for groups", "Functor that converts a commutative additive group into a multiplicative group.", "Semidirect product of groups", "Examples of Groups", "Indexed Free Groups", "Generic LibGAP-based Group", "Mix-in Class for GAP-based Groups", "Group homomorphisms for groups with a GAP backend", "LibGAP-based Groups", "Nilpotent Lie groups", "Binary Dihedral Groups", "Library of Interesting Groups", "Coxeter Groups As Matrix Groups", "Finitely Generated Matrix Groups", "Matrix Group Elements", "Heisenberg Group", "Matrix Group Homsets", "Groups of isometries.", "Linear Groups", "Base classes for Matrix Groups", "Homomorphisms Between Matrix Groups", "Base for Classical Matrix Groups", "Orthogonal Linear Groups", "Symplectic Linear Groups", "Unitary Groups <span class=\"math notranslate nohighlight\">\\(GU(n,q)\\)</span> and <span class=\"math notranslate nohighlight\">\\(SU(n,q)\\)</span>", "Groups of elements representing (complex) arguments.", "Groups of imaginary elements", "Miscellaneous Groups", "PARI Groups", "Constructor for permutations", "Rubik\u2019s cube group functions", "Canonical augmentation", "Data structures", "Graph-theoretic partition backtrack functions", "Partition backtrack functions for lists \u2013 a simple example of using partn_ref", "Partition backtrack functions for matrices", "Permutation groups", "Permutation group elements", "Permutation group homomorphisms", "\u201cNamed\u201d Permutation groups (such as the symmetric group, S_n)", "Catalog of permutation groups", "Conjugacy Classes Of The Symmetric Group", "Right-Angled Artin Groups", "Elements of a semimonomial transformation group", "Semimonomial transformation group"], "terms": {"exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "base": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 30, 32, 33, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 51, 53, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 51, 53, 54, 56, 58, 59, 60, 61, 62, 65, 66, 67], "homomorph": [0, 2, 4, 6, 9, 19, 21, 24, 25, 53, 59], "gap": [0, 1, 2, 3, 5, 7, 15, 16, 17, 19, 20, 21, 22, 28, 31, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 55, 59, 60, 61, 62, 66, 67], "backend": [0, 40], "libgap": [0, 1, 4, 16, 19, 21, 29, 30, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 59, 60], "gener": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 37, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 67], "mix": 0, "pari": [0, 2, 59], "miscellan": [0, 26], "function": [0, 2, 3, 5, 6, 10, 11, 15, 17, 18, 19, 20, 21, 25, 29, 30, 31, 36, 37, 40, 43, 44, 47, 54, 59, 60, 61, 62], "free": [0, 2, 10, 12, 13, 15, 19, 20, 26, 30, 31, 32, 40, 53, 54, 65], "finit": [0, 1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 26, 29, 30, 32, 33, 35, 37, 40, 41, 42, 44, 45, 46, 47, 53, 54, 59, 61, 62, 65, 66, 67], "present": [0, 2, 15, 18, 21, 22, 26, 30, 33, 42, 59, 62, 65], "name": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 18, 19, 21, 27, 32, 36, 44, 53, 56, 59, 65], "braid": [0, 26], "cubic": 0, "index": [0, 2, 9, 15, 16, 18, 21, 22, 31, 35, 45, 53, 60, 62, 65, 66, 67], "right": [0, 2, 15, 21, 22, 25, 32, 35, 37, 40, 45, 46, 47, 53, 54, 59, 60, 66, 67], "angl": [0, 53], "artin": [0, 18], "functor": [0, 16, 25], "convert": [0, 2, 4, 7, 14, 19, 20, 21, 31, 32, 35, 37, 43, 52, 59, 60], "commut": [0, 2, 6, 9, 12, 13, 19, 23, 27, 30, 32, 35, 53, 59, 62, 65], "addit": [0, 11, 12, 13, 18, 22, 23, 45, 47, 52, 53, 54, 56, 59, 60, 65], "multipl": [0, 3, 5, 7, 8, 12, 14, 15, 21, 22, 25, 31, 32, 38, 45, 59, 60, 62, 66, 67], "semidirect": [0, 12, 13, 19, 59, 62, 66, 67], "product": [0, 2, 10, 12, 13, 16, 19, 22, 24, 31, 32, 35, 36, 37, 48, 53, 59, 60, 62, 66, 67], "semimonomi": 0, "transform": [0, 12, 13, 19], "element": [0, 1, 2, 4, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 38, 40, 42, 43, 44, 45, 47, 52, 53, 56, 59, 62, 64, 65, 67], "conjugaci": [0, 1, 15, 16, 29, 59, 62], "automorph": [0, 4, 15, 19, 25, 32, 54, 56, 58, 59, 62, 66, 67], "With": [0, 10, 59], "valu": [0, 2, 15, 16, 18, 19, 20, 22, 25, 29, 32, 35, 42, 45, 54, 56, 59, 62], "dual": [0, 2, 32, 35], "charact": [0, 16, 29, 36, 59, 62], "wrapper": [0, 2, 4, 15, 16, 17, 19, 21, 25, 37, 48, 59, 60, 62], "repres": [0, 8, 12, 13, 14, 15, 17, 19, 21, 22, 27, 29, 35, 41, 45, 46, 47, 52, 53, 56, 59, 60, 62, 64], "complex": [0, 6, 15, 18, 22, 36, 55, 59, 62], "argument": [0, 2, 6, 11, 12, 13, 18, 21, 22, 36, 44, 45, 52, 54, 59, 61], "imaginari": 0, "catalog": [0, 20], "constructor": [0, 21, 25, 31, 44, 45, 46, 47, 59], "symmetr": [0, 16, 17, 20, 26, 40, 45, 52, 59, 60], "s_n": [0, 20, 54, 66, 67], "rubik": [0, 60], "": [0, 1, 2, 4, 5, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 30, 35, 36, 37, 40, 42, 48, 49, 52, 54, 56, 59, 60, 61, 62, 64, 65, 66, 67], "cube": [0, 56, 60], "Of": [0, 2], "The": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 67], "librari": [0, 31, 36], "interest": [0, 53, 59], "between": [0, 5, 10, 15, 18, 22, 30, 31, 35, 53, 56, 58, 59, 61, 65], "homset": [0, 24, 30], "binari": [0, 20, 22], "dihedr": [0, 19, 20, 22, 26, 36, 42, 59, 61, 62], "coxet": [0, 18, 26, 62, 65], "As": [0, 8, 12, 13, 14, 59, 62], "linear": [0, 12, 13, 14, 16, 22, 25, 29, 36, 37, 40, 42, 44, 59, 61, 62], "orthogon": [0, 16, 40, 44], "isometri": 0, "symplect": [0, 18, 30, 44, 62], "unitari": [0, 15, 18, 29, 30, 44, 62], "gu": [0, 18, 26, 29, 30, 44], "n": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 31, 33, 36, 37, 38, 40, 41, 45, 46, 48, 49, 52, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 67], "q": [0, 4, 10, 11, 15, 19, 20, 22, 32, 36, 40, 45, 46, 48, 56, 59, 60, 62], "su": [0, 26, 29, 42, 44], "heisenberg": [0, 20, 32], "euclidean": [0, 26], "nilpot": [0, 26, 29, 59], "canon": [0, 16, 18, 20, 35, 36, 56, 58, 59], "augment": 0, "data": [0, 2, 9, 35, 45, 48, 54, 58], "structur": [0, 3, 9, 19, 22, 25, 37, 42, 54, 59, 62, 65], "graph": [0, 15, 35, 41, 55, 58, 59, 65], "theoret": [0, 5, 52, 59, 61], "backtrack": 0, "list": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 35, 36, 37, 40, 42, 52, 53, 55, 56, 58, 59, 60, 62, 64, 65], "simpl": [0, 6, 15, 29, 35, 54, 56, 59, 62, 65], "us": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 56, 59, 60, 61, 62, 66], "partn_ref": [0, 54, 55, 56, 58], "matric": [0, 1, 12, 14, 15, 17, 19, 20, 22, 26, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 59, 62, 67], "classic": [0, 18, 62], "modul": [0, 2, 4, 9, 10, 12, 13, 14, 16, 17, 18, 31, 36, 40, 44, 52, 54, 55, 62], "search": [0, 56, 59], "page": [0, 15], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 67], "implement": [1, 2, 4, 7, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 42, 44, 54, 55, 59, 60, 62, 63, 67], "sage": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67], "abelian_gp": [1, 2, 3, 4, 5, 6, 7, 8, 9, 30], "abelian_group_gap": [1, 4, 30], "import": [1, 2, 3, 4, 5, 6, 7, 10, 15, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 36, 37, 39, 40, 42, 43, 44, 47, 48, 49, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64], "abeliangroupgap": [1, 4, 30], "g": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 56, 59, 60, 61, 62, 64, 65, 66, 67], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67], "6": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 30, 35, 36, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 56, 58, 59, 60, 61, 62], "autg": 1, "aut": [1, 4, 25, 59, 66, 67], "act": [1, 12, 13, 19, 20, 25, 35, 40, 44, 45, 53, 56, 59, 60, 62, 65], "domain": [1, 5, 9, 10, 11, 12, 13, 16, 18, 30, 44, 48, 52, 56, 59, 60, 61, 62, 64], "an_el": [1, 4, 7, 12, 15, 17, 18, 24, 25, 30, 31, 37, 40, 42, 62, 66], "f": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 36, 37, 39, 40, 41, 42, 45, 46, 47, 51, 53, 59, 60, 61, 64, 65, 66, 67], "pcg": [1, 4], "f1": [1, 2, 4, 5, 15, 21, 30, 31, 51], "f2": [1, 2, 4, 5, 9, 15, 21, 30, 31], "f3": [1, 2, 4, 15, 30, 31], "Or": [1, 19], "anyth": [1, 2, 7, 11, 12, 21, 23, 30, 37, 52], "coercibl": [1, 4], "its": [1, 2, 6, 9, 14, 15, 18, 19, 22, 24, 25, 29, 30, 31, 32, 42, 52, 54, 56, 58, 59, 60, 61, 62], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 29, 30, 31, 32, 35, 36, 37, 40, 42, 44, 45, 46, 47, 48, 49, 53, 59, 60, 61, 62, 64, 65, 67], "abeliangroup": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 23, 27], "f0": [1, 2, 9, 15], "additiveabeliangroup": [1, 10, 11], "1": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67], "0": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67], "we": [1, 2, 4, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 30, 31, 35, 36, 37, 40, 41, 42, 53, 56, 58, 59, 60, 62, 64, 65], "can": [1, 2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 36, 37, 40, 42, 44, 48, 52, 53, 54, 56, 59, 60, 61, 62], "comput": [1, 2, 9, 11, 15, 17, 19, 21, 22, 29, 36, 37, 41, 52, 53, 55, 56, 58, 59, 61, 62], "conjugacy_classes_repres": [1, 29, 36, 40, 41, 44, 59, 62], "order": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 22, 23, 27, 29, 30, 31, 33, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67], "12": [1, 2, 3, 4, 12, 13, 14, 15, 18, 19, 22, 29, 30, 33, 35, 36, 37, 41, 42, 45, 47, 53, 56, 58, 59, 60, 62, 66], "creat": [1, 2, 6, 10, 11, 12, 13, 15, 18, 19, 20, 21, 24, 25, 26, 32, 35, 36, 40, 48, 53, 59, 60, 61, 62, 65], "subgroup": [1, 2, 3, 4, 5, 11, 12, 13, 14, 16, 18, 19, 21, 22, 23, 25, 29, 30, 31, 32, 36, 40, 42, 45, 53, 59, 60, 61, 62, 65], "do": [1, 4, 12, 13, 14, 15, 16, 18, 19, 30, 36, 37, 52, 62], "same": [1, 2, 4, 7, 9, 10, 18, 19, 20, 21, 22, 25, 28, 35, 36, 42, 52, 53, 54, 56, 59, 60, 62, 65, 67], "them": [1, 9, 19, 21, 35, 37, 53, 59], "gen": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 17, 18, 19, 21, 22, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 56, 59, 60, 61, 62, 65, 66, 67], "onli": [1, 2, 5, 9, 10, 15, 17, 18, 19, 21, 22, 29, 31, 36, 45, 56, 59, 60, 61, 62, 65, 67], "ar": [1, 2, 3, 4, 6, 8, 9, 10, 11, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 31, 32, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65], "support": [1, 2, 6, 19, 31, 36, 37, 60, 67], "option": [1, 2, 4, 6, 9, 15, 18, 19, 20, 21, 22, 25, 32, 35, 36, 42, 44, 45, 46, 47, 52, 53, 56, 58, 59, 62, 64, 66], "gap_packag": [1, 4, 59, 62], "traceback": [1, 2, 11, 17, 18, 19, 20, 22, 23, 29, 30, 32, 35, 36, 37, 45, 46, 47, 49, 59, 62], "most": [1, 2, 11, 15, 17, 18, 19, 20, 21, 22, 23, 29, 30, 32, 35, 36, 37, 45, 46, 47, 49, 56, 58, 59, 62], "recent": [1, 2, 11, 17, 18, 19, 20, 22, 23, 29, 30, 32, 35, 36, 37, 45, 46, 47, 49, 59, 62], "call": [1, 2, 4, 7, 11, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 35, 36, 37, 45, 46, 47, 49, 52, 53, 54, 59, 60, 62, 66], "last": [1, 2, 11, 15, 17, 18, 19, 20, 22, 23, 29, 30, 32, 35, 36, 37, 45, 46, 47, 49, 53, 59, 62], "valueerror": [1, 2, 15, 18, 19, 20, 22, 30, 36, 37, 46, 47, 49, 59, 62], "author": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 27, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 53, 59, 60, 61, 62, 64, 65, 66, 67], "simon": [1, 4, 30, 36, 40, 42, 59], "brandhorst": [1, 4, 30, 40], "2018": [1, 4, 15, 30, 32, 36, 40, 42, 43, 44, 45, 46, 47, 48, 49, 59, 60, 65], "02": [1, 2, 3, 5, 18, 22, 30, 33, 40, 59, 60, 61, 65], "17": [1, 4, 15, 29, 30, 36, 51, 53, 56, 59, 60, 62], "initi": [1, 4, 5, 10, 12, 13, 16, 18, 19, 20, 24, 25, 27, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 48, 52, 59, 65, 66, 67], "version": [1, 4, 5, 11, 12, 13, 15, 16, 18, 19, 20, 22, 24, 25, 27, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 48, 53, 59, 60, 61, 65, 66, 67], "abelian_aut": 1, "abeliangroupautomorph": 1, "parent": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 29, 30, 31, 32, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 52, 54, 59, 60, 62, 65, 66], "x": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 51, 53, 54, 59, 60, 61, 62, 64, 65, 66], "check": [1, 2, 4, 9, 10, 11, 14, 15, 16, 17, 18, 19, 22, 30, 31, 36, 37, 40, 42, 45, 47, 52, 53, 54, 59, 61, 62, 64, 67], "true": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 56, 58, 59, 60, 61, 62, 64, 66, 67], "elementlibgap": [1, 4, 21, 28, 31, 37], "input": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 58, 59, 60, 62, 64, 65], "abeliangroupautomorphismgroup_gap": 1, "bool": [1, 4, 14, 15, 37, 40], "default": [1, 2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 25, 29, 30, 31, 32, 35, 36, 37, 38, 40, 42, 45, 46, 47, 48, 52, 53, 58, 59, 60, 62, 64], "i": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67], "an": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 65, 66], "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67], "4": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67], "5": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 56, 58, 59, 60, 61, 62, 64, 65, 67], "matrix": [1, 2, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 29, 30, 31, 33, 34, 38, 40, 41, 45, 46, 47, 58, 59, 60, 62, 67], "return": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67], "defin": [1, 2, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 29, 30, 31, 32, 35, 36, 37, 40, 42, 44, 45, 46, 47, 48, 54, 59, 60, 62, 65, 66, 67], "self": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 42, 45, 51, 53, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67], "th": [1, 2, 6, 8, 9, 12, 16, 18, 19, 21, 31, 33, 35, 36, 59, 62, 65], "row": [1, 2, 14, 20, 29, 42, 44, 58, 59, 67], "expon": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 37, 48, 49, 59, 60, 62, 65], "vector": [1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 32, 35, 36, 38, 44, 45, 59, 62, 66, 67], "imag": [1, 5, 15, 18, 19, 21, 25, 30, 49, 52, 56, 58, 59, 60, 61], "output": [1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 35, 36, 37, 40, 42, 44, 45, 46, 47, 52, 53, 56, 59, 60, 62, 64], "squar": [1, 15, 18, 36, 44, 45, 46, 47, 53, 62], "over": [1, 2, 3, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 29, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 49, 53, 54, 59, 60, 61, 62, 64, 65, 66, 67], "integ": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 49, 53, 54, 56, 59, 60, 62], "f4": [1, 2, 18, 30, 31], "compar": [1, 2, 10, 11, 55], "abeliangroupautomorphismgroup": 1, "full": [1, 4, 12, 14, 18, 19, 22, 37, 42, 59, 62], "instanc": [1, 2, 7, 18, 24, 30, 40, 42, 44, 45, 46, 47, 48, 59, 61, 62], "abeliangroup_gap": [1, 4], "equival": [1, 15, 19, 35, 45, 59], "aut1": 1, "alia": [1, 2, 4, 6, 9, 10, 11, 12, 15, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 37, 42, 45, 48, 49, 59, 60, 62, 67], "gap_group": [1, 59, 62], "categori": [1, 2, 4, 9, 19, 24, 25, 27, 30, 36, 40, 41, 42, 44, 45, 46, 47, 48, 49, 59, 62], "ambient": [1, 2, 4, 10, 11, 12, 13, 18, 24, 31, 36, 42, 52, 59, 60], "none": [1, 2, 4, 9, 11, 15, 18, 19, 21, 22, 25, 27, 30, 31, 32, 35, 36, 37, 40, 41, 42, 44, 45, 46, 47, 48, 52, 53, 56, 58, 59, 61, 62, 64, 65], "cachedrepresent": [1, 44, 62], "groupmixinlibgap": [1, 4, 19, 28, 29, 42], "parentlibgap": [1, 4, 19, 21, 28, 31, 42, 59], "construct": [1, 2, 4, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 25, 35, 36, 37, 42, 44, 47, 53, 56, 59, 60, 61, 62, 64], "directli": [1, 2, 4, 12, 15, 28, 30, 31, 42, 59, 66], "libgap_par": [1, 31], "deriv": [1, 2, 9, 10, 19, 21, 23, 28, 29, 31, 42, 59], "ha": [1, 2, 3, 7, 8, 9, 11, 15, 18, 19, 20, 22, 31, 32, 35, 36, 37, 42, 48, 53, 54, 56, 59, 60, 62, 64, 65], "been": [1, 2, 11, 18, 31, 42, 53], "automorphismgroupabeliangroup": 1, "covering_matrix_r": 1, "cover": [1, 4, 10], "ring": [1, 2, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 24, 27, 29, 30, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 59, 62, 65, 66, 67], "time": [1, 2, 6, 15, 16, 18, 19, 20, 21, 22, 25, 36, 40, 41, 42, 44, 45, 46, 47, 53, 56, 59, 62, 66, 67], "zz": [1, 2, 4, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 59, 65], "where": [1, 2, 4, 9, 10, 12, 13, 15, 18, 19, 20, 21, 22, 27, 29, 31, 33, 35, 36, 38, 42, 44, 45, 48, 53, 54, 56, 59, 60, 62, 64, 65, 67], "number": [1, 2, 6, 9, 11, 15, 16, 18, 19, 20, 21, 23, 27, 29, 31, 35, 36, 37, 42, 44, 45, 48, 51, 52, 54, 58, 59, 60, 62, 64, 65, 67], "independ": [1, 2, 10, 32], "matrixspac": [1, 12, 14, 29, 36, 37, 41, 42], "dens": [1, 12, 14, 37, 42, 56], "is_subgroup_of": [1, 4], "consid": [1, 2, 4, 12, 15, 18, 21, 22, 33, 56, 59, 60, 62, 65], "s1": [1, 4, 15, 19, 25, 54, 59, 62], "s2": [1, 4, 15, 18, 19, 24, 25, 54, 59, 62], "fals": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 15, 17, 18, 19, 21, 22, 23, 25, 29, 31, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 52, 53, 56, 57, 59, 60, 62], "abeliangroupautomorphismgroup_subgroup": 1, "thei": [1, 2, 15, 18, 19, 21, 22, 31, 35, 36, 53, 54, 56, 59, 62, 65], "instead": [1, 2, 4, 6, 8, 9, 12, 13, 15, 17, 22, 30, 39, 42, 43, 59, 60, 61, 66], "tupl": [1, 2, 3, 4, 6, 7, 8, 9, 10, 15, 16, 18, 19, 21, 22, 29, 31, 32, 36, 37, 42, 52, 56, 59, 60, 62, 64, 67], "let": [2, 6, 12, 13, 15, 16, 21, 26, 33, 35, 36, 38, 40, 59, 60, 62, 64, 65], "you": [2, 4, 6, 9, 12, 13, 15, 19, 20, 21, 22, 28, 29, 31, 36, 37, 42, 52, 53, 59, 60, 62], "form": [2, 9, 10, 15, 18, 19, 20, 22, 24, 25, 35, 36, 38, 40, 42, 44, 45, 46, 47, 53, 59, 60, 62, 65], "r": [2, 10, 15, 18, 19, 20, 21, 22, 31, 36, 38, 41, 44, 45, 46, 47, 48, 51, 53, 59, 60, 61, 65, 66, 67], "oplu": 2, "zz_": [2, 20], "k_1": 2, "cdot": [2, 15, 18, 19, 20, 21, 32, 48, 53, 59, 62, 64, 66, 67], "k_t": 2, "It": [2, 4, 9, 15, 16, 17, 18, 19, 21, 22, 36, 54, 59, 62, 64], "customari": 2, "denot": [2, 6, 9, 19, 22, 24, 25, 29, 53, 59], "infinit": [2, 4, 8, 9, 11, 15, 17, 18, 19, 20, 22, 40, 41, 50, 62], "cyclic": [2, 9, 10, 16, 19, 20, 22, 26, 31, 56, 59, 61, 62], "have": [2, 3, 7, 15, 18, 19, 22, 28, 29, 30, 31, 35, 36, 37, 40, 42, 44, 47, 52, 54, 59, 62, 65], "so": [2, 7, 9, 12, 13, 15, 16, 17, 18, 19, 22, 25, 26, 35, 36, 42, 45, 47, 53, 59, 62, 65, 66, 67], "written": [2, 3, 9, 16, 37, 59, 62], "vec": 2, "k": [2, 12, 16, 19, 20, 22, 30, 32, 33, 36, 37, 40, 51, 59, 62, 65], "dot": [2, 9, 18, 21, 52, 59, 60], "zero": [2, 9, 10, 14, 20, 21, 36, 56], "t": [2, 3, 10, 11, 15, 16, 18, 21, 22, 25, 36, 37, 38, 45, 53, 55, 56, 59, 60, 61, 62], "non": [2, 3, 9, 10, 15, 17, 19, 21, 22, 35, 36, 42, 45, 47, 53, 59, 60, 62], "To": [2, 4, 7, 9, 18, 19, 21, 30, 31, 36, 59, 61], "either": [2, 9, 15, 21, 22, 23, 25, 36, 52, 53, 59, 62], "specifi": [2, 9, 10, 12, 13, 15, 19, 21, 22, 25, 36, 40, 41, 44, 45, 46, 47, 52, 59, 60, 62, 64], "all": [2, 4, 6, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 31, 35, 36, 40, 41, 42, 45, 46, 47, 48, 53, 54, 56, 59, 61, 62, 64, 65, 66, 67], "entri": [2, 8, 15, 18, 20, 21, 27, 35, 47, 58, 59, 62, 66], "togeth": [2, 12, 13, 18, 53, 59, 60, 65], "total": [2, 22, 41], "isomorph": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 18, 19, 20, 21, 22, 24, 29, 36, 42, 45, 54, 55, 56, 57, 58, 59, 62, 65], "z": [2, 6, 7, 10, 11, 15, 18, 20, 21, 22, 24, 31, 32, 33, 36, 38, 43, 48, 49, 53, 59, 60], "c2": [2, 3, 5, 7, 15, 18, 19, 53, 59, 62], "c3": [2, 3, 5, 7, 18, 19, 59, 62], "also": [2, 9, 12, 13, 15, 18, 20, 21, 22, 31, 35, 36, 41, 45, 46, 47, 53, 54, 56, 59, 60, 62, 64, 65, 66, 67], "legal": [2, 53], "correspond": [2, 3, 4, 6, 7, 8, 10, 12, 13, 15, 16, 18, 19, 20, 21, 30, 33, 41, 42, 44, 45, 46, 47, 51, 54, 59, 60, 62, 65, 66], "neutral": 2, "still": [2, 32, 54, 59, 62], "take": [2, 12, 17, 19, 53, 54, 56, 59, 62], "up": [2, 9, 10, 15, 19, 53, 54, 59, 62, 67], "label": [2, 32, 35, 51, 53, 56, 58], "g0": [2, 15, 19, 21], "g2": [2, 4, 11, 14, 19, 21, 22, 30, 35, 36, 42, 56, 59, 60], "note": [2, 10, 11, 16, 18, 19, 20, 22, 23, 31, 33, 35, 36, 48, 49, 54, 56, 59, 62], "uniqu": [2, 19, 20, 21, 45, 59, 62, 65], "zz_6": [2, 9], "cong": [2, 62, 65], "zz_2": 2, "zz_3": 2, "previous": 2, "invari": [2, 4, 6, 10, 11, 18, 19, 20, 21, 22, 32, 36, 40, 42, 44, 45, 46, 47, 59, 62], "even": [2, 18, 19, 21, 22, 36, 42, 45, 46, 59, 60, 62], "though": [2, 3, 53, 59, 62], "necessarili": [2, 11, 36], "factor": [2, 4, 9, 10, 15, 18, 22, 23, 25, 36, 37, 48, 52, 59, 62], "should": [2, 5, 6, 10, 15, 17, 19, 21, 22, 23, 28, 29, 36, 42, 44, 52, 54, 59, 60, 62, 66], "now": [2, 10, 15, 19, 21, 53, 59, 60, 67], "gens_ord": [2, 4, 6, 9], "j": [2, 6, 11, 15, 18, 19, 21, 30, 36, 49, 53, 54, 56, 58, 59, 61, 62, 65], "c4": [2, 3, 5, 9, 18, 19, 59, 65], "deprec": [2, 39, 43, 59], "elementary_divisor": [2, 4], "rang": [2, 8, 9, 15, 22, 27, 29, 35, 37, 53, 56, 59, 62], "ngen": [2, 6, 19, 21, 31, 36, 59, 65], "print": [2, 6, 9, 10, 15, 22, 25, 31, 32, 53, 56, 59, 60, 62, 64], "infin": [2, 4, 8, 10, 11, 12, 15, 18, 19, 20, 22, 23, 27, 29, 35, 37, 38, 40, 62], "background": 2, "smith": [2, 10], "normal": [2, 4, 15, 19, 21, 22, 23, 25, 31, 42, 44, 45, 48, 59, 65], "accord": [2, 9, 15, 18, 30, 59], "section": [2, 15, 18, 30, 36], "cohen1": 2, "which": [2, 3, 6, 7, 10, 11, 12, 15, 17, 18, 19, 21, 22, 24, 25, 27, 30, 33, 35, 37, 42, 44, 45, 46, 47, 48, 53, 54, 58, 59, 60, 61, 62, 64, 65, 66], "exist": [2, 11, 15, 18, 19, 22, 30, 37, 59], "exact": [2, 20], "sequenc": [2, 54, 56, 59], "rightarrow": [2, 40, 59], "ell": [2, 35, 62, 64], "some": [2, 5, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 36, 37, 42, 48, 49, 50, 53, 54, 59, 61, 62, 65], "posit": [2, 10, 15, 16, 18, 19, 20, 21, 22, 23, 25, 33, 35, 36, 37, 38, 41, 45, 46, 47, 53, 59, 60, 62], "leq": [2, 15, 35, 59, 62], "For": [2, 4, 9, 12, 13, 18, 19, 22, 30, 32, 35, 36, 42, 44, 47, 56, 58, 59, 60, 62], "decomposit": [2, 16, 52, 62], "langl": [2, 19, 20, 33, 62, 65], "a_1": [2, 9, 21], "rangl": [2, 19, 20, 33, 62, 65], "a_": [2, 9, 35, 62, 65], "mathrm": [2, 12, 25, 41, 48, 59], "ord": [2, 11, 22], "a_i": [2, 21], "p_i": 2, "c_i": [2, 59], "prime": [2, 10, 12, 13, 20, 22, 44, 47, 59, 62], "size": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 53, 55, 56, 59, 60, 61, 62, 64, 66, 67], "In": [2, 9, 14, 15, 18, 19, 21, 22, 25, 35, 36, 45, 54, 56, 59, 62, 64, 65], "situat": [2, 22, 52, 59], "phi": [2, 5, 19, 25, 53, 59, 61, 65, 66, 67], "map": [2, 5, 15, 16, 18, 19, 21, 22, 27, 30, 32, 36, 40, 42, 53, 56, 59, 61], "x_1": [2, 12, 13, 21, 32, 36], "x_": [2, 12, 15], "relat": [2, 4, 9, 10, 15, 18, 19, 20, 21, 22, 26, 44, 45, 53, 59, 62, 65], "m": [2, 11, 14, 15, 18, 22, 29, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 53, 54, 55, 58, 59, 62, 67], "whose": [2, 8, 11, 15, 18, 22, 25, 27, 32, 38, 48, 49, 59, 62, 64, 65, 67], "kernel": [2, 5, 15, 30, 61, 65], "other": [2, 3, 5, 10, 11, 15, 16, 18, 19, 20, 22, 26, 29, 31, 50, 53, 54, 56, 57, 58, 59, 61, 62, 66], "word": [2, 3, 7, 8, 15, 19, 21, 27, 37, 53, 54, 56, 59, 60, 65], "m_": [2, 35], "ij": [2, 35, 62], "diagon": [2, 20, 31, 45], "ii": 2, "b": [2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 35, 36, 37, 40, 42, 52, 53, 56, 59, 60, 62, 64, 65], "subset": [2, 35, 48, 59], "b_1": 2, "f_": [2, 47, 56], "b_m": 2, "phi_b": 2, "y_1": [2, 32], "y_m": 2, "left": [2, 15, 21, 22, 25, 32, 35, 45, 46, 47, 53, 59, 60, 62, 66, 67], "begin": [2, 12, 13, 15, 18, 25, 26, 33, 38, 45, 46, 47], "arrai": [2, 18, 45, 46, 47], "cccc": 2, "11": [2, 3, 6, 7, 11, 12, 13, 14, 15, 18, 30, 35, 36, 53, 56, 58, 59, 60, 62, 64, 66, 67], "1m": 2, "21": [2, 10, 11, 15, 18, 20, 30, 37, 53, 56, 59, 60, 61, 62], "22": [2, 16, 30, 36, 53, 59, 60, 62], "2m": [2, 62], "vdot": 2, "ddot": 2, "end": [2, 9, 12, 13, 15, 18, 19, 25, 33, 38, 45, 46, 47, 54], "regard": [2, 15, 53], "p_1": 2, "c_1": [2, 54, 59], "p_": 2, "c_": [2, 19, 22, 35, 42, 59, 62], "particular": [2, 9, 15, 18, 35, 54, 59], "ker": 2, "If": [2, 3, 8, 9, 10, 12, 13, 15, 17, 18, 19, 21, 22, 25, 28, 29, 30, 31, 32, 35, 36, 41, 42, 44, 51, 53, 54, 56, 59, 60, 62], "snf": 2, "s_i": [2, 18, 35, 62, 65], "diag": 2, "s_1": [2, 18], "s_2": 2, "s_3": [2, 18, 29, 59], "s_r": 2, "determinant": 2, "divisor": [2, 4, 15, 62], "rank": [2, 10, 12, 13, 15, 18, 21, 27, 32, 40, 59, 62], "s_": [2, 18, 62], "ani": [2, 6, 11, 15, 19, 22, 29, 32, 42, 53, 54, 59, 62, 64, 65], "prescrib": [2, 6], "geq": [2, 20, 35, 59, 62, 65], "method": [2, 3, 5, 6, 7, 11, 15, 17, 18, 19, 20, 21, 22, 29, 30, 35, 36, 37, 41, 42, 43, 53, 60, 61, 62, 64, 66], "obtain": [2, 6, 7, 14, 15, 18, 19, 36, 37, 53, 56, 59], "arbitrari": [2, 6, 8, 19, 20, 21, 22, 45, 46, 47, 54, 67], "string": [2, 6, 9, 15, 18, 19, 21, 22, 23, 25, 32, 36, 42, 44, 45, 48, 52, 53, 59, 60, 61, 65], "more": [2, 4, 15, 18, 19, 22, 24, 35, 36, 37, 41, 42, 48, 52, 53, 54, 56, 58, 59, 62], "variabl": [2, 15, 19, 36, 41, 45, 46, 47, 54, 59, 62, 65], "syntax": [2, 19, 21, 32, 61], "ident": [2, 4, 10, 18, 19, 22, 24, 25, 27, 30, 31, 32, 36, 37, 38, 40, 45, 59, 61, 62, 65], "case": [2, 4, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 25, 30, 36, 44, 45, 54, 56, 59, 62], "trivial": [2, 4, 8, 10, 11, 15, 19, 20, 27, 29, 31, 36, 59, 60, 62], "represent": [2, 12, 14, 15, 16, 18, 19, 20, 22, 31, 35, 36, 37, 42, 44, 53, 56, 59, 60, 62], "underli": [2, 8, 11, 12, 15, 16, 19, 20, 30, 37, 59, 62, 64, 67], "7": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 22, 23, 24, 25, 27, 29, 30, 35, 36, 37, 41, 42, 45, 46, 47, 53, 56, 59, 60, 61, 62], "abcd": [2, 3, 6, 7, 8, 27, 59], "c5": [2, 7, 18, 19, 59, 62], "c7": [2, 7, 8, 19, 22, 42, 59, 62], "c": [2, 3, 5, 6, 7, 8, 15, 17, 18, 19, 20, 21, 22, 27, 31, 32, 35, 48, 52, 53, 56, 58, 59, 60, 62, 64, 65], "d": [2, 3, 6, 7, 8, 15, 16, 19, 20, 21, 22, 27, 35, 41, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65], "e": [2, 3, 6, 7, 8, 9, 11, 13, 15, 18, 19, 22, 24, 27, 30, 32, 33, 35, 36, 42, 45, 47, 48, 52, 59, 60, 62, 64, 65], "refer": [2, 12, 13, 15, 16, 18, 19, 20, 33, 36, 38, 41, 53, 54, 55, 56, 58, 59, 62, 65], "h": [2, 3, 4, 5, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 35, 36, 37, 38, 41, 53, 56, 59, 60, 61, 62, 65, 66, 67], "cohen": 2, "advanc": 2, "topic": 2, "theori": [2, 53, 55, 58], "springer": [2, 53, 59, 62], "2000": 2, "cohen2": 2, "cours": 2, "algebra": [2, 11, 15, 19, 21, 32, 36, 62, 65], "1996": [2, 53, 59, 62], "rotman": 2, "introduct": 2, "4th": 2, "ed": 2, "1995": 2, "mani": [2, 15, 37, 56, 58, 65], "basic": [2, 6, 11, 40, 55, 59, 61], "properti": [2, 15, 48, 54, 59, 62, 65], "william": [2, 6, 7, 22, 36, 37, 39, 41, 42, 45, 47, 59], "stein": [2, 6, 7, 22, 36, 37, 39, 41, 42, 45, 46, 47, 59], "david": [2, 3, 5, 6, 7, 11, 22, 36, 37, 41, 42, 45, 46, 47, 53, 59, 60, 61, 62], "joyner": [2, 3, 5, 6, 7, 22, 36, 37, 41, 42, 45, 46, 47, 53, 59, 60, 61, 62], "2008": [2, 16, 22, 36, 42, 53, 59, 61], "ad": [2, 8, 18, 32, 36, 41, 42, 45, 53, 56, 59, 60], "user": [2, 19, 44, 45, 46, 47], "request": 2, "is_cycl": [2, 10, 19, 59, 62], "fix": [2, 3, 10, 15, 19, 29, 31, 36, 37, 41, 42, 45, 46, 47, 53, 54, 59, 60, 61, 62, 65], "2006": [2, 3, 5, 6, 7, 36, 37, 39, 41, 42, 45, 46, 47, 53, 59, 60, 61, 62], "03": [2, 5, 22, 36, 41, 42, 45, 46, 47, 59, 60, 61], "monoid": [2, 19], "kohel": [2, 3, 59], "05": [2, 3, 15, 22, 36, 37, 39, 41, 42, 45, 47, 53, 59, 65], "sever": [2, 10, 53, 54, 59, 60], "signific": 2, "bug": [2, 3, 11, 37, 41, 45, 46, 47, 59], "08": [2, 3, 6, 22, 30, 35, 36, 38, 42, 59], "chang": [2, 19, 21, 32, 53], "doc": [2, 36, 53], "random": [2, 3, 6, 12, 13, 16, 18, 22, 29, 36, 41, 42, 45, 53, 56, 58, 59, 62], "how": [2, 15, 19, 31, 32, 59, 60, 62], "record": 2, "10": [2, 3, 4, 6, 7, 12, 13, 14, 15, 16, 18, 20, 22, 27, 29, 30, 35, 36, 45, 53, 56, 58, 59, 60, 62], "dual_group": [2, 6, 7, 8], "seriou": 2, "word_problem": [2, 3, 7, 37, 53, 60], "loeffler": [2, 11, 37], "2009": [2, 3, 22, 59, 62], "volker": [2, 3, 6, 7, 12, 13, 14, 15, 16, 21, 31, 36, 37, 39, 41, 45, 46, 47], "braun": [2, 3, 6, 7, 12, 13, 14, 15, 16, 21, 31, 36, 37, 39, 41, 45, 46, 47], "2012": [2, 3, 6, 7, 59, 62, 66, 67], "port": [2, 3, 6, 7, 36, 37, 39, 41, 45, 46, 47], "new": [2, 3, 6, 7, 11, 19, 36, 37, 39, 41, 42, 45, 46, 47, 53, 54, 59, 62], "immut": [2, 3, 6, 7, 8, 59], "renam": [2, 41], "abelian_group": [2, 6, 11], "given": [2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 29, 32, 35, 36, 42, 44, 45, 48, 53, 54, 56, 59, 60, 62, 64, 65], "need": [2, 3, 4, 9, 10, 11, 15, 22, 28, 31, 41, 45, 46, 47, 52, 54, 56, 59], "power": [2, 12, 13, 15, 16, 17, 21, 22, 36, 44, 47, 62, 65], "neg": [2, 3, 9, 15, 19, 21, 22, 35, 62], "a_0": [2, 9], "typic": [2, 9, 22, 59], "increas": [2, 9, 15, 59], "pad": [2, 9], "length": [2, 8, 9, 11, 15, 27, 59, 60, 64], "less": [2, 9, 15, 18, 53], "than": [2, 9, 10, 15, 17, 18, 22, 23, 32, 42, 52, 53, 55, 56, 59, 60, 62], "altern": [2, 15, 16, 18, 19, 20, 26, 46, 51, 59, 60, 62], "give": [2, 4, 15, 18, 19, 21, 22, 32, 44, 48, 53, 59, 60], "keyword": [2, 12, 13, 15, 18, 21, 32, 35, 36, 44, 48], "must": [2, 5, 12, 13, 18, 19, 20, 22, 29, 32, 35, 36, 44, 45, 46, 47, 53, 54, 59, 61, 62], "explicitli": [2, 18, 52, 59, 62], "type": [2, 3, 8, 11, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36, 37, 53, 54, 56, 59, 60, 62, 63, 64], "fi": 2, "8": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 29, 31, 36, 44, 45, 46, 47, 51, 53, 56, 59, 60, 61, 62], "9": [2, 3, 4, 6, 7, 8, 12, 15, 18, 20, 22, 24, 25, 29, 30, 35, 36, 52, 53, 56, 58, 59, 60, 62, 66, 67], "mul": [2, 66], "xy": [2, 3, 5, 53, 62], "notic": [2, 19, 59], "prepend": 2, "necessari": [2, 15, 54, 59, 62], "longer": [2, 32, 56], "abeliangroup_class": [2, 9], "generator_ord": [2, 4, 9, 11], "uniquerepresent": [2, 4, 6, 12, 18, 19, 21, 24, 33, 35, 38, 48, 49, 67], "chosen": [2, 56, 58], "instanti": 2, "z2xz3": [2, 4], "z6": [2, 4, 9], "is_isomorph": [2, 4, 18, 19, 20, 29, 57, 58, 59, 61, 62], "c8": [2, 7, 8, 19, 59, 62], "c9": [2, 8], "24": [2, 22, 29, 30, 36, 51, 53, 59, 60, 62], "120": [2, 22, 56, 59, 62], "c12": [2, 19], "c24": 2, "c120": 2, "enumer": [2, 18, 19, 30, 59, 62], "abeliangroupel": [2, 3, 9], "abeliangroup_subgroup": 2, "cardin": [2, 12, 15, 17, 18, 19, 22, 29, 31, 33, 36, 38, 40, 41, 51, 59, 62], "base_r": [2, 6, 15, 18, 35, 36, 37, 40, 41, 42, 44, 45, 46, 47, 59, 62, 67], "suitabl": [2, 15, 22, 31, 54], "cyclotom": [2, 6, 7, 9, 18, 29, 35, 36, 42, 48, 59], "field": [2, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 25, 29, 30, 31, 32, 35, 36, 37, 41, 42, 44, 45, 46, 47, 48, 54, 59, 61, 62, 65, 66, 67], "pick": [2, 15, 59, 64], "automat": [2, 19, 22], "2z": [2, 7], "degre": [2, 6, 7, 9, 10, 12, 13, 16, 18, 19, 20, 22, 25, 29, 30, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 51, 54, 55, 59, 60, 61, 62, 65, 66, 67], "qq": [2, 11, 12, 13, 14, 18, 21, 24, 25, 29, 32, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 61, 62], "ration": [2, 11, 12, 13, 17, 21, 24, 25, 29, 31, 32, 35, 36, 37, 41, 46, 47, 48, 62, 65], "elementari": [2, 4, 12, 59, 62], "here": [2, 9, 12, 15, 18, 22, 26, 30, 36, 39, 41, 53, 59, 62, 65, 66, 67], "anoth": [2, 15, 19, 29, 53, 59], "algorithm": [2, 3, 11, 15, 17, 19, 22, 36, 37, 42, 53, 54, 55, 56, 58, 59, 60], "d_1": [2, 62], "d_2": [2, 62], "d_3": 2, "ldot": [2, 12, 13, 19, 21, 32, 36, 52, 53, 59, 62, 64, 66, 67], "compos": [2, 10], "divid": [2, 11, 15, 36], "wai": [2, 10, 12, 13, 15, 16, 18, 19, 26, 53, 54, 59, 60, 62], "describ": [2, 15, 16, 19, 22, 32, 42, 44, 45, 46, 47, 50, 52, 59, 62, 65], "below": [2, 7, 15, 18, 22, 25, 36, 53, 59, 62], "just": [2, 9, 10, 12, 13, 14, 18, 19, 21, 29, 31, 37, 42, 59, 60, 62, 64], "Then": [2, 21, 25, 36, 59], "biggest": 2, "d_i": [2, 62], "maximum": [2, 58], "a_j": 2, "largest": [2, 15, 59, 62], "p": [2, 10, 11, 15, 16, 18, 19, 20, 22, 29, 30, 32, 36, 48, 52, 53, 54, 56, 59, 60, 62, 64, 65], "v": [2, 3, 7, 11, 12, 13, 15, 21, 22, 24, 25, 29, 32, 35, 36, 40, 42, 44, 45, 59, 60, 62, 65, 66, 67], "max": 2, "_p": 2, "text": [2, 15, 21, 24, 36, 45, 46, 47, 65], "out": [2, 19, 31, 52, 54, 62], "those": [2, 10, 11, 19, 53, 65], "get": [2, 15, 36, 53, 59, 60, 64], "smaller": [2, 18, 36, 54, 59], "repeat": [2, 10, 31, 36], "abov": [2, 19, 22, 36, 59, 62, 65], "procedur": [2, 36], "d_": [2, 62], "thank": 2, "robert": [2, 15, 53, 60], "miller": [2, 36, 53], "commun": 2, "c6": [2, 9, 18, 19, 22, 42, 59, 62], "60": [2, 4, 13, 19, 22, 56, 62], "42": [2, 8, 11, 48, 53, 59, 60, 62], "a0": [2, 9, 15], "a2": [2, 6, 9, 30], "look": [2, 4, 15, 22], "histor": [2, 30], "reason": [2, 7, 30, 37, 53], "mean": [2, 19, 32, 53, 60, 62], "is_commut": [2, 6, 23, 35, 59, 62], "sinc": [2, 6, 10, 15, 16, 18, 19, 31, 36, 37, 52, 59, 60, 62, 65], "is_abelian": [2, 6, 23, 29, 59, 62], "permutation_group": [2, 3, 10, 51], "whether": [2, 7, 8, 10, 14, 15, 16, 21, 22, 23, 29, 31, 35, 36, 37, 39, 42, 44, 48, 52, 56, 58, 59, 60], "boolean": [2, 7, 8, 10, 15, 18, 19, 21, 22, 23, 29, 31, 35, 36, 37, 42, 44, 48, 53, 59, 60], "g1": [2, 4, 14, 15, 19, 21, 30, 36, 51, 56, 59, 60], "is_subgroup": [2, 31, 59], "test": [2, 7, 8, 15, 18, 19, 21, 22, 23, 29, 31, 37, 39, 42, 55, 56, 58, 59, 60, 62], "is_trivi": [2, 4, 8], "precis": [2, 6, 18, 24, 35, 36, 41, 48], "one": [2, 9, 10, 14, 15, 17, 18, 19, 22, 24, 25, 27, 30, 31, 32, 35, 36, 37, 41, 42, 44, 45, 46, 48, 52, 53, 54, 56, 59, 60, 62, 64, 65, 66], "ab": [2, 6, 7, 62], "10000": 2, "number_of_subgroup": 2, "possibli": [2, 20], "specif": [2, 15, 48, 54], "find": [2, 20, 22, 36, 59], "count": [2, 15, 21, 59, 60, 62], "contain": [2, 9, 15, 17, 19, 20, 21, 29, 31, 35, 37, 42, 48, 51, 52, 59, 60, 62, 64, 65], "torsion": [2, 11], "itself": [2, 7, 12, 13, 15, 16, 44, 54, 59], "henc": [2, 10, 45, 59, 60], "assum": [2, 15, 22, 42, 52, 56, 59], "direct": [2, 10, 15, 19, 25, 52, 56, 59, 62], "sylow": [2, 59], "reduc": [2, 11, 15, 18, 19, 20, 59], "problem": [2, 3, 7, 15, 19, 37, 53, 60, 65], "further": [2, 21, 44, 48, 59], "lambda": [2, 16, 19, 22, 24, 25, 35, 36, 56, 59, 62, 64], "q_subgroups_of_abelian_group": 2, "sum": [2, 10, 15, 16, 22, 60, 64, 65], "mu": [2, 24, 25], "81": [2, 22], "19": [2, 3, 11, 15, 18, 30, 53, 56, 59, 60, 62], "15": [2, 6, 10, 15, 18, 19, 22, 30, 35, 36, 41, 42, 46, 53, 56, 59, 60, 62, 66, 67], "25": [2, 12, 18, 22, 30, 32, 36, 40, 53, 56, 59, 60, 62], "5760": 2, "45000": 2, "14": [2, 6, 11, 15, 18, 22, 30, 36, 53, 56, 58, 59, 60, 62], "permut": [2, 3, 10, 15, 16, 17, 18, 19, 20, 26, 30, 34, 36, 45, 46, 47, 53, 54, 55, 56, 57, 58, 64, 66, 67], "q_1": 2, "q_n": 2, "respect": [2, 8, 15, 18, 19, 21, 32, 36, 45, 46, 47, 59, 62], "random_el": [2, 6, 11, 12, 13, 14, 22, 29, 45, 59, 60], "gensh": 2, "big": [2, 19, 22, 59, 62], "30": [2, 4, 11, 15, 30, 36, 53, 55, 56, 58, 59, 60, 62], "64": [2, 6, 59, 62], "729": [2, 6], "c729": 2, "subgroup_reduc": 2, "elt": [2, 27, 35], "verbos": [2, 36, 53, 56], "set": [2, 5, 9, 10, 11, 15, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 35, 36, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64], "forget": [2, 12, 13, 61], "origin": [2, 7, 12, 13], "routin": [2, 10], "error": [2, 15, 22, 29, 30, 44, 54, 59, 62], "rais": [2, 15, 22, 29, 30, 37, 44, 59], "linearli": 2, "perform": [2, 52, 58, 59], "don": [2, 3, 22, 37, 55, 61], "know": [2, 19, 22, 59], "back": [2, 17, 22, 30, 37, 53, 59], "actual": [2, 4, 31, 37], "easi": [2, 26], "otherwis": [2, 11, 15, 18, 19, 22, 25, 29, 36, 44, 51, 53, 54, 57, 59, 62], "write": [2, 37, 62], "recurs": [2, 11, 15], "everi": [2, 15, 20, 24, 45, 59, 62], "project": [2, 18, 30, 36, 53, 59, 61, 62], "onto": [2, 59], "intersect": [2, 15, 22, 29, 56, 59], "well": [2, 15, 21, 23, 30, 32, 35, 44, 56, 59, 62], "send": [2, 21, 24, 25, 53, 59, 62], "mod": [2, 18, 19, 22, 31, 59], "lift": [2, 4, 12, 13, 30], "aris": 2, "tripl": [2, 15, 18, 36], "magnitud": 2, "slower": 2, "magma": 2, "much": [2, 36, 53], "faster": [2, 15, 19, 22, 52, 53, 56, 59], "len": [2, 6, 15, 20, 27, 29, 35, 40, 41, 42, 56, 59, 60, 62, 64, 67], "torsion_subgroup": [2, 11], "when": [2, 11, 15, 17, 18, 21, 22, 30, 35, 36, 48, 49, 52, 59, 60, 62], "consist": [2, 11, 15, 18, 20, 21, 30, 36, 40, 41, 45, 46, 47, 53, 54, 59, 64], "f5": [2, 4, 31], "462": [2, 11], "subclass": [2, 31, 59], "inherit": [2, 18, 25, 31, 59], "There": [2, 6, 10, 17, 59, 60], "coerc": [2, 4, 10, 37], "ambient_group": [2, 18, 59], "equal": [2, 10, 11, 14, 20, 42, 56, 58, 59, 62, 67], "sub": [2, 15], "see": [2, 3, 4, 9, 11, 15, 16, 18, 19, 21, 22, 25, 26, 29, 30, 31, 32, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 56, 58, 59, 60, 62, 66, 67], "abc": [2, 3, 5, 6, 8, 27], "nth": 2, "is_abeliangroup": 2, "express": [2, 3, 11, 15, 60], "boil": 2, "down": [2, 53, 59], "follow": [2, 15, 20, 22, 24, 26, 33, 35, 36, 38, 40, 45, 48, 53, 54, 56, 59, 62], "analog": 2, "chines": 2, "remaind": 2, "theorem": [2, 62], "n_1": [2, 20, 21, 22, 59], "n_2": [2, 20, 21, 22, 59], "n_k": [2, 20, 21], "inde": [2, 10, 59], "n_i": [2, 10, 20], "g_i": [2, 59], "i1": 2, "ik": 2, "n_j": 2, "d_k": 2, "c_1g_1": 2, "g_": [2, 18, 36], "solv": [2, 3, 7, 22, 37, 53, 59, 60], "equat": [2, 22], "ca": [2, 62], "suffic": 2, "restrict": [2, 16, 59], "least": [2, 15, 18, 36, 54], "common": [2, 9, 10, 15, 36, 59, 62], "doe": [2, 3, 5, 7, 15, 16, 18, 19, 21, 28, 31, 32, 37, 48, 49, 56, 59, 60, 61, 62], "perhap": [2, 59], "rather": [2, 3, 7, 17, 23, 60], "both": [2, 8, 15, 19, 30, 31, 36, 59, 60, 65], "speed": [2, 53, 60], "model": [2, 65], "similar": [2, 18, 53, 59, 62], "valid": [2, 14, 15, 19, 53, 56, 59], "push": [2, 3, 60], "optim": [2, 3, 37, 53, 56, 60], "determinist": [2, 3], "essenti": [2, 12, 13, 54, 55, 60], "w": [2, 7, 15, 17, 21, 22, 24, 25, 31, 32, 35, 36, 37, 40, 46, 47, 56, 59, 60], "prod": [2, 3, 15, 37, 46, 62], "b1": [2, 15], "b2": [2, 15], "b3": 2, "b4": 2, "b5": [2, 15, 18], "might": [2, 9, 15, 19, 36, 52, 59], "unpleas": 2, "effect": [2, 18, 22, 53], "cannot": [2, 16, 17, 19, 22, 36, 37], "mai": [2, 15, 19, 20, 26, 36, 43, 50, 53, 55, 59], "slow": [2, 17, 53, 59, 62], "larg": [2, 4, 19, 23, 30, 59, 60, 61, 62], "differ": [2, 10, 15, 18, 19, 22, 29, 30, 32, 35, 36, 37, 40, 42, 45, 52, 56, 59, 60, 65], "wrap": [2, 5, 11, 17, 19, 21, 22, 24, 30, 31, 36, 42, 59, 61, 62, 64], "epimorphismfromfreegroup": [2, 7, 37, 53, 60], "preimagesrepres": [2, 7, 37, 53, 60], "free_abelian_monoid_el": 3, "py": [3, 7, 56, 59, 61, 62], "pow": 3, "recal": [3, 12, 13], "20": [3, 7, 8, 15, 18, 19, 22, 30, 35, 36, 53, 56, 59, 60, 62], "13": [3, 15, 18, 20, 22, 30, 38, 53, 56, 59, 60, 62], "y": [3, 5, 6, 7, 11, 15, 16, 19, 20, 21, 22, 24, 25, 32, 33, 36, 38, 40, 42, 53, 56, 59, 60, 62, 65], "23": [3, 11, 22, 36, 53, 59, 60, 62, 64], "27": [3, 13, 22, 30, 38, 53, 59, 60, 62, 66], "72": [3, 8], "abelian_group_el": [3, 7, 8], "abeliangroupelementbas": [3, 7, 8], "iter": [3, 8, 9, 11, 15, 16, 17, 18, 21, 22, 29, 31, 35, 36, 37, 42, 54, 59, 62, 64], "as_permut": 3, "associ": [3, 9, 15, 35, 37, 58, 59, 60, 62, 64], "gp": [3, 62], "ap": [3, 22], "todo": [3, 37], "rewrit": [3, 19, 22, 36, 41, 42, 45, 47, 53, 59], "stuff": 3, "matrix_grp": 3, "directori": 3, "reserv": [3, 59], "letter": [3, 15, 19, 21, 59, 62], "is_abeliangroupel": 3, "provid": [4, 21, 22, 31, 40, 48, 53, 59], "python": [4, 5, 19, 21, 22, 31, 45, 53, 61], "packag": [4, 18, 19, 53, 59], "polycycl": [4, 29, 59], "01": [4, 22, 36, 37, 59, 65], "abeliangroupelement_gap": 4, "via": [4, 18, 19, 20, 31, 36, 41, 45, 46, 47, 48, 52, 53, 59, 62, 66], "handl": [4, 17, 54], "quit": [4, 12, 13], "too": [4, 18, 19, 40, 59, 62], "123": [4, 11], "789": 4, "crash": 4, "veri": [4, 6, 22, 59, 61, 65], "make": [4, 15, 18, 19, 22, 23, 25, 29, 36, 42, 53, 54, 56, 58, 59, 60], "work": [4, 5, 10, 11, 15, 18, 19, 21, 22, 23, 30, 31, 36, 42, 54, 59], "could": [4, 9, 19, 60, 62], "done": [4, 5, 18, 59, 62, 66, 67], "abeliangroupelement_polycycl": 4, "effici": [4, 22, 54, 59], "12345": [4, 22], "123456789": [4, 22], "nonneg": [4, 8, 20, 59], "abeliangroupquotient_gap": 4, "quotient": [4, 10, 11, 15, 19, 20, 21, 23, 40, 48, 53, 59], "q1": [4, 32], "q2": 4, "natural_homomorph": 4, "morphism": [4, 5, 9, 11, 19, 24, 30, 43, 59, 61], "abeliangroupsubgroup_gap": 4, "terminologi": 4, "come": [4, 9, 15, 45, 59, 62], "framework": [4, 11, 59, 60], "notion": [4, 59], "subquoti": [4, 11], "retract": 4, "li": 4, "all_subgroup": 4, "automorphism_group": [4, 58, 59], "g3": [4, 19, 62], "g4": 4, "homspac": 5, "first": [5, 10, 15, 18, 19, 20, 21, 24, 29, 32, 35, 40, 45, 48, 49, 53, 55, 56, 59, 60, 61, 62], "hom": [5, 19, 24, 25, 30, 66, 67], "abelian_group_morph": 5, "abeliangroupmap": 5, "abeliangroupmorph": 5, "genss": 5, "imgss": 5, "code": [5, 52, 53, 56, 58, 59, 61, 62], "grouphomomorphismbyimag": [5, 61], "fail": [5, 22, 61], "extend": [5, 32, 36, 54, 61, 62], "subg": 5, "yet": [5, 19, 59, 62], "object": [5, 11, 15, 17, 19, 21, 22, 23, 26, 29, 31, 36, 37, 41, 48, 51, 52, 53, 54, 56, 58, 59, 64], "is_abeliangroupmorph": 5, "idea": [6, 54], "cc": [6, 7, 17, 36, 48, 56, 59, 62], "g_j": 6, "sai": [6, 40, 62], "m_j": 6, "x_j": [6, 15, 21], "exp": [6, 32], "pi": [6, 33, 35, 48, 56, 65, 66, 67], "x_i": [6, 21], "These": [6, 10, 18, 19, 20, 35, 47, 48, 52, 59, 62, 65], "fd": [6, 7, 8], "2520": 6, "576": 6, "tol": [6, 7], "1e": [6, 7], "00000000000000": [6, 22, 48], "modif": [6, 7, 37], "suggest": [6, 7, 59, 62], "dual_abelian_group": [6, 7], "dualabeliangroup_class": 6, "3z": [6, 7], "5z": [6, 7], "7z": [6, 7], "8z": [6, 7], "9z": 6, "15z": 6, "53": [6, 35, 36, 41, 48, 56, 62], "bit": [6, 35, 36, 41, 48, 59, 60], "dualabeliangroupel": [6, 7], "scalar": [6, 16, 37, 38], "dualiz": 6, "a1": [6, 15, 30], "x0": [6, 15, 19, 21, 31, 36], "x1": [6, 15, 19, 20, 21, 31, 36, 60], "1000": [6, 19, 22], "inv": [6, 10], "gd": [6, 7, 56], "100": [6, 22, 41, 49], "54": [6, 62], "43": [6, 53, 59, 60, 62], "found": [6, 22, 44, 54, 59], "while": [6, 36, 59, 62], "is_dualabeliangroup": 6, "x2": [6, 15, 19, 21, 31, 36, 60], "840": 7, "192": 7, "evalu": [7, 15, 29, 59], "zeta840": 7, "140": 7, "_": [7, 15, 16, 18, 19, 27, 35, 37, 45, 46, 47, 56, 59, 64], "499999999999995": 7, "866025403784447": 7, "65": [7, 8, 62], "07": [7, 19, 36, 39, 42, 59], "dual_abelian_group_el": [7, 8], "hackish": 7, "includ": [7, 19, 22, 42, 48, 53, 59], "complet": [7, 12, 13, 20, 26, 31, 59, 62, 65, 66, 67], "dualabeliangroup": 7, "why": 7, "simpli": [7, 21, 59, 62], "invok": 7, "u": [7, 15, 18, 21, 22, 36, 37, 48, 53, 59, 60, 65], "245": 7, "is_dualabeliangroupel": 7, "alwai": [8, 12, 56, 59, 62], "onc": [8, 59, 62], "element_bas": 8, "multiplicativegroupel": [8, 14, 24, 31, 32, 37, 48, 60, 66], "inclus": [8, 15, 31], "exclus": [8, 31], "copi": [8, 30, 59, 62, 66], "coordin": [8, 15, 32], "multiplicative_ord": [8, 22, 31, 37, 60], "often": [9, 56, 65], "would": 9, "nice": [9, 59], "encapsul": [9, 48], "howev": [9, 16, 18, 19, 32, 59], "abstract": [9, 32, 48], "abeliangroupwithvalu": 9, "allow": [9, 18, 19, 53, 59, 61, 62], "decor": [9, 59], "unit": [9, 22, 48, 58, 62, 66, 67], "number_field": 9, "unit_group": 9, "think": [9, 11], "keep": [9, 19, 30, 31, 66], "track": [9, 31], "realli": [9, 17, 22, 62], "requir": [9, 10, 20, 21, 22, 24, 45, 53, 59], "pass": [9, 11, 15, 19, 21, 31, 44, 53, 59], "assign": [9, 19], "coercion": [9, 11, 31, 60], "embed": [9, 11, 18, 19, 42, 59], "values_group": 9, "cf3": [9, 42, 45, 47], "zeta": [9, 65], "cyclotomicfield": [9, 22, 36, 42, 45, 47, 48], "z3": 9, "want": [9, 19, 21, 22, 28, 52], "whole": [9, 22, 59, 62], "like": [9, 22, 44, 48, 49, 52, 59, 62, 66, 67], "values_embed": 9, "abeliangroupwithvaluesel": 9, "latter": [9, 18, 22, 25, 36, 54, 59], "testsuit": [9, 36, 41, 42, 59, 62], "run": [9, 19, 22, 36, 41, 42, 56, 58, 59, 62], "gens_valu": 9, "abeliangroupwithvaluesembed": 9, "codomain": [9, 30, 61], "abeliangroupwithvalues_class": 9, "symbol": [9, 15, 20, 32, 53, 58, 59, 62], "z4": 9, "polynomi": [9, 15, 18, 21, 35, 36, 37, 45, 59, 60, 62], "larger": [9, 14, 42, 53, 59], "fg_pid": 10, "major": [10, 62], "additive_abelian": [10, 11], "additive_abelian_group": 10, "remember_gener": 10, "greater": [10, 20, 55, 62], "bigoplus_i": 10, "switch": 10, "realiz": [10, 18, 62], "two": [10, 15, 16, 17, 18, 19, 21, 22, 24, 29, 30, 32, 37, 42, 45, 54, 56, 57, 59, 62, 66, 67], "obviou": 10, "ones": 10, "each": [10, 15, 18, 19, 21, 29, 36, 42, 54, 56, 58, 59, 60, 62, 64], "being": [10, 15, 18, 20, 24, 31, 35, 36, 44, 45, 46, 47, 59, 60, 62, 64], "minim": [10, 11, 20, 22, 31, 36, 59, 62], "vari": [10, 59], "raw": 10, "pair": [10, 12, 13, 15, 19, 21, 22, 27, 44, 53, 59, 60, 65], "natur": [10, 15, 19, 42, 45, 59, 62, 67], "repeatedli": 10, "smith_form_gen": 10, "linear_combination_of_smith_form_gen": 10, "again": [10, 19, 53, 59], "befor": [10, 19, 20, 54, 62], "additiveabeliangroupel": [10, 11], "fgp_element": 10, "additiveabeliangroup_class": 10, "fgp_module_class": 10, "machineri": 10, "submodul": [10, 40], "smallest": [10, 36, 37, 59, 60, 62], "nx": 10, "55": [10, 53, 62], "33": [10, 30, 36, 53, 59, 60, 62], "is_multipl": [10, 23], "short_nam": 10, "additiveabeliangroup_fixed_gen": [10, 11], "rel": [10, 19, 36, 41, 59], "variant": 10, "smithform_gen": 10, "attach": [10, 15, 18], "cover_and_relations_from_invari": 10, "util": 10, "super": [10, 15], "cr": [10, 18], "princip": [10, 12, 13], "ideal": [10, 12, 13], "echelon": [10, 40], "basi": [10, 15, 32, 35, 40, 58, 59, 62, 65], "intend": [11, 17, 19, 22, 42, 59], "templat": 11, "One": [11, 15, 19, 22, 37, 48, 49, 56, 62], "additiveabeliangroupwrapp": 11, "long": [11, 15, 18, 19, 22, 41, 53, 56, 59, 62], "_add_": 11, "toi": 11, "mordel": 11, "weil": 11, "ellipt": [11, 22], "curv": [11, 22, 62], "ellipticcurv": [11, 22], "30a2": 11, "pt": 11, "point": [11, 15, 22, 32, 48, 52, 53, 54, 56, 59, 60, 62], "26": [11, 22, 36, 53, 54, 59, 60, 62], "3000000000000001": 11, "load": [11, 16, 21, 42, 59], "dump": [11, 16], "known": [11, 18, 19, 21, 30, 35, 62, 65, 66, 67], "http": [11, 36, 39, 43, 53, 59], "trac": [11, 15, 19, 22, 29, 30, 31, 36, 39, 42, 43, 44, 45, 46, 47, 59, 60, 61, 66], "sagemath": [11, 39, 43, 48, 49, 59], "org": [11, 36, 39, 43, 53, 59], "sage_trac": 11, "ticket": [11, 15, 19, 22, 29, 30, 31, 36, 42, 44, 45, 46, 47, 59, 60, 61, 66], "11599": 11, "comment": 11, "about": [11, 37, 42, 53, 54, 56, 59], "probabl": 11, "won": 11, "current": [11, 15, 19, 21, 35, 56, 59, 60, 62], "fiddli": 11, "adjust": 11, "abl": [11, 54], "extra": [11, 37, 42], "init": [11, 66], "2010": [11, 16, 36, 37, 42], "lorenz": 11, "panni": 11, "2017": [11, 22, 38], "discrete_log": [11, 22], "additive_abelian_wrapp": 11, "univers": [11, 18, 35, 42, 53, 55, 59, 62], "zmod": [11, 29, 42], "modulo": [11, 22, 38, 46, 48, 62, 65], "g6": 11, "qqbar": [11, 36], "sqrt": [11, 15, 18, 22, 35, 36], "gf": [11, 12, 13, 14, 15, 17, 18, 22, 29, 31, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 58, 59, 62, 66, 67], "419": 11, "indirect": [11, 25, 49, 59], "doctest": [11, 25, 39, 43, 49, 56, 59], "420": 11, "z2": 11, "additiveabeliangroupwrapperel": 11, "discrete_exp": 11, "term": [11, 15, 32, 54, 59], "7573593128807148": 11, "invers": [11, 15, 17, 19, 21, 22, 25, 31, 32, 37, 53, 54, 59, 60, 62, 66], "el": [11, 18, 24, 25], "attempt": [11, 15, 17, 19, 22, 59], "_discrete_log_pgroup": 11, "suth2008": 11, "127": 11, "539": 11, "1009": 11, "modulu": [11, 15], "940": 11, "900": 11, "228": 11, "974": 11, "185": 11, "1007": 11, "214": 11, "865": 11, "802": 11, "777": 11, "typeerror": [11, 18, 20, 32, 35, 36, 37, 45, 46, 47, 59], "Not": [11, 31], "notimplementederror": [11, 17, 23, 29, 36, 45, 46, 47, 62], "No": 11, "black": 11, "box": 11, "discret": [11, 22], "log": [11, 22, 32], "wa": [11, 31, 44, 52, 59, 65], "initialis": 11, "210": [11, 20, 22], "2310": 11, "487": 11, "311": 11, "205": 11, "574i1": 11, "103": [11, 22], "172": 11, "61": [11, 62], "18": [11, 18, 20, 30, 36, 53, 56, 59, 60, 62], "assert": [11, 18], "19353": 11, "958713": 11, "2022": [11, 15, 22], "live": [11, 18, 19, 21, 47], "65a": 11, "scheme": [11, 54], "elliptic_curv": 11, "ell_tors": 11, "ellipticcurvetorsionsubgroup_with_categori": 11, "element_class": [11, 14, 30], "ell_point": 11, "ellipticcurvepoint_number_field": 11, "unwrappingmorph": 11, "affine_gp": [12, 13, 14], "affine_group": [12, 14], "affinegroup": [12, 13, 14], "aff": 12, "space": [12, 13, 14, 15, 18, 22, 24, 25, 35, 36, 37, 42, 44, 45, 54, 59, 62, 65], "invert": [12, 13, 14, 21, 22, 36, 41, 42, 46, 66], "a_v": [12, 13], "what": [12, 13, 22, 59], "gl": [12, 16, 19, 22, 25, 26, 29, 30, 31, 36, 37, 40, 41, 42, 43, 44, 46, 59], "translat": [12, 13, 14, 32, 53], "fact": [12, 13, 18, 19, 20, 62, 65], "ltime": [12, 13, 25], "mapsto": [12, 13, 14, 32, 56, 62, 65], "dim": [12, 13, 62], "dimension": [12, 13, 15, 32, 62, 65], "pmatrix": [12, 13, 33, 38], "x_n": [12, 13, 21, 32, 36], "compon": [12, 15, 66], "hyperplan": 12, "seen": [12, 48], "someth": [12, 13, 14, 21, 44], "dimens": [12, 13, 15, 18, 24, 25, 36, 44, 45, 59], "var": [12, 13, 15, 18, 32, 41, 44, 45, 46, 47], "inform": [12, 13, 18, 36, 37, 44, 53, 59, 60], "special": [12, 13, 14, 16, 22, 25, 29, 36, 41, 42, 44, 45, 46, 47, 48, 59, 61, 62], "affinespac": [12, 13], "shorthand": [12, 13, 21, 38], "wikipedia": [12, 13, 15, 16, 19, 20, 33, 38, 59, 62, 65], "articl": [12, 13, 15, 16, 19, 20, 22, 33, 38, 59, 62, 65], "affinegroupel": [12, 14], "172882428468750000000000000000": 12, "nrow": 12, "ncol": 12, "determin": [12, 15, 16, 19, 20, 21, 36, 41, 44, 45, 46, 47, 48, 49, 53, 54, 56, 59, 62], "linear_spac": [12, 14], "ax": [12, 14, 15, 20, 62], "group_el": [12, 14, 37], "matrix_spac": [12, 42], "reflect": [12, 13, 18, 26, 35, 54, 60, 62], "household": 12, "perpendicular": 12, "16": [12, 15, 18, 19, 22, 27, 29, 30, 36, 53, 56, 59, 60, 62], "some_el": [12, 15], "vector_spac": 12, "euclidean_group": 13, "euclideangroup": 13, "affin": [13, 26, 35, 42, 44, 45], "preserv": [13, 40, 45, 46, 47], "metric": 13, "e3": [13, 19, 42, 45, 47, 65], "45": [13, 19, 53, 55, 56, 58, 59, 60, 62], "77": 13, "40": [13, 15, 22, 30, 36, 53, 59, 60, 62], "48": [13, 29, 31, 41, 42, 53, 56, 59, 60, 62], "correct": [14, 15, 53, 55], "accept": [14, 20, 24, 44, 45, 46, 47], "column": [14, 16, 20, 29, 35, 38, 42, 44, 58, 59, 67], "reconstruct": 14, "affinegroup_with_categori": 14, "convers": [14, 18, 35], "matrixgroup": [14, 17, 29, 30, 31, 36, 37, 39, 40, 41, 42], "part": [14, 49, 54, 59, 64], "standard": [14, 15, 22, 35, 37, 45, 52, 62, 65], "composit": [14, 36, 59, 62], "lot": [15, 53], "strand": [15, 18], "braidgroup": [15, 18], "oper": [15, 16, 18, 19, 21, 22, 23, 31, 36, 37, 42, 44, 54, 59], "indic": [15, 21, 22, 25, 26, 27, 32, 53, 54, 56, 59], "s0": 15, "action": [15, 24, 25, 35, 36, 40, 53, 56, 59, 62, 67], "mappingclassgroupact": 15, "explan": [15, 18, 19], "b0": 15, "freegroup": [15, 19, 21, 22, 23, 28, 30, 31, 42, 59], "miguel": [15, 19, 21], "angel": [15, 19, 21], "marco": [15, 19, 21], "buzunariz": [15, 19, 21], "s\u00f8ren": 15, "fugled": 15, "j\u00f8rgensen": 15, "lipshitz": 15, "thierri": 15, "monteil": 15, "add": [15, 19, 29, 37, 42, 45, 46, 47, 53, 59], "__hash__": 15, "ensur": [15, 29, 54], "caylei": [15, 41, 59], "sebastian": [15, 18, 30, 36, 42, 44, 45, 46, 47, 59, 60], "oehm": [15, 18, 30, 36, 42, 44, 45, 46, 47, 59, 60], "juli": 15, "nov": 15, "burau_matrix": [15, 18], "25760": 15, "26657": 15, "moritz": 15, "firsch": 15, "sept": 15, "2021": 15, "color": [15, 53], "jone": 15, "links_gould_polynomi": 15, "finitetypeartingroupel": 15, "lkb_matrix": 15, "lawrenc": 15, "krammer": 15, "bigelow": 15, "e_": 15, "mid": [15, 19, 20, 59, 62, 65], "lexicograph": [15, 19, 62], "laurent": 15, "By": [15, 17, 18, 21, 37, 52, 59], "separ": [15, 31], "comma": 15, "big2003": 15, "tl_matrix": 15, "drain_siz": 15, "variab": 15, "spars": [15, 56], "temperlei": 15, "lieb": 15, "certain": [15, 18, 56], "satisfi": [15, 19, 53, 54, 65], "rule": [15, 19], "tl_basis_with_drain": 15, "detail": [15, 19, 21, 22, 36, 39, 42, 43, 48, 53, 54, 59, 66], "convent": [15, 35, 45, 59, 60, 62, 65], "eigenvalu": [15, 36], "appropri": [15, 54], "result": [15, 18, 19, 21, 22, 36, 52, 54, 58, 59, 60, 62], "burau": [15, 18], "tl": 15, "paramet": [15, 21, 22, 32, 45, 48, 59, 62], "expect": [15, 59, 62], "guess": 15, "calcul": [15, 18, 22, 58], "few": [15, 19, 22, 42, 53, 59], "b_4": 15, "laurentpolynomialr": [15, 19, 21], "b_8": 15, "big1999": 15, "psi1": 15, "psi2": 15, "w1": 15, "w2": 15, "jon2005": 15, "alexander_polynomi": 15, "alexand": [15, 19, 59, 62], "closur": 15, "unnorm": 15, "plu": [15, 22], "minu": [15, 60], "constant": [15, 20, 48, 49, 53, 54], "coeffici": [15, 19, 21, 32, 35, 36, 59, 62, 65], "multipli": [15, 19, 37, 60], "trefoil": 15, "next": [15, 22, 35, 37, 41, 54, 59, 60, 62, 64], "figur": [15, 31], "knot": 15, "our": 15, "kinoshita": 15, "terasaka": 15, "annular_khovanov_complex": 15, "qagrad": 15, "annular": 15, "khovanov": 15, "bg2013": 15, "quantum": 15, "grade": 15, "chain": [15, 53], "dictionari": [15, 19, 52, 53, 56, 60], "kei": [15, 19, 26, 48, 56, 65], "nonzero": [15, 16, 20, 48, 54], "homologi": [15, 59], "annular_khovanov_homologi": 15, "homogi": 15, "around": [15, 37], "unreduc": 15, "e_1": 15, "e_i": [15, 21, 36, 65], "squier": [15, 18], "squ1984": 15, "root": [15, 18, 24, 25, 31, 33, 35, 36, 48], "yield": [15, 54, 59, 62], "format": [15, 19, 22, 42, 53, 56, 58, 59], "madj": 15, "adjoin": [15, 18, 59], "hermitian": [15, 18, 47], "inject_vari": [15, 19, 21], "burau_represent": 15, "central": [15, 16, 18, 59], "colored_jones_polynomi": 15, "try_invers": 15, "trace": 15, "hl2018": 15, "notat": [15, 18, 19, 22, 24, 36, 42, 45, 52, 53, 59, 60], "simplifi": [15, 19, 59], "bookkeep": 15, "figure_eight": 15, "components_in_closur": 15, "three": [15, 18, 54, 56, 59, 62], "disjoint": [15, 59, 60, 65], "unknot": 15, "k11n42": 15, "conjugating_braid": 15, "conjug": [15, 31, 32, 47, 59], "deformed_burau_matrix": 15, "deform": 15, "_algebra": 15, "db": 15, "ap_0": 15, "ap_5": 15, "bp_0": 15, "ap_1": 15, "cm_3": 15, "bp_4": 15, "bm_2": 15, "bm_3": 15, "cp_5": 15, "am_3": 15, "nondeform": 15, "def": [15, 22, 24, 25, 31, 59], "subs_gen": 15, "gen_str": 15, "str": [15, 53], "els": [15, 18, 30, 62], "elif": 15, "db_base": 15, "db_simp": 15, "change_r": 15, "gcd": [15, 62], "greatest": 15, "is_conjug": [15, 31], "is_period": 15, "period": 15, "is_pseudoanosov": 15, "pseudo": [15, 36, 59], "anosov": 15, "is_reduc": 15, "jones_polynomi": 15, "skein_norm": 15, "replac": [15, 19, 21], "agre": [15, 25], "lic1997": 15, "slightli": 15, "had": 15, "kauffman": 15, "bracket": 15, "depend": [15, 18, 19, 36, 56, 59, 60, 66], "unspecifi": 15, "fraction": [15, 36], "unlink": 15, "hopf": 15, "link": 15, "mirror": 15, "k11n34": 15, "conwai": 15, "b11n42": 15, "b11n34": 15, "lcm": [15, 22, 59], "links_gould_matrix": 15, "superalgebra": 15, "sl_q": 15, "mw2012": 15, "per": 15, "variat": 15, "choic": [15, 19, 45, 53, 54, 62], "hopflg": 15, "univari": [15, 36, 45, 62], "yrbar": 15, "multivari": [15, 21, 60], "s0r": 15, "s1r": 15, "yr": 15, "varnam": 15, "use_symbol": 15, "gould": 15, "t0": [15, 18, 21], "t1": [15, 18, 19, 21], "markov_trac": 15, "markov": 15, "rescal": 15, "mt": 15, "mirror_imag": 15, "under": [15, 30, 36, 56, 58, 59, 60, 65], "involut": 15, "braidgroup_class": [15, 18], "mirror_involut": 15, "amphicheir": 15, "k12a_427": 15, "bm": 15, "s3": [15, 16, 18, 19, 22, 36, 42, 51, 59, 62], "induc": [15, 16, 21, 59], "cycle_str": [15, 60], "plot": [15, 41, 53], "rainbow": 15, "orient": 15, "bottom": [15, 53, 59], "top": [15, 53, 59], "aspect_ratio": 15, "kwd": [15, 21, 23, 27, 28, 30, 32, 36, 44, 48, 59], "avail": [15, 18, 19, 20, 26, 36, 41, 45, 46, 47, 53, 59, 62], "possibl": [15, 18, 19, 21, 35, 36, 44, 45, 48, 53, 59, 64], "bezier_path": 15, "line": [15, 52, 60, 61], "individu": [15, 59], "float": 15, "goe": 15, "aspect": [15, 62], "ratio": 15, "graphic": [15, 41, 53], "primit": [15, 18, 33, 36, 41, 53, 59, 62], "red": [15, 53], "blue": [15, 53], "plot3d": [15, 41, 53], "3d": [15, 53], "bezier3d": 15, "graphics3d": [15, 41, 53], "revers": [15, 59, 60, 62], "anti": [15, 16], "k8_17": 15, "br": [15, 53], "right_normal_form": 15, "rigid": [15, 65], "sliding_circuit": 15, "slide": 15, "circuit": 15, "super_summit_set": 15, "summit": 15, "thurston_typ": 15, "tropical_coordin": 15, "tropic": 15, "b_n": 15, "2n": [15, 20, 33, 62], "tc": 15, "semir": 15, "dw2007": 15, "deh2011": 15, "ultra_summit_set": 15, "orbit": [15, 36, 56, 59, 60], "ultra": 15, "prefix": [15, 21, 24, 25, 27], "solvabl": [15, 29, 59, 62, 65], "local": 15, "16059": 15, "ball": [15, 48], "radiu": 15, "ret": 15, "alphabet": 15, "gb": 15, "cayley_graph": [15, 41], "digraph": [15, 41, 56], "31": [15, 22, 30, 53, 59, 60, 62], "vertic": [15, 41, 53, 56, 65], "nontrivi": [15, 36, 59, 62], "tree": [15, 54], "finitetypeartingroup": 15, "summand": [15, 49], "mark": [15, 24, 25], "highest": [15, 16], "trival": 15, "wenzl": 15, "projector": 15, "wan2010": 15, "practic": [15, 36, 55, 56, 58, 62], "consecut": 15, "moreov": 15, "b_5": 15, "hopefulli": [15, 19], "formula": [15, 59, 62], "dimension_of_tl_spac": 15, "tl_represent": 15, "illustr": [15, 60, 62], "purpos": [15, 48, 49, 53, 54, 59], "as_permutation_group": [15, 18, 19, 20, 36, 42, 59], "drain": 15, "28": [15, 22, 30, 35, 36, 53, 59, 60, 62], "endomorph": [15, 24, 30, 32, 66, 67], "entir": 15, "combinat": 15, "diagram_algebra": 15, "da": 15, "total_dim": 15, "temperley_lieb_diagram": 15, "mapping_class_act": 15, "punctur": 15, "disk": 15, "fundament": [15, 22, 35, 62], "yourself": [15, 31], "simpler": [15, 19], "mirr": 15, "That": [15, 59], "sigma_i": 15, "x3": [15, 19, 21], "rightquantumword": 15, "definit": [15, 18, 31, 32, 35, 42, 45, 47, 59, 65, 67], "monomi": [15, 36, 59, 66, 67], "fig_8": 15, "bp_1": 15, "cp_1": 15, "bp_3": 15, "cp_3": 15, "ap_3": 15, "bm_0": 15, "cm_0": 15, "am_0": 15, "cm_2": 15, "am_2": 15, "ep": [15, 22], "mathcal": 15, "_n": 15, "cp_0": 15, "bp_2": 15, "cp_2": 15, "ap_2": 15, "bm_1": 15, "cm_1": 15, "am_1": 15, "rqw": 15, "parallel": 15, "reduced_word": 15, "qw": 15, "dict": [15, 19, 21, 22, 53, 56, 60], "outlin": 15, "int": [15, 53, 54, 60], "item": [15, 19, 22, 53, 59], "classfunct": 16, "tabl": [16, 59, 62], "therefor": [16, 54], "somewhat": 16, "franco": 16, "saliola": 16, "novemb": 16, "octob": 16, "bugfix": 16, "exterior": [16, 65], "class_funct": [16, 29], "cyclicpermutationgroup": [16, 19, 20, 22, 36, 42, 59, 61, 62], "conjugacy_class": [16, 17, 29, 59, 62, 64], "chi": [16, 29, 36], "classfunction_gap": 16, "sageobject": [16, 31, 53], "adams_oper": 16, "adam": 16, "psi": [16, 25, 66, 67], "turn": [16, 19, 53, 54, 56, 62], "char": 16, "irreducible_charact": [16, 29, 59], "zeta5": [16, 59], "decompos": 16, "central_charact": 16, "symmetricgroup": [16, 17, 20, 29, 36, 52, 53, 56, 59, 60, 62, 64], "trivial_charact": [16, 29, 59], "appear": [16, 59], "s5": [16, 18], "irr": [16, 59], "determinant_charact": 16, "exterior_pow": 16, "induct": 16, "supergroup": 16, "adjoint": [16, 32], "xi": 16, "irreducible_constitu": 16, "ic": 16, "is_irreduc": 16, "s4": [16, 18, 20, 51, 59, 62], "norm": [16, 35], "a5": 16, "alternatinggroup": [16, 19, 20, 29, 59, 60, 62], "scalar_product": 16, "symmetric_pow": 16, "tensor_product": 16, "chi1": 16, "chi2": 16, "chi3": 16, "zeta8": 16, "classfunction_libgap": 16, "charactert": [16, 59], "interfac": [16, 18, 28, 31, 36, 42, 59], "gapel": [16, 19, 21, 30, 31, 52, 59], "tensor": 16, "conjugacyclass": [17, 64], "main": [17, 22, 40, 48, 49], "conjugacyclassgap": [17, 64], "go": [17, 26, 42, 45], "wherea": [17, 18], "fallback": 17, "naiv": [17, 56, 59], "butler": 17, "paper": [17, 65], "quicker": 17, "cycl": [17, 52, 53, 59, 60, 62, 64, 65], "fall": [17, 22, 30], "whenev": 17, "is_rat": 17, "close": 17, "is_real": 17, "real": [17, 35, 41, 42, 45, 48, 49], "l": [17, 24, 25, 31, 32, 35, 36, 40, 53, 55, 59, 60, 61, 62], "taken": [17, 35, 59], "weylgroup": [17, 25, 26, 31], "3840": [17, 56], "memori": [17, 19, 22, 54], "intens": 17, "devot": 18, "firstli": 18, "investig": 18, "proceed": [18, 54, 55], "fourth": 18, "canadian": 18, "mathemat": [18, 36, 59], "congress": 18, "vancouv": 18, "1957": 18, "pp": [18, 54, 55, 56, 58], "95": 18, "122": 18, "show": [18, 53, 59, 62], "wise": 18, "sl": [18, 23, 26, 29, 36, 41, 42, 44, 59], "four": [18, 20, 59, 62], "five": 18, "sp": [18, 19, 26, 29, 30, 44, 46], "c_3": [18, 59, 62], "todai": 18, "irreduc": [18, 29, 36, 59, 62], "shephard": [18, 62], "todd": [18, 62], "classif": [18, 62], "32": [18, 22, 36, 53, 59, 60, 62], "uniti": [18, 33, 36, 48], "einig": 18, "endlich": 18, "faktorgruppen": 18, "der": 18, "zopfgruppen": 18, "math": [18, 22, 36, 56, 59], "163": 18, "1978": 18, "291": 18, "302": 18, "assion": 18, "seri": [18, 36, 59], "lll": 18, "mbox": 18, "t_2": 18, "t_3": 18, "t_1": 18, "t_i": 18, "he": 18, "epimorph": [18, 19], "hi": [18, 19], "resp": [18, 25, 35, 60], "therein": 18, "help": [18, 36, 53, 59, 62], "gap3": 18, "chevi": 18, "instal": [18, 59], "as_classical_group": 18, "as_matrix_group": [18, 41, 42, 45], "as_reflection_group": 18, "cox1957": 18, "ass1978": 18, "2019": [18, 36, 60], "cubic_braid": 18, "assiongroup": 18, "cubicbraidgroup": 18, "short": 18, "hand": 18, "cut": 18, "cbg_type": 18, "s3x": 18, "assiongroupu": 18, "assionu": 18, "u3": 18, "u3x": 18, "cubicbraidel": 18, "finitelypresentedgroupel": [18, 19], "c1": [18, 59], "ele1": 18, "ele2": 18, "preimag": [18, 30], "root_bur": 18, "characterist": [18, 36, 45, 62], "coset": [18, 19, 58, 59], "belong": [18, 59], "indetermin": [18, 36, 62], "sixth": 18, "twelfth": 18, "six": 18, "split": [18, 48, 49, 55, 56, 59, 62], "document": [18, 19, 22, 36, 42, 48, 51, 59], "buma": 18, "zeta3": [18, 42, 45, 47, 48, 59], "sqrt3": 18, "r64": 18, "bumaad": 18, "zeta12": 18, "finitelypresentedgroup": [18, 19, 59], "enum": 18, "due": [18, 20, 56, 59, 62], "activ": 18, "easili": [18, 36, 59], "c0": 18, "u0": 18, "u1": 18, "u2": 18, "forc": [18, 19], "psp": [18, 26, 30, 59, 62], "centralizing_el": 18, "enlarg": 18, "pgu": [18, 26, 30, 59, 60, 62], "ucf": [18, 42, 47], "stand": 18, "u3cl": 18, "u3clemb": 18, "ucl": 18, "u4": 18, "u4cl": 18, "c4cl": 18, "c5mch5": 18, "m_back": 18, "u5": 18, "u5mch3": 18, "through": [18, 20, 22, 59], "use_class": 18, "pc3": 18, "occurr": 18, "info": 18, "messag": [18, 62], "r3": [18, 20], "st4": 18, "cartan_matrix": 18, "simple_root": 18, "famili": [18, 25, 27, 35, 50, 59, 62, 65], "simple_coroot": 18, "mr": 18, "c3cl": 18, "view": [18, 53, 59, 62], "r4": 18, "invariant_form": [18, 41, 44, 45, 46, 47], "classical_invariant_form": 18, "braid_group": 18, "bu": 18, "ub": [18, 22, 53], "avoid": 18, "wait": 18, "s15": 18, "109777561863482259035023554842176139436811616256000": 18, "hilfssatz": 18, "insid": [18, 59, 62], "classical_group": 18, "cm": 18, "degener": [18, 45, 47], "caus": 18, "is_singular": 18, "codegre": [18, 62], "sens": [18, 29, 35, 36, 45], "cubic_braid_subgroup": 18, "nstrand": 18, "index_set": [18, 21, 25, 27, 35, 60, 62], "is_finit": [18, 23, 29, 35, 41, 44], "simple_reflect": [18, 24, 25, 35, 60, 62], "select": 18, "free_group": [19, 21, 31], "tietz": [19, 21, 31], "thing": [19, 56], "access": [19, 26, 29, 31, 34, 59, 63], "fp": [19, 31], "lowercentralseri": 19, "hold": [19, 42, 45], "lib": [19, 21, 30, 31, 36, 59], "gapelement_integ": 19, "abelian": [19, 20, 21, 22, 23, 27, 29, 30, 59, 62, 65], "g_ab": 19, "m1": [19, 21, 29, 36, 62], "m2": [19, 21, 29, 36, 42], "guarante": [19, 36, 59], "finish": [19, 54], "undecid": 19, "process": [19, 53, 54, 60], "until": 19, "exhaust": [19, 54], "presentation_of_a_group": 19, "word_problem_for_group": 19, "finitely_pres": 19, "abelian_invari": [19, 21], "i_1": [19, 21], "i_j": [19, 21], "alexander_matrix": 19, "im_gen": [19, 21], "fox": [19, 21], "introduc": 19, "t2": [19, 21], "t3": [19, 21], "t4": 19, "limit": [19, 22, 55, 62, 67], "4096000": 19, "maxim": [19, 36, 59, 62], "abort": 19, "permutationgroup": [19, 36, 42, 59, 60, 61], "exce": 19, "exceed": 19, "decid": 19, "prepar": 19, "consum": [19, 36, 53], "without": [19, 36, 62], "sensibl": 19, "answer": [19, 59], "direct_product": [19, 22, 42, 59, 61, 62], "new_nam": 19, "directproduct": [19, 31, 59], "joh1990": 19, "proposit": 19, "ask": 19, "old": [19, 60], "klein": [19, 20, 62], "examin": 19, "But": [19, 22, 52, 59], "davi": [19, 20, 59], "shurbert": [19, 20, 59], "2013": [19, 20, 24, 25, 27, 35, 36, 37, 39, 41, 45, 46, 47, 59, 65, 66], "defn": [19, 32, 59, 61, 66, 67], "gquotient": 19, "x4": [19, 21], "rewriting_system": 19, "system": [19, 24, 25, 32, 35, 36, 53, 59], "confluent": 19, "reduct": 19, "make_conflu": 19, "semidirect_product": [19, 59], "cartesian": [19, 25, 59], "g_1": [19, 22, 25, 33, 59], "h_1": [19, 25, 59], "g_2": [19, 22, 25, 33, 59], "h_2": [19, 25, 59], "implicitli": 19, "slot": 19, "second": [19, 24, 32, 36, 48, 49, 52, 53, 56, 59], "costli": 19, "bypass": 19, "confid": [19, 59], "permutationgroup_gener": [19, 52, 53, 59, 61, 62], "depth": [19, 56, 59], "d4": [19, 22, 40, 42, 59, 61], "alpha1": [19, 59], "alpha2": [19, 59], "dicycl": [19, 20, 26, 59, 62], "alpha": [19, 25, 35, 59, 62, 66, 67], "dihedralgroup": [19, 20, 22, 36, 42, 59, 60, 61, 62], "off": [19, 56], "expens": [19, 30, 59, 61], "behavior": 19, "unpredict": [19, 59], "invalid": 19, "caught": 19, "simplification_isomorph": 19, "complic": [19, 37, 54, 59], "e0": [19, 65], "e1": [19, 65], "e2": [19, 65], "e4": 19, "e5": [19, 42, 47], "e6": 19, "e7": 19, "e8": 19, "e9": 19, "structure_descript": [19, 22, 42, 59], "latex": [19, 22, 42, 44, 45, 46, 47, 59], "tri": [19, 22, 36, 42, 59], "structuredescript": [19, 22, 42, 59], "build": [19, 20, 22, 42, 52, 54, 59], "produc": [19, 22, 36, 42, 53, 59], "latexexpr": [19, 22, 42, 59], "mainli": [19, 22, 42, 59], "small": [19, 20, 22, 36, 41, 42, 59, 62], "surpris": [19, 22, 42, 59], "d3": [19, 22, 42, 59], "17573": [19, 22, 42, 59], "And": [19, 20, 22, 42, 59, 61], "a8": [19, 22, 42, 59], "freegroupel": [19, 21], "groupmorphismwithgensimag": 19, "setmorph": [19, 24, 30], "rewritingsystem": 19, "knuth": 19, "bendix_completion_algorithm": 19, "shortlex": 19, "kbmag": 19, "compil": 19, "finitely_presented_group": 19, "after": [19, 53, 59], "bendix": 19, "is_conflu": 19, "appli": [19, 24, 54, 59], "try": [19, 22, 36, 37, 53, 54, 60, 62], "intern": [19, 59], "grant": 19, "although": [19, 62], "occas": 19, "interrupt": 19, "manual": [19, 36], "makeconflu": 19, "sort": [19, 27, 36, 53, 56, 59, 60, 62, 64, 65], "wrap_fpgroup": 19, "libgap_fpgroup": 19, "comparison": [19, 21], "libgap_free_group": [19, 21], "id": [19, 21, 59], "put": [19, 21, 59], "understand": [19, 21, 59], "implic": [19, 21], "_set_compare_by_id": [19, 21], "safe": [19, 21], "recommend": [19, 21], "a_cub": 19, "generatorsofgroup": [19, 36], "tab": [20, 26, 34, 63], "made": [20, 22, 53, 54, 59, 62, 65], "engin": 20, "tw1980": [20, 59, 62], "a_n": [20, 21, 62], "c_n": [20, 59, 62], "nonabelian": [20, 36, 59, 62], "4n": [20, 33, 62], "d_n": [20, 62], "fgabelian": [20, 26], "c_2": [20, 54, 59, 62], "kleinfour": [20, 26, 62], "quaternion": [20, 26, 36, 62], "06": [20, 53, 59, 61, 62], "desir": 20, "finitely_presented_nam": 20, "cyclicpresent": 20, "alternatingpresent": 20, "a6": 20, "360": [20, 62], "binarydihedralpresent": 20, "bd_n": [20, 33], "typo": [20, 33, 53], "sun2010": [20, 33], "binarydihedr": [20, 33], "dicyclicpresent": 20, "dihedralpresent": 20, "finitelygeneratedabelianpresent": 20, "int_list": 20, "variou": [20, 25, 26, 37, 44, 59], "unabl": [20, 32, 35], "finitelygeneratedheisenbergpresent": 20, "heisenberggroup": [20, 38], "y1": [20, 56], "r1": [20, 53], "r2": [20, 53], "hp": 20, "hnp": 20, "heisenberg_group": [20, 38], "kleinfourpresent": 20, "quaternionpresent": 20, "quaterniongroup": [20, 62], "symmetricpresent": 20, "identity_matrix": 21, "m3": [21, 29, 36], "preferenti": 21, "fox_deriv": 21, "x_2": [21, 32], "a_2": 21, "partial_j": 21, "delta_": 21, "qquad": [21, 24, 32, 33, 62], "uv": 21, "lie": [21, 26], "infer": 21, "syllabl": 21, "x_k": 21, "subword": 21, "singl": [21, 36, 52], "freegroup_class": 21, "generator_nam": 21, "divis": [21, 22, 26], "is_freegroup": 21, "wrap_freegroup": 21, "collect": [22, 50, 65], "group": [22, 52, 54, 55, 56, 57, 58], "multiplication_nam": 22, "addition_nam": 22, "caller": 22, "op": 22, "finder": 22, "linear_rel": 22, "order_from_multipl": 22, "order_from_bound": 22, "781": 22, "37": [22, 30, 53, 59, 60, 62], "672": [22, 45], "39": [22, 30, 53, 59, 60, 62], "36": [22, 29, 30, 36, 53, 59, 60, 62], "3227": 22, "plist": 22, "prime_factor": 22, "hasse_bound": 22, "bsg": [22, 56], "bound": 22, "babi": 22, "step": [22, 32], "giant": 22, "na": 22, "lb": 22, "le": 22, "lower": [22, 36, 59], "upper": [22, 59], "except": [22, 42, 62, 65], "logarithm": [22, 32], "soft": 22, "o": [22, 31, 36, 40, 56, 59, 62], "next_prim": 22, "230": 22, "500": [22, 59], "229": 22, "lift_x": 22, "69327408": 22, "john": [22, 53], "cremona": 22, "priori": 22, "rho": 22, "nb": 22, "vastli": 22, "pohlig": 22, "hellman": 22, "pollard": 22, "kangaroo": 22, "997": 22, "2356": 22, "121": 22, "50": [22, 58, 59, 62], "quadraticfield": [22, 36], "eta": 22, "detect": 22, "11515": 22, "55224": 22, "negat": 22, "dlog": 22, "smooth": 22, "63": [22, 53, 62], "2005": [22, 59, 62], "29": [22, 53, 59, 60, 62], "julien": 22, "grijalva": 22, "09": [22, 32, 37, 45, 53, 62, 65], "discrete_log_gener": 22, "discrete_log_lambda": 22, "hash_funct": 22, "built": [22, 54, 59], "hash": [22, 62], "amount": [22, 59, 62], "coupl": 22, "critic": 22, "1234567": 22, "1200000": 22, "1250000": 22, "89": 22, "2011": [22, 56, 59], "704966": 22, "yann": 22, "laigl": 22, "chapui": 22, "discrete_log_rho": 22, "adapt": 22, "edlyn": 22, "tesk": 22, "1234": 22, "46591": 22, "50021": 22, "10577": 22, "23999": 22, "28893": 22, "14601": 22, "41019": 22, "30188": 22, "3081": 22, "736": 22, "27092": 22, "bewar": [22, 60], "integermodr": [22, 46], "171980": 22, "31002": 22, "15501": 22, "123456": 22, "failur": [22, 54], "happen": 22, "better": [22, 59], "mq": 22, "additive_ord": 22, "merge_point": 22, "p1": [22, 32, 59], "p2": [22, 59], "suppli": [22, 31], "g_3": 22, "n_3": 22, "hbox": 22, "ob": 22, "oc": 22, "728": 22, "od": 22, "discrete_logarithm": 22, "realfield": 22, "0625000000000": 22, "idempot": 22, "fast": [22, 53, 59], "389a1": 22, "645656132358737542773209599489": 22, "22817025904944891235367494656": 22, "525532176124281192881231818644174845702936831": 22, "3446581505217248068297884384990762467229696": 22, "528978757629498440949529703029165608170166527": 22, "p0": 22, "101": 22, "102": 22, "104": 22, "105": 22, "106": 22, "107": 22, "108": 22, "109": 22, "height": 22, "000000000000000": 22, "35": [22, 53, 59, 60, 62], "361": 22, "5720": 22, "6859": 22, "47503": 22, "16641": 22, "9862190": 22, "2146689": 22, "0000000000000": 22, "previou": [22, 59, 65], "200": 22, "250": 22, "kept": [22, 44, 45, 46, 47], "compat": [22, 52, 59, 60, 65], "prefer": 22, "cach": [22, 59], "subsequ": 22, "1279": 22, "mersenn": 22, "42391158275216203514294433200": 22, "algebraicgroup": 23, "finitegroup": [23, 59, 67], "develop": 23, "overrid": [23, 25, 29], "is_group": 23, "shimozono": [24, 25], "group_exp": [24, 25], "groupexp": [24, 25], "exponenti": [24, 32], "creation": [24, 32, 60], "kind": [24, 30, 32, 54], "accomplish": 24, "_apply_functor": 24, "ez": [24, 25], "manipul": [24, 62], "achiev": [24, 59], "_apply_functor_to_morph": 24, "rootsystem": [24, 25], "ambient_spac": 24, "weyl_group": [24, 25], "my_act": 24, "commutativeadditivegroup": 24, "groupexpel": 24, "elementwrapp": 24, "eg": [24, 53], "groupexp_class": 24, "weight_lattic": 24, "weight": [24, 35], "lattic": [24, 25], "group_gener": [24, 25, 27], "__mul__": 24, "group_semidirect_product": 25, "groupsemidirectproduct": 25, "twist": 25, "act_to_right": 25, "prefix0": 25, "prefix1": 25, "print_tupl": 25, "cartesianproduct": 25, "1_h": 25, "1_g": 25, "former": 25, "rtime": [25, 62], "syntact": [25, 60], "align": 25, "g_1g_2": [25, 59], "prefixl": 25, "style": 25, "ev": 25, "cartan_typ": [25, 62], "cartantyp": 25, "ww": 25, "functori": 25, "twofold": 25, "groupsemidirectproductel": 25, "__main__": 25, "cartesian_project": 25, "opposite_semidirect_product": 25, "exchang": 25, "hop": 25, "upon": [25, 59], "to_opposit": 25, "opposit": [25, 65], "root_lattic": 25, "weyl": [25, 62], "discov": [26, 58], "quickli": [26, 59], "press": [26, 53, 55, 59, 62], "primari": [26, 36], "complexreflect": [26, 62], "mathieu": [26, 62], "suzuki": [26, 59, 62], "pgl": [26, 30, 59, 62], "psl": [26, 59, 61, 62], "psu": [26, 59, 62], "transit": [26, 51, 59, 62], "rubikscub": [26, 53], "quaterniongf3": [26, 36], "misc": [26, 65], "coxetergroup": [26, 35, 37], "reflectiongroup": 26, "rightangledartin": [26, 65], "additiveabelian": 26, "additivecycl": 26, "semimonomialtransform": [26, 66, 67], "travi": [27, 33, 35, 37, 64, 65], "scrimshaw": [27, 33, 35, 37, 64, 65], "indexed_free_group": 27, "indexedfreeabeliangroup": 27, "indexedgroup": 27, "indexedfreeabelianmonoidel": 27, "indexedfreegroup": 27, "indexedfreemonoidel": 27, "to_word_list": 27, "sign": [27, 42, 48, 59, 60], "indexedmonoid": 27, "lazi": 27, "infti": [27, 35], "unless": [27, 59, 62], "dedic": 28, "your": [28, 29, 31, 59, 61], "own": [28, 31, 54], "g_gap": 28, "libgap_group": [28, 29, 31, 36, 42], "grouplibgap": [28, 29, 31], "grouplibgap_with_categori": 28, "arg": [28, 30, 44, 48, 59], "properli": [29, 60], "libgap_mixin": 29, "enumeratedset": 29, "parentmethod": 29, "51840": 29, "12130560": 29, "480": 29, "center": [29, 41, 53, 59, 62], "finitefield": 29, "character_t": [29, 36, 59, 62], "gx": [29, 59], "vert": [29, 59], "cyclicgroup": [29, 31], "is_nilpot": [29, 59], "is_p_group": 29, "is_perfect": [29, 59], "perfect": [29, 59], "is_polycycl": [29, 59], "is_solv": [29, 59, 62], "is_simpl": [29, 59], "is_supersolv": [29, 59], "supersolv": [29, 59], "5241": 29, "mg": [29, 59], "10515": 29, "9437": [29, 42], "26750": [30, 59, 60], "natural_map": 30, "libgap_morph": [30, 39, 43, 59], "grouphomset_libgap": [30, 39, 59], "homsetwithbas": 30, "groupmorphism_libgap": 30, "overload": 30, "nat": 30, "grouphomset_libgap_with_categori": 30, "gap_hom": [30, 61], "pr": 30, "34": [30, 36, 53, 56, 59, 60, 62], "pushforward": 30, "sect": 30, "helper": [31, 43, 47, 56, 62], "libgap_wrapp": [31, 59], "fooelement": 31, "foogroup": 31, "__init__": [31, 52], "lg": 31, "dummi": 31, "superclass": 31, "pc": 31, "_repr_": 31, "libgap_el": 31, "xg": 31, "is_on": [31, 37, 48], "3x3": 31, "96": 31, "nth_root": 31, "usabl": 31, "__reduce__": 31, "serial": 31, "pickl": 31, "nativ": 31, "recreat": 31, "f6": 31, "relatorsoffpgroup": 31, "start": [31, 54, 62], "usual": [31, 32, 37, 45, 60, 62], "bigger": [31, 36], "19270": 31, "itertool": 31, "subgroup_gen": 31, "diagonal_matrix": 31, "eero": 32, "hakavuori": 32, "lie_gp": 32, "nilpotent_lie_group": 32, "nilpotentliegroup": 32, "differentiablemanifold": 32, "topolog": 32, "rr": [32, 35, 41, 45, 48, 62], "chart_exp1": 32, "chart_exp2": 32, "lie_algebra": 32, "lie_group": 32, "default_chart": 32, "chart": 32, "x_0": 32, "set_default_chart": 32, "frame": 32, "left_invariant_fram": 32, "right_invariant_fram": 32, "displai": [32, 53, 58, 59, 60], "exp1_fram": 32, "exp2_fram": 32, "y_0": 32, "y_2": 32, "l_g": 32, "left_transl": 32, "diffeomorph": 32, "verifi": [32, 56, 58, 59, 62], "differenti": 32, "x_l": 32, "left_invariant_extens": 32, "x_r": 32, "right_invariant_extens": 32, "vanish": 32, "manifoldpoint": 32, "liealgebra": 32, "operatornam": [32, 62], "_g": 32, "mathfrak": 32, "admit": [32, 33], "ad_g": 32, "x_12": 32, "x_112": 32, "x_122": 32, "x_1x_1": 32, "x_nx_n": 32, "y_12": 32, "ghg": 32, "c_g": 32, "chart1": 32, "chart2": 32, "noth": [32, 53], "extens": [32, 36], "custom": [32, 54], "manifold": 32, "vector_fram": 32, "livf": 32, "coord_fram": 32, "z_0": 32, "z_1": 32, "z_2": 32, "w_a": 32, "w_b": 32, "w_c": 32, "gh": [32, 59], "l_h": 32, "rivf": 32, "xr_1": 32, "xr_2": 32, "xr_12": 32, "right_transl": 32, "hg": [32, 59], "r_g": 32, "r_h": 32, "2016": [33, 37], "matrix_gp": [33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "binary_dihedr": 33, "binarydihedralgroup": 33, "finitelygeneratedmatrixgroup_gap": [33, 36, 38, 40, 41, 42, 45, 46, 47], "zeta_": [33, 45, 47], "zeta_4": 33, "zeta_k": 33, "furthermor": [33, 45], "avatar": 33, "dol2009": 33, "dicyclic_group": 33, "binary_dihedral_group": 33, "coxeter_group": 35, "coxetermatrixgroup": 35, "coxeter_matrix": [35, 62], "finitelygeneratedmatrixgroup_gener": [35, 36], "alpha_": 35, "inner": [35, 59], "alpha_t": 35, "co": [35, 53, 56], "frac": [35, 36], "st": [35, 56], "sigma_": 35, "faith": [35, 59], "cartan": [35, 62], "quadrat": [35, 45, 46, 65], "edg": [35, 53, 56, 65], "treat": [35, 62], "coxeter_diagram": 35, "becaus": [35, 49, 54, 62, 67], "cup": 35, "oo": 35, "236067977499790": 35, "matrixgroupelement_gener": [35, 37, 42], "action_on_root_indic": 35, "side": [35, 42, 59, 60], "w0": 35, "canonical_matrix": 35, "descent": [35, 60, 62], "node": 35, "dynkin": 35, "diagram": [35, 53], "first_desc": 35, "descript": [35, 48, 51, 59, 62], "has_right_desc": 35, "sum_": [35, 36, 59, 62], "thu": [35, 59, 60, 62], "bilinear_form": 35, "bilinear": [35, 40, 44, 45, 46, 47], "semidefinit": 35, "canonical_represent": 35, "fundamental_weight": 35, "positive_root": 35, "simple_root_index": 35, "alpha_i": 35, "design": 36, "sl2z": 36, "_contains_": [36, 42], "2007": [36, 42, 53, 59, 60, 62], "invariant_gener": [36, 42], "martin": [36, 42], "albrecht": [36, 42], "king": [36, 42, 59], "module_composition_factor": [36, 42], "meatax": [36, 42], "improv": [36, 42], "reynold": [36, 42], "singular": [36, 42], "_permutation_group_element_": 36, "25706": [36, 59], "revis": [36, 37], "26903": 36, "27143": 36, "finitely_gener": 36, "matrixgroup_gap": [36, 42, 44], "finitelygeneratedmatrixgroup_gap_with_categori": 36, "seed": [36, 54, 59], "occur": [36, 54, 62], "hard": 36, "harder": 36, "context": 36, "low": 36, "invoc": 36, "imf": 36, "function_factori": 36, "imfmatrixgroup": 36, "gg": 36, "21499084800": 36, "psmaller": 36, "144": [36, 41], "80": 36, "integr": [36, 44], "concern": [36, 60], "involv": [36, 59], "smallerdegreepermutationrepresent": 36, "reproduc": [36, 59], "good": [36, 54, 59], "bad": 36, "secondari": 36, "invariant_algebra_reynold": 36, "invariant_r": 36, "finvar": 36, "gen1": 36, "gen2": 36, "gen3": 36, "70": 36, "stu1993": 36, "modular": [36, 62], "arxiv": 36, "0703035": 36, "invariants_of_degre": 36, "deg": [36, 60], "gr": 36, "ct": [36, 59], "match": 36, "izeta3": 36, "www": [36, 53], "ref": 36, "chap69": 36, "html": [36, 53], "molien_seri": [36, 59], "return_seri": 36, "prec": 36, "molien": [36, 59], "det": [36, 59, 62], "tg": 36, "omega": 36, "k_i": [36, 65], "prod_": [36, 62], "dec1998": 36, "tetrahedr": 36, "tetra": 36, "mol": 36, "octahedr": 36, "octa": 36, "icosahedr": 36, "z5": 36, "ico": 36, "reynolds_oper": 36, "poli": 36, "compositum": 36, "absolut": [36, 60], "rebecca": 36, "lauren": 36, "ben": 36, "hutz": 36, "zeta4": 36, "1666666666666667": 36, "2886751345948129": 36, "ll": 36, "generator_matric": 36, "matrixgroup_gener": [36, 42, 44], "h1": 36, "h2": 36, "formal": [36, 48, 62], "nonsens": 36, "sl2c": 36, "attributeerror": 36, "linearmatrixgroup_generic_with_categori": 36, "attribut": [36, 41, 54], "quaternionmatrixgroupgf3": 36, "symmetri": [36, 59, 62], "d_4": [36, 59, 62], "commonli": [36, 65], "ay": 36, "jai": 36, "kai": 36, "normalize_square_matric": 36, "m4": 36, "unsupport": 37, "operand": 37, "similarli": [37, 53, 62], "address": 37, "rework": 37, "hierarchi": 37, "cython": [37, 60], "matrixgroupelement_gap": [37, 42], "charpoli": 37, "flatten": [37, 64], "solut": [37, 53], "414213562373095": 37, "huge": 37, "is_matrixgroupel": 37, "helloooo": 37, "hilder": 38, "vitor": 38, "lima": 38, "pereira": 38, "i_n": 38, "243": 38, "1024": 38, "is_matrixgrouphomset": 39, "deprecationwarn": [39, 43, 59], "matrixgrouphomset": 39, "pleas": 39, "25444": [39, 43], "integrallattic": 40, "orthogonal_group": 40, "1152": 40, "groupactiononquotientmodul": 40, "quotient_modul": 40, "is_left": 40, "groupofisometri": 40, "span": 40, "invariant_bilinear_form": [40, 45], "invariant_quotient_modul": 40, "groupactiononsubmodul": 40, "invariant_submodul": 40, "orthogonalmatrixgroup_gap": [40, 45], "regist": 40, "bil": 40, "49": [41, 53, 62], "extrem": [41, 45, 46, 47], "refactor": [41, 45, 46, 47], "kl1990": 41, "car1972": 41, "11064475422000000000000000": 41, "color_by_label": 41, "vertex_s": 41, "vertex_label": 41, "linearmatrixgroup_gap": 41, "sage_nam": [41, 44, 45, 46, 47], "latex_str": [41, 44, 45, 46, 47], "gap_command_str": [41, 44, 45, 46, 47], "namedmatrixgroup_gap": [41, 44, 45, 46, 47], "linearmatrixgroup_gener": 41, "namedmatrixgroup_gener": [41, 44, 45, 46, 47], "1956712595698146962015219062429586341124018007182049478916067369638713066737882363393519966343657677430907011270206265834819092046250232049187967718149558134226774650845658791865745408000000": 41, "_3": 41, "save": 42, "25894": 42, "matrix_group": [42, 44], "matrixgroup_bas": 42, "assumpt": [42, 54], "throw": 42, "awai": [42, 54], "encod": [42, 65], "sign_represent": [42, 59], "twosid": [42, 59], "warn": [42, 59], "ignor": [42, 45, 56, 59], "_default_sign": 42, "universalcyclotomicfield": [42, 47], "is_matrixgroup": 42, "mat": 42, "to_libgap": 43, "famou": 44, "named_group": 44, "command": [44, 59], "isinst": 44, "subcategori": 44, "etc": 44, "normalize_args_invariant_form": 44, "becom": [44, 62], "26028": [44, 45, 46, 47], "normalize_args_vectorspac": 44, "ari": 45, "disambigu": 45, "inequival": 45, "third": 45, "odd": [45, 59, 62], "_latex_": [45, 47], "__str__": [45, 47], "_og": 45, "cmd": 45, "relev": [45, 54], "distinguish": 45, "go3": 45, "go3m": 45, "pm": [45, 46, 47, 62], "to_matrix": [45, 46, 47], "orthogonalmatrixgroup_gener": 45, "invariant_quadratic_form": 45, "bold": [45, 46, 47], "rrr": [45, 47], "so3": 45, "so3m": 45, "normalize_args_": 45, "transpos": 46, "276595200": 46, "modifi": [46, 47, 59], "special_linear": [46, 47], "sp4m": 46, "sp4": 46, "symplecticmatrixgroup_gap": 46, "symplecticmatrixgroup_gener": 46, "sp43": 46, "rrrr": 46, "378000": 47, "minor": 47, "_ug": 47, "_check_matrix": 47, "nondegener": [47, 62], "sesquilinear": [47, 62], "f_q": 47, "beta": [47, 66, 67], "gm": 47, "unitarymatrixgroup_gap": 47, "unitarymatrixgroup_gener": 47, "g32": 47, "su4": 47, "finite_field_sqrt": 47, "rootsofunitygroup": 48, "unitcirclegroup": 48, "circl": 48, "mathit": 48, "argumentbyelementgroup": 48, "factori": [48, 56, 58, 59, 67], "argumentgroup": 48, "conveni": 48, "asymptot": [48, 49], "growth": [48, 49], "lvert": 48, "rvert": 48, "influenc": [48, 49], "daniel": [48, 49], "krenn": [48, 49], "misc_gp": [48, 49], "argument_group": 48, "abstractargu": 48, "abstractargumentgroup": 48, "argumentbyel": 48, "plane": 48, "argumentgroupfactori": 48, "uniquefactori": 48, "analyz": [48, 53], "interpret": [48, 59], "signgroup": 48, "uu": 48, "uu_p": 48, "arg_p": 48, "exactli": [48, 59], "carri": 48, "uu_qq": 48, "aa": 48, "arg_rr": 48, "rif": 48, "rbf": 48, "arg_cc": 48, "cif": 48, "interv": 48, "cbf": 48, "create_key_and_extra_arg": 48, "create_object": 48, "rootofun": 48, "unitcirclepoint": 48, "exponent_denomin": 48, "denomin": 48, "exponent_numer": 48, "numer": 48, "is_minus_on": 48, "420000000000000": 48, "333333333333333": 48, "re": 49, "im": [49, 66], "imaginary_group": 49, "imaginaryel": 49, "additivegroupel": 49, "imaginarygroup": 49, "imag_part": 49, "real_part": 49, "pure": 49, "fit": [50, 59], "elsewher": 50, "polgaloi": [51, 59], "pari_group": 51, "parigroup": [51, 59], "polynomialr": [51, 60], "galois_group": [51, 61], "human": 51, "readabl": 51, "44": [51, 53, 59, 60, 62], "signatur": [51, 54], "transitive_numb": [51, 62], "ntk": 51, "permutationgroupel": [52, 59, 60], "flavor": 52, "combinatori": [52, 53], "perm_gp": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64], "mandatori": 52, "standardize_gener": 52, "convert_dict": 52, "as_cycl": 52, "_gap_": [52, 59, 60], "string_to_tupl": 52, "trademark": 53, "shall": 53, "omit": [53, 59], "simplic": 53, "clockwis": 53, "quarter": 53, "face": 53, "front": [53, 59], "move": [53, 59], "read": 53, "cubegroup": 53, "pars": 53, "singmast": 53, "corner": 53, "xyz": 53, "facet": 53, "rotat": 53, "flip": 53, "display2d": 53, "rear": [53, 59], "38": [53, 59, 60, 62], "41": [53, 59, 60, 62], "46": [53, 59, 60, 62], "47": [53, 59, 60, 62], "rewritten": 53, "edit": 53, "clean": 53, "bradshaw": [53, 60], "rewrot": 53, "docstr": [53, 59], "versatil": 53, "cleanup": 53, "cameron": [53, 59, 62], "york": [53, 59, 62], "cambridg": [53, 55, 59, 62], "1999": [53, 59, 62], "wielandt": [53, 59, 62], "academ": [53, 59, 62], "1964": [53, 59, 62], "dixon": [53, 59, 62], "mortim": [53, 59, 62], "verlag": [53, 59, 62], "berlin": [53, 59, 62], "adventur": 53, "hopkin": 53, "univ": 53, "2002": 53, "mv": 53, "2d": 53, "bdflru": 53, "l2r": 53, "t2b": 53, "state": 53, "gen_nam": 53, "mode": 53, "quiet": 53, "r0": 53, "reorder": 53, "xa": 53, "yb": 53, "varieti": 53, "perm_group": 53, "plot3d_cub": 53, "titl": 53, "mostli": 53, "draw": 53, "pictur": 53, "superflip": 53, "spot": 53, "26q": 53, "20f": 53, "plot_cub": 53, "2u": 53, "uf": 53, "fr": 53, "repr2d": 53, "explain": 53, "trick": [53, 61], "stabil": [53, 59], "discuss": [53, 56], "intuit": 53, "histori": 53, "show3d": 53, "cubi": 53, "sticker": 53, "025": 53, "scrambl": 53, "hybrid": 53, "timeout": 53, "kociemba": 53, "dietz": 53, "dik": 53, "winter": 53, "program": [53, 61], "eric": 53, "cubex": 53, "michael": 53, "reid": 53, "highli": 53, "undo": 53, "color_of_squar": 53, "lpurpl": 53, "yellow": 53, "green": 53, "orang": 53, "create_poli": 53, "polygon": [53, 59], "ur": 53, "cubie_cent": 53, "cubie_color": 53, "state0": 53, "cubie_fac": 53, "index2singmast": 53, "fdr": 53, "dlf": 53, "inv_list": 53, "lst": [53, 59, 65], "perm": [53, 55, 56, 66, 67], "plot3d_cubi": 53, "cnt": 53, "clr": 53, "rgbcolor": 53, "fur": 53, "clrf": 53, "clru": 53, "clrr": 53, "polygon_plot3d": 53, "tilt": 53, "kwarg": 53, "drawn": [53, 59], "ie": [53, 59, 62], "rotation_list": 53, "sin": 53, "theta": 53, "49999999999999994": 53, "7071067811865475": 53, "8660254037844387": 53, "7071067811865476": 53, "xproj": 53, "rot": 53, "6123724356957945": 53, "yproj": 53, "378497416975604": 53, "question": 54, "loos": 54, "automorphism_group_canonical_label": 54, "mention": 54, "refine_and_return_invari": 54, "partitionstack": 54, "void": 54, "cells_to_refine_bi": 54, "ctrb_len": 54, "compare_structur": 54, "gamma_1": 54, "gamma_2": 54, "all_children_are_equival": 54, "bint": 54, "frequent": 54, "mem_err": 54, "pointer": 54, "alloc": 54, "serv": 54, "alreadi": [54, 56, 60], "termin": 54, "ctypedef": 54, "struct": 54, "generate_children": 54, "aut_gp_and_can_lab": 54, "receiv": 54, "updat": 54, "gamma": [54, 56, 58, 65], "child": 54, "null": 54, "At": 54, "clear": 54, "dealloc": 54, "softwar": 54, "canonical_generator_data": 54, "thought": [54, 62], "apply_augment": 54, "aug": 54, "free_object": 54, "children": 54, "reject": 54, "content": 54, "free_iter_data": 54, "free_aug": 54, "canonical_par": 54, "level": 54, "never": [54, 66], "realloc": 54, "strive": 54, "segment": 54, "canonical_augment": 54, "mckai": [54, 55, 56, 58], "brendan": [54, 55, 56, 58], "vol": [54, 55, 56, 58, 59], "1998": 54, "306": 54, "324": 54, "rest": 55, "congressu": [55, 56, 58], "numerantium": [55, 56, 58], "1981": [55, 56, 58], "87": [55, 56, 58], "fredman": 55, "sak": 55, "cell": 55, "probe": 55, "dynam": 55, "twenti": 55, "annual": 55, "acm": 55, "symposium": 55, "345": 55, "354": 55, "1989": 55, "seress": 55, "ako": 55, "data_structur": 55, "op_repres": 55, "merg": [55, 59], "demonstr": 55, "ps_repres": 55, "partit": [55, 59, 60, 62, 64], "sc_test_list_perm": 55, "limit_complain": 55, "test_contain": 55, "refinement_graph": 56, "graphstruct": 56, "all_labeled_graph": 56, "classifi": 56, "approach": 56, "importantli": 56, "benchmark": 56, "search_tre": 56, "glist": 56, "giso": 56, "inn": 56, "gi": 56, "append": 56, "coarsest_equitable_refin": 56, "coarsest": 56, "equit": 56, "refin": 56, "thorough": 56, "sparse_graph": 56, "sparsegraph": 56, "generate_dense_graphs_edge_addit": 56, "loop": 56, "indicate_mem_err": 56, "90": 56, "544": 56, "5096": 56, "156": [56, 59], "1044": 56, "ghz": 56, "12346": 56, "generate_dense_graphs_vert_addit": 56, "base_g": 56, "209": 56, "1253": 56, "13599": 56, "get_orbit": 56, "partn": 56, "ordering2": 56, "dig": 56, "use_indicator_funct": 56, "add_edg": 56, "orbit_partit": 56, "list_perm": 56, "vertex": [56, 65], "petersengraph": [56, 59], "random_test": [56, 58], "num": 56, "n_max": 56, "perms_per_graph": 56, "sure": [56, 58], "densiti": [56, 58], "randomli": [56, 58, 62], "uniformli": [56, 58], "g_in": 56, "lab": 56, "dict_rep": 56, "certif": 56, "lemma": 56, "arbitrarili": 56, "cgraph": 56, "dense_graph": 56, "densegraph": 56, "dodecahedron": 56, "dodecahedralgraph": [56, 59], "cubegraph": 56, "relabel": [56, 58, 59], "edge_iter": 56, "add_arc": 56, "asp": 56, "bsp": 56, "bde": 56, "bdg": 56, "has_arc": 56, "graph6_str": 56, "pg__oq": 56, "ae": 56, "ec": 56, "ac": [56, 62], "384": [56, 62], "46080": 56, "d1": 56, "d2": 56, "chri": 56, "godsil": 56, "hoffmansingletongraph": 56, "alq": 56, "complement": 56, "cliques_maximum": 56, "y0": 56, "connected_components_subgraph": 56, "border": 56, "fll": 56, "num_vert": 56, "faga": 56, "pco": 56, "cp": 56, "aga": 56, "_qo": 56, "cca": 56, "bo": 56, "inplac": 56, "dkw": 56, "refinement_list": 57, "biject": [57, 59], "refinement_matric": 58, "leon": 58, "jeffrei": 58, "1991": 58, "533": 58, "583": 58, "matrixstruct": 58, "along": 58, "strong": [58, 59], "canonical_relabel": 58, "01100": 58, "00011": 58, "store": [58, 62], "nrows_max": 58, "ncols_max": 58, "nsymbols_max": 58, "perms_per_matrix": 58, "density_rang": 58, "distinct": [58, 62], "doubl": 58, "longrightarrow": 59, "permgp_nam": 59, "direct_product_permgroup": 59, "joke": 59, "hot": 59, "chunki": 59, "soup": 59, "renteln": 59, "dund": 59, "foolproof": 59, "sampl": 59, "folk": 59, "humor": 59, "amer": 59, "soc": 59, "52": [59, 62], "as_finitely_presented_group": 59, "blocks_al": 59, "block": 59, "imprimit": 59, "cohomologi": [59, 65], "cohomology_part": 59, "composition_seri": 59, "conjugacy_classes_subgroup": 59, "derived_seri": 59, "fitting_subgroup": 59, "fixed_point": 59, "frattini_subgroup": [59, 62], "frattini": [59, 62], "gens_smal": 59, "group_id": 59, "group_primitive_id": [59, 62], "databas": [59, 62], "has_el": 59, "parentag": 59, "holomorph": 59, "h_n": 59, "hap": 59, "grouphomologi": 59, "graham": 59, "elli": 59, "homology_part": 59, "is_elementary_abelian": 59, "is_monomi": 59, "is_norm": 59, "is_pgroup": 59, "subnorm": 59, "is_primit": 59, "is_regular": 59, "regularli": 59, "is_semi_regular": 59, "semi": [59, 62], "is_transit": 59, "isomorphism_to": [59, 61], "isomorphism_type_info_simple_group": 59, "largest_moved_point": 59, "lower_central_seri": 59, "minimal_generating_set": 59, "non_fixed_point": 59, "normal_subgroup": 59, "poincare_seri": 59, "poincar\u00e9": 59, "representative_act": 59, "socl": 59, "solvable_rad": 59, "radic": 59, "strong_generating_system": 59, "permutationgroup_subgroup": 59, "sylow_subgroup": 59, "transvers": 59, "upper_central_seri": 59, "04": 59, "conjugacy_class_repres": 59, "reorgan": [59, 60], "subdirectori": 59, "__contains__": 59, "_cmp_": 59, "ramification_module_decomposition_modular_curv": [59, 62], "ramification_module_decomposition_hurwitz_curv": [59, 62], "mathieugroup": [59, 62], "bobbi": [59, 62], "moretti": [59, 62], "kleinfourgroup": [59, 62], "kiran": 59, "kedlaya": 59, "is_normal_subgroup": 59, "__call__": 59, "harvei": 59, "mike": 59, "hansen": 59, "nick": [59, 62], "patch": 59, "nathan": 59, "dunfield": 59, "cayley_t": 59, "quotient_group": 59, "file": 59, "from_gap_list": 59, "report": 59, "palenstijn": 59, "__cmp__": 59, "nicola": 59, "bori": 59, "stabilis": 59, "christoph": 59, "swenson": 59, "copyright": 59, "googl": 59, "inc": 59, "javier": 59, "lopez": 59, "pena": 59, "_coerce_map_from_": 59, "christian": 59, "stump": 59, "_hom_": 59, "_subgroup_constructor": 59, "okai": [59, 62], "ree": [59, 62], "explicit": [59, 62], "permgroup": [59, 61], "canonic": [59, 60, 62], "remov": 59, "duplic": 59, "current_randst": 59, "set_seed_gap": 59, "derivedseri": 59, "generatorssmallest": 59, "permutationgroup_act": 59, "setpartit": 59, "regular": [59, 62], "isomorphismfpgroupbygener": 59, "generaldihedralgroup": [59, 62], "minimum": 59, "m12": 59, "behaviour": 59, "clearli": 59, "is_vertex_transit": 59, "ag": 59, "suppos": 59, "v_1": 59, "v_n": 59, "g_n": 59, "rho_1": 59, "rho_n": 59, "suffici": 59, "combin": 59, "character_table_valu": 59, "spkg": 59, "resolut": 59, "2004": 59, "1077": 59, "1118": 59, "hamilton": 59, "nuigalwai": 59, "primer": 59, "ucdavi": 59, "edu": 59, "0706": 59, "0549": 59, "statement": 59, "execut": 59, "dicyclicgroup": [59, 62], "matter": 59, "junk": 59, "set_random_se": 59, "cl": 59, "correspondingli": 59, "relationship": 59, "strng": 59, "permutationgroupfunctor": 59, "place": 59, "consequ": 59, "across": 59, "within": 59, "outer": 59, "versu": 59, "instruct": 59, "sophist": 59, "gon": 59, "straight": 59, "studi": 59, "quarter_turn": 59, "rc": 59, "lc": 59, "rc_sort": 59, "lc_sort": 59, "tetrahedron": 59, "face_turn": 59, "rob": [59, 62], "beezer": [59, 62], "choos": 59, "iota1": 59, "iota2": 59, "pr1": [59, 61], "pr2": 59, "p8": 59, "65784756654489600": 59, "sym": 59, "a4": 59, "neither": 59, "irredund": 59, "nor": [59, 62], "proven": [59, 62], "linux": 59, "solari": 59, "identif": 59, "recov": 59, "primitivegroup": [59, 62], "meth": 59, "33831": 59, "has_regular_subgroup": 59, "return_group": 59, "isn": 59, "petersen": 59, "rtimes_": 59, "thoma": [59, 66, 67], "wood": 59, "shiva": 59, "publish": 59, "1980": 59, "tell": 59, "c_5": 59, "shown": [59, 62, 65], "l1": 59, "kevin": [59, 62], "halasz": [59, 62], "h_7": 59, "s_5": [59, 60], "enough": [59, 62], "strict": 59, "s_4": [59, 62], "proper": 59, "istransit": 59, "rec": 59, "shortnam": 59, "sg": 59, "bf": 59, "breadth": 59, "df": 59, "visit": 59, "completegraph": [59, 65], "sometim": [59, 65], "molienseri": 59, "15817": 59, "s4m": 59, "nh": 59, "isnorm": 59, "member": 59, "onpoint": 59, "ontupl": 59, "onset": 59, "onpair": 59, "onsetsset": 59, "onsetsdisjointset": 59, "onsetstupl": 59, "ontuplesset": 59, "ontuplestupl": 59, "On": 59, "union": 59, "nonstandard": 59, "orb": 59, "h_k": 59, "representativeact": 59, "emb": [59, 65], "skip": 59, "benefici": 59, "inject": 59, "far": [59, 62], "h_": 59, "n_": 59, "semidirectproduct": 59, "permutationgroupmorphism_im_gen": [59, 61], "successfulli": 59, "sake": 59, "c2000": 59, "permutationgroupmorph": [59, 61], "smallest_moved_point": 59, "s10": 59, "30240": 59, "base_of_group": 59, "po": 59, "_1": 59, "_2": 59, "_d": 59, "_i": 59, "g_0": 59, "supset": 59, "transitivegroup": [59, 62], "contigu": 59, "vast": 59, "Its": 59, "minut": 59, "commod": 59, "hardwar": 59, "30030": 59, "twice": [59, 62], "exhibit": 59, "coprim": 59, "sylowsubgroup": 59, "d_8": 59, "1728": 59, "src": 59, "hap_decor": 59, "foo": 59, "load_hap": 59, "synonym": 60, "27234": 60, "43252003274489856000": 60, "srang": 60, "permgroup_el": 60, "rationalfield": 60, "sigma": [60, 66, 67], "singleton": 60, "cycle_tupl": 60, "cycle_typ": 60, "as_list": 60, "is_list": 60, "p_libgap": 60, "has_desc": 60, "_test_has_desc": 60, "swap": 60, "contribut": 60, "sum_c": 60, "symmetricgroupel": [60, 62], "absolute_length": 60, "shortest": 60, "absolute_l": 60, "has_left_desc": 60, "from_reduced_word": 60, "is_permutationgroupel": 60, "make_permgroup_el": 60, "unpickl": 60, "pre": 60, "make_permgroup_element_v2": 60, "permgroup_morph": 61, "28324": 61, "splitting_field": 61, "permutationgroupmorphism_from_gap": 61, "programm": 61, "usag": 61, "domain_group": 61, "range_group": 61, "gap_hom_command": 61, "permutationgroupmorphism_id": 61, "is_permutationgroupmorph": 61, "s_x": 62, "a_x": 62, "dih": 62, "4m": 62, "splitmetacyclicgroup": 62, "semidihedralgroup": 62, "centr": 62, "suzukigroup": 62, "b_2": 62, "2k": 62, "sz": 62, "complexreflectiongroup": 62, "g_m": 62, "permgp": 62, "permgroup_nam": 62, "permutationgroup_symalt": 62, "thereof": 62, "permutationgroup_uniqu": 62, "adjac": 62, "transposit": 62, "mn": 62, "29160": 62, "join": 62, "648": 62, "61440": 62, "complex_reflection_group": 62, "nm": 62, "as_abeliangroup": 62, "fewer": 62, "d_6": 62, "a_4": 62, "c_4": 62, "con": 62, "4096": 62, "half": 62, "unlik": 62, "240": 62, "enter": 62, "nonident": 62, "break": 62, "ba": 62, "bc": 62, "cb": 62, "broken": 62, "c_m": 62, "themselv": 62, "c34": 62, "c46": 62, "c14": 62, "c17": 62, "427680": 62, "jankogroup": 62, "janko": 62, "j1": 62, "j2": 62, "j3": 62, "j4": 62, "among": 62, "internet": 62, "175560": 62, "95040": 62, "permutationgroup_plg": 62, "ground": 62, "permutationgroup_pug": 62, "ramif": 62, "hurwitz": 62, "pmod": 62, "born": 62, "equivari": 62, "conj": 62, "mi": 62, "pi_i": 62, "irrrepn": 62, "pi_1": 62, "pi_n": 62, "ami": 62, "ksir": 62, "roger": 62, "vogel": 62, "riemann": 62, "roch": 62, "preprint": 62, "smallish": 62, "editor": 62, "shaska": 62, "lectur": 62, "worldscientif": 62, "25920": 62, "matrix_degre": 62, "field_of_definit": 62, "gaperror": 62, "primitivegroupsiter": 62, "primitivegroupsal": 62, "disjointunionenumeratedset": 62, "facad": 62, "__iter__": 62, "primitivegroupsofdegre": 62, "agl": 62, "ji": 62, "manner": 62, "neg_on": 62, "semidihedr": 62, "sent": 62, "notabl": 62, "gor1980": 62, "metacycl": 62, "Be": 62, "awar": 62, "identifi": 62, "possess": 62, "strictli": 62, "speak": 62, "58": 62, "59": 62, "62": 62, "56": 62, "51": 62, "57": 62, "32537600": 62, "group_of_lie_typ": 62, "ree_group": 62, "suzukisporadicgroup": 62, "sporad": 62, "suzukisporad": 62, "1782": 62, "40320": 62, "s8": 62, "advantag": 62, "featur": 62, "symmetricgroupalgebra": 62, "cellular": 62, "semigroup": 62, "conjugacy_classes_iter": 62, "major_index": 62, "gadget": 62, "young_subgroup": 62, "comp": 62, "young": 62, "transitivegroupsal": 62, "transitivegroupsofdegre": 62, "301": 62, "vincent": 64, "delecroix": 64, "2014": 64, "symgp_conjugacy_class": 64, "permutationsconjugacyclass": 64, "symmetricgroupconjugacyclassmixin": 64, "symmetricgroupconjugacyclass": 64, "mixin": 64, "conjugacy_class_iter": 64, "conjugacy_class_s": 64, "abcdef": 64, "default_repres": 64, "lambda_1": 64, "lambda_2": 64, "lambda_": 64, "abbrevi": 65, "raag": 65, "partial": 65, "artingroup": 65, "cohomologyraag": 65, "combinatorialfreemodul": 65, "wedg": 65, "e_j": 65, "cartier": 65, "foata": 65, "cq2019": 65, "cohomologyraagel": 65, "algebra_gener": 65, "cyclegraph": 65, "degree_on_basi": 65, "cliqu": 65, "one_basi": 65, "rightangledartingroup": 65, "g_v": 65, "g_u": 65, "notin": 65, "remark": 65, "rich": 65, "despit": 65, "delta": 65, "dro1987": 65, "bb1997": 65, "fp_2": 65, "freeli": 65, "cocompactli": 65, "cat": 65, "biautomat": 65, "v_i": 65, "v_j": 65, "s_j": 65, "cp2001": 65, "vw1994": 65, "gather": 65, "v0": 65, "v1": 65, "v2": 65, "v3": 65, "cha2006": 65, "artin_group": 65, "angled_artin_group": 65, "artingroupel": 65, "v4": 65, "vx": 65, "vy": 65, "vzeta": 65, "one_el": 65, "circ": [66, 67], "psi_": [66, 67], "elementwis": [66, 67], "psi_0": [66, 67], "psi_1": [66, 67], "semimonomialtransformationgroup": [66, 67], "feulner": [66, 67], "15576": 66, "dissolv": 66, "semimonomial_transform": [66, 67], "autom": [66, 67], "get_autom": 66, "get_perm": 66, "get_v": 66, "get_v_invers": 66, "invert_v": 66, "unchang": 66, "semimonomial_transformation_group": 67, "semimonomialactionmat": 67, "semimonomialactionvec": 67, "v_0": 67, "v_": 67, "phi_0": 67, "phi_": 67}, "objects": {"sage.groups.abelian_gps": [[1, 0, 0, "-", "abelian_aut"], [2, 0, 0, "-", "abelian_group"], [3, 0, 0, "-", "abelian_group_element"], [4, 0, 0, "-", "abelian_group_gap"], [5, 0, 0, "-", "abelian_group_morphism"], [6, 0, 0, "-", "dual_abelian_group"], [7, 0, 0, "-", "dual_abelian_group_element"], [8, 0, 0, "-", "element_base"], [9, 0, 0, "-", "values"]], "sage.groups.abelian_gps.abelian_aut": [[1, 1, 1, "", "AbelianGroupAutomorphism"], [1, 1, 1, "", "AbelianGroupAutomorphismGroup"], [1, 1, 1, "", "AbelianGroupAutomorphismGroup_gap"], [1, 1, 1, "", "AbelianGroupAutomorphismGroup_subgroup"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphism": [[1, 2, 1, "", "matrix"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup": [[1, 3, 1, "", "Element"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap": [[1, 3, 1, "", "Element"], [1, 2, 1, "", "covering_matrix_ring"], [1, 2, 1, "", "domain"], [1, 2, 1, "", "is_subgroup_of"]], "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_subgroup": [[1, 3, 1, "", "Element"]], "sage.groups.abelian_gps.abelian_group": [[2, 4, 1, "", "AbelianGroup"], [2, 1, 1, "", "AbelianGroup_class"], [2, 1, 1, "", "AbelianGroup_subgroup"], [2, 4, 1, "", "is_AbelianGroup"], [2, 4, 1, "", "word_problem"]], "sage.groups.abelian_gps.abelian_group.AbelianGroup_class": [[2, 3, 1, "", "Element"], [2, 3, 1, "", "Subgroup"], [2, 2, 1, "", "cardinality"], [2, 2, 1, "", "dual_group"], [2, 2, 1, "", "elementary_divisors"], [2, 2, 1, "", "exponent"], [2, 2, 1, "", "gen"], [2, 2, 1, "", "gens"], [2, 2, 1, "", "gens_orders"], [2, 2, 1, "", "identity"], [2, 2, 1, "", "invariants"], [2, 2, 1, "", "is_commutative"], [2, 2, 1, "", "is_cyclic"], [2, 2, 1, "", "is_isomorphic"], [2, 2, 1, "", "is_subgroup"], [2, 2, 1, "", "is_trivial"], [2, 2, 1, "", "list"], [2, 2, 1, "", "ngens"], [2, 2, 1, "", "number_of_subgroups"], [2, 2, 1, "", "order"], [2, 2, 1, "", "permutation_group"], [2, 2, 1, "", "random_element"], [2, 2, 1, "", "subgroup"], [2, 2, 1, "", "subgroup_reduced"], [2, 2, 1, "", "subgroups"], [2, 2, 1, "", "torsion_subgroup"]], "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup": [[2, 2, 1, "", "ambient_group"], [2, 2, 1, "", "equals"], [2, 2, 1, "", "gen"], [2, 2, 1, "", "gens"]], "sage.groups.abelian_gps.abelian_group_element": [[3, 1, 1, "", "AbelianGroupElement"], [3, 4, 1, "", "is_AbelianGroupElement"]], "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement": [[3, 2, 1, "", "as_permutation"], [3, 2, 1, "", "word_problem"]], "sage.groups.abelian_gps.abelian_group_gap": [[4, 1, 1, "", "AbelianGroupElement_gap"], [4, 1, 1, "", "AbelianGroupElement_polycyclic"], [4, 1, 1, "", "AbelianGroupGap"], [4, 1, 1, "", "AbelianGroupQuotient_gap"], [4, 1, 1, "", "AbelianGroupSubgroup_gap"], [4, 1, 1, "", "AbelianGroup_gap"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap": [[4, 2, 1, "", "exponents"], [4, 2, 1, "", "order"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_polycyclic": [[4, 2, 1, "", "exponents"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap": [[4, 2, 1, "", "cover"], [4, 2, 1, "", "lift"], [4, 2, 1, "", "natural_homomorphism"], [4, 2, 1, "", "relations"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap": [[4, 2, 1, "", "lift"], [4, 2, 1, "", "retract"]], "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap": [[4, 3, 1, "", "Element"], [4, 2, 1, "", "all_subgroups"], [4, 2, 1, "", "aut"], [4, 2, 1, "", "automorphism_group"], [4, 2, 1, "", "elementary_divisors"], [4, 2, 1, "", "exponent"], [4, 2, 1, "", "gens_orders"], [4, 2, 1, "", "identity"], [4, 2, 1, "", "is_subgroup_of"], [4, 2, 1, "", "is_trivial"], [4, 2, 1, "", "quotient"], [4, 2, 1, "", "subgroup"]], "sage.groups.abelian_gps.abelian_group_morphism": [[5, 1, 1, "", "AbelianGroupMap"], [5, 1, 1, "", "AbelianGroupMorphism"], [5, 4, 1, "", "is_AbelianGroupMorphism"]], "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism": [[5, 2, 1, "", "image"], [5, 2, 1, "", "kernel"]], "sage.groups.abelian_gps.dual_abelian_group": [[6, 1, 1, "", "DualAbelianGroup_class"], [6, 4, 1, "", "is_DualAbelianGroup"]], "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class": [[6, 3, 1, "", "Element"], [6, 2, 1, "", "base_ring"], [6, 2, 1, "", "gen"], [6, 2, 1, "", "gens"], [6, 2, 1, "", "gens_orders"], [6, 2, 1, "", "group"], [6, 2, 1, "", "invariants"], [6, 2, 1, "", "is_commutative"], [6, 2, 1, "", "list"], [6, 2, 1, "", "ngens"], [6, 2, 1, "", "order"], [6, 2, 1, "", "random_element"]], "sage.groups.abelian_gps.dual_abelian_group_element": [[7, 1, 1, "", "DualAbelianGroupElement"], [7, 4, 1, "", "is_DualAbelianGroupElement"]], "sage.groups.abelian_gps.dual_abelian_group_element.DualAbelianGroupElement": [[7, 2, 1, "", "word_problem"]], "sage.groups.abelian_gps.element_base": [[8, 1, 1, "", "AbelianGroupElementBase"]], "sage.groups.abelian_gps.element_base.AbelianGroupElementBase": [[8, 2, 1, "", "exponents"], [8, 2, 1, "", "is_trivial"], [8, 2, 1, "", "list"], [8, 2, 1, "", "multiplicative_order"], [8, 2, 1, "", "order"]], "sage.groups.abelian_gps.values": [[9, 4, 1, "", "AbelianGroupWithValues"], [9, 1, 1, "", "AbelianGroupWithValuesElement"], [9, 1, 1, "", "AbelianGroupWithValuesEmbedding"], [9, 1, 1, "", "AbelianGroupWithValues_class"]], "sage.groups.abelian_gps.values.AbelianGroupWithValuesElement": [[9, 2, 1, "", "value"]], "sage.groups.abelian_gps.values.AbelianGroupWithValues_class": [[9, 3, 1, "", "Element"], [9, 2, 1, "", "gen"], [9, 2, 1, "", "gens_values"], [9, 2, 1, "", "values_embedding"], [9, 2, 1, "", "values_group"]], "sage.groups.additive_abelian": [[10, 0, 0, "-", "additive_abelian_group"], [11, 0, 0, "-", "additive_abelian_wrapper"]], "sage.groups.additive_abelian.additive_abelian_group": [[10, 4, 1, "", "AdditiveAbelianGroup"], [10, 1, 1, "", "AdditiveAbelianGroupElement"], [10, 1, 1, "", "AdditiveAbelianGroup_class"], [10, 1, 1, "", "AdditiveAbelianGroup_fixed_gens"], [10, 4, 1, "", "cover_and_relations_from_invariants"]], "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class": [[10, 3, 1, "", "Element"], [10, 2, 1, "", "exponent"], [10, 2, 1, "", "is_cyclic"], [10, 2, 1, "", "is_multiplicative"], [10, 2, 1, "", "order"], [10, 2, 1, "", "short_name"]], "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens": [[10, 2, 1, "", "gens"], [10, 2, 1, "", "identity"], [10, 2, 1, "", "permutation_group"]], "sage.groups.additive_abelian.additive_abelian_wrapper": [[11, 1, 1, "", "AdditiveAbelianGroupWrapper"], [11, 1, 1, "", "AdditiveAbelianGroupWrapperElement"], [11, 1, 1, "", "UnwrappingMorphism"]], "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper": [[11, 3, 1, "", "Element"], [11, 2, 1, "", "discrete_exp"], [11, 2, 1, "", "discrete_log"], [11, 2, 1, "", "generator_orders"], [11, 2, 1, "", "torsion_subgroup"], [11, 2, 1, "", "universe"]], "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapperElement": [[11, 2, 1, "", "element"]], "sage.groups.affine_gps": [[12, 0, 0, "-", "affine_group"], [13, 0, 0, "-", "euclidean_group"], [14, 0, 0, "-", "group_element"]], "sage.groups.affine_gps.affine_group": [[12, 1, 1, "", "AffineGroup"]], "sage.groups.affine_gps.affine_group.AffineGroup": [[12, 3, 1, "", "Element"], [12, 2, 1, "", "cardinality"], [12, 2, 1, "", "degree"], [12, 2, 1, "", "linear"], [12, 2, 1, "", "linear_space"], [12, 2, 1, "", "matrix_space"], [12, 2, 1, "", "random_element"], [12, 2, 1, "", "reflection"], [12, 2, 1, "", "some_elements"], [12, 2, 1, "", "translation"], [12, 2, 1, "", "vector_space"]], "sage.groups.affine_gps.euclidean_group": [[13, 1, 1, "", "EuclideanGroup"]], "sage.groups.affine_gps.euclidean_group.EuclideanGroup": [[13, 2, 1, "", "random_element"]], "sage.groups.affine_gps.group_element": [[14, 1, 1, "", "AffineGroupElement"]], "sage.groups.affine_gps.group_element.AffineGroupElement": [[14, 2, 1, "", "A"], [14, 2, 1, "", "b"], [14, 2, 1, "", "list"], [14, 2, 1, "", "matrix"]], "sage.groups": [[15, 0, 0, "-", "braid"], [16, 0, 0, "-", "class_function"], [17, 0, 0, "-", "conjugacy_classes"], [18, 0, 0, "-", "cubic_braid"], [19, 0, 0, "-", "finitely_presented"], [20, 0, 0, "-", "finitely_presented_named"], [21, 0, 0, "-", "free_group"], [22, 0, 0, "-", "generic"], [23, 0, 0, "-", "group"], [24, 0, 0, "-", "group_exp"], [25, 0, 0, "-", "group_semidirect_product"], [26, 0, 0, "-", "groups_catalog"], [27, 0, 0, "-", "indexed_free_group"], [28, 0, 0, "-", "libgap_group"], [29, 0, 0, "-", "libgap_mixin"], [30, 0, 0, "-", "libgap_morphism"], [31, 0, 0, "-", "libgap_wrapper"], [51, 0, 0, "-", "pari_group"], [65, 0, 0, "-", "raag"]], "sage.groups.braid": [[15, 1, 1, "", "Braid"], [15, 4, 1, "", "BraidGroup"], [15, 1, 1, "", "BraidGroup_class"], [15, 1, 1, "", "MappingClassGroupAction"], [15, 1, 1, "", "RightQuantumWord"]], "sage.groups.braid.Braid": [[15, 2, 1, "", "LKB_matrix"], [15, 2, 1, "", "TL_matrix"], [15, 2, 1, "", "alexander_polynomial"], [15, 2, 1, "", "annular_khovanov_complex"], [15, 2, 1, "", "annular_khovanov_homology"], [15, 2, 1, "", "burau_matrix"], [15, 2, 1, "", "centralizer"], [15, 2, 1, "", "colored_jones_polynomial"], [15, 2, 1, "", "components_in_closure"], [15, 2, 1, "", "conjugating_braid"], [15, 2, 1, "", "deformed_burau_matrix"], [15, 2, 1, "", "gcd"], [15, 2, 1, "", "is_conjugated"], [15, 2, 1, "", "is_periodic"], [15, 2, 1, "", "is_pseudoanosov"], [15, 2, 1, "", "is_reducible"], [15, 2, 1, "", "jones_polynomial"], [15, 2, 1, "", "lcm"], [15, 2, 1, "", "links_gould_matrix"], [15, 2, 1, "", "links_gould_polynomial"], [15, 2, 1, "", "markov_trace"], [15, 2, 1, "", "mirror_image"], [15, 2, 1, "", "permutation"], [15, 2, 1, "", "plot"], [15, 2, 1, "", "plot3d"], [15, 2, 1, "", "reverse"], [15, 2, 1, "", "right_normal_form"], [15, 2, 1, "", "rigidity"], [15, 2, 1, "", "sliding_circuits"], [15, 2, 1, "", "strands"], [15, 2, 1, "", "super_summit_set"], [15, 2, 1, "", "thurston_type"], [15, 2, 1, "", "tropical_coordinates"], [15, 2, 1, "", "ultra_summit_set"]], "sage.groups.braid.BraidGroup_class": [[15, 3, 1, "", "Element"], [15, 2, 1, "", "TL_basis_with_drain"], [15, 2, 1, "", "TL_representation"], [15, 2, 1, "", "an_element"], [15, 2, 1, "", "as_permutation_group"], [15, 2, 1, "", "cardinality"], [15, 2, 1, "", "dimension_of_TL_space"], [15, 2, 1, "", "mapping_class_action"], [15, 2, 1, "", "mirror_involution"], [15, 2, 1, "", "order"], [15, 2, 1, "", "some_elements"], [15, 2, 1, "", "strands"]], "sage.groups.braid.RightQuantumWord": [[15, 2, 1, "", "eps"], [15, 2, 1, "", "reduced_word"], [15, 2, 1, "", "tuples"]], "sage.groups.class_function": [[16, 4, 1, "", "ClassFunction"], [16, 1, 1, "", "ClassFunction_gap"], [16, 1, 1, "", "ClassFunction_libgap"]], "sage.groups.class_function.ClassFunction_gap": [[16, 2, 1, "", "adams_operation"], [16, 2, 1, "", "central_character"], [16, 2, 1, "", "decompose"], [16, 2, 1, "", "degree"], [16, 2, 1, "", "determinant_character"], [16, 2, 1, "", "domain"], [16, 2, 1, "", "exterior_power"], [16, 2, 1, "", "induct"], [16, 2, 1, "", "irreducible_constituents"], [16, 2, 1, "", "is_irreducible"], [16, 2, 1, "", "norm"], [16, 2, 1, "", "restrict"], [16, 2, 1, "", "scalar_product"], [16, 2, 1, "", "symmetric_power"], [16, 2, 1, "", "tensor_product"], [16, 2, 1, "", "values"]], "sage.groups.class_function.ClassFunction_libgap": [[16, 2, 1, "", "adams_operation"], [16, 2, 1, "", "central_character"], [16, 2, 1, "", "decompose"], [16, 2, 1, "", "degree"], [16, 2, 1, "", "determinant_character"], [16, 2, 1, "", "domain"], [16, 2, 1, "", "exterior_power"], [16, 2, 1, "", "gap"], [16, 2, 1, "", "induct"], [16, 2, 1, "", "irreducible_constituents"], [16, 2, 1, "", "is_irreducible"], [16, 2, 1, "", "norm"], [16, 2, 1, "", "restrict"], [16, 2, 1, "", "scalar_product"], [16, 2, 1, "", "symmetric_power"], [16, 2, 1, "", "tensor_product"], [16, 2, 1, "", "values"]], "sage.groups.conjugacy_classes": [[17, 1, 1, "", "ConjugacyClass"], [17, 1, 1, "", "ConjugacyClassGAP"]], "sage.groups.conjugacy_classes.ConjugacyClass": [[17, 2, 1, "", "an_element"], [17, 2, 1, "", "is_rational"], [17, 2, 1, "", "is_real"], [17, 2, 1, "", "list"], [17, 2, 1, "", "representative"], [17, 2, 1, "", "set"]], "sage.groups.conjugacy_classes.ConjugacyClassGAP": [[17, 2, 1, "", "cardinality"], [17, 2, 1, "", "set"]], "sage.groups.cubic_braid": [[18, 4, 1, "", "AssionGroupS"], [18, 4, 1, "", "AssionGroupU"], [18, 1, 1, "", "CubicBraidElement"], [18, 1, 1, "", "CubicBraidGroup"]], "sage.groups.cubic_braid.CubicBraidElement": [[18, 2, 1, "", "braid"], [18, 2, 1, "", "burau_matrix"]], "sage.groups.cubic_braid.CubicBraidGroup": [[18, 3, 1, "", "Element"], [18, 2, 1, "", "as_classical_group"], [18, 2, 1, "", "as_matrix_group"], [18, 2, 1, "", "as_permutation_group"], [18, 2, 1, "", "as_reflection_group"], [18, 2, 1, "", "braid_group"], [18, 2, 1, "", "cardinality"], [18, 2, 1, "", "centralizing_element"], [18, 2, 1, "", "classical_invariant_form"], [18, 2, 1, "", "codegrees"], [18, 2, 1, "", "cubic_braid_subgroup"], [18, 2, 1, "", "degrees"], [18, 2, 1, "", "index_set"], [18, 2, 1, "", "is_finite"], [18, 2, 1, "", "order"], [18, 2, 1, "", "simple_reflections"], [18, 2, 1, "", "strands"], [18, 1, 1, "", "type"]], "sage.groups.cubic_braid.CubicBraidGroup.type": [[18, 3, 1, "", "AssionS"], [18, 3, 1, "", "AssionU"], [18, 3, 1, "", "Coxeter"]], "sage.groups.finitely_presented": [[19, 1, 1, "", "FinitelyPresentedGroup"], [19, 1, 1, "", "FinitelyPresentedGroupElement"], [19, 1, 1, "", "GroupMorphismWithGensImages"], [19, 1, 1, "", "RewritingSystem"], [19, 4, 1, "", "wrap_FpGroup"]], "sage.groups.finitely_presented.FinitelyPresentedGroup": [[19, 3, 1, "", "Element"], [19, 2, 1, "", "abelian_invariants"], [19, 2, 1, "", "alexander_matrix"], [19, 2, 1, "", "as_permutation_group"], [19, 2, 1, "", "cardinality"], [19, 2, 1, "", "direct_product"], [19, 2, 1, "", "epimorphisms"], [19, 2, 1, "", "free_group"], [19, 2, 1, "", "order"], [19, 2, 1, "", "relations"], [19, 2, 1, "", "rewriting_system"], [19, 2, 1, "", "semidirect_product"], [19, 2, 1, "", "simplification_isomorphism"], [19, 2, 1, "", "simplified"], [19, 2, 1, "", "structure_description"]], "sage.groups.finitely_presented.FinitelyPresentedGroupElement": [[19, 2, 1, "", "Tietze"]], "sage.groups.finitely_presented.RewritingSystem": [[19, 2, 1, "", "finitely_presented_group"], [19, 2, 1, "", "free_group"], [19, 2, 1, "", "gap"], [19, 2, 1, "", "is_confluent"], [19, 2, 1, "", "make_confluent"], [19, 2, 1, "", "reduce"], [19, 2, 1, "", "rules"]], "sage.groups.finitely_presented_named": [[20, 4, 1, "", "AlternatingPresentation"], [20, 4, 1, "", "BinaryDihedralPresentation"], [20, 4, 1, "", "CyclicPresentation"], [20, 4, 1, "", "DiCyclicPresentation"], [20, 4, 1, "", "DihedralPresentation"], [20, 4, 1, "", "FinitelyGeneratedAbelianPresentation"], [20, 4, 1, "", "FinitelyGeneratedHeisenbergPresentation"], [20, 4, 1, "", "KleinFourPresentation"], [20, 4, 1, "", "QuaternionPresentation"], [20, 4, 1, "", "SymmetricPresentation"]], "sage.groups.free_group": [[21, 4, 1, "", "FreeGroup"], [21, 1, 1, "", "FreeGroupElement"], [21, 1, 1, "", "FreeGroup_class"], [21, 4, 1, "", "is_FreeGroup"], [21, 4, 1, "", "wrap_FreeGroup"]], "sage.groups.free_group.FreeGroupElement": [[21, 2, 1, "", "Tietze"], [21, 2, 1, "", "fox_derivative"], [21, 2, 1, "", "syllables"]], "sage.groups.free_group.FreeGroup_class": [[21, 3, 1, "", "Element"], [21, 2, 1, "", "abelian_invariants"], [21, 2, 1, "", "quotient"], [21, 2, 1, "", "rank"]], "sage.groups.generic": [[22, 4, 1, "", "bsgs"], [22, 4, 1, "", "discrete_log"], [22, 4, 1, "", "discrete_log_generic"], [22, 4, 1, "", "discrete_log_lambda"], [22, 4, 1, "", "discrete_log_rho"], [22, 4, 1, "", "linear_relation"], [22, 4, 1, "", "merge_points"], [22, 4, 1, "", "multiple"], [22, 1, 1, "", "multiples"], [22, 4, 1, "", "order_from_bounds"], [22, 4, 1, "", "order_from_multiple"], [22, 4, 1, "", "structure_description"]], "sage.groups.generic.multiples": [[22, 2, 1, "", "next"]], "sage.groups.group": [[23, 1, 1, "", "AbelianGroup"], [23, 1, 1, "", "AlgebraicGroup"], [23, 1, 1, "", "FiniteGroup"], [23, 1, 1, "", "Group"], [23, 4, 1, "", "is_Group"]], "sage.groups.group.AbelianGroup": [[23, 2, 1, "", "is_abelian"]], "sage.groups.group.FiniteGroup": [[23, 2, 1, "", "is_finite"]], "sage.groups.group.Group": [[23, 2, 1, "", "is_abelian"], [23, 2, 1, "", "is_commutative"], [23, 2, 1, "", "is_finite"], [23, 2, 1, "", "is_multiplicative"], [23, 2, 1, "", "order"], [23, 2, 1, "", "quotient"]], "sage.groups.group_exp": [[24, 1, 1, "", "GroupExp"], [24, 1, 1, "", "GroupExpElement"], [24, 1, 1, "", "GroupExp_Class"]], "sage.groups.group_exp.GroupExp_Class": [[24, 3, 1, "", "Element"], [24, 2, 1, "", "an_element"], [24, 2, 1, "", "group_generators"], [24, 2, 1, "", "one"], [24, 2, 1, "", "product"]], "sage.groups.group_semidirect_product": [[25, 1, 1, "", "GroupSemidirectProduct"], [25, 1, 1, "", "GroupSemidirectProductElement"]], "sage.groups.group_semidirect_product.GroupSemidirectProduct": [[25, 3, 1, "", "Element"], [25, 2, 1, "", "act_to_right"], [25, 2, 1, "", "construction"], [25, 2, 1, "", "group_generators"], [25, 2, 1, "", "one"], [25, 2, 1, "", "opposite_semidirect_product"], [25, 2, 1, "", "product"]], "sage.groups.group_semidirect_product.GroupSemidirectProductElement": [[25, 2, 1, "", "to_opposite"]], "sage.groups.indexed_free_group": [[27, 1, 1, "", "IndexedFreeAbelianGroup"], [27, 1, 1, "", "IndexedFreeGroup"], [27, 1, 1, "", "IndexedGroup"]], "sage.groups.indexed_free_group.IndexedFreeAbelianGroup": [[27, 1, 1, "", "Element"], [27, 2, 1, "", "gen"], [27, 2, 1, "", "one"]], "sage.groups.indexed_free_group.IndexedFreeGroup": [[27, 1, 1, "", "Element"], [27, 2, 1, "", "gen"], [27, 2, 1, "", "one"]], "sage.groups.indexed_free_group.IndexedFreeGroup.Element": [[27, 2, 1, "", "length"], [27, 2, 1, "", "to_word_list"]], "sage.groups.indexed_free_group.IndexedGroup": [[27, 2, 1, "", "gens"], [27, 2, 1, "", "group_generators"], [27, 2, 1, "", "order"], [27, 2, 1, "", "rank"]], "sage.groups.libgap_group": [[28, 1, 1, "", "GroupLibGAP"]], "sage.groups.libgap_group.GroupLibGAP": [[28, 3, 1, "", "Element"]], "sage.groups.libgap_mixin": [[29, 1, 1, "", "GroupMixinLibGAP"]], "sage.groups.libgap_mixin.GroupMixinLibGAP": [[29, 2, 1, "", "cardinality"], [29, 2, 1, "", "center"], [29, 2, 1, "", "character"], [29, 2, 1, "", "character_table"], [29, 2, 1, "", "class_function"], [29, 2, 1, "", "conjugacy_class"], [29, 2, 1, "", "conjugacy_classes"], [29, 2, 1, "", "conjugacy_classes_representatives"], [29, 2, 1, "", "intersection"], [29, 2, 1, "", "irreducible_characters"], [29, 2, 1, "", "is_abelian"], [29, 2, 1, "", "is_finite"], [29, 2, 1, "", "is_isomorphic"], [29, 2, 1, "", "is_nilpotent"], [29, 2, 1, "", "is_p_group"], [29, 2, 1, "", "is_perfect"], [29, 2, 1, "", "is_polycyclic"], [29, 2, 1, "", "is_simple"], [29, 2, 1, "", "is_solvable"], [29, 2, 1, "", "is_supersolvable"], [29, 2, 1, "", "list"], [29, 2, 1, "", "order"], [29, 2, 1, "", "random_element"], [29, 2, 1, "", "trivial_character"]], "sage.groups.libgap_morphism": [[30, 1, 1, "", "GroupHomset_libgap"], [30, 1, 1, "", "GroupMorphism_libgap"]], "sage.groups.libgap_morphism.GroupHomset_libgap": [[30, 3, 1, "", "Element"], [30, 2, 1, "", "natural_map"]], "sage.groups.libgap_morphism.GroupMorphism_libgap": [[30, 2, 1, "", "gap"], [30, 2, 1, "", "image"], [30, 2, 1, "", "kernel"], [30, 2, 1, "", "lift"], [30, 2, 1, "", "preimage"], [30, 2, 1, "", "pushforward"], [30, 2, 1, "", "section"]], "sage.groups.libgap_wrapper": [[31, 1, 1, "", "ElementLibGAP"], [31, 1, 1, "", "ParentLibGAP"]], "sage.groups.libgap_wrapper.ElementLibGAP": [[31, 2, 1, "", "gap"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "is_conjugate"], [31, 2, 1, "", "is_one"], [31, 2, 1, "", "multiplicative_order"], [31, 2, 1, "", "normalizer"], [31, 2, 1, "", "nth_roots"], [31, 2, 1, "", "order"]], "sage.groups.libgap_wrapper.ParentLibGAP": [[31, 2, 1, "", "ambient"], [31, 2, 1, "", "gap"], [31, 2, 1, "", "gen"], [31, 2, 1, "", "generators"], [31, 2, 1, "", "gens"], [31, 2, 1, "", "is_subgroup"], [31, 2, 1, "", "ngens"], [31, 2, 1, "", "one"], [31, 2, 1, "", "subgroup"]], "sage.groups.lie_gps": [[32, 0, 0, "-", "nilpotent_lie_group"]], "sage.groups.lie_gps.nilpotent_lie_group": [[32, 1, 1, "", "NilpotentLieGroup"]], "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup": [[32, 1, 1, "", "Element"], [32, 2, 1, "", "adjoint"], [32, 2, 1, "", "chart_exp1"], [32, 2, 1, "", "chart_exp2"], [32, 2, 1, "", "conjugation"], [32, 2, 1, "", "exp"], [32, 2, 1, "", "gens"], [32, 2, 1, "", "left_invariant_extension"], [32, 2, 1, "", "left_invariant_frame"], [32, 2, 1, "", "left_translation"], [32, 2, 1, "", "lie_algebra"], [32, 2, 1, "", "livf"], [32, 2, 1, "", "log"], [32, 2, 1, "", "one"], [32, 2, 1, "", "right_invariant_extension"], [32, 2, 1, "", "right_invariant_frame"], [32, 2, 1, "", "right_translation"], [32, 2, 1, "", "rivf"], [32, 2, 1, "", "step"]], "sage.groups.matrix_gps": [[33, 0, 0, "-", "binary_dihedral"], [34, 0, 0, "-", "catalog"], [35, 0, 0, "-", "coxeter_group"], [36, 0, 0, "-", "finitely_generated"], [37, 0, 0, "-", "group_element"], [38, 0, 0, "-", "heisenberg"], [39, 0, 0, "-", "homset"], [40, 0, 0, "-", "isometries"], [41, 0, 0, "-", "linear"], [42, 0, 0, "-", "matrix_group"], [43, 0, 0, "-", "morphism"], [44, 0, 0, "-", "named_group"], [45, 0, 0, "-", "orthogonal"], [46, 0, 0, "-", "symplectic"], [47, 0, 0, "-", "unitary"]], "sage.groups.matrix_gps.binary_dihedral": [[33, 1, 1, "", "BinaryDihedralGroup"]], "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup": [[33, 2, 1, "", "cardinality"], [33, 2, 1, "", "order"]], "sage.groups.matrix_gps.coxeter_group": [[35, 1, 1, "", "CoxeterMatrixGroup"]], "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup": [[35, 1, 1, "", "Element"], [35, 2, 1, "", "bilinear_form"], [35, 2, 1, "", "canonical_representation"], [35, 2, 1, "", "coxeter_matrix"], [35, 2, 1, "", "fundamental_weight"], [35, 2, 1, "", "fundamental_weights"], [35, 2, 1, "", "is_commutative"], [35, 2, 1, "", "is_finite"], [35, 2, 1, "", "order"], [35, 2, 1, "", "positive_roots"], [35, 2, 1, "", "reflections"], [35, 2, 1, "", "roots"], [35, 2, 1, "", "simple_reflection"], [35, 2, 1, "", "simple_root_index"]], "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element": [[35, 2, 1, "", "action_on_root_indices"], [35, 2, 1, "", "canonical_matrix"], [35, 2, 1, "", "descents"], [35, 2, 1, "", "first_descent"], [35, 2, 1, "", "has_right_descent"]], "sage.groups.matrix_gps.finitely_generated": [[36, 1, 1, "", "FinitelyGeneratedMatrixGroup_gap"], [36, 1, 1, "", "FinitelyGeneratedMatrixGroup_generic"], [36, 4, 1, "", "MatrixGroup"], [36, 4, 1, "", "QuaternionMatrixGroupGF3"], [36, 4, 1, "", "normalize_square_matrices"]], "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_gap": [[36, 2, 1, "", "as_permutation_group"], [36, 2, 1, "", "invariant_generators"], [36, 2, 1, "", "invariants_of_degree"], [36, 2, 1, "", "module_composition_factors"], [36, 2, 1, "", "molien_series"], [36, 2, 1, "", "reynolds_operator"]], "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic": [[36, 2, 1, "", "gen"], [36, 2, 1, "", "gens"], [36, 2, 1, "", "ngens"]], "sage.groups.matrix_gps.group_element": [[37, 1, 1, "", "MatrixGroupElement_gap"], [37, 1, 1, "", "MatrixGroupElement_generic"], [37, 4, 1, "", "is_MatrixGroupElement"]], "sage.groups.matrix_gps.group_element.MatrixGroupElement_gap": [[37, 2, 1, "", "list"], [37, 2, 1, "", "matrix"], [37, 2, 1, "", "multiplicative_order"], [37, 2, 1, "", "word_problem"]], "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic": [[37, 2, 1, "", "inverse"], [37, 2, 1, "", "is_one"], [37, 2, 1, "", "list"], [37, 2, 1, "", "matrix"]], "sage.groups.matrix_gps.heisenberg": [[38, 1, 1, "", "HeisenbergGroup"]], "sage.groups.matrix_gps.heisenberg.HeisenbergGroup": [[38, 2, 1, "", "cardinality"], [38, 2, 1, "", "order"]], "sage.groups.matrix_gps.homset": [[39, 4, 1, "", "is_MatrixGroupHomset"]], "sage.groups.matrix_gps.isometries": [[40, 1, 1, "", "GroupActionOnQuotientModule"], [40, 1, 1, "", "GroupActionOnSubmodule"], [40, 1, 1, "", "GroupOfIsometries"]], "sage.groups.matrix_gps.isometries.GroupOfIsometries": [[40, 2, 1, "", "invariant_bilinear_form"]], "sage.groups.matrix_gps.linear": [[41, 4, 1, "", "GL"], [41, 1, 1, "", "LinearMatrixGroup_gap"], [41, 1, 1, "", "LinearMatrixGroup_generic"], [41, 4, 1, "", "SL"]], "sage.groups.matrix_gps.matrix_group": [[42, 1, 1, "", "MatrixGroup_base"], [42, 1, 1, "", "MatrixGroup_gap"], [42, 1, 1, "", "MatrixGroup_generic"], [42, 4, 1, "", "is_MatrixGroup"]], "sage.groups.matrix_gps.matrix_group.MatrixGroup_base": [[42, 2, 1, "", "ambient"], [42, 2, 1, "", "as_matrix_group"], [42, 2, 1, "", "sign_representation"], [42, 2, 1, "", "subgroup"]], "sage.groups.matrix_gps.matrix_group.MatrixGroup_gap": [[42, 3, 1, "", "Element"], [42, 2, 1, "", "structure_description"]], "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic": [[42, 3, 1, "", "Element"], [42, 2, 1, "", "degree"], [42, 2, 1, "", "matrix_space"]], "sage.groups.matrix_gps.morphism": [[43, 4, 1, "", "to_libgap"]], "sage.groups.matrix_gps.named_group": [[44, 1, 1, "", "NamedMatrixGroup_gap"], [44, 1, 1, "", "NamedMatrixGroup_generic"], [44, 4, 1, "", "normalize_args_invariant_form"], [44, 4, 1, "", "normalize_args_vectorspace"]], "sage.groups.matrix_gps.orthogonal": [[45, 4, 1, "", "GO"], [45, 1, 1, "", "OrthogonalMatrixGroup_gap"], [45, 1, 1, "", "OrthogonalMatrixGroup_generic"], [45, 4, 1, "", "SO"], [45, 4, 1, "", "normalize_args_e"]], "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_gap": [[45, 2, 1, "", "invariant_bilinear_form"], [45, 2, 1, "", "invariant_form"], [45, 2, 1, "", "invariant_quadratic_form"]], "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic": [[45, 2, 1, "", "invariant_bilinear_form"], [45, 2, 1, "", "invariant_form"], [45, 2, 1, "", "invariant_quadratic_form"]], "sage.groups.matrix_gps.symplectic": [[46, 4, 1, "", "Sp"], [46, 1, 1, "", "SymplecticMatrixGroup_gap"], [46, 1, 1, "", "SymplecticMatrixGroup_generic"]], "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_gap": [[46, 2, 1, "", "invariant_form"]], "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_generic": [[46, 2, 1, "", "invariant_form"]], "sage.groups.matrix_gps.unitary": [[47, 4, 1, "", "GU"], [47, 4, 1, "", "SU"], [47, 1, 1, "", "UnitaryMatrixGroup_gap"], [47, 1, 1, "", "UnitaryMatrixGroup_generic"], [47, 4, 1, "", "finite_field_sqrt"]], "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_gap": [[47, 2, 1, "", "invariant_form"]], "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_generic": [[47, 2, 1, "", "invariant_form"]], "sage.groups.misc_gps": [[48, 0, 0, "-", "argument_groups"], [49, 0, 0, "-", "imaginary_groups"], [50, 0, 0, "-", "misc_groups"]], "sage.groups.misc_gps.argument_groups": [[48, 1, 1, "", "AbstractArgument"], [48, 1, 1, "", "AbstractArgumentGroup"], [48, 1, 1, "", "ArgumentByElement"], [48, 1, 1, "", "ArgumentByElementGroup"], [48, 5, 1, "", "ArgumentGroup"], [48, 1, 1, "", "ArgumentGroupFactory"], [48, 1, 1, "", "RootOfUnity"], [48, 1, 1, "", "RootsOfUnityGroup"], [48, 1, 1, "", "Sign"], [48, 1, 1, "", "SignGroup"], [48, 1, 1, "", "UnitCircleGroup"], [48, 1, 1, "", "UnitCirclePoint"]], "sage.groups.misc_gps.argument_groups.AbstractArgumentGroup": [[48, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.ArgumentByElementGroup": [[48, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory": [[48, 2, 1, "", "create_key_and_extra_args"], [48, 2, 1, "", "create_object"]], "sage.groups.misc_gps.argument_groups.RootOfUnity": [[48, 2, 1, "", "exponent_denominator"], [48, 2, 1, "", "exponent_numerator"]], "sage.groups.misc_gps.argument_groups.RootsOfUnityGroup": [[48, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.Sign": [[48, 2, 1, "", "is_minus_one"], [48, 2, 1, "", "is_one"]], "sage.groups.misc_gps.argument_groups.SignGroup": [[48, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.UnitCircleGroup": [[48, 3, 1, "", "Element"]], "sage.groups.misc_gps.argument_groups.UnitCirclePoint": [[48, 6, 1, "", "exponent"], [48, 2, 1, "", "is_minus_one"], [48, 2, 1, "", "is_one"]], "sage.groups.misc_gps.imaginary_groups": [[49, 1, 1, "", "ImaginaryElement"], [49, 1, 1, "", "ImaginaryGroup"]], "sage.groups.misc_gps.imaginary_groups.ImaginaryElement": [[49, 2, 1, "", "imag"], [49, 2, 1, "", "real"]], "sage.groups.misc_gps.imaginary_groups.ImaginaryGroup": [[49, 3, 1, "", "Element"]], "sage.groups.pari_group": [[51, 1, 1, "", "PariGroup"]], "sage.groups.pari_group.PariGroup": [[51, 2, 1, "", "cardinality"], [51, 2, 1, "", "degree"], [51, 2, 1, "", "label"], [51, 2, 1, "", "order"], [51, 2, 1, "", "permutation_group"], [51, 2, 1, "", "signature"], [51, 2, 1, "", "transitive_number"]], "sage.groups.perm_gps": [[52, 0, 0, "-", "constructor"], [53, 0, 0, "-", "cubegroup"], [59, 0, 0, "-", "permgroup"], [60, 0, 0, "-", "permgroup_element"], [61, 0, 0, "-", "permgroup_morphism"], [62, 0, 0, "-", "permgroup_named"], [63, 0, 0, "-", "permutation_groups_catalog"], [64, 0, 0, "-", "symgp_conjugacy_class"]], "sage.groups.perm_gps.constructor": [[52, 4, 1, "", "PermutationGroupElement"], [52, 4, 1, "", "standardize_generator"], [52, 4, 1, "", "string_to_tuples"]], "sage.groups.perm_gps.cubegroup": [[53, 1, 1, "", "CubeGroup"], [53, 1, 1, "", "RubiksCube"], [53, 4, 1, "", "color_of_square"], [53, 4, 1, "", "create_poly"], [53, 4, 1, "", "cubie_centers"], [53, 4, 1, "", "cubie_colors"], [53, 4, 1, "", "cubie_faces"], [53, 4, 1, "", "index2singmaster"], [53, 4, 1, "", "inv_list"], [53, 4, 1, "", "plot3d_cubie"], [53, 4, 1, "", "polygon_plot3d"], [53, 4, 1, "", "rotation_list"], [53, 4, 1, "", "xproj"], [53, 4, 1, "", "yproj"]], "sage.groups.perm_gps.cubegroup.CubeGroup": [[53, 2, 1, "", "B"], [53, 2, 1, "", "D"], [53, 2, 1, "", "F"], [53, 2, 1, "", "L"], [53, 2, 1, "", "R"], [53, 2, 1, "", "U"], [53, 2, 1, "", "display2d"], [53, 2, 1, "", "faces"], [53, 2, 1, "", "facets"], [53, 2, 1, "", "gen_names"], [53, 2, 1, "", "legal"], [53, 2, 1, "", "move"], [53, 2, 1, "", "parse"], [53, 2, 1, "", "plot3d_cube"], [53, 2, 1, "", "plot_cube"], [53, 2, 1, "", "repr2d"], [53, 2, 1, "", "solve"]], "sage.groups.perm_gps.cubegroup.RubiksCube": [[53, 2, 1, "", "cubie"], [53, 2, 1, "", "facets"], [53, 2, 1, "", "move"], [53, 2, 1, "", "plot"], [53, 2, 1, "", "plot3d"], [53, 2, 1, "", "scramble"], [53, 2, 1, "", "show"], [53, 2, 1, "", "show3d"], [53, 2, 1, "", "solve"], [53, 2, 1, "", "undo"]], "sage.groups.perm_gps.partn_ref": [[54, 0, 0, "-", "canonical_augmentation"], [55, 0, 0, "-", "data_structures"], [56, 0, 0, "-", "refinement_graphs"], [57, 0, 0, "-", "refinement_lists"], [58, 0, 0, "-", "refinement_matrices"]], "sage.groups.perm_gps.partn_ref.data_structures": [[55, 4, 1, "", "OP_represent"], [55, 4, 1, "", "PS_represent"], [55, 4, 1, "", "SC_test_list_perms"]], "sage.groups.perm_gps.partn_ref.refinement_graphs": [[56, 1, 1, "", "GraphStruct"], [56, 4, 1, "", "all_labeled_graphs"], [56, 4, 1, "", "coarsest_equitable_refinement"], [56, 4, 1, "", "generate_dense_graphs_edge_addition"], [56, 4, 1, "", "generate_dense_graphs_vert_addition"], [56, 4, 1, "", "get_orbits"], [56, 4, 1, "", "isomorphic"], [56, 4, 1, "", "orbit_partition"], [56, 4, 1, "", "random_tests"], [56, 4, 1, "", "search_tree"]], "sage.groups.perm_gps.partn_ref.refinement_lists": [[57, 4, 1, "", "is_isomorphic"]], "sage.groups.perm_gps.partn_ref.refinement_matrices": [[58, 1, 1, "", "MatrixStruct"], [58, 4, 1, "", "random_tests"]], "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct": [[58, 2, 1, "", "automorphism_group"], [58, 2, 1, "", "canonical_relabeling"], [58, 2, 1, "", "display"], [58, 2, 1, "", "is_isomorphic"], [58, 2, 1, "", "run"]], "sage.groups.perm_gps.permgroup": [[59, 4, 1, "", "PermutationGroup"], [59, 1, 1, "", "PermutationGroup_action"], [59, 1, 1, "", "PermutationGroup_generic"], [59, 1, 1, "", "PermutationGroup_subgroup"], [59, 4, 1, "", "direct_product_permgroups"], [59, 4, 1, "", "from_gap_list"], [59, 4, 1, "", "hap_decorator"], [59, 4, 1, "", "load_hap"]], "sage.groups.perm_gps.permgroup.PermutationGroup_action": [[59, 2, 1, "", "orbits"]], "sage.groups.perm_gps.permgroup.PermutationGroup_generic": [[59, 3, 1, "", "Element"], [59, 3, 1, "", "Subgroup"], [59, 2, 1, "", "as_finitely_presented_group"], [59, 2, 1, "", "base"], [59, 2, 1, "", "blocks_all"], [59, 2, 1, "", "cardinality"], [59, 2, 1, "", "center"], [59, 2, 1, "", "centralizer"], [59, 2, 1, "", "character"], [59, 2, 1, "", "character_table"], [59, 2, 1, "", "cohomology"], [59, 2, 1, "", "cohomology_part"], [59, 2, 1, "", "commutator"], [59, 2, 1, "", "composition_series"], [59, 2, 1, "", "conjugacy_class"], [59, 2, 1, "", "conjugacy_classes"], [59, 2, 1, "", "conjugacy_classes_representatives"], [59, 2, 1, "", "conjugacy_classes_subgroups"], [59, 2, 1, "", "conjugate"], [59, 2, 1, "", "construction"], [59, 2, 1, "", "cosets"], [59, 2, 1, "", "degree"], [59, 2, 1, "", "derived_series"], [59, 2, 1, "", "direct_product"], [59, 2, 1, "", "domain"], [59, 2, 1, "", "exponent"], [59, 2, 1, "", "fitting_subgroup"], [59, 2, 1, "", "fixed_points"], [59, 2, 1, "", "frattini_subgroup"], [59, 2, 1, "", "gap"], [59, 2, 1, "", "gen"], [59, 2, 1, "", "gens"], [59, 2, 1, "", "gens_small"], [59, 2, 1, "", "group_id"], [59, 2, 1, "", "group_primitive_id"], [59, 2, 1, "", "has_element"], [59, 2, 1, "", "has_regular_subgroup"], [59, 2, 1, "", "holomorph"], [59, 2, 1, "", "homology"], [59, 2, 1, "", "homology_part"], [59, 2, 1, "", "id"], [59, 2, 1, "", "identity"], [59, 2, 1, "", "intersection"], [59, 2, 1, "", "irreducible_characters"], [59, 2, 1, "", "is_abelian"], [59, 2, 1, "", "is_commutative"], [59, 2, 1, "", "is_cyclic"], [59, 2, 1, "", "is_elementary_abelian"], [59, 2, 1, "", "is_isomorphic"], [59, 2, 1, "", "is_monomial"], [59, 2, 1, "", "is_nilpotent"], [59, 2, 1, "", "is_normal"], [59, 2, 1, "", "is_perfect"], [59, 2, 1, "", "is_pgroup"], [59, 2, 1, "", "is_polycyclic"], [59, 2, 1, "", "is_primitive"], [59, 2, 1, "", "is_regular"], [59, 2, 1, "", "is_semi_regular"], [59, 2, 1, "", "is_simple"], [59, 2, 1, "", "is_solvable"], [59, 2, 1, "", "is_subgroup"], [59, 2, 1, "", "is_supersolvable"], [59, 2, 1, "", "is_transitive"], [59, 2, 1, "", "isomorphism_to"], [59, 2, 1, "", "isomorphism_type_info_simple_group"], [59, 2, 1, "", "iteration"], [59, 2, 1, "", "largest_moved_point"], [59, 2, 1, "", "list"], [59, 2, 1, "", "lower_central_series"], [59, 2, 1, "", "minimal_generating_set"], [59, 2, 1, "", "molien_series"], [59, 2, 1, "", "ngens"], [59, 2, 1, "", "non_fixed_points"], [59, 2, 1, "", "normal_subgroups"], [59, 2, 1, "", "normalizer"], [59, 2, 1, "", "normalizes"], [59, 2, 1, "", "one"], [59, 2, 1, "", "orbit"], [59, 2, 1, "", "orbits"], [59, 2, 1, "", "order"], [59, 2, 1, "", "poincare_series"], [59, 2, 1, "", "quotient"], [59, 2, 1, "", "random_element"], [59, 2, 1, "", "representative_action"], [59, 2, 1, "", "semidirect_product"], [59, 2, 1, "", "sign_representation"], [59, 2, 1, "", "smallest_moved_point"], [59, 2, 1, "", "socle"], [59, 2, 1, "", "solvable_radical"], [59, 2, 1, "", "stabilizer"], [59, 2, 1, "", "strong_generating_system"], [59, 2, 1, "", "structure_description"], [59, 2, 1, "", "subgroup"], [59, 2, 1, "", "subgroups"], [59, 2, 1, "", "sylow_subgroup"], [59, 2, 1, "", "transversals"], [59, 2, 1, "", "trivial_character"], [59, 2, 1, "", "upper_central_series"]], "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup": [[59, 2, 1, "", "ambient_group"], [59, 2, 1, "", "is_normal"]], "sage.groups.perm_gps.permgroup_element": [[60, 1, 1, "", "PermutationGroupElement"], [60, 1, 1, "", "SymmetricGroupElement"], [60, 4, 1, "", "is_PermutationGroupElement"], [60, 4, 1, "", "make_permgroup_element"], [60, 4, 1, "", "make_permgroup_element_v2"]], "sage.groups.perm_gps.permgroup_element.PermutationGroupElement": [[60, 2, 1, "", "cycle_string"], [60, 2, 1, "", "cycle_tuples"], [60, 2, 1, "", "cycle_type"], [60, 2, 1, "", "cycles"], [60, 2, 1, "", "dict"], [60, 2, 1, "", "domain"], [60, 2, 1, "", "gap"], [60, 2, 1, "", "has_descent"], [60, 2, 1, "", "inverse"], [60, 2, 1, "", "matrix"], [60, 2, 1, "", "multiplicative_order"], [60, 2, 1, "", "orbit"], [60, 2, 1, "", "sign"], [60, 2, 1, "", "tuple"], [60, 2, 1, "", "word_problem"]], "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement": [[60, 2, 1, "", "absolute_length"], [60, 2, 1, "", "has_left_descent"]], "sage.groups.perm_gps.permgroup_morphism": [[61, 1, 1, "", "PermutationGroupMorphism"], [61, 1, 1, "", "PermutationGroupMorphism_from_gap"], [61, 1, 1, "", "PermutationGroupMorphism_id"], [61, 1, 1, "", "PermutationGroupMorphism_im_gens"], [61, 4, 1, "", "is_PermutationGroupMorphism"]], "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism": [[61, 2, 1, "", "image"], [61, 2, 1, "", "kernel"]], "sage.groups.perm_gps.permgroup_named": [[62, 1, 1, "", "AlternatingGroup"], [62, 1, 1, "", "ComplexReflectionGroup"], [62, 1, 1, "", "CyclicPermutationGroup"], [62, 1, 1, "", "DiCyclicGroup"], [62, 1, 1, "", "DihedralGroup"], [62, 1, 1, "", "GeneralDihedralGroup"], [62, 1, 1, "", "JankoGroup"], [62, 1, 1, "", "KleinFourGroup"], [62, 1, 1, "", "MathieuGroup"], [62, 1, 1, "", "PGL"], [62, 1, 1, "", "PGU"], [62, 1, 1, "", "PSL"], [62, 3, 1, "", "PSP"], [62, 1, 1, "", "PSU"], [62, 1, 1, "", "PSp"], [62, 1, 1, "", "PermutationGroup_plg"], [62, 1, 1, "", "PermutationGroup_pug"], [62, 1, 1, "", "PermutationGroup_symalt"], [62, 1, 1, "", "PermutationGroup_unique"], [62, 1, 1, "", "PrimitiveGroup"], [62, 4, 1, "", "PrimitiveGroups"], [62, 1, 1, "", "PrimitiveGroupsAll"], [62, 1, 1, "", "PrimitiveGroupsOfDegree"], [62, 1, 1, "", "QuaternionGroup"], [62, 1, 1, "", "SemidihedralGroup"], [62, 1, 1, "", "SplitMetacyclicGroup"], [62, 1, 1, "", "SuzukiGroup"], [62, 1, 1, "", "SuzukiSporadicGroup"], [62, 1, 1, "", "SymmetricGroup"], [62, 1, 1, "", "TransitiveGroup"], [62, 4, 1, "", "TransitiveGroups"], [62, 1, 1, "", "TransitiveGroupsAll"], [62, 1, 1, "", "TransitiveGroupsOfDegree"]], "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup": [[62, 2, 1, "", "codegrees"], [62, 2, 1, "", "degrees"], [62, 2, 1, "", "index_set"], [62, 2, 1, "", "simple_reflection"]], "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup": [[62, 2, 1, "", "as_AbelianGroup"], [62, 2, 1, "", "is_abelian"], [62, 2, 1, "", "is_commutative"]], "sage.groups.perm_gps.permgroup_named.DiCyclicGroup": [[62, 2, 1, "", "is_abelian"], [62, 2, 1, "", "is_commutative"]], "sage.groups.perm_gps.permgroup_named.PSL": [[62, 2, 1, "", "ramification_module_decomposition_hurwitz_curve"], [62, 2, 1, "", "ramification_module_decomposition_modular_curve"]], "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg": [[62, 2, 1, "", "base_ring"], [62, 2, 1, "", "matrix_degree"]], "sage.groups.perm_gps.permgroup_named.PermutationGroup_pug": [[62, 2, 1, "", "field_of_definition"]], "sage.groups.perm_gps.permgroup_named.PrimitiveGroup": [[62, 2, 1, "", "group_primitive_id"]], "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsOfDegree": [[62, 2, 1, "", "cardinality"]], "sage.groups.perm_gps.permgroup_named.SuzukiGroup": [[62, 2, 1, "", "base_ring"]], "sage.groups.perm_gps.permgroup_named.SymmetricGroup": [[62, 3, 1, "", "Element"], [62, 2, 1, "", "algebra"], [62, 2, 1, "", "cartan_type"], [62, 2, 1, "", "conjugacy_class"], [62, 2, 1, "", "conjugacy_classes"], [62, 2, 1, "", "conjugacy_classes_iterator"], [62, 2, 1, "", "conjugacy_classes_representatives"], [62, 2, 1, "", "coxeter_matrix"], [62, 2, 1, "", "index_set"], [62, 2, 1, "", "major_index"], [62, 2, 1, "", "reflections"], [62, 2, 1, "", "simple_reflection"], [62, 2, 1, "", "young_subgroup"]], "sage.groups.perm_gps.permgroup_named.TransitiveGroup": [[62, 2, 1, "", "degree"], [62, 2, 1, "", "transitive_number"]], "sage.groups.perm_gps.permgroup_named.TransitiveGroupsOfDegree": [[62, 2, 1, "", "cardinality"]], "sage.groups.perm_gps.symgp_conjugacy_class": [[64, 1, 1, "", "PermutationsConjugacyClass"], [64, 1, 1, "", "SymmetricGroupConjugacyClass"], [64, 1, 1, "", "SymmetricGroupConjugacyClassMixin"], [64, 4, 1, "", "conjugacy_class_iterator"], [64, 4, 1, "", "default_representative"]], "sage.groups.perm_gps.symgp_conjugacy_class.PermutationsConjugacyClass": [[64, 2, 1, "", "set"]], "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClass": [[64, 2, 1, "", "set"]], "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClassMixin": [[64, 2, 1, "", "partition"]], "sage.groups.raag": [[65, 1, 1, "", "CohomologyRAAG"], [65, 1, 1, "", "RightAngledArtinGroup"]], "sage.groups.raag.CohomologyRAAG": [[65, 1, 1, "", "Element"], [65, 2, 1, "", "algebra_generators"], [65, 2, 1, "", "degree_on_basis"], [65, 2, 1, "", "gen"], [65, 2, 1, "", "gens"], [65, 2, 1, "", "ngens"], [65, 2, 1, "", "one_basis"]], "sage.groups.raag.RightAngledArtinGroup": [[65, 1, 1, "", "Element"], [65, 2, 1, "", "cohomology"], [65, 2, 1, "", "gen"], [65, 2, 1, "", "gens"], [65, 2, 1, "", "graph"], [65, 2, 1, "", "ngens"], [65, 2, 1, "", "one"], [65, 2, 1, "", "one_element"]], "sage.groups.semimonomial_transformations": [[66, 0, 0, "-", "semimonomial_transformation"], [67, 0, 0, "-", "semimonomial_transformation_group"]], "sage.groups.semimonomial_transformations.semimonomial_transformation": [[66, 1, 1, "", "SemimonomialTransformation"]], "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation": [[66, 2, 1, "", "get_autom"], [66, 2, 1, "", "get_perm"], [66, 2, 1, "", "get_v"], [66, 2, 1, "", "get_v_inverse"], [66, 2, 1, "", "invert_v"]], "sage.groups.semimonomial_transformations.semimonomial_transformation_group": [[67, 1, 1, "", "SemimonomialActionMat"], [67, 1, 1, "", "SemimonomialActionVec"], [67, 1, 1, "", "SemimonomialTransformationGroup"]], "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup": [[67, 3, 1, "", "Element"], [67, 2, 1, "", "base_ring"], [67, 2, 1, "", "degree"], [67, 2, 1, "", "gens"], [67, 2, 1, "", "order"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"group": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67], "abelian": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "permut": [0, 52, 59, 60, 61, 62, 63], "matrix": [0, 35, 36, 37, 39, 42, 43, 44], "affin": [0, 12, 14], "lie": [0, 32], "partit": [0, 56, 57, 58], "refin": 0, "intern": 0, "indic": 0, "tabl": 0, "automorph": 1, "multipl": [2, 6, 9, 24], "todo": [2, 4, 5, 11, 15, 17, 19, 25, 35, 62, 67], "element": [3, 7, 8, 14, 37, 48, 49, 60, 66], "finit": [4, 6, 7, 19, 20, 36], "gener": [4, 22, 28, 36], "gap": [4, 29, 30], "homomorph": [5, 30, 43, 61], "dual": [6, 7], "charact": 7, "base": [8, 23, 28, 29, 31, 42, 44], "class": [8, 11, 16, 17, 23, 29, 42, 48, 49, 64], "With": 9, "valu": 9, "addit": [10, 24], "wrapper": 11, "euclidean": 13, "braid": [15, 18], "function": [16, 22, 53, 56, 57, 58], "conjugaci": [17, 64], "cubic": 18, "present": [19, 20], "name": [20, 62], "free": [21, 27], "miscellan": [22, 50], "functor": 24, "convert": 24, "commut": 24, "semidirect": 25, "product": 25, "exampl": [26, 57], "index": [27, 59], "libgap": [28, 31], "mix": 29, "backend": 30, "nilpot": 32, "binari": 33, "dihedr": 33, "librari": 34, "interest": 34, "coxet": 35, "As": 35, "heisenberg": 38, "homset": 39, "isometri": 40, "linear": [41, 45, 46], "between": 43, "classic": 44, "orthogon": 45, "symplect": 46, "unitari": 47, "gu": 47, "n": 47, "q": 47, "su": 47, "repres": 48, "complex": 48, "argument": 48, "method": [48, 49, 59], "imaginari": 49, "pari": 51, "constructor": 52, "rubik": 53, "": 53, "cube": 53, "canon": 54, "augment": 54, "data": 55, "structur": 55, "graph": 56, "theoret": 56, "backtrack": [56, 57, 58], "list": 57, "simpl": 57, "us": 57, "partn_ref": 57, "matric": 58, "symmetr": [62, 64], "s_n": 62, "catalog": 63, "Of": 64, "The": 64, "right": 65, "angl": 65, "artin": 65, "semimonomi": [66, 67], "transform": [66, 67]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Groups": [[0, "groups"]], "Abelian Groups": [[0, "abelian-groups"]], "Permutation Groups": [[0, "permutation-groups"]], "Matrix and Affine Groups": [[0, "matrix-and-affine-groups"]], "Lie Groups": [[0, "lie-groups"]], "Partition Refinement": [[0, "partition-refinement"]], "Internals": [[0, "internals"]], "Indices and Tables": [[0, "indices-and-tables"]], "Automorphisms of abelian groups": [[1, "automorphisms-of-abelian-groups"]], "Multiplicative Abelian Groups": [[2, "multiplicative-abelian-groups"]], "Todo": [[2, "id2"], [2, "id3"], [4, "id1"], [5, "id1"], [5, "id2"], [11, "id1"], [15, "id18"], [15, "id19"], [17, "id1"], [19, "id2"], [25, "id1"], [35, "id1"], [62, "id4"], [62, "id5"], [67, "id1"], [67, "id2"]], "Abelian group elements": [[3, "abelian-group-elements"]], "Finitely generated abelian groups with GAP.": [[4, "finitely-generated-abelian-groups-with-gap"]], "Homomorphisms of abelian groups": [[5, "homomorphisms-of-abelian-groups"]], "Dual groups of Finite Multiplicative Abelian Groups": [[6, "dual-groups-of-finite-multiplicative-abelian-groups"]], "Elements (characters) of the dual group of a finite Abelian group": [[7, "elements-characters-of-the-dual-group-of-a-finite-abelian-group"]], "Base class for abelian group elements": [[8, "base-class-for-abelian-group-elements"]], "Multiplicative Abelian Groups With Values": [[9, "multiplicative-abelian-groups-with-values"]], "Additive Abelian Groups": [[10, "additive-abelian-groups"]], "Wrapper class for abelian groups": [[11, "wrapper-class-for-abelian-groups"]], "Affine Groups": [[12, "affine-groups"]], "Euclidean Groups": [[13, "euclidean-groups"]], "Elements of Affine Groups": [[14, "elements-of-affine-groups"]], "Braid groups": [[15, "braid-groups"]], "Class functions of groups.": [[16, "class-functions-of-groups"]], "Conjugacy classes of groups": [[17, "conjugacy-classes-of-groups"]], "Cubic Braid Groups": [[18, "cubic-braid-groups"]], "Finitely Presented Groups": [[19, "finitely-presented-groups"]], "Named Finitely Presented Groups": [[20, "named-finitely-presented-groups"]], "Free Groups": [[21, "free-groups"]], "Miscellaneous generic functions": [[22, "miscellaneous-generic-functions"]], "Base class for groups": [[23, "base-class-for-groups"]], "Functor that converts a commutative additive group into a multiplicative group.": [[24, "functor-that-converts-a-commutative-additive-group-into-a-multiplicative-group"]], "Semidirect product of groups": [[25, "semidirect-product-of-groups"]], "Examples of Groups": [[26, "examples-of-groups"]], "Indexed Free Groups": [[27, "indexed-free-groups"]], "Generic LibGAP-based Group": [[28, "generic-libgap-based-group"]], "Mix-in Class for GAP-based Groups": [[29, "mix-in-class-for-gap-based-groups"]], "Group homomorphisms for groups with a GAP backend": [[30, "group-homomorphisms-for-groups-with-a-gap-backend"]], "LibGAP-based Groups": [[31, "libgap-based-groups"]], "Nilpotent Lie groups": [[32, "nilpotent-lie-groups"]], "Binary Dihedral Groups": [[33, "binary-dihedral-groups"]], "Library of Interesting Groups": [[34, "library-of-interesting-groups"]], "Coxeter Groups As Matrix Groups": [[35, "coxeter-groups-as-matrix-groups"]], "Finitely Generated Matrix Groups": [[36, "finitely-generated-matrix-groups"]], "Matrix Group Elements": [[37, "matrix-group-elements"]], "Heisenberg Group": [[38, "heisenberg-group"]], "Matrix Group Homsets": [[39, "matrix-group-homsets"]], "Groups of isometries.": [[40, "groups-of-isometries"]], "Linear Groups": [[41, "linear-groups"]], "Base classes for Matrix Groups": [[42, "base-classes-for-matrix-groups"]], "Homomorphisms Between Matrix Groups": [[43, "homomorphisms-between-matrix-groups"]], "Base for Classical Matrix Groups": [[44, "base-for-classical-matrix-groups"]], "Orthogonal Linear Groups": [[45, "orthogonal-linear-groups"]], "Symplectic Linear Groups": [[46, "symplectic-linear-groups"]], "Unitary Groups GU(n,q) and SU(n,q)": [[47, "unitary-groups-gu-n-q-and-su-n-q"]], "Groups of elements representing (complex) arguments.": [[48, "groups-of-elements-representing-complex-arguments"]], "Classes and Methods": [[48, "classes-and-methods"], [49, "classes-and-methods"]], "Groups of imaginary elements": [[49, "groups-of-imaginary-elements"]], "Miscellaneous Groups": [[50, "miscellaneous-groups"]], "PARI Groups": [[51, "pari-groups"]], "Constructor for permutations": [[52, "constructor-for-permutations"]], "Rubik\u2019s cube group functions": [[53, "rubik-s-cube-group-functions"]], "Canonical augmentation": [[54, "canonical-augmentation"]], "Data structures": [[55, "data-structures"]], "Graph-theoretic partition backtrack functions": [[56, "graph-theoretic-partition-backtrack-functions"]], "Partition backtrack functions for lists \u2013 a simple example of using partn_ref": [[57, "partition-backtrack-functions-for-lists-a-simple-example-of-using-partn-ref"]], "Partition backtrack functions for matrices": [[58, "partition-backtrack-functions-for-matrices"]], "Permutation groups": [[59, "permutation-groups"]], "Index of methods": [[59, "index-of-methods"]], "Permutation group elements": [[60, "permutation-group-elements"]], "Permutation group homomorphisms": [[61, "permutation-group-homomorphisms"]], "\u201cNamed\u201d Permutation groups (such as the symmetric group, S_n)": [[62, "named-permutation-groups-such-as-the-symmetric-group-s-n"]], "Catalog of permutation groups": [[63, "catalog-of-permutation-groups"]], "Conjugacy Classes Of The Symmetric Group": [[64, "conjugacy-classes-of-the-symmetric-group"]], "Right-Angled Artin Groups": [[65, "right-angled-artin-groups"]], "Elements of a semimonomial transformation group": [[66, "elements-of-a-semimonomial-transformation-group"]], "Semimonomial transformation group": [[67, "semimonomial-transformation-group"]]}, "indexentries": {"abeliangroupautomorphism (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphism"]], "abeliangroupautomorphismgroup (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup"]], "abeliangroupautomorphismgroup_gap (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap"]], "abeliangroupautomorphismgroup_subgroup (class in sage.groups.abelian_gps.abelian_aut)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_subgroup"]], "element (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup attribute)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup.Element"]], "element (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap attribute)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.Element"]], "element (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_subgroup attribute)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_subgroup.Element"]], "covering_matrix_ring() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.covering_matrix_ring"]], "domain() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.domain"]], "is_subgroup_of() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphismgroup_gap method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphismGroup_gap.is_subgroup_of"]], "matrix() (sage.groups.abelian_gps.abelian_aut.abeliangroupautomorphism method)": [[1, "sage.groups.abelian_gps.abelian_aut.AbelianGroupAutomorphism.matrix"]], "module": [[1, "module-sage.groups.abelian_gps.abelian_aut"], [2, "module-sage.groups.abelian_gps.abelian_group"], [3, "module-sage.groups.abelian_gps.abelian_group_element"], [4, "module-sage.groups.abelian_gps.abelian_group_gap"], [5, "module-sage.groups.abelian_gps.abelian_group_morphism"], [6, "module-sage.groups.abelian_gps.dual_abelian_group"], [7, "module-sage.groups.abelian_gps.dual_abelian_group_element"], [8, "module-sage.groups.abelian_gps.element_base"], [9, "module-sage.groups.abelian_gps.values"], [10, "module-sage.groups.additive_abelian.additive_abelian_group"], [11, "module-sage.groups.additive_abelian.additive_abelian_wrapper"], [12, "module-sage.groups.affine_gps.affine_group"], [13, "module-sage.groups.affine_gps.euclidean_group"], [14, "module-sage.groups.affine_gps.group_element"], [15, "module-sage.groups.braid"], [16, "module-sage.groups.class_function"], [17, "module-sage.groups.conjugacy_classes"], [18, "module-sage.groups.cubic_braid"], [19, "module-sage.groups.finitely_presented"], [20, "module-sage.groups.finitely_presented_named"], [21, "module-sage.groups.free_group"], [22, "module-sage.groups.generic"], [23, "module-sage.groups.group"], [24, "module-sage.groups.group_exp"], [25, "module-sage.groups.group_semidirect_product"], [26, "module-sage.groups.groups_catalog"], [27, "module-sage.groups.indexed_free_group"], [28, "module-sage.groups.libgap_group"], [29, "module-sage.groups.libgap_mixin"], [30, "module-sage.groups.libgap_morphism"], [31, "module-sage.groups.libgap_wrapper"], [32, "module-sage.groups.lie_gps.nilpotent_lie_group"], [33, "module-sage.groups.matrix_gps.binary_dihedral"], [34, "module-sage.groups.matrix_gps.catalog"], [35, "module-sage.groups.matrix_gps.coxeter_group"], [36, "module-sage.groups.matrix_gps.finitely_generated"], [37, "module-sage.groups.matrix_gps.group_element"], [38, "module-sage.groups.matrix_gps.heisenberg"], [39, "module-sage.groups.matrix_gps.homset"], [40, "module-sage.groups.matrix_gps.isometries"], [41, "module-sage.groups.matrix_gps.linear"], [42, "module-sage.groups.matrix_gps.matrix_group"], [43, "module-sage.groups.matrix_gps.morphism"], [44, "module-sage.groups.matrix_gps.named_group"], [45, "module-sage.groups.matrix_gps.orthogonal"], [46, "module-sage.groups.matrix_gps.symplectic"], [47, "module-sage.groups.matrix_gps.unitary"], [48, "module-sage.groups.misc_gps.argument_groups"], [49, "module-sage.groups.misc_gps.imaginary_groups"], [50, "module-sage.groups.misc_gps.misc_groups"], [51, "module-sage.groups.pari_group"], [52, "module-sage.groups.perm_gps.constructor"], [53, "module-sage.groups.perm_gps.cubegroup"], [54, "module-sage.groups.perm_gps.partn_ref.canonical_augmentation"], [55, "module-sage.groups.perm_gps.partn_ref.data_structures"], [56, "module-sage.groups.perm_gps.partn_ref.refinement_graphs"], [57, "module-sage.groups.perm_gps.partn_ref.refinement_lists"], [58, "module-sage.groups.perm_gps.partn_ref.refinement_matrices"], [59, "module-sage.groups.perm_gps.permgroup"], [60, "module-sage.groups.perm_gps.permgroup_element"], [61, "module-sage.groups.perm_gps.permgroup_morphism"], [62, "module-sage.groups.perm_gps.permgroup_named"], [63, "module-sage.groups.perm_gps.permutation_groups_catalog"], [64, "module-sage.groups.perm_gps.symgp_conjugacy_class"], [65, "module-sage.groups.raag"], [66, "module-sage.groups.semimonomial_transformations.semimonomial_transformation"], [67, "module-sage.groups.semimonomial_transformations.semimonomial_transformation_group"]], "sage.groups.abelian_gps.abelian_aut": [[1, "module-sage.groups.abelian_gps.abelian_aut"]], "abeliangroup() (in module sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup"]], "abeliangroup_class (class in sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class"]], "abeliangroup_subgroup (class in sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup"]], "element (sage.groups.abelian_gps.abelian_group.abeliangroup_class attribute)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.Element"]], "subgroup (sage.groups.abelian_gps.abelian_group.abeliangroup_class attribute)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.Subgroup"]], "ambient_group() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.ambient_group"]], "cardinality() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.cardinality"]], "dual_group() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.dual_group"]], "elementary_divisors() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.elementary_divisors"]], "equals() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.equals"]], "exponent() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.exponent"]], "gen() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.gen"]], "gen() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.gen"]], "gens() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.gens"]], "gens() (sage.groups.abelian_gps.abelian_group.abeliangroup_subgroup method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_subgroup.gens"]], "gens_orders() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.gens_orders"]], "identity() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.identity"]], "invariants() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.invariants"]], "is_abeliangroup() (in module sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.is_AbelianGroup"]], "is_commutative() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_commutative"]], "is_cyclic() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_cyclic"]], "is_isomorphic() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_isomorphic"]], "is_subgroup() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_subgroup"]], "is_trivial() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.is_trivial"]], "list() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.list"]], "ngens() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.ngens"]], "number_of_subgroups() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.number_of_subgroups"]], "order() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.order"]], "permutation_group() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.permutation_group"]], "random_element() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.random_element"]], "sage.groups.abelian_gps.abelian_group": [[2, "module-sage.groups.abelian_gps.abelian_group"]], "subgroup() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.subgroup"]], "subgroup_reduced() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.subgroup_reduced"]], "subgroups() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.subgroups"]], "torsion_subgroup() (sage.groups.abelian_gps.abelian_group.abeliangroup_class method)": [[2, "sage.groups.abelian_gps.abelian_group.AbelianGroup_class.torsion_subgroup"]], "word_problem() (in module sage.groups.abelian_gps.abelian_group)": [[2, "sage.groups.abelian_gps.abelian_group.word_problem"]], "abeliangroupelement (class in sage.groups.abelian_gps.abelian_group_element)": [[3, "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement"]], "as_permutation() (sage.groups.abelian_gps.abelian_group_element.abeliangroupelement method)": [[3, "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement.as_permutation"]], "is_abeliangroupelement() (in module sage.groups.abelian_gps.abelian_group_element)": [[3, "sage.groups.abelian_gps.abelian_group_element.is_AbelianGroupElement"]], "sage.groups.abelian_gps.abelian_group_element": [[3, "module-sage.groups.abelian_gps.abelian_group_element"]], "word_problem() (sage.groups.abelian_gps.abelian_group_element.abeliangroupelement method)": [[3, "sage.groups.abelian_gps.abelian_group_element.AbelianGroupElement.word_problem"]], "abeliangroupelement_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap"]], "abeliangroupelement_polycyclic (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_polycyclic"]], "abeliangroupgap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupGap"]], "abeliangroupquotient_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap"]], "abeliangroupsubgroup_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap"]], "abeliangroup_gap (class in sage.groups.abelian_gps.abelian_group_gap)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap"]], "element (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap attribute)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.Element"]], "all_subgroups() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.all_subgroups"]], "aut() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.aut"]], "automorphism_group() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.automorphism_group"]], "cover() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.cover"]], "elementary_divisors() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.elementary_divisors"]], "exponent() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.exponent"]], "exponents() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupelement_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap.exponents"]], "exponents() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupelement_polycyclic method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_polycyclic.exponents"]], "gens_orders() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.gens_orders"]], "identity() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.identity"]], "is_subgroup_of() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.is_subgroup_of"]], "is_trivial() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.is_trivial"]], "lift() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.lift"]], "lift() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupsubgroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap.lift"]], "natural_homomorphism() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.natural_homomorphism"]], "order() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupelement_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupElement_gap.order"]], "quotient() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.quotient"]], "relations() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupquotient_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupQuotient_gap.relations"]], "retract() (sage.groups.abelian_gps.abelian_group_gap.abeliangroupsubgroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroupSubgroup_gap.retract"]], "sage.groups.abelian_gps.abelian_group_gap": [[4, "module-sage.groups.abelian_gps.abelian_group_gap"]], "subgroup() (sage.groups.abelian_gps.abelian_group_gap.abeliangroup_gap method)": [[4, "sage.groups.abelian_gps.abelian_group_gap.AbelianGroup_gap.subgroup"]], "abeliangroupmap (class in sage.groups.abelian_gps.abelian_group_morphism)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMap"]], "abeliangroupmorphism (class in sage.groups.abelian_gps.abelian_group_morphism)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism"]], "image() (sage.groups.abelian_gps.abelian_group_morphism.abeliangroupmorphism method)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism.image"]], "is_abeliangroupmorphism() (in module sage.groups.abelian_gps.abelian_group_morphism)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.is_AbelianGroupMorphism"]], "kernel() (sage.groups.abelian_gps.abelian_group_morphism.abeliangroupmorphism method)": [[5, "sage.groups.abelian_gps.abelian_group_morphism.AbelianGroupMorphism.kernel"]], "sage.groups.abelian_gps.abelian_group_morphism": [[5, "module-sage.groups.abelian_gps.abelian_group_morphism"]], "dualabeliangroup_class (class in sage.groups.abelian_gps.dual_abelian_group)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class"]], "element (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class attribute)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.Element"]], "base_ring() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.base_ring"]], "gen() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.gen"]], "gens() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.gens"]], "gens_orders() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.gens_orders"]], "group() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.group"]], "invariants() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.invariants"]], "is_dualabeliangroup() (in module sage.groups.abelian_gps.dual_abelian_group)": [[6, "sage.groups.abelian_gps.dual_abelian_group.is_DualAbelianGroup"]], "is_commutative() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.is_commutative"]], "list() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.list"]], "ngens() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.ngens"]], "order() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.order"]], "random_element() (sage.groups.abelian_gps.dual_abelian_group.dualabeliangroup_class method)": [[6, "sage.groups.abelian_gps.dual_abelian_group.DualAbelianGroup_class.random_element"]], "sage.groups.abelian_gps.dual_abelian_group": [[6, "module-sage.groups.abelian_gps.dual_abelian_group"]], "dualabeliangroupelement (class in sage.groups.abelian_gps.dual_abelian_group_element)": [[7, "sage.groups.abelian_gps.dual_abelian_group_element.DualAbelianGroupElement"]], "is_dualabeliangroupelement() (in module sage.groups.abelian_gps.dual_abelian_group_element)": [[7, "sage.groups.abelian_gps.dual_abelian_group_element.is_DualAbelianGroupElement"]], "sage.groups.abelian_gps.dual_abelian_group_element": [[7, "module-sage.groups.abelian_gps.dual_abelian_group_element"]], "word_problem() (sage.groups.abelian_gps.dual_abelian_group_element.dualabeliangroupelement method)": [[7, "sage.groups.abelian_gps.dual_abelian_group_element.DualAbelianGroupElement.word_problem"]], "abeliangroupelementbase (class in sage.groups.abelian_gps.element_base)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase"]], "exponents() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.exponents"]], "is_trivial() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.is_trivial"]], "list() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.list"]], "multiplicative_order() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.multiplicative_order"]], "order() (sage.groups.abelian_gps.element_base.abeliangroupelementbase method)": [[8, "sage.groups.abelian_gps.element_base.AbelianGroupElementBase.order"]], "sage.groups.abelian_gps.element_base": [[8, "module-sage.groups.abelian_gps.element_base"]], "abeliangroupwithvalues() (in module sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues"]], "abeliangroupwithvalueselement (class in sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValuesElement"]], "abeliangroupwithvaluesembedding (class in sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValuesEmbedding"]], "abeliangroupwithvalues_class (class in sage.groups.abelian_gps.values)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class"]], "element (sage.groups.abelian_gps.values.abeliangroupwithvalues_class attribute)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.Element"]], "gen() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.gen"]], "gens_values() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.gens_values"]], "sage.groups.abelian_gps.values": [[9, "module-sage.groups.abelian_gps.values"]], "value() (sage.groups.abelian_gps.values.abeliangroupwithvalueselement method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValuesElement.value"]], "values_embedding() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.values_embedding"]], "values_group() (sage.groups.abelian_gps.values.abeliangroupwithvalues_class method)": [[9, "sage.groups.abelian_gps.values.AbelianGroupWithValues_class.values_group"]], "additiveabeliangroup() (in module sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup"]], "additiveabeliangroupelement (class in sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroupElement"]], "additiveabeliangroup_class (class in sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class"]], "additiveabeliangroup_fixed_gens (class in sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens"]], "element (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class attribute)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.Element"]], "cover_and_relations_from_invariants() (in module sage.groups.additive_abelian.additive_abelian_group)": [[10, "sage.groups.additive_abelian.additive_abelian_group.cover_and_relations_from_invariants"]], "exponent() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.exponent"]], "gens() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_fixed_gens method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens.gens"]], "identity() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_fixed_gens method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens.identity"]], "is_cyclic() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.is_cyclic"]], "is_multiplicative() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.is_multiplicative"]], "order() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.order"]], "permutation_group() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_fixed_gens method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_fixed_gens.permutation_group"]], "sage.groups.additive_abelian.additive_abelian_group": [[10, "module-sage.groups.additive_abelian.additive_abelian_group"]], "short_name() (sage.groups.additive_abelian.additive_abelian_group.additiveabeliangroup_class method)": [[10, "sage.groups.additive_abelian.additive_abelian_group.AdditiveAbelianGroup_class.short_name"]], "additiveabeliangroupwrapper (class in sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper"]], "additiveabeliangroupwrapperelement (class in sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapperElement"]], "element (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper attribute)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.Element"]], "unwrappingmorphism (class in sage.groups.additive_abelian.additive_abelian_wrapper)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.UnwrappingMorphism"]], "discrete_exp() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.discrete_exp"]], "discrete_log() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.discrete_log"]], "element() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapperelement method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapperElement.element"]], "generator_orders() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.generator_orders"]], "sage.groups.additive_abelian.additive_abelian_wrapper": [[11, "module-sage.groups.additive_abelian.additive_abelian_wrapper"]], "torsion_subgroup() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.torsion_subgroup"]], "universe() (sage.groups.additive_abelian.additive_abelian_wrapper.additiveabeliangroupwrapper method)": [[11, "sage.groups.additive_abelian.additive_abelian_wrapper.AdditiveAbelianGroupWrapper.universe"]], "affinegroup (class in sage.groups.affine_gps.affine_group)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup"]], "element (sage.groups.affine_gps.affine_group.affinegroup attribute)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.Element"]], "cardinality() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.cardinality"]], "degree() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.degree"]], "linear() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.linear"]], "linear_space() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.linear_space"]], "matrix_space() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.matrix_space"]], "random_element() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.random_element"]], "reflection() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.reflection"]], "sage.groups.affine_gps.affine_group": [[12, "module-sage.groups.affine_gps.affine_group"]], "some_elements() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.some_elements"]], "translation() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.translation"]], "vector_space() (sage.groups.affine_gps.affine_group.affinegroup method)": [[12, "sage.groups.affine_gps.affine_group.AffineGroup.vector_space"]], "euclideangroup (class in sage.groups.affine_gps.euclidean_group)": [[13, "sage.groups.affine_gps.euclidean_group.EuclideanGroup"]], "random_element() (sage.groups.affine_gps.euclidean_group.euclideangroup method)": [[13, "sage.groups.affine_gps.euclidean_group.EuclideanGroup.random_element"]], "sage.groups.affine_gps.euclidean_group": [[13, "module-sage.groups.affine_gps.euclidean_group"]], "a() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.A"]], "affinegroupelement (class in sage.groups.affine_gps.group_element)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement"]], "b() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.b"]], "list() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.list"]], "matrix() (sage.groups.affine_gps.group_element.affinegroupelement method)": [[14, "sage.groups.affine_gps.group_element.AffineGroupElement.matrix"]], "sage.groups.affine_gps.group_element": [[14, "module-sage.groups.affine_gps.group_element"]], "braid (class in sage.groups.braid)": [[15, "sage.groups.braid.Braid"]], "braidgroup() (in module sage.groups.braid)": [[15, "sage.groups.braid.BraidGroup"]], "braidgroup_class (class in sage.groups.braid)": [[15, "sage.groups.braid.BraidGroup_class"]], "element (sage.groups.braid.braidgroup_class attribute)": [[15, "sage.groups.braid.BraidGroup_class.Element"]], "lkb_matrix() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.LKB_matrix"]], "mappingclassgroupaction (class in sage.groups.braid)": [[15, "sage.groups.braid.MappingClassGroupAction"]], "rightquantumword (class in sage.groups.braid)": [[15, "sage.groups.braid.RightQuantumWord"]], "tl_basis_with_drain() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.TL_basis_with_drain"]], "tl_matrix() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.TL_matrix"]], "tl_representation() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.TL_representation"]], "alexander_polynomial() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.alexander_polynomial"]], "an_element() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.an_element"]], "annular_khovanov_complex() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.annular_khovanov_complex"]], "annular_khovanov_homology() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.annular_khovanov_homology"]], "as_permutation_group() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.as_permutation_group"]], "burau_matrix() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.burau_matrix"]], "cardinality() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.cardinality"]], "centralizer() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.centralizer"]], "colored_jones_polynomial() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.colored_jones_polynomial"]], "components_in_closure() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.components_in_closure"]], "conjugating_braid() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.conjugating_braid"]], "deformed_burau_matrix() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.deformed_burau_matrix"]], "dimension_of_tl_space() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.dimension_of_TL_space"]], "eps() (sage.groups.braid.rightquantumword method)": [[15, "sage.groups.braid.RightQuantumWord.eps"]], "gcd() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.gcd"]], "is_conjugated() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.is_conjugated"]], "is_periodic() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.is_periodic"]], "is_pseudoanosov() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.is_pseudoanosov"]], "is_reducible() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.is_reducible"]], "jones_polynomial() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.jones_polynomial"]], "lcm() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.lcm"]], "links_gould_matrix() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.links_gould_matrix"]], "links_gould_polynomial() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.links_gould_polynomial"]], "mapping_class_action() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.mapping_class_action"]], "markov_trace() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.markov_trace"]], "mirror_image() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.mirror_image"]], "mirror_involution() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.mirror_involution"]], "order() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.order"]], "permutation() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.permutation"]], "plot() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.plot"]], "plot3d() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.plot3d"]], "reduced_word() (sage.groups.braid.rightquantumword method)": [[15, "sage.groups.braid.RightQuantumWord.reduced_word"]], "reverse() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.reverse"]], "right_normal_form() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.right_normal_form"]], "rigidity() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.rigidity"]], "sage.groups.braid": [[15, "module-sage.groups.braid"]], "sliding_circuits() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.sliding_circuits"]], "some_elements() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.some_elements"]], "strands() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.strands"]], "strands() (sage.groups.braid.braidgroup_class method)": [[15, "sage.groups.braid.BraidGroup_class.strands"]], "super_summit_set() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.super_summit_set"]], "thurston_type() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.thurston_type"]], "tropical_coordinates() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.tropical_coordinates"]], "tuples() (sage.groups.braid.rightquantumword method)": [[15, "sage.groups.braid.RightQuantumWord.tuples"]], "ultra_summit_set() (sage.groups.braid.braid method)": [[15, "sage.groups.braid.Braid.ultra_summit_set"]], "classfunction() (in module sage.groups.class_function)": [[16, "sage.groups.class_function.ClassFunction"]], "classfunction_gap (class in sage.groups.class_function)": [[16, "sage.groups.class_function.ClassFunction_gap"]], "classfunction_libgap (class in sage.groups.class_function)": [[16, "sage.groups.class_function.ClassFunction_libgap"]], "adams_operation() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.adams_operation"]], "adams_operation() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.adams_operation"]], "central_character() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.central_character"]], "central_character() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.central_character"]], "decompose() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.decompose"]], "decompose() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.decompose"]], "degree() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.degree"]], "degree() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.degree"]], "determinant_character() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.determinant_character"]], "determinant_character() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.determinant_character"]], "domain() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.domain"]], "domain() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.domain"]], "exterior_power() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.exterior_power"]], "exterior_power() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.exterior_power"]], "gap() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.gap"]], "induct() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.induct"]], "induct() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.induct"]], "irreducible_constituents() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.irreducible_constituents"]], "irreducible_constituents() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.irreducible_constituents"]], "is_irreducible() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.is_irreducible"]], "is_irreducible() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.is_irreducible"]], "norm() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.norm"]], "norm() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.norm"]], "restrict() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.restrict"]], "restrict() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.restrict"]], "sage.groups.class_function": [[16, "module-sage.groups.class_function"]], "scalar_product() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.scalar_product"]], "scalar_product() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.scalar_product"]], "symmetric_power() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.symmetric_power"]], "symmetric_power() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.symmetric_power"]], "tensor_product() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.tensor_product"]], "tensor_product() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.tensor_product"]], "values() (sage.groups.class_function.classfunction_gap method)": [[16, "sage.groups.class_function.ClassFunction_gap.values"]], "values() (sage.groups.class_function.classfunction_libgap method)": [[16, "sage.groups.class_function.ClassFunction_libgap.values"]], "conjugacyclass (class in sage.groups.conjugacy_classes)": [[17, "sage.groups.conjugacy_classes.ConjugacyClass"]], "conjugacyclassgap (class in sage.groups.conjugacy_classes)": [[17, "sage.groups.conjugacy_classes.ConjugacyClassGAP"]], "an_element() (sage.groups.conjugacy_classes.conjugacyclass method)": [[17, "sage.groups.conjugacy_classes.ConjugacyClass.an_element"]], "cardinality() (sage.groups.conjugacy_classes.conjugacyclassgap method)": [[17, "sage.groups.conjugacy_classes.ConjugacyClassGAP.cardinality"]], "is_rational() (sage.groups.conjugacy_classes.conjugacyclass method)": [[17, "sage.groups.conjugacy_classes.ConjugacyClass.is_rational"]], "is_real() (sage.groups.conjugacy_classes.conjugacyclass method)": [[17, "sage.groups.conjugacy_classes.ConjugacyClass.is_real"]], "list() (sage.groups.conjugacy_classes.conjugacyclass method)": [[17, "sage.groups.conjugacy_classes.ConjugacyClass.list"]], "representative() (sage.groups.conjugacy_classes.conjugacyclass method)": [[17, "sage.groups.conjugacy_classes.ConjugacyClass.representative"]], "sage.groups.conjugacy_classes": [[17, "module-sage.groups.conjugacy_classes"]], "set() (sage.groups.conjugacy_classes.conjugacyclass method)": [[17, "sage.groups.conjugacy_classes.ConjugacyClass.set"]], "set() (sage.groups.conjugacy_classes.conjugacyclassgap method)": [[17, "sage.groups.conjugacy_classes.ConjugacyClassGAP.set"]], "assiongroups() (in module sage.groups.cubic_braid)": [[18, "sage.groups.cubic_braid.AssionGroupS"]], "assiongroupu() (in module sage.groups.cubic_braid)": [[18, "sage.groups.cubic_braid.AssionGroupU"]], "assions (sage.groups.cubic_braid.cubicbraidgroup.type attribute)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.type.AssionS"]], "assionu (sage.groups.cubic_braid.cubicbraidgroup.type attribute)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.type.AssionU"]], "coxeter (sage.groups.cubic_braid.cubicbraidgroup.type attribute)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.type.Coxeter"]], "cubicbraidelement (class in sage.groups.cubic_braid)": [[18, "sage.groups.cubic_braid.CubicBraidElement"]], "cubicbraidgroup (class in sage.groups.cubic_braid)": [[18, "sage.groups.cubic_braid.CubicBraidGroup"]], "cubicbraidgroup.type (class in sage.groups.cubic_braid)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.type"]], "element (sage.groups.cubic_braid.cubicbraidgroup attribute)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.Element"]], "as_classical_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.as_classical_group"]], "as_matrix_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.as_matrix_group"]], "as_permutation_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.as_permutation_group"]], "as_reflection_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.as_reflection_group"]], "braid() (sage.groups.cubic_braid.cubicbraidelement method)": [[18, "sage.groups.cubic_braid.CubicBraidElement.braid"]], "braid_group() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.braid_group"]], "burau_matrix() (sage.groups.cubic_braid.cubicbraidelement method)": [[18, "sage.groups.cubic_braid.CubicBraidElement.burau_matrix"]], "cardinality() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.cardinality"]], "centralizing_element() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.centralizing_element"]], "classical_invariant_form() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.classical_invariant_form"]], "codegrees() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.codegrees"]], "cubic_braid_subgroup() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.cubic_braid_subgroup"]], "degrees() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.degrees"]], "index_set() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.index_set"]], "is_finite() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.is_finite"]], "order() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.order"]], "sage.groups.cubic_braid": [[18, "module-sage.groups.cubic_braid"]], "simple_reflections() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.simple_reflections"]], "strands() (sage.groups.cubic_braid.cubicbraidgroup method)": [[18, "sage.groups.cubic_braid.CubicBraidGroup.strands"]], "element (sage.groups.finitely_presented.finitelypresentedgroup attribute)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.Element"]], "finitelypresentedgroup (class in sage.groups.finitely_presented)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup"]], "finitelypresentedgroupelement (class in sage.groups.finitely_presented)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroupElement"]], "groupmorphismwithgensimages (class in sage.groups.finitely_presented)": [[19, "sage.groups.finitely_presented.GroupMorphismWithGensImages"]], "rewritingsystem (class in sage.groups.finitely_presented)": [[19, "sage.groups.finitely_presented.RewritingSystem"]], "tietze() (sage.groups.finitely_presented.finitelypresentedgroupelement method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroupElement.Tietze"]], "abelian_invariants() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.abelian_invariants"]], "alexander_matrix() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.alexander_matrix"]], "as_permutation_group() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.as_permutation_group"]], "cardinality() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.cardinality"]], "direct_product() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.direct_product"]], "epimorphisms() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.epimorphisms"]], "finitely_presented_group() (sage.groups.finitely_presented.rewritingsystem method)": [[19, "sage.groups.finitely_presented.RewritingSystem.finitely_presented_group"]], "free_group() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.free_group"]], "free_group() (sage.groups.finitely_presented.rewritingsystem method)": [[19, "sage.groups.finitely_presented.RewritingSystem.free_group"]], "gap() (sage.groups.finitely_presented.rewritingsystem method)": [[19, "sage.groups.finitely_presented.RewritingSystem.gap"]], "is_confluent() (sage.groups.finitely_presented.rewritingsystem method)": [[19, "sage.groups.finitely_presented.RewritingSystem.is_confluent"]], "make_confluent() (sage.groups.finitely_presented.rewritingsystem method)": [[19, "sage.groups.finitely_presented.RewritingSystem.make_confluent"]], "order() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.order"]], "reduce() (sage.groups.finitely_presented.rewritingsystem method)": [[19, "sage.groups.finitely_presented.RewritingSystem.reduce"]], "relations() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.relations"]], "rewriting_system() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.rewriting_system"]], "rules() (sage.groups.finitely_presented.rewritingsystem method)": [[19, "sage.groups.finitely_presented.RewritingSystem.rules"]], "sage.groups.finitely_presented": [[19, "module-sage.groups.finitely_presented"]], "semidirect_product() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.semidirect_product"]], "simplification_isomorphism() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.simplification_isomorphism"]], "simplified() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.simplified"]], "structure_description() (sage.groups.finitely_presented.finitelypresentedgroup method)": [[19, "sage.groups.finitely_presented.FinitelyPresentedGroup.structure_description"]], "wrap_fpgroup() (in module sage.groups.finitely_presented)": [[19, "sage.groups.finitely_presented.wrap_FpGroup"]], "alternatingpresentation() (in module sage.groups.finitely_presented_named)": [[20, "sage.groups.finitely_presented_named.AlternatingPresentation"]], "binarydihedralpresentation() (in module sage.groups.finitely_presented_named)": [[20, "sage.groups.finitely_presented_named.BinaryDihedralPresentation"]], "cyclicpresentation() (in module sage.groups.finitely_presented_named)": [[20, "sage.groups.finitely_presented_named.CyclicPresentation"]], "dicyclicpresentation() (in module sage.groups.finitely_presented_named)": [[20, "sage.groups.finitely_presented_named.DiCyclicPresentation"]], "dihedralpresentation() (in module sage.groups.finitely_presented_named)": [[20, "sage.groups.finitely_presented_named.DihedralPresentation"]], "finitelygeneratedabelianpresentation() (in module sage.groups.finitely_presented_named)": [[20, "sage.groups.finitely_presented_named.FinitelyGeneratedAbelianPresentation"]], "finitelygeneratedheisenbergpresentation() (in module sage.groups.finitely_presented_named)": [[20, "sage.groups.finitely_presented_named.FinitelyGeneratedHeisenbergPresentation"]], "kleinfourpresentation() (in module sage.groups.finitely_presented_named)": [[20, "sage.groups.finitely_presented_named.KleinFourPresentation"]], "quaternionpresentation() (in module sage.groups.finitely_presented_named)": [[20, "sage.groups.finitely_presented_named.QuaternionPresentation"]], "symmetricpresentation() (in module sage.groups.finitely_presented_named)": [[20, "sage.groups.finitely_presented_named.SymmetricPresentation"]], "sage.groups.finitely_presented_named": [[20, "module-sage.groups.finitely_presented_named"]], "element (sage.groups.free_group.freegroup_class attribute)": [[21, "sage.groups.free_group.FreeGroup_class.Element"]], "freegroup() (in module sage.groups.free_group)": [[21, "sage.groups.free_group.FreeGroup"]], "freegroupelement (class in sage.groups.free_group)": [[21, "sage.groups.free_group.FreeGroupElement"]], "freegroup_class (class in sage.groups.free_group)": [[21, "sage.groups.free_group.FreeGroup_class"]], "tietze() (sage.groups.free_group.freegroupelement method)": [[21, "sage.groups.free_group.FreeGroupElement.Tietze"]], "abelian_invariants() (sage.groups.free_group.freegroup_class method)": [[21, "sage.groups.free_group.FreeGroup_class.abelian_invariants"]], "fox_derivative() (sage.groups.free_group.freegroupelement method)": [[21, "sage.groups.free_group.FreeGroupElement.fox_derivative"]], "is_freegroup() (in module sage.groups.free_group)": [[21, "sage.groups.free_group.is_FreeGroup"]], "quotient() (sage.groups.free_group.freegroup_class method)": [[21, "sage.groups.free_group.FreeGroup_class.quotient"]], "rank() (sage.groups.free_group.freegroup_class method)": [[21, "sage.groups.free_group.FreeGroup_class.rank"]], "sage.groups.free_group": [[21, "module-sage.groups.free_group"]], "syllables() (sage.groups.free_group.freegroupelement method)": [[21, "sage.groups.free_group.FreeGroupElement.syllables"]], "wrap_freegroup() (in module sage.groups.free_group)": [[21, "sage.groups.free_group.wrap_FreeGroup"]], "bsgs() (in module sage.groups.generic)": [[22, "sage.groups.generic.bsgs"]], "discrete_log() (in module sage.groups.generic)": [[22, "sage.groups.generic.discrete_log"]], "discrete_log_generic() (in module sage.groups.generic)": [[22, "sage.groups.generic.discrete_log_generic"]], "discrete_log_lambda() (in module sage.groups.generic)": [[22, "sage.groups.generic.discrete_log_lambda"]], "discrete_log_rho() (in module sage.groups.generic)": [[22, "sage.groups.generic.discrete_log_rho"]], "linear_relation() (in module sage.groups.generic)": [[22, "sage.groups.generic.linear_relation"]], "merge_points() (in module sage.groups.generic)": [[22, "sage.groups.generic.merge_points"]], "multiple() (in module sage.groups.generic)": [[22, "sage.groups.generic.multiple"]], "multiples (class in sage.groups.generic)": [[22, "sage.groups.generic.multiples"]], "next() (sage.groups.generic.multiples method)": [[22, "sage.groups.generic.multiples.next"]], "order_from_bounds() (in module sage.groups.generic)": [[22, "sage.groups.generic.order_from_bounds"]], "order_from_multiple() (in module sage.groups.generic)": [[22, "sage.groups.generic.order_from_multiple"]], "sage.groups.generic": [[22, "module-sage.groups.generic"]], "structure_description() (in module sage.groups.generic)": [[22, "sage.groups.generic.structure_description"]], "abeliangroup (class in sage.groups.group)": [[23, "sage.groups.group.AbelianGroup"]], "algebraicgroup (class in sage.groups.group)": [[23, "sage.groups.group.AlgebraicGroup"]], "finitegroup (class in sage.groups.group)": [[23, "sage.groups.group.FiniteGroup"]], "group (class in sage.groups.group)": [[23, "sage.groups.group.Group"]], "is_group() (in module sage.groups.group)": [[23, "sage.groups.group.is_Group"]], "is_abelian() (sage.groups.group.abeliangroup method)": [[23, "sage.groups.group.AbelianGroup.is_abelian"]], "is_abelian() (sage.groups.group.group method)": [[23, "sage.groups.group.Group.is_abelian"]], "is_commutative() (sage.groups.group.group method)": [[23, "sage.groups.group.Group.is_commutative"]], "is_finite() (sage.groups.group.finitegroup method)": [[23, "sage.groups.group.FiniteGroup.is_finite"]], "is_finite() (sage.groups.group.group method)": [[23, "sage.groups.group.Group.is_finite"]], "is_multiplicative() (sage.groups.group.group method)": [[23, "sage.groups.group.Group.is_multiplicative"]], "order() (sage.groups.group.group method)": [[23, "sage.groups.group.Group.order"]], "quotient() (sage.groups.group.group method)": [[23, "sage.groups.group.Group.quotient"]], "sage.groups.group": [[23, "module-sage.groups.group"]], "element (sage.groups.group_exp.groupexp_class attribute)": [[24, "sage.groups.group_exp.GroupExp_Class.Element"]], "groupexp (class in sage.groups.group_exp)": [[24, "sage.groups.group_exp.GroupExp"]], "groupexpelement (class in sage.groups.group_exp)": [[24, "sage.groups.group_exp.GroupExpElement"]], "groupexp_class (class in sage.groups.group_exp)": [[24, "sage.groups.group_exp.GroupExp_Class"]], "an_element() (sage.groups.group_exp.groupexp_class method)": [[24, "sage.groups.group_exp.GroupExp_Class.an_element"]], "group_generators() (sage.groups.group_exp.groupexp_class method)": [[24, "sage.groups.group_exp.GroupExp_Class.group_generators"]], "one() (sage.groups.group_exp.groupexp_class method)": [[24, "sage.groups.group_exp.GroupExp_Class.one"]], "product() (sage.groups.group_exp.groupexp_class method)": [[24, "sage.groups.group_exp.GroupExp_Class.product"]], "sage.groups.group_exp": [[24, "module-sage.groups.group_exp"]], "element (sage.groups.group_semidirect_product.groupsemidirectproduct attribute)": [[25, "sage.groups.group_semidirect_product.GroupSemidirectProduct.Element"]], "groupsemidirectproduct (class in sage.groups.group_semidirect_product)": [[25, "sage.groups.group_semidirect_product.GroupSemidirectProduct"]], "groupsemidirectproductelement (class in sage.groups.group_semidirect_product)": [[25, "sage.groups.group_semidirect_product.GroupSemidirectProductElement"]], "act_to_right() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[25, "sage.groups.group_semidirect_product.GroupSemidirectProduct.act_to_right"]], "construction() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[25, "sage.groups.group_semidirect_product.GroupSemidirectProduct.construction"]], "group_generators() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[25, "sage.groups.group_semidirect_product.GroupSemidirectProduct.group_generators"]], "one() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[25, "sage.groups.group_semidirect_product.GroupSemidirectProduct.one"]], "opposite_semidirect_product() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[25, "sage.groups.group_semidirect_product.GroupSemidirectProduct.opposite_semidirect_product"]], "product() (sage.groups.group_semidirect_product.groupsemidirectproduct method)": [[25, "sage.groups.group_semidirect_product.GroupSemidirectProduct.product"]], "sage.groups.group_semidirect_product": [[25, "module-sage.groups.group_semidirect_product"]], "to_opposite() (sage.groups.group_semidirect_product.groupsemidirectproductelement method)": [[25, "sage.groups.group_semidirect_product.GroupSemidirectProductElement.to_opposite"]], "sage.groups.groups_catalog": [[26, "module-sage.groups.groups_catalog"]], "indexedfreeabeliangroup (class in sage.groups.indexed_free_group)": [[27, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup"]], "indexedfreeabeliangroup.element (class in sage.groups.indexed_free_group)": [[27, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup.Element"]], "indexedfreegroup (class in sage.groups.indexed_free_group)": [[27, "sage.groups.indexed_free_group.IndexedFreeGroup"]], "indexedfreegroup.element (class in sage.groups.indexed_free_group)": [[27, "sage.groups.indexed_free_group.IndexedFreeGroup.Element"]], "indexedgroup (class in sage.groups.indexed_free_group)": [[27, "sage.groups.indexed_free_group.IndexedGroup"]], "gen() (sage.groups.indexed_free_group.indexedfreeabeliangroup method)": [[27, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup.gen"]], "gen() (sage.groups.indexed_free_group.indexedfreegroup method)": [[27, "sage.groups.indexed_free_group.IndexedFreeGroup.gen"]], "gens() (sage.groups.indexed_free_group.indexedgroup method)": [[27, "sage.groups.indexed_free_group.IndexedGroup.gens"]], "group_generators() (sage.groups.indexed_free_group.indexedgroup method)": [[27, "sage.groups.indexed_free_group.IndexedGroup.group_generators"]], "length() (sage.groups.indexed_free_group.indexedfreegroup.element method)": [[27, "sage.groups.indexed_free_group.IndexedFreeGroup.Element.length"]], "one() (sage.groups.indexed_free_group.indexedfreeabeliangroup method)": [[27, "sage.groups.indexed_free_group.IndexedFreeAbelianGroup.one"]], "one() (sage.groups.indexed_free_group.indexedfreegroup method)": [[27, "sage.groups.indexed_free_group.IndexedFreeGroup.one"]], "order() (sage.groups.indexed_free_group.indexedgroup method)": [[27, "sage.groups.indexed_free_group.IndexedGroup.order"]], "rank() (sage.groups.indexed_free_group.indexedgroup method)": [[27, "sage.groups.indexed_free_group.IndexedGroup.rank"]], "sage.groups.indexed_free_group": [[27, "module-sage.groups.indexed_free_group"]], "to_word_list() (sage.groups.indexed_free_group.indexedfreegroup.element method)": [[27, "sage.groups.indexed_free_group.IndexedFreeGroup.Element.to_word_list"]], "element (sage.groups.libgap_group.grouplibgap attribute)": [[28, "sage.groups.libgap_group.GroupLibGAP.Element"]], "grouplibgap (class in sage.groups.libgap_group)": [[28, "sage.groups.libgap_group.GroupLibGAP"]], "sage.groups.libgap_group": [[28, "module-sage.groups.libgap_group"]], "groupmixinlibgap (class in sage.groups.libgap_mixin)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP"]], "cardinality() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.cardinality"]], "center() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.center"]], "character() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.character"]], "character_table() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.character_table"]], "class_function() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.class_function"]], "conjugacy_class() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.conjugacy_class"]], "conjugacy_classes() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.conjugacy_classes"]], "conjugacy_classes_representatives() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.conjugacy_classes_representatives"]], "intersection() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.intersection"]], "irreducible_characters() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.irreducible_characters"]], "is_abelian() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_abelian"]], "is_finite() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_finite"]], "is_isomorphic() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_isomorphic"]], "is_nilpotent() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_nilpotent"]], "is_p_group() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_p_group"]], "is_perfect() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_perfect"]], "is_polycyclic() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_polycyclic"]], "is_simple() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_simple"]], "is_solvable() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_solvable"]], "is_supersolvable() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.is_supersolvable"]], "list() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.list"]], "order() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.order"]], "random_element() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.random_element"]], "sage.groups.libgap_mixin": [[29, "module-sage.groups.libgap_mixin"]], "trivial_character() (sage.groups.libgap_mixin.groupmixinlibgap method)": [[29, "sage.groups.libgap_mixin.GroupMixinLibGAP.trivial_character"]], "element (sage.groups.libgap_morphism.grouphomset_libgap attribute)": [[30, "sage.groups.libgap_morphism.GroupHomset_libgap.Element"]], "grouphomset_libgap (class in sage.groups.libgap_morphism)": [[30, "sage.groups.libgap_morphism.GroupHomset_libgap"]], "groupmorphism_libgap (class in sage.groups.libgap_morphism)": [[30, "sage.groups.libgap_morphism.GroupMorphism_libgap"]], "gap() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[30, "sage.groups.libgap_morphism.GroupMorphism_libgap.gap"]], "image() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[30, "sage.groups.libgap_morphism.GroupMorphism_libgap.image"]], "kernel() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[30, "sage.groups.libgap_morphism.GroupMorphism_libgap.kernel"]], "lift() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[30, "sage.groups.libgap_morphism.GroupMorphism_libgap.lift"]], "natural_map() (sage.groups.libgap_morphism.grouphomset_libgap method)": [[30, "sage.groups.libgap_morphism.GroupHomset_libgap.natural_map"]], "preimage() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[30, "sage.groups.libgap_morphism.GroupMorphism_libgap.preimage"]], "pushforward() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[30, "sage.groups.libgap_morphism.GroupMorphism_libgap.pushforward"]], "sage.groups.libgap_morphism": [[30, "module-sage.groups.libgap_morphism"]], "section() (sage.groups.libgap_morphism.groupmorphism_libgap method)": [[30, "sage.groups.libgap_morphism.GroupMorphism_libgap.section"]], "elementlibgap (class in sage.groups.libgap_wrapper)": [[31, "sage.groups.libgap_wrapper.ElementLibGAP"]], "parentlibgap (class in sage.groups.libgap_wrapper)": [[31, "sage.groups.libgap_wrapper.ParentLibGAP"]], "ambient() (sage.groups.libgap_wrapper.parentlibgap method)": [[31, "sage.groups.libgap_wrapper.ParentLibGAP.ambient"]], "gap() (sage.groups.libgap_wrapper.elementlibgap method)": [[31, "sage.groups.libgap_wrapper.ElementLibGAP.gap"]], "gap() (sage.groups.libgap_wrapper.parentlibgap method)": [[31, "sage.groups.libgap_wrapper.ParentLibGAP.gap"]], "gen() (sage.groups.libgap_wrapper.parentlibgap method)": [[31, "sage.groups.libgap_wrapper.ParentLibGAP.gen"]], "generators() (sage.groups.libgap_wrapper.parentlibgap method)": [[31, "sage.groups.libgap_wrapper.ParentLibGAP.generators"]], "gens() (sage.groups.libgap_wrapper.parentlibgap method)": [[31, "sage.groups.libgap_wrapper.ParentLibGAP.gens"]], "inverse() (sage.groups.libgap_wrapper.elementlibgap method)": [[31, "sage.groups.libgap_wrapper.ElementLibGAP.inverse"]], "is_conjugate() (sage.groups.libgap_wrapper.elementlibgap method)": [[31, "sage.groups.libgap_wrapper.ElementLibGAP.is_conjugate"]], "is_one() (sage.groups.libgap_wrapper.elementlibgap method)": [[31, "sage.groups.libgap_wrapper.ElementLibGAP.is_one"]], "is_subgroup() (sage.groups.libgap_wrapper.parentlibgap method)": [[31, "sage.groups.libgap_wrapper.ParentLibGAP.is_subgroup"]], "multiplicative_order() (sage.groups.libgap_wrapper.elementlibgap method)": [[31, "sage.groups.libgap_wrapper.ElementLibGAP.multiplicative_order"]], "ngens() (sage.groups.libgap_wrapper.parentlibgap method)": [[31, "sage.groups.libgap_wrapper.ParentLibGAP.ngens"]], "normalizer() (sage.groups.libgap_wrapper.elementlibgap method)": [[31, "sage.groups.libgap_wrapper.ElementLibGAP.normalizer"]], "nth_roots() (sage.groups.libgap_wrapper.elementlibgap method)": [[31, "sage.groups.libgap_wrapper.ElementLibGAP.nth_roots"]], "one() (sage.groups.libgap_wrapper.parentlibgap method)": [[31, "sage.groups.libgap_wrapper.ParentLibGAP.one"]], "order() (sage.groups.libgap_wrapper.elementlibgap method)": [[31, "sage.groups.libgap_wrapper.ElementLibGAP.order"]], "sage.groups.libgap_wrapper": [[31, "module-sage.groups.libgap_wrapper"]], "subgroup() (sage.groups.libgap_wrapper.parentlibgap method)": [[31, "sage.groups.libgap_wrapper.ParentLibGAP.subgroup"]], "nilpotentliegroup (class in sage.groups.lie_gps.nilpotent_lie_group)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup"]], "nilpotentliegroup.element (class in sage.groups.lie_gps.nilpotent_lie_group)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.Element"]], "adjoint() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.adjoint"]], "chart_exp1() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.chart_exp1"]], "chart_exp2() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.chart_exp2"]], "conjugation() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.conjugation"]], "exp() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.exp"]], "gens() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.gens"]], "left_invariant_extension() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.left_invariant_extension"]], "left_invariant_frame() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.left_invariant_frame"]], "left_translation() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.left_translation"]], "lie_algebra() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.lie_algebra"]], "livf() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.livf"]], "log() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.log"]], "one() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.one"]], "right_invariant_extension() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.right_invariant_extension"]], "right_invariant_frame() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.right_invariant_frame"]], "right_translation() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.right_translation"]], "rivf() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.rivf"]], "sage.groups.lie_gps.nilpotent_lie_group": [[32, "module-sage.groups.lie_gps.nilpotent_lie_group"]], "step() (sage.groups.lie_gps.nilpotent_lie_group.nilpotentliegroup method)": [[32, "sage.groups.lie_gps.nilpotent_lie_group.NilpotentLieGroup.step"]], "binarydihedralgroup (class in sage.groups.matrix_gps.binary_dihedral)": [[33, "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup"]], "cardinality() (sage.groups.matrix_gps.binary_dihedral.binarydihedralgroup method)": [[33, "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup.cardinality"]], "order() (sage.groups.matrix_gps.binary_dihedral.binarydihedralgroup method)": [[33, "sage.groups.matrix_gps.binary_dihedral.BinaryDihedralGroup.order"]], "sage.groups.matrix_gps.binary_dihedral": [[33, "module-sage.groups.matrix_gps.binary_dihedral"]], "sage.groups.matrix_gps.catalog": [[34, "module-sage.groups.matrix_gps.catalog"]], "coxetermatrixgroup (class in sage.groups.matrix_gps.coxeter_group)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup"]], "coxetermatrixgroup.element (class in sage.groups.matrix_gps.coxeter_group)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element"]], "action_on_root_indices() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.action_on_root_indices"]], "bilinear_form() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.bilinear_form"]], "canonical_matrix() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.canonical_matrix"]], "canonical_representation() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.canonical_representation"]], "coxeter_matrix() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.coxeter_matrix"]], "descents() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.descents"]], "first_descent() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.first_descent"]], "fundamental_weight() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.fundamental_weight"]], "fundamental_weights() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.fundamental_weights"]], "has_right_descent() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup.element method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.Element.has_right_descent"]], "is_commutative() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.is_commutative"]], "is_finite() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.is_finite"]], "order() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.order"]], "positive_roots() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.positive_roots"]], "reflections() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.reflections"]], "roots() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.roots"]], "sage.groups.matrix_gps.coxeter_group": [[35, "module-sage.groups.matrix_gps.coxeter_group"]], "simple_reflection() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.simple_reflection"]], "simple_root_index() (sage.groups.matrix_gps.coxeter_group.coxetermatrixgroup method)": [[35, "sage.groups.matrix_gps.coxeter_group.CoxeterMatrixGroup.simple_root_index"]], "finitelygeneratedmatrixgroup_gap (class in sage.groups.matrix_gps.finitely_generated)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_gap"]], "finitelygeneratedmatrixgroup_generic (class in sage.groups.matrix_gps.finitely_generated)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic"]], "matrixgroup() (in module sage.groups.matrix_gps.finitely_generated)": [[36, "sage.groups.matrix_gps.finitely_generated.MatrixGroup"]], "quaternionmatrixgroupgf3() (in module sage.groups.matrix_gps.finitely_generated)": [[36, "sage.groups.matrix_gps.finitely_generated.QuaternionMatrixGroupGF3"]], "as_permutation_group() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_gap method)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_gap.as_permutation_group"]], "gen() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_generic method)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic.gen"]], "gens() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_generic method)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic.gens"]], "invariant_generators() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_gap method)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_gap.invariant_generators"]], "invariants_of_degree() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_gap method)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_gap.invariants_of_degree"]], "module_composition_factors() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_gap method)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_gap.module_composition_factors"]], "molien_series() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_gap method)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_gap.molien_series"]], "ngens() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_generic method)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_generic.ngens"]], "normalize_square_matrices() (in module sage.groups.matrix_gps.finitely_generated)": [[36, "sage.groups.matrix_gps.finitely_generated.normalize_square_matrices"]], "reynolds_operator() (sage.groups.matrix_gps.finitely_generated.finitelygeneratedmatrixgroup_gap method)": [[36, "sage.groups.matrix_gps.finitely_generated.FinitelyGeneratedMatrixGroup_gap.reynolds_operator"]], "sage.groups.matrix_gps.finitely_generated": [[36, "module-sage.groups.matrix_gps.finitely_generated"]], "matrixgroupelement_gap (class in sage.groups.matrix_gps.group_element)": [[37, "sage.groups.matrix_gps.group_element.MatrixGroupElement_gap"]], "matrixgroupelement_generic (class in sage.groups.matrix_gps.group_element)": [[37, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic"]], "inverse() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[37, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.inverse"]], "is_matrixgroupelement() (in module sage.groups.matrix_gps.group_element)": [[37, "sage.groups.matrix_gps.group_element.is_MatrixGroupElement"]], "is_one() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[37, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.is_one"]], "list() (sage.groups.matrix_gps.group_element.matrixgroupelement_gap method)": [[37, "sage.groups.matrix_gps.group_element.MatrixGroupElement_gap.list"]], "list() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[37, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.list"]], "matrix() (sage.groups.matrix_gps.group_element.matrixgroupelement_gap method)": [[37, "sage.groups.matrix_gps.group_element.MatrixGroupElement_gap.matrix"]], "matrix() (sage.groups.matrix_gps.group_element.matrixgroupelement_generic method)": [[37, "sage.groups.matrix_gps.group_element.MatrixGroupElement_generic.matrix"]], "multiplicative_order() (sage.groups.matrix_gps.group_element.matrixgroupelement_gap method)": [[37, "sage.groups.matrix_gps.group_element.MatrixGroupElement_gap.multiplicative_order"]], "sage.groups.matrix_gps.group_element": [[37, "module-sage.groups.matrix_gps.group_element"]], "word_problem() (sage.groups.matrix_gps.group_element.matrixgroupelement_gap method)": [[37, "sage.groups.matrix_gps.group_element.MatrixGroupElement_gap.word_problem"]], "heisenberggroup (class in sage.groups.matrix_gps.heisenberg)": [[38, "sage.groups.matrix_gps.heisenberg.HeisenbergGroup"]], "cardinality() (sage.groups.matrix_gps.heisenberg.heisenberggroup method)": [[38, "sage.groups.matrix_gps.heisenberg.HeisenbergGroup.cardinality"]], "order() (sage.groups.matrix_gps.heisenberg.heisenberggroup method)": [[38, "sage.groups.matrix_gps.heisenberg.HeisenbergGroup.order"]], "sage.groups.matrix_gps.heisenberg": [[38, "module-sage.groups.matrix_gps.heisenberg"]], "is_matrixgrouphomset() (in module sage.groups.matrix_gps.homset)": [[39, "sage.groups.matrix_gps.homset.is_MatrixGroupHomset"]], "sage.groups.matrix_gps.homset": [[39, "module-sage.groups.matrix_gps.homset"]], "groupactiononquotientmodule (class in sage.groups.matrix_gps.isometries)": [[40, "sage.groups.matrix_gps.isometries.GroupActionOnQuotientModule"]], "groupactiononsubmodule (class in sage.groups.matrix_gps.isometries)": [[40, "sage.groups.matrix_gps.isometries.GroupActionOnSubmodule"]], "groupofisometries (class in sage.groups.matrix_gps.isometries)": [[40, "sage.groups.matrix_gps.isometries.GroupOfIsometries"]], "invariant_bilinear_form() (sage.groups.matrix_gps.isometries.groupofisometries method)": [[40, "sage.groups.matrix_gps.isometries.GroupOfIsometries.invariant_bilinear_form"]], "sage.groups.matrix_gps.isometries": [[40, "module-sage.groups.matrix_gps.isometries"]], "gl() (in module sage.groups.matrix_gps.linear)": [[41, "sage.groups.matrix_gps.linear.GL"]], "linearmatrixgroup_gap (class in sage.groups.matrix_gps.linear)": [[41, "sage.groups.matrix_gps.linear.LinearMatrixGroup_gap"]], "linearmatrixgroup_generic (class in sage.groups.matrix_gps.linear)": [[41, "sage.groups.matrix_gps.linear.LinearMatrixGroup_generic"]], "sl() (in module sage.groups.matrix_gps.linear)": [[41, "sage.groups.matrix_gps.linear.SL"]], "sage.groups.matrix_gps.linear": [[41, "module-sage.groups.matrix_gps.linear"]], "element (sage.groups.matrix_gps.matrix_group.matrixgroup_gap attribute)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_gap.Element"]], "element (sage.groups.matrix_gps.matrix_group.matrixgroup_generic attribute)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic.Element"]], "matrixgroup_base (class in sage.groups.matrix_gps.matrix_group)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base"]], "matrixgroup_gap (class in sage.groups.matrix_gps.matrix_group)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_gap"]], "matrixgroup_generic (class in sage.groups.matrix_gps.matrix_group)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic"]], "ambient() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.ambient"]], "as_matrix_group() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.as_matrix_group"]], "degree() (sage.groups.matrix_gps.matrix_group.matrixgroup_generic method)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic.degree"]], "is_matrixgroup() (in module sage.groups.matrix_gps.matrix_group)": [[42, "sage.groups.matrix_gps.matrix_group.is_MatrixGroup"]], "matrix_space() (sage.groups.matrix_gps.matrix_group.matrixgroup_generic method)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_generic.matrix_space"]], "sage.groups.matrix_gps.matrix_group": [[42, "module-sage.groups.matrix_gps.matrix_group"]], "sign_representation() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.sign_representation"]], "structure_description() (sage.groups.matrix_gps.matrix_group.matrixgroup_gap method)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_gap.structure_description"]], "subgroup() (sage.groups.matrix_gps.matrix_group.matrixgroup_base method)": [[42, "sage.groups.matrix_gps.matrix_group.MatrixGroup_base.subgroup"]], "sage.groups.matrix_gps.morphism": [[43, "module-sage.groups.matrix_gps.morphism"]], "to_libgap() (in module sage.groups.matrix_gps.morphism)": [[43, "sage.groups.matrix_gps.morphism.to_libgap"]], "namedmatrixgroup_gap (class in sage.groups.matrix_gps.named_group)": [[44, "sage.groups.matrix_gps.named_group.NamedMatrixGroup_gap"]], "namedmatrixgroup_generic (class in sage.groups.matrix_gps.named_group)": [[44, "sage.groups.matrix_gps.named_group.NamedMatrixGroup_generic"]], "normalize_args_invariant_form() (in module sage.groups.matrix_gps.named_group)": [[44, "sage.groups.matrix_gps.named_group.normalize_args_invariant_form"]], "normalize_args_vectorspace() (in module sage.groups.matrix_gps.named_group)": [[44, "sage.groups.matrix_gps.named_group.normalize_args_vectorspace"]], "sage.groups.matrix_gps.named_group": [[44, "module-sage.groups.matrix_gps.named_group"]], "go() (in module sage.groups.matrix_gps.orthogonal)": [[45, "sage.groups.matrix_gps.orthogonal.GO"]], "orthogonalmatrixgroup_gap (class in sage.groups.matrix_gps.orthogonal)": [[45, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_gap"]], "orthogonalmatrixgroup_generic (class in sage.groups.matrix_gps.orthogonal)": [[45, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic"]], "so() (in module sage.groups.matrix_gps.orthogonal)": [[45, "sage.groups.matrix_gps.orthogonal.SO"]], "invariant_bilinear_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_gap method)": [[45, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_gap.invariant_bilinear_form"]], "invariant_bilinear_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_generic method)": [[45, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic.invariant_bilinear_form"]], "invariant_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_gap method)": [[45, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_gap.invariant_form"]], "invariant_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_generic method)": [[45, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic.invariant_form"]], "invariant_quadratic_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_gap method)": [[45, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_gap.invariant_quadratic_form"]], "invariant_quadratic_form() (sage.groups.matrix_gps.orthogonal.orthogonalmatrixgroup_generic method)": [[45, "sage.groups.matrix_gps.orthogonal.OrthogonalMatrixGroup_generic.invariant_quadratic_form"]], "normalize_args_e() (in module sage.groups.matrix_gps.orthogonal)": [[45, "sage.groups.matrix_gps.orthogonal.normalize_args_e"]], "sage.groups.matrix_gps.orthogonal": [[45, "module-sage.groups.matrix_gps.orthogonal"]], "sp() (in module sage.groups.matrix_gps.symplectic)": [[46, "sage.groups.matrix_gps.symplectic.Sp"]], "symplecticmatrixgroup_gap (class in sage.groups.matrix_gps.symplectic)": [[46, "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_gap"]], "symplecticmatrixgroup_generic (class in sage.groups.matrix_gps.symplectic)": [[46, "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_generic"]], "invariant_form() (sage.groups.matrix_gps.symplectic.symplecticmatrixgroup_gap method)": [[46, "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_gap.invariant_form"]], "invariant_form() (sage.groups.matrix_gps.symplectic.symplecticmatrixgroup_generic method)": [[46, "sage.groups.matrix_gps.symplectic.SymplecticMatrixGroup_generic.invariant_form"]], "sage.groups.matrix_gps.symplectic": [[46, "module-sage.groups.matrix_gps.symplectic"]], "gu() (in module sage.groups.matrix_gps.unitary)": [[47, "sage.groups.matrix_gps.unitary.GU"]], "su() (in module sage.groups.matrix_gps.unitary)": [[47, "sage.groups.matrix_gps.unitary.SU"]], "unitarymatrixgroup_gap (class in sage.groups.matrix_gps.unitary)": [[47, "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_gap"]], "unitarymatrixgroup_generic (class in sage.groups.matrix_gps.unitary)": [[47, "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_generic"]], "finite_field_sqrt() (in module sage.groups.matrix_gps.unitary)": [[47, "sage.groups.matrix_gps.unitary.finite_field_sqrt"]], "invariant_form() (sage.groups.matrix_gps.unitary.unitarymatrixgroup_gap method)": [[47, "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_gap.invariant_form"]], "invariant_form() (sage.groups.matrix_gps.unitary.unitarymatrixgroup_generic method)": [[47, "sage.groups.matrix_gps.unitary.UnitaryMatrixGroup_generic.invariant_form"]], "sage.groups.matrix_gps.unitary": [[47, "module-sage.groups.matrix_gps.unitary"]], "abstractargument (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.AbstractArgument"]], "abstractargumentgroup (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.AbstractArgumentGroup"]], "argumentbyelement (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.ArgumentByElement"]], "argumentbyelementgroup (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.ArgumentByElementGroup"]], "argumentgroup (in module sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.ArgumentGroup"]], "argumentgroupfactory (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory"]], "element (sage.groups.misc_gps.argument_groups.abstractargumentgroup attribute)": [[48, "sage.groups.misc_gps.argument_groups.AbstractArgumentGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.argumentbyelementgroup attribute)": [[48, "sage.groups.misc_gps.argument_groups.ArgumentByElementGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.rootsofunitygroup attribute)": [[48, "sage.groups.misc_gps.argument_groups.RootsOfUnityGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.signgroup attribute)": [[48, "sage.groups.misc_gps.argument_groups.SignGroup.Element"]], "element (sage.groups.misc_gps.argument_groups.unitcirclegroup attribute)": [[48, "sage.groups.misc_gps.argument_groups.UnitCircleGroup.Element"]], "rootofunity (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.RootOfUnity"]], "rootsofunitygroup (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.RootsOfUnityGroup"]], "sign (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.Sign"]], "signgroup (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.SignGroup"]], "unitcirclegroup (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.UnitCircleGroup"]], "unitcirclepoint (class in sage.groups.misc_gps.argument_groups)": [[48, "sage.groups.misc_gps.argument_groups.UnitCirclePoint"]], "create_key_and_extra_args() (sage.groups.misc_gps.argument_groups.argumentgroupfactory method)": [[48, "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory.create_key_and_extra_args"]], "create_object() (sage.groups.misc_gps.argument_groups.argumentgroupfactory method)": [[48, "sage.groups.misc_gps.argument_groups.ArgumentGroupFactory.create_object"]], "exponent (sage.groups.misc_gps.argument_groups.unitcirclepoint property)": [[48, "sage.groups.misc_gps.argument_groups.UnitCirclePoint.exponent"]], "exponent_denominator() (sage.groups.misc_gps.argument_groups.rootofunity method)": [[48, "sage.groups.misc_gps.argument_groups.RootOfUnity.exponent_denominator"]], "exponent_numerator() (sage.groups.misc_gps.argument_groups.rootofunity method)": [[48, "sage.groups.misc_gps.argument_groups.RootOfUnity.exponent_numerator"]], "is_minus_one() (sage.groups.misc_gps.argument_groups.sign method)": [[48, "sage.groups.misc_gps.argument_groups.Sign.is_minus_one"]], "is_minus_one() (sage.groups.misc_gps.argument_groups.unitcirclepoint method)": [[48, "sage.groups.misc_gps.argument_groups.UnitCirclePoint.is_minus_one"]], "is_one() (sage.groups.misc_gps.argument_groups.sign method)": [[48, "sage.groups.misc_gps.argument_groups.Sign.is_one"]], "is_one() (sage.groups.misc_gps.argument_groups.unitcirclepoint method)": [[48, "sage.groups.misc_gps.argument_groups.UnitCirclePoint.is_one"]], "sage.groups.misc_gps.argument_groups": [[48, "module-sage.groups.misc_gps.argument_groups"]], "element (sage.groups.misc_gps.imaginary_groups.imaginarygroup attribute)": [[49, "sage.groups.misc_gps.imaginary_groups.ImaginaryGroup.Element"]], "imaginaryelement (class in sage.groups.misc_gps.imaginary_groups)": [[49, "sage.groups.misc_gps.imaginary_groups.ImaginaryElement"]], "imaginarygroup (class in sage.groups.misc_gps.imaginary_groups)": [[49, "sage.groups.misc_gps.imaginary_groups.ImaginaryGroup"]], "imag() (sage.groups.misc_gps.imaginary_groups.imaginaryelement method)": [[49, "sage.groups.misc_gps.imaginary_groups.ImaginaryElement.imag"]], "real() (sage.groups.misc_gps.imaginary_groups.imaginaryelement method)": [[49, "sage.groups.misc_gps.imaginary_groups.ImaginaryElement.real"]], "sage.groups.misc_gps.imaginary_groups": [[49, "module-sage.groups.misc_gps.imaginary_groups"]], "sage.groups.misc_gps.misc_groups": [[50, "module-sage.groups.misc_gps.misc_groups"]], "parigroup (class in sage.groups.pari_group)": [[51, "sage.groups.pari_group.PariGroup"]], "cardinality() (sage.groups.pari_group.parigroup method)": [[51, "sage.groups.pari_group.PariGroup.cardinality"]], "degree() (sage.groups.pari_group.parigroup method)": [[51, "sage.groups.pari_group.PariGroup.degree"]], "label() (sage.groups.pari_group.parigroup method)": [[51, "sage.groups.pari_group.PariGroup.label"]], "order() (sage.groups.pari_group.parigroup method)": [[51, "sage.groups.pari_group.PariGroup.order"]], "permutation_group() (sage.groups.pari_group.parigroup method)": [[51, "sage.groups.pari_group.PariGroup.permutation_group"]], "sage.groups.pari_group": [[51, "module-sage.groups.pari_group"]], "signature() (sage.groups.pari_group.parigroup method)": [[51, "sage.groups.pari_group.PariGroup.signature"]], "transitive_number() (sage.groups.pari_group.parigroup method)": [[51, "sage.groups.pari_group.PariGroup.transitive_number"]], "permutationgroupelement() (in module sage.groups.perm_gps.constructor)": [[52, "sage.groups.perm_gps.constructor.PermutationGroupElement"]], "sage.groups.perm_gps.constructor": [[52, "module-sage.groups.perm_gps.constructor"]], "standardize_generator() (in module sage.groups.perm_gps.constructor)": [[52, "sage.groups.perm_gps.constructor.standardize_generator"]], "string_to_tuples() (in module sage.groups.perm_gps.constructor)": [[52, "sage.groups.perm_gps.constructor.string_to_tuples"]], "b() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.B"]], "cubegroup (class in sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup"]], "d() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.D"]], "f() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.F"]], "l() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.L"]], "r() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.R"]], "rubikscube (class in sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube"]], "u() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.U"]], "color_of_square() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.color_of_square"]], "create_poly() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.create_poly"]], "cubie() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube.cubie"]], "cubie_centers() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.cubie_centers"]], "cubie_colors() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.cubie_colors"]], "cubie_faces() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.cubie_faces"]], "display2d() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.display2d"]], "faces() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.faces"]], "facets() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.facets"]], "facets() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube.facets"]], "gen_names() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.gen_names"]], "index2singmaster() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.index2singmaster"]], "inv_list() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.inv_list"]], "legal() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.legal"]], "move() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.move"]], "move() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube.move"]], "parse() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.parse"]], "plot() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube.plot"]], "plot3d() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube.plot3d"]], "plot3d_cube() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.plot3d_cube"]], "plot3d_cubie() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.plot3d_cubie"]], "plot_cube() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.plot_cube"]], "polygon_plot3d() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.polygon_plot3d"]], "repr2d() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.repr2d"]], "rotation_list() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.rotation_list"]], "sage.groups.perm_gps.cubegroup": [[53, "module-sage.groups.perm_gps.cubegroup"]], "scramble() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube.scramble"]], "show() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube.show"]], "show3d() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube.show3d"]], "solve() (sage.groups.perm_gps.cubegroup.cubegroup method)": [[53, "sage.groups.perm_gps.cubegroup.CubeGroup.solve"]], "solve() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube.solve"]], "undo() (sage.groups.perm_gps.cubegroup.rubikscube method)": [[53, "sage.groups.perm_gps.cubegroup.RubiksCube.undo"]], "xproj() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.xproj"]], "yproj() (in module sage.groups.perm_gps.cubegroup)": [[53, "sage.groups.perm_gps.cubegroup.yproj"]], "sage.groups.perm_gps.partn_ref.canonical_augmentation": [[54, "module-sage.groups.perm_gps.partn_ref.canonical_augmentation"]], "op_represent() (in module sage.groups.perm_gps.partn_ref.data_structures)": [[55, "sage.groups.perm_gps.partn_ref.data_structures.OP_represent"]], "ps_represent() (in module sage.groups.perm_gps.partn_ref.data_structures)": [[55, "sage.groups.perm_gps.partn_ref.data_structures.PS_represent"]], "sc_test_list_perms() (in module sage.groups.perm_gps.partn_ref.data_structures)": [[55, "sage.groups.perm_gps.partn_ref.data_structures.SC_test_list_perms"]], "sage.groups.perm_gps.partn_ref.data_structures": [[55, "module-sage.groups.perm_gps.partn_ref.data_structures"]], "graphstruct (class in sage.groups.perm_gps.partn_ref.refinement_graphs)": [[56, "sage.groups.perm_gps.partn_ref.refinement_graphs.GraphStruct"]], "all_labeled_graphs() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[56, "sage.groups.perm_gps.partn_ref.refinement_graphs.all_labeled_graphs"]], "coarsest_equitable_refinement() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[56, "sage.groups.perm_gps.partn_ref.refinement_graphs.coarsest_equitable_refinement"]], "generate_dense_graphs_edge_addition() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[56, "sage.groups.perm_gps.partn_ref.refinement_graphs.generate_dense_graphs_edge_addition"]], "generate_dense_graphs_vert_addition() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[56, "sage.groups.perm_gps.partn_ref.refinement_graphs.generate_dense_graphs_vert_addition"]], "get_orbits() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[56, "sage.groups.perm_gps.partn_ref.refinement_graphs.get_orbits"]], "isomorphic() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[56, "sage.groups.perm_gps.partn_ref.refinement_graphs.isomorphic"]], "orbit_partition() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[56, "sage.groups.perm_gps.partn_ref.refinement_graphs.orbit_partition"]], "random_tests() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[56, "sage.groups.perm_gps.partn_ref.refinement_graphs.random_tests"]], "sage.groups.perm_gps.partn_ref.refinement_graphs": [[56, "module-sage.groups.perm_gps.partn_ref.refinement_graphs"]], "search_tree() (in module sage.groups.perm_gps.partn_ref.refinement_graphs)": [[56, "sage.groups.perm_gps.partn_ref.refinement_graphs.search_tree"]], "is_isomorphic() (in module sage.groups.perm_gps.partn_ref.refinement_lists)": [[57, "sage.groups.perm_gps.partn_ref.refinement_lists.is_isomorphic"]], "sage.groups.perm_gps.partn_ref.refinement_lists": [[57, "module-sage.groups.perm_gps.partn_ref.refinement_lists"]], "matrixstruct (class in sage.groups.perm_gps.partn_ref.refinement_matrices)": [[58, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct"]], "automorphism_group() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[58, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.automorphism_group"]], "canonical_relabeling() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[58, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.canonical_relabeling"]], "display() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[58, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.display"]], "is_isomorphic() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[58, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.is_isomorphic"]], "random_tests() (in module sage.groups.perm_gps.partn_ref.refinement_matrices)": [[58, "sage.groups.perm_gps.partn_ref.refinement_matrices.random_tests"]], "run() (sage.groups.perm_gps.partn_ref.refinement_matrices.matrixstruct method)": [[58, "sage.groups.perm_gps.partn_ref.refinement_matrices.MatrixStruct.run"]], "sage.groups.perm_gps.partn_ref.refinement_matrices": [[58, "module-sage.groups.perm_gps.partn_ref.refinement_matrices"]], "element (sage.groups.perm_gps.permgroup.permutationgroup_generic attribute)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.Element"]], "permutationgroup() (in module sage.groups.perm_gps.permgroup)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup"]], "permutationgroup_action (class in sage.groups.perm_gps.permgroup)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_action"]], "permutationgroup_generic (class in sage.groups.perm_gps.permgroup)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic"]], "permutationgroup_subgroup (class in sage.groups.perm_gps.permgroup)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup"]], "subgroup (sage.groups.perm_gps.permgroup.permutationgroup_generic attribute)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.Subgroup"]], "ambient_group() (sage.groups.perm_gps.permgroup.permutationgroup_subgroup method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup.ambient_group"]], "as_finitely_presented_group() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.as_finitely_presented_group"]], "base() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.base"]], "blocks_all() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.blocks_all"]], "cardinality() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cardinality"]], "center() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.center"]], "centralizer() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.centralizer"]], "character() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.character"]], "character_table() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.character_table"]], "cohomology() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cohomology"]], "cohomology_part() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cohomology_part"]], "commutator() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.commutator"]], "composition_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.composition_series"]], "conjugacy_class() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_class"]], "conjugacy_classes() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_classes"]], "conjugacy_classes_representatives() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_classes_representatives"]], "conjugacy_classes_subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugacy_classes_subgroups"]], "conjugate() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.conjugate"]], "construction() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.construction"]], "cosets() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.cosets"]], "degree() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.degree"]], "derived_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.derived_series"]], "direct_product() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.direct_product"]], "direct_product_permgroups() (in module sage.groups.perm_gps.permgroup)": [[59, "sage.groups.perm_gps.permgroup.direct_product_permgroups"]], "domain() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.domain"]], "exponent() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.exponent"]], "fitting_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.fitting_subgroup"]], "fixed_points() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.fixed_points"]], "frattini_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.frattini_subgroup"]], "from_gap_list() (in module sage.groups.perm_gps.permgroup)": [[59, "sage.groups.perm_gps.permgroup.from_gap_list"]], "gap() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gap"]], "gen() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gen"]], "gens() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gens"]], "gens_small() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.gens_small"]], "group_id() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.group_id"]], "group_primitive_id() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.group_primitive_id"]], "hap_decorator() (in module sage.groups.perm_gps.permgroup)": [[59, "sage.groups.perm_gps.permgroup.hap_decorator"]], "has_element() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.has_element"]], "has_regular_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.has_regular_subgroup"]], "holomorph() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.holomorph"]], "homology() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.homology"]], "homology_part() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.homology_part"]], "id() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.id"]], "identity() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.identity"]], "intersection() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.intersection"]], "irreducible_characters() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.irreducible_characters"]], "is_abelian() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_abelian"]], "is_commutative() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_commutative"]], "is_cyclic() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_cyclic"]], "is_elementary_abelian() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_elementary_abelian"]], "is_isomorphic() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_isomorphic"]], "is_monomial() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_monomial"]], "is_nilpotent() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_nilpotent"]], "is_normal() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_normal"]], "is_normal() (sage.groups.perm_gps.permgroup.permutationgroup_subgroup method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_subgroup.is_normal"]], "is_perfect() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_perfect"]], "is_pgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_pgroup"]], "is_polycyclic() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_polycyclic"]], "is_primitive() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_primitive"]], "is_regular() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_regular"]], "is_semi_regular() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_semi_regular"]], "is_simple() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_simple"]], "is_solvable() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_solvable"]], "is_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_subgroup"]], "is_supersolvable() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_supersolvable"]], "is_transitive() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.is_transitive"]], "isomorphism_to() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.isomorphism_to"]], "isomorphism_type_info_simple_group() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.isomorphism_type_info_simple_group"]], "iteration() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.iteration"]], "largest_moved_point() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.largest_moved_point"]], "list() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.list"]], "load_hap() (in module sage.groups.perm_gps.permgroup)": [[59, "sage.groups.perm_gps.permgroup.load_hap"]], "lower_central_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.lower_central_series"]], "minimal_generating_set() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.minimal_generating_set"]], "molien_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.molien_series"]], "ngens() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.ngens"]], "non_fixed_points() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.non_fixed_points"]], "normal_subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.normal_subgroups"]], "normalizer() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.normalizer"]], "normalizes() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.normalizes"]], "one() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.one"]], "orbit() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.orbit"]], "orbits() (sage.groups.perm_gps.permgroup.permutationgroup_action method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_action.orbits"]], "orbits() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.orbits"]], "order() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.order"]], "poincare_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.poincare_series"]], "quotient() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.quotient"]], "random_element() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.random_element"]], "representative_action() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.representative_action"]], "sage.groups.perm_gps.permgroup": [[59, "module-sage.groups.perm_gps.permgroup"]], "semidirect_product() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.semidirect_product"]], "sign_representation() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.sign_representation"]], "smallest_moved_point() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.smallest_moved_point"]], "socle() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.socle"]], "solvable_radical() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.solvable_radical"]], "stabilizer() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.stabilizer"]], "strong_generating_system() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.strong_generating_system"]], "structure_description() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.structure_description"]], "subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.subgroup"]], "subgroups() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.subgroups"]], "sylow_subgroup() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.sylow_subgroup"]], "transversals() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.transversals"]], "trivial_character() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.trivial_character"]], "upper_central_series() (sage.groups.perm_gps.permgroup.permutationgroup_generic method)": [[59, "sage.groups.perm_gps.permgroup.PermutationGroup_generic.upper_central_series"]], "permutationgroupelement (class in sage.groups.perm_gps.permgroup_element)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement"]], "symmetricgroupelement (class in sage.groups.perm_gps.permgroup_element)": [[60, "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement"]], "absolute_length() (sage.groups.perm_gps.permgroup_element.symmetricgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement.absolute_length"]], "cycle_string() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycle_string"]], "cycle_tuples() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycle_tuples"]], "cycle_type() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycle_type"]], "cycles() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.cycles"]], "dict() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.dict"]], "domain() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.domain"]], "gap() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.gap"]], "has_descent() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.has_descent"]], "has_left_descent() (sage.groups.perm_gps.permgroup_element.symmetricgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.SymmetricGroupElement.has_left_descent"]], "inverse() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.inverse"]], "is_permutationgroupelement() (in module sage.groups.perm_gps.permgroup_element)": [[60, "sage.groups.perm_gps.permgroup_element.is_PermutationGroupElement"]], "make_permgroup_element() (in module sage.groups.perm_gps.permgroup_element)": [[60, "sage.groups.perm_gps.permgroup_element.make_permgroup_element"]], "make_permgroup_element_v2() (in module sage.groups.perm_gps.permgroup_element)": [[60, "sage.groups.perm_gps.permgroup_element.make_permgroup_element_v2"]], "matrix() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.matrix"]], "multiplicative_order() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.multiplicative_order"]], "orbit() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.orbit"]], "sage.groups.perm_gps.permgroup_element": [[60, "module-sage.groups.perm_gps.permgroup_element"]], "sign() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.sign"]], "tuple() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.tuple"]], "word_problem() (sage.groups.perm_gps.permgroup_element.permutationgroupelement method)": [[60, "sage.groups.perm_gps.permgroup_element.PermutationGroupElement.word_problem"]], "permutationgroupmorphism (class in sage.groups.perm_gps.permgroup_morphism)": [[61, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism"]], "permutationgroupmorphism_from_gap (class in sage.groups.perm_gps.permgroup_morphism)": [[61, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism_from_gap"]], "permutationgroupmorphism_id (class in sage.groups.perm_gps.permgroup_morphism)": [[61, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism_id"]], "permutationgroupmorphism_im_gens (class in sage.groups.perm_gps.permgroup_morphism)": [[61, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism_im_gens"]], "image() (sage.groups.perm_gps.permgroup_morphism.permutationgroupmorphism method)": [[61, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism.image"]], "is_permutationgroupmorphism() (in module sage.groups.perm_gps.permgroup_morphism)": [[61, "sage.groups.perm_gps.permgroup_morphism.is_PermutationGroupMorphism"]], "kernel() (sage.groups.perm_gps.permgroup_morphism.permutationgroupmorphism method)": [[61, "sage.groups.perm_gps.permgroup_morphism.PermutationGroupMorphism.kernel"]], "sage.groups.perm_gps.permgroup_morphism": [[61, "module-sage.groups.perm_gps.permgroup_morphism"]], "alternatinggroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.AlternatingGroup"]], "complexreflectiongroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup"]], "cyclicpermutationgroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup"]], "dicyclicgroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.DiCyclicGroup"]], "dihedralgroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.DihedralGroup"]], "element (sage.groups.perm_gps.permgroup_named.symmetricgroup attribute)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.Element"]], "generaldihedralgroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.GeneralDihedralGroup"]], "jankogroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.JankoGroup"]], "kleinfourgroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.KleinFourGroup"]], "mathieugroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.MathieuGroup"]], "pgl (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PGL"]], "pgu (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PGU"]], "psl (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PSL"]], "psp (in module sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PSP"]], "psu (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PSU"]], "psp (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PSp"]], "permutationgroup_plg (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg"]], "permutationgroup_pug (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PermutationGroup_pug"]], "permutationgroup_symalt (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PermutationGroup_symalt"]], "permutationgroup_unique (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PermutationGroup_unique"]], "primitivegroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PrimitiveGroup"]], "primitivegroups() (in module sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PrimitiveGroups"]], "primitivegroupsall (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsAll"]], "primitivegroupsofdegree (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsOfDegree"]], "quaterniongroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.QuaternionGroup"]], "semidihedralgroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.SemidihedralGroup"]], "splitmetacyclicgroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.SplitMetacyclicGroup"]], "suzukigroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.SuzukiGroup"]], "suzukisporadicgroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.SuzukiSporadicGroup"]], "symmetricgroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup"]], "transitivegroup (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.TransitiveGroup"]], "transitivegroups() (in module sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.TransitiveGroups"]], "transitivegroupsall (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.TransitiveGroupsAll"]], "transitivegroupsofdegree (class in sage.groups.perm_gps.permgroup_named)": [[62, "sage.groups.perm_gps.permgroup_named.TransitiveGroupsOfDegree"]], "algebra() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.algebra"]], "as_abeliangroup() (sage.groups.perm_gps.permgroup_named.cyclicpermutationgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup.as_AbelianGroup"]], "base_ring() (sage.groups.perm_gps.permgroup_named.permutationgroup_plg method)": [[62, "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg.base_ring"]], "base_ring() (sage.groups.perm_gps.permgroup_named.suzukigroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SuzukiGroup.base_ring"]], "cardinality() (sage.groups.perm_gps.permgroup_named.primitivegroupsofdegree method)": [[62, "sage.groups.perm_gps.permgroup_named.PrimitiveGroupsOfDegree.cardinality"]], "cardinality() (sage.groups.perm_gps.permgroup_named.transitivegroupsofdegree method)": [[62, "sage.groups.perm_gps.permgroup_named.TransitiveGroupsOfDegree.cardinality"]], "cartan_type() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.cartan_type"]], "codegrees() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[62, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.codegrees"]], "conjugacy_class() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_class"]], "conjugacy_classes() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_classes"]], "conjugacy_classes_iterator() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_classes_iterator"]], "conjugacy_classes_representatives() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.conjugacy_classes_representatives"]], "coxeter_matrix() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.coxeter_matrix"]], "degree() (sage.groups.perm_gps.permgroup_named.transitivegroup method)": [[62, "sage.groups.perm_gps.permgroup_named.TransitiveGroup.degree"]], "degrees() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[62, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.degrees"]], "field_of_definition() (sage.groups.perm_gps.permgroup_named.permutationgroup_pug method)": [[62, "sage.groups.perm_gps.permgroup_named.PermutationGroup_pug.field_of_definition"]], "group_primitive_id() (sage.groups.perm_gps.permgroup_named.primitivegroup method)": [[62, "sage.groups.perm_gps.permgroup_named.PrimitiveGroup.group_primitive_id"]], "index_set() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[62, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.index_set"]], "index_set() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.index_set"]], "is_abelian() (sage.groups.perm_gps.permgroup_named.cyclicpermutationgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup.is_abelian"]], "is_abelian() (sage.groups.perm_gps.permgroup_named.dicyclicgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.DiCyclicGroup.is_abelian"]], "is_commutative() (sage.groups.perm_gps.permgroup_named.cyclicpermutationgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.CyclicPermutationGroup.is_commutative"]], "is_commutative() (sage.groups.perm_gps.permgroup_named.dicyclicgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.DiCyclicGroup.is_commutative"]], "major_index() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.major_index"]], "matrix_degree() (sage.groups.perm_gps.permgroup_named.permutationgroup_plg method)": [[62, "sage.groups.perm_gps.permgroup_named.PermutationGroup_plg.matrix_degree"]], "ramification_module_decomposition_hurwitz_curve() (sage.groups.perm_gps.permgroup_named.psl method)": [[62, "sage.groups.perm_gps.permgroup_named.PSL.ramification_module_decomposition_hurwitz_curve"]], "ramification_module_decomposition_modular_curve() (sage.groups.perm_gps.permgroup_named.psl method)": [[62, "sage.groups.perm_gps.permgroup_named.PSL.ramification_module_decomposition_modular_curve"]], "reflections() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.reflections"]], "sage.groups.perm_gps.permgroup_named": [[62, "module-sage.groups.perm_gps.permgroup_named"]], "simple_reflection() (sage.groups.perm_gps.permgroup_named.complexreflectiongroup method)": [[62, "sage.groups.perm_gps.permgroup_named.ComplexReflectionGroup.simple_reflection"]], "simple_reflection() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.simple_reflection"]], "transitive_number() (sage.groups.perm_gps.permgroup_named.transitivegroup method)": [[62, "sage.groups.perm_gps.permgroup_named.TransitiveGroup.transitive_number"]], "young_subgroup() (sage.groups.perm_gps.permgroup_named.symmetricgroup method)": [[62, "sage.groups.perm_gps.permgroup_named.SymmetricGroup.young_subgroup"]], "sage.groups.perm_gps.permutation_groups_catalog": [[63, "module-sage.groups.perm_gps.permutation_groups_catalog"]], "permutationsconjugacyclass (class in sage.groups.perm_gps.symgp_conjugacy_class)": [[64, "sage.groups.perm_gps.symgp_conjugacy_class.PermutationsConjugacyClass"]], "symmetricgroupconjugacyclass (class in sage.groups.perm_gps.symgp_conjugacy_class)": [[64, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClass"]], "symmetricgroupconjugacyclassmixin (class in sage.groups.perm_gps.symgp_conjugacy_class)": [[64, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClassMixin"]], "conjugacy_class_iterator() (in module sage.groups.perm_gps.symgp_conjugacy_class)": [[64, "sage.groups.perm_gps.symgp_conjugacy_class.conjugacy_class_iterator"]], "default_representative() (in module sage.groups.perm_gps.symgp_conjugacy_class)": [[64, "sage.groups.perm_gps.symgp_conjugacy_class.default_representative"]], "partition() (sage.groups.perm_gps.symgp_conjugacy_class.symmetricgroupconjugacyclassmixin method)": [[64, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClassMixin.partition"]], "sage.groups.perm_gps.symgp_conjugacy_class": [[64, "module-sage.groups.perm_gps.symgp_conjugacy_class"]], "set() (sage.groups.perm_gps.symgp_conjugacy_class.permutationsconjugacyclass method)": [[64, "sage.groups.perm_gps.symgp_conjugacy_class.PermutationsConjugacyClass.set"]], "set() (sage.groups.perm_gps.symgp_conjugacy_class.symmetricgroupconjugacyclass method)": [[64, "sage.groups.perm_gps.symgp_conjugacy_class.SymmetricGroupConjugacyClass.set"]], "cohomologyraag (class in sage.groups.raag)": [[65, "sage.groups.raag.CohomologyRAAG"]], "cohomologyraag.element (class in sage.groups.raag)": [[65, "sage.groups.raag.CohomologyRAAG.Element"]], "rightangledartingroup (class in sage.groups.raag)": [[65, "sage.groups.raag.RightAngledArtinGroup"]], "rightangledartingroup.element (class in sage.groups.raag)": [[65, "sage.groups.raag.RightAngledArtinGroup.Element"]], "algebra_generators() (sage.groups.raag.cohomologyraag method)": [[65, "sage.groups.raag.CohomologyRAAG.algebra_generators"]], "cohomology() (sage.groups.raag.rightangledartingroup method)": [[65, "sage.groups.raag.RightAngledArtinGroup.cohomology"]], "degree_on_basis() (sage.groups.raag.cohomologyraag method)": [[65, "sage.groups.raag.CohomologyRAAG.degree_on_basis"]], "gen() (sage.groups.raag.cohomologyraag method)": [[65, "sage.groups.raag.CohomologyRAAG.gen"]], "gen() (sage.groups.raag.rightangledartingroup method)": [[65, "sage.groups.raag.RightAngledArtinGroup.gen"]], "gens() (sage.groups.raag.cohomologyraag method)": [[65, "sage.groups.raag.CohomologyRAAG.gens"]], "gens() (sage.groups.raag.rightangledartingroup method)": [[65, "sage.groups.raag.RightAngledArtinGroup.gens"]], "graph() (sage.groups.raag.rightangledartingroup method)": [[65, "sage.groups.raag.RightAngledArtinGroup.graph"]], "ngens() (sage.groups.raag.cohomologyraag method)": [[65, "sage.groups.raag.CohomologyRAAG.ngens"]], "ngens() (sage.groups.raag.rightangledartingroup method)": [[65, "sage.groups.raag.RightAngledArtinGroup.ngens"]], "one() (sage.groups.raag.rightangledartingroup method)": [[65, "sage.groups.raag.RightAngledArtinGroup.one"]], "one_basis() (sage.groups.raag.cohomologyraag method)": [[65, "sage.groups.raag.CohomologyRAAG.one_basis"]], "one_element() (sage.groups.raag.rightangledartingroup method)": [[65, "sage.groups.raag.RightAngledArtinGroup.one_element"]], "sage.groups.raag": [[65, "module-sage.groups.raag"]], "semimonomialtransformation (class in sage.groups.semimonomial_transformations.semimonomial_transformation)": [[66, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation"]], "get_autom() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[66, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_autom"]], "get_perm() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[66, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_perm"]], "get_v() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[66, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_v"]], "get_v_inverse() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[66, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.get_v_inverse"]], "invert_v() (sage.groups.semimonomial_transformations.semimonomial_transformation.semimonomialtransformation method)": [[66, "sage.groups.semimonomial_transformations.semimonomial_transformation.SemimonomialTransformation.invert_v"]], "sage.groups.semimonomial_transformations.semimonomial_transformation": [[66, "module-sage.groups.semimonomial_transformations.semimonomial_transformation"]], "element (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup attribute)": [[67, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.Element"]], "semimonomialactionmat (class in sage.groups.semimonomial_transformations.semimonomial_transformation_group)": [[67, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialActionMat"]], "semimonomialactionvec (class in sage.groups.semimonomial_transformations.semimonomial_transformation_group)": [[67, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialActionVec"]], "semimonomialtransformationgroup (class in sage.groups.semimonomial_transformations.semimonomial_transformation_group)": [[67, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup"]], "base_ring() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[67, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.base_ring"]], "degree() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[67, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.degree"]], "gens() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[67, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.gens"]], "order() (sage.groups.semimonomial_transformations.semimonomial_transformation_group.semimonomialtransformationgroup method)": [[67, "sage.groups.semimonomial_transformations.semimonomial_transformation_group.SemimonomialTransformationGroup.order"]], "sage.groups.semimonomial_transformations.semimonomial_transformation_group": [[67, "module-sage.groups.semimonomial_transformations.semimonomial_transformation_group"]]}})