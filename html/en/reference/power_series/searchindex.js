Search.setIndex({"docnames": ["index", "sage/rings/laurent_series_ring", "sage/rings/laurent_series_ring_element", "sage/rings/lazy_series", "sage/rings/lazy_series_ring", "sage/rings/multi_power_series_ring", "sage/rings/multi_power_series_ring_element", "sage/rings/power_series_pari", "sage/rings/power_series_poly", "sage/rings/power_series_ring", "sage/rings/power_series_ring_element", "sage/rings/puiseux_series_ring", "sage/rings/puiseux_series_ring_element", "sage/rings/tate_algebra"], "filenames": ["index.rst", "sage/rings/laurent_series_ring.rst", "sage/rings/laurent_series_ring_element.rst", "sage/rings/lazy_series.rst", "sage/rings/lazy_series_ring.rst", "sage/rings/multi_power_series_ring.rst", "sage/rings/multi_power_series_ring_element.rst", "sage/rings/power_series_pari.rst", "sage/rings/power_series_poly.rst", "sage/rings/power_series_ring.rst", "sage/rings/power_series_ring_element.rst", "sage/rings/puiseux_series_ring.rst", "sage/rings/puiseux_series_ring_element.rst", "sage/rings/tate_algebra.rst"], "titles": ["Power Series Rings and Laurent Series Rings", "Laurent Series Rings", "Laurent Series", "Lazy Series", "Lazy Series Rings", "Multivariate Power Series Rings", "Multivariate Power Series", "Power series implemented using PARI", "Power Series Methods", "Power Series Rings", "Power Series", "Puiseux Series Ring", "Puiseux Series Ring Element", "Tate algebras"], "terms": {"method": [0, 1, 2, 3, 6, 9, 10, 12, 13], "implement": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10], "us": [0, 1, 3, 4, 5, 6, 8, 9, 10, 13], "pari": [0, 2, 8, 10], "multivari": [0, 3, 4, 9, 10], "lazi": [0, 10], "puiseux": 0, "element": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13], "tate": 0, "algebra": [0, 1, 3, 4, 11], "index": [0, 3, 4, 8, 12, 13], "modul": [0, 2, 3, 8], "search": 0, "page": 0, "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "sage": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "r": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "laurentseriesr": [1, 2, 12], "qq": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "x": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "base_r": [1, 4, 5, 9, 10, 13], "ration": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12], "field": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "gf": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "17": [1, 2, 3, 6, 7, 8, 9, 10, 11], "y": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "over": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "univari": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "polynomi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "finit": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13], "size": [1, 2, 4, 5, 6, 9, 10, 11], "misc": [1, 8, 9], "default": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "set_series_precis": [1, 9], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "laurent_series_r": [1, 5, 9, 11], "power_seri": [1, 2, 12], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "uniquerepresent": [1, 4, 9, 11, 13], "commutativ": [1, 9, 11], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "g": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "4": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "o": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "8": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "10": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "2006": [1, 2, 9, 10], "19": [1, 2, 3, 4, 7, 8, 9, 10, 13], "you": [1, 8, 10, 12], "can": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "also": [1, 2, 3, 4, 9, 10, 11, 12, 13], "more": [1, 2, 3, 4, 10], "mathemat": [1, 6], "notat": [1, 5, 9, 13], "when": [1, 3, 9, 10, 12, 13], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "frac": [1, 2, 3, 4, 9, 10], "5": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "fraction": [1, 2, 4, 8, 9, 10, 11, 12, 13], "domain": [1, 5, 10, 11, 13], "zz": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "t": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "ar": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13], "determin": [1, 3, 5, 6, 8, 9, 10, 12, 13], "variabl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "global": [1, 2, 9, 10], "uniqu": [1, 3, 4, 6, 9, 10], "k": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "qp": [1, 3, 13], "prec": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13], "l": [1, 3, 4, 12, 13], "200": [1, 10], "fals": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13], "true": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "w": [1, 3, 4, 5, 6, 7, 8, 9, 10], "199": 1, "cc": [1, 2, 3, 6, 7, 8], "q": [1, 2, 3, 4, 6, 7, 8, 10, 12, 13], "complex": [1, 2, 3, 7, 8], "53": [1, 2, 3, 5, 7, 8], "bit": [1, 2, 3, 5, 7, 8, 10], "precis": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "load": [1, 2, 3, 5, 8, 9], "dump": [1, 2, 3, 5, 8, 9], "p": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13], "f": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "testsuit": [1, 5, 10], "run": [1, 3, 5, 6, 10], "cdvf": 1, "equip": 1, "discret": [1, 4, 9, 11], "valuat": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13], "complet": [1, 3, 4, 5, 6, 9, 11, 12], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "appropri": 1, "sub": [1, 6], "categori": [1, 4, 5, 6, 9, 10], "automat": [1, 2, 6, 7, 8, 12], "set": [1, 2, 3, 6, 7, 8, 9, 10, 13], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "case": [1, 3, 4, 6, 7, 9, 10, 11], "11": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "join": 1, "commut": [1, 3, 4, 5, 6, 9], "enumer": 1, "subquoti": 1, "monoid": [1, 13], "quotient": [1, 6, 8, 10], "semigroup": 1, "infinit": [1, 2, 3, 4, 6, 7, 8, 10], "alia": [1, 3, 4, 5, 11, 13], "laurentseri": [1, 2, 10], "base_extend": [1, 5, 6, 9, 10, 11], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "same": [1, 3, 4, 5, 6, 9, 10, 13], "self": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "assum": [1, 6, 9, 10], "canon": [1, 9], "coerc": [1, 2, 3, 6, 9, 10, 12], "map": [1, 3, 5, 9, 10], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "default_prec": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11], "change_r": [1, 2, 3, 5, 6, 9, 10, 11, 12], "integ": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "characterist": [1, 2, 4, 5, 6, 8, 9, 10, 13], "construct": [1, 3, 4, 5, 6, 7, 9, 12, 13], "functori": [1, 3, 9], "power": [1, 2, 3, 4, 12, 13], "given": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "42": [1, 2, 3, 4, 7, 8, 10], "phi": [1, 3, 4, 6], "arg": [1, 2, 3, 6, 9, 10], "becaus": [1, 6, 7, 10], "pushout": 1, "avail": [1, 9, 10], "parent": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "qqbar": [1, 12], "gen": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13], "get": [1, 2, 6, 7, 8, 10], "exact": [1, 2, 3, 4, 9, 10, 13], "truncat": [1, 2, 3, 4, 6, 8, 10, 12, 13], "necessari": [1, 10], "most": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "frequent": 1, "invert": [1, 4, 6, 10, 13], "fraction_field": [1, 3, 4, 9, 11, 13], "If": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "alreadi": [1, 4, 11, 13], "its": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13], "otherwis": [1, 3, 5, 6, 7, 8, 9, 10, 11], "rais": [1, 2, 3, 4, 6, 8, 9, 10, 11], "valueerror": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13], "30": [1, 2, 3, 4, 6, 10, 11, 12], "zmod": [1, 2, 6, 8, 11], "traceback": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "recent": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "call": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "last": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "must": [1, 3, 7, 8, 9, 10, 11, 13], "an": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13], "integr": [1, 2, 5, 6, 7, 8, 10, 11, 12, 13], "n": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "is_dens": [1, 5, 9, 10, 11], "spars": [1, 3, 4, 5, 6, 9, 10, 11], "is_exact": [1, 4, 9], "inexact": 1, "is_field": [1, 9, 11], "proof": [1, 5, 9, 11, 13], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "onli": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13], "is_spars": [1, 4, 5, 9, 10, 11], "laurent_polynomial_r": 1, "ngen": [1, 4, 5, 9, 11, 13], "polynomial_r": 1, "power_series_r": [1, 7, 9], "random_el": [1, 6, 9, 13], "algorithm": [1, 2, 3, 6, 8, 9, 10], "random": [1, 6, 9, 13], "option": [1, 2, 3, 4, 7, 8, 10, 13], "paramet": [1, 3, 4, 7, 8, 13], "decid": [1, 3, 6], "how": [1, 2, 5, 9, 13], "gener": [1, 3, 4, 5, 6, 9, 10, 11, 12, 13], "current": [1, 4, 8], "choos": [1, 9], "shift": [1, 2, 3, 4, 6, 10, 12], "standard": [1, 9], "distribut": [1, 3], "Then": [1, 3, 4, 10], "list": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13], "coeffici": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "function": [1, 2, 3, 4, 5, 6, 8, 10], "new": [1, 3, 6, 8, 9, 10, 12], "those": [1, 13], "so": [1, 2, 3, 6, 7, 8, 10], "th": [1, 2, 3, 4, 5, 10, 13], "correspond": [1, 2, 3, 7, 8, 12, 13], "uniform": [1, 4, 9, 11], "amount": 1, "note": [1, 2, 4, 6, 7, 8, 10, 13], "creat": [1, 9, 10, 13], "non": [1, 3, 4, 6, 7, 10, 13], "7": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "6": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "12": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "residue_field": [1, 4, 9, 11], "residu": [1, 2, 4, 9, 10, 11, 13], "e": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12], "typeerror": [1, 2, 5, 6, 9, 10, 11, 12], "actual": [1, 3, 4, 6, 9, 10, 11], "error": [1, 2, 4, 6, 7, 8, 9, 10, 11], "is_laurentseriesr": 1, "keep": [1, 5, 9], "behavior": [1, 9, 10], "is_polynomialr": [1, 9], "versu": [1, 9], "is_mpolynomialr": [1, 9], "ring": [2, 3, 6, 7, 8, 10, 13], "9": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "immut": 2, "indexerror": [2, 4, 9], "we": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "comput": [2, 3, 4, 8, 9, 10, 13], "mpfr": 2, "number": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13], "00000000000000": [2, 3, 10], "save": 2, "repres": [2, 3, 6, 9], "intern": [2, 3, 8], "time": [2, 3, 6, 10, 13], "unit": [2, 3, 6, 7, 8, 10, 12, 13], "part": [2, 3, 4, 10], "need": [2, 3, 6, 7, 8, 10], "nonzero": [2, 3, 4, 10, 13], "constant": [2, 3, 4, 6, 7, 8, 9, 10, 13], "term": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "zero": [2, 3, 4, 6, 7, 8, 10, 12], "ha": [2, 3, 4, 5, 6, 7, 8, 10, 13], "author": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "william": [2, 9, 10], "stein": [2, 9, 10], "origin": [2, 3, 10], "version": [2, 3, 4, 7, 10, 11, 12, 13], "david": [2, 10], "joyner": 2, "01": [2, 13], "22": [2, 3, 5, 10], "ad": [2, 3, 10], "robert": [2, 10], "bradshaw": [2, 10], "2007": [2, 10], "04": [2, 10], "optim": 2, "cython": [2, 10], "laurent_series_ring_el": [2, 10], "algebrael": [2, 10, 12], "consid": [2, 3, 5, 10], "form": [2, 4, 5, 6, 8, 10, 12, 13], "cdot": [2, 3, 5, 6, 10, 13], "where": [2, 3, 4, 10, 12], "input": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "someth": [2, 10], "one": [2, 3, 4, 5, 6, 10, 12], "doe": [2, 3, 5, 6, 9, 10], "have": [2, 3, 4, 6, 7, 8, 10, 13], "obtain": [2, 3, 6, 8, 10, 12], "text": [2, 10], "arbitrari": 2, "result": [2, 3, 5, 6, 10, 13], "equal": [2, 3, 4, 6, 7, 8, 9, 10, 13], "minimum": [2, 6, 10, 12], "see": [2, 3, 4, 5, 6, 8, 9, 10], "add_bigoh": [2, 5, 6, 10, 11, 12], "15": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "v": [2, 3, 5, 6, 9, 10, 13], "verschiebung": 2, "sum": [2, 3, 4, 6, 10], "a_m": [2, 10], "m": [2, 3, 4, 5, 6, 8, 9, 10], "mn": 2, "h": [2, 3, 5, 6, 9], "14": [2, 3, 4, 6, 7, 8, 9, 10], "For": [2, 3, 4, 5, 10, 12], "posit": [2, 3, 6, 8, 10], "argument": [2, 3, 7, 8, 9], "allow": [2, 3, 9], "chosen": [2, 7, 8, 12], "chang": [2, 3, 5, 6, 8, 9, 10, 12, 13], "common_prec": [2, 10, 12], "other": [2, 3, 4, 6, 10, 12], "infin": [2, 3, 6, 7, 8, 10, 13], "common_valu": 2, "degre": [2, 3, 4, 5, 6, 8, 9, 10, 12, 13], "equival": [2, 8, 12], "modulo": [2, 3, 5, 6, 8, 9, 12, 13], "big": [2, 5], "oh": [2, 5], "deriv": [2, 3, 6, 10], "formal": [2, 4, 6, 7, 8, 10], "respect": [2, 3, 6, 7, 9, 10], "suppli": [2, 3, 6, 10], "multipl": [2, 3, 4, 6, 10, 13], "iter": [2, 3, 9, 10], "count": [2, 3, 4, 6, 10], "mai": [2, 3, 4, 10, 13], "document": [2, 3, 10], "detail": [2, 3, 10], "_deriv": [2, 10], "polynomialr": [2, 5, 6, 7, 8, 9, 10, 12], "expon": [2, 4, 6, 10, 12], "appear": [2, 6, 10], "defin": [2, 3, 4, 5, 6, 9, 10, 12, 13], "arithmeticerror": [2, 10, 12], "cannot": [2, 3, 4, 9, 10], "log": [2, 3, 6, 8, 10, 13], "31": [2, 3, 4], "sinc": [2, 3, 4, 9, 10, 13], "anoth": [2, 3, 5, 6, 9, 10, 11], "just": [2, 4, 6, 7, 8, 9, 10], "neg": [2, 3, 5, 7, 8, 9, 10, 13], "invers": [2, 3, 6, 8, 10, 12, 13], "is_monomi": [2, 10, 12], "monomi": [2, 4, 6, 10, 12, 13], "That": [2, 8, 10], "some": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13], "z": [2, 3, 4, 5, 6, 8, 9, 10, 11], "2909": [2, 10], "is_unit": [2, 3, 6, 10, 12], "16": [2, 3, 4, 6, 7, 8, 9, 10], "32": [2, 3, 8], "is_zero": [2, 12], "laurent_polynomi": 2, "lift_to_precis": [2, 3, 10], "absprec": [2, 3, 10], "none": [2, 3, 4, 6, 7, 8, 9, 10, 13], "congruent": [2, 3, 10], "absolut": [2, 3, 10, 12, 13], "least": [2, 3, 10], "lift": [2, 8, 10], "nth_root": [2, 10], "root": [2, 6, 10], "though": [2, 6, 10], "larger": [2, 3, 10, 13], "19437": 2, "65536": 2, "18": [2, 3, 6, 7, 8, 9, 10], "j": [2, 3, 10], "j_invariant_qexp": 2, "248": 2, "4124": 2, "29": [2, 3, 6, 10], "1728": 2, "492": 2, "22590": 2, "convert": [2, 3, 6, 7], "whose": [2, 3, 4, 5, 9], "stuff": 2, "It": [2, 3, 12, 13], "doesn": [2, 6], "matter": 2, "mani": [2, 3, 5, 6, 9], "expans": [2, 3, 10], "In": [2, 3, 4, 6, 10, 13], "particular": [2, 3, 4, 8, 13], "could": [2, 13], "precision_absolut": [2, 10, 12], "By": [2, 7, 8, 10, 13], "definit": [2, 3, 10], "100": [2, 3, 4, 5, 6, 9, 10], "precision_rel": [2, 10, 12], "rel": [2, 10, 12, 13], "differ": [2, 4, 9, 10, 12, 13], "between": [2, 3, 10, 12], "convent": [2, 3, 10], "ani": [2, 3, 4, 7, 9, 10, 13], "sum_": [2, 3, 4, 12, 13], "a_n": [2, 10, 12], "a_": [2, 6, 13], "a_0": [2, 10], "a_1": [2, 10], "a_2": [2, 10], "altern": [2, 4], "revers": [2, 7, 8, 13], "possibl": [2, 6, 8, 10], "exactli": [2, 3, 7, 8], "depend": [2, 3, 4, 6, 7], "underli": [2, 6, 7, 8, 9, 10, 11, 12], "131": [2, 7, 8], "128": [2, 3, 7, 8, 10], "b": [2, 3, 5, 6, 7, 8, 9, 10, 13], "25": [2, 3, 4, 6, 7, 8, 9, 10, 12], "c": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "powerseriesr": [2, 3, 5, 6, 7, 8, 9, 10], "set_verbos": [2, 8], "verbos": [2, 8], "pass": [2, 7, 8, 9, 12, 13], "fail": [2, 8], "try": [2, 6, 8], "lagrang": [2, 8], "23": [2, 3, 4, 6, 7, 8, 12], "118": [2, 7, 8], "lead": [2, 7, 8, 10, 12], "79": [2, 8], "437": [2, 8], "64": [2, 3, 4, 8, 10], "handl": [2, 3, 8, 10], "a8": [2, 8], "output": [2, 3, 6, 7, 8, 9, 10], "20": [2, 3, 4, 6, 7, 8, 9, 10, 11, 13], "catalan": [2, 3, 7, 8], "132": [2, 3, 4, 7, 8], "429": [2, 7, 8], "1430": [2, 7, 8], "4862": [2, 7, 8], "16796": [2, 7, 8], "58786": [2, 7, 8], "208012": [2, 7, 8], "13": [2, 3, 4, 6, 7, 8, 9, 10, 12], "742900": [2, 7, 8], "2674440": [2, 7, 8], "9694845": [2, 7, 8], "35357670": [2, 7, 8], "129644790": [2, 7, 8], "477638700": [2, 7, 8], "multipli": [2, 3, 10, 12], "despit": [2, 10], "fact": [2, 10], "higher": [2, 7, 10], "order": [2, 3, 5, 6, 7, 8, 9, 10, 13], "print": [2, 5, 8, 10], "right": [2, 7, 10], "decreas": [2, 10], "while": [2, 6, 10], "left": [2, 9, 10, 13], "increas": [2, 4, 6, 10], "them": [2, 3, 10, 13], "consist": [2, 3, 4, 10, 13], "etc": [2, 10], "truncate_laurentseri": 2, "replac": [2, 4], "truncate_neg": 2, "except": [2, 3, 10], "without": [2, 3, 6, 9], "undistinguish": 2, "valuation_zero_part": [2, 6, 10], "is_laurentseri": 2, "demand": 3, "thei": 3, "although": 3, "special": 3, "kwankyu": [3, 4], "lee": [3, 4], "2019": [3, 4, 11, 12], "02": [3, 4, 5], "24": [3, 4, 6, 8, 10], "initi": [3, 4, 5, 6, 7, 10, 11, 12, 13], "tejasvi": [3, 4], "chebrolu": [3, 4], "martin": [3, 4], "rubei": [3, 4], "travi": [3, 4, 11, 12], "scrimshaw": [3, 4, 11, 12], "2021": [3, 4], "08": [3, 4, 5, 6, 9, 10], "refactor": [3, 4], "expand": [3, 4], "laurent": [3, 4, 5, 9, 10, 11, 12], "particularli": 3, "sequenc": [3, 5, 6], "aris": 3, "combinator": 3, "lazylaurentseriesr": [3, 4], "fibonacci": 3, "principl": 3, "now": [3, 13], "573147844013817084101": 3, "type": [3, 5, 7, 8, 9, 10, 12], "lambda": [3, 4, 10], "_coeff_stream": 3, "_cach": 3, "dens": [3, 4, 5, 10, 11], "all": [3, 4, 5, 10, 13], "up": [3, 6, 7, 8, 10], "requir": [3, 10], "do": [3, 5, 6, 8, 9, 13], "arithmet": [3, 4, 5, 6, 9, 12, 13], "38": [3, 10], "71": 3, "known": [3, 7, 8, 10], "eventu": 3, "much": 3, "faster": 3, "moreov": 3, "lazypowerseriesr": [3, 4], "howev": [3, 6, 12, 13], "taylor": [3, 4], "stream": 3, "therefor": [3, 6], "similar": 3, "statement": 3, "symmetr": [3, 4], "symmetricfunct": [3, 4], "lazysymmetricfunct": [3, 4], "hinv": 3, "165": 3, "256": 3, "lazy_seri": [3, 4], "lazycauchyproductseri": 3, "coeff_stream": 3, "lazymoduleel": [3, 4], "cauchi": 3, "product": 3, "exp": [3, 6, 8, 10], "exponenti": [3, 4, 6, 10], "ident": 3, "int": 3, "120": [3, 6, 8, 9, 10], "720": [3, 6, 10], "27": [3, 5, 6, 8, 12], "40": [3, 6], "331": 3, "compos": 3, "factor": [3, 4, 10], "natur": [3, 6, 10], "logarithm": [3, 6, 10, 13], "look": 3, "henc": 3, "happen": [3, 10], "forev": 3, "lazycompletiongradedalgebrael": [3, 4], "grade": [3, 4], "lazili": [3, 4], "lazydirichletseri": [3, 4], "dirichlet": [3, 4], "lazydirichletseriesr": [3, 4], "number_of_divisor": 3, "picklabl": 3, "whether": [3, 4, 5, 9, 10, 11, 12], "d": [3, 4, 9], "mu": 3, "moebiu": 3, "lazylaurentseri": [3, 4], "build": [3, 13], "specifi": [3, 4, 5, 6, 8, 9, 10, 13], "take": [3, 5, 10], "valu": [3, 4, 6, 13], "anyth": 3, "perform": [3, 8, 10, 12, 13], "alwai": [3, 4, 6, 7, 8, 9], "abl": [3, 6], "know": [3, 10], "approximate_seri": 3, "name": [3, 4, 5, 7, 9, 10, 11, 13], "approxim": [3, 4, 8, 9, 10, 13], "60": [3, 8, 10], "280": 3, "560": 3, "check": [3, 4, 6, 7, 8, 10], "composit": 3, "two": [3, 4, 6, 8, 9, 10], "circ": 3, "val": [3, 13], "33": [3, 10], "82": 3, "196": 3, "457": 3, "48": [3, 6], "96": 3, "320": 3, "960": 3, "2688": 3, "7169": 3, "21": [3, 4, 6, 10, 12, 13], "28": [3, 6], "f3": [3, 4, 5, 9], "rang": [3, 4, 10], "37": [3, 6], "fy": 3, "zerodivisionerror": [3, 6, 10], "nonneg": [3, 6], "fp": 3, "With": [3, 10], "both": [3, 6, 8, 10], "fpy": 3, "fg": 3, "els": [3, 4], "fgh": 3, "mix": 3, "exist": [3, 6, 7, 8, 10], "neq": 3, "leq": [3, 8], "factori": [3, 4, 10], "e5": 3, "common": [3, 12, 13], "extend": [3, 5, 10, 11], "three": 3, "uniniti": [3, 4], "undefin": [3, 4], "compositional_invers": 3, "revert": 3, "calculu": 3, "greater": 3, "than": [3, 4, 6, 7, 8, 10], "first": [3, 6, 8, 9, 10, 13], "structur": 3, "wise": 3, "addit": [3, 4, 8], "scalar": 3, "subtract": 3, "negat": 3, "found": 3, "arcco": 3, "rr": [3, 4, 5, 6, 9, 10, 13], "57079632679490": 3, "000000000000000": 3, "166666666666667": 3, "0750000000000000": 3, "sr": [3, 9, 10], "pi": [3, 13], "83": [3, 6], "73": [3, 6], "arccot": 3, "arctang": 3, "333333333333333": 3, "200000000000000": 3, "acot": 3, "arcsin": 3, "112": 3, "asin": 3, "arcsinh": 3, "hyperbol": 3, "sine": 3, "asinh": 3, "arctan": 3, "atan": 3, "arctanh": 3, "tangent": 3, "atanh": 3, "homogen": [3, 4], "slice": 3, "start": [3, 4, 9], "stop": 3, "produc": 3, "follow": [3, 6, 10, 12, 13], "begin": [3, 4, 12], "lazy_list_gener": 3, "instead": [3, 4, 8, 10], "similarli": 3, "sin": [3, 9, 10], "fewer": 3, "detect": 3, "doctest": [3, 5, 9], "deprecationwarn": 3, "__getitem__": 3, "http": [3, 4, 11, 12], "trac": [3, 5, 6, 8, 9, 10], "sagemath": 3, "org": 3, "32367": 3, "5040": [3, 6, 9, 10], "362880": [3, 6, 9, 10], "co": [3, 10], "cosin": 3, "cosh": [3, 10], "cot": 3, "cotang": 3, "45": [3, 6, 10], "945": 3, "coth": 3, "44": [3, 6, 9, 10], "884": 3, "csc": 3, "cosec": 3, "360": 3, "15120": 3, "67": 3, "csch": 3, "787": 3, "equat": [3, 10], "binomi": 3, "2000": [3, 4], "1000": [3, 10], "1001": 3, "link": 3, "34": [3, 4, 6, 10], "546": 3, "2327": 3, "10191": 3, "95": [3, 9], "386": 3, "1641": 3, "7150": 3, "bigger": 3, "138": 3, "142": 3, "binari": 3, "tree": [3, 11, 12], "unlabel": 3, "total": [3, 5, 6, 13], "node": 3, "leaf": 3, "internal_nod": 3, "oei": 3, "_": [3, 4, 10], "internet": 3, "a002033": 3, "perfect": [3, 10], "partit": [3, 4], "a074206": 3, "kalm\u00e1r": 3, "kalmar": 3, "problem": 3, "frobeniu": 3, "charact": 3, "625": [3, 10], "326": 3, "171": 3, "119": 3, "63": [3, 10], "35": [3, 6], "euler": [3, 4], "evalu": [3, 13], "infti": [3, 4, 12], "3n": [3, 4], "lazy_series_r": [3, 4], "hypergeometr": 3, "f_": 3, "_pf_": 3, "parameter": 3, "second": [3, 10], "itself": [3, 4, 6, 10, 13], "ignor": [3, 5, 6, 7], "map_coeffici": [3, 10], "appli": [3, 10], "each": [3, 4, 5, 6, 9], "func": 3, "36": [3, 4, 6], "225": 3, "400": 3, "q_pochhamm": [3, 4], "pochhamm": [3, 4], "symbol": [3, 4, 5, 6, 9], "quantum": [3, 4], "dilogarithm": [3, 4], "sec": 3, "secant": 3, "61": 3, "sech": 3, "indic": [3, 10], "shorthand": 3, "sinh": [3, 10], "sqrt": [3, 6, 8, 9, 10], "1024": 3, "work": [3, 6, 9, 10, 13], "tan": [3, 10], "315": [3, 10], "tanh": [3, 10], "alpha": [3, 10], "beta": 3, "lazypowerseri": [3, 4], "101": [3, 6], "ariti": 3, "provid": [3, 4, 8, 10], "tupl": [3, 4, 6, 10, 13], "g_1": 3, "dot": [3, 13], "g_n": 3, "g_i": 3, "yield": 3, "wai": 3, "test": [3, 10], "g1": 3, "g2": [3, 6], "ea": 3, "ex": 3, "f1": [3, 5, 9], "f2": [3, 4, 5, 9], "164": 3, "5227": 3, "fog": 3, "laurentpolynomialr": [3, 4, 12], "70": [3, 8, 9], "169": 3, "compute_coeffici": 3, "deprec": 3, "effect": [3, 13], "anymor": 3, "lazypowerseries_gcd_mixin": 3, "object": [3, 6, 7, 8, 9, 10, 12, 13], "gcd": 3, "greatest": [3, 12], "divisor": [3, 12], "xgcd": 3, "tripl": 3, "cofactor": 3, "satisfi": [3, 6], "bezout": 3, "mathrm": [3, 10], "41": 3, "242": 3, "121": 3, "1331": 3, "1205": 3, "5324": 3, "316": 3, "14641": 3, "halting_precis": [3, 4], "verifi": [3, 4], "_reset": 3, "reset": 3, "arithmetic_product": 3, "oper": [3, 9, 13], "boxdot": 3, "bilinear": 3, "p_": 3, "prod": 3, "limits_": 3, "geq": [3, 4, 5, 10, 13], "lcm": 3, "lambda_i": 3, "mu_j": 3, "lambda_1": 3, "lambda_2": 3, "lambda_3": 3, "mu_1": 3, "mu_2": 3, "mu_3": 3, "nu": 3, "denot": 3, "p_i": 3, "enough": [3, 4, 10], "torsion": 3, "free": 3, "mathoverflow": [3, 4], "net": [3, 4], "question": [3, 4, 5], "138148": 3, "discuss": 3, "wa": 3, "ab": 3, "associ": [3, 10, 13], "uniti": 3, "e_1": 3, "p_1": 3, "h_1": 3, "speci": 3, "varnoth": 3, "assembli": 3, "clone": 3, "sever": [3, 10], "mm2008": 3, "cycl": 3, "boolean": [3, 13], "caus": 3, "skip": 3, "combinat": 3, "sf": 3, "sfa": 3, "symmetricfunctionalgebra_generic_el": 3, "orient": 3, "l_": 3, "nonempti": 3, "linear": [3, 4, 10], "regular": 3, "octopus": 3, "length": [3, 7, 8, 10], "cyclespeci": 3, "cycle_index_seri": 3, "lplu": 3, "144": 3, "72": [3, 6], "1440": 3, "5760": 3, "shown": 3, "sigma": 3, "andrew": 3, "gainer": 3, "dewar": 3, "2013": [3, 5, 7], "refer": [3, 4, 11, 12], "thu": 3, "plethyst": 3, "substitut": [3, 6], "let": [3, 4, 13], "vanish": [3, 4], "recurs": [3, 4], "omega": 3, "h_2": 3, "effici": 3, "logarithmcycleindexseri": 3, "derivative_with_respect_to_p1": 3, "basi": [3, 4], "p_k": 3, "skew": 3, "taken": [3, 7, 10], "relationship": [3, 10], "cyclic": 3, "euler_phi": 3, "functorial_composit": 3, "cardin": [3, 4], "group": 3, "action": [3, 8], "s_n": 3, "s_x": 3, "possibli": [3, 4], "virtual": 3, "represent": [3, 4, 8], "gl": 3, "box": 3, "mapsto": 3, "phrase": 3, "languag": 3, "combinatori": 3, "word": 3, "label": 3, "section": [3, 10], "bll": 3, "mathfrak": 3, "operatornam": [3, 13], "fix": [3, 8, 9, 10], "ldot": [3, 6], "sigma_": 3, "make": [3, 6, 8, 9], "sens": [3, 6, 7], "permut": 3, "simpl": 3, "graph": 3, "express": [3, 5], "subsetspeci": 3, "p2": [3, 10], "vertic": 3, "edg": 3, "sum_n": 3, "h_n": 3, "neutral": 3, "ep": 3, "long": [3, 10], "plethysm": 3, "alphabet": [3, 4], "specif": 3, "e1": 3, "tensor": [3, 4], "s2": 3, "plethystic_invers": 3, "symmetric_funct": 3, "elt": 3, "variou": [4, 5], "nn": [4, 13], "lazycompletiongradedalgebra": 4, "padic": 4, "generic_nod": 4, "padicrelaxedgener": 4, "zper": 4, "lazyseriesr": 4, "compon": 4, "combin": [4, 5], "ncsf": 4, "noncommutativesymmetricfunct": 4, "formal_series_r": 4, "some_el": [4, 13], "unlik": 4, "wikipedia": [4, 8, 11, 12], "articl": [4, 8, 11, 12], "discrete_valuation_r": 4, "On": 4, "hand": 4, "local_r": 4, "maxim": [4, 13], "ideal": [4, 5, 13], "accord": [4, 5, 9, 13], "answer": [4, 10], "5522": 4, "ufd": 4, "arxiv": 4, "math": 4, "0105219": 4, "unique_factorization_domain": 4, "interest": 4, "describ": [4, 8], "emil": 4, "daniel": 4, "schwab": 4, "gheorgh": 4, "silberberg": 4, "archivum": 4, "mathematicum": 4, "vol": 4, "No": 4, "103": 4, "109": 4, "dml": 4, "cz": 4, "dmlcz": 4, "107723": 4, "j_k": 4, "less": [4, 6, 10], "prime": [4, 9, 13], "largest": 4, "surject": 4, "min": [4, 9], "j_1": 4, "j_2": 4, "chain": 4, "noetherian_r": 4, "evid": 4, "princip": 4, "principalidealdomain": 4, "49": [4, 10], "usual": [4, 13], "def": 4, "coeff": 4, "343": 4, "2401": 4, "16807": 4, "17319": 4, "117649": 4, "180781": 4, "823543": 4, "addition": 4, "80": [4, 6], "240": 4, "672": 4, "1792": 4, "remain": 4, "been": [4, 6, 10], "inform": 4, "undecid": 4, "either": [4, 6, 10, 13], "give": 4, "euler_funct": 4, "qpoch": 4, "show": 4, "_n": 4, "pochhammer_symbol": 4, "quantum_dilogarithm": 4, "python": [4, 10], "mean": 4, "below": [4, 10], "respons": 4, "ge": 4, "pair": [4, 6, 10], "219": 4, "read": 4, "simpli": [4, 7, 8], "omit": 4, "singl": [4, 5], "abstract": 4, "constant_length": 4, "display_length": 4, "lower": [4, 6, 10], "bound": [4, 9, 13], "unknown": 4, "schur": 4, "u": [5, 6, 7, 9, 10, 13], "add": 5, "track": [5, 6], "k0": [5, 9], "k1": [5, 9], "k2": [5, 9], "k3": [5, 9], "f0": [5, 6, 9, 10], "z0": [5, 9], "z1": [5, 9], "z2": [5, 9], "1955": 5, "angl": [5, 9], "bracket": [5, 9], "65537": [5, 9], "30077": 5, "9485": 5, "6260": 5, "12870": 5, "20289": 5, "doubl": [5, 9], "squar": [5, 6, 9, 10], "127931": 5, "displai": [5, 9, 13], "deglex": [5, 9], "term_ord": [5, 9, 13], "lexicograph": [5, 9, 13], "negdeglex": [5, 9], "real": [5, 11, 13], "integermodr": 5, "coercion": [5, 6, 9, 10], "subset": 5, "var": [5, 7, 8, 9, 10, 13], "multi_power_series_r": 5, "mpowerseriesring_generic_with_categori": 5, "element_class": 5, "x_1": [5, 6, 13], "x_2": [5, 6], "x_n": [5, 6, 13], "subr": [5, 13], "isomorph": [5, 9], "foreground": [5, 6], "background": [5, 6], "nile": [5, 6, 9], "johnson": [5, 6, 9], "2010": [5, 6, 9], "07": [5, 6], "code": [5, 6, 9, 10, 11, 12], "simon": [5, 6, 9, 10], "king": [5, 6, 9, 10], "2012": [5, 6, 9, 10], "framework": [5, 6, 9, 10], "ticket": [5, 6, 8, 9, 10], "13412": [5, 6, 9, 10], "14084": 5, "mpowerseriesring_gener": 5, "num_gen": [5, 9], "name_list": 5, "powerseriesring_gener": [5, 9], "nonexact": [5, 9], "usag": 5, "abov": [5, 6, 9, 13], "mpowerseri": [5, 6, 10], "bigoh": 5, "thing": [5, 10], "latter": 5, "extens": [5, 9, 10, 13], "functor": 5, "nth": [5, 10], "v6": 5, "opposit": 5, "is_integral_domain": [5, 13], "v0": 5, "v1": 5, "v2": 5, "v3": 5, "is_noetherian": 5, "noetherian": 5, "infinitepolynomialr": 5, "yet": [5, 6], "prec_id": 5, "our": [5, 6, 13], "remove_var": 5, "remov": 5, "t0": [5, 6], "t1": [5, 6], "t2": [5, 6, 9], "t3": [5, 6], "t4": [5, 6], "termord": 5, "is_mpowerseriesr": 5, "unpickle_multi_power_series_ring_v0": 5, "unpickl": [5, 8, 9], "deseri": [5, 9], "indirect": [5, 9], "manipul": 6, "As": [6, 13], "comparison": 6, "done": [6, 10], "unless": [6, 7, 10], "too": 6, "syntax": [6, 13], "expect": 6, "r0": 6, "r1": 6, "r2": 6, "homomorph": 6, "hom": 6, "morphism": 6, "To": [6, 9], "defn": 6, "26": [6, 10], "84": 6, "58": 6, "50": [6, 9, 10], "57": 6, "56": 6, "47": 6, "46": 6, "125": [6, 10], "87": [6, 9], "375": 6, "86": 6, "85": 6, "74": 6, "multi_power_series_ring_el": [6, 10], "mo": 6, "is_gen": [6, 8, 10], "powerseri": [6, 7, 8, 10], "variable_nam": [6, 13], "m_0": 6, "m_k": 6, "x_0": 6, "x_k": [6, 13], "dict": [6, 7, 8], "cd": 6, "item": 6, "constant_coeffici": 6, "dictionari": [6, 7, 8], "kei": [6, 7, 8, 13], "inject_vari": [6, 9], "m2": 6, "39": 6, "egf": 6, "transcendent": 6, "would": [6, 10], "symbolicr": 6, "These": [6, 13], "unsupport": [6, 12], "operand": [6, 12], "tbg": 6, "workaround": 6, "limit": 6, "close": [6, 10, 13], "under": 6, "rdf": [6, 10], "38905609": 6, "69452804": 6, "7781121": 6, "40320": [6, 10], "3628800": [6, 10], "39916800": [6, 9, 10], "hold": 6, "contain": 6, "derivative_pars": 6, "2520": 6, "divis": [6, 8, 10], "3zz": 6, "stai": [6, 9], "report": 6, "convers": 6, "One": 6, "correct": 6, "even": [6, 10], "denomin": 6, "cancel": 6, "occur": [6, 7], "mod": [6, 9, 10], "is_nilpot": 6, "nilpot": 6, "far": 6, "suffici": 6, "condit": [6, 10], "don": 6, "trust": 6, "legit": 6, "what": 6, "should": 6, "about": 6, "oracl": 6, "And": 6, "am": 6, "sure": [6, 8], "good": 6, "idea": 6, "is_squar": [6, 10], "laurent_seri": [6, 10, 11, 12], "Not": 6, "09861228": 6, "333333333": 6, "0555555555": 6, "222222222": 6, "0123456790": 6, "0740740740": 6, "00308641975": 6, "0246913580": 6, "sort": 6, "ogf": 6, "padded_list": [6, 7, 10], "contrast": 6, "quo_rem": 6, "remaind": 6, "trail": 6, "bu": 6, "divid": [6, 10], "trailing_monomi": 6, "come": 6, "disregard": 6, "issu": 6, "recast": 6, "cast": 6, "might": 6, "wouldn": 6, "never": [6, 9], "termin": 6, "here": [6, 9, 13], "help": 6, "illustr": [6, 10], "solve_linear_d": [6, 10], "square_root": [6, 10], "lowest": 6, "highest": 6, "befor": [6, 9], "4949717": 6, "is_mpowerseri": 6, "select": 7, "support": [7, 10, 13], "keyword": [7, 9], "constructor": [7, 13], "powerseriesring_domain_with_categori": 7, "power_series_pari": 7, "powerseries_pari": 7, "powerseriesring_over_field_with_categori": 7, "finite_r": 7, "element_pari_ffelt": 7, "finitefieldelement_pari_ffelt": 7, "interfac": 7, "prioriti": 7, "parierror": 7, "incorrect": 7, "gtopoli": 7, "peter": 7, "bruin": 7, "decemb": 7, "accept": 7, "compat": [7, 12], "powerseries_poli": [7, 8, 10], "everi": [7, 8], "smaller": [7, 8, 13], "padicr": 7, "includ": [7, 10], "pad": 7, "power_series_poli": [8, 10], "baseringfloordivact": 8, "floor": 8, "22216": 8, "pade": 8, "pad\u00e9": 8, "deg": 8, "pad\u00e9_approxim": 8, "ratio": 8, "veri": 8, "slow": 8, "suitabl": 8, "high": 8, "formula": 8, "matrix": 8, "berlekamp_massei": 8, "polynomial_zmod_flint": 8, "rational_reconstruct": 8, "130": 8, "105": 8, "90": [8, 10], "140": [8, 10], "attempt": [8, 10], "messag": 8, "import": [8, 9, 10], "truncate_powerseri": 8, "make_powerseries_poly_v0": [8, 10], "purpos": 8, "pickl": 8, "delet": 8, "kind": [8, 10], "correctli": 8, "fashion": 9, "6227020800": 9, "1000000": 9, "2000000": 9, "latex": 9, "attach": 9, "polynomial_integer_dense_flint": 9, "ntl": 9, "polynomial_integer_dense_ntl": 9, "jeremi": 9, "cho": 9, "05": 9, "09": [9, 10, 13], "arg2": 9, "indetermin": [9, 13], "There": 9, "letter": 9, "w0": 9, "w1": 9, "w2": 9, "w3": 9, "w4": 9, "x2": 9, "x3": 9, "x5": 9, "x7": 9, "x11": 9, "x13": 9, "x17": 9, "x19": 9, "x23": 9, "x29": 9, "x31": 9, "x37": 9, "x41": 9, "x43": 9, "x47": 9, "x53": 9, "x59": 9, "x61": 9, "x67": 9, "x71": 9, "x73": 9, "x79": 9, "x83": 9, "x89": 9, "x97": 9, "interact": 9, "powerseriesring_domain": 9, "integraldomain": 9, "topologi": 9, "indistinguish": 9, "reason": 9, "why": 9, "ourselv": 9, "confus": 9, "quadraticfield": 9, "732050807568878": 9, "change_var": 9, "1125899906842624": 9, "is_finit": 9, "kwd": 9, "subject": 9, "further": 9, "9481": 9, "sz": 9, "sq": 9, "num_bound": 9, "den_bound": 9, "max": 9, "85948321262904": 9, "73071330911226": 9, "60414378519265": 9, "zp": [9, 13], "variable_names_recurs": 9, "depth": 9, "powerseriesring_over_field": 9, "is_powerseriesr": 9, "unpickle_power_series_ring_v0": 9, "harvei": 10, "rmul": 10, "lmul": 10, "180": 10, "930": 10, "oppos": 10, "poly_ring1": 10, "gen1": 10, "poly_ring2": 10, "gen2": 10, "huge_r": 10, "via": 10, "send": 10, "power_ring1": 10, "power_ring2": 10, "huge_power_r": 10, "power_series_ring_el": 10, "plu": 10, "nm": 10, "got": 10, "copi": 10, "implicitli": 10, "lie": 10, "__call__": 10, "succe": 10, "numberfield": 10, "cyclotomic_polynomi": 10, "unabl": 10, "100000": 10, "10000000": 10, "egf_to_ogf": 10, "ordinari": 10, "serlaplac": 10, "gp": 10, "screwi": 10, "rewrot": 10, "simplest": 10, "conquer": 10, "strategi": 10, "out": 10, "sourav": 10, "sen": 10, "gupta": 10, "2008": 10, "well": 10, "2t": 10, "whatev": 10, "538": 10, "425": 10, "168": 10, "30629": 10, "11340": 10, "request": [10, 13], "boundari": 10, "4477": 10, "71828182845905": 10, "07742274268857": 10, "belong": 10, "whenev": 10, "li": [10, 13], "03": 10, "jacobi_continued_fract": 10, "jacobi": 10, "continu": 10, "step": 10, "b_0": 10, "b_1": 10, "b_n": 10, "kra1999det": 10, "hankel": 10, "orthogon": 10, "396": 10, "143": 10, "780": 10, "255": 10, "81": 10, "1292": 10, "overrid": 10, "notimplementederror": 10, "new_base_r": 10, "codomain": 10, "behaviour": 10, "callabl": 10, "conjug": 10, "43": 10, "coerce_map_from": 10, "12039376311816": 10, "2384185791015625": 10, "p1": 10, "ogf_to_egf": 10, "serconvol": 10, "discard": 10, "unchang": 10, "solut": 10, "inhomogen": 10, "differenti": 10, "desir": 10, "reduc": 10, "sourc": 10, "re": 10, "like": 10, "analysi": 10, "littl": 10, "complic": 10, "tend": [10, 13], "explod": 10, "your": 10, "advanc": 10, "find": 10, "probabl": 10, "crash": 10, "clean": 10, "solv": 10, "bool": 10, "odd": 10, "string": 10, "newton": 10, "x_": 10, "x_i": [10, 13], "512": 10, "16384": 10, "modulu": 10, "cdf": 10, "5625": 10, "2890625": 10, "sqrtf": 10, "live": 10, "41421356237309": 10, "353553390593274": 10, "0441941738241592": 10, "0110485434560398": 10, "00345266983001244": 10, "210": 10, "stieltjes_continued_fract": 10, "stieltj": 10, "a_3": 10, "catalan_numb": 10, "62": 10, "2835": 10, "1382": 10, "155925": 10, "110": 10, "is_powerseri": 10, "instanc": [10, 12], "make_element_from_parent_v0": 10, "chri": [11, 12], "swierczewski": [11, 12], "2016": [11, 12], "github": [11, 12], "com": [11, 12], "abelfunct": [11, 12], "master": [11, 12], "fr\u00e9d\u00e9ric": [11, 12], "chapoton": [11, 12], "sebastian": [11, 12], "oehm": [11, 12], "2020": [11, 12], "basic": [11, 12], "improv": [11, 12], "puiseux_seri": [11, 12], "puiseux_series_r": 11, "puiseuxseriesr": [11, 12], "puiseuxseri": [11, 12], "aa": 11, "ramif": [12, 13], "center": 12, "essenti": 12, "command": 12, "ramification_index": 12, "mind": 12, "qz": 12, "properti": 12, "easili": 12, "final": 12, "puiseux_series_ring_el": 12, "store": 12, "adapt": 12, "q5": 12, "q7": 12, "laurent_part": 12, "bold": 13, "_p": 13, "v_1": 13, "v_n": 13, "seri": 13, "i_1": 13, "i_n": 13, "quantiti": 13, "goe": 13, "multi": 13, "converg": 13, "disc": 13, "inequ": 13, "v_i": 13, "radii": 13, "tate_algebra": 13, "tatealgebra": 13, "print_mod": 13, "digit": 13, "adic": 13, "cap": 13, "observ": 13, "log_radii": 13, "a1": 13, "integer_r": 13, "ao": 13, "00101": 13, "000010": 13, "0000100": 13, "00001": 13, "001010": 13, "00001000": 13, "reduct": 13, "inverse_of_unit": 13, "01101": 13, "01110": 13, "10100": 13, "hide": 13, "norm": 13, "point": 13, "groebner_basi": 13, "10001": 13, "11101": 13, "11111": 13, "01001": 13, "10110": 13, "xavier": 13, "caruso": 13, "thibaut": 13, "verron": 13, "2018": 13, "tatealgebrafactori": 13, "uniquefactori": 13, "go": 13, "toward": 13, "degrevlex": 13, "break": 13, "ti": 13, "compar": 13, "lex": 13, "want": 13, "broken": 13, "0000000001": 13, "00000000010": 13, "create_kei": 13, "create_object": 13, "tatealgebra_gener": 13, "commutativealgebra": 13, "absolute_": 13, "zq": 13, "monoid_of_term": 13, "precision_cap": 13, "success": 13, "But": 13, "ask": 13, "upper": 13, "00101000": 13, "1111011111": 13, "0010010001": 13, "110000011": 13, "010100100": 13, "0101100": 13, "01000011": 13, "00111011": 13, "0001111101": 13, "1101110101": 13, "00010010110": 13, "101110001100": 13, "000001100100": 13, "1100111011": 13, "1110100101": 13, "1100001101": 13, "1110110001": 13, "01011010110": 13, "1111111": 13, "001": 13, "111000101": 13, "11010111": 13, "0010011011": 13, "0010100011000": 13, "00000000100": 13, "0000000010": 13, "tatetermmonoid": 13, "monoid_class": 13, "resp": 13, "pre": 13, "tatealgebraterm": 13, "algebra_of_seri": 13, "realli": 13, "invok": 13, "grevlex": 13}, "objects": {"sage.rings": [[1, 0, 0, "-", "laurent_series_ring"], [2, 0, 0, "-", "laurent_series_ring_element"], [3, 0, 0, "-", "lazy_series"], [4, 0, 0, "-", "lazy_series_ring"], [5, 0, 0, "-", "multi_power_series_ring"], [6, 0, 0, "-", "multi_power_series_ring_element"], [7, 0, 0, "-", "power_series_pari"], [8, 0, 0, "-", "power_series_poly"], [9, 0, 0, "-", "power_series_ring"], [10, 0, 0, "-", "power_series_ring_element"], [11, 0, 0, "-", "puiseux_series_ring"], [12, 0, 0, "-", "puiseux_series_ring_element"], [13, 0, 0, "-", "tate_algebra"]], "sage.rings.laurent_series_ring": [[1, 1, 1, "", "LaurentSeriesRing"], [1, 4, 1, "", "is_LaurentSeriesRing"]], "sage.rings.laurent_series_ring.LaurentSeriesRing": [[1, 2, 1, "", "Element"], [1, 3, 1, "", "base_extend"], [1, 3, 1, "", "change_ring"], [1, 3, 1, "", "characteristic"], [1, 3, 1, "", "construction"], [1, 3, 1, "", "default_prec"], [1, 3, 1, "", "fraction_field"], [1, 3, 1, "", "gen"], [1, 3, 1, "", "is_dense"], [1, 3, 1, "", "is_exact"], [1, 3, 1, "", "is_field"], [1, 3, 1, "", "is_sparse"], [1, 3, 1, "", "laurent_polynomial_ring"], [1, 3, 1, "", "ngens"], [1, 3, 1, "", "polynomial_ring"], [1, 3, 1, "", "power_series_ring"], [1, 3, 1, "", "random_element"], [1, 3, 1, "", "residue_field"], [1, 3, 1, "", "uniformizer"]], "sage.rings.laurent_series_ring_element": [[2, 1, 1, "", "LaurentSeries"], [2, 4, 1, "", "is_LaurentSeries"]], "sage.rings.laurent_series_ring_element.LaurentSeries": [[2, 3, 1, "", "O"], [2, 3, 1, "", "V"], [2, 3, 1, "", "add_bigoh"], [2, 3, 1, "", "change_ring"], [2, 3, 1, "", "coefficients"], [2, 3, 1, "", "common_prec"], [2, 3, 1, "", "common_valuation"], [2, 3, 1, "", "degree"], [2, 3, 1, "", "derivative"], [2, 3, 1, "", "exponents"], [2, 3, 1, "", "integral"], [2, 3, 1, "", "inverse"], [2, 3, 1, "", "is_monomial"], [2, 3, 1, "", "is_unit"], [2, 3, 1, "", "is_zero"], [2, 3, 1, "", "laurent_polynomial"], [2, 3, 1, "", "lift_to_precision"], [2, 3, 1, "", "list"], [2, 3, 1, "", "nth_root"], [2, 3, 1, "", "power_series"], [2, 3, 1, "", "prec"], [2, 3, 1, "", "precision_absolute"], [2, 3, 1, "", "precision_relative"], [2, 3, 1, "", "residue"], [2, 3, 1, "", "reverse"], [2, 3, 1, "", "shift"], [2, 3, 1, "", "truncate"], [2, 3, 1, "", "truncate_laurentseries"], [2, 3, 1, "", "truncate_neg"], [2, 3, 1, "", "valuation"], [2, 3, 1, "", "valuation_zero_part"], [2, 3, 1, "", "variable"], [2, 3, 1, "", "verschiebung"]], "sage.rings.lazy_series": [[3, 1, 1, "", "LazyCauchyProductSeries"], [3, 1, 1, "", "LazyCompletionGradedAlgebraElement"], [3, 1, 1, "", "LazyDirichletSeries"], [3, 1, 1, "", "LazyLaurentSeries"], [3, 1, 1, "", "LazyModuleElement"], [3, 1, 1, "", "LazyPowerSeries"], [3, 1, 1, "", "LazyPowerSeries_gcd_mixin"], [3, 1, 1, "", "LazySymmetricFunction"]], "sage.rings.lazy_series.LazyCauchyProductSeries": [[3, 3, 1, "", "exp"], [3, 3, 1, "", "log"], [3, 3, 1, "", "valuation"]], "sage.rings.lazy_series.LazyDirichletSeries": [[3, 3, 1, "", "is_unit"], [3, 3, 1, "", "valuation"]], "sage.rings.lazy_series.LazyLaurentSeries": [[3, 3, 1, "", "approximate_series"], [3, 3, 1, "", "compose"], [3, 3, 1, "", "compositional_inverse"], [3, 3, 1, "", "derivative"], [3, 3, 1, "", "is_unit"], [3, 3, 1, "", "polynomial"], [3, 3, 1, "", "revert"]], "sage.rings.lazy_series.LazyModuleElement": [[3, 3, 1, "", "arccos"], [3, 3, 1, "", "arccot"], [3, 3, 1, "", "arcsin"], [3, 3, 1, "", "arcsinh"], [3, 3, 1, "", "arctan"], [3, 3, 1, "", "arctanh"], [3, 3, 1, "", "change_ring"], [3, 3, 1, "", "coefficient"], [3, 3, 1, "", "coefficients"], [3, 3, 1, "", "cos"], [3, 3, 1, "", "cosh"], [3, 3, 1, "", "cot"], [3, 3, 1, "", "coth"], [3, 3, 1, "", "csc"], [3, 3, 1, "", "csch"], [3, 3, 1, "", "define"], [3, 3, 1, "", "euler"], [3, 3, 1, "", "exp"], [3, 3, 1, "", "hypergeometric"], [3, 3, 1, "", "lift_to_precision"], [3, 3, 1, "", "log"], [3, 3, 1, "", "map_coefficients"], [3, 3, 1, "", "prec"], [3, 3, 1, "", "q_pochhammer"], [3, 3, 1, "", "sec"], [3, 3, 1, "", "sech"], [3, 3, 1, "", "set"], [3, 3, 1, "", "shift"], [3, 3, 1, "", "sin"], [3, 3, 1, "", "sinh"], [3, 3, 1, "", "sqrt"], [3, 3, 1, "", "tan"], [3, 3, 1, "", "tanh"], [3, 3, 1, "", "truncate"]], "sage.rings.lazy_series.LazyPowerSeries": [[3, 3, 1, "", "compose"], [3, 3, 1, "", "compositional_inverse"], [3, 3, 1, "", "compute_coefficients"], [3, 3, 1, "", "derivative"], [3, 3, 1, "", "exponential"], [3, 3, 1, "", "is_unit"], [3, 3, 1, "", "polynomial"], [3, 3, 1, "", "revert"]], "sage.rings.lazy_series.LazyPowerSeries_gcd_mixin": [[3, 3, 1, "", "gcd"], [3, 3, 1, "", "xgcd"]], "sage.rings.lazy_series.LazySymmetricFunction": [[3, 3, 1, "", "arithmetic_product"], [3, 3, 1, "", "compositional_inverse"], [3, 3, 1, "", "derivative_with_respect_to_p1"], [3, 3, 1, "", "functorial_composition"], [3, 3, 1, "", "is_unit"], [3, 3, 1, "", "plethysm"], [3, 3, 1, "", "plethystic_inverse"], [3, 3, 1, "", "revert"], [3, 3, 1, "", "symmetric_function"]], "sage.rings.lazy_series_ring": [[4, 1, 1, "", "LazyCompletionGradedAlgebra"], [4, 1, 1, "", "LazyDirichletSeriesRing"], [4, 1, 1, "", "LazyLaurentSeriesRing"], [4, 1, 1, "", "LazyPowerSeriesRing"], [4, 1, 1, "", "LazySeriesRing"], [4, 1, 1, "", "LazySymmetricFunctions"]], "sage.rings.lazy_series_ring.LazyCompletionGradedAlgebra": [[4, 2, 1, "", "Element"], [4, 3, 1, "", "some_elements"]], "sage.rings.lazy_series_ring.LazyDirichletSeriesRing": [[4, 2, 1, "", "Element"], [4, 3, 1, "", "one"], [4, 3, 1, "", "some_elements"]], "sage.rings.lazy_series_ring.LazyLaurentSeriesRing": [[4, 2, 1, "", "Element"], [4, 3, 1, "", "euler"], [4, 3, 1, "", "gen"], [4, 3, 1, "", "gens"], [4, 3, 1, "", "ngens"], [4, 3, 1, "", "q_pochhammer"], [4, 3, 1, "", "residue_field"], [4, 3, 1, "", "series"], [4, 3, 1, "", "some_elements"], [4, 3, 1, "", "uniformizer"]], "sage.rings.lazy_series_ring.LazyPowerSeriesRing": [[4, 2, 1, "", "Element"], [4, 3, 1, "", "fraction_field"], [4, 3, 1, "", "gen"], [4, 3, 1, "", "gens"], [4, 3, 1, "", "ngens"], [4, 3, 1, "", "residue_field"], [4, 3, 1, "", "some_elements"], [4, 3, 1, "", "uniformizer"]], "sage.rings.lazy_series_ring.LazySeriesRing": [[4, 3, 1, "", "characteristic"], [4, 3, 1, "", "is_exact"], [4, 3, 1, "", "is_sparse"], [4, 3, 1, "", "one"], [4, 2, 1, "", "options"], [4, 3, 1, "", "undefined"], [4, 3, 1, "", "unknown"], [4, 3, 1, "", "zero"]], "sage.rings.lazy_series_ring.LazySymmetricFunctions": [[4, 2, 1, "", "Element"]], "sage.rings.multi_power_series_ring": [[5, 1, 1, "", "MPowerSeriesRing_generic"], [5, 4, 1, "", "is_MPowerSeriesRing"], [5, 4, 1, "", "unpickle_multi_power_series_ring_v0"]], "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic": [[5, 2, 1, "", "Element"], [5, 3, 1, "", "O"], [5, 3, 1, "", "bigoh"], [5, 3, 1, "", "change_ring"], [5, 3, 1, "", "characteristic"], [5, 3, 1, "", "construction"], [5, 3, 1, "", "gen"], [5, 3, 1, "", "is_dense"], [5, 3, 1, "", "is_integral_domain"], [5, 3, 1, "", "is_noetherian"], [5, 3, 1, "", "is_sparse"], [5, 3, 1, "", "laurent_series_ring"], [5, 3, 1, "", "ngens"], [5, 3, 1, "", "prec_ideal"], [5, 3, 1, "", "remove_var"], [5, 3, 1, "", "term_order"]], "sage.rings.multi_power_series_ring_element": [[6, 1, 1, "", "MO"], [6, 1, 1, "", "MPowerSeries"], [6, 4, 1, "", "is_MPowerSeries"]], "sage.rings.multi_power_series_ring_element.MPowerSeries": [[6, 3, 1, "", "O"], [6, 3, 1, "", "V"], [6, 3, 1, "", "add_bigoh"], [6, 3, 1, "", "coefficients"], [6, 3, 1, "", "constant_coefficient"], [6, 3, 1, "", "degree"], [6, 3, 1, "", "derivative"], [6, 3, 1, "", "dict"], [6, 3, 1, "", "egf"], [6, 3, 1, "", "exp"], [6, 3, 1, "", "exponents"], [6, 3, 1, "", "integral"], [6, 3, 1, "", "is_nilpotent"], [6, 3, 1, "", "is_square"], [6, 3, 1, "", "is_unit"], [6, 3, 1, "", "laurent_series"], [6, 3, 1, "", "list"], [6, 3, 1, "", "log"], [6, 3, 1, "", "monomials"], [6, 3, 1, "", "ogf"], [6, 3, 1, "", "padded_list"], [6, 3, 1, "", "polynomial"], [6, 3, 1, "", "prec"], [6, 3, 1, "", "quo_rem"], [6, 3, 1, "", "shift"], [6, 3, 1, "", "solve_linear_de"], [6, 3, 1, "", "sqrt"], [6, 3, 1, "", "square_root"], [6, 3, 1, "", "trailing_monomial"], [6, 3, 1, "", "truncate"], [6, 3, 1, "", "valuation"], [6, 3, 1, "", "valuation_zero_part"], [6, 3, 1, "", "variable"], [6, 3, 1, "", "variables"]], "sage.rings.power_series_pari": [[7, 1, 1, "", "PowerSeries_pari"]], "sage.rings.power_series_pari.PowerSeries_pari": [[7, 3, 1, "", "dict"], [7, 3, 1, "", "integral"], [7, 3, 1, "", "list"], [7, 3, 1, "", "padded_list"], [7, 3, 1, "", "polynomial"], [7, 3, 1, "", "reverse"], [7, 3, 1, "", "valuation"]], "sage.rings.power_series_poly": [[8, 1, 1, "", "BaseRingFloorDivAction"], [8, 1, 1, "", "PowerSeries_poly"], [8, 4, 1, "", "make_powerseries_poly_v0"]], "sage.rings.power_series_poly.PowerSeries_poly": [[8, 3, 1, "", "degree"], [8, 3, 1, "", "dict"], [8, 3, 1, "", "integral"], [8, 3, 1, "", "list"], [8, 3, 1, "", "pade"], [8, 3, 1, "", "polynomial"], [8, 3, 1, "", "reverse"], [8, 3, 1, "", "truncate"], [8, 3, 1, "", "truncate_powerseries"], [8, 3, 1, "", "valuation"]], "sage.rings.power_series_ring": [[9, 4, 1, "", "PowerSeriesRing"], [9, 1, 1, "", "PowerSeriesRing_domain"], [9, 1, 1, "", "PowerSeriesRing_generic"], [9, 1, 1, "", "PowerSeriesRing_over_field"], [9, 4, 1, "", "is_PowerSeriesRing"], [9, 4, 1, "", "unpickle_power_series_ring_v0"]], "sage.rings.power_series_ring.PowerSeriesRing_domain": [[9, 3, 1, "", "fraction_field"]], "sage.rings.power_series_ring.PowerSeriesRing_generic": [[9, 3, 1, "", "base_extend"], [9, 3, 1, "", "change_ring"], [9, 3, 1, "", "change_var"], [9, 3, 1, "", "characteristic"], [9, 3, 1, "", "construction"], [9, 3, 1, "", "gen"], [9, 3, 1, "", "is_dense"], [9, 3, 1, "", "is_exact"], [9, 3, 1, "", "is_field"], [9, 3, 1, "", "is_finite"], [9, 3, 1, "", "is_sparse"], [9, 3, 1, "", "laurent_series_ring"], [9, 3, 1, "", "ngens"], [9, 3, 1, "", "random_element"], [9, 3, 1, "", "residue_field"], [9, 3, 1, "", "uniformizer"], [9, 3, 1, "", "variable_names_recursive"]], "sage.rings.power_series_ring.PowerSeriesRing_over_field": [[9, 3, 1, "", "fraction_field"]], "sage.rings.power_series_ring_element": [[10, 1, 1, "", "PowerSeries"], [10, 4, 1, "", "is_PowerSeries"], [10, 4, 1, "", "make_element_from_parent_v0"], [10, 4, 1, "", "make_powerseries_poly_v0"]], "sage.rings.power_series_ring_element.PowerSeries": [[10, 3, 1, "", "O"], [10, 3, 1, "", "V"], [10, 3, 1, "", "add_bigoh"], [10, 3, 1, "", "base_extend"], [10, 3, 1, "", "base_ring"], [10, 3, 1, "", "change_ring"], [10, 3, 1, "", "coefficients"], [10, 3, 1, "", "common_prec"], [10, 3, 1, "", "cos"], [10, 3, 1, "", "cosh"], [10, 3, 1, "", "degree"], [10, 3, 1, "", "derivative"], [10, 3, 1, "", "egf_to_ogf"], [10, 3, 1, "", "exp"], [10, 3, 1, "", "exponents"], [10, 3, 1, "", "inverse"], [10, 3, 1, "", "is_dense"], [10, 3, 1, "", "is_gen"], [10, 3, 1, "", "is_monomial"], [10, 3, 1, "", "is_sparse"], [10, 3, 1, "", "is_square"], [10, 3, 1, "", "is_unit"], [10, 3, 1, "", "jacobi_continued_fraction"], [10, 3, 1, "", "laurent_series"], [10, 3, 1, "", "lift_to_precision"], [10, 3, 1, "", "list"], [10, 3, 1, "", "log"], [10, 3, 1, "", "map_coefficients"], [10, 3, 1, "", "nth_root"], [10, 3, 1, "", "ogf_to_egf"], [10, 3, 1, "", "padded_list"], [10, 3, 1, "", "polynomial"], [10, 3, 1, "", "prec"], [10, 3, 1, "", "precision_absolute"], [10, 3, 1, "", "precision_relative"], [10, 3, 1, "", "shift"], [10, 3, 1, "", "sin"], [10, 3, 1, "", "sinh"], [10, 3, 1, "", "solve_linear_de"], [10, 3, 1, "", "sqrt"], [10, 3, 1, "", "square_root"], [10, 3, 1, "", "stieltjes_continued_fraction"], [10, 3, 1, "", "tan"], [10, 3, 1, "", "tanh"], [10, 3, 1, "", "truncate"], [10, 3, 1, "", "valuation"], [10, 3, 1, "", "valuation_zero_part"], [10, 3, 1, "", "variable"]], "sage.rings.puiseux_series_ring": [[11, 1, 1, "", "PuiseuxSeriesRing"]], "sage.rings.puiseux_series_ring.PuiseuxSeriesRing": [[11, 2, 1, "", "Element"], [11, 3, 1, "", "base_extend"], [11, 3, 1, "", "change_ring"], [11, 3, 1, "", "default_prec"], [11, 3, 1, "", "fraction_field"], [11, 3, 1, "", "gen"], [11, 3, 1, "", "is_dense"], [11, 3, 1, "", "is_field"], [11, 3, 1, "", "is_sparse"], [11, 3, 1, "", "laurent_series_ring"], [11, 3, 1, "", "ngens"], [11, 3, 1, "", "residue_field"], [11, 3, 1, "", "uniformizer"]], "sage.rings.puiseux_series_ring_element": [[12, 1, 1, "", "PuiseuxSeries"]], "sage.rings.puiseux_series_ring_element.PuiseuxSeries": [[12, 3, 1, "", "add_bigoh"], [12, 3, 1, "", "change_ring"], [12, 3, 1, "", "coefficients"], [12, 3, 1, "", "common_prec"], [12, 3, 1, "", "degree"], [12, 3, 1, "", "exponents"], [12, 3, 1, "", "inverse"], [12, 3, 1, "", "is_monomial"], [12, 3, 1, "", "is_unit"], [12, 3, 1, "", "is_zero"], [12, 3, 1, "", "laurent_part"], [12, 3, 1, "", "laurent_series"], [12, 3, 1, "", "list"], [12, 3, 1, "", "power_series"], [12, 3, 1, "", "prec"], [12, 3, 1, "", "precision_absolute"], [12, 3, 1, "", "precision_relative"], [12, 3, 1, "", "ramification_index"], [12, 3, 1, "", "shift"], [12, 3, 1, "", "truncate"], [12, 3, 1, "", "valuation"], [12, 3, 1, "", "variable"]], "sage.rings.tate_algebra": [[13, 1, 1, "", "TateAlgebraFactory"], [13, 1, 1, "", "TateAlgebra_generic"], [13, 1, 1, "", "TateTermMonoid"]], "sage.rings.tate_algebra.TateAlgebraFactory": [[13, 3, 1, "", "create_key"], [13, 3, 1, "", "create_object"]], "sage.rings.tate_algebra.TateAlgebra_generic": [[13, 3, 1, "", "absolute_e"], [13, 3, 1, "", "characteristic"], [13, 3, 1, "", "gen"], [13, 3, 1, "", "gens"], [13, 3, 1, "", "integer_ring"], [13, 3, 1, "", "is_integral_domain"], [13, 3, 1, "", "log_radii"], [13, 3, 1, "", "monoid_of_terms"], [13, 3, 1, "", "ngens"], [13, 3, 1, "", "precision_cap"], [13, 3, 1, "", "prime"], [13, 3, 1, "", "random_element"], [13, 3, 1, "", "some_elements"], [13, 3, 1, "", "term_order"], [13, 3, 1, "", "variable_names"]], "sage.rings.tate_algebra.TateTermMonoid": [[13, 2, 1, "", "Element"], [13, 3, 1, "", "algebra_of_series"], [13, 3, 1, "", "base_ring"], [13, 3, 1, "", "gen"], [13, 3, 1, "", "gens"], [13, 3, 1, "", "log_radii"], [13, 3, 1, "", "ngens"], [13, 3, 1, "", "prime"], [13, 3, 1, "", "some_elements"], [13, 3, 1, "", "term_order"], [13, 3, 1, "", "variable_names"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"power": [0, 5, 6, 7, 8, 9, 10], "seri": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "ring": [0, 1, 4, 5, 9, 11, 12], "laurent": [0, 1, 2], "indic": 0, "tabl": 0, "lazi": [3, 4], "todo": [3, 4, 6], "multivari": [5, 6], "implement": 7, "us": 7, "pari": 7, "method": 8, "puiseux": [11, 12], "element": 12, "tate": 13, "algebra": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Power Series Rings and Laurent Series Rings": [[0, "power-series-rings-and-laurent-series-rings"]], "Indices and Tables": [[0, "indices-and-tables"]], "Laurent Series Rings": [[1, "laurent-series-rings"]], "Laurent Series": [[2, "laurent-series"]], "Lazy Series": [[3, "lazy-series"]], "Todo": [[3, "id5"], [4, "id1"], [4, "id2"], [6, "id1"]], "Lazy Series Rings": [[4, "lazy-series-rings"]], "Multivariate Power Series Rings": [[5, "multivariate-power-series-rings"]], "Multivariate Power Series": [[6, "multivariate-power-series"]], "Power series implemented using PARI": [[7, "power-series-implemented-using-pari"]], "Power Series Methods": [[8, "power-series-methods"]], "Power Series Rings": [[9, "power-series-rings"]], "Power Series": [[10, "power-series"]], "Puiseux Series Ring": [[11, "puiseux-series-ring"]], "Puiseux Series Ring Element": [[12, "puiseux-series-ring-element"]], "Tate algebras": [[13, "tate-algebras"]]}, "indexentries": {"element (sage.rings.laurent_series_ring.laurentseriesring attribute)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.Element"]], "laurentseriesring (class in sage.rings.laurent_series_ring)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing"]], "base_extend() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.base_extend"]], "change_ring() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.change_ring"]], "characteristic() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.characteristic"]], "construction() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.construction"]], "default_prec() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.default_prec"]], "fraction_field() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.fraction_field"]], "gen() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.gen"]], "is_laurentseriesring() (in module sage.rings.laurent_series_ring)": [[1, "sage.rings.laurent_series_ring.is_LaurentSeriesRing"]], "is_dense() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.is_dense"]], "is_exact() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.is_exact"]], "is_field() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.is_field"]], "is_sparse() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.is_sparse"]], "laurent_polynomial_ring() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.laurent_polynomial_ring"]], "module": [[1, "module-sage.rings.laurent_series_ring"], [2, "module-sage.rings.laurent_series_ring_element"], [3, "module-sage.rings.lazy_series"], [4, "module-sage.rings.lazy_series_ring"], [5, "module-sage.rings.multi_power_series_ring"], [6, "module-sage.rings.multi_power_series_ring_element"], [7, "module-sage.rings.power_series_pari"], [8, "module-sage.rings.power_series_poly"], [9, "module-sage.rings.power_series_ring"], [10, "module-sage.rings.power_series_ring_element"], [11, "module-sage.rings.puiseux_series_ring"], [12, "module-sage.rings.puiseux_series_ring_element"], [13, "module-sage.rings.tate_algebra"]], "ngens() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.ngens"]], "polynomial_ring() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.polynomial_ring"]], "power_series_ring() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.power_series_ring"]], "random_element() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.random_element"]], "residue_field() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.residue_field"]], "sage.rings.laurent_series_ring": [[1, "module-sage.rings.laurent_series_ring"]], "uniformizer() (sage.rings.laurent_series_ring.laurentseriesring method)": [[1, "sage.rings.laurent_series_ring.LaurentSeriesRing.uniformizer"]], "laurentseries (class in sage.rings.laurent_series_ring_element)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries"]], "o() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.O"]], "v() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.V"]], "add_bigoh() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.add_bigoh"]], "change_ring() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.change_ring"]], "coefficients() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.coefficients"]], "common_prec() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.common_prec"]], "common_valuation() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.common_valuation"]], "degree() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.degree"]], "derivative() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.derivative"]], "exponents() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.exponents"]], "integral() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.integral"]], "inverse() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.inverse"]], "is_laurentseries() (in module sage.rings.laurent_series_ring_element)": [[2, "sage.rings.laurent_series_ring_element.is_LaurentSeries"]], "is_monomial() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.is_monomial"]], "is_unit() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.is_unit"]], "is_zero() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.is_zero"]], "laurent_polynomial() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.laurent_polynomial"]], "lift_to_precision() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.lift_to_precision"]], "list() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.list"]], "nth_root() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.nth_root"]], "power_series() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.power_series"]], "prec() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.prec"]], "precision_absolute() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.precision_absolute"]], "precision_relative() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.precision_relative"]], "residue() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.residue"]], "reverse() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.reverse"]], "sage.rings.laurent_series_ring_element": [[2, "module-sage.rings.laurent_series_ring_element"]], "shift() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.shift"]], "truncate() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.truncate"]], "truncate_laurentseries() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.truncate_laurentseries"]], "truncate_neg() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.truncate_neg"]], "valuation() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.valuation"]], "valuation_zero_part() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.valuation_zero_part"]], "variable() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.variable"]], "verschiebung() (sage.rings.laurent_series_ring_element.laurentseries method)": [[2, "sage.rings.laurent_series_ring_element.LaurentSeries.verschiebung"]], "lazycauchyproductseries (class in sage.rings.lazy_series)": [[3, "sage.rings.lazy_series.LazyCauchyProductSeries"]], "lazycompletiongradedalgebraelement (class in sage.rings.lazy_series)": [[3, "sage.rings.lazy_series.LazyCompletionGradedAlgebraElement"]], "lazydirichletseries (class in sage.rings.lazy_series)": [[3, "sage.rings.lazy_series.LazyDirichletSeries"]], "lazylaurentseries (class in sage.rings.lazy_series)": [[3, "sage.rings.lazy_series.LazyLaurentSeries"]], "lazymoduleelement (class in sage.rings.lazy_series)": [[3, "sage.rings.lazy_series.LazyModuleElement"]], "lazypowerseries (class in sage.rings.lazy_series)": [[3, "sage.rings.lazy_series.LazyPowerSeries"]], "lazypowerseries_gcd_mixin (class in sage.rings.lazy_series)": [[3, "sage.rings.lazy_series.LazyPowerSeries_gcd_mixin"]], "lazysymmetricfunction (class in sage.rings.lazy_series)": [[3, "sage.rings.lazy_series.LazySymmetricFunction"]], "approximate_series() (sage.rings.lazy_series.lazylaurentseries method)": [[3, "sage.rings.lazy_series.LazyLaurentSeries.approximate_series"]], "arccos() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.arccos"]], "arccot() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.arccot"]], "arcsin() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.arcsin"]], "arcsinh() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.arcsinh"]], "arctan() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.arctan"]], "arctanh() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.arctanh"]], "arithmetic_product() (sage.rings.lazy_series.lazysymmetricfunction method)": [[3, "sage.rings.lazy_series.LazySymmetricFunction.arithmetic_product"]], "change_ring() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.change_ring"]], "coefficient() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.coefficient"]], "coefficients() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.coefficients"]], "compose() (sage.rings.lazy_series.lazylaurentseries method)": [[3, "sage.rings.lazy_series.LazyLaurentSeries.compose"]], "compose() (sage.rings.lazy_series.lazypowerseries method)": [[3, "sage.rings.lazy_series.LazyPowerSeries.compose"]], "compositional_inverse() (sage.rings.lazy_series.lazylaurentseries method)": [[3, "sage.rings.lazy_series.LazyLaurentSeries.compositional_inverse"]], "compositional_inverse() (sage.rings.lazy_series.lazypowerseries method)": [[3, "sage.rings.lazy_series.LazyPowerSeries.compositional_inverse"]], "compositional_inverse() (sage.rings.lazy_series.lazysymmetricfunction method)": [[3, "sage.rings.lazy_series.LazySymmetricFunction.compositional_inverse"]], "compute_coefficients() (sage.rings.lazy_series.lazypowerseries method)": [[3, "sage.rings.lazy_series.LazyPowerSeries.compute_coefficients"]], "cos() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.cos"]], "cosh() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.cosh"]], "cot() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.cot"]], "coth() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.coth"]], "csc() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.csc"]], "csch() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.csch"]], "define() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.define"]], "derivative() (sage.rings.lazy_series.lazylaurentseries method)": [[3, "sage.rings.lazy_series.LazyLaurentSeries.derivative"]], "derivative() (sage.rings.lazy_series.lazypowerseries method)": [[3, "sage.rings.lazy_series.LazyPowerSeries.derivative"]], "derivative_with_respect_to_p1() (sage.rings.lazy_series.lazysymmetricfunction method)": [[3, "sage.rings.lazy_series.LazySymmetricFunction.derivative_with_respect_to_p1"]], "euler() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.euler"]], "exp() (sage.rings.lazy_series.lazycauchyproductseries method)": [[3, "sage.rings.lazy_series.LazyCauchyProductSeries.exp"]], "exp() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.exp"]], "exponential() (sage.rings.lazy_series.lazypowerseries method)": [[3, "sage.rings.lazy_series.LazyPowerSeries.exponential"]], "functorial_composition() (sage.rings.lazy_series.lazysymmetricfunction method)": [[3, "sage.rings.lazy_series.LazySymmetricFunction.functorial_composition"]], "gcd() (sage.rings.lazy_series.lazypowerseries_gcd_mixin method)": [[3, "sage.rings.lazy_series.LazyPowerSeries_gcd_mixin.gcd"]], "hypergeometric() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.hypergeometric"]], "is_unit() (sage.rings.lazy_series.lazydirichletseries method)": [[3, "sage.rings.lazy_series.LazyDirichletSeries.is_unit"]], "is_unit() (sage.rings.lazy_series.lazylaurentseries method)": [[3, "sage.rings.lazy_series.LazyLaurentSeries.is_unit"]], "is_unit() (sage.rings.lazy_series.lazypowerseries method)": [[3, "sage.rings.lazy_series.LazyPowerSeries.is_unit"]], "is_unit() (sage.rings.lazy_series.lazysymmetricfunction method)": [[3, "sage.rings.lazy_series.LazySymmetricFunction.is_unit"]], "lift_to_precision() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.lift_to_precision"]], "log() (sage.rings.lazy_series.lazycauchyproductseries method)": [[3, "sage.rings.lazy_series.LazyCauchyProductSeries.log"]], "log() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.log"]], "map_coefficients() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.map_coefficients"]], "plethysm() (sage.rings.lazy_series.lazysymmetricfunction method)": [[3, "sage.rings.lazy_series.LazySymmetricFunction.plethysm"]], "plethystic_inverse() (sage.rings.lazy_series.lazysymmetricfunction method)": [[3, "sage.rings.lazy_series.LazySymmetricFunction.plethystic_inverse"]], "polynomial() (sage.rings.lazy_series.lazylaurentseries method)": [[3, "sage.rings.lazy_series.LazyLaurentSeries.polynomial"]], "polynomial() (sage.rings.lazy_series.lazypowerseries method)": [[3, "sage.rings.lazy_series.LazyPowerSeries.polynomial"]], "prec() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.prec"]], "q_pochhammer() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.q_pochhammer"]], "revert() (sage.rings.lazy_series.lazylaurentseries method)": [[3, "sage.rings.lazy_series.LazyLaurentSeries.revert"]], "revert() (sage.rings.lazy_series.lazypowerseries method)": [[3, "sage.rings.lazy_series.LazyPowerSeries.revert"]], "revert() (sage.rings.lazy_series.lazysymmetricfunction method)": [[3, "sage.rings.lazy_series.LazySymmetricFunction.revert"]], "sage.rings.lazy_series": [[3, "module-sage.rings.lazy_series"]], "sec() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.sec"]], "sech() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.sech"]], "set() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.set"]], "shift() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.shift"]], "sin() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.sin"]], "sinh() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.sinh"]], "sqrt() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.sqrt"]], "symmetric_function() (sage.rings.lazy_series.lazysymmetricfunction method)": [[3, "sage.rings.lazy_series.LazySymmetricFunction.symmetric_function"]], "tan() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.tan"]], "tanh() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.tanh"]], "truncate() (sage.rings.lazy_series.lazymoduleelement method)": [[3, "sage.rings.lazy_series.LazyModuleElement.truncate"]], "valuation() (sage.rings.lazy_series.lazycauchyproductseries method)": [[3, "sage.rings.lazy_series.LazyCauchyProductSeries.valuation"]], "valuation() (sage.rings.lazy_series.lazydirichletseries method)": [[3, "sage.rings.lazy_series.LazyDirichletSeries.valuation"]], "xgcd() (sage.rings.lazy_series.lazypowerseries_gcd_mixin method)": [[3, "sage.rings.lazy_series.LazyPowerSeries_gcd_mixin.xgcd"]], "element (sage.rings.lazy_series_ring.lazycompletiongradedalgebra attribute)": [[4, "sage.rings.lazy_series_ring.LazyCompletionGradedAlgebra.Element"]], "element (sage.rings.lazy_series_ring.lazydirichletseriesring attribute)": [[4, "sage.rings.lazy_series_ring.LazyDirichletSeriesRing.Element"]], "element (sage.rings.lazy_series_ring.lazylaurentseriesring attribute)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing.Element"]], "element (sage.rings.lazy_series_ring.lazypowerseriesring attribute)": [[4, "sage.rings.lazy_series_ring.LazyPowerSeriesRing.Element"]], "element (sage.rings.lazy_series_ring.lazysymmetricfunctions attribute)": [[4, "sage.rings.lazy_series_ring.LazySymmetricFunctions.Element"]], "lazycompletiongradedalgebra (class in sage.rings.lazy_series_ring)": [[4, "sage.rings.lazy_series_ring.LazyCompletionGradedAlgebra"]], "lazydirichletseriesring (class in sage.rings.lazy_series_ring)": [[4, "sage.rings.lazy_series_ring.LazyDirichletSeriesRing"]], "lazylaurentseriesring (class in sage.rings.lazy_series_ring)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing"]], "lazypowerseriesring (class in sage.rings.lazy_series_ring)": [[4, "sage.rings.lazy_series_ring.LazyPowerSeriesRing"]], "lazyseriesring (class in sage.rings.lazy_series_ring)": [[4, "sage.rings.lazy_series_ring.LazySeriesRing"]], "lazysymmetricfunctions (class in sage.rings.lazy_series_ring)": [[4, "sage.rings.lazy_series_ring.LazySymmetricFunctions"]], "characteristic() (sage.rings.lazy_series_ring.lazyseriesring method)": [[4, "sage.rings.lazy_series_ring.LazySeriesRing.characteristic"]], "euler() (sage.rings.lazy_series_ring.lazylaurentseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing.euler"]], "fraction_field() (sage.rings.lazy_series_ring.lazypowerseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyPowerSeriesRing.fraction_field"]], "gen() (sage.rings.lazy_series_ring.lazylaurentseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing.gen"]], "gen() (sage.rings.lazy_series_ring.lazypowerseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyPowerSeriesRing.gen"]], "gens() (sage.rings.lazy_series_ring.lazylaurentseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing.gens"]], "gens() (sage.rings.lazy_series_ring.lazypowerseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyPowerSeriesRing.gens"]], "is_exact() (sage.rings.lazy_series_ring.lazyseriesring method)": [[4, "sage.rings.lazy_series_ring.LazySeriesRing.is_exact"]], "is_sparse() (sage.rings.lazy_series_ring.lazyseriesring method)": [[4, "sage.rings.lazy_series_ring.LazySeriesRing.is_sparse"]], "ngens() (sage.rings.lazy_series_ring.lazylaurentseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing.ngens"]], "ngens() (sage.rings.lazy_series_ring.lazypowerseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyPowerSeriesRing.ngens"]], "one() (sage.rings.lazy_series_ring.lazydirichletseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyDirichletSeriesRing.one"]], "one() (sage.rings.lazy_series_ring.lazyseriesring method)": [[4, "sage.rings.lazy_series_ring.LazySeriesRing.one"]], "options (sage.rings.lazy_series_ring.lazyseriesring attribute)": [[4, "sage.rings.lazy_series_ring.LazySeriesRing.options"]], "q_pochhammer() (sage.rings.lazy_series_ring.lazylaurentseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing.q_pochhammer"]], "residue_field() (sage.rings.lazy_series_ring.lazylaurentseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing.residue_field"]], "residue_field() (sage.rings.lazy_series_ring.lazypowerseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyPowerSeriesRing.residue_field"]], "sage.rings.lazy_series_ring": [[4, "module-sage.rings.lazy_series_ring"]], "series() (sage.rings.lazy_series_ring.lazylaurentseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing.series"]], "some_elements() (sage.rings.lazy_series_ring.lazycompletiongradedalgebra method)": [[4, "sage.rings.lazy_series_ring.LazyCompletionGradedAlgebra.some_elements"]], "some_elements() (sage.rings.lazy_series_ring.lazydirichletseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyDirichletSeriesRing.some_elements"]], "some_elements() (sage.rings.lazy_series_ring.lazylaurentseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing.some_elements"]], "some_elements() (sage.rings.lazy_series_ring.lazypowerseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyPowerSeriesRing.some_elements"]], "undefined() (sage.rings.lazy_series_ring.lazyseriesring method)": [[4, "sage.rings.lazy_series_ring.LazySeriesRing.undefined"]], "uniformizer() (sage.rings.lazy_series_ring.lazylaurentseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyLaurentSeriesRing.uniformizer"]], "uniformizer() (sage.rings.lazy_series_ring.lazypowerseriesring method)": [[4, "sage.rings.lazy_series_ring.LazyPowerSeriesRing.uniformizer"]], "unknown() (sage.rings.lazy_series_ring.lazyseriesring method)": [[4, "sage.rings.lazy_series_ring.LazySeriesRing.unknown"]], "zero() (sage.rings.lazy_series_ring.lazyseriesring method)": [[4, "sage.rings.lazy_series_ring.LazySeriesRing.zero"]], "element (sage.rings.multi_power_series_ring.mpowerseriesring_generic attribute)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.Element"]], "mpowerseriesring_generic (class in sage.rings.multi_power_series_ring)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic"]], "o() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.O"]], "bigoh() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.bigoh"]], "change_ring() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.change_ring"]], "characteristic() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.characteristic"]], "construction() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.construction"]], "gen() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.gen"]], "is_mpowerseriesring() (in module sage.rings.multi_power_series_ring)": [[5, "sage.rings.multi_power_series_ring.is_MPowerSeriesRing"]], "is_dense() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.is_dense"]], "is_integral_domain() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.is_integral_domain"]], "is_noetherian() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.is_noetherian"]], "is_sparse() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.is_sparse"]], "laurent_series_ring() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.laurent_series_ring"]], "ngens() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.ngens"]], "prec_ideal() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.prec_ideal"]], "remove_var() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.remove_var"]], "sage.rings.multi_power_series_ring": [[5, "module-sage.rings.multi_power_series_ring"]], "term_order() (sage.rings.multi_power_series_ring.mpowerseriesring_generic method)": [[5, "sage.rings.multi_power_series_ring.MPowerSeriesRing_generic.term_order"]], "unpickle_multi_power_series_ring_v0() (in module sage.rings.multi_power_series_ring)": [[5, "sage.rings.multi_power_series_ring.unpickle_multi_power_series_ring_v0"]], "mo (class in sage.rings.multi_power_series_ring_element)": [[6, "sage.rings.multi_power_series_ring_element.MO"]], "mpowerseries (class in sage.rings.multi_power_series_ring_element)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries"]], "o() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.O"]], "v() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.V"]], "add_bigoh() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.add_bigoh"]], "coefficients() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.coefficients"]], "constant_coefficient() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.constant_coefficient"]], "degree() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.degree"]], "derivative() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.derivative"]], "dict() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.dict"]], "egf() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.egf"]], "exp() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.exp"]], "exponents() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.exponents"]], "integral() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.integral"]], "is_mpowerseries() (in module sage.rings.multi_power_series_ring_element)": [[6, "sage.rings.multi_power_series_ring_element.is_MPowerSeries"]], "is_nilpotent() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.is_nilpotent"]], "is_square() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.is_square"]], "is_unit() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.is_unit"]], "laurent_series() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.laurent_series"]], "list() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.list"]], "log() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.log"]], "monomials() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.monomials"]], "ogf() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.ogf"]], "padded_list() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.padded_list"]], "polynomial() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.polynomial"]], "prec() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.prec"]], "quo_rem() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.quo_rem"]], "sage.rings.multi_power_series_ring_element": [[6, "module-sage.rings.multi_power_series_ring_element"]], "shift() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.shift"]], "solve_linear_de() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.solve_linear_de"]], "sqrt() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.sqrt"]], "square_root() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.square_root"]], "trailing_monomial() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.trailing_monomial"]], "truncate() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.truncate"]], "valuation() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.valuation"]], "valuation_zero_part() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.valuation_zero_part"]], "variable() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.variable"]], "variables() (sage.rings.multi_power_series_ring_element.mpowerseries method)": [[6, "sage.rings.multi_power_series_ring_element.MPowerSeries.variables"]], "powerseries_pari (class in sage.rings.power_series_pari)": [[7, "sage.rings.power_series_pari.PowerSeries_pari"]], "dict() (sage.rings.power_series_pari.powerseries_pari method)": [[7, "sage.rings.power_series_pari.PowerSeries_pari.dict"]], "integral() (sage.rings.power_series_pari.powerseries_pari method)": [[7, "sage.rings.power_series_pari.PowerSeries_pari.integral"]], "list() (sage.rings.power_series_pari.powerseries_pari method)": [[7, "sage.rings.power_series_pari.PowerSeries_pari.list"]], "padded_list() (sage.rings.power_series_pari.powerseries_pari method)": [[7, "sage.rings.power_series_pari.PowerSeries_pari.padded_list"]], "polynomial() (sage.rings.power_series_pari.powerseries_pari method)": [[7, "sage.rings.power_series_pari.PowerSeries_pari.polynomial"]], "reverse() (sage.rings.power_series_pari.powerseries_pari method)": [[7, "sage.rings.power_series_pari.PowerSeries_pari.reverse"]], "sage.rings.power_series_pari": [[7, "module-sage.rings.power_series_pari"]], "valuation() (sage.rings.power_series_pari.powerseries_pari method)": [[7, "sage.rings.power_series_pari.PowerSeries_pari.valuation"]], "baseringfloordivaction (class in sage.rings.power_series_poly)": [[8, "sage.rings.power_series_poly.BaseRingFloorDivAction"]], "powerseries_poly (class in sage.rings.power_series_poly)": [[8, "sage.rings.power_series_poly.PowerSeries_poly"]], "degree() (sage.rings.power_series_poly.powerseries_poly method)": [[8, "sage.rings.power_series_poly.PowerSeries_poly.degree"]], "dict() (sage.rings.power_series_poly.powerseries_poly method)": [[8, "sage.rings.power_series_poly.PowerSeries_poly.dict"]], "integral() (sage.rings.power_series_poly.powerseries_poly method)": [[8, "sage.rings.power_series_poly.PowerSeries_poly.integral"]], "list() (sage.rings.power_series_poly.powerseries_poly method)": [[8, "sage.rings.power_series_poly.PowerSeries_poly.list"]], "make_powerseries_poly_v0() (in module sage.rings.power_series_poly)": [[8, "sage.rings.power_series_poly.make_powerseries_poly_v0"]], "pade() (sage.rings.power_series_poly.powerseries_poly method)": [[8, "sage.rings.power_series_poly.PowerSeries_poly.pade"]], "polynomial() (sage.rings.power_series_poly.powerseries_poly method)": [[8, "sage.rings.power_series_poly.PowerSeries_poly.polynomial"]], "reverse() (sage.rings.power_series_poly.powerseries_poly method)": [[8, "sage.rings.power_series_poly.PowerSeries_poly.reverse"]], "sage.rings.power_series_poly": [[8, "module-sage.rings.power_series_poly"]], "truncate() (sage.rings.power_series_poly.powerseries_poly method)": [[8, "sage.rings.power_series_poly.PowerSeries_poly.truncate"]], "truncate_powerseries() (sage.rings.power_series_poly.powerseries_poly method)": [[8, "sage.rings.power_series_poly.PowerSeries_poly.truncate_powerseries"]], "valuation() (sage.rings.power_series_poly.powerseries_poly method)": [[8, "sage.rings.power_series_poly.PowerSeries_poly.valuation"]], "powerseriesring() (in module sage.rings.power_series_ring)": [[9, "sage.rings.power_series_ring.PowerSeriesRing"]], "powerseriesring_domain (class in sage.rings.power_series_ring)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_domain"]], "powerseriesring_generic (class in sage.rings.power_series_ring)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic"]], "powerseriesring_over_field (class in sage.rings.power_series_ring)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_over_field"]], "base_extend() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.base_extend"]], "change_ring() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.change_ring"]], "change_var() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.change_var"]], "characteristic() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.characteristic"]], "construction() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.construction"]], "fraction_field() (sage.rings.power_series_ring.powerseriesring_domain method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_domain.fraction_field"]], "fraction_field() (sage.rings.power_series_ring.powerseriesring_over_field method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_over_field.fraction_field"]], "gen() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.gen"]], "is_powerseriesring() (in module sage.rings.power_series_ring)": [[9, "sage.rings.power_series_ring.is_PowerSeriesRing"]], "is_dense() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.is_dense"]], "is_exact() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.is_exact"]], "is_field() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.is_field"]], "is_finite() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.is_finite"]], "is_sparse() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.is_sparse"]], "laurent_series_ring() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.laurent_series_ring"]], "ngens() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.ngens"]], "random_element() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.random_element"]], "residue_field() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.residue_field"]], "sage.rings.power_series_ring": [[9, "module-sage.rings.power_series_ring"]], "uniformizer() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.uniformizer"]], "unpickle_power_series_ring_v0() (in module sage.rings.power_series_ring)": [[9, "sage.rings.power_series_ring.unpickle_power_series_ring_v0"]], "variable_names_recursive() (sage.rings.power_series_ring.powerseriesring_generic method)": [[9, "sage.rings.power_series_ring.PowerSeriesRing_generic.variable_names_recursive"]], "o() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.O"]], "powerseries (class in sage.rings.power_series_ring_element)": [[10, "sage.rings.power_series_ring_element.PowerSeries"]], "v() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.V"]], "add_bigoh() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.add_bigoh"]], "base_extend() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.base_extend"]], "base_ring() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.base_ring"]], "change_ring() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.change_ring"]], "coefficients() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.coefficients"]], "common_prec() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.common_prec"]], "cos() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.cos"]], "cosh() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.cosh"]], "degree() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.degree"]], "derivative() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.derivative"]], "egf_to_ogf() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.egf_to_ogf"]], "exp() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.exp"]], "exponents() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.exponents"]], "inverse() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.inverse"]], "is_powerseries() (in module sage.rings.power_series_ring_element)": [[10, "sage.rings.power_series_ring_element.is_PowerSeries"]], "is_dense() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.is_dense"]], "is_gen() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.is_gen"]], "is_monomial() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.is_monomial"]], "is_sparse() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.is_sparse"]], "is_square() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.is_square"]], "is_unit() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.is_unit"]], "jacobi_continued_fraction() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.jacobi_continued_fraction"]], "laurent_series() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.laurent_series"]], "lift_to_precision() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.lift_to_precision"]], "list() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.list"]], "log() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.log"]], "make_element_from_parent_v0() (in module sage.rings.power_series_ring_element)": [[10, "sage.rings.power_series_ring_element.make_element_from_parent_v0"]], "make_powerseries_poly_v0() (in module sage.rings.power_series_ring_element)": [[10, "sage.rings.power_series_ring_element.make_powerseries_poly_v0"]], "map_coefficients() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.map_coefficients"]], "nth_root() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.nth_root"]], "ogf_to_egf() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.ogf_to_egf"]], "padded_list() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.padded_list"]], "polynomial() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.polynomial"]], "prec() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.prec"]], "precision_absolute() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.precision_absolute"]], "precision_relative() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.precision_relative"]], "sage.rings.power_series_ring_element": [[10, "module-sage.rings.power_series_ring_element"]], "shift() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.shift"]], "sin() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.sin"]], "sinh() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.sinh"]], "solve_linear_de() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.solve_linear_de"]], "sqrt() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.sqrt"]], "square_root() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.square_root"]], "stieltjes_continued_fraction() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.stieltjes_continued_fraction"]], "tan() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.tan"]], "tanh() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.tanh"]], "truncate() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.truncate"]], "valuation() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.valuation"]], "valuation_zero_part() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.valuation_zero_part"]], "variable() (sage.rings.power_series_ring_element.powerseries method)": [[10, "sage.rings.power_series_ring_element.PowerSeries.variable"]], "element (sage.rings.puiseux_series_ring.puiseuxseriesring attribute)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.Element"]], "puiseuxseriesring (class in sage.rings.puiseux_series_ring)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing"]], "base_extend() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.base_extend"]], "change_ring() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.change_ring"]], "default_prec() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.default_prec"]], "fraction_field() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.fraction_field"]], "gen() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.gen"]], "is_dense() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.is_dense"]], "is_field() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.is_field"]], "is_sparse() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.is_sparse"]], "laurent_series_ring() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.laurent_series_ring"]], "ngens() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.ngens"]], "residue_field() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.residue_field"]], "sage.rings.puiseux_series_ring": [[11, "module-sage.rings.puiseux_series_ring"]], "uniformizer() (sage.rings.puiseux_series_ring.puiseuxseriesring method)": [[11, "sage.rings.puiseux_series_ring.PuiseuxSeriesRing.uniformizer"]], "puiseuxseries (class in sage.rings.puiseux_series_ring_element)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries"]], "add_bigoh() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.add_bigoh"]], "change_ring() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.change_ring"]], "coefficients() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.coefficients"]], "common_prec() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.common_prec"]], "degree() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.degree"]], "exponents() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.exponents"]], "inverse() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.inverse"]], "is_monomial() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.is_monomial"]], "is_unit() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.is_unit"]], "is_zero() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.is_zero"]], "laurent_part() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.laurent_part"]], "laurent_series() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.laurent_series"]], "list() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.list"]], "power_series() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.power_series"]], "prec() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.prec"]], "precision_absolute() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.precision_absolute"]], "precision_relative() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.precision_relative"]], "ramification_index() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.ramification_index"]], "sage.rings.puiseux_series_ring_element": [[12, "module-sage.rings.puiseux_series_ring_element"]], "shift() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.shift"]], "truncate() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.truncate"]], "valuation() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.valuation"]], "variable() (sage.rings.puiseux_series_ring_element.puiseuxseries method)": [[12, "sage.rings.puiseux_series_ring_element.PuiseuxSeries.variable"]], "element (sage.rings.tate_algebra.tatetermmonoid attribute)": [[13, "sage.rings.tate_algebra.TateTermMonoid.Element"]], "tatealgebrafactory (class in sage.rings.tate_algebra)": [[13, "sage.rings.tate_algebra.TateAlgebraFactory"]], "tatealgebra_generic (class in sage.rings.tate_algebra)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic"]], "tatetermmonoid (class in sage.rings.tate_algebra)": [[13, "sage.rings.tate_algebra.TateTermMonoid"]], "absolute_e() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.absolute_e"]], "algebra_of_series() (sage.rings.tate_algebra.tatetermmonoid method)": [[13, "sage.rings.tate_algebra.TateTermMonoid.algebra_of_series"]], "base_ring() (sage.rings.tate_algebra.tatetermmonoid method)": [[13, "sage.rings.tate_algebra.TateTermMonoid.base_ring"]], "characteristic() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.characteristic"]], "create_key() (sage.rings.tate_algebra.tatealgebrafactory method)": [[13, "sage.rings.tate_algebra.TateAlgebraFactory.create_key"]], "create_object() (sage.rings.tate_algebra.tatealgebrafactory method)": [[13, "sage.rings.tate_algebra.TateAlgebraFactory.create_object"]], "gen() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.gen"]], "gen() (sage.rings.tate_algebra.tatetermmonoid method)": [[13, "sage.rings.tate_algebra.TateTermMonoid.gen"]], "gens() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.gens"]], "gens() (sage.rings.tate_algebra.tatetermmonoid method)": [[13, "sage.rings.tate_algebra.TateTermMonoid.gens"]], "integer_ring() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.integer_ring"]], "is_integral_domain() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.is_integral_domain"]], "log_radii() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.log_radii"]], "log_radii() (sage.rings.tate_algebra.tatetermmonoid method)": [[13, "sage.rings.tate_algebra.TateTermMonoid.log_radii"]], "monoid_of_terms() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.monoid_of_terms"]], "ngens() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.ngens"]], "ngens() (sage.rings.tate_algebra.tatetermmonoid method)": [[13, "sage.rings.tate_algebra.TateTermMonoid.ngens"]], "precision_cap() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.precision_cap"]], "prime() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.prime"]], "prime() (sage.rings.tate_algebra.tatetermmonoid method)": [[13, "sage.rings.tate_algebra.TateTermMonoid.prime"]], "random_element() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.random_element"]], "sage.rings.tate_algebra": [[13, "module-sage.rings.tate_algebra"]], "some_elements() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.some_elements"]], "some_elements() (sage.rings.tate_algebra.tatetermmonoid method)": [[13, "sage.rings.tate_algebra.TateTermMonoid.some_elements"]], "term_order() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.term_order"]], "term_order() (sage.rings.tate_algebra.tatetermmonoid method)": [[13, "sage.rings.tate_algebra.TateTermMonoid.term_order"]], "variable_names() (sage.rings.tate_algebra.tatealgebra_generic method)": [[13, "sage.rings.tate_algebra.TateAlgebra_generic.variable_names"]], "variable_names() (sage.rings.tate_algebra.tatetermmonoid method)": [[13, "sage.rings.tate_algebra.TateTermMonoid.variable_names"]]}})