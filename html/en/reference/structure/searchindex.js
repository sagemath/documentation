Search.setIndex({"docnames": ["index", "sage/misc/proof", "sage/structure/category_object", "sage/structure/debug_options", "sage/structure/dynamic_class", "sage/structure/element", "sage/structure/element_wrapper", "sage/structure/factorization", "sage/structure/factorization_integer", "sage/structure/factory", "sage/structure/formal_sum", "sage/structure/gens_py", "sage/structure/global_options", "sage/structure/indexed_generators", "sage/structure/list_clone", "sage/structure/list_clone_demo", "sage/structure/list_clone_timings", "sage/structure/list_clone_timings_cy", "sage/structure/mutability", "sage/structure/nonexact", "sage/structure/parent", "sage/structure/parent_base", "sage/structure/parent_gens", "sage/structure/parent_old", "sage/structure/proof/proof", "sage/structure/richcmp", "sage/structure/sage_object", "sage/structure/sequence", "sage/structure/set_factories", "sage/structure/set_factories_example", "sage/structure/test_factory", "sage/structure/unique_representation"], "filenames": ["index.rst", "sage/misc/proof.rst", "sage/structure/category_object.rst", "sage/structure/debug_options.rst", "sage/structure/dynamic_class.rst", "sage/structure/element.rst", "sage/structure/element_wrapper.rst", "sage/structure/factorization.rst", "sage/structure/factorization_integer.rst", "sage/structure/factory.rst", "sage/structure/formal_sum.rst", "sage/structure/gens_py.rst", "sage/structure/global_options.rst", "sage/structure/indexed_generators.rst", "sage/structure/list_clone.rst", "sage/structure/list_clone_demo.rst", "sage/structure/list_clone_timings.rst", "sage/structure/list_clone_timings_cy.rst", "sage/structure/mutability.rst", "sage/structure/nonexact.rst", "sage/structure/parent.rst", "sage/structure/parent_base.rst", "sage/structure/parent_gens.rst", "sage/structure/parent_old.rst", "sage/structure/proof/proof.rst", "sage/structure/richcmp.rst", "sage/structure/sage_object.rst", "sage/structure/sequence.rst", "sage/structure/set_factories.rst", "sage/structure/set_factories_example.rst", "sage/structure/test_factory.rst", "sage/structure/unique_representation.rst"], "titles": ["Parents and Elements", "Whether or not computations are provably correct by default", "Base class for objects of a category", "Debug options for the <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sage.structure</span></code> modules", "Dynamic classes", "Elements", "Element Wrapper", "Factorizations", "IntegerFactorization objects", "Factory for cached representations", "Formal sums", "Pure python code for abstract base class for objects with generators", "Global options", "Indexed Generators", "Elements, Array and Lists With Clone Protocol", "Elements, Array and Lists With Clone Protocol, demonstration classes", "Performance Test for Clone Protocol", "Cython Functions for Timing Clone Protocol", "Mutability Cython Implementation", "Precision management for non-exact objects", "Base class for parent objects", "Base class for old-style parent objects with a base ring", "Base class for old-style parent objects with generators", "Base class for old-style parent objects", "Global proof preferences", "Cython-like rich comparisons in Python", "Abstract base class for Sage objects", "Finite Homogeneous Sequences", "Set factories", "An example of set factory", "Test of the <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">factory</span></code> module", "Unique Representation"], "terms": {"abstract": [0, 4, 7, 13, 14, 20, 28, 31], "base": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 24, 25, 27, 28, 29, 30, 31], "class": [0, 3, 6, 7, 8, 9, 10, 13, 14, 16, 18, 19, 24, 25, 27, 28, 29, 30], "categori": [0, 4, 5, 6, 10, 13, 20, 22, 26, 27, 28, 31], "index": [0, 14, 25, 27], "gener": [0, 2, 5, 7, 8, 9, 10, 12, 20, 25, 28, 31], "precis": [0, 5, 20, 28], "manag": [0, 5, 14, 22, 28], "non": [0, 4, 5, 7, 9, 20, 25, 26, 28, 31], "exact": [0, 20, 25], "global": [0, 5, 9, 22, 26], "option": [0, 2, 4, 5, 9, 13, 20, 22, 26, 28], "ring": [0, 2, 5, 7, 8, 9, 10, 13, 19, 20, 22, 26, 27, 31], "pure": 0, "python": [0, 2, 4, 5, 6, 9, 14, 16, 22, 26, 27, 28], "code": [0, 2, 4, 5, 14, 20, 22, 24, 28, 29, 31], "wrapper": [0, 5], "arrai": [0, 4, 12], "list": [0, 2, 4, 5, 7, 8, 10, 12, 13, 16, 20, 25, 27, 28, 29, 31], "With": [0, 2, 4, 9, 13, 25, 31], "clone": 0, "protocol": [0, 4, 5, 9, 26, 31], "demonstr": [0, 5, 9, 13, 14, 29, 31], "formal": [0, 7], "sum": [0, 28], "factor": [0, 2, 6, 8], "integerfactor": [0, 7], "finit": [0, 5, 9, 10, 13, 20, 22, 28, 31], "homogen": 0, "sequenc": [0, 14, 18, 25], "set": [0, 2, 4, 5, 7, 9, 13, 20, 22, 24, 25, 26, 27, 31], "factori": [0, 31], "an": [0, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 18, 20, 22, 24, 25, 26, 27, 28, 31], "exampl": [0, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 31], "proof": 0, "prefer": [0, 9, 20], "whether": [0, 5, 7, 12, 14, 20, 22, 27, 31], "comput": [0, 5, 14, 20, 23, 25, 26, 28, 31], "ar": [0, 2, 4, 5, 6, 7, 9, 12, 13, 14, 20, 22, 23, 25, 26, 27, 28, 31], "provabl": 0, "correct": [0, 22, 24], "default": [0, 2, 4, 5, 6, 7, 9, 12, 13, 14, 19, 20, 26, 27, 28, 29, 31], "cython": [0, 2, 4, 5, 6, 9, 14, 16, 31], "like": [0, 4, 5, 7, 14, 27, 31], "rich": [0, 5], "comparison": [0, 5, 6, 7, 20, 31], "uniqu": [0, 2, 4, 5, 9, 12, 20, 22], "represent": [0, 4, 7, 12, 13, 20, 26], "cach": [0, 4, 5, 7, 14, 20, 26], "dynam": [0, 12], "mutabl": [0, 5, 14, 27, 31], "implement": [0, 4, 6, 7, 9, 12, 14, 19, 20, 25, 26, 28, 29], "debug": [0, 5], "modul": [0, 2, 4, 5, 7, 9, 10, 12, 13, 14, 15, 20, 22, 25, 29, 31], "perform": [0, 5, 9, 14, 20, 28], "test": [0, 2, 5, 6, 10, 15, 20, 25, 31], "function": [0, 2, 4, 5, 7, 9, 10, 13, 18, 20, 22, 25, 26, 27, 28, 29, 31], "time": [0, 4, 5, 16, 25, 31], "search": [0, 4], "page": 0, "hierarchi": [2, 20, 23, 28], "sageobject": [2, 5, 7, 9, 12, 18, 20, 23, 26, 27, 28, 31], "categoryobject": [2, 20, 22], "parent": [2, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 31], "mani": [2, 9, 14, 20, 22, 26, 28, 29, 31], "sage": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31], "equip": [2, 12, 22], "which": [2, 4, 5, 7, 8, 9, 12, 13, 14, 19, 20, 22, 25, 26, 27, 28, 29, 31], "usual": [2, 5, 9, 12, 20, 25, 28, 31], "special": [2, 5, 9, 20, 22, 25, 27], "element": [2, 4, 9, 10, 12, 13, 16, 20, 22, 25, 26, 27, 28, 29, 31], "For": [2, 5, 7, 9, 12, 13, 14, 20, 22, 25, 28, 31], "polynomi": [2, 5, 7, 10, 20, 22, 25, 26], "zz": [2, 5, 7, 9, 10, 13, 19, 20, 22, 25, 27], "x": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31], "y": [2, 5, 6, 7, 13, 14, 20, 22, 25, 28, 29, 31], "z": [2, 5, 7, 13, 20, 22, 25, 31], "i": [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29], "In": [2, 4, 5, 7, 8, 9, 12, 20, 22, 26, 28, 31], "th": [2, 22], "obtain": [2, 5, 9, 12, 22, 31], "us": [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29], "notat": [2, 4, 22], "gen": [2, 5, 20, 22, 26], "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31], "interact": [2, 9, 22, 31], "prompt": [2, 22], "shorthand": [2, 22], "also": [2, 4, 5, 7, 9, 12, 13, 14, 20, 22, 25, 26, 27, 28, 31], "allow": [2, 5, 9, 12, 13, 20, 22, 25, 26, 27, 31], "The": [2, 4, 6, 7, 9, 10, 12, 13, 14, 20, 22, 25, 26, 27, 28, 29, 31], "follow": [2, 4, 5, 7, 9, 10, 12, 14, 20, 22, 28, 29, 31], "illustr": [2, 4, 7, 9, 12, 20, 22, 27, 28, 31], "context": [2, 4, 22], "multivari": [2, 5, 20, 22], "free": [2, 7, 9, 22], "r": [2, 5, 7, 10, 19, 20, 22], "polynomialr": [2, 5, 7, 20, 22, 26], "3": [2, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31], "ngen": [2, 13, 22], "0": [2, 4, 5, 7, 9, 10, 12, 14, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31], "x0": [2, 22], "x1": [2, 5, 22], "x2": [2, 5, 22], "variable_nam": [2, 22], "thi": [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31], "over": [2, 5, 7, 9, 10, 20, 22, 26, 31], "need": [2, 5, 7, 9, 10, 12, 13, 14, 20, 22, 24, 25, 26, 28, 31], "m": [2, 4, 6, 11, 12, 20, 22, 31], "freemodul": [2, 22], "4": [2, 5, 7, 12, 14, 16, 18, 19, 22, 25, 26, 27, 28, 29, 30, 31], "ambient": [2, 9, 22], "rank": [2, 9, 22], "princip": [2, 9, 22], "ideal": [2, 5, 7, 9, 20, 22], "domain": [2, 9, 20, 22], "integ": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 19, 20, 22, 25, 27, 29, 31], "1": [2, 5, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31], "structur": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "category_object": [2, 22], "some": [2, 4, 5, 9, 10, 12, 13, 14, 20, 22, 25, 26, 27, 28, 29, 31], "hom": [2, 20, 22], "codomain": [2, 20, 22], "cat": 2, "none": [2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 20, 22, 24, 26, 27, 28, 29, 31], "return": [2, 4, 5, 6, 7, 9, 12, 13, 14, 18, 19, 20, 22, 25, 26, 27, 28, 29, 31], "homspac": [2, 20], "self": [2, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 31], "all": [2, 4, 5, 7, 9, 10, 12, 13, 20, 22, 24, 25, 26, 27, 28, 31], "homomorph": [2, 20, 22], "determin": [2, 4, 5, 7, 9, 20, 22, 24, 27, 31], "qq": [2, 5, 7, 9, 13, 19, 20, 22, 26, 27, 31], "2": [2, 4, 5, 7, 9, 10, 13, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31], "ration": [2, 5, 7, 13, 20, 22, 24, 26, 27], "field": [2, 5, 7, 9, 10, 13, 20, 22, 26, 27, 31], "defin": [2, 7, 9, 10, 12, 13, 14, 15, 20, 22, 25, 26, 28, 31], "veri": [2, 5, 9, 14, 20, 22, 27, 31], "even": [2, 5, 9, 20, 24, 25, 31], "familiar": [2, 20], "n": [2, 5, 7, 13, 14, 16, 20, 22, 31], "5": [2, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 18, 20, 22, 25, 26, 27, 28, 29, 31], "7": [2, 5, 9, 10, 14, 16, 18, 20, 22, 27, 31], "morphism": [2, 20, 22], "8": [2, 5, 14, 19, 20, 25, 27, 29], "third": [2, 5, 9, 20, 25, 27], "argument": [2, 4, 5, 6, 9, 12, 13, 20, 25, 26, 28, 29], "base_r": [2, 5, 7], "input": [2, 4, 5, 7, 12, 13, 14, 19, 20, 22, 25, 27, 28, 29, 31], "typic": [2, 4, 5, 6, 8, 9, 12, 20, 25, 28, 29, 31], "import": [2, 3, 4, 5, 6, 9, 12, 13, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 29, 30, 31], "f": [2, 4, 5, 7, 9, 13, 18, 20, 22, 26, 28, 31], "__class__": [2, 16, 20], "method": [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 18, 19, 20, 22, 25, 26, 28, 29, 31], "note": [2, 4, 5, 6, 7, 9, 12, 20, 27, 28, 29, 31], "coordin": [2, 28], "can": [2, 4, 5, 7, 8, 9, 12, 14, 18, 20, 22, 25, 26, 27, 28, 29, 31], "lie": 2, "bigger": 2, "coordinate_r": 2, "v": [2, 5, 9, 12, 14, 18, 20, 25, 27], "more": [2, 7, 8, 9, 12, 20, 25, 27, 28, 29, 31], "freealgebra": [2, 7], "combinat": [2, 5, 7, 12, 13, 26, 31], "e": [2, 4, 5, 6, 9, 12, 13, 14, 16, 20, 25, 26, 27, 28, 31], "combinatorialfreemodul": [2, 13], "h": [2, 5, 26, 31], "move": [2, 5], "elsewher": 2, "so": [2, 4, 5, 7, 9, 12, 13, 14, 18, 20, 25, 26, 27, 28, 31], "pollut": 2, "namespac": [2, 9], "join": [2, 5], "dedekind": 2, "euclidean": 2, "infinit": [2, 20], "enumer": [2, 4, 13, 28], "metric": [2, 20], "space": [2, 5, 7, 20], "gcd": [2, 5, 7], "integr": [2, 26], "commut": [2, 5, 7], "monoid": [2, 4, 5, 6, 7], "addit": [2, 5, 9, 12, 20, 31], "group": [2, 4, 5, 10, 20, 22, 31], "gens_dict": 2, "copi": [2, 4, 5, 7, 14, 16, 18, 20, 27, 31], "true": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31], "dictionari": [2, 4, 5, 12, 13, 20, 31], "whose": [2, 5, 9, 13, 18, 22, 25, 28, 31], "entri": [2, 5, 12, 13, 20, 22, 25, 27], "name": [2, 4, 5, 6, 9, 12, 13, 20, 22, 25, 26, 29, 31], "variabl": [2, 5, 9, 13, 22], "where": [2, 5, 7, 12, 13, 25, 26, 28, 29, 31], "stand": [2, 9], "string": [2, 4, 6, 9, 12, 13, 20, 22, 26], "correspond": [2, 5, 9, 12, 25, 27, 28], "b": [2, 4, 5, 9, 10, 13, 20, 22, 25, 26, 27, 28, 29, 31], "c": [2, 4, 5, 9, 13, 14, 20, 22, 25, 26, 28, 31], "d": [2, 5, 9, 12, 13, 20, 26, 31], "booleanpolynomialr": 2, "pbori": 2, "gens_dict_recurs": 2, "its": [2, 4, 5, 7, 9, 12, 13, 14, 20, 25, 26, 28, 31], "output": [2, 5, 7, 12, 13, 20, 22, 25, 26, 27], "kei": [2, 7, 9, 12, 13, 14, 20, 26, 27, 30, 31], "valu": [2, 4, 5, 6, 7, 13, 14, 20, 24, 25, 27, 28, 29, 31], "w": [2, 5, 22, 27, 31], "sort": [2, 7, 8, 13, 14, 15, 27], "item": [2, 7, 14, 20, 25, 27], "inject_vari": 2, "scope": 2, "verbos": 2, "inject": 2, "call": [2, 4, 5, 7, 9, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31], "thu": [2, 7, 9, 20, 31], "g": [2, 4, 5, 6, 7, 9, 13, 20, 25, 26, 27, 31], "label": 2, "after": [2, 5, 12, 13, 14, 20, 24, 25, 27, 31], "current": [2, 4, 12, 13, 28, 31], "equal": [2, 5, 6, 9, 12, 20, 25, 31], "If": [2, 4, 5, 7, 12, 13, 14, 20, 22, 25, 26, 27, 28, 31], "foo": [2, 4, 28, 30], "constructor": [2, 20, 27, 28, 31], "would": [2, 4, 5, 9, 13, 20, 24, 26, 28, 31], "creat": [2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 22, 25, 27, 28, 29, 31], "doe": [2, 4, 5, 6, 7, 9, 12, 13, 20, 25, 26, 31], "latex_nam": [2, 13, 22], "latex_variable_nam": 2, "suitabl": 2, "latex": [2, 12, 13], "_someth": 2, "substr": [2, 4], "replac": [2, 12], "_": [2, 9, 12, 20], "someth": [2, 22, 25, 31], "recurs": [2, 5], "subscript": [2, 13], "work": [2, 4, 5, 9, 14, 20, 25, 31], "12": [2, 5, 7, 10, 14, 16, 19], "objgen": 2, "x3": 2, "x4": 2, "x5": 2, "x6": 2, "x7": 2, "x8": 2, "x9": 2, "x10": 2, "x11": 2, "x_": [2, 13], "6": [2, 5, 7, 9, 14, 16, 18, 19, 20, 22, 25, 27, 31], "9": [2, 4, 5, 7, 10, 14, 16, 26, 27, 31], "10": [2, 5, 7, 8, 12, 14, 19, 20, 22, 24, 27], "11": [2, 5, 7, 14, 20], "15": [2, 5, 7, 12, 14, 16], "print": [2, 5, 7, 12, 13, 14, 16, 18, 20, 22, 24, 25, 26, 27, 31], "tupl": [2, 4, 9, 13, 20, 22, 25, 26, 27, 28, 31], "univari": [2, 5, 7, 20, 22, 26], "first": [2, 4, 5, 6, 7, 9, 10, 12, 13, 14, 18, 20, 22, 25, 26, 27, 28, 29, 31], "a42": 2, "infinitepolynomialr": 2, "": [2, 4, 5, 9, 12, 13, 14, 20, 25, 26, 28, 29, 31], "quotient_r": 2, "zbar": 2, "ybar": 2, "a42bar": 2, "t": [2, 4, 5, 9, 12, 13, 14, 20, 24, 26, 27, 28, 31], "certify_nam": 2, "check": [2, 4, 5, 7, 9, 10, 12, 13, 14, 15, 16, 20, 22, 27, 28, 29, 31], "valid": [2, 12, 20, 31], "iter": [2, 13, 14, 27, 28, 29, 31], "repres": [2, 5, 19, 20, 28], "effici": [2, 5, 25, 27, 28, 29], "cn": 2, "abc": 2, "traceback": [2, 5, 7, 9, 12, 14, 15, 16, 18, 20, 22, 24, 26, 27, 28, 29, 31], "most": [2, 5, 7, 9, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31], "recent": [2, 5, 7, 9, 12, 14, 15, 16, 18, 20, 22, 24, 26, 27, 28, 29, 31], "last": [2, 5, 7, 9, 12, 14, 15, 16, 18, 20, 22, 24, 26, 27, 28, 29, 31], "valueerror": [2, 5, 7, 12, 14, 15, 16, 18, 20, 22, 27, 28, 29], "must": [2, 5, 7, 9, 12, 14, 18, 20, 22, 26, 28, 29, 31], "nonempti": 2, "_foo": 2, "start": [2, 5, 12, 14, 20, 31], "letter": [2, 29], "alphanumer": 2, "appear": 2, "than": [2, 5, 9, 13, 25, 31], "onc": [2, 9, 12, 14, 20, 22, 31], "check_default_categori": 2, "default_categori": 2, "normalize_nam": 2, "length": [2, 14, 25], "given": [2, 4, 5, 9, 10, 12, 13, 14, 20, 25, 26, 27, 28, 31], "number": [2, 4, 5, 7, 9, 10, 13, 14, 20, 22, 26, 29, 31], "mean": [2, 4, 5, 20, 25, 26, 28, 31], "unknown": 2, "priori": [2, 5], "ani": [2, 4, 5, 9, 13, 14, 20, 22, 25, 26, 27, 28, 31], "comma": [2, 13, 27], "separ": [2, 12, 13, 31], "prefix": [2, 12, 13], "alpha": 2, "singl": [2, 5, 20, 26, 28, 31], "charact": 2, "xyz": 2, "nn": [2, 12], "z_z": 2, "z_z0": 2, "z_z1": 2, "ab": [2, 5, 20, 31], "x00": 2, "x01": 2, "bb": [2, 5], "ccc": 2, "a1": [2, 25], "a2": [2, 25], "b1": [2, 25], "b11": 2, "convert": [2, 14, 20, 25, 27], "u": [2, 4, 5, 7, 9, 26, 28, 29, 31], "var": [2, 5, 26], "symbol": [2, 5, 7, 10, 13, 20, 25, 26], "alpha0": 2, "alpha1": 2, "error": [2, 5, 14, 20, 24], "indexerror": 2, "typeerror": [2, 5, 7, 9, 20, 22, 26, 27, 31], "nonetyp": 2, "cannot": [2, 4, 5, 9, 14, 18, 20, 25, 26, 31], "interpret": [2, 4, 26], "_foo0": 2, "debug_opt": 3, "unique_parent_warn": 3, "fals": [3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 18, 20, 22, 24, 25, 26, 27, 28, 31], "refine_category_hash_check": 3, "debugoptions_class": 3, "object": [3, 4, 5, 6, 7, 9, 12, 13, 14, 18, 24, 25, 27, 28, 30, 31], "why": [4, 31], "short": [4, 12, 20, 31], "answer": 4, "multipl": [4, 5, 6, 7, 13, 20, 31], "inherit": [4, 5, 6, 8, 9, 14, 20, 26, 28], "power": [4, 5, 19, 31], "tool": 4, "construct": [4, 6, 9, 14, 20, 22, 27, 28, 29, 31], "new": [4, 6, 9, 10, 14, 20, 21, 22, 27, 28, 31], "combin": [4, 7, 31], "preexist": [4, 31], "build": [4, 28], "block": [4, 14, 24], "There": [4, 5, 6, 7, 9, 20, 22, 25, 26, 28, 31], "combinatori": 4, "explos": 4, "potenti": [4, 27], "produc": 4, "wai": [4, 5, 9, 12, 14, 20, 25, 28, 29], "standard": [4, 12, 13, 20, 25, 28, 31], "mathemat": [4, 5, 7, 14, 20, 23], "automat": [4, 5, 9, 12, 20, 31], "fly": 4, "natur": [4, 20, 22], "achiev": [4, 5, 12, 26, 31], "long": [4, 5, 25], "sai": [4, 9, 25, 31], "we": [4, 5, 6, 7, 9, 13, 14, 20, 22, 25, 27, 28, 29, 31], "want": [4, 5, 9, 14, 20, 25, 28, 31], "mypermut": 4, "permut": [4, 14, 20], "model": [4, 5, 14, 20, 21, 22, 25, 28], "won": [4, 9, 31], "discuss": [4, 31], "point": [4, 14, 20, 28, 31], "here": [4, 5, 6, 9, 12, 25, 28, 29, 31], "have": [4, 5, 7, 9, 12, 13, 18, 20, 25, 26, 27, 28, 31], "choos": [4, 9, 31], "data": [4, 5, 8, 9, 14, 31], "among": [4, 26], "store": [4, 5, 9, 15, 20, 31], "cycl": [4, 14], "type": [4, 5, 7, 9, 12, 20, 26, 27, 28, 31], "int": [4, 5, 8, 12, 14, 20, 27], "small": [4, 5, 14, 15, 16, 31], "huge": 4, "reduc": [4, 5, 10], "word": [4, 12, 31], "luckili": 4, "librari": [4, 31], "provid": [4, 5, 6, 7, 9, 12, 13, 20, 28, 31], "each": [4, 7, 12, 13, 20, 27, 28], "those": [4, 7, 14, 20, 28], "share": [4, 5, 12, 31], "common": [4, 5, 7, 12, 14, 27, 28], "interfac": [4, 10, 28], "possibli": [4, 25], "just": [4, 5, 9, 20, 28, 31], "deriv": [4, 5, 9, 10, 20, 22, 25, 26, 27, 28, 31], "our": [4, 9, 31], "chosen": [4, 9, 20], "one": [4, 5, 9, 12, 13, 14, 20, 22, 24, 25, 26, 28, 29, 31], "permutationcycletyp": 4, "Then": [4, 5, 9, 14, 25, 31], "mai": [4, 5, 7, 9, 13, 20, 26, 28, 31], "further": [4, 31], "specif": [4, 9, 20, 26, 28, 29], "memori": [4, 20, 26, 31], "behavior": [4, 14, 20, 31], "write": [4, 5, 7, 9, 22, 25, 28, 29, 31], "hopefulli": [4, 9], "again": [4, 9, 12, 14, 18, 27, 31], "uniquerepresent": [4, 6, 10, 12, 15, 28, 29, 31], "final": [4, 14, 28, 31], "endow": [4, 6], "oper": [4, 5, 6, 14, 20, 25, 26, 31], "come": [4, 5, 28], "algebra": [4, 7, 20, 31], "subset": [4, 9, 25, 28, 29], "stabl": 4, "invers": [4, 5], "poset": 4, "left": [4, 5, 13, 20, 25, 28], "right": [4, 5, 13, 20, 25], "bruhat": 4, "order": [4, 5, 7, 10, 12, 13, 14, 20, 22, 25, 28, 31], "pattern": [4, 14, 31], "Or": 4, "thereof": [4, 20], "now": [4, 5, 9, 10, 14, 20, 28, 29, 31], "look": [4, 5, 9, 12, 20, 31], "posetel": 4, "groupel": 4, "practic": [4, 25, 26], "symmetricgroup": [4, 5, 20, 31], "todo": 4, "find": [4, 5, 7, 9, 20, 31], "good": [4, 12, 22, 28], "abov": [4, 5, 12, 25, 31], "result": [4, 5, 7, 9, 12, 13, 14, 20, 22, 25, 26, 27, 31], "therefor": [4, 5, 6, 28], "onli": [4, 5, 9, 12, 13, 14, 20, 22, 25, 26, 27, 28, 31], "execut": 4, "let": [4, 5, 9, 14, 20, 28, 29, 31], "take": [4, 5, 9, 12, 14, 28, 31], "anoth": [4, 5, 7, 12, 20, 31], "A": [4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31], "cartesian_product": 4, "depend": [4, 5, 9, 12, 26, 28, 31], "pass": [4, 5, 8, 9, 12, 13, 20, 25, 28, 29, 31], "down": [4, 5, 8, 20, 31], "user": [4, 8, 12, 13, 25, 26, 29, 31], "hardcod": 4, "best": [4, 12, 16], "tediou": 4, "furthermor": [4, 14, 20], "requir": [4, 5, 18, 19, 20, 22, 25, 31], "cumbersom": 4, "mechan": [4, 7, 9, 12, 14, 20, 28], "lookup": [4, 5, 9, 20], "appropri": [4, 13, 26, 28, 31], "desir": [4, 5, 6, 20, 28, 31], "instead": [4, 5, 9, 12, 13, 14, 18, 20, 22, 25, 27, 28, 31], "abil": 4, "paradigm": 4, "technic": [4, 5, 9, 28, 31], "address": [4, 31], "purpos": [4, 5, 9, 13, 14, 20], "within": [4, 5, 31], "particular": [4, 5, 9, 12, 14, 20, 25, 28, 29, 31], "ensur": [4, 5, 9, 14, 20, 28, 31], "reus": [4, 28, 31], "whenev": [4, 5, 12, 31], "possibl": [4, 5, 7, 9, 12, 14, 20, 27, 28, 31], "pickl": [4, 5, 9, 31], "might": [4, 20, 22, 26, 31], "partial": [4, 25], "support": [4, 5, 7, 9, 12, 20, 25, 26, 27, 28, 31], "futur": [4, 28], "On": [4, 5, 6, 7, 20, 28, 31], "other": [4, 5, 6, 7, 9, 12, 13, 20, 25, 28, 31], "hand": [4, 5, 6, 7, 20, 31], "emul": 4, "__getattr__": 4, "see": [4, 5, 6, 7, 9, 12, 13, 14, 16, 20, 21, 22, 25, 26, 27, 28, 29, 31], "semigroups_cython": 4, "dynamic_class": [4, 20], "dynamicclasscallmetaclass": 4, "dynamicmetaclass": 4, "classcallmetaclass": [4, 31], "dynamicinheritcomparisonclasscallmetaclass": 4, "inheritcomparisonclasscallmetaclass": 4, "dynamicinheritcomparisonmetaclass": 4, "inheritcomparisonmetaclass": 4, "metaclass": [4, 12, 31], "alia": [4, 5, 6, 10, 12, 15], "testclass": 4, "introspect": 4, "bla": [4, 6, 16, 17], "cl": [4, 12, 25, 31], "reduct": [4, 5, 31], "doccl": 4, "prepend_cls_bas": 4, "boolean": [4, 5, 14, 20, 25, 26, 28], "ignore_reduct": 4, "insert": [4, 12, 14, 27], "prepend": [4, 13, 31], "unless": [4, 9, 20, 31], "document": [4, 5, 7, 9, 10, 13, 29, 31], "sourc": [4, 29], "instrospect": 4, "taken": [4, 9, 27, 29, 31], "both": [4, 5, 13, 20, 25, 31], "should": [4, 5, 7, 9, 12, 13, 14, 18, 19, 20, 25, 26, 27, 28, 29, 31], "empti": [4, 5, 9, 13, 20, 25, 27, 28, 31], "safe": [4, 5, 22], "assum": [4, 5, 7, 18, 22, 25, 28, 31], "themselv": [4, 5], "relev": [4, 5, 12, 13], "To": [4, 5, 7, 12, 14, 18, 20, 22, 26, 27, 31], "setup": [4, 12], "stage": 4, "lazi": [4, 5, 20], "attribut": [4, 5, 9, 12, 13, 18, 20, 25, 26, 28, 31], "bar": 4, "misc": [4, 5, 9, 18, 26], "lazy_attribut": 4, "cachefunc": [4, 5], "cached_funct": [4, 31], "def": [4, 5, 6, 9, 12, 14, 18, 20, 22, 25, 26, 28, 31], "__init__": [4, 5, 9, 14, 18, 20, 25, 28, 31], "_x": [4, 14], "cached_method": [4, 5, 26], "foobar": 4, "except": [4, 5, 13, 14, 20, 22], "__name__": [4, 20], "__module__": [4, 20], "__main__": [4, 9, 18, 31], "__bases__": 4, "mro": [4, 5], "zero": [4, 5, 7, 20, 24], "__dictoffset__": 4, "ha": [4, 5, 7, 8, 9, 12, 13, 20, 26, 27, 28, 31], "instanc": [4, 5, 6, 9, 12, 14, 18, 25, 27, 28, 31], "don": [4, 9, 13, 14], "__dict__": [4, 31], "github": [4, 5, 6, 9, 10, 20, 31], "issu": [4, 5, 6, 9, 10, 20, 31], "23435": 4, "dyn": 4, "upon": [4, 5, 8, 20, 31], "unpickl": [4, 9, 20, 31], "reconstruct": [4, 31], "recal": [4, 25], "same": [4, 5, 7, 9, 12, 13, 20, 25, 26, 31], "__reduce__": [4, 9, 31], "sinc": [4, 5, 9, 14, 20, 25, 27, 31], "meaningless": 4, "how": [4, 9, 12, 14, 20, 24, 25, 27, 28, 29, 31], "custom": [4, 9, 12, 25, 26, 28, 31], "barfoo": 4, "str": [4, 6, 20, 25, 26, 27], "load": [4, 7, 9, 26, 31], "dump": [4, 5, 7, 9, 26, 31], "By": [4, 5, 12, 20, 31], "built": [4, 5, 9, 14, 27, 28], "foobar1": 4, "foobar2": 4, "_reduct": [4, 31], "behaviour": [4, 5, 9, 12, 31], "sever": [4, 6, 12, 14, 28, 29, 31], "differ": [4, 5, 7, 9, 12, 20, 22, 25, 26, 27, 28, 31], "unspecifi": 4, "applic": [4, 6, 31], "recommend": [4, 12, 20, 31], "consist": [4, 9, 13, 25, 28, 31], "dynamic_class_intern": 4, "indirect": [4, 5, 14, 15, 16, 18, 20, 25], "doctest": [4, 5, 9, 14, 15, 16, 18, 20, 25, 31], "author": [5, 6, 7, 8, 9, 10, 12, 14, 18, 22, 25, 28, 31], "david": [5, 7, 10], "harvei": [5, 10], "2006": [5, 7, 10, 22], "16": [5, 7, 14, 19], "chang": [5, 7, 9, 10, 12, 14, 18, 19, 22, 25, 26, 27, 28, 31], "commutativealgebrael": 5, "commutativeringel": 5, "algebrael": 5, "29": 5, "architectur": 5, "william": [5, 7, 10, 22], "stein": [5, 7, 10, 22], "push": 5, "through": [5, 9, 12, 13, 14, 20, 28], "complet": [5, 12, 20, 25], "gonzalo": 5, "tornaria": 5, "2007": 5, "06": [5, 10], "extend": [5, 9, 14, 20, 22, 27, 31], "coercion": [5, 7, 9, 10, 20, 22, 25, 26, 27], "lot": [5, 14, 26, 28, 31], "robert": [5, 9], "bradshaw": [5, 9], "2010": [5, 6, 8, 10, 14], "maarten": 5, "derickx": 5, "07": [5, 10], "ad": [5, 7, 9, 10, 20, 28, 31], "is_squar": 5, "sqrt": [5, 10, 20, 26], "jeroen": [5, 12, 25], "demey": [5, 12, 25], "2016": [5, 12], "08": [5, 7, 31], "20767": 5, "moduleel": [5, 10], "ringel": [5, 20], "integraldomainel": 5, "dedekinddomainel": 5, "principalidealdomainel": 5, "euclideandomainel": 5, "fieldel": 5, "express": 5, "matrix": [5, 20], "infinityel": 5, "additivegroupel": 5, "vector": [5, 20, 25, 27], "monoidel": 5, "multiplicativegroupel": 5, "elementwithcachedmethod": 5, "_new_c": 5, "cdef": [5, 9, 25, 26, 31], "freemoduleelement_generic_dens": 5, "__new__": [5, 31], "_parent": 5, "_entri": 5, "sibl": 5, "quickli": [5, 20, 31], "properti": [5, 14, 27, 31], "system": [5, 20, 24], "handl": [5, 9, 13, 20, 28, 31], "uniformli": 5, "mix": [5, 18, 20, 31], "describ": [5, 12, 25, 29], "rule": [5, 25], "caller": [5, 8], "subclass": [5, 6, 12, 14, 19, 25, 28, 31], "overrid": [5, 13, 20, 25, 26], "_add_": 5, "__add__": 5, "you": [5, 7, 14, 20, 22, 26, 27, 28, 31], "across": 5, "put": [5, 9, 14, 29, 31], "elementmethod": 5, "when": [5, 7, 9, 12, 13, 20, 22, 25, 27, 28, 29, 31], "cpdef": 5, "do": [5, 7, 9, 12, 13, 20, 22, 25, 27, 28, 31], "two": [5, 7, 9, 13, 14, 25, 28], "respons": [5, 28], "coerc": [5, 7, 20, 22, 27], "them": [5, 9, 12, 14, 20, 26, 28, 31], "aim": 5, "uniform": 5, "semant": [5, 25, 31], "eas": 5, "readabl": 5, "similar": [5, 31], "doubl": [5, 7, 31], "underscor": [5, 20, 31], "binari": 5, "encount": 5, "It": [5, 7, 9, 12, 14, 22, 25, 27, 28, 29, 31], "least": [5, 31], "fast": [5, 20, 31], "pathwai": [5, 20], "deal": [5, 28], "case": [5, 6, 7, 9, 10, 12, 14, 20, 22, 25, 28, 31], "otherwis": [5, 7, 9, 13, 14, 18, 20, 25, 28, 31], "out": [5, 7, 20], "make": [5, 9, 12, 14, 18, 20, 22, 25, 26, 27, 28, 30, 31], "add": [5, 12, 20, 26, 28, 29, 31], "could": [5, 25, 28, 29], "plain": [5, 7, 9, 26], "although": 5, "declar": 5, "doesn": [5, 14], "overhead": [5, 8], "associ": [5, 12], "either": [5, 12, 13, 20, 25, 27], "itself": [5, 7, 9, 12, 20, 26, 28], "becaus": [5, 9, 10, 12, 20, 22, 25, 26, 31], "optimis": 5, "guarante": [5, 8, 20, 24, 27, 31], "necessarili": 5, "extens": [5, 9, 15, 22, 26], "know": [5, 9, 25, 27, 31], "ident": [5, 9, 20, 25, 27, 28, 31], "encourag": [5, 20], "directli": [5, 9, 20, 28, 31], "alwai": [5, 20, 25, 26, 28], "cast": 5, "explicitli": [5, 12, 27, 31], "forc": [5, 9, 12], "fastest": [5, 20], "optim": [5, 20, 25], "unlik": [5, 26, 27], "normal": [5, 14, 15, 20, 22, 31], "versu": 5, "intent": [5, 28], "version": [5, 6, 7, 9, 10, 12, 30, 31], "pow": 5, "second": [5, 6, 9, 13, 27, 28, 31], "expon": [5, 7], "_pow_int": 5, "_pow_": 5, "your": 5, "arbitrari": [5, 12, 13, 25, 31], "path": [5, 9], "_add_long": 5, "thei": [5, 9, 12, 13, 20, 22, 26, 28, 31], "_mul_long": 5, "strictli": [5, 14, 15], "fall": 5, "back": [5, 24, 26, 31], "examplepar": 5, "kwd": [5, 7, 9, 13, 20, 30], "renam": [5, 20, 26], "basic": [5, 12, 28, 31], "myelement": [5, 20, 25], "42": [5, 16], "p": [5, 7, 12, 13, 14, 16, 20, 22, 25, 26, 28, 29], "involv": [5, 7, 20, 22, 27, 31], "longer": 5, "q": [5, 26], "unsupport": 5, "operand": 5, "messag": 5, "rais": [5, 7, 14, 20, 22, 28], "refer": [5, 9, 14, 31], "attributeerror": 5, "mycategori": 5, "super_categori": 5, "my": [5, 7], "featur": [5, 6, 12, 18, 31], "actual": [5, 7, 8, 9, 12, 20, 25, 28, 29, 31], "bit": [5, 8, 31], "magic": [5, 12, 26], "casual": 5, "ignor": [5, 7, 28, 31], "curiou": [5, 31], "critic": 5, "rememb": [5, 28], "howev": [5, 7, 8, 9, 12, 14, 20, 26, 27, 31], "resolut": 5, "fake": [5, 31], "henc": [5, 9, 31], "principl": 5, "shadow": 5, "around": [5, 8, 26, 31], "concret": 5, "what": [5, 12, 20, 27], "happen": [5, 20, 27, 31], "evalu": [5, 9, 28, 31], "done": [5, 6, 8, 9, 12, 24, 31], "latter": [5, 20, 31], "trigger": [5, 31], "level": [5, 28], "succe": [5, 20], "invis": [5, 31], "continu": [5, 12, 25], "divid": 5, "5347": 5, "been": [5, 9, 13, 20, 26, 31], "fix": [5, 7, 10, 14, 20, 28, 31], "k": [5, 7, 9, 14, 20, 22, 26], "gf": [5, 9, 10, 20, 22, 27, 31], "128": 5, "121": 5, "120": 5, "fail": [5, 9, 20, 28], "5759": 5, "zmod": 5, "canon": [5, 20, 22, 27, 31], "modulo": 5, "35": [5, 16, 20], "inverse_mod": 5, "togeth": [5, 12, 28, 29, 31], "unit": [5, 7, 8, 31], "finite_r": [5, 9, 10, 20, 22, 31], "25": [5, 7, 14, 28, 31], "z2": 5, "proper": [5, 14, 28], "root": 5, "squar": [5, 31], "bool": [5, 13, 28], "found": [5, 9, 27, 31], "notimplementederror": [5, 14, 26], "definit": [5, 9, 31], "show": [5, 14, 25, 28, 29, 31], "expect": [5, 9, 12], "framework": [5, 20, 26, 28], "mod": 5, "littl": 5, "about": [5, 8, 9, 14, 20, 31], "simpli": [5, 9, 12, 20, 31], "lib": [5, 7, 9, 24, 31], "singular": 5, "notic": [5, 8, 9], "elimin": 5, "next": [5, 7, 25, 31], "contain": [5, 6, 7, 8, 9, 12, 13, 20, 23], "algorithm": [5, 28], "hard": 5, "part": [5, 7], "rest": [5, 9, 25, 31], "pari": [5, 7, 24], "sqrtx": 5, "specifi": [5, 9, 12, 13, 14, 20, 22, 25, 27, 28], "try": [5, 9, 12, 28, 31], "etc": [5, 6, 20, 25, 27], "subtyp": 5, "_richcmp_": [5, 25], "op": [5, 20, 25], "id": 5, "notimpl": [5, 25], "e1": 5, "e2": 5, "between": [5, 9, 20, 31], "richcmp": [5, 25], "cimport": 5, "rich_to_bool": [5, 25], "floatcmp": 5, "float": [5, 27], "top": 5, "invok": [5, 12], "__sub__": 5, "subtract": 5, "_sub_": 5, "__neg__": 5, "negat": [5, 25], "_neg_": 5, "__mul__": [5, 6, 20], "_mul_": [5, 20], "__truediv__": 5, "divis": [5, 7, 24], "truediv": 5, "pi": [5, 12, 20, 26], "polygen": [5, 7, 19, 20], "numberfield": [5, 7, 20], "number_field": [5, 7, 10, 20], "fraction": [5, 7], "_div_": 5, "__floordiv__": 5, "floor": 5, "_floordiv_": 5, "__mod__": 5, "_mod_": 5, "base_extend": [5, 10, 21], "sens": [5, 25], "is_zero": 5, "__bool__": 5, "re": [5, 9, 25, 27], "prec": [5, 19], "digit": 5, "numerical_approx": 5, "real_mpfr": [5, 20, 26], "666666666666667": [5, 20], "numer": [5, 27], "approxim": 5, "decim": 5, "No": 5, "made": [5, 25, 31], "accuraci": 5, "accept": [5, 9, 20, 28, 31], "neither": 5, "nor": [5, 9], "53": [5, 16], "roughli": [5, 14], "141592654": 5, "20": [5, 7, 10, 12, 19, 26], "1416": 5, "suppli": [5, 12], "sub": [5, 7, 20, 31], "in_dict": 5, "substitut": [5, 7], "while": [5, 12, 28, 31], "touch": 5, "__call__": [5, 20, 28, 29], "syntax": [5, 12, 14, 31], "meant": [5, 25, 28, 31], "compat": [5, 13, 27, 31], "paramet": [5, 9, 25, 28, 31], "xy": [5, 28], "30": [5, 7], "arg": [5, 7, 9, 12, 20, 28, 30, 31], "fulli": 5, "decor": [5, 18, 25, 31], "conveni": [5, 31], "11115": 5, "appli": [5, 12, 28, 31], "without": [5, 9, 12, 25, 27, 31], "faster": [5, 20, 31], "written": [5, 20, 28, 29], "noth": [5, 13, 14, 28, 31], "hold": [5, 7, 14], "assign": [5, 7, 9, 12, 27, 31], "slower": [5, 26], "break": [5, 7, 10, 12, 14, 26], "under": [5, 9, 20, 22, 29, 31], "condit": 5, "rather": [5, 6, 9, 31], "certainli": 5, "well": [5, 8, 31], "three": [5, 7, 9, 28], "cython_cod": 5, "mybrokenel": 5, "public": [5, 26], "_repr_": [5, 6, 12, 14, 20, 26], "__hash__": [5, 18, 31], "hash": [5, 6, 14, 18, 26, 27, 31], "raw_test": 5, "mypythonel": 5, "mypar": [5, 14, 20, 22], "cached_in_parent_method": 5, "element_cache_test": 5, "element_via_parent_test": 5, "parentmethod": [5, 20], "element_class": [5, 20, 28], "invert": 5, "ebroken": 5, "fact": [5, 20, 31], "clear_cach": 5, "epython": 5, "degre": [5, 7, 20], "leading_coeffici": 5, "quo_rem": 5, "isinst": [5, 6, 7, 9, 10, 20, 27, 28, 31], "instanti": 5, "sr": [5, 20, 26], "design": [5, 14, 20, 31], "direct": [5, 20], "len": [5, 7, 20, 25], "__subclasses__": 5, "rt3": 5, "17": [5, 7, 16], "is_unit": 5, "view": [5, 20], "quotient": [5, 20, 22], "remaind": 5, "live": 5, "is_nilpot": 5, "additive_ord": 5, "moduleelementwithmut": 5, "is_immut": [5, 14, 18, 27], "immut": [5, 7, 14, 18, 26, 27, 31], "set_immut": [5, 14, 18, 27], "is_mut": [5, 14, 18, 27], "undon": 5, "pleas": [5, 14, 18, 27], "multiplicative_ord": 5, "ldot": 5, "greatest": 5, "divisor": 5, "lcm": [5, 7], "absolut": [5, 27, 31], "__abs__": 5, "equival": [5, 7, 9, 14, 25, 31], "rr": [5, 20], "00000000000000": 5, "cc": [5, 20, 31], "37": 5, "arithmeticerror": 5, "nilpot": 5, "is_on": 5, "is_prim": [5, 24], "prime": [5, 7, 20, 31], "irreduc": [5, 7], "gaussian": 5, "quadraticfield": [5, 7], "zi": 5, "ring_of_integ": 5, "never": [5, 14, 18, 27], "redefin": 5, "posit": [5, 7, 14, 31], "similarli": [5, 31], "primal": 5, "13": [5, 7, 16], "bin_op": 5, "canonical_coercion": 5, "befor": [5, 6, 20, 24, 27, 28, 31], "pair": [5, 7, 8, 10, 13, 14, 28, 29], "got": 5, "via": [5, 8, 9, 12, 20], "coerce_binop": 5, "consid": [5, 9, 20, 25, 28, 29], "expos": [5, 25], "binop": 5, "behav": [5, 14, 25, 26, 28], "aa": 5, "modifi": [5, 13, 14, 26, 31], "attempt": [5, 7, 20, 24], "thrown": 5, "spars": [5, 26], "real": [5, 7, 9, 20, 26, 28], "r1": 5, "r2": 5, "modular": [5, 7], "myrat": 5, "test_add": 5, "keyword": [5, 9, 12, 13, 20, 28, 31], "func": [5, 9, 20], "complex_mpfr": 5, "complexnumb": 5, "coercion_traceback": 5, "help": [5, 12], "caught": 5, "detect": [5, 20], "failur": 5, "omit": [5, 20], "retri": 5, "speed": [5, 14, 31], "reason": [5, 6, 9, 20, 25, 26, 31], "record": 5, "enabl": [5, 12], "cm": 5, "get_coercion_model": 5, "record_except": 5, "went": 5, "size": [5, 9, 10, 13, 16, 20, 22, 27], "coercionmodel": 5, "coercion_model": [5, 20], "have_same_par": 5, "doubt": 5, "gap": 5, "These": [5, 7, 12, 13, 31], "rlf": 5, "exp": [5, 26], "real_lazi": 5, "lazywrapp": 5, "lazynamedunop": 5, "is_additivegroupel": 5, "is_algebrael": 5, "is_commutativealgebrael": 5, "is_commutativeringel": 5, "is_dedekinddomainel": 5, "is_el": 5, "is_euclideandomainel": 5, "is_fieldel": 5, "is_infinityel": 5, "is_integraldomainel": 5, "is_matrix": 5, "is_moduleel": 5, "inlin": 5, "is_monoidel": 5, "is_multiplicativegroupel": 5, "is_principalidealdomainel": 5, "is_ringel": 5, "is_vector": 5, "make_el": 5, "_class": 5, "_dict": 5, "old": [5, 9, 20, 25, 27, 31], "__getstate__": 5, "__setstate__": 5, "convers": [5, 7, 20, 25, 27], "section": [5, 20, 31], "tutori": 5, "complic": [5, 7, 31], "partit": [5, 12], "rdf": [5, 7, 20], "dimens": [5, 7], "l": [5, 14, 15, 20, 22, 31], "rang": [5, 12, 13, 14, 16, 20, 25, 27, 28, 29, 31], "wrap": [6, 20, 28], "nicola": [6, 31], "thieri": [6, 31], "2008": [6, 7, 9, 31], "initi": [6, 8, 9, 12, 14, 20, 28, 31], "travi": 6, "scrimshaw": 6, "2013": [6, 9, 12, 31], "05": [6, 9, 16], "04": 6, "element_wrapp": 6, "dummypar": 6, "dummi": [6, 28], "elementwrapp": [6, 20, 28, 29], "o": [6, 19, 26, 31], "trivial": [6, 20, 26, 28], "pre": 6, "exist": [6, 9, 13, 20, 22, 25, 26, 28, 31], "relat": [6, 12, 20, 22, 28], "tropic": 6, "min": 6, "minmonoid": 6, "minmonoidel": 6, "wrapped_class": 6, "wa": [6, 9, 10, 20, 22, 24, 25, 28, 29, 31], "voluntarili": 6, "kept": [6, 28, 29], "bare": [6, 28], "minimum": 6, "semigroup": 6, "full": [6, 9, 20], "14519": 6, "had": 6, "elementwrappercheckwrappedclass": 6, "against": [6, 10, 31], "elementwrappertest": 6, "__copi": 6, "append": [6, 14, 27], "quit": [7, 12, 26, 31], "arithmet": [7, 9, 20, 24], "below": [7, 9, 12, 25, 31], "nice": [7, 12, 31], "manipul": 7, "easili": [7, 24, 31], "turn": [7, 31], "45": [7, 26], "factorization_integ": [7, 8], "form": [7, 13, 14, 31], "underli": [7, 20], "access": [7, 13, 31], "were": [7, 26, 28, 31], "get": [7, 9, 12, 26, 31], "up": [7, 8, 9, 12, 26, 27, 28, 31], "simplifi": [7, 8], "discard": 7, "p_i": [7, 29], "e_i": 7, "univers": [7, 27], "includ": [7, 12, 13, 26], "fairli": 7, "modularsymbol": 7, "subspac": 7, "gamma_0": 7, "weight": 7, "sign": 7, "is_integr": 7, "01": [7, 8], "22": 7, "suggest": [7, 9], "kohel": 7, "wrote": [7, 10, 22], "much": [7, 8, 9, 28, 31], "coupl": [7, 28, 29], "bug": [7, 10], "nick": [7, 10], "alexand": [7, 10], "19": [7, 10, 20, 22], "john": 7, "cremona": 7, "cr": [7, 8, 27], "59": 7, "base_chang": 7, "imposs": [7, 9, 31], "expand": 7, "product": [7, 13], "multipli": 7, "160": 7, "is_commut": 7, "23": 7, "neg": [7, 13, 19], "prod": 7, "radic": 7, "100": [7, 14, 26, 27], "radical_valu": 7, "adjac": 7, "inplac": 7, "ti": 7, "match": [7, 13], "accord": [7, 25, 31], "decreas": 7, "lambda": [7, 12, 13, 20, 28], "term": 7, "numpi": 7, "5000000000000001": 7, "unsaf": 8, "lightweight": 8, "too": 8, "slow": [8, 27], "40": [8, 9, 12], "moreov": [8, 31], "unnecessari": 8, "sebastian": 8, "pancratz": 8, "unique_represent": [9, 31], "uniquefactori": [9, 30], "spite": [9, 31], "enough": [9, 20, 25, 28, 31], "detail": [9, 12, 14, 20, 25, 26, 28], "explan": [9, 31], "preprocess": [9, 31], "serv": 9, "still": [9, 20, 25, 26, 28, 31], "regardless": [9, 13], "said": 9, "care": 9, "though": [9, 14, 20, 22, 27, 31], "isn": 9, "create_kei": [9, 30, 31], "create_key_and_extra_arg": [9, 31], "retriev": 9, "consequ": [9, 29, 31], "subsequ": 9, "cachedrepresent": 9, "static": [9, 31], "__classcall__": [9, 31], "__classcall_private__": [9, 31], "seem": 9, "less": [9, 20, 25], "transpar": 9, "sophist": 9, "easier": [9, 12, 25, 31], "simon": [9, 18, 31], "king": [9, 18, 31], "julian": 9, "rueth": 9, "2014": 9, "09": [9, 10], "_cache_kei": [9, 26], "unhash": [9, 26, 31], "intend": [9, 14, 25, 31], "easi": [9, 22, 28, 31], "idea": [9, 12], "extra": [9, 26, 28], "creation": [9, 12, 14, 27, 31], "affect": 9, "distinct": [9, 14, 31], "addition": [9, 14, 20], "fast_method": 9, "withequalitybyid": [9, 31], "weakref": 9, "request": [9, 27], "style": [9, 10, 20, 25, 31], "weak": [9, 20, 31], "usag": [9, 14, 15, 28, 31], "often": [9, 20, 28, 31], "runtim": [9, 26], "certain": [9, 20, 28], "being": [9, 12, 21, 22, 26, 27, 31], "yield": [9, 31], "anew": 9, "create_object": [9, 30, 31], "sometim": [9, 22, 26, 31], "effect": [9, 12, 13, 31], "other_kei": 9, "suppos": [9, 14, 20, 22, 31], "overload": [9, 14, 20, 28, 31], "locat": 9, "spam": 9, "battletoad": 9, "py": 9, "inform": [9, 12, 20, 28, 31], "along": [9, 13], "_factory_data": [9, 31], "artifici": 9, "aspect": 9, "life": [9, 12], "finite_field_constructor": 9, "myfactori": [9, 31], "impl": 9, "extra_arg": [9, 30, 31], "session": [9, 31], "four": 9, "line": [9, 12, 20, 26, 31], "__repr__": [9, 31], "repr": [9, 31], "__weakref__": 9, "count": [9, 14], "tri": [9, 14, 31], "hasattr": 9, "alreadi": [9, 14, 20, 28, 31], "seen": [9, 31], "account": [9, 27, 31], "yet": [9, 25, 31], "avail": [9, 13, 31], "referenc": 9, "everyth": [9, 13, 25, 27, 31], "test_factori": [9, 30], "modn": 9, "NOT": 9, "get_object": [9, 20], "necessari": [9, 12, 20, 22], "older": [9, 31], "get_vers": 9, "sage_vers": 9, "granular": 9, "control": [9, 12, 13, 28], "signific": 9, "gain": [9, 27], "incompat": 9, "coarser": 9, "obj": [9, 14], "dure": [9, 14, 20, 26, 28, 31], "regard": 9, "origin": [9, 14, 31], "remov": [9, 14, 20, 26, 27, 31], "16934": 9, "linbox": [9, 31], "27": [9, 16], "givaro": 9, "poli": 9, "reduce_data": 9, "intern": [9, 20, 22, 25, 29], "free_modul": 9, "freemodulefactory_with_standard_basi": 9, "generic_factory_unpickl": 9, "uniquefactorytest": [9, 30], "ellipsi": 9, "generic_factory_reduc": 9, "proto": [9, 26], "__reduce_ex__": 9, "onto": 9, "lookup_glob": 9, "integer_r": 9, "register_factory_unpickl": 9, "callabl": [9, 20, 31], "regist": [9, 20], "register_unpickle_overrid": 9, "formalsum": 10, "anymor": [10, 31], "2009": 10, "volker": 10, "braun": 10, "coeffici": 10, "coeff": 10, "formal_sum": 10, "abelian": 10, "maxim": 10, "sqrt2": 10, "414213562373095": 10, "f7": 10, "18795": 10, "parent_class": 10, "gens_pi": 11, "abelian_iter": 11, "multiplicative_iter": 11, "globalopt": 12, "eventu": [12, 20, 31], "basi": [12, 13, 20, 31], "attach": 12, "action": [12, 20], "tableau": 12, "tableaux": [12, 26], "global_opt": 12, "myoption": 12, "some_modul": 12, "some_fil": 12, "option_class": 12, "name_of_class_controlled_by_opt": 12, "first_opt": 12, "dict": [12, 13, 20], "with_bel": 12, "descript": [12, 13, 25], "caus": 12, "bell": 12, "with_whistl": 12, "whistl": 12, "option1": 12, "option2": 12, "second_opt": 12, "third_opt": 12, "becom": [12, 25], "despit": 12, "thing": [12, 28, 29], "alt_nam": 12, "altern": [12, 14, 20, 26, 28], "checker": 12, "larg": 12, "legal": 12, "give": [12, 13, 20, 22, 31], "link_to": 12, "link": 12, "convent": [12, 26], "case_sensit": 12, "sensit": 12, "_dispatch": 12, "docstr": 12, "menu": 12, "fanci": 12, "end": [12, 14, 16, 20, 26, 27], "entre": 12, "soup": 12, "cours": [12, 31], "meal": 12, "dai": 12, "bread": 12, "oven": 12, "bake": 12, "rye": 12, "appet": 12, "main": [12, 14], "pizza": 12, "thick": 12, "crust": 12, "pasta": 12, "penn": 12, "arrabiata": 12, "dessert": 12, "espresso": 12, "begin": [12, 14], "cake": 12, "waist": 12, "cream": 12, "fluffi": 12, "white": 12, "stuff": 12, "tip": 12, "reward": 12, "servic": 12, "_add_to_opt": 12, "lower": 12, "treat": [12, 20], "ambigu": 12, "abbrevi": 12, "de": [12, 18], "esp": 12, "ent": 12, "sou": 12, "state": [12, 14, 31], "classmethod": 12, "val": [12, 18], "whole": 12, "finish": 12, "myclass": [12, 31], "_repr_with_bel": 12, "_repr_with_whistl": 12, "apart": 12, "dispatch_to": 12, "karg": 12, "customis": 12, "capabl": 12, "pars": [12, 13], "cost": 12, "__le__": 12, "_le_": 12, "cmp": [12, 25], "__ge__": 12, "_ge_": 12, "_le_option_a": 12, "_ge_option_a": 12, "_le_option_b": 12, "_ge_option_b": 12, "everi": [12, 25, 26, 27], "_reset": [12, 26], "exactli": [12, 13, 20], "testsuit": 12, "run": [12, 22], "andrew": 12, "matha": 12, "overhaul": 12, "2017": 12, "end_doc": 12, "thank": 12, "synonym": 12, "brief": 12, "unambigu": 12, "individu": 12, "globaloptionsmeta": 12, "globaloptionsmetameta": 12, "displai": [12, 13, 20, 22, 26], "compact": 12, "indexed_gener": 13, "indexedgener": 13, "indic": [13, 14, 25], "monomi": 13, "latex_prefix": 13, "anyth": [13, 20], "b_": 13, "latex_bracket": 13, "map": [13, 20, 22], "explicit": 13, "bracket": 13, "_repr_option_bracket": 13, "backward": 13, "partner": 13, "scalar_mult": 13, "scalar": 13, "latex_scalar_mult": 13, "tensor_symbol": 13, "tensor": 13, "unicode_symbol": 13, "sorting_kei": 13, "sorting_revers": 13, "revers": [13, 25, 27], "string_quot": 13, "quot": 13, "iterate_kei": 13, "print_opt": 13, "varieti": 13, "_repr_gener": 13, "_latex_gener": 13, "a_": 13, "schubertpolynomialr": 13, "present": 13, "parse_indices_nam": 13, "index_set": 13, "tripl": 13, "process": [13, 14], "split_index_keyword": 13, "split": 13, "els": 13, "standardize_names_index_set": 13, "names_std": 13, "index_set_std": 13, "greater": 13, "xi": 13, "prototyp": 14, "prototype_pattern": 14, "ghjv1994": 14, "essenc": 14, "occas": [14, 28], "encod": 14, "modif": 14, "correctli": [14, 28], "invari": [14, 20, 31], "One": [14, 25, 29, 31], "problem": [14, 31], "dot": 14, "exchang": 14, "consecut": 14, "clearli": 14, "avoid": [14, 31], "clonableel": 14, "super": [14, 20, 25, 28, 31], "clonablearrai": [14, 15, 16], "clonablelist": [14, 15], "resiz": 14, "normalizedclonablelist": [14, 15], "clonableintarrai": [14, 15], "list_clone_demo": [14, 15], "increasingarrai": [14, 15, 16], "increasinglist": [14, 15], "sortedlist": [14, 15], "increasingintarrai": [14, 15], "el": [14, 28, 29], "increas": [14, 15, 16], "forbidden": 14, "temporarili": [14, 22, 24], "elc": 14, "elc2": 14, "But": [14, 20, 31], "restor": 14, "el3": 14, "el4": 14, "florent": [14, 28], "hivert": [14, 28], "03": 14, "revis": [14, 28], "list_clon": [14, 15, 16], "lst": 14, "tell": [14, 28, 31], "ia": 14, "ia1": 14, "ia2": 14, "fulfil": 14, "stop": [14, 26], "smallest": 14, "j": [14, 20, 25], "role": [14, 28], "piec": 14, "meaning": [14, 31], "__copy__": [14, 16], "fresh": 14, "satisfi": [14, 28, 29], "_require_mut": [14, 18], "_hash_": 14, "instruct": 14, "new_obj": 14, "properli": [14, 20, 28, 29], "minim": [14, 28, 29], "intpair": 14, "_y": 14, "incorrectli": 14, "get_x": 14, "get_i": 14, "set_x": 14, "set_i": 14, "el1": 14, "illeg": 14, "1000": [14, 24], "content": 14, "el2": [14, 28], "pop": [14, 27], "occurr": [14, 27], "sl": [14, 20], "sl1": 14, "atfer": 14, "sl2": 14, "variou": [15, 16, 25, 28], "incomplet": 15, "list_clone_tim": 16, "cmd": 16, "_get_list": 16, "add1_intern": 16, "add1_immut": 16, "add1_mut": 16, "add1_with": 16, "cy_add1_intern": [16, 17], "cy_add1_immut": [16, 17], "cy_add1_mut": [16, 17], "cy_add1_with": [16, 17], "random": 16, "36": 16, "format": 16, "timeit": 16, "625": 16, "loop": 16, "446": 16, "per": [16, 28, 29], "94": 16, "\u00b5": 16, "736": 16, "34": [16, 27], "342": 16, "72": 16, "752": 16, "28": 16, "861": 16, "51": 16, "increasingarrayspi": 16, "869": 16, "86": 16, "52": 16, "02": [16, 31], "91": 16, "95": 16, "14": [16, 19, 26], "list_clone_timings_ci": 17, "_val": 18, "_require_immut": 18, "require_immut": 18, "_is_immut": 18, "require_mut": 18, "_m": 18, "new_val": 18, "sageinspect": 18, "sage_getdoc": 18, "uni": 18, "jena": 18, "seri": 19, "laurent": 19, "powerseriesr": 19, "default_prec": 19, "co": 19, "24": 19, "720": 19, "40320": 19, "3628800": 19, "479001600": 19, "87178291200": 19, "20922789888000": 19, "6402373705728000": 19, "18": 19, "nonexact": 19, "set_default_prec": 19, "simpl": [20, 25, 26, 28, 31], "a_class": 20, "_populate_coercion_lists_": 20, "_element_constructor_": [20, 28], "assert": [20, 25], "mymorph": 20, "_call_": 20, "register_coercion": 20, "assertionerror": 20, "_rmul_": 20, "_lmul_": 20, "prior": 20, "14249": 20, "_an_element_": 20, "eltpair": 20, "short_repr": 20, "analogu": [20, 23], "scienc": [20, 23], "li": [20, 31], "joincategori": 20, "guess": 20, "punctuat": 20, "facad": [20, 28, 29], "_facade_for": [20, 28], "accordingli": [20, 31], "facade_for": [20, 28], "_element_init_pass_par": 20, "guess_pass_par": 20, "_element_constructor": 20, "5979": 20, "dispatch": 20, "coerce_list": 20, "action_list": 20, "convert_list": 20, "embed": 20, "convert_method_nam": 20, "element_constructor": 20, "init_no_par": 20, "IT": 20, "BE": 20, "THE": 20, "_integer_": 20, "bound": [20, 31], "twosid": 20, "7797": 20, "matrixspac": 20, "dimension": 20, "Its": [20, 31], "dens": 20, "matric": 20, "__contains__": 20, "ultra": 20, "permiss": 20, "strict": 20, "rif": 20, "real_interval_field": 20, "cdf": 20, "interv": [20, 25], "is_exact": 20, "nontrivi": 20, "endpoint": 20, "666666666666666": 20, "_coerce_map_from_": 20, "beyond": 20, "_convert_map_from_": 20, "opposit": 20, "_get_action_": 20, "self_on_left": 20, "suffici": [20, 28, 31], "poorli": 20, "_repr_opt": 20, "metadata": 20, "inquir": 20, "ascii_art": [20, 26], "multi": [20, 26], "ascii": [20, 26], "art": [20, 26], "column": 20, "lost": 20, "element_ascii_art": 20, "repl": [20, 26], "formatt": 20, "element_is_atom": 20, "atom": 20, "parenthesi": 20, "_init_category_": 20, "indirectli": 20, "defer": 20, "matrix_spac": 20, "_is_coercion_cach": 20, "xx": 20, "_remove_from_coerce_cach": 20, "coerce_map_from": 20, "_is_conversion_cach": 20, "convert_map_from": 20, "endomorph": 20, "meet": 20, "homset": 20, "_hom_": 20, "an_el": [20, 28, 29], "emptyseterror": 20, "complex_doubl": 20, "coerce_embed": 20, "denot": 20, "relationship": 20, "choic": [20, 28], "465571231876768": 20, "defn": [20, 22], "2327856159383841": 20, "7925519925154479": 20, "complex": [20, 27], "12313": 20, "kind": [20, 28], "monodict": 20, "leak": 20, "occur": 20, "gc": 20, "collect": [20, 28, 31], "55": 20, "50": [20, 27], "scheme": 20, "random_el": 20, "ellipticcurv": 20, "has_coerce_map_from": 20, "manual": [20, 31], "fixm": 20, "awai": 20, "get_act": 20, "self_el": 20, "s_el": 20, "im_gen": [20, 22], "base_map": [20, 22], "send": [20, 22], "imag": [20, 22], "verifi": [20, 22, 25, 28], "As": [20, 22, 28, 29, 31], "shortcut": [20, 22], "few": [20, 22, 28], "49": [20, 22], "loss": 20, "qp": 20, "padic": [20, 26], "zp": 20, "cap": 20, "register_act": 20, "updat": 20, "act": [20, 31], "symmetricgroupact": 20, "is_left": 20, "mul": 20, "_act_": 20, "nk": 20, "_unset_coercions_us": 20, "mor": 20, "text": 20, "safeti": 20, "discov": 20, "l_into_k": 20, "automorph": 20, "goe": 20, "register_convers": 20, "m_into_k": 20, "register_embed": 20, "emb": 20, "s3": [20, 28], "alternatinggroup": 20, "unabl": [20, 27], "phi": 20, "14711": 20, "outsid": [20, 25], "linear": 20, "14014": 20, "row": 20, "advanc": [20, 31], "k_into_m": 20, "31": [20, 22], "l_into_m": 20, "462": 20, "272118": 20, "set_gener": 20, "is_par": 20, "parent_bas": 21, "parentwithbas": [21, 22, 23], "deprec": [21, 22], "parentwithgen": [22, 23], "_assign_nam": 22, "parent_gen": 22, "_name": 22, "induc": 22, "modulu": 22, "localvar": 22, "abl": [22, 28, 31], "statement": 22, "fun": 22, "indent": 22, "quotient_ring_el": 22, "pyx": [22, 31], "parent_old": 23, "withproof": 24, "subsystem": 24, "hang": 24, "forev": 24, "453": 24, "zerodivisionerror": 24, "get_flag": 24, "flag": 24, "__eq__": [25, 31], "__lt__": 25, "slot": 25, "tp_richcompar": 25, "constant": 25, "op_lt": 25, "op_l": 25, "op_eq": 25, "op_n": 25, "op_gt": 25, "op_g": 25, "__richcmp__": 25, "helper": 25, "analog": 25, "richcmp_not_equ": 25, "compar": 25, "rich_to_bool_sgn": 25, "revop": 25, "py_eq": 25, "mpz_cmp": 25, "realist": [25, 28], "richcmp_by_eq_and_lt": 25, "eq_attr": 25, "lt_attr": 25, "undefin": 25, "richcmp_method": 25, "eq": 25, "lt": 25, "_eq": 25, "_lt": 25, "richcmp_item": 25, "lexicograph": 25, "decid": [25, 28], "mutual": 25, "exclus": 25, "total": [25, 31], "iff": 25, "listcmp": 25, "setwis": 25, "b2": 25, "setcmp": 25, "sym": 25, "l1": 25, "l2": 25, "reslist": 25, "reselt": 25, "friend": 25, "place": [25, 26, 27], "__ne__": 25, "lazili": 25, "width": 25, "height": 25, "wb": 25, "exclud": 25, "far": [25, 31], "sage_object": 26, "visibl": 26, "_ascii_art_": 26, "asciiart": 26, "typeset": 26, "dx": 26, "switch": 26, "get_test_shel": 26, "shell": 26, "run_cel": 26, "tab": 26, "standardtableaux": 26, "tabl": [26, 31], "french": 26, "hashabl": [26, 27, 31], "identifi": 26, "adic": 26, "usabl": 26, "qadic_flint_cr": 26, "qadiccappedrelativeel": 26, "sure": [26, 31], "filenam": 26, "compress": 26, "save": [26, 31], "later": [26, 31], "reconstitut": 26, "persist": 26, "comp": 26, "p_comp": 26, "p_uncomp": 26, "decompress": 26, "pickletool": 26, "di": 26, "x80": 26, "41": 26, "binput": 26, "43": 26, "empty_tupl": 26, "44": 26, "x81": 26, "newobj": 26, "47": 26, "highest": 26, "opcod": 26, "get_custom_nam": 26, "reset_nam": 26, "log": 26, "maxima_method": 26, "maxima_wrapp": 26, "maximawrapp": 26, "300": 26, "298": 26, "realliter": 26, "14000000000000": 26, "carri": 26, "wast": 26, "_sageobject__custom_nam": 26, "tempfil": 26, "namedtemporaryfil": 26, "suffix": 26, "sobj": 26, "wherev": 27, "restrict": [27, 31], "succeed": 27, "preserv": [27, 31], "hi": 27, "characterist": 27, "freez": 27, "substanti": 27, "greatli": 27, "sped": 27, "10000": 27, "cr_str": 27, "use_sage_typ": 27, "entir": 27, "carriag": 27, "flexibl": [27, 28], "seq": 27, "anywher": 27, "realli": 27, "circumv": 27, "__setitem__": 27, "bad": 27, "circumvent": 27, "sequence_gener": 27, "IN": 27, "devic": 28, "big": 28, "constraint": [28, 29, 31], "con": [28, 29], "facadeset": 28, "twofold": 28, "databas": 28, "gather": 28, "polici": [28, 29], "concern": 28, "file": [28, 31], "set_factories_exampl": [28, 29], "setfactori": [28, 29], "intention": [28, 29], "xypair": [28, 29], "set_factori": [28, 29], "s_a": [28, 29], "mid": [28, 29], "admittedli": 28, "And": [28, 31], "known": 28, "cardin": 28, "s_2": 28, "sx2": 28, "sy3": 28, "s23": 28, "duplic": [28, 29], "writer": 28, "allpair": [28, 29], "setfactorypolici": [28, 29], "_default_polici": 28, "newxypair": 28, "topmostparentpolici": 28, "void": 28, "new_polici": 28, "newli": 28, "news2": 28, "selfparentpolici": 28, "selfpolici": 28, "selfs2": 28, "barefunctionpolici": 28, "tuplepolici": 28, "facadeparentpolici": 28, "ownership": 28, "systemat": [28, 31], "topmost": 28, "parentwithsetfactori": [28, 29], "subject": 28, "verbatim": 28, "check_el": [28, 29], "inde": [28, 31], "belong": 28, "receiv": 28, "mandatori": 28, "vagu": 28, "add_constraint": [28, 29], "union": [28, 29], "cooper": 28, "select": 28, "soon": 28, "2011": 28, "2012": 28, "element_constructor_attribut": 28, "bunch": 28, "pol": 28, "p2": 28, "transit": [28, 31], "p23": 28, "pairsx_": [28, 29], "explain": [28, 31], "wrong": 28, "facade_polici": [28, 29], "p3": 28, "pairs_i": [28, 29], "stub": 28, "opt": 28, "prerequisit": 28, "facade_element_constructor_attribut": 28, "self_element_constructor_attribut": 28, "_parent_for": 28, "allpairs_with_categori": 28, "init": 28, "top_constraint": 28, "goal": 29, "exemplifi": 29, "introduct": 29, "disjointunionenumeratedset": 29, "disjoint": 29, "bigcup_": 29, "famili": 29, "hidden": 29, "_pairs_i": 29, "singletonpair": 29, "s_i": 29, "single_pair": 29, "singleton": 29, "xypairsfactori": 29, "args_opt": 29, "crude": 29, "sake": 29, "twice": 31, "symmetr": 31, "six": 31, "besid": 31, "theoret": 31, "approach": 31, "pitfal": 31, "impli": 31, "subtl": 31, "weakcachedfunct": 31, "implic": 31, "keep": 31, "garbag": 31, "benefit": 31, "respect": 31, "bind": 31, "__get__": 31, "circumst": 31, "prevent": 31, "staticmethod": 31, "http": 31, "doc": 31, "org": 31, "howto": 31, "descriptor": 31, "html": 31, "That": 31, "idempot": 31, "warn": 31, "round": 31, "imagin": 31, "mistak": 31, "wrongusag": 31, "81": 31, "insid": 31, "mess": 31, "betterusag": 31, "somethingels": 31, "c1": 31, "c2": 31, "c2b": 31, "contrast": 31, "drop": 31, "bypass": 31, "catch": 31, "deleg": 31, "tcrystal": 31, "conclud": 31, "extern": 31, "advantag": 31, "disadvantag": 31, "confus": 31, "task": 31, "cleanli": 31, "significantli": 31, "due": 31, "issubclass": 31, "k5": 31, "finite_field_prime_modn": 31, "finitefield_prime_modn_with_categori": 31, "k25": 31, "finite_field_givaro": 31, "finitefield_givaro_with_categori": 31, "kp": 31, "next_prime_pow": 31, "1000000": 31, "finite_field_pari_ffelt": 31, "finitefield_pari_ffelt_with_categori": 31, "rewrit": 31, "awar": 31, "Such": 31, "subgroup": 31, "g3": 31, "simultan": 31, "symmetricfunct": 31, "weakli": 31, "coexist": 31, "12215": 31, "strong": 31, "canonic": 31, "myclass2": 31, "situat": 31, "aris": 31, "ala": 31, "obviou": 31, "myclass3": 31, "transform": 31, "implicitli": 31, "preprocessed_argu": 31, "plai": 31, "trick": 31, "strongli": 31, "discourag": 31, "Of": 31, "fine": 31, "primarili": 31, "deepcopi": 31, "delet": 31, "scratch": 31, "someclass": 31, "__del__": 31, "otherclass": 31, "200": 31, "del": 31, "chanc": 31, "__getnewargs__": 31, "unreduc": 31, "overridden": 31, "automag": 31, "migrat": 31, "myclass4": 31, "upgrad": 31, "redo": 31, "caveat": 31, "formerli": 31, "rational": 31, "variant": 31, "trace": 31, "difficulti": 31, "unprocess": 31, "stori": 31, "intens": 31, "gadget": 31, "intrus": 31, "impos": 31, "lead": 31, "subtleti": 31, "sf": 31, "destroi": 31}, "objects": {"sage.misc": [[1, 0, 0, "-", "proof"]], "sage.structure": [[2, 0, 0, "-", "category_object"], [3, 0, 0, "-", "debug_options"], [4, 0, 0, "-", "dynamic_class"], [5, 0, 0, "-", "element"], [6, 0, 0, "-", "element_wrapper"], [7, 0, 0, "-", "factorization"], [8, 0, 0, "-", "factorization_integer"], [9, 0, 0, "-", "factory"], [10, 0, 0, "-", "formal_sum"], [11, 0, 0, "-", "gens_py"], [12, 0, 0, "-", "global_options"], [13, 0, 0, "-", "indexed_generators"], [14, 0, 0, "-", "list_clone"], [15, 0, 0, "-", "list_clone_demo"], [16, 0, 0, "-", "list_clone_timings"], [17, 0, 0, "-", "list_clone_timings_cy"], [18, 0, 0, "-", "mutability"], [19, 0, 0, "-", "nonexact"], [20, 0, 0, "-", "parent"], [21, 0, 0, "-", "parent_base"], [22, 0, 0, "-", "parent_gens"], [23, 0, 0, "-", "parent_old"], [25, 0, 0, "-", "richcmp"], [26, 0, 0, "-", "sage_object"], [27, 0, 0, "-", "sequence"], [28, 0, 0, "-", "set_factories"], [29, 0, 0, "-", "set_factories_example"], [30, 0, 0, "-", "test_factory"], [31, 0, 0, "-", "unique_representation"]], "sage.structure.category_object": [[2, 1, 1, "", "CategoryObject"], [2, 3, 1, "", "certify_names"], [2, 3, 1, "", "check_default_category"], [2, 3, 1, "", "normalize_names"]], "sage.structure.category_object.CategoryObject": [[2, 2, 1, "", "Hom"], [2, 2, 1, "", "base"], [2, 2, 1, "", "base_ring"], [2, 2, 1, "", "categories"], [2, 2, 1, "", "category"], [2, 2, 1, "", "gens_dict"], [2, 2, 1, "", "gens_dict_recursive"], [2, 2, 1, "", "inject_variables"], [2, 2, 1, "", "latex_name"], [2, 2, 1, "", "latex_variable_names"], [2, 2, 1, "", "objgen"], [2, 2, 1, "", "objgens"], [2, 2, 1, "", "variable_name"], [2, 2, 1, "", "variable_names"]], "sage.structure.debug_options": [[3, 1, 1, "", "DebugOptions_class"]], "sage.structure.debug_options.DebugOptions_class": [[3, 4, 1, "", "refine_category_hash_check"], [3, 4, 1, "", "unique_parent_warnings"]], "sage.structure.dynamic_class": [[4, 1, 1, "", "DynamicClasscallMetaclass"], [4, 1, 1, "", "DynamicInheritComparisonClasscallMetaclass"], [4, 1, 1, "", "DynamicInheritComparisonMetaclass"], [4, 1, 1, "", "DynamicMetaclass"], [4, 4, 1, "", "M"], [4, 1, 1, "", "TestClass"], [4, 3, 1, "", "dynamic_class"], [4, 3, 1, "", "dynamic_class_internal"]], "sage.structure.dynamic_class.TestClass": [[4, 2, 1, "", "bla"]], "sage.structure.element": [[5, 1, 1, "", "AdditiveGroupElement"], [5, 1, 1, "", "AlgebraElement"], [5, 1, 1, "", "CommutativeAlgebraElement"], [5, 1, 1, "", "CommutativeRingElement"], [5, 1, 1, "", "DedekindDomainElement"], [5, 1, 1, "", "Element"], [5, 1, 1, "", "ElementWithCachedMethod"], [5, 1, 1, "", "EuclideanDomainElement"], [5, 1, 1, "", "Expression"], [5, 1, 1, "", "FieldElement"], [5, 1, 1, "", "InfinityElement"], [5, 1, 1, "", "IntegralDomainElement"], [5, 1, 1, "", "Matrix"], [5, 1, 1, "", "ModuleElement"], [5, 1, 1, "", "ModuleElementWithMutability"], [5, 1, 1, "", "MonoidElement"], [5, 1, 1, "", "MultiplicativeGroupElement"], [5, 1, 1, "", "PrincipalIdealDomainElement"], [5, 1, 1, "", "RingElement"], [5, 1, 1, "", "Vector"], [5, 3, 1, "", "bin_op"], [5, 3, 1, "", "canonical_coercion"], [5, 3, 1, "", "coerce_binop"], [5, 3, 1, "", "coercion_traceback"], [5, 3, 1, "", "get_coercion_model"], [5, 3, 1, "", "have_same_parent"], [5, 3, 1, "", "is_AdditiveGroupElement"], [5, 3, 1, "", "is_AlgebraElement"], [5, 3, 1, "", "is_CommutativeAlgebraElement"], [5, 3, 1, "", "is_CommutativeRingElement"], [5, 3, 1, "", "is_DedekindDomainElement"], [5, 3, 1, "", "is_Element"], [5, 3, 1, "", "is_EuclideanDomainElement"], [5, 3, 1, "", "is_FieldElement"], [5, 3, 1, "", "is_InfinityElement"], [5, 3, 1, "", "is_IntegralDomainElement"], [5, 3, 1, "", "is_Matrix"], [5, 3, 1, "", "is_ModuleElement"], [5, 3, 1, "", "is_MonoidElement"], [5, 3, 1, "", "is_MultiplicativeGroupElement"], [5, 3, 1, "", "is_PrincipalIdealDomainElement"], [5, 3, 1, "", "is_RingElement"], [5, 3, 1, "", "is_Vector"], [5, 3, 1, "", "make_element"], [5, 3, 1, "", "parent"]], "sage.structure.element.AdditiveGroupElement": [[5, 2, 1, "", "order"]], "sage.structure.element.CommutativeRingElement": [[5, 2, 1, "", "divides"], [5, 2, 1, "", "inverse_mod"], [5, 2, 1, "", "is_square"], [5, 2, 1, "", "mod"], [5, 2, 1, "", "sqrt"]], "sage.structure.element.Element": [[5, 2, 1, "", "__add__"], [5, 2, 1, "", "__floordiv__"], [5, 2, 1, "", "__mod__"], [5, 2, 1, "", "__mul__"], [5, 2, 1, "", "__neg__"], [5, 2, 1, "", "__sub__"], [5, 2, 1, "", "__truediv__"], [5, 2, 1, "", "_richcmp_"], [5, 2, 1, "", "base_extend"], [5, 2, 1, "", "base_ring"], [5, 2, 1, "", "category"], [5, 2, 1, "", "is_zero"], [5, 2, 1, "", "n"], [5, 2, 1, "", "numerical_approx"], [5, 2, 1, "", "parent"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "substitute"]], "sage.structure.element.EuclideanDomainElement": [[5, 2, 1, "", "degree"], [5, 2, 1, "", "leading_coefficient"], [5, 2, 1, "", "quo_rem"]], "sage.structure.element.FieldElement": [[5, 2, 1, "", "divides"], [5, 2, 1, "", "is_unit"], [5, 2, 1, "", "quo_rem"]], "sage.structure.element.IntegralDomainElement": [[5, 2, 1, "", "is_nilpotent"]], "sage.structure.element.ModuleElement": [[5, 2, 1, "", "additive_order"], [5, 2, 1, "", "order"]], "sage.structure.element.ModuleElementWithMutability": [[5, 2, 1, "", "is_immutable"], [5, 2, 1, "", "is_mutable"], [5, 2, 1, "", "set_immutable"]], "sage.structure.element.MonoidElement": [[5, 2, 1, "", "multiplicative_order"], [5, 2, 1, "", "order"], [5, 2, 1, "", "powers"]], "sage.structure.element.MultiplicativeGroupElement": [[5, 2, 1, "", "order"]], "sage.structure.element.PrincipalIdealDomainElement": [[5, 2, 1, "", "gcd"], [5, 2, 1, "", "lcm"]], "sage.structure.element.RingElement": [[5, 2, 1, "", "abs"], [5, 2, 1, "", "additive_order"], [5, 2, 1, "", "is_nilpotent"], [5, 2, 1, "", "is_one"], [5, 2, 1, "", "is_prime"], [5, 2, 1, "", "multiplicative_order"], [5, 2, 1, "", "powers"]], "sage.structure.element_wrapper": [[6, 1, 1, "", "DummyParent"], [6, 1, 1, "", "ElementWrapper"], [6, 1, 1, "", "ElementWrapperCheckWrappedClass"], [6, 1, 1, "", "ElementWrapperTester"]], "sage.structure.element_wrapper.ElementWrapper": [[6, 4, 1, "", "value"]], "sage.structure.element_wrapper.ElementWrapperCheckWrappedClass": [[6, 4, 1, "", "wrapped_class"]], "sage.structure.element_wrapper.ElementWrapperTester": [[6, 2, 1, "", "append"]], "sage.structure.factorization": [[7, 1, 1, "", "Factorization"]], "sage.structure.factorization.Factorization": [[7, 2, 1, "", "base_change"], [7, 2, 1, "", "expand"], [7, 2, 1, "", "gcd"], [7, 2, 1, "", "is_commutative"], [7, 2, 1, "", "is_integral"], [7, 2, 1, "", "lcm"], [7, 2, 1, "", "prod"], [7, 2, 1, "", "radical"], [7, 2, 1, "", "radical_value"], [7, 2, 1, "", "simplify"], [7, 2, 1, "", "sort"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "unit"], [7, 2, 1, "", "universe"], [7, 2, 1, "", "value"]], "sage.structure.factorization_integer": [[8, 1, 1, "", "IntegerFactorization"]], "sage.structure.factory": [[9, 1, 1, "", "UniqueFactory"], [9, 3, 1, "", "generic_factory_reduce"], [9, 3, 1, "", "generic_factory_unpickle"], [9, 3, 1, "", "lookup_global"], [9, 3, 1, "", "register_factory_unpickle"]], "sage.structure.factory.UniqueFactory": [[9, 2, 1, "", "create_key"], [9, 2, 1, "", "create_key_and_extra_args"], [9, 2, 1, "", "create_object"], [9, 2, 1, "", "get_object"], [9, 2, 1, "", "get_version"], [9, 2, 1, "", "other_keys"], [9, 2, 1, "", "reduce_data"]], "sage.structure.formal_sum": [[10, 1, 1, "", "FormalSum"], [10, 1, 1, "", "FormalSums"]], "sage.structure.formal_sum.FormalSum": [[10, 2, 1, "", "reduce"]], "sage.structure.formal_sum.FormalSums": [[10, 4, 1, "", "Element"], [10, 2, 1, "", "base_extend"]], "sage.structure.gens_py": [[11, 3, 1, "", "abelian_iterator"], [11, 3, 1, "", "multiplicative_iterator"]], "sage.structure.global_options": [[12, 1, 1, "", "GlobalOptions"], [12, 1, 1, "", "GlobalOptionsMeta"], [12, 1, 1, "", "GlobalOptionsMetaMeta"], [12, 1, 1, "", "Option"]], "sage.structure.indexed_generators": [[13, 1, 1, "", "IndexedGenerators"], [13, 3, 1, "", "parse_indices_names"], [13, 3, 1, "", "split_index_keywords"], [13, 3, 1, "", "standardize_names_index_set"]], "sage.structure.indexed_generators.IndexedGenerators": [[13, 2, 1, "", "indices"], [13, 2, 1, "", "prefix"], [13, 2, 1, "", "print_options"]], "sage.structure.list_clone": [[14, 1, 1, "", "ClonableArray"], [14, 1, 1, "", "ClonableElement"], [14, 1, 1, "", "ClonableIntArray"], [14, 1, 1, "", "ClonableList"], [14, 1, 1, "", "NormalizedClonableList"]], "sage.structure.list_clone.ClonableArray": [[14, 2, 1, "", "check"], [14, 2, 1, "", "count"], [14, 2, 1, "", "index"]], "sage.structure.list_clone.ClonableElement": [[14, 2, 1, "", "clone"], [14, 2, 1, "", "is_immutable"], [14, 2, 1, "", "is_mutable"], [14, 2, 1, "", "set_immutable"]], "sage.structure.list_clone.ClonableIntArray": [[14, 2, 1, "", "check"], [14, 2, 1, "", "index"], [14, 2, 1, "", "list"]], "sage.structure.list_clone.ClonableList": [[14, 2, 1, "", "append"], [14, 2, 1, "", "extend"], [14, 2, 1, "", "insert"], [14, 2, 1, "", "pop"], [14, 2, 1, "", "remove"]], "sage.structure.list_clone.NormalizedClonableList": [[14, 2, 1, "", "normalize"]], "sage.structure.list_clone_demo": [[15, 1, 1, "", "IncreasingArray"], [15, 1, 1, "", "IncreasingArrays"], [15, 1, 1, "", "IncreasingIntArray"], [15, 1, 1, "", "IncreasingIntArrays"], [15, 1, 1, "", "IncreasingList"], [15, 1, 1, "", "IncreasingLists"], [15, 1, 1, "", "SortedList"], [15, 1, 1, "", "SortedLists"]], "sage.structure.list_clone_demo.IncreasingArray": [[15, 2, 1, "", "check"]], "sage.structure.list_clone_demo.IncreasingArrays": [[15, 4, 1, "", "Element"]], "sage.structure.list_clone_demo.IncreasingIntArray": [[15, 2, 1, "", "check"]], "sage.structure.list_clone_demo.IncreasingIntArrays": [[15, 4, 1, "", "Element"]], "sage.structure.list_clone_demo.IncreasingList": [[15, 2, 1, "", "check"]], "sage.structure.list_clone_demo.IncreasingLists": [[15, 4, 1, "", "Element"]], "sage.structure.list_clone_demo.SortedList": [[15, 2, 1, "", "check"], [15, 2, 1, "", "normalize"]], "sage.structure.list_clone_demo.SortedLists": [[15, 4, 1, "", "Element"]], "sage.structure.list_clone_timings": [[16, 1, 1, "", "IncreasingArraysPy"], [16, 3, 1, "", "add1_immutable"], [16, 3, 1, "", "add1_internal"], [16, 3, 1, "", "add1_mutable"], [16, 3, 1, "", "add1_with"]], "sage.structure.list_clone_timings.IncreasingArraysPy": [[16, 1, 1, "", "Element"]], "sage.structure.list_clone_timings.IncreasingArraysPy.Element": [[16, 2, 1, "", "check"]], "sage.structure.list_clone_timings_cy": [[17, 3, 1, "", "cy_add1_immutable"], [17, 3, 1, "", "cy_add1_internal"], [17, 3, 1, "", "cy_add1_mutable"], [17, 3, 1, "", "cy_add1_with"]], "sage.structure.mutability": [[18, 1, 1, "", "Mutability"], [18, 3, 1, "", "require_immutable"], [18, 3, 1, "", "require_mutable"]], "sage.structure.mutability.Mutability": [[18, 2, 1, "", "is_immutable"], [18, 2, 1, "", "is_mutable"], [18, 2, 1, "", "set_immutable"]], "sage.structure.nonexact": [[19, 1, 1, "", "Nonexact"]], "sage.structure.nonexact.Nonexact": [[19, 2, 1, "", "default_prec"]], "sage.structure.parent": [[20, 1, 1, "", "EltPair"], [20, 1, 1, "", "Parent"], [20, 1, 1, "", "Set_generic"], [20, 3, 1, "", "is_Parent"]], "sage.structure.parent.EltPair": [[20, 2, 1, "", "short_repr"]], "sage.structure.parent.Parent": [[20, 2, 1, "", "Hom"], [20, 2, 1, "", "__call__"], [20, 2, 1, "", "__contains__"], [20, 2, 1, "", "__mul__"], [20, 2, 1, "", "_an_element_"], [20, 2, 1, "", "_coerce_map_from_"], [20, 2, 1, "", "_convert_map_from_"], [20, 2, 1, "", "_get_action_"], [20, 2, 1, "", "_init_category_"], [20, 2, 1, "", "_is_coercion_cached"], [20, 2, 1, "", "_is_conversion_cached"], [20, 2, 1, "", "_populate_coercion_lists_"], [20, 2, 1, "", "_repr_option"], [20, 2, 1, "", "an_element"], [20, 2, 1, "", "category"], [20, 2, 1, "", "coerce"], [20, 2, 1, "", "coerce_embedding"], [20, 2, 1, "", "coerce_map_from"], [20, 2, 1, "", "convert_map_from"], [20, 2, 1, "", "element_class"], [20, 2, 1, "", "get_action"], [20, 2, 1, "", "has_coerce_map_from"], [20, 2, 1, "", "hom"], [20, 2, 1, "", "is_exact"], [20, 2, 1, "", "register_action"], [20, 2, 1, "", "register_coercion"], [20, 2, 1, "", "register_conversion"], [20, 2, 1, "", "register_embedding"]], "sage.structure.parent.Set_generic": [[20, 2, 1, "", "object"]], "sage.structure.parent_base": [[21, 1, 1, "", "ParentWithBase"]], "sage.structure.parent_base.ParentWithBase": [[21, 2, 1, "", "base_extend"]], "sage.structure.parent_gens": [[22, 1, 1, "", "ParentWithGens"], [22, 1, 1, "", "localvars"]], "sage.structure.parent_gens.ParentWithGens": [[22, 2, 1, "", "gen"], [22, 2, 1, "", "gens"], [22, 2, 1, "", "hom"], [22, 2, 1, "", "ngens"]], "sage.structure.parent_old": [[23, 1, 1, "", "Parent"]], "sage.structure.proof": [[24, 0, 0, "-", "proof"]], "sage.structure.proof.proof": [[24, 1, 1, "", "WithProof"], [24, 3, 1, "", "get_flag"]], "sage.structure.richcmp": [[25, 3, 1, "", "revop"], [25, 3, 1, "", "rich_to_bool"], [25, 3, 1, "", "rich_to_bool_sgn"], [25, 3, 1, "", "richcmp"], [25, 3, 1, "", "richcmp_by_eq_and_lt"], [25, 3, 1, "", "richcmp_item"], [25, 3, 1, "", "richcmp_method"], [25, 3, 1, "", "richcmp_not_equal"]], "sage.structure.sage_object": [[26, 1, 1, "", "SageObject"]], "sage.structure.sage_object.SageObject": [[26, 2, 1, "", "_ascii_art_"], [26, 2, 1, "", "_cache_key"], [26, 2, 1, "", "category"], [26, 2, 1, "", "dump"], [26, 2, 1, "", "dumps"], [26, 2, 1, "", "get_custom_name"], [26, 2, 1, "", "parent"], [26, 2, 1, "", "rename"], [26, 2, 1, "", "reset_name"], [26, 2, 1, "", "save"]], "sage.structure.sequence": [[27, 3, 1, "", "Sequence"], [27, 1, 1, "", "Sequence_generic"], [27, 3, 1, "", "seq"]], "sage.structure.sequence.Sequence_generic": [[27, 2, 1, "", "append"], [27, 2, 1, "", "extend"], [27, 2, 1, "", "insert"], [27, 2, 1, "", "is_immutable"], [27, 2, 1, "", "is_mutable"], [27, 2, 1, "", "pop"], [27, 2, 1, "", "remove"], [27, 2, 1, "", "reverse"], [27, 2, 1, "", "set_immutable"], [27, 2, 1, "", "sort"], [27, 2, 1, "", "universe"]], "sage.structure.set_factories": [[28, 1, 1, "", "BareFunctionPolicy"], [28, 1, 1, "", "FacadeParentPolicy"], [28, 1, 1, "", "ParentWithSetFactory"], [28, 1, 1, "", "SelfParentPolicy"], [28, 1, 1, "", "SetFactory"], [28, 1, 1, "", "SetFactoryPolicy"], [28, 1, 1, "", "TopMostParentPolicy"]], "sage.structure.set_factories.BareFunctionPolicy": [[28, 2, 1, "", "element_constructor_attributes"]], "sage.structure.set_factories.FacadeParentPolicy": [[28, 2, 1, "", "element_constructor_attributes"]], "sage.structure.set_factories.ParentWithSetFactory": [[28, 2, 1, "", "check_element"], [28, 2, 1, "", "constraints"], [28, 2, 1, "", "facade_policy"], [28, 2, 1, "", "factory"], [28, 2, 1, "", "policy"], [28, 2, 1, "", "subset"]], "sage.structure.set_factories.SelfParentPolicy": [[28, 2, 1, "", "element_constructor_attributes"]], "sage.structure.set_factories.SetFactory": [[28, 2, 1, "", "add_constraints"]], "sage.structure.set_factories.SetFactoryPolicy": [[28, 2, 1, "", "element_constructor_attributes"], [28, 2, 1, "", "facade_element_constructor_attributes"], [28, 2, 1, "", "factory"], [28, 2, 1, "", "self_element_constructor_attributes"]], "sage.structure.set_factories.TopMostParentPolicy": [[28, 2, 1, "", "element_constructor_attributes"]], "sage.structure.set_factories_example": [[29, 1, 1, "", "AllPairs"], [29, 1, 1, "", "PairsX_"], [29, 1, 1, "", "Pairs_Y"], [29, 1, 1, "", "SingletonPair"], [29, 1, 1, "", "XYPair"], [29, 3, 1, "", "XYPairs"], [29, 1, 1, "", "XYPairsFactory"]], "sage.structure.set_factories_example.AllPairs": [[29, 2, 1, "", "check_element"], [29, 2, 1, "", "pairs_y"]], "sage.structure.set_factories_example.PairsX_": [[29, 2, 1, "", "an_element"], [29, 2, 1, "", "check_element"]], "sage.structure.set_factories_example.Pairs_Y": [[29, 2, 1, "", "an_element"], [29, 2, 1, "", "check_element"], [29, 2, 1, "", "single_pair"]], "sage.structure.set_factories_example.SingletonPair": [[29, 2, 1, "", "check_element"]], "sage.structure.set_factories_example.XYPairsFactory": [[29, 2, 1, "", "add_constraints"]], "sage.structure.test_factory": [[30, 1, 1, "", "A"], [30, 1, 1, "", "UniqueFactoryTester"]], "sage.structure.test_factory.UniqueFactoryTester": [[30, 2, 1, "", "create_key"], [30, 2, 1, "", "create_object"]], "sage.structure.unique_representation": [[31, 1, 1, "", "CachedRepresentation"], [31, 1, 1, "", "UniqueRepresentation"], [31, 3, 1, "", "unreduce"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"parent": [0, 20, 21, 22, 23], "element": [0, 5, 6, 14, 15], "sage": [0, 3, 26], "object": [0, 2, 8, 11, 19, 20, 21, 22, 23, 26], "old": [0, 21, 22, 23], "style": [0, 21, 22, 23], "deprec": 0, "mathemat": 0, "data": 0, "structur": [0, 3], "us": [0, 31], "heurist": 0, "probabilist": 0, "algorithm": 0, "util": 0, "intern": 0, "indic": 0, "tabl": 0, "whether": 1, "comput": 1, "ar": 1, "provabl": 1, "correct": 1, "default": 1, "base": [2, 11, 20, 21, 22, 23, 26], "class": [2, 4, 5, 11, 12, 15, 20, 21, 22, 23, 26, 31], "categori": 2, "todo": [2, 20, 28, 31], "debug": 3, "option": [3, 12], "modul": [3, 30], "dynam": 4, "The": 5, "abstract": [5, 11, 26], "hierarchi": 5, "how": 5, "defin": 5, "new": 5, "arithmet": 5, "A": 5, "quick": 5, "summari": 5, "impati": 5, "more": 5, "detail": 5, "exampl": [5, 29], "implement": [5, 18, 31], "wrapper": 6, "factor": 7, "integerfactor": 8, "factori": [9, 28, 29, 30], "cach": [9, 31], "represent": [9, 31], "formal": 10, "sum": 10, "pure": 11, "python": [11, 25, 31], "code": 11, "gener": [11, 13, 22], "global": [12, 24], "construct": 12, "access": 12, "set": [12, 28, 29], "valu": 12, "setter": 12, "function": [12, 17], "document": 12, "dispatch": 12, "doc": 12, "test": [12, 16, 30], "pickl": 12, "index": 13, "arrai": [14, 15], "list": [14, 15], "With": [14, 15], "clone": [14, 15, 16, 17], "protocol": [14, 15, 16, 17], "demonstr": 15, "perform": 16, "cython": [17, 18, 25], "time": 17, "mutabl": 18, "precis": 19, "manag": 19, "non": 19, "exact": 19, "ring": 21, "proof": 24, "prefer": 24, "like": 25, "rich": 25, "comparison": 25, "finit": 27, "homogen": 27, "sequenc": 27, "an": 29, "uniqu": 31, "what": 31, "i": 31, "cachedrepresent": 31, "normalis": 31, "argument": 31, "uniquefactori": 31, "compar": 31, "two": 31, "wai": 31, "simplic": 31, "transpar": 31, "inherit": 31, "versu": 31, "extens": 31}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Parents and Elements": [[0, "parents-and-elements"]], "Sage Objects": [[0, "sage-objects"]], "Parents": [[0, "parents"], [0, "id1"]], "Old-Style Parents (Deprecated)": [[0, "old-style-parents-deprecated"]], "Elements": [[0, "elements"], [5, "elements"]], "Mathematical Data Structures": [[0, "mathematical-data-structures"]], "Use of Heuristic and Probabilistic Algorithms": [[0, "use-of-heuristic-and-probabilistic-algorithms"]], "Utilities": [[0, "utilities"]], "Internals": [[0, "internals"]], "Indices and Tables": [[0, "indices-and-tables"]], "Whether or not computations are provably correct by default": [[1, "whether-or-not-computations-are-provably-correct-by-default"]], "Base class for objects of a category": [[2, "base-class-for-objects-of-a-category"]], "Todo": [[2, "id1"], [20, "id1"], [28, "id1"], [28, "id2"], [28, "id3"], [31, "id1"], [31, "id2"]], "Debug options for the sage.structure modules": [[3, "debug-options-for-the-sage-structure-modules"]], "Dynamic classes": [[4, "dynamic-classes"]], "The Abstract Element Class Hierarchy": [[5, "the-abstract-element-class-hierarchy"]], "How to Define a New Element Class": [[5, "how-to-define-a-new-element-class"]], "Arithmetic for Elements": [[5, "arithmetic-for-elements"]], "A quick summary for the impatient": [[5, "a-quick-summary-for-the-impatient"]], "Arithmetic in more detail": [[5, "arithmetic-in-more-detail"]], "Examples": [[5, "examples"]], "Implementation details": [[5, "implementation-details"]], "Element Wrapper": [[6, "element-wrapper"]], "Factorizations": [[7, "factorizations"]], "IntegerFactorization objects": [[8, "integerfactorization-objects"]], "Factory for cached representations": [[9, "factory-for-cached-representations"]], "Formal sums": [[10, "formal-sums"]], "Pure python code for abstract base class for objects with generators": [[11, "pure-python-code-for-abstract-base-class-for-objects-with-generators"]], "Global options": [[12, "global-options"]], "Construction of options classes": [[12, "construction-of-options-classes"]], "Accessing and setting option values": [[12, "accessing-and-setting-option-values"]], "Setter functions": [[12, "setter-functions"]], "Documentation for options": [[12, "documentation-for-options"]], "Dispatchers": [[12, "dispatchers"]], "Doc testing": [[12, "doc-testing"]], "Pickling": [[12, "pickling"]], "Indexed Generators": [[13, "indexed-generators"]], "Elements, Array and Lists With Clone Protocol": [[14, "elements-array-and-lists-with-clone-protocol"]], "Elements, Array and Lists With Clone Protocol, demonstration classes": [[15, "elements-array-and-lists-with-clone-protocol-demonstration-classes"]], "Performance Test for Clone Protocol": [[16, "performance-test-for-clone-protocol"]], "Cython Functions for Timing Clone Protocol": [[17, "cython-functions-for-timing-clone-protocol"]], "Mutability Cython Implementation": [[18, "mutability-cython-implementation"]], "Precision management for non-exact objects": [[19, "precision-management-for-non-exact-objects"]], "Base class for parent objects": [[20, "base-class-for-parent-objects"]], "Base class for old-style parent objects with a base ring": [[21, "base-class-for-old-style-parent-objects-with-a-base-ring"]], "Base class for old-style parent objects with generators": [[22, "base-class-for-old-style-parent-objects-with-generators"]], "Base class for old-style parent objects": [[23, "base-class-for-old-style-parent-objects"]], "Global proof preferences": [[24, "global-proof-preferences"]], "Cython-like rich comparisons in Python": [[25, "cython-like-rich-comparisons-in-python"]], "Abstract base class for Sage objects": [[26, "abstract-base-class-for-sage-objects"]], "Finite Homogeneous Sequences": [[27, "finite-homogeneous-sequences"]], "Set factories": [[28, "set-factories"]], "An example of set factory": [[29, "an-example-of-set-factory"]], "Test of the factory module": [[30, "test-of-the-factory-module"]], "Unique Representation": [[31, "unique-representation"]], "What is a cached representation?": [[31, "what-is-a-cached-representation"]], "Implementing a cached representation": [[31, "implementing-a-cached-representation"]], "Using CachedRepresentation": [[31, "using-cachedrepresentation"]], "Normalising the arguments": [[31, "normalising-the-arguments"]], "Using UniqueFactory": [[31, "using-uniquefactory"]], "Comparing the two ways of implementing a cached representation": [[31, "comparing-the-two-ways-of-implementing-a-cached-representation"]], "Simplicity and transparency": [[31, "simplicity-and-transparency"]], "Class inheritance": [[31, "class-inheritance"]], "Python versus extension classes": [[31, "python-versus-extension-classes"]], "What is a unique representation?": [[31, "what-is-a-unique-representation"]]}, "indexentries": {"module": [[1, "module-sage.misc.proof"], [2, "module-sage.structure.category_object"], [3, "module-sage.structure.debug_options"], [4, "module-sage.structure.dynamic_class"], [5, "module-sage.structure.element"], [6, "module-sage.structure.element_wrapper"], [7, "module-sage.structure.factorization"], [8, "module-sage.structure.factorization_integer"], [9, "module-sage.structure.factory"], [10, "module-sage.structure.formal_sum"], [11, "module-sage.structure.gens_py"], [12, "module-sage.structure.global_options"], [13, "module-sage.structure.indexed_generators"], [14, "module-sage.structure.list_clone"], [15, "module-sage.structure.list_clone_demo"], [16, "module-sage.structure.list_clone_timings"], [17, "module-sage.structure.list_clone_timings_cy"], [18, "module-sage.structure.mutability"], [19, "module-sage.structure.nonexact"], [20, "module-sage.structure.parent"], [21, "module-sage.structure.parent_base"], [22, "module-sage.structure.parent_gens"], [23, "module-sage.structure.parent_old"], [24, "module-sage.structure.proof.proof"], [25, "module-sage.structure.richcmp"], [26, "module-sage.structure.sage_object"], [27, "module-sage.structure.sequence"], [28, "module-sage.structure.set_factories"], [29, "module-sage.structure.set_factories_example"], [30, "module-sage.structure.test_factory"], [31, "module-sage.structure.unique_representation"]], "sage.misc.proof": [[1, "module-sage.misc.proof"]], "categoryobject (class in sage.structure.category_object)": [[2, "sage.structure.category_object.CategoryObject"]], "hom() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.Hom"]], "base() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.base"]], "base_ring() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.base_ring"]], "categories() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.categories"]], "category() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.category"]], "certify_names() (in module sage.structure.category_object)": [[2, "sage.structure.category_object.certify_names"]], "check_default_category() (in module sage.structure.category_object)": [[2, "sage.structure.category_object.check_default_category"]], "gens_dict() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.gens_dict"]], "gens_dict_recursive() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.gens_dict_recursive"]], "inject_variables() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.inject_variables"]], "latex_name() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.latex_name"]], "latex_variable_names() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.latex_variable_names"]], "normalize_names() (in module sage.structure.category_object)": [[2, "sage.structure.category_object.normalize_names"]], "objgen() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.objgen"]], "objgens() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.objgens"]], "sage.structure.category_object": [[2, "module-sage.structure.category_object"]], "variable_name() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.variable_name"]], "variable_names() (sage.structure.category_object.categoryobject method)": [[2, "sage.structure.category_object.CategoryObject.variable_names"]], "debugoptions_class (class in sage.structure.debug_options)": [[3, "sage.structure.debug_options.DebugOptions_class"]], "refine_category_hash_check (sage.structure.debug_options.debugoptions_class attribute)": [[3, "sage.structure.debug_options.DebugOptions_class.refine_category_hash_check"]], "sage.structure.debug_options": [[3, "module-sage.structure.debug_options"]], "unique_parent_warnings (sage.structure.debug_options.debugoptions_class attribute)": [[3, "sage.structure.debug_options.DebugOptions_class.unique_parent_warnings"]], "dynamicclasscallmetaclass (class in sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.DynamicClasscallMetaclass"]], "dynamicinheritcomparisonclasscallmetaclass (class in sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.DynamicInheritComparisonClasscallMetaclass"]], "dynamicinheritcomparisonmetaclass (class in sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.DynamicInheritComparisonMetaclass"]], "dynamicmetaclass (class in sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.DynamicMetaclass"]], "m (in module sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.M"]], "testclass (class in sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.TestClass"]], "bla() (sage.structure.dynamic_class.testclass method)": [[4, "sage.structure.dynamic_class.TestClass.bla"]], "dynamic_class() (in module sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.dynamic_class"]], "dynamic_class_internal() (in module sage.structure.dynamic_class)": [[4, "sage.structure.dynamic_class.dynamic_class_internal"]], "sage.structure.dynamic_class": [[4, "module-sage.structure.dynamic_class"]], "additivegroupelement (class in sage.structure.element)": [[5, "sage.structure.element.AdditiveGroupElement"]], "algebraelement (class in sage.structure.element)": [[5, "sage.structure.element.AlgebraElement"]], "commutativealgebraelement (class in sage.structure.element)": [[5, "sage.structure.element.CommutativeAlgebraElement"]], "commutativeringelement (class in sage.structure.element)": [[5, "sage.structure.element.CommutativeRingElement"]], "dedekinddomainelement (class in sage.structure.element)": [[5, "sage.structure.element.DedekindDomainElement"]], "element (class in sage.structure.element)": [[5, "sage.structure.element.Element"]], "elementwithcachedmethod (class in sage.structure.element)": [[5, "sage.structure.element.ElementWithCachedMethod"]], "euclideandomainelement (class in sage.structure.element)": [[5, "sage.structure.element.EuclideanDomainElement"]], "expression (class in sage.structure.element)": [[5, "sage.structure.element.Expression"]], "fieldelement (class in sage.structure.element)": [[5, "sage.structure.element.FieldElement"]], "infinityelement (class in sage.structure.element)": [[5, "sage.structure.element.InfinityElement"]], "integraldomainelement (class in sage.structure.element)": [[5, "sage.structure.element.IntegralDomainElement"]], "matrix (class in sage.structure.element)": [[5, "sage.structure.element.Matrix"]], "moduleelement (class in sage.structure.element)": [[5, "sage.structure.element.ModuleElement"]], "moduleelementwithmutability (class in sage.structure.element)": [[5, "sage.structure.element.ModuleElementWithMutability"]], "monoidelement (class in sage.structure.element)": [[5, "sage.structure.element.MonoidElement"]], "multiplicativegroupelement (class in sage.structure.element)": [[5, "sage.structure.element.MultiplicativeGroupElement"]], "principalidealdomainelement (class in sage.structure.element)": [[5, "sage.structure.element.PrincipalIdealDomainElement"]], "ringelement (class in sage.structure.element)": [[5, "sage.structure.element.RingElement"]], "vector (class in sage.structure.element)": [[5, "sage.structure.element.Vector"]], "__add__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__add__"]], "__floordiv__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__floordiv__"]], "__mod__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__mod__"]], "__mul__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__mul__"]], "__neg__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__neg__"]], "__sub__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__sub__"]], "__truediv__() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.__truediv__"]], "_richcmp_() (sage.structure.element.element method)": [[5, "sage.structure.element.Element._richcmp_"]], "abs() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.abs"]], "additive_order() (sage.structure.element.moduleelement method)": [[5, "sage.structure.element.ModuleElement.additive_order"]], "additive_order() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.additive_order"]], "base_extend() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.base_extend"]], "base_ring() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.base_ring"]], "bin_op() (in module sage.structure.element)": [[5, "sage.structure.element.bin_op"]], "canonical_coercion() (in module sage.structure.element)": [[5, "sage.structure.element.canonical_coercion"]], "category() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.category"]], "coerce_binop() (in module sage.structure.element)": [[5, "sage.structure.element.coerce_binop"]], "coercion_traceback() (in module sage.structure.element)": [[5, "sage.structure.element.coercion_traceback"]], "degree() (sage.structure.element.euclideandomainelement method)": [[5, "sage.structure.element.EuclideanDomainElement.degree"]], "divides() (sage.structure.element.commutativeringelement method)": [[5, "sage.structure.element.CommutativeRingElement.divides"]], "divides() (sage.structure.element.fieldelement method)": [[5, "sage.structure.element.FieldElement.divides"]], "gcd() (sage.structure.element.principalidealdomainelement method)": [[5, "sage.structure.element.PrincipalIdealDomainElement.gcd"]], "get_coercion_model() (in module sage.structure.element)": [[5, "sage.structure.element.get_coercion_model"]], "have_same_parent() (in module sage.structure.element)": [[5, "sage.structure.element.have_same_parent"]], "inverse_mod() (sage.structure.element.commutativeringelement method)": [[5, "sage.structure.element.CommutativeRingElement.inverse_mod"]], "is_additivegroupelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_AdditiveGroupElement"]], "is_algebraelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_AlgebraElement"]], "is_commutativealgebraelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_CommutativeAlgebraElement"]], "is_commutativeringelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_CommutativeRingElement"]], "is_dedekinddomainelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_DedekindDomainElement"]], "is_element() (in module sage.structure.element)": [[5, "sage.structure.element.is_Element"]], "is_euclideandomainelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_EuclideanDomainElement"]], "is_fieldelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_FieldElement"]], "is_infinityelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_InfinityElement"]], "is_integraldomainelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_IntegralDomainElement"]], "is_matrix() (in module sage.structure.element)": [[5, "sage.structure.element.is_Matrix"]], "is_moduleelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_ModuleElement"]], "is_monoidelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_MonoidElement"]], "is_multiplicativegroupelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_MultiplicativeGroupElement"]], "is_principalidealdomainelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_PrincipalIdealDomainElement"]], "is_ringelement() (in module sage.structure.element)": [[5, "sage.structure.element.is_RingElement"]], "is_vector() (in module sage.structure.element)": [[5, "sage.structure.element.is_Vector"]], "is_immutable() (sage.structure.element.moduleelementwithmutability method)": [[5, "sage.structure.element.ModuleElementWithMutability.is_immutable"]], "is_mutable() (sage.structure.element.moduleelementwithmutability method)": [[5, "sage.structure.element.ModuleElementWithMutability.is_mutable"]], "is_nilpotent() (sage.structure.element.integraldomainelement method)": [[5, "sage.structure.element.IntegralDomainElement.is_nilpotent"]], "is_nilpotent() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.is_nilpotent"]], "is_one() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.is_one"]], "is_prime() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.is_prime"]], "is_square() (sage.structure.element.commutativeringelement method)": [[5, "sage.structure.element.CommutativeRingElement.is_square"]], "is_unit() (sage.structure.element.fieldelement method)": [[5, "sage.structure.element.FieldElement.is_unit"]], "is_zero() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.is_zero"]], "lcm() (sage.structure.element.principalidealdomainelement method)": [[5, "sage.structure.element.PrincipalIdealDomainElement.lcm"]], "leading_coefficient() (sage.structure.element.euclideandomainelement method)": [[5, "sage.structure.element.EuclideanDomainElement.leading_coefficient"]], "make_element() (in module sage.structure.element)": [[5, "sage.structure.element.make_element"]], "mod() (sage.structure.element.commutativeringelement method)": [[5, "sage.structure.element.CommutativeRingElement.mod"]], "multiplicative_order() (sage.structure.element.monoidelement method)": [[5, "sage.structure.element.MonoidElement.multiplicative_order"]], "multiplicative_order() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.multiplicative_order"]], "n() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.n"]], "numerical_approx() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.numerical_approx"]], "order() (sage.structure.element.additivegroupelement method)": [[5, "sage.structure.element.AdditiveGroupElement.order"]], "order() (sage.structure.element.moduleelement method)": [[5, "sage.structure.element.ModuleElement.order"]], "order() (sage.structure.element.monoidelement method)": [[5, "sage.structure.element.MonoidElement.order"]], "order() (sage.structure.element.multiplicativegroupelement method)": [[5, "sage.structure.element.MultiplicativeGroupElement.order"]], "parent() (in module sage.structure.element)": [[5, "sage.structure.element.parent"]], "parent() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.parent"]], "powers() (sage.structure.element.monoidelement method)": [[5, "sage.structure.element.MonoidElement.powers"]], "powers() (sage.structure.element.ringelement method)": [[5, "sage.structure.element.RingElement.powers"]], "quo_rem() (sage.structure.element.euclideandomainelement method)": [[5, "sage.structure.element.EuclideanDomainElement.quo_rem"]], "quo_rem() (sage.structure.element.fieldelement method)": [[5, "sage.structure.element.FieldElement.quo_rem"]], "sage.structure.element": [[5, "module-sage.structure.element"]], "set_immutable() (sage.structure.element.moduleelementwithmutability method)": [[5, "sage.structure.element.ModuleElementWithMutability.set_immutable"]], "sqrt() (sage.structure.element.commutativeringelement method)": [[5, "sage.structure.element.CommutativeRingElement.sqrt"]], "subs() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.subs"]], "substitute() (sage.structure.element.element method)": [[5, "sage.structure.element.Element.substitute"]], "dummyparent (class in sage.structure.element_wrapper)": [[6, "sage.structure.element_wrapper.DummyParent"]], "elementwrapper (class in sage.structure.element_wrapper)": [[6, "sage.structure.element_wrapper.ElementWrapper"]], "elementwrappercheckwrappedclass (class in sage.structure.element_wrapper)": [[6, "sage.structure.element_wrapper.ElementWrapperCheckWrappedClass"]], "elementwrappertester (class in sage.structure.element_wrapper)": [[6, "sage.structure.element_wrapper.ElementWrapperTester"]], "append() (sage.structure.element_wrapper.elementwrappertester method)": [[6, "sage.structure.element_wrapper.ElementWrapperTester.append"]], "sage.structure.element_wrapper": [[6, "module-sage.structure.element_wrapper"]], "value (sage.structure.element_wrapper.elementwrapper attribute)": [[6, "sage.structure.element_wrapper.ElementWrapper.value"]], "wrapped_class (sage.structure.element_wrapper.elementwrappercheckwrappedclass attribute)": [[6, "sage.structure.element_wrapper.ElementWrapperCheckWrappedClass.wrapped_class"]], "factorization (class in sage.structure.factorization)": [[7, "sage.structure.factorization.Factorization"]], "base_change() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.base_change"]], "expand() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.expand"]], "gcd() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.gcd"]], "is_commutative() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.is_commutative"]], "is_integral() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.is_integral"]], "lcm() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.lcm"]], "prod() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.prod"]], "radical() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.radical"]], "radical_value() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.radical_value"]], "sage.structure.factorization": [[7, "module-sage.structure.factorization"]], "simplify() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.simplify"]], "sort() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.sort"]], "subs() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.subs"]], "unit() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.unit"]], "universe() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.universe"]], "value() (sage.structure.factorization.factorization method)": [[7, "sage.structure.factorization.Factorization.value"]], "integerfactorization (class in sage.structure.factorization_integer)": [[8, "sage.structure.factorization_integer.IntegerFactorization"]], "sage.structure.factorization_integer": [[8, "module-sage.structure.factorization_integer"]], "uniquefactory (class in sage.structure.factory)": [[9, "sage.structure.factory.UniqueFactory"]], "create_key() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.create_key"]], "create_key_and_extra_args() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.create_key_and_extra_args"]], "create_object() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.create_object"]], "generic_factory_reduce() (in module sage.structure.factory)": [[9, "sage.structure.factory.generic_factory_reduce"]], "generic_factory_unpickle() (in module sage.structure.factory)": [[9, "sage.structure.factory.generic_factory_unpickle"]], "get_object() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.get_object"]], "get_version() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.get_version"]], "lookup_global() (in module sage.structure.factory)": [[9, "sage.structure.factory.lookup_global"]], "other_keys() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.other_keys"]], "reduce_data() (sage.structure.factory.uniquefactory method)": [[9, "sage.structure.factory.UniqueFactory.reduce_data"]], "register_factory_unpickle() (in module sage.structure.factory)": [[9, "sage.structure.factory.register_factory_unpickle"]], "sage.structure.factory": [[9, "module-sage.structure.factory"]], "element (sage.structure.formal_sum.formalsums attribute)": [[10, "sage.structure.formal_sum.FormalSums.Element"]], "formalsum (class in sage.structure.formal_sum)": [[10, "sage.structure.formal_sum.FormalSum"]], "formalsums (class in sage.structure.formal_sum)": [[10, "sage.structure.formal_sum.FormalSums"]], "base_extend() (sage.structure.formal_sum.formalsums method)": [[10, "sage.structure.formal_sum.FormalSums.base_extend"]], "reduce() (sage.structure.formal_sum.formalsum method)": [[10, "sage.structure.formal_sum.FormalSum.reduce"]], "sage.structure.formal_sum": [[10, "module-sage.structure.formal_sum"]], "abelian_iterator() (in module sage.structure.gens_py)": [[11, "sage.structure.gens_py.abelian_iterator"]], "multiplicative_iterator() (in module sage.structure.gens_py)": [[11, "sage.structure.gens_py.multiplicative_iterator"]], "sage.structure.gens_py": [[11, "module-sage.structure.gens_py"]], "globaloptions (class in sage.structure.global_options)": [[12, "sage.structure.global_options.GlobalOptions"]], "globaloptionsmeta (class in sage.structure.global_options)": [[12, "sage.structure.global_options.GlobalOptionsMeta"]], "globaloptionsmetameta (class in sage.structure.global_options)": [[12, "sage.structure.global_options.GlobalOptionsMetaMeta"]], "option (class in sage.structure.global_options)": [[12, "sage.structure.global_options.Option"]], "sage.structure.global_options": [[12, "module-sage.structure.global_options"]], "indexedgenerators (class in sage.structure.indexed_generators)": [[13, "sage.structure.indexed_generators.IndexedGenerators"]], "indices() (sage.structure.indexed_generators.indexedgenerators method)": [[13, "sage.structure.indexed_generators.IndexedGenerators.indices"]], "parse_indices_names() (in module sage.structure.indexed_generators)": [[13, "sage.structure.indexed_generators.parse_indices_names"]], "prefix() (sage.structure.indexed_generators.indexedgenerators method)": [[13, "sage.structure.indexed_generators.IndexedGenerators.prefix"]], "print_options() (sage.structure.indexed_generators.indexedgenerators method)": [[13, "sage.structure.indexed_generators.IndexedGenerators.print_options"]], "sage.structure.indexed_generators": [[13, "module-sage.structure.indexed_generators"]], "split_index_keywords() (in module sage.structure.indexed_generators)": [[13, "sage.structure.indexed_generators.split_index_keywords"]], "standardize_names_index_set() (in module sage.structure.indexed_generators)": [[13, "sage.structure.indexed_generators.standardize_names_index_set"]], "clonablearray (class in sage.structure.list_clone)": [[14, "sage.structure.list_clone.ClonableArray"]], "clonableelement (class in sage.structure.list_clone)": [[14, "sage.structure.list_clone.ClonableElement"]], "clonableintarray (class in sage.structure.list_clone)": [[14, "sage.structure.list_clone.ClonableIntArray"]], "clonablelist (class in sage.structure.list_clone)": [[14, "sage.structure.list_clone.ClonableList"]], "normalizedclonablelist (class in sage.structure.list_clone)": [[14, "sage.structure.list_clone.NormalizedClonableList"]], "append() (sage.structure.list_clone.clonablelist method)": [[14, "sage.structure.list_clone.ClonableList.append"]], "check() (sage.structure.list_clone.clonablearray method)": [[14, "sage.structure.list_clone.ClonableArray.check"]], "check() (sage.structure.list_clone.clonableintarray method)": [[14, "sage.structure.list_clone.ClonableIntArray.check"]], "clone() (sage.structure.list_clone.clonableelement method)": [[14, "sage.structure.list_clone.ClonableElement.clone"]], "count() (sage.structure.list_clone.clonablearray method)": [[14, "sage.structure.list_clone.ClonableArray.count"]], "extend() (sage.structure.list_clone.clonablelist method)": [[14, "sage.structure.list_clone.ClonableList.extend"]], "index() (sage.structure.list_clone.clonablearray method)": [[14, "sage.structure.list_clone.ClonableArray.index"]], "index() (sage.structure.list_clone.clonableintarray method)": [[14, "sage.structure.list_clone.ClonableIntArray.index"]], "insert() (sage.structure.list_clone.clonablelist method)": [[14, "sage.structure.list_clone.ClonableList.insert"]], "is_immutable() (sage.structure.list_clone.clonableelement method)": [[14, "sage.structure.list_clone.ClonableElement.is_immutable"]], "is_mutable() (sage.structure.list_clone.clonableelement method)": [[14, "sage.structure.list_clone.ClonableElement.is_mutable"]], "list() (sage.structure.list_clone.clonableintarray method)": [[14, "sage.structure.list_clone.ClonableIntArray.list"]], "normalize() (sage.structure.list_clone.normalizedclonablelist method)": [[14, "sage.structure.list_clone.NormalizedClonableList.normalize"]], "pop() (sage.structure.list_clone.clonablelist method)": [[14, "sage.structure.list_clone.ClonableList.pop"]], "remove() (sage.structure.list_clone.clonablelist method)": [[14, "sage.structure.list_clone.ClonableList.remove"]], "sage.structure.list_clone": [[14, "module-sage.structure.list_clone"]], "set_immutable() (sage.structure.list_clone.clonableelement method)": [[14, "sage.structure.list_clone.ClonableElement.set_immutable"]], "element (sage.structure.list_clone_demo.increasingarrays attribute)": [[15, "sage.structure.list_clone_demo.IncreasingArrays.Element"]], "element (sage.structure.list_clone_demo.increasingintarrays attribute)": [[15, "sage.structure.list_clone_demo.IncreasingIntArrays.Element"]], "element (sage.structure.list_clone_demo.increasinglists attribute)": [[15, "sage.structure.list_clone_demo.IncreasingLists.Element"]], "element (sage.structure.list_clone_demo.sortedlists attribute)": [[15, "sage.structure.list_clone_demo.SortedLists.Element"]], "increasingarray (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingArray"]], "increasingarrays (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingArrays"]], "increasingintarray (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingIntArray"]], "increasingintarrays (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingIntArrays"]], "increasinglist (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingList"]], "increasinglists (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.IncreasingLists"]], "sortedlist (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.SortedList"]], "sortedlists (class in sage.structure.list_clone_demo)": [[15, "sage.structure.list_clone_demo.SortedLists"]], "check() (sage.structure.list_clone_demo.increasingarray method)": [[15, "sage.structure.list_clone_demo.IncreasingArray.check"]], "check() (sage.structure.list_clone_demo.increasingintarray method)": [[15, "sage.structure.list_clone_demo.IncreasingIntArray.check"]], "check() (sage.structure.list_clone_demo.increasinglist method)": [[15, "sage.structure.list_clone_demo.IncreasingList.check"]], "check() (sage.structure.list_clone_demo.sortedlist method)": [[15, "sage.structure.list_clone_demo.SortedList.check"]], "normalize() (sage.structure.list_clone_demo.sortedlist method)": [[15, "sage.structure.list_clone_demo.SortedList.normalize"]], "sage.structure.list_clone_demo": [[15, "module-sage.structure.list_clone_demo"]], "increasingarrayspy (class in sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.IncreasingArraysPy"]], "increasingarrayspy.element (class in sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.IncreasingArraysPy.Element"]], "add1_immutable() (in module sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.add1_immutable"]], "add1_internal() (in module sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.add1_internal"]], "add1_mutable() (in module sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.add1_mutable"]], "add1_with() (in module sage.structure.list_clone_timings)": [[16, "sage.structure.list_clone_timings.add1_with"]], "check() (sage.structure.list_clone_timings.increasingarrayspy.element method)": [[16, "sage.structure.list_clone_timings.IncreasingArraysPy.Element.check"]], "sage.structure.list_clone_timings": [[16, "module-sage.structure.list_clone_timings"]], "cy_add1_immutable() (in module sage.structure.list_clone_timings_cy)": [[17, "sage.structure.list_clone_timings_cy.cy_add1_immutable"]], "cy_add1_internal() (in module sage.structure.list_clone_timings_cy)": [[17, "sage.structure.list_clone_timings_cy.cy_add1_internal"]], "cy_add1_mutable() (in module sage.structure.list_clone_timings_cy)": [[17, "sage.structure.list_clone_timings_cy.cy_add1_mutable"]], "cy_add1_with() (in module sage.structure.list_clone_timings_cy)": [[17, "sage.structure.list_clone_timings_cy.cy_add1_with"]], "sage.structure.list_clone_timings_cy": [[17, "module-sage.structure.list_clone_timings_cy"]], "mutability (class in sage.structure.mutability)": [[18, "sage.structure.mutability.Mutability"]], "is_immutable() (sage.structure.mutability.mutability method)": [[18, "sage.structure.mutability.Mutability.is_immutable"]], "is_mutable() (sage.structure.mutability.mutability method)": [[18, "sage.structure.mutability.Mutability.is_mutable"]], "require_immutable() (in module sage.structure.mutability)": [[18, "sage.structure.mutability.require_immutable"]], "require_mutable() (in module sage.structure.mutability)": [[18, "sage.structure.mutability.require_mutable"]], "sage.structure.mutability": [[18, "module-sage.structure.mutability"]], "set_immutable() (sage.structure.mutability.mutability method)": [[18, "sage.structure.mutability.Mutability.set_immutable"]], "nonexact (class in sage.structure.nonexact)": [[19, "sage.structure.nonexact.Nonexact"]], "default_prec() (sage.structure.nonexact.nonexact method)": [[19, "sage.structure.nonexact.Nonexact.default_prec"]], "sage.structure.nonexact": [[19, "module-sage.structure.nonexact"]], "eltpair (class in sage.structure.parent)": [[20, "sage.structure.parent.EltPair"]], "hom() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.Hom"], [20, "sage.structure.parent.Parent.hom"]], "parent (class in sage.structure.parent)": [[20, "sage.structure.parent.Parent"]], "set_generic (class in sage.structure.parent)": [[20, "sage.structure.parent.Set_generic"]], "__call__() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.__call__"]], "__contains__() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.__contains__"]], "__mul__() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.__mul__"]], "_an_element_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._an_element_"]], "_coerce_map_from_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._coerce_map_from_"]], "_convert_map_from_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._convert_map_from_"]], "_get_action_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._get_action_"]], "_init_category_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._init_category_"]], "_is_coercion_cached() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._is_coercion_cached"]], "_is_conversion_cached() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._is_conversion_cached"]], "_populate_coercion_lists_() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._populate_coercion_lists_"]], "_repr_option() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent._repr_option"]], "an_element() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.an_element"]], "category() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.category"]], "coerce() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.coerce"]], "coerce_embedding() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.coerce_embedding"]], "coerce_map_from() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.coerce_map_from"]], "convert_map_from() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.convert_map_from"]], "element_class() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.element_class"]], "get_action() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.get_action"]], "has_coerce_map_from() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.has_coerce_map_from"]], "is_parent() (in module sage.structure.parent)": [[20, "sage.structure.parent.is_Parent"]], "is_exact() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.is_exact"]], "object() (sage.structure.parent.set_generic method)": [[20, "sage.structure.parent.Set_generic.object"]], "register_action() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.register_action"]], "register_coercion() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.register_coercion"]], "register_conversion() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.register_conversion"]], "register_embedding() (sage.structure.parent.parent method)": [[20, "sage.structure.parent.Parent.register_embedding"]], "sage.structure.parent": [[20, "module-sage.structure.parent"]], "short_repr() (sage.structure.parent.eltpair method)": [[20, "sage.structure.parent.EltPair.short_repr"]], "parentwithbase (class in sage.structure.parent_base)": [[21, "sage.structure.parent_base.ParentWithBase"]], "base_extend() (sage.structure.parent_base.parentwithbase method)": [[21, "sage.structure.parent_base.ParentWithBase.base_extend"]], "sage.structure.parent_base": [[21, "module-sage.structure.parent_base"]], "parentwithgens (class in sage.structure.parent_gens)": [[22, "sage.structure.parent_gens.ParentWithGens"]], "gen() (sage.structure.parent_gens.parentwithgens method)": [[22, "sage.structure.parent_gens.ParentWithGens.gen"]], "gens() (sage.structure.parent_gens.parentwithgens method)": [[22, "sage.structure.parent_gens.ParentWithGens.gens"]], "hom() (sage.structure.parent_gens.parentwithgens method)": [[22, "sage.structure.parent_gens.ParentWithGens.hom"]], "localvars (class in sage.structure.parent_gens)": [[22, "sage.structure.parent_gens.localvars"]], "ngens() (sage.structure.parent_gens.parentwithgens method)": [[22, "sage.structure.parent_gens.ParentWithGens.ngens"]], "sage.structure.parent_gens": [[22, "module-sage.structure.parent_gens"]], "parent (class in sage.structure.parent_old)": [[23, "sage.structure.parent_old.Parent"]], "sage.structure.parent_old": [[23, "module-sage.structure.parent_old"]], "withproof (class in sage.structure.proof.proof)": [[24, "sage.structure.proof.proof.WithProof"]], "get_flag() (in module sage.structure.proof.proof)": [[24, "sage.structure.proof.proof.get_flag"]], "sage.structure.proof.proof": [[24, "module-sage.structure.proof.proof"]], "revop() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.revop"]], "rich_to_bool() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.rich_to_bool"]], "rich_to_bool_sgn() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.rich_to_bool_sgn"]], "richcmp() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.richcmp"]], "richcmp_by_eq_and_lt() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.richcmp_by_eq_and_lt"]], "richcmp_item() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.richcmp_item"]], "richcmp_method() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.richcmp_method"]], "richcmp_not_equal() (in module sage.structure.richcmp)": [[25, "sage.structure.richcmp.richcmp_not_equal"]], "sage.structure.richcmp": [[25, "module-sage.structure.richcmp"]], "sageobject (class in sage.structure.sage_object)": [[26, "sage.structure.sage_object.SageObject"]], "_ascii_art_() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject._ascii_art_"]], "_cache_key() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject._cache_key"]], "category() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.category"]], "dump() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.dump"]], "dumps() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.dumps"]], "get_custom_name() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.get_custom_name"]], "parent() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.parent"]], "rename() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.rename"]], "reset_name() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.reset_name"]], "sage.structure.sage_object": [[26, "module-sage.structure.sage_object"]], "save() (sage.structure.sage_object.sageobject method)": [[26, "sage.structure.sage_object.SageObject.save"]], "sequence() (in module sage.structure.sequence)": [[27, "sage.structure.sequence.Sequence"]], "sequence_generic (class in sage.structure.sequence)": [[27, "sage.structure.sequence.Sequence_generic"]], "append() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.append"]], "extend() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.extend"]], "insert() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.insert"]], "is_immutable() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.is_immutable"]], "is_mutable() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.is_mutable"]], "pop() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.pop"]], "remove() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.remove"]], "reverse() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.reverse"]], "sage.structure.sequence": [[27, "module-sage.structure.sequence"]], "seq() (in module sage.structure.sequence)": [[27, "sage.structure.sequence.seq"]], "set_immutable() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.set_immutable"]], "sort() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.sort"]], "universe() (sage.structure.sequence.sequence_generic method)": [[27, "sage.structure.sequence.Sequence_generic.universe"]], "barefunctionpolicy (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.BareFunctionPolicy"]], "facadeparentpolicy (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.FacadeParentPolicy"]], "parentwithsetfactory (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.ParentWithSetFactory"]], "selfparentpolicy (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.SelfParentPolicy"]], "setfactory (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.SetFactory"]], "setfactorypolicy (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.SetFactoryPolicy"]], "topmostparentpolicy (class in sage.structure.set_factories)": [[28, "sage.structure.set_factories.TopMostParentPolicy"]], "add_constraints() (sage.structure.set_factories.setfactory method)": [[28, "sage.structure.set_factories.SetFactory.add_constraints"]], "check_element() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.check_element"]], "constraints() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.constraints"]], "element_constructor_attributes() (sage.structure.set_factories.barefunctionpolicy method)": [[28, "sage.structure.set_factories.BareFunctionPolicy.element_constructor_attributes"]], "element_constructor_attributes() (sage.structure.set_factories.facadeparentpolicy method)": [[28, "sage.structure.set_factories.FacadeParentPolicy.element_constructor_attributes"]], "element_constructor_attributes() (sage.structure.set_factories.selfparentpolicy method)": [[28, "sage.structure.set_factories.SelfParentPolicy.element_constructor_attributes"]], "element_constructor_attributes() (sage.structure.set_factories.setfactorypolicy method)": [[28, "sage.structure.set_factories.SetFactoryPolicy.element_constructor_attributes"]], "element_constructor_attributes() (sage.structure.set_factories.topmostparentpolicy method)": [[28, "sage.structure.set_factories.TopMostParentPolicy.element_constructor_attributes"]], "facade_element_constructor_attributes() (sage.structure.set_factories.setfactorypolicy method)": [[28, "sage.structure.set_factories.SetFactoryPolicy.facade_element_constructor_attributes"]], "facade_policy() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.facade_policy"]], "factory() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.factory"]], "factory() (sage.structure.set_factories.setfactorypolicy method)": [[28, "sage.structure.set_factories.SetFactoryPolicy.factory"]], "policy() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.policy"]], "sage.structure.set_factories": [[28, "module-sage.structure.set_factories"]], "self_element_constructor_attributes() (sage.structure.set_factories.setfactorypolicy method)": [[28, "sage.structure.set_factories.SetFactoryPolicy.self_element_constructor_attributes"]], "subset() (sage.structure.set_factories.parentwithsetfactory method)": [[28, "sage.structure.set_factories.ParentWithSetFactory.subset"]], "allpairs (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.AllPairs"]], "pairsx_ (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.PairsX_"]], "pairs_y (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.Pairs_Y"]], "singletonpair (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.SingletonPair"]], "xypair (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.XYPair"]], "xypairs() (in module sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.XYPairs"]], "xypairsfactory (class in sage.structure.set_factories_example)": [[29, "sage.structure.set_factories_example.XYPairsFactory"]], "add_constraints() (sage.structure.set_factories_example.xypairsfactory method)": [[29, "sage.structure.set_factories_example.XYPairsFactory.add_constraints"]], "an_element() (sage.structure.set_factories_example.pairsx_ method)": [[29, "sage.structure.set_factories_example.PairsX_.an_element"]], "an_element() (sage.structure.set_factories_example.pairs_y method)": [[29, "sage.structure.set_factories_example.Pairs_Y.an_element"]], "check_element() (sage.structure.set_factories_example.allpairs method)": [[29, "sage.structure.set_factories_example.AllPairs.check_element"]], "check_element() (sage.structure.set_factories_example.pairsx_ method)": [[29, "sage.structure.set_factories_example.PairsX_.check_element"]], "check_element() (sage.structure.set_factories_example.pairs_y method)": [[29, "sage.structure.set_factories_example.Pairs_Y.check_element"]], "check_element() (sage.structure.set_factories_example.singletonpair method)": [[29, "sage.structure.set_factories_example.SingletonPair.check_element"]], "pairs_y() (sage.structure.set_factories_example.allpairs method)": [[29, "sage.structure.set_factories_example.AllPairs.pairs_y"]], "sage.structure.set_factories_example": [[29, "module-sage.structure.set_factories_example"]], "single_pair() (sage.structure.set_factories_example.pairs_y method)": [[29, "sage.structure.set_factories_example.Pairs_Y.single_pair"]], "a (class in sage.structure.test_factory)": [[30, "sage.structure.test_factory.A"]], "uniquefactorytester (class in sage.structure.test_factory)": [[30, "sage.structure.test_factory.UniqueFactoryTester"]], "create_key() (sage.structure.test_factory.uniquefactorytester method)": [[30, "sage.structure.test_factory.UniqueFactoryTester.create_key"]], "create_object() (sage.structure.test_factory.uniquefactorytester method)": [[30, "sage.structure.test_factory.UniqueFactoryTester.create_object"]], "sage.structure.test_factory": [[30, "module-sage.structure.test_factory"]], "cachedrepresentation (class in sage.structure.unique_representation)": [[31, "sage.structure.unique_representation.CachedRepresentation"]], "uniquerepresentation (class in sage.structure.unique_representation)": [[31, "sage.structure.unique_representation.UniqueRepresentation"]], "sage.structure.unique_representation": [[31, "module-sage.structure.unique_representation"]], "unreduce() (in module sage.structure.unique_representation)": [[31, "sage.structure.unique_representation.unreduce"]]}})